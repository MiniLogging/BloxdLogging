"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[11],{2493:(J,T,b)=>{b.r(T),b.d(T,{Dispose:()=>P,DumpData:()=>a,DumpDataAsync:()=>A,DumpFramebuffer:()=>F,DumpTools:()=>v});var q=b(2343),t=b(505),j=b(717),B=b(550);let Y,C=null;async function F(J,T,b,q){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",j=arguments.length>5?arguments[5]:void 0,B=arguments.length>6?arguments[6]:void 0;const Y=await b.readPixels(0,0,J,T);a(J,T,new Uint8Array(Y.buffer),q,t,j,!0,void 0,B)}async function A(J,T,b){let q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",t=arguments.length>4?arguments[4]:void 0,j=arguments.length>5&&void 0!==arguments[5]&&arguments[5],B=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Y=arguments.length>7?arguments[7]:void 0;return await new Promise((C=>{a(J,T,b,(J=>C(J)),q,t,j,B,Y)}))}function a(J,T,F,A){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",v=arguments.length>5?arguments[5]:void 0,G=arguments.length>6&&void 0!==arguments[6]&&arguments[6],x=arguments.length>7&&void 0!==arguments[7]&&arguments[7],I=arguments.length>8?arguments[8]:void 0;(async function(){return C||(C=new Promise(((J,T)=>{let t,j=null;const C={Rk:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(b.bind(b,2354)).then((F=>{let{ThinEngine:A}=F;const a=B.e.Instances.length;try{t=new OffscreenCanvas(100,100),j=new A(t,!1,C)}catch(x){var v;a<B.e.Instances.length&&(null===(v=B.e.Instances.pop())||void 0===v||v.dispose()),t=document.createElement("canvas"),j=new A(t,!1,C)}B.e.Instances.pop(),B.e.OnEnginesDisposedObservable.add((J=>{j&&J!==j&&!j.u&&0===B.e.Instances.length&&P()})),j.getCaps().parallelShaderCompile=void 0;const G=new q.d(j);b.e(35).then(b.bind(b,13182)).then((b=>{let{passPixelShader:B}=b;if(!j)return void T("Engine is not defined");const C=new q.e({Li:j,name:B.name,fragmentShader:B.shader,samplerNames:["textureSampler"]});Y={canvas:t,Li:j,renderer:G,wrapper:C},J(Y)}))})).catch(T)}))),await C})().then((b=>{if(b.Li.setSize(J,T,!0),F instanceof Float32Array){const J=new Uint8Array(F.length);let T=F.length;for(;T--;){const b=F[T];J[T]=Math.round(255*(0,j.b)(b))}F=J}const q=b.Li.createRawTexture(F,J,T,5,!1,!G,1);b.renderer.setViewport(),b.renderer.applyEffectWrapper(b.wrapper),b.wrapper.effect._bindTexture("textureSampler",q),b.renderer.draw(),x?t.e.ToBlob(b.canvas,(J=>{const T=new FileReader;T.onload=J=>{const T=J.target.result;A&&A(T)},T.readAsArrayBuffer(J)}),a,I):t.e.EncodeScreenshotCanvasData(b.canvas,A,a,v,I),q.dispose()}))}function P(){var J;Y?(Y.wrapper.dispose(),Y.renderer.dispose(),Y.Li.dispose()):null===(J=C)||void 0===J||J.then((J=>{J.wrapper.dispose(),J.renderer.dispose(),J.Li.dispose()}));C=null,Y=null}const v={DumpData:a,DumpDataAsync:A,DumpFramebuffer:F,Dispose:P};t.e.DumpData=a,t.e.DumpDataAsync=A,t.e.DumpFramebuffer=F}}]);