"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[11],{2547:(U,M,b)=>{b.r(M),b.d(M,{Dispose:()=>Z,DumpData:()=>P,DumpDataAsync:()=>x,DumpFramebuffer:()=>e,DumpTools:()=>C});var a=b(2396),A=b(479),H=b(682),W=b(524);let y,O=null;async function e(U,M,b,a){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",H=arguments.length>5?arguments[5]:void 0,W=arguments.length>6?arguments[6]:void 0;const y=await b.readPixels(0,0,U,M);P(U,M,new Uint8Array(y.buffer),a,A,H,!0,void 0,W)}async function x(U,M,b){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",A=arguments.length>4?arguments[4]:void 0,H=arguments.length>5&&void 0!==arguments[5]&&arguments[5],W=arguments.length>6&&void 0!==arguments[6]&&arguments[6],y=arguments.length>7?arguments[7]:void 0;return await new Promise((O=>{P(U,M,b,(U=>O(U)),a,A,H,W,y)}))}function P(U,M,e,x){let P=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",C=arguments.length>5?arguments[5]:void 0,r=arguments.length>6&&void 0!==arguments[6]&&arguments[6],B=arguments.length>7&&void 0!==arguments[7]&&arguments[7],J=arguments.length>8?arguments[8]:void 0;(async function(){return O||(O=new Promise(((U,M)=>{let A,H=null;const O={$i:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(b.bind(b,2413)).then((e=>{let{ThinEngine:x}=e;const P=W.d.Instances.length;try{A=new OffscreenCanvas(100,100),H=new x(A,!1,O)}catch(B){var C;P<W.d.Instances.length&&(null===(C=W.d.Instances.pop())||void 0===C||C.dispose()),A=document.createElement("canvas"),H=new x(A,!1,O)}W.d.Instances.pop(),W.d.OnEnginesDisposedObservable.add((U=>{H&&U!==H&&!H.u&&0===W.d.Instances.length&&Z()})),H.getCaps().parallelShaderCompile=void 0;const r=new a.e(H);b.e(35).then(b.bind(b,13354)).then((b=>{let{passPixelShader:W}=b;if(!H)return void M("Engine is not defined");const O=new a.f({bk:H,name:W.name,fragmentShader:W.shader,samplerNames:["textureSampler"]});y={canvas:A,bk:H,renderer:r,wrapper:O},U(y)}))})).catch(M)}))),await O})().then((b=>{if(b.bk.setSize(U,M,!0),e instanceof Float32Array){const U=new Uint8Array(e.length);let M=e.length;for(;M--;){const b=e[M];U[M]=Math.round(255*(0,H.b)(b))}e=U}const a=b.bk.createRawTexture(e,U,M,5,!1,!r,1);b.renderer.setViewport(),b.renderer.applyEffectWrapper(b.wrapper),b.wrapper.effect._bindTexture("textureSampler",a),b.renderer.draw(),B?A.d.ToBlob(b.canvas,(U=>{const M=new FileReader;M.onload=U=>{const M=U.target.result;x&&x(M)},M.readAsArrayBuffer(U)}),P,J):A.d.EncodeScreenshotCanvasData(b.canvas,x,P,C,J),a.dispose()}))}function Z(){var U;y?(y.wrapper.dispose(),y.renderer.dispose(),y.bk.dispose()):null===(U=O)||void 0===U||U.then((U=>{U.wrapper.dispose(),U.renderer.dispose(),U.bk.dispose()}));O=null,y=null}const C={DumpData:P,DumpDataAsync:x,DumpFramebuffer:e,Dispose:Z};A.d.DumpData=P,A.d.DumpDataAsync=x,A.d.DumpFramebuffer=e}}]);