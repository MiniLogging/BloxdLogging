"use strict";(self.n52dyox90qa=self.n52dyox90qa||[]).push([[90],{14996:(E,t,z)=>{z.r(t),z.d(t,{FlowGraphDeterminantBlock:()=>H,FlowGraphInvertMatrixBlock:()=>h,FlowGraphMatrixComposeBlock:()=>O,FlowGraphMatrixDecomposeBlock:()=>y,FlowGraphMatrixMultiplicationBlock:()=>d,FlowGraphTransposeBlock:()=>Z});var A=z(13480),X=z(13458),R=z(11812),u=z(11766),p=z(14980),C=z(14970);class Z extends p.c{constructor(E){super((0,X.J)((null===E||void 0===E?void 0:E.matrixType)||"Matrix"),(0,X.J)((null===E||void 0===E?void 0:E.matrixType)||"Matrix"),(E=>E.transpose?E.transpose():R.Matrix.Transpose(E)),"FlowGraphTransposeBlock",E)}}(0,u.f)("FlowGraphTransposeBlock",Z);class H extends p.c{constructor(E){super((0,X.J)((null===E||void 0===E?void 0:E.matrixType)||"Matrix"),X.p,(E=>E.determinant()),"FlowGraphDeterminantBlock",E)}}(0,u.f)("FlowGraphDeterminantBlock",H);class h extends p.c{constructor(E){super((0,X.J)((null===E||void 0===E?void 0:E.matrixType)||"Matrix"),(0,X.J)((null===E||void 0===E?void 0:E.matrixType)||"Matrix"),(E=>E.inverse?E.inverse():R.Matrix.Invert(E)),"FlowGraphInvertMatrixBlock",E)}}(0,u.f)("FlowGraphInvertMatrixBlock",h);class d extends C.b{constructor(E){super((0,X.J)((null===E||void 0===E?void 0:E.matrixType)||"Matrix"),(0,X.J)((null===E||void 0===E?void 0:E.matrixType)||"Matrix"),(0,X.J)((null===E||void 0===E?void 0:E.matrixType)||"Matrix"),((E,t)=>t.multiply(E)),"FlowGraphMatrixMultiplicationBlock",E)}}(0,u.f)("FlowGraphMatrixMultiplicationBlock",d);class y extends A.c{constructor(E){super(E),this.input=this.registerDataInput("input",X.i),this.position=this.registerDataOutput("position",X.x),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",X.q),this.cp=this.registerDataOutput("cp",X.x),this.isValid=this.registerDataOutput("isValid",X.d,!1)}_updateOutputs(E){const t=E._getExecutionVariable(this,"executionId",-1),z=E._getExecutionVariable(this,"cachedPosition",null),A=E._getExecutionVariable(this,"cachedRotation",null),X=E._getExecutionVariable(this,"cachedScaling",null);if(t===E.executionId&&z&&A&&X)this.position.setValue(z,E),this.rotationQuaternion.setValue(A,E),this.cp.setValue(X,E);else{const t=this.input.getValue(E),u=z||new R.Lt,p=A||new R.Quaternion,C=X||new R.Lt,Z=Math.round(1e4*t.m[3])/1e4,H=Math.round(1e4*t.m[7])/1e4,h=Math.round(1e4*t.m[11])/1e4,d=Math.round(1e4*t.m[15])/1e4;if(0!==Z||0!==H||0!==h||1!==d)return this.isValid.setValue(!1,E),this.position.setValue(R.Lt.Zero(),E),this.rotationQuaternion.setValue(R.Quaternion.Identity(),E),void this.cp.setValue(R.Lt.One(),E);const y=t.decompose(C,p,u);this.isValid.setValue(y,E),this.position.setValue(u,E),this.rotationQuaternion.setValue(p,E),this.cp.setValue(C,E),E._setExecutionVariable(this,"cachedPosition",u),E._setExecutionVariable(this,"cachedRotation",p),E._setExecutionVariable(this,"cachedScaling",C),E._setExecutionVariable(this,"executionId",E.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,u.f)("FlowGraphMatrixDecompose",y);class O extends A.c{constructor(E){super(E),this.position=this.registerDataInput("position",X.x),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",X.q),this.cp=this.registerDataInput("cp",X.x),this.value=this.registerDataOutput("value",X.i)}_updateOutputs(E){const t=E._getExecutionVariable(this,"executionId",-1),z=E._getExecutionVariable(this,"cachedMatrix",null);if(t===E.executionId&&z)this.value.setValue(z,E);else{const t=R.Matrix.Compose(this.cp.getValue(E),this.rotationQuaternion.getValue(E),this.position.getValue(E));this.value.setValue(t,E),E._setExecutionVariable(this,"cachedMatrix",t),E._setExecutionVariable(this,"executionId",E.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,u.f)("FlowGraphMatrixCompose",O)},14970:(E,t,z)=>{z.d(t,{b:()=>X});var A=z(14978);class X extends A.b{constructor(E,t,z,A,X,R){super(z,R),this._operation=A,this._className=X,this.a=this.registerDataInput("a",E),this.b=this.registerDataInput("b",t)}_doOperation(E){const t=this.a.getValue(E),z=this.b.getValue(E);return this._operation(t,z)}getClassName(){return this._className}}},14978:(E,t,z)=>{z.d(t,{b:()=>p});var A=z(13480),X=z(13458);const R="cachedOperationValue",u="cachedExecutionId";class p extends A.c{constructor(E,t){super(t),this.value=this.registerDataOutput("value",E),this.isValid=this.registerDataOutput("isValid",X.d)}_updateOutputs(E){const t=E._getExecutionVariable(this,u,-1),z=E._getExecutionVariable(this,R,null);if(void 0!==z&&null!==z&&t===E.executionId)this.isValid.setValue(!0,E),this.value.setValue(z,E);else try{const t=this._doOperation(E);if(void 0===t||null===t)return void this.isValid.setValue(!1,E);E._setExecutionVariable(this,R,t),E._setExecutionVariable(this,u,E.executionId),this.value.setValue(t,E),this.isValid.setValue(!0,E)}catch(A){this.isValid.setValue(!1,E)}}}},14980:(E,t,z)=>{z.d(t,{c:()=>X});var A=z(14978);class X extends A.b{constructor(E,t,z,A,X){super(t,X),this._operation=z,this._className=A,this.a=this.registerDataInput("a",E)}_doOperation(E){return this._operation(this.a.getValue(E))}getClassName(){return this._className}}}}]);