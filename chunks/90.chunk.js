"use strict";(self.k9ivgwsw3f=self.k9ivgwsw3f||[]).push([[90],{16126:(Y,b,C)=>{C.r(b),C.d(b,{FlowGraphDeterminantBlock:()=>O,FlowGraphInvertMatrixBlock:()=>F,FlowGraphMatrixComposeBlock:()=>n,FlowGraphMatrixDecomposeBlock:()=>S,FlowGraphMatrixMultiplicationBlock:()=>y,FlowGraphTransposeBlock:()=>r});var R=C(14437),q=C(14424),A=C(12831),E=C(12790),B=C(16116),g=C(16103);class r extends B.e{constructor(Y){super((0,q.J)((null===Y||void 0===Y?void 0:Y.matrixType)||"Matrix"),(0,q.J)((null===Y||void 0===Y?void 0:Y.matrixType)||"Matrix"),(Y=>Y.transpose?Y.transpose():A.Matrix.Transpose(Y)),"FlowGraphTransposeBlock",Y)}}(0,E.g)("FlowGraphTransposeBlock",r);class O extends B.e{constructor(Y){super((0,q.J)((null===Y||void 0===Y?void 0:Y.matrixType)||"Matrix"),q.q,(Y=>Y.determinant()),"FlowGraphDeterminantBlock",Y)}}(0,E.g)("FlowGraphDeterminantBlock",O);class F extends B.e{constructor(Y){super((0,q.J)((null===Y||void 0===Y?void 0:Y.matrixType)||"Matrix"),(0,q.J)((null===Y||void 0===Y?void 0:Y.matrixType)||"Matrix"),(Y=>Y.inverse?Y.inverse():A.Matrix.Invert(Y)),"FlowGraphInvertMatrixBlock",Y)}}(0,E.g)("FlowGraphInvertMatrixBlock",F);class y extends g.e{constructor(Y){super((0,q.J)((null===Y||void 0===Y?void 0:Y.matrixType)||"Matrix"),(0,q.J)((null===Y||void 0===Y?void 0:Y.matrixType)||"Matrix"),(0,q.J)((null===Y||void 0===Y?void 0:Y.matrixType)||"Matrix"),((Y,b)=>b.multiply(Y)),"FlowGraphMatrixMultiplicationBlock",Y)}}(0,E.g)("FlowGraphMatrixMultiplicationBlock",y);class S extends R.e{constructor(Y){super(Y),this.input=this.registerDataInput("input",q.j),this.position=this.registerDataOutput("position",q.A),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",q.t),this.ob=this.registerDataOutput("ob",q.A),this.isValid=this.registerDataOutput("isValid",q.f,!1)}_updateOutputs(Y){const b=Y._getExecutionVariable(this,"executionId",-1),C=Y._getExecutionVariable(this,"cachedPosition",null),R=Y._getExecutionVariable(this,"cachedRotation",null),q=Y._getExecutionVariable(this,"cachedScaling",null);if(b===Y.executionId&&C&&R&&q)this.position.setValue(C,Y),this.rotationQuaternion.setValue(R,Y),this.ob.setValue(q,Y);else{const b=this.input.getValue(Y),E=C||new A.AC,B=R||new A.Quaternion,g=q||new A.AC,r=Math.round(1e4*b.m[3])/1e4,O=Math.round(1e4*b.m[7])/1e4,F=Math.round(1e4*b.m[11])/1e4,y=Math.round(1e4*b.m[15])/1e4;if(0!==r||0!==O||0!==F||1!==y)return this.isValid.setValue(!1,Y),this.position.setValue(A.AC.Zero(),Y),this.rotationQuaternion.setValue(A.Quaternion.Identity(),Y),void this.ob.setValue(A.AC.One(),Y);const S=b.decompose(g,B,E);this.isValid.setValue(S,Y),this.position.setValue(E,Y),this.rotationQuaternion.setValue(B,Y),this.ob.setValue(g,Y),Y._setExecutionVariable(this,"cachedPosition",E),Y._setExecutionVariable(this,"cachedRotation",B),Y._setExecutionVariable(this,"cachedScaling",g),Y._setExecutionVariable(this,"executionId",Y.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,E.g)("FlowGraphMatrixDecompose",S);class n extends R.e{constructor(Y){super(Y),this.position=this.registerDataInput("position",q.A),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",q.t),this.ob=this.registerDataInput("ob",q.A),this.value=this.registerDataOutput("value",q.j)}_updateOutputs(Y){const b=Y._getExecutionVariable(this,"executionId",-1),C=Y._getExecutionVariable(this,"cachedMatrix",null);if(b===Y.executionId&&C)this.value.setValue(C,Y);else{const b=A.Matrix.Compose(this.ob.getValue(Y),this.rotationQuaternion.getValue(Y),this.position.getValue(Y));this.value.setValue(b,Y),Y._setExecutionVariable(this,"cachedMatrix",b),Y._setExecutionVariable(this,"executionId",Y.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,E.g)("FlowGraphMatrixCompose",n)},16103:(Y,b,C)=>{C.d(b,{e:()=>q});var R=C(16111);class q extends R.d{constructor(Y,b,C,R,q,A){super(C,A),this._operation=R,this._className=q,this.a=this.registerDataInput("a",Y),this.b=this.registerDataInput("b",b)}_doOperation(Y){const b=this.a.getValue(Y),C=this.b.getValue(Y);return this._operation(b,C)}getClassName(){return this._className}}},16111:(Y,b,C)=>{C.d(b,{d:()=>B});var R=C(14437),q=C(14424);const A="cachedOperationValue",E="cachedExecutionId";class B extends R.e{constructor(Y,b){super(b),this.value=this.registerDataOutput("value",Y),this.isValid=this.registerDataOutput("isValid",q.f)}_updateOutputs(Y){const b=Y._getExecutionVariable(this,E,-1),C=Y._getExecutionVariable(this,A,null);if(void 0!==C&&null!==C&&b===Y.executionId)this.isValid.setValue(!0,Y),this.value.setValue(C,Y);else try{const b=this._doOperation(Y);if(void 0===b||null===b)return void this.isValid.setValue(!1,Y);Y._setExecutionVariable(this,A,b),Y._setExecutionVariable(this,E,Y.executionId),this.value.setValue(b,Y),this.isValid.setValue(!0,Y)}catch(R){this.isValid.setValue(!1,Y)}}}},16116:(Y,b,C)=>{C.d(b,{e:()=>q});var R=C(16111);class q extends R.d{constructor(Y,b,C,R,q){super(b,q),this._operation=C,this._className=R,this.a=this.registerDataInput("a",Y)}_doOperation(Y){return this._operation(this.a.getValue(Y))}getClassName(){return this._className}}}}]);