"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[90],{14431:(P,f,Y)=>{Y.r(f),Y.d(f,{FlowGraphDeterminantBlock:()=>R,FlowGraphInvertMatrixBlock:()=>y,FlowGraphMatrixComposeBlock:()=>u,FlowGraphMatrixDecomposeBlock:()=>i,FlowGraphMatrixMultiplicationBlock:()=>r,FlowGraphTransposeBlock:()=>d});var C=Y(12947),q=Y(12917),m=Y(11179),L=Y(11134),o=Y(14414),w=Y(14408);class d extends o.d{constructor(P){super((0,q.D)((null===P||void 0===P?void 0:P.matrixType)||"Matrix"),(0,q.D)((null===P||void 0===P?void 0:P.matrixType)||"Matrix"),(P=>P.transpose?P.transpose():m.Matrix.Transpose(P)),"FlowGraphTransposeBlock",P)}}(0,L.d)("FlowGraphTransposeBlock",d);class R extends o.d{constructor(P){super((0,q.D)((null===P||void 0===P?void 0:P.matrixType)||"Matrix"),q.o,(P=>P.determinant()),"FlowGraphDeterminantBlock",P)}}(0,L.d)("FlowGraphDeterminantBlock",R);class y extends o.d{constructor(P){super((0,q.D)((null===P||void 0===P?void 0:P.matrixType)||"Matrix"),(0,q.D)((null===P||void 0===P?void 0:P.matrixType)||"Matrix"),(P=>P.inverse?P.inverse():m.Matrix.Invert(P)),"FlowGraphInvertMatrixBlock",P)}}(0,L.d)("FlowGraphInvertMatrixBlock",y);class r extends w.b{constructor(P){super((0,q.D)((null===P||void 0===P?void 0:P.matrixType)||"Matrix"),(0,q.D)((null===P||void 0===P?void 0:P.matrixType)||"Matrix"),(0,q.D)((null===P||void 0===P?void 0:P.matrixType)||"Matrix"),((P,f)=>f.multiply(P)),"FlowGraphMatrixMultiplicationBlock",P)}}(0,L.d)("FlowGraphMatrixMultiplicationBlock",r);class i extends C.b{constructor(P){super(P),this.input=this.registerDataInput("input",q.h),this.position=this.registerDataOutput("position",q.v),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",q.q),this.Ro=this.registerDataOutput("Ro",q.v),this.isValid=this.registerDataOutput("isValid",q.e,!1)}_updateOutputs(P){const f=P._getExecutionVariable(this,"executionId",-1),Y=P._getExecutionVariable(this,"cachedPosition",null),C=P._getExecutionVariable(this,"cachedRotation",null),q=P._getExecutionVariable(this,"cachedScaling",null);if(f===P.executionId&&Y&&C&&q)this.position.setValue(Y,P),this.rotationQuaternion.setValue(C,P),this.Ro.setValue(q,P);else{const f=this.input.getValue(P),L=Y||new m.Of,o=C||new m.Quaternion,w=q||new m.Of,d=Math.round(1e4*f.m[3])/1e4,R=Math.round(1e4*f.m[7])/1e4,y=Math.round(1e4*f.m[11])/1e4,r=Math.round(1e4*f.m[15])/1e4;if(0!==d||0!==R||0!==y||1!==r)return this.isValid.setValue(!1,P),this.position.setValue(m.Of.Zero(),P),this.rotationQuaternion.setValue(m.Quaternion.Identity(),P),void this.Ro.setValue(m.Of.One(),P);const i=f.decompose(w,o,L);this.isValid.setValue(i,P),this.position.setValue(L,P),this.rotationQuaternion.setValue(o,P),this.Ro.setValue(w,P),P._setExecutionVariable(this,"cachedPosition",L),P._setExecutionVariable(this,"cachedRotation",o),P._setExecutionVariable(this,"cachedScaling",w),P._setExecutionVariable(this,"executionId",P.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,L.d)("FlowGraphMatrixDecompose",i);class u extends C.b{constructor(P){super(P),this.position=this.registerDataInput("position",q.v),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",q.q),this.Ro=this.registerDataInput("Ro",q.v),this.value=this.registerDataOutput("value",q.h)}_updateOutputs(P){const f=P._getExecutionVariable(this,"executionId",-1),Y=P._getExecutionVariable(this,"cachedMatrix",null);if(f===P.executionId&&Y)this.value.setValue(Y,P);else{const f=m.Matrix.Compose(this.Ro.getValue(P),this.rotationQuaternion.getValue(P),this.position.getValue(P));this.value.setValue(f,P),P._setExecutionVariable(this,"cachedMatrix",f),P._setExecutionVariable(this,"executionId",P.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,L.d)("FlowGraphMatrixCompose",u)},14408:(P,f,Y)=>{Y.d(f,{b:()=>q});var C=Y(14410);class q extends C.c{constructor(P,f,Y,C,q,m){super(Y,m),this._operation=C,this._className=q,this.a=this.registerDataInput("a",P),this.b=this.registerDataInput("b",f)}_doOperation(P){const f=this.a.getValue(P),Y=this.b.getValue(P);return this._operation(f,Y)}getClassName(){return this._className}}},14410:(P,f,Y)=>{Y.d(f,{c:()=>o});var C=Y(12947),q=Y(12917);const m="cachedOperationValue",L="cachedExecutionId";class o extends C.b{constructor(P,f){super(f),this.value=this.registerDataOutput("value",P),this.isValid=this.registerDataOutput("isValid",q.e)}_updateOutputs(P){const f=P._getExecutionVariable(this,L,-1),Y=P._getExecutionVariable(this,m,null);if(void 0!==Y&&null!==Y&&f===P.executionId)this.isValid.setValue(!0,P),this.value.setValue(Y,P);else try{const f=this._doOperation(P);if(void 0===f||null===f)return void this.isValid.setValue(!1,P);P._setExecutionVariable(this,m,f),P._setExecutionVariable(this,L,P.executionId),this.value.setValue(f,P),this.isValid.setValue(!0,P)}catch(C){this.isValid.setValue(!1,P)}}}},14414:(P,f,Y)=>{Y.d(f,{d:()=>q});var C=Y(14410);class q extends C.c{constructor(P,f,Y,C,q){super(f,q),this._operation=Y,this._className=C,this.a=this.registerDataInput("a",P)}_doOperation(P){return this._operation(this.a.getValue(P))}getClassName(){return this._className}}}}]);