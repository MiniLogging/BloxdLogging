"use strict";(self.lfntwv94xlc=self.lfntwv94xlc||[]).push([[90],{14642:(m,S,h)=>{h.r(S),h.d(S,{FlowGraphDeterminantBlock:()=>V,FlowGraphInvertMatrixBlock:()=>I,FlowGraphMatrixComposeBlock:()=>B,FlowGraphMatrixDecomposeBlock:()=>C,FlowGraphMatrixMultiplicationBlock:()=>Z,FlowGraphTransposeBlock:()=>Y});var l=h(13074),M=h(13060),O=h(11347),u=h(11293),b=h(14629),q=h(14618);class Y extends b.b{constructor(m){super((0,M.J)((null===m||void 0===m?void 0:m.matrixType)||"Matrix"),(0,M.J)((null===m||void 0===m?void 0:m.matrixType)||"Matrix"),(m=>m.transpose?m.transpose():O.Matrix.Transpose(m)),"FlowGraphTransposeBlock",m)}}(0,u.e)("FlowGraphTransposeBlock",Y);class V extends b.b{constructor(m){super((0,M.J)((null===m||void 0===m?void 0:m.matrixType)||"Matrix"),M.p,(m=>m.determinant()),"FlowGraphDeterminantBlock",m)}}(0,u.e)("FlowGraphDeterminantBlock",V);class I extends b.b{constructor(m){super((0,M.J)((null===m||void 0===m?void 0:m.matrixType)||"Matrix"),(0,M.J)((null===m||void 0===m?void 0:m.matrixType)||"Matrix"),(m=>m.inverse?m.inverse():O.Matrix.Invert(m)),"FlowGraphInvertMatrixBlock",m)}}(0,u.e)("FlowGraphInvertMatrixBlock",I);class Z extends q.c{constructor(m){super((0,M.J)((null===m||void 0===m?void 0:m.matrixType)||"Matrix"),(0,M.J)((null===m||void 0===m?void 0:m.matrixType)||"Matrix"),(0,M.J)((null===m||void 0===m?void 0:m.matrixType)||"Matrix"),((m,S)=>S.multiply(m)),"FlowGraphMatrixMultiplicationBlock",m)}}(0,u.e)("FlowGraphMatrixMultiplicationBlock",Z);class C extends l.d{constructor(m){super(m),this.input=this.registerDataInput("input",M.j),this.position=this.registerDataOutput("position",M.y),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",M.t),this.Ib=this.registerDataOutput("Ib",M.y),this.isValid=this.registerDataOutput("isValid",M.e,!1)}_updateOutputs(m){const S=m._getExecutionVariable(this,"executionId",-1),h=m._getExecutionVariable(this,"cachedPosition",null),l=m._getExecutionVariable(this,"cachedRotation",null),M=m._getExecutionVariable(this,"cachedScaling",null);if(S===m.executionId&&h&&l&&M)this.position.setValue(h,m),this.rotationQuaternion.setValue(l,m),this.Ib.setValue(M,m);else{const S=this.input.getValue(m),u=h||new O.nS,b=l||new O.Quaternion,q=M||new O.nS,Y=Math.round(1e4*S.m[3])/1e4,V=Math.round(1e4*S.m[7])/1e4,I=Math.round(1e4*S.m[11])/1e4,Z=Math.round(1e4*S.m[15])/1e4;if(0!==Y||0!==V||0!==I||1!==Z)return this.isValid.setValue(!1,m),this.position.setValue(O.nS.Zero(),m),this.rotationQuaternion.setValue(O.Quaternion.Identity(),m),void this.Ib.setValue(O.nS.One(),m);const C=S.decompose(q,b,u);this.isValid.setValue(C,m),this.position.setValue(u,m),this.rotationQuaternion.setValue(b,m),this.Ib.setValue(q,m),m._setExecutionVariable(this,"cachedPosition",u),m._setExecutionVariable(this,"cachedRotation",b),m._setExecutionVariable(this,"cachedScaling",q),m._setExecutionVariable(this,"executionId",m.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,u.e)("FlowGraphMatrixDecompose",C);class B extends l.d{constructor(m){super(m),this.position=this.registerDataInput("position",M.y),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",M.t),this.Ib=this.registerDataInput("Ib",M.y),this.value=this.registerDataOutput("value",M.j)}_updateOutputs(m){const S=m._getExecutionVariable(this,"executionId",-1),h=m._getExecutionVariable(this,"cachedMatrix",null);if(S===m.executionId&&h)this.value.setValue(h,m);else{const S=O.Matrix.Compose(this.Ib.getValue(m),this.rotationQuaternion.getValue(m),this.position.getValue(m));this.value.setValue(S,m),m._setExecutionVariable(this,"cachedMatrix",S),m._setExecutionVariable(this,"executionId",m.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,u.e)("FlowGraphMatrixCompose",B)},14618:(m,S,h)=>{h.d(S,{c:()=>M});var l=h(14620);class M extends l.d{constructor(m,S,h,l,M,O){super(h,O),this._operation=l,this._className=M,this.a=this.registerDataInput("a",m),this.b=this.registerDataInput("b",S)}_doOperation(m){const S=this.a.getValue(m),h=this.b.getValue(m);return this._operation(S,h)}getClassName(){return this._className}}},14620:(m,S,h)=>{h.d(S,{d:()=>b});var l=h(13074),M=h(13060);const O="cachedOperationValue",u="cachedExecutionId";class b extends l.d{constructor(m,S){super(S),this.value=this.registerDataOutput("value",m),this.isValid=this.registerDataOutput("isValid",M.e)}_updateOutputs(m){const S=m._getExecutionVariable(this,u,-1),h=m._getExecutionVariable(this,O,null);if(void 0!==h&&null!==h&&S===m.executionId)this.isValid.setValue(!0,m),this.value.setValue(h,m);else try{const S=this._doOperation(m);if(void 0===S||null===S)return void this.isValid.setValue(!1,m);m._setExecutionVariable(this,O,S),m._setExecutionVariable(this,u,m.executionId),this.value.setValue(S,m),this.isValid.setValue(!0,m)}catch(l){this.isValid.setValue(!1,m)}}}},14629:(m,S,h)=>{h.d(S,{b:()=>M});var l=h(14620);class M extends l.d{constructor(m,S,h,l,M){super(S,M),this._operation=h,this._className=l,this.a=this.registerDataInput("a",m)}_doOperation(m){return this._operation(this.a.getValue(m))}getClassName(){return this._className}}}}]);