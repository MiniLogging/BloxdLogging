"use strict";(self.a14qw1h7fq=self.a14qw1h7fq||[]).push([[90],{14405:(R,J,B)=>{B.r(J),B.d(J,{FlowGraphDeterminantBlock:()=>D,FlowGraphInvertMatrixBlock:()=>l,FlowGraphMatrixComposeBlock:()=>n,FlowGraphMatrixDecomposeBlock:()=>O,FlowGraphMatrixMultiplicationBlock:()=>E,FlowGraphTransposeBlock:()=>e});var Q=B(12922),h=B(12894),y=B(11186),N=B(11142),r=B(14394),q=B(14384);class e extends r.d{constructor(R){super((0,h.O)((null===R||void 0===R?void 0:R.matrixType)||"Matrix"),(0,h.O)((null===R||void 0===R?void 0:R.matrixType)||"Matrix"),(R=>R.transpose?R.transpose():y.Matrix.Transpose(R)),"FlowGraphTransposeBlock",R)}}(0,N.h)("FlowGraphTransposeBlock",e);class D extends r.d{constructor(R){super((0,h.O)((null===R||void 0===R?void 0:R.matrixType)||"Matrix"),h.t,(R=>R.determinant()),"FlowGraphDeterminantBlock",R)}}(0,N.h)("FlowGraphDeterminantBlock",D);class l extends r.d{constructor(R){super((0,h.O)((null===R||void 0===R?void 0:R.matrixType)||"Matrix"),(0,h.O)((null===R||void 0===R?void 0:R.matrixType)||"Matrix"),(R=>R.inverse?R.inverse():y.Matrix.Invert(R)),"FlowGraphInvertMatrixBlock",R)}}(0,N.h)("FlowGraphInvertMatrixBlock",l);class E extends q.b{constructor(R){super((0,h.O)((null===R||void 0===R?void 0:R.matrixType)||"Matrix"),(0,h.O)((null===R||void 0===R?void 0:R.matrixType)||"Matrix"),(0,h.O)((null===R||void 0===R?void 0:R.matrixType)||"Matrix"),((R,J)=>J.multiply(R)),"FlowGraphMatrixMultiplicationBlock",R)}}(0,N.h)("FlowGraphMatrixMultiplicationBlock",E);class O extends Q.c{constructor(R){super(R),this.input=this.registerDataInput("input",h.l),this.position=this.registerDataOutput("position",h.D),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",h.w),this.ur=this.registerDataOutput("ur",h.D),this.isValid=this.registerDataOutput("isValid",h.g,!1)}_updateOutputs(R){const J=R._getExecutionVariable(this,"executionId",-1),B=R._getExecutionVariable(this,"cachedPosition",null),Q=R._getExecutionVariable(this,"cachedRotation",null),h=R._getExecutionVariable(this,"cachedScaling",null);if(J===R.executionId&&B&&Q&&h)this.position.setValue(B,R),this.rotationQuaternion.setValue(Q,R),this.ur.setValue(h,R);else{const J=this.input.getValue(R),N=B||new y.nJ,r=Q||new y.Quaternion,q=h||new y.nJ,e=Math.round(1e4*J.m[3])/1e4,D=Math.round(1e4*J.m[7])/1e4,l=Math.round(1e4*J.m[11])/1e4,E=Math.round(1e4*J.m[15])/1e4;if(0!==e||0!==D||0!==l||1!==E)return this.isValid.setValue(!1,R),this.position.setValue(y.nJ.Zero(),R),this.rotationQuaternion.setValue(y.Quaternion.Identity(),R),void this.ur.setValue(y.nJ.One(),R);const O=J.decompose(q,r,N);this.isValid.setValue(O,R),this.position.setValue(N,R),this.rotationQuaternion.setValue(r,R),this.ur.setValue(q,R),R._setExecutionVariable(this,"cachedPosition",N),R._setExecutionVariable(this,"cachedRotation",r),R._setExecutionVariable(this,"cachedScaling",q),R._setExecutionVariable(this,"executionId",R.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,N.h)("FlowGraphMatrixDecompose",O);class n extends Q.c{constructor(R){super(R),this.position=this.registerDataInput("position",h.D),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",h.w),this.ur=this.registerDataInput("ur",h.D),this.value=this.registerDataOutput("value",h.l)}_updateOutputs(R){const J=R._getExecutionVariable(this,"executionId",-1),B=R._getExecutionVariable(this,"cachedMatrix",null);if(J===R.executionId&&B)this.value.setValue(B,R);else{const J=y.Matrix.Compose(this.ur.getValue(R),this.rotationQuaternion.getValue(R),this.position.getValue(R));this.value.setValue(J,R),R._setExecutionVariable(this,"cachedMatrix",J),R._setExecutionVariable(this,"executionId",R.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,N.h)("FlowGraphMatrixCompose",n)},14384:(R,J,B)=>{B.d(J,{b:()=>h});var Q=B(14390);class h extends Q.d{constructor(R,J,B,Q,h,y){super(B,y),this._operation=Q,this._className=h,this.a=this.registerDataInput("a",R),this.b=this.registerDataInput("b",J)}_doOperation(R){const J=this.a.getValue(R),B=this.b.getValue(R);return this._operation(J,B)}getClassName(){return this._className}}},14390:(R,J,B)=>{B.d(J,{d:()=>r});var Q=B(12922),h=B(12894);const y="cachedOperationValue",N="cachedExecutionId";class r extends Q.c{constructor(R,J){super(J),this.value=this.registerDataOutput("value",R),this.isValid=this.registerDataOutput("isValid",h.g)}_updateOutputs(R){const J=R._getExecutionVariable(this,N,-1),B=R._getExecutionVariable(this,y,null);if(void 0!==B&&null!==B&&J===R.executionId)this.isValid.setValue(!0,R),this.value.setValue(B,R);else try{const J=this._doOperation(R);if(void 0===J||null===J)return void this.isValid.setValue(!1,R);R._setExecutionVariable(this,y,J),R._setExecutionVariable(this,N,R.executionId),this.value.setValue(J,R),this.isValid.setValue(!0,R)}catch(Q){this.isValid.setValue(!1,R)}}}},14394:(R,J,B)=>{B.d(J,{d:()=>h});var Q=B(14390);class h extends Q.d{constructor(R,J,B,Q,h){super(J,h),this._operation=B,this._className=Q,this.a=this.registerDataInput("a",R)}_doOperation(R){return this._operation(this.a.getValue(R))}getClassName(){return this._className}}}}]);