"use strict";(self.uw9p3pwwsje=self.uw9p3pwwsje||[]).push([[90],{15925:(D,h,o)=>{o.r(h),o.d(h,{FlowGraphDeterminantBlock:()=>k,FlowGraphInvertMatrixBlock:()=>K,FlowGraphMatrixComposeBlock:()=>r,FlowGraphMatrixDecomposeBlock:()=>v,FlowGraphMatrixMultiplicationBlock:()=>Q,FlowGraphTransposeBlock:()=>S});var H=o(14386),g=o(14362),j=o(12831),M=o(12793),R=o(15918),t=o(15901);class S extends R.c{constructor(D){super((0,g.D)((null===D||void 0===D?void 0:D.matrixType)||"Matrix"),(0,g.D)((null===D||void 0===D?void 0:D.matrixType)||"Matrix"),(D=>D.transpose?D.transpose():j.Matrix.Transpose(D)),"FlowGraphTransposeBlock",D)}}(0,M.g)("FlowGraphTransposeBlock",S);class k extends R.c{constructor(D){super((0,g.D)((null===D||void 0===D?void 0:D.matrixType)||"Matrix"),g.q,(D=>D.determinant()),"FlowGraphDeterminantBlock",D)}}(0,M.g)("FlowGraphDeterminantBlock",k);class K extends R.c{constructor(D){super((0,g.D)((null===D||void 0===D?void 0:D.matrixType)||"Matrix"),(0,g.D)((null===D||void 0===D?void 0:D.matrixType)||"Matrix"),(D=>D.inverse?D.inverse():j.Matrix.Invert(D)),"FlowGraphInvertMatrixBlock",D)}}(0,M.g)("FlowGraphInvertMatrixBlock",K);class Q extends t.c{constructor(D){super((0,g.D)((null===D||void 0===D?void 0:D.matrixType)||"Matrix"),(0,g.D)((null===D||void 0===D?void 0:D.matrixType)||"Matrix"),(0,g.D)((null===D||void 0===D?void 0:D.matrixType)||"Matrix"),((D,h)=>h.multiply(D)),"FlowGraphMatrixMultiplicationBlock",D)}}(0,M.g)("FlowGraphMatrixMultiplicationBlock",Q);class v extends H.e{constructor(D){super(D),this.input=this.registerDataInput("input",g.l),this.position=this.registerDataOutput("position",g.w),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",g.r),this.Ug=this.registerDataOutput("Ug",g.w),this.isValid=this.registerDataOutput("isValid",g.f,!1)}_updateOutputs(D){const h=D._getExecutionVariable(this,"executionId",-1),o=D._getExecutionVariable(this,"cachedPosition",null),H=D._getExecutionVariable(this,"cachedRotation",null),g=D._getExecutionVariable(this,"cachedScaling",null);if(h===D.executionId&&o&&H&&g)this.position.setValue(o,D),this.rotationQuaternion.setValue(H,D),this.Ug.setValue(g,D);else{const h=this.input.getValue(D),M=o||new j.Gh,R=H||new j.Quaternion,t=g||new j.Gh,S=Math.round(1e4*h.m[3])/1e4,k=Math.round(1e4*h.m[7])/1e4,K=Math.round(1e4*h.m[11])/1e4,Q=Math.round(1e4*h.m[15])/1e4;if(0!==S||0!==k||0!==K||1!==Q)return this.isValid.setValue(!1,D),this.position.setValue(j.Gh.Zero(),D),this.rotationQuaternion.setValue(j.Quaternion.Identity(),D),void this.Ug.setValue(j.Gh.One(),D);const v=h.decompose(t,R,M);this.isValid.setValue(v,D),this.position.setValue(M,D),this.rotationQuaternion.setValue(R,D),this.Ug.setValue(t,D),D._setExecutionVariable(this,"cachedPosition",M),D._setExecutionVariable(this,"cachedRotation",R),D._setExecutionVariable(this,"cachedScaling",t),D._setExecutionVariable(this,"executionId",D.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,M.g)("FlowGraphMatrixDecompose",v);class r extends H.e{constructor(D){super(D),this.position=this.registerDataInput("position",g.w),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",g.r),this.Ug=this.registerDataInput("Ug",g.w),this.value=this.registerDataOutput("value",g.l)}_updateOutputs(D){const h=D._getExecutionVariable(this,"executionId",-1),o=D._getExecutionVariable(this,"cachedMatrix",null);if(h===D.executionId&&o)this.value.setValue(o,D);else{const h=j.Matrix.Compose(this.Ug.getValue(D),this.rotationQuaternion.getValue(D),this.position.getValue(D));this.value.setValue(h,D),D._setExecutionVariable(this,"cachedMatrix",h),D._setExecutionVariable(this,"executionId",D.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,M.g)("FlowGraphMatrixCompose",r)},15901:(D,h,o)=>{o.d(h,{c:()=>g});var H=o(15909);class g extends H.b{constructor(D,h,o,H,g,j){super(o,j),this._operation=H,this._className=g,this.a=this.registerDataInput("a",D),this.b=this.registerDataInput("b",h)}_doOperation(D){const h=this.a.getValue(D),o=this.b.getValue(D);return this._operation(h,o)}getClassName(){return this._className}}},15909:(D,h,o)=>{o.d(h,{b:()=>R});var H=o(14386),g=o(14362);const j="cachedOperationValue",M="cachedExecutionId";class R extends H.e{constructor(D,h){super(h),this.value=this.registerDataOutput("value",D),this.isValid=this.registerDataOutput("isValid",g.f)}_updateOutputs(D){const h=D._getExecutionVariable(this,M,-1),o=D._getExecutionVariable(this,j,null);if(void 0!==o&&null!==o&&h===D.executionId)this.isValid.setValue(!0,D),this.value.setValue(o,D);else try{const h=this._doOperation(D);if(void 0===h||null===h)return void this.isValid.setValue(!1,D);D._setExecutionVariable(this,j,h),D._setExecutionVariable(this,M,D.executionId),this.value.setValue(h,D),this.isValid.setValue(!0,D)}catch(H){this.isValid.setValue(!1,D)}}}},15918:(D,h,o)=>{o.d(h,{c:()=>g});var H=o(15909);class g extends H.b{constructor(D,h,o,H,g){super(h,g),this._operation=o,this._className=H,this.a=this.registerDataInput("a",D)}_doOperation(D){return this._operation(this.a.getValue(D))}getClassName(){return this._className}}}}]);