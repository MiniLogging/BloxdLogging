"use strict";(self.rvold1i0ywi=self.rvold1i0ywi||[]).push([[90],{14489:(F,b,Q)=>{Q.r(b),Q.d(b,{FlowGraphDeterminantBlock:()=>G,FlowGraphInvertMatrixBlock:()=>K,FlowGraphMatrixComposeBlock:()=>y,FlowGraphMatrixDecomposeBlock:()=>N,FlowGraphMatrixMultiplicationBlock:()=>e,FlowGraphTransposeBlock:()=>q});var C=Q(12972),z=Q(12951),t=Q(11309),g=Q(11265),W=Q(14476),Z=Q(14467);class q extends W.d{constructor(F){super((0,z.F)((null===F||void 0===F?void 0:F.matrixType)||"Matrix"),(0,z.F)((null===F||void 0===F?void 0:F.matrixType)||"Matrix"),(F=>F.transpose?F.transpose():t.Matrix.Transpose(F)),"FlowGraphTransposeBlock",F)}}(0,g.g)("FlowGraphTransposeBlock",q);class G extends W.d{constructor(F){super((0,z.F)((null===F||void 0===F?void 0:F.matrixType)||"Matrix"),z.m,(F=>F.determinant()),"FlowGraphDeterminantBlock",F)}}(0,g.g)("FlowGraphDeterminantBlock",G);class K extends W.d{constructor(F){super((0,z.F)((null===F||void 0===F?void 0:F.matrixType)||"Matrix"),(0,z.F)((null===F||void 0===F?void 0:F.matrixType)||"Matrix"),(F=>F.inverse?F.inverse():t.Matrix.Invert(F)),"FlowGraphInvertMatrixBlock",F)}}(0,g.g)("FlowGraphInvertMatrixBlock",K);class e extends Z.e{constructor(F){super((0,z.F)((null===F||void 0===F?void 0:F.matrixType)||"Matrix"),(0,z.F)((null===F||void 0===F?void 0:F.matrixType)||"Matrix"),(0,z.F)((null===F||void 0===F?void 0:F.matrixType)||"Matrix"),((F,b)=>b.multiply(F)),"FlowGraphMatrixMultiplicationBlock",F)}}(0,g.g)("FlowGraphMatrixMultiplicationBlock",e);class N extends C.b{constructor(F){super(F),this.input=this.registerDataInput("input",z.j),this.position=this.registerDataOutput("position",z.t),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",z.n),this.wb=this.registerDataOutput("wb",z.t),this.isValid=this.registerDataOutput("isValid",z.e,!1)}_updateOutputs(F){const b=F._getExecutionVariable(this,"executionId",-1),Q=F._getExecutionVariable(this,"cachedPosition",null),C=F._getExecutionVariable(this,"cachedRotation",null),z=F._getExecutionVariable(this,"cachedScaling",null);if(b===F.executionId&&Q&&C&&z)this.position.setValue(Q,F),this.rotationQuaternion.setValue(C,F),this.wb.setValue(z,F);else{const b=this.input.getValue(F),g=Q||new t.gQ,W=C||new t.Quaternion,Z=z||new t.gQ,q=Math.round(1e4*b.m[3])/1e4,G=Math.round(1e4*b.m[7])/1e4,K=Math.round(1e4*b.m[11])/1e4,e=Math.round(1e4*b.m[15])/1e4;if(0!==q||0!==G||0!==K||1!==e)return this.isValid.setValue(!1,F),this.position.setValue(t.gQ.Zero(),F),this.rotationQuaternion.setValue(t.Quaternion.Identity(),F),void this.wb.setValue(t.gQ.One(),F);const N=b.decompose(Z,W,g);this.isValid.setValue(N,F),this.position.setValue(g,F),this.rotationQuaternion.setValue(W,F),this.wb.setValue(Z,F),F._setExecutionVariable(this,"cachedPosition",g),F._setExecutionVariable(this,"cachedRotation",W),F._setExecutionVariable(this,"cachedScaling",Z),F._setExecutionVariable(this,"executionId",F.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,g.g)("FlowGraphMatrixDecompose",N);class y extends C.b{constructor(F){super(F),this.position=this.registerDataInput("position",z.t),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",z.n),this.wb=this.registerDataInput("wb",z.t),this.value=this.registerDataOutput("value",z.j)}_updateOutputs(F){const b=F._getExecutionVariable(this,"executionId",-1),Q=F._getExecutionVariable(this,"cachedMatrix",null);if(b===F.executionId&&Q)this.value.setValue(Q,F);else{const b=t.Matrix.Compose(this.wb.getValue(F),this.rotationQuaternion.getValue(F),this.position.getValue(F));this.value.setValue(b,F),F._setExecutionVariable(this,"cachedMatrix",b),F._setExecutionVariable(this,"executionId",F.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,g.g)("FlowGraphMatrixCompose",y)},14467:(F,b,Q)=>{Q.d(b,{e:()=>z});var C=Q(14472);class z extends C.b{constructor(F,b,Q,C,z,t){super(Q,t),this._operation=C,this._className=z,this.a=this.registerDataInput("a",F),this.b=this.registerDataInput("b",b)}_doOperation(F){const b=this.a.getValue(F),Q=this.b.getValue(F);return this._operation(b,Q)}getClassName(){return this._className}}},14472:(F,b,Q)=>{Q.d(b,{b:()=>W});var C=Q(12972),z=Q(12951);const t="cachedOperationValue",g="cachedExecutionId";class W extends C.b{constructor(F,b){super(b),this.value=this.registerDataOutput("value",F),this.isValid=this.registerDataOutput("isValid",z.e)}_updateOutputs(F){const b=F._getExecutionVariable(this,g,-1),Q=F._getExecutionVariable(this,t,null);if(void 0!==Q&&null!==Q&&b===F.executionId)this.isValid.setValue(!0,F),this.value.setValue(Q,F);else try{const b=this._doOperation(F);if(void 0===b||null===b)return void this.isValid.setValue(!1,F);F._setExecutionVariable(this,t,b),F._setExecutionVariable(this,g,F.executionId),this.value.setValue(b,F),this.isValid.setValue(!0,F)}catch(C){this.isValid.setValue(!1,F)}}}},14476:(F,b,Q)=>{Q.d(b,{d:()=>z});var C=Q(14472);class z extends C.b{constructor(F,b,Q,C,z){super(b,z),this._operation=Q,this._className=C,this.a=this.registerDataInput("a",F)}_doOperation(F){return this._operation(this.a.getValue(F))}getClassName(){return this._className}}}}]);