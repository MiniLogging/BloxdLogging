"use strict";(self.xeuzlpp225k=self.xeuzlpp225k||[]).push([[90],{14553:(k,Q,i)=>{i.r(Q),i.d(Q,{FlowGraphDeterminantBlock:()=>J,FlowGraphInvertMatrixBlock:()=>G,FlowGraphMatrixComposeBlock:()=>F,FlowGraphMatrixDecomposeBlock:()=>e,FlowGraphMatrixMultiplicationBlock:()=>H,FlowGraphTransposeBlock:()=>O});var Z=i(13084),U=i(13064),C=i(11298),B=i(11253),o=i(14543),m=i(14533);class O extends o.b{constructor(k){super((0,U.N)((null===k||void 0===k?void 0:k.matrixType)||"Matrix"),(0,U.N)((null===k||void 0===k?void 0:k.matrixType)||"Matrix"),(k=>k.transpose?k.transpose():C.Matrix.Transpose(k)),"FlowGraphTransposeBlock",k)}}(0,B.e)("FlowGraphTransposeBlock",O);class J extends o.b{constructor(k){super((0,U.N)((null===k||void 0===k?void 0:k.matrixType)||"Matrix"),U.o,(k=>k.determinant()),"FlowGraphDeterminantBlock",k)}}(0,B.e)("FlowGraphDeterminantBlock",J);class G extends o.b{constructor(k){super((0,U.N)((null===k||void 0===k?void 0:k.matrixType)||"Matrix"),(0,U.N)((null===k||void 0===k?void 0:k.matrixType)||"Matrix"),(k=>k.inverse?k.inverse():C.Matrix.Invert(k)),"FlowGraphInvertMatrixBlock",k)}}(0,B.e)("FlowGraphInvertMatrixBlock",G);class H extends m.c{constructor(k){super((0,U.N)((null===k||void 0===k?void 0:k.matrixType)||"Matrix"),(0,U.N)((null===k||void 0===k?void 0:k.matrixType)||"Matrix"),(0,U.N)((null===k||void 0===k?void 0:k.matrixType)||"Matrix"),((k,Q)=>Q.multiply(k)),"FlowGraphMatrixMultiplicationBlock",k)}}(0,B.e)("FlowGraphMatrixMultiplicationBlock",H);class e extends Z.e{constructor(k){super(k),this.input=this.registerDataInput("input",U.j),this.position=this.registerDataOutput("position",U.C),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",U.s),this.Ho=this.registerDataOutput("Ho",U.C),this.isValid=this.registerDataOutput("isValid",U.f,!1)}_updateOutputs(k){const Q=k._getExecutionVariable(this,"executionId",-1),i=k._getExecutionVariable(this,"cachedPosition",null),Z=k._getExecutionVariable(this,"cachedRotation",null),U=k._getExecutionVariable(this,"cachedScaling",null);if(Q===k.executionId&&i&&Z&&U)this.position.setValue(i,k),this.rotationQuaternion.setValue(Z,k),this.Ho.setValue(U,k);else{const Q=this.input.getValue(k),B=i||new C.zQ,o=Z||new C.Quaternion,m=U||new C.zQ,O=Math.round(1e4*Q.m[3])/1e4,J=Math.round(1e4*Q.m[7])/1e4,G=Math.round(1e4*Q.m[11])/1e4,H=Math.round(1e4*Q.m[15])/1e4;if(0!==O||0!==J||0!==G||1!==H)return this.isValid.setValue(!1,k),this.position.setValue(C.zQ.Zero(),k),this.rotationQuaternion.setValue(C.Quaternion.Identity(),k),void this.Ho.setValue(C.zQ.One(),k);const e=Q.decompose(m,o,B);this.isValid.setValue(e,k),this.position.setValue(B,k),this.rotationQuaternion.setValue(o,k),this.Ho.setValue(m,k),k._setExecutionVariable(this,"cachedPosition",B),k._setExecutionVariable(this,"cachedRotation",o),k._setExecutionVariable(this,"cachedScaling",m),k._setExecutionVariable(this,"executionId",k.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,B.e)("FlowGraphMatrixDecompose",e);class F extends Z.e{constructor(k){super(k),this.position=this.registerDataInput("position",U.C),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",U.s),this.Ho=this.registerDataInput("Ho",U.C),this.value=this.registerDataOutput("value",U.j)}_updateOutputs(k){const Q=k._getExecutionVariable(this,"executionId",-1),i=k._getExecutionVariable(this,"cachedMatrix",null);if(Q===k.executionId&&i)this.value.setValue(i,k);else{const Q=C.Matrix.Compose(this.Ho.getValue(k),this.rotationQuaternion.getValue(k),this.position.getValue(k));this.value.setValue(Q,k),k._setExecutionVariable(this,"cachedMatrix",Q),k._setExecutionVariable(this,"executionId",k.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,B.e)("FlowGraphMatrixCompose",F)},14533:(k,Q,i)=>{i.d(Q,{c:()=>U});var Z=i(14536);class U extends Z.e{constructor(k,Q,i,Z,U,C){super(i,C),this._operation=Z,this._className=U,this.a=this.registerDataInput("a",k),this.b=this.registerDataInput("b",Q)}_doOperation(k){const Q=this.a.getValue(k),i=this.b.getValue(k);return this._operation(Q,i)}getClassName(){return this._className}}},14536:(k,Q,i)=>{i.d(Q,{e:()=>o});var Z=i(13084),U=i(13064);const C="cachedOperationValue",B="cachedExecutionId";class o extends Z.e{constructor(k,Q){super(Q),this.value=this.registerDataOutput("value",k),this.isValid=this.registerDataOutput("isValid",U.f)}_updateOutputs(k){const Q=k._getExecutionVariable(this,B,-1),i=k._getExecutionVariable(this,C,null);if(void 0!==i&&null!==i&&Q===k.executionId)this.isValid.setValue(!0,k),this.value.setValue(i,k);else try{const Q=this._doOperation(k);if(void 0===Q||null===Q)return void this.isValid.setValue(!1,k);k._setExecutionVariable(this,C,Q),k._setExecutionVariable(this,B,k.executionId),this.value.setValue(Q,k),this.isValid.setValue(!0,k)}catch(Z){this.isValid.setValue(!1,k)}}}},14543:(k,Q,i)=>{i.d(Q,{b:()=>U});var Z=i(14536);class U extends Z.e{constructor(k,Q,i,Z,U){super(Q,U),this._operation=i,this._className=Z,this.a=this.registerDataInput("a",k)}_doOperation(k){return this._operation(this.a.getValue(k))}getClassName(){return this._className}}}}]);