"use strict";(self.hbnkweqmycf=self.hbnkweqmycf||[]).push([[90],{14857:(F,P,f)=>{f.r(P),f.d(P,{FlowGraphDeterminantBlock:()=>i,FlowGraphInvertMatrixBlock:()=>u,FlowGraphMatrixComposeBlock:()=>t,FlowGraphMatrixDecomposeBlock:()=>Y,FlowGraphMatrixMultiplicationBlock:()=>T,FlowGraphTransposeBlock:()=>j});var c=f(13287),N=f(13265),q=f(11639),H=f(11587),A=f(14848),o=f(14841);class j extends A.e{constructor(F){super((0,N.F)((null===F||void 0===F?void 0:F.matrixType)||"Matrix"),(0,N.F)((null===F||void 0===F?void 0:F.matrixType)||"Matrix"),(F=>F.transpose?F.transpose():q.Matrix.Transpose(F)),"FlowGraphTransposeBlock",F)}}(0,H.f)("FlowGraphTransposeBlock",j);class i extends A.e{constructor(F){super((0,N.F)((null===F||void 0===F?void 0:F.matrixType)||"Matrix"),N.o,(F=>F.determinant()),"FlowGraphDeterminantBlock",F)}}(0,H.f)("FlowGraphDeterminantBlock",i);class u extends A.e{constructor(F){super((0,N.F)((null===F||void 0===F?void 0:F.matrixType)||"Matrix"),(0,N.F)((null===F||void 0===F?void 0:F.matrixType)||"Matrix"),(F=>F.inverse?F.inverse():q.Matrix.Invert(F)),"FlowGraphInvertMatrixBlock",F)}}(0,H.f)("FlowGraphInvertMatrixBlock",u);class T extends o.d{constructor(F){super((0,N.F)((null===F||void 0===F?void 0:F.matrixType)||"Matrix"),(0,N.F)((null===F||void 0===F?void 0:F.matrixType)||"Matrix"),(0,N.F)((null===F||void 0===F?void 0:F.matrixType)||"Matrix"),((F,P)=>P.multiply(F)),"FlowGraphMatrixMultiplicationBlock",F)}}(0,H.f)("FlowGraphMatrixMultiplicationBlock",T);class Y extends c.c{constructor(F){super(F),this.input=this.registerDataInput("input",N.j),this.position=this.registerDataOutput("position",N.w),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",N.p),this.cc=this.registerDataOutput("cc",N.w),this.isValid=this.registerDataOutput("isValid",N.g,!1)}_updateOutputs(F){const P=F._getExecutionVariable(this,"executionId",-1),f=F._getExecutionVariable(this,"cachedPosition",null),c=F._getExecutionVariable(this,"cachedRotation",null),N=F._getExecutionVariable(this,"cachedScaling",null);if(P===F.executionId&&f&&c&&N)this.position.setValue(f,F),this.rotationQuaternion.setValue(c,F),this.cc.setValue(N,F);else{const P=this.input.getValue(F),H=f||new q.tP,A=c||new q.Quaternion,o=N||new q.tP,j=Math.round(1e4*P.m[3])/1e4,i=Math.round(1e4*P.m[7])/1e4,u=Math.round(1e4*P.m[11])/1e4,T=Math.round(1e4*P.m[15])/1e4;if(0!==j||0!==i||0!==u||1!==T)return this.isValid.setValue(!1,F),this.position.setValue(q.tP.Zero(),F),this.rotationQuaternion.setValue(q.Quaternion.Identity(),F),void this.cc.setValue(q.tP.One(),F);const Y=P.decompose(o,A,H);this.isValid.setValue(Y,F),this.position.setValue(H,F),this.rotationQuaternion.setValue(A,F),this.cc.setValue(o,F),F._setExecutionVariable(this,"cachedPosition",H),F._setExecutionVariable(this,"cachedRotation",A),F._setExecutionVariable(this,"cachedScaling",o),F._setExecutionVariable(this,"executionId",F.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,H.f)("FlowGraphMatrixDecompose",Y);class t extends c.c{constructor(F){super(F),this.position=this.registerDataInput("position",N.w),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",N.p),this.cc=this.registerDataInput("cc",N.w),this.value=this.registerDataOutput("value",N.j)}_updateOutputs(F){const P=F._getExecutionVariable(this,"executionId",-1),f=F._getExecutionVariable(this,"cachedMatrix",null);if(P===F.executionId&&f)this.value.setValue(f,F);else{const P=q.Matrix.Compose(this.cc.getValue(F),this.rotationQuaternion.getValue(F),this.position.getValue(F));this.value.setValue(P,F),F._setExecutionVariable(this,"cachedMatrix",P),F._setExecutionVariable(this,"executionId",F.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,H.f)("FlowGraphMatrixCompose",t)},14841:(F,P,f)=>{f.d(P,{d:()=>N});var c=f(14843);class N extends c.c{constructor(F,P,f,c,N,q){super(f,q),this._operation=c,this._className=N,this.a=this.registerDataInput("a",F),this.b=this.registerDataInput("b",P)}_doOperation(F){const P=this.a.getValue(F),f=this.b.getValue(F);return this._operation(P,f)}getClassName(){return this._className}}},14843:(F,P,f)=>{f.d(P,{c:()=>A});var c=f(13287),N=f(13265);const q="cachedOperationValue",H="cachedExecutionId";class A extends c.c{constructor(F,P){super(P),this.value=this.registerDataOutput("value",F),this.isValid=this.registerDataOutput("isValid",N.g)}_updateOutputs(F){const P=F._getExecutionVariable(this,H,-1),f=F._getExecutionVariable(this,q,null);if(void 0!==f&&null!==f&&P===F.executionId)this.isValid.setValue(!0,F),this.value.setValue(f,F);else try{const P=this._doOperation(F);if(void 0===P||null===P)return void this.isValid.setValue(!1,F);F._setExecutionVariable(this,q,P),F._setExecutionVariable(this,H,F.executionId),this.value.setValue(P,F),this.isValid.setValue(!0,F)}catch(c){this.isValid.setValue(!1,F)}}}},14848:(F,P,f)=>{f.d(P,{e:()=>N});var c=f(14843);class N extends c.c{constructor(F,P,f,c,N){super(P,N),this._operation=f,this._className=c,this.a=this.registerDataInput("a",F)}_doOperation(F){return this._operation(this.a.getValue(F))}getClassName(){return this._className}}}}]);