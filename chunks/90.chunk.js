"use strict";(self.rsqbdnwe5e=self.rsqbdnwe5e||[]).push([[90],{15556:(N,p,T)=>{T.r(p),T.d(p,{FlowGraphDeterminantBlock:()=>H,FlowGraphInvertMatrixBlock:()=>M,FlowGraphMatrixComposeBlock:()=>k,FlowGraphMatrixDecomposeBlock:()=>l,FlowGraphMatrixMultiplicationBlock:()=>b,FlowGraphTransposeBlock:()=>e});var A=T(14108),a=T(14082),C=T(12371),U=T(12331),X=T(15550),y=T(15532);class e extends X.e{constructor(N){super((0,a.K)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),(0,a.K)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),(N=>N.transpose?N.transpose():C.Matrix.Transpose(N)),"FlowGraphTransposeBlock",N)}}(0,U.d)("FlowGraphTransposeBlock",e);class H extends X.e{constructor(N){super((0,a.K)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),a.r,(N=>N.determinant()),"FlowGraphDeterminantBlock",N)}}(0,U.d)("FlowGraphDeterminantBlock",H);class M extends X.e{constructor(N){super((0,a.K)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),(0,a.K)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),(N=>N.inverse?N.inverse():C.Matrix.Invert(N)),"FlowGraphInvertMatrixBlock",N)}}(0,U.d)("FlowGraphInvertMatrixBlock",M);class b extends y.b{constructor(N){super((0,a.K)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),(0,a.K)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),(0,a.K)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),((N,p)=>p.multiply(N)),"FlowGraphMatrixMultiplicationBlock",N)}}(0,U.d)("FlowGraphMatrixMultiplicationBlock",b);class l extends A.c{constructor(N){super(N),this.input=this.registerDataInput("input",a.i),this.position=this.registerDataOutput("position",a.D),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",a.v),this.xX=this.registerDataOutput("xX",a.D),this.isValid=this.registerDataOutput("isValid",a.g,!1)}_updateOutputs(N){const p=N._getExecutionVariable(this,"executionId",-1),T=N._getExecutionVariable(this,"cachedPosition",null),A=N._getExecutionVariable(this,"cachedRotation",null),a=N._getExecutionVariable(this,"cachedScaling",null);if(p===N.executionId&&T&&A&&a)this.position.setValue(T,N),this.rotationQuaternion.setValue(A,N),this.xX.setValue(a,N);else{const p=this.input.getValue(N),U=T||new C.xp,X=A||new C.Quaternion,y=a||new C.xp,e=Math.round(1e4*p.m[3])/1e4,H=Math.round(1e4*p.m[7])/1e4,M=Math.round(1e4*p.m[11])/1e4,b=Math.round(1e4*p.m[15])/1e4;if(0!==e||0!==H||0!==M||1!==b)return this.isValid.setValue(!1,N),this.position.setValue(C.xp.Zero(),N),this.rotationQuaternion.setValue(C.Quaternion.Identity(),N),void this.xX.setValue(C.xp.One(),N);const l=p.decompose(y,X,U);this.isValid.setValue(l,N),this.position.setValue(U,N),this.rotationQuaternion.setValue(X,N),this.xX.setValue(y,N),N._setExecutionVariable(this,"cachedPosition",U),N._setExecutionVariable(this,"cachedRotation",X),N._setExecutionVariable(this,"cachedScaling",y),N._setExecutionVariable(this,"executionId",N.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,U.d)("FlowGraphMatrixDecompose",l);class k extends A.c{constructor(N){super(N),this.position=this.registerDataInput("position",a.D),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",a.v),this.xX=this.registerDataInput("xX",a.D),this.value=this.registerDataOutput("value",a.i)}_updateOutputs(N){const p=N._getExecutionVariable(this,"executionId",-1),T=N._getExecutionVariable(this,"cachedMatrix",null);if(p===N.executionId&&T)this.value.setValue(T,N);else{const p=C.Matrix.Compose(this.xX.getValue(N),this.rotationQuaternion.getValue(N),this.position.getValue(N));this.value.setValue(p,N),N._setExecutionVariable(this,"cachedMatrix",p),N._setExecutionVariable(this,"executionId",N.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,U.d)("FlowGraphMatrixCompose",k)},15532:(N,p,T)=>{T.d(p,{b:()=>a});var A=T(15541);class a extends A.d{constructor(N,p,T,A,a,C){super(T,C),this._operation=A,this._className=a,this.a=this.registerDataInput("a",N),this.b=this.registerDataInput("b",p)}_doOperation(N){const p=this.a.getValue(N),T=this.b.getValue(N);return this._operation(p,T)}getClassName(){return this._className}}},15541:(N,p,T)=>{T.d(p,{d:()=>X});var A=T(14108),a=T(14082);const C="cachedOperationValue",U="cachedExecutionId";class X extends A.c{constructor(N,p){super(p),this.value=this.registerDataOutput("value",N),this.isValid=this.registerDataOutput("isValid",a.g)}_updateOutputs(N){const p=N._getExecutionVariable(this,U,-1),T=N._getExecutionVariable(this,C,null);if(void 0!==T&&null!==T&&p===N.executionId)this.isValid.setValue(!0,N),this.value.setValue(T,N);else try{const p=this._doOperation(N);if(void 0===p||null===p)return void this.isValid.setValue(!1,N);N._setExecutionVariable(this,C,p),N._setExecutionVariable(this,U,N.executionId),this.value.setValue(p,N),this.isValid.setValue(!0,N)}catch(A){this.isValid.setValue(!1,N)}}}},15550:(N,p,T)=>{T.d(p,{e:()=>a});var A=T(15541);class a extends A.d{constructor(N,p,T,A,a){super(p,a),this._operation=T,this._className=A,this.a=this.registerDataInput("a",N)}_doOperation(N){return this._operation(this.a.getValue(N))}getClassName(){return this._className}}}}]);