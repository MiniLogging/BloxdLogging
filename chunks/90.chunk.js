"use strict";(self.bbj0x35f849=self.bbj0x35f849||[]).push([[90],{14355:(N,q,C)=>{C.r(q),C.d(q,{FlowGraphDeterminantBlock:()=>n,FlowGraphInvertMatrixBlock:()=>t,FlowGraphMatrixComposeBlock:()=>J,FlowGraphMatrixDecomposeBlock:()=>Z,FlowGraphMatrixMultiplicationBlock:()=>V,FlowGraphTransposeBlock:()=>A});var d=C(12856),U=C(12831),W=C(11122),a=C(11076),F=C(14340),w=C(14327);class A extends F.b{constructor(N){super((0,U.O)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),(0,U.O)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),(N=>N.transpose?N.transpose():W.Matrix.Transpose(N)),"FlowGraphTransposeBlock",N)}}(0,a.h)("FlowGraphTransposeBlock",A);class n extends F.b{constructor(N){super((0,U.O)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),U.r,(N=>N.determinant()),"FlowGraphDeterminantBlock",N)}}(0,a.h)("FlowGraphDeterminantBlock",n);class t extends F.b{constructor(N){super((0,U.O)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),(0,U.O)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),(N=>N.inverse?N.inverse():W.Matrix.Invert(N)),"FlowGraphInvertMatrixBlock",N)}}(0,a.h)("FlowGraphInvertMatrixBlock",t);class V extends w.c{constructor(N){super((0,U.O)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),(0,U.O)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),(0,U.O)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),((N,q)=>q.multiply(N)),"FlowGraphMatrixMultiplicationBlock",N)}}(0,a.h)("FlowGraphMatrixMultiplicationBlock",V);class Z extends d.d{constructor(N){super(N),this.input=this.registerDataInput("input",U.h),this.position=this.registerDataOutput("position",U.A),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",U.v),this.yd=this.registerDataOutput("yd",U.A),this.isValid=this.registerDataOutput("isValid",U.e,!1)}_updateOutputs(N){const q=N._getExecutionVariable(this,"executionId",-1),C=N._getExecutionVariable(this,"cachedPosition",null),d=N._getExecutionVariable(this,"cachedRotation",null),U=N._getExecutionVariable(this,"cachedScaling",null);if(q===N.executionId&&C&&d&&U)this.position.setValue(C,N),this.rotationQuaternion.setValue(d,N),this.yd.setValue(U,N);else{const q=this.input.getValue(N),a=C||new W.Jq,F=d||new W.Quaternion,w=U||new W.Jq,A=Math.round(1e4*q.m[3])/1e4,n=Math.round(1e4*q.m[7])/1e4,t=Math.round(1e4*q.m[11])/1e4,V=Math.round(1e4*q.m[15])/1e4;if(0!==A||0!==n||0!==t||1!==V)return this.isValid.setValue(!1,N),this.position.setValue(W.Jq.Zero(),N),this.rotationQuaternion.setValue(W.Quaternion.Identity(),N),void this.yd.setValue(W.Jq.One(),N);const Z=q.decompose(w,F,a);this.isValid.setValue(Z,N),this.position.setValue(a,N),this.rotationQuaternion.setValue(F,N),this.yd.setValue(w,N),N._setExecutionVariable(this,"cachedPosition",a),N._setExecutionVariable(this,"cachedRotation",F),N._setExecutionVariable(this,"cachedScaling",w),N._setExecutionVariable(this,"executionId",N.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,a.h)("FlowGraphMatrixDecompose",Z);class J extends d.d{constructor(N){super(N),this.position=this.registerDataInput("position",U.A),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",U.v),this.yd=this.registerDataInput("yd",U.A),this.value=this.registerDataOutput("value",U.h)}_updateOutputs(N){const q=N._getExecutionVariable(this,"executionId",-1),C=N._getExecutionVariable(this,"cachedMatrix",null);if(q===N.executionId&&C)this.value.setValue(C,N);else{const q=W.Matrix.Compose(this.yd.getValue(N),this.rotationQuaternion.getValue(N),this.position.getValue(N));this.value.setValue(q,N),N._setExecutionVariable(this,"cachedMatrix",q),N._setExecutionVariable(this,"executionId",N.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,a.h)("FlowGraphMatrixCompose",J)},14327:(N,q,C)=>{C.d(q,{c:()=>U});var d=C(14333);class U extends d.e{constructor(N,q,C,d,U,W){super(C,W),this._operation=d,this._className=U,this.a=this.registerDataInput("a",N),this.b=this.registerDataInput("b",q)}_doOperation(N){const q=this.a.getValue(N),C=this.b.getValue(N);return this._operation(q,C)}getClassName(){return this._className}}},14333:(N,q,C)=>{C.d(q,{e:()=>F});var d=C(12856),U=C(12831);const W="cachedOperationValue",a="cachedExecutionId";class F extends d.d{constructor(N,q){super(q),this.value=this.registerDataOutput("value",N),this.isValid=this.registerDataOutput("isValid",U.e)}_updateOutputs(N){const q=N._getExecutionVariable(this,a,-1),C=N._getExecutionVariable(this,W,null);if(void 0!==C&&null!==C&&q===N.executionId)this.isValid.setValue(!0,N),this.value.setValue(C,N);else try{const q=this._doOperation(N);if(void 0===q||null===q)return void this.isValid.setValue(!1,N);N._setExecutionVariable(this,W,q),N._setExecutionVariable(this,a,N.executionId),this.value.setValue(q,N),this.isValid.setValue(!0,N)}catch(d){this.isValid.setValue(!1,N)}}}},14340:(N,q,C)=>{C.d(q,{b:()=>U});var d=C(14333);class U extends d.e{constructor(N,q,C,d,U){super(q,U),this._operation=C,this._className=d,this.a=this.registerDataInput("a",N)}_doOperation(N){return this._operation(this.a.getValue(N))}getClassName(){return this._className}}}}]);