"use strict";(self.dwifukwnts=self.dwifukwnts||[]).push([[90],{14854:(U,X,b)=>{b.r(X),b.d(X,{FlowGraphDeterminantBlock:()=>S,FlowGraphInvertMatrixBlock:()=>R,FlowGraphMatrixComposeBlock:()=>J,FlowGraphMatrixDecomposeBlock:()=>a,FlowGraphMatrixMultiplicationBlock:()=>n,FlowGraphTransposeBlock:()=>p});var F=b(13308),E=b(13281),w=b(11593),Q=b(11551),z=b(14838),q=b(14828);class p extends z.b{constructor(U){super((0,E.L)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),(0,E.L)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),(U=>U.transpose?U.transpose():w.Matrix.Transpose(U)),"FlowGraphTransposeBlock",U)}}(0,Q.f)("FlowGraphTransposeBlock",p);class S extends z.b{constructor(U){super((0,E.L)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),E.s,(U=>U.determinant()),"FlowGraphDeterminantBlock",U)}}(0,Q.f)("FlowGraphDeterminantBlock",S);class R extends z.b{constructor(U){super((0,E.L)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),(0,E.L)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),(U=>U.inverse?U.inverse():w.Matrix.Invert(U)),"FlowGraphInvertMatrixBlock",U)}}(0,Q.f)("FlowGraphInvertMatrixBlock",R);class n extends q.d{constructor(U){super((0,E.L)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),(0,E.L)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),(0,E.L)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),((U,X)=>X.multiply(U)),"FlowGraphMatrixMultiplicationBlock",U)}}(0,Q.f)("FlowGraphMatrixMultiplicationBlock",n);class a extends F.d{constructor(U){super(U),this.input=this.registerDataInput("input",E.l),this.position=this.registerDataOutput("position",E.C),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",E.w),this.fb=this.registerDataOutput("fb",E.C),this.isValid=this.registerDataOutput("isValid",E.e,!1)}_updateOutputs(U){const X=U._getExecutionVariable(this,"executionId",-1),b=U._getExecutionVariable(this,"cachedPosition",null),F=U._getExecutionVariable(this,"cachedRotation",null),E=U._getExecutionVariable(this,"cachedScaling",null);if(X===U.executionId&&b&&F&&E)this.position.setValue(b,U),this.rotationQuaternion.setValue(F,U),this.fb.setValue(E,U);else{const X=this.input.getValue(U),Q=b||new w.JX,z=F||new w.Quaternion,q=E||new w.JX,p=Math.round(1e4*X.m[3])/1e4,S=Math.round(1e4*X.m[7])/1e4,R=Math.round(1e4*X.m[11])/1e4,n=Math.round(1e4*X.m[15])/1e4;if(0!==p||0!==S||0!==R||1!==n)return this.isValid.setValue(!1,U),this.position.setValue(w.JX.Zero(),U),this.rotationQuaternion.setValue(w.Quaternion.Identity(),U),void this.fb.setValue(w.JX.One(),U);const a=X.decompose(q,z,Q);this.isValid.setValue(a,U),this.position.setValue(Q,U),this.rotationQuaternion.setValue(z,U),this.fb.setValue(q,U),U._setExecutionVariable(this,"cachedPosition",Q),U._setExecutionVariable(this,"cachedRotation",z),U._setExecutionVariable(this,"cachedScaling",q),U._setExecutionVariable(this,"executionId",U.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,Q.f)("FlowGraphMatrixDecompose",a);class J extends F.d{constructor(U){super(U),this.position=this.registerDataInput("position",E.C),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",E.w),this.fb=this.registerDataInput("fb",E.C),this.value=this.registerDataOutput("value",E.l)}_updateOutputs(U){const X=U._getExecutionVariable(this,"executionId",-1),b=U._getExecutionVariable(this,"cachedMatrix",null);if(X===U.executionId&&b)this.value.setValue(b,U);else{const X=w.Matrix.Compose(this.fb.getValue(U),this.rotationQuaternion.getValue(U),this.position.getValue(U));this.value.setValue(X,U),U._setExecutionVariable(this,"cachedMatrix",X),U._setExecutionVariable(this,"executionId",U.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,Q.f)("FlowGraphMatrixCompose",J)},14828:(U,X,b)=>{b.d(X,{d:()=>E});var F=b(14831);class E extends F.e{constructor(U,X,b,F,E,w){super(b,w),this._operation=F,this._className=E,this.a=this.registerDataInput("a",U),this.b=this.registerDataInput("b",X)}_doOperation(U){const X=this.a.getValue(U),b=this.b.getValue(U);return this._operation(X,b)}getClassName(){return this._className}}},14831:(U,X,b)=>{b.d(X,{e:()=>z});var F=b(13308),E=b(13281);const w="cachedOperationValue",Q="cachedExecutionId";class z extends F.d{constructor(U,X){super(X),this.value=this.registerDataOutput("value",U),this.isValid=this.registerDataOutput("isValid",E.e)}_updateOutputs(U){const X=U._getExecutionVariable(this,Q,-1),b=U._getExecutionVariable(this,w,null);if(void 0!==b&&null!==b&&X===U.executionId)this.isValid.setValue(!0,U),this.value.setValue(b,U);else try{const X=this._doOperation(U);if(void 0===X||null===X)return void this.isValid.setValue(!1,U);U._setExecutionVariable(this,w,X),U._setExecutionVariable(this,Q,U.executionId),this.value.setValue(X,U),this.isValid.setValue(!0,U)}catch(F){this.isValid.setValue(!1,U)}}}},14838:(U,X,b)=>{b.d(X,{b:()=>E});var F=b(14831);class E extends F.e{constructor(U,X,b,F,E){super(X,E),this._operation=b,this._className=F,this.a=this.registerDataInput("a",U)}_doOperation(U){return this._operation(this.a.getValue(U))}getClassName(){return this._className}}}}]);