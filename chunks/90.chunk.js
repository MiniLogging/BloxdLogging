"use strict";(self.pp3k1ov3ibi=self.pp3k1ov3ibi||[]).push([[90],{15622:(M,Z,P)=>{P.r(Z),P.d(Z,{FlowGraphDeterminantBlock:()=>d,FlowGraphInvertMatrixBlock:()=>O,FlowGraphMatrixComposeBlock:()=>B,FlowGraphMatrixDecomposeBlock:()=>j,FlowGraphMatrixMultiplicationBlock:()=>H,FlowGraphTransposeBlock:()=>K});var x=P(14093),c=P(14073),w=P(12373),v=P(12317),G=P(15612),mM=P(15602);class K extends G.d{constructor(M){super((0,c.R)((null===M||void 0===M?void 0:M.matrixType)||"Matrix"),(0,c.R)((null===M||void 0===M?void 0:M.matrixType)||"Matrix"),(M=>M.transpose?M.transpose():w.Matrix.Transpose(M)),"FlowGraphTransposeBlock",M)}}(0,v.g)("FlowGraphTransposeBlock",K);class d extends G.d{constructor(M){super((0,c.R)((null===M||void 0===M?void 0:M.matrixType)||"Matrix"),c.u,(M=>M.determinant()),"FlowGraphDeterminantBlock",M)}}(0,v.g)("FlowGraphDeterminantBlock",d);class O extends G.d{constructor(M){super((0,c.R)((null===M||void 0===M?void 0:M.matrixType)||"Matrix"),(0,c.R)((null===M||void 0===M?void 0:M.matrixType)||"Matrix"),(M=>M.inverse?M.inverse():w.Matrix.Invert(M)),"FlowGraphInvertMatrixBlock",M)}}(0,v.g)("FlowGraphInvertMatrixBlock",O);class H extends mM.c{constructor(M){super((0,c.R)((null===M||void 0===M?void 0:M.matrixType)||"Matrix"),(0,c.R)((null===M||void 0===M?void 0:M.matrixType)||"Matrix"),(0,c.R)((null===M||void 0===M?void 0:M.matrixType)||"Matrix"),((M,Z)=>Z.multiply(M)),"FlowGraphMatrixMultiplicationBlock",M)}}(0,v.g)("FlowGraphMatrixMultiplicationBlock",H);class j extends x.c{constructor(M){super(M),this.input=this.registerDataInput("input",c.m),this.position=this.registerDataOutput("position",c.H),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",c.x),this.hc=this.registerDataOutput("hc",c.H),this.isValid=this.registerDataOutput("isValid",c.g,!1)}_updateOutputs(M){const Z=M._getExecutionVariable(this,"executionId",-1),P=M._getExecutionVariable(this,"cachedPosition",null),x=M._getExecutionVariable(this,"cachedRotation",null),c=M._getExecutionVariable(this,"cachedScaling",null);if(Z===M.executionId&&P&&x&&c)this.position.setValue(P,M),this.rotationQuaternion.setValue(x,M),this.hc.setValue(c,M);else{const Z=this.input.getValue(M),v=P||new w.BZ,G=x||new w.Quaternion,mM=c||new w.BZ,K=Math.round(1e4*Z.m[3])/1e4,d=Math.round(1e4*Z.m[7])/1e4,O=Math.round(1e4*Z.m[11])/1e4,H=Math.round(1e4*Z.m[15])/1e4;if(0!==K||0!==d||0!==O||1!==H)return this.isValid.setValue(!1,M),this.position.setValue(w.BZ.Zero(),M),this.rotationQuaternion.setValue(w.Quaternion.Identity(),M),void this.hc.setValue(w.BZ.One(),M);const j=Z.decompose(mM,G,v);this.isValid.setValue(j,M),this.position.setValue(v,M),this.rotationQuaternion.setValue(G,M),this.hc.setValue(mM,M),M._setExecutionVariable(this,"cachedPosition",v),M._setExecutionVariable(this,"cachedRotation",G),M._setExecutionVariable(this,"cachedScaling",mM),M._setExecutionVariable(this,"executionId",M.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,v.g)("FlowGraphMatrixDecompose",j);class B extends x.c{constructor(M){super(M),this.position=this.registerDataInput("position",c.H),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",c.x),this.hc=this.registerDataInput("hc",c.H),this.value=this.registerDataOutput("value",c.m)}_updateOutputs(M){const Z=M._getExecutionVariable(this,"executionId",-1),P=M._getExecutionVariable(this,"cachedMatrix",null);if(Z===M.executionId&&P)this.value.setValue(P,M);else{const Z=w.Matrix.Compose(this.hc.getValue(M),this.rotationQuaternion.getValue(M),this.position.getValue(M));this.value.setValue(Z,M),M._setExecutionVariable(this,"cachedMatrix",Z),M._setExecutionVariable(this,"executionId",M.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,v.g)("FlowGraphMatrixCompose",B)},15602:(M,Z,P)=>{P.d(Z,{c:()=>c});var x=P(15610);class c extends x.e{constructor(M,Z,P,x,c,w){super(P,w),this._operation=x,this._className=c,this.a=this.registerDataInput("a",M),this.b=this.registerDataInput("b",Z)}_doOperation(M){const Z=this.a.getValue(M),P=this.b.getValue(M);return this._operation(Z,P)}getClassName(){return this._className}}},15610:(M,Z,P)=>{P.d(Z,{e:()=>G});var x=P(14093),c=P(14073);const w="cachedOperationValue",v="cachedExecutionId";class G extends x.c{constructor(M,Z){super(Z),this.value=this.registerDataOutput("value",M),this.isValid=this.registerDataOutput("isValid",c.g)}_updateOutputs(M){const Z=M._getExecutionVariable(this,v,-1),P=M._getExecutionVariable(this,w,null);if(void 0!==P&&null!==P&&Z===M.executionId)this.isValid.setValue(!0,M),this.value.setValue(P,M);else try{const Z=this._doOperation(M);if(void 0===Z||null===Z)return void this.isValid.setValue(!1,M);M._setExecutionVariable(this,w,Z),M._setExecutionVariable(this,v,M.executionId),this.value.setValue(Z,M),this.isValid.setValue(!0,M)}catch(x){this.isValid.setValue(!1,M)}}}},15612:(M,Z,P)=>{P.d(Z,{d:()=>c});var x=P(15610);class c extends x.e{constructor(M,Z,P,x,c){super(Z,c),this._operation=P,this._className=x,this.a=this.registerDataInput("a",M)}_doOperation(M){return this._operation(this.a.getValue(M))}getClassName(){return this._className}}}}]);