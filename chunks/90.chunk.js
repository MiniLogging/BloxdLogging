"use strict";(self.z22hkk7o33f=self.z22hkk7o33f||[]).push([[90],{15684:(U,G,C)=>{C.r(G),C.d(G,{FlowGraphDeterminantBlock:()=>O,FlowGraphInvertMatrixBlock:()=>T,FlowGraphMatrixComposeBlock:()=>V,FlowGraphMatrixDecomposeBlock:()=>y,FlowGraphMatrixMultiplicationBlock:()=>D,FlowGraphTransposeBlock:()=>P});var L=C(14154),X=C(14134),l=C(12896),t=C(12850),E=C(15674),K=C(15666);class P extends E.b{constructor(U){super((0,X.V)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),(0,X.V)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),(U=>U.transpose?U.transpose():l.Matrix.Transpose(U)),"FlowGraphTransposeBlock",U)}}(0,t.e)("FlowGraphTransposeBlock",P);class O extends E.b{constructor(U){super((0,X.V)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),X.y,(U=>U.determinant()),"FlowGraphDeterminantBlock",U)}}(0,t.e)("FlowGraphDeterminantBlock",O);class T extends E.b{constructor(U){super((0,X.V)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),(0,X.V)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),(U=>U.inverse?U.inverse():l.Matrix.Invert(U)),"FlowGraphInvertMatrixBlock",U)}}(0,t.e)("FlowGraphInvertMatrixBlock",T);class D extends K.d{constructor(U){super((0,X.V)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),(0,X.V)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),(0,X.V)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),((U,G)=>G.multiply(U)),"FlowGraphMatrixMultiplicationBlock",U)}}(0,t.e)("FlowGraphMatrixMultiplicationBlock",D);class y extends L.b{constructor(U){super(U),this.input=this.registerDataInput("input",X.o),this.position=this.registerDataOutput("position",X.J),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",X.C),this.fE=this.registerDataOutput("fE",X.J),this.isValid=this.registerDataOutput("isValid",X.g,!1)}_updateOutputs(U){const G=U._getExecutionVariable(this,"executionId",-1),C=U._getExecutionVariable(this,"cachedPosition",null),L=U._getExecutionVariable(this,"cachedRotation",null),X=U._getExecutionVariable(this,"cachedScaling",null);if(G===U.executionId&&C&&L&&X)this.position.setValue(C,U),this.rotationQuaternion.setValue(L,U),this.fE.setValue(X,U);else{const G=this.input.getValue(U),t=C||new l.pG,E=L||new l.Quaternion,K=X||new l.pG,P=Math.round(1e4*G.m[3])/1e4,O=Math.round(1e4*G.m[7])/1e4,T=Math.round(1e4*G.m[11])/1e4,D=Math.round(1e4*G.m[15])/1e4;if(0!==P||0!==O||0!==T||1!==D)return this.isValid.setValue(!1,U),this.position.setValue(l.pG.Zero(),U),this.rotationQuaternion.setValue(l.Quaternion.Identity(),U),void this.fE.setValue(l.pG.One(),U);const y=G.decompose(K,E,t);this.isValid.setValue(y,U),this.position.setValue(t,U),this.rotationQuaternion.setValue(E,U),this.fE.setValue(K,U),U._setExecutionVariable(this,"cachedPosition",t),U._setExecutionVariable(this,"cachedRotation",E),U._setExecutionVariable(this,"cachedScaling",K),U._setExecutionVariable(this,"executionId",U.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,t.e)("FlowGraphMatrixDecompose",y);class V extends L.b{constructor(U){super(U),this.position=this.registerDataInput("position",X.J),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",X.C),this.fE=this.registerDataInput("fE",X.J),this.value=this.registerDataOutput("value",X.o)}_updateOutputs(U){const G=U._getExecutionVariable(this,"executionId",-1),C=U._getExecutionVariable(this,"cachedMatrix",null);if(G===U.executionId&&C)this.value.setValue(C,U);else{const G=l.Matrix.Compose(this.fE.getValue(U),this.rotationQuaternion.getValue(U),this.position.getValue(U));this.value.setValue(G,U),U._setExecutionVariable(this,"cachedMatrix",G),U._setExecutionVariable(this,"executionId",U.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,t.e)("FlowGraphMatrixCompose",V)},15666:(U,G,C)=>{C.d(G,{d:()=>X});var L=C(15668);class X extends L.c{constructor(U,G,C,L,X,l){super(C,l),this._operation=L,this._className=X,this.a=this.registerDataInput("a",U),this.b=this.registerDataInput("b",G)}_doOperation(U){const G=this.a.getValue(U),C=this.b.getValue(U);return this._operation(G,C)}getClassName(){return this._className}}},15668:(U,G,C)=>{C.d(G,{c:()=>E});var L=C(14154),X=C(14134);const l="cachedOperationValue",t="cachedExecutionId";class E extends L.b{constructor(U,G){super(G),this.value=this.registerDataOutput("value",U),this.isValid=this.registerDataOutput("isValid",X.g)}_updateOutputs(U){const G=U._getExecutionVariable(this,t,-1),C=U._getExecutionVariable(this,l,null);if(void 0!==C&&null!==C&&G===U.executionId)this.isValid.setValue(!0,U),this.value.setValue(C,U);else try{const G=this._doOperation(U);if(void 0===G||null===G)return void this.isValid.setValue(!1,U);U._setExecutionVariable(this,l,G),U._setExecutionVariable(this,t,U.executionId),this.value.setValue(G,U),this.isValid.setValue(!0,U)}catch(L){this.isValid.setValue(!1,U)}}}},15674:(U,G,C)=>{C.d(G,{b:()=>X});var L=C(15668);class X extends L.c{constructor(U,G,C,L,X){super(G,X),this._operation=C,this._className=L,this.a=this.registerDataInput("a",U)}_doOperation(U){return this._operation(this.a.getValue(U))}getClassName(){return this._className}}}}]);