"use strict";(self.ufnpnb83drd=self.ufnpnb83drd||[]).push([[90],{15610:(E,U,g)=>{g.r(U),g.d(U,{FlowGraphDeterminantBlock:()=>B,FlowGraphInvertMatrixBlock:()=>P,FlowGraphMatrixComposeBlock:()=>d,FlowGraphMatrixDecomposeBlock:()=>f,FlowGraphMatrixMultiplicationBlock:()=>F,FlowGraphTransposeBlock:()=>C});var N=g(14077),L=g(14058),D=g(12334),S=g(12292),u=g(15598),s=g(15587);class C extends u.d{constructor(E){super((0,L.L)((null===E||void 0===E?void 0:E.matrixType)||"Matrix"),(0,L.L)((null===E||void 0===E?void 0:E.matrixType)||"Matrix"),(E=>E.transpose?E.transpose():D.Matrix.Transpose(E)),"FlowGraphTransposeBlock",E)}}(0,S.f)("FlowGraphTransposeBlock",C);class B extends u.d{constructor(E){super((0,L.L)((null===E||void 0===E?void 0:E.matrixType)||"Matrix"),L.t,(E=>E.determinant()),"FlowGraphDeterminantBlock",E)}}(0,S.f)("FlowGraphDeterminantBlock",B);class P extends u.d{constructor(E){super((0,L.L)((null===E||void 0===E?void 0:E.matrixType)||"Matrix"),(0,L.L)((null===E||void 0===E?void 0:E.matrixType)||"Matrix"),(E=>E.inverse?E.inverse():D.Matrix.Invert(E)),"FlowGraphInvertMatrixBlock",E)}}(0,S.f)("FlowGraphInvertMatrixBlock",P);class F extends s.b{constructor(E){super((0,L.L)((null===E||void 0===E?void 0:E.matrixType)||"Matrix"),(0,L.L)((null===E||void 0===E?void 0:E.matrixType)||"Matrix"),(0,L.L)((null===E||void 0===E?void 0:E.matrixType)||"Matrix"),((E,U)=>U.multiply(E)),"FlowGraphMatrixMultiplicationBlock",E)}}(0,S.f)("FlowGraphMatrixMultiplicationBlock",F);class f extends N.b{constructor(E){super(E),this.input=this.registerDataInput("input",L.k),this.position=this.registerDataOutput("position",L.D),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",L.w),this.Iu=this.registerDataOutput("Iu",L.D),this.isValid=this.registerDataOutput("isValid",L.g,!1)}_updateOutputs(E){const U=E._getExecutionVariable(this,"executionId",-1),g=E._getExecutionVariable(this,"cachedPosition",null),N=E._getExecutionVariable(this,"cachedRotation",null),L=E._getExecutionVariable(this,"cachedScaling",null);if(U===E.executionId&&g&&N&&L)this.position.setValue(g,E),this.rotationQuaternion.setValue(N,E),this.Iu.setValue(L,E);else{const U=this.input.getValue(E),S=g||new D.dU,u=N||new D.Quaternion,s=L||new D.dU,C=Math.round(1e4*U.m[3])/1e4,B=Math.round(1e4*U.m[7])/1e4,P=Math.round(1e4*U.m[11])/1e4,F=Math.round(1e4*U.m[15])/1e4;if(0!==C||0!==B||0!==P||1!==F)return this.isValid.setValue(!1,E),this.position.setValue(D.dU.Zero(),E),this.rotationQuaternion.setValue(D.Quaternion.Identity(),E),void this.Iu.setValue(D.dU.One(),E);const f=U.decompose(s,u,S);this.isValid.setValue(f,E),this.position.setValue(S,E),this.rotationQuaternion.setValue(u,E),this.Iu.setValue(s,E),E._setExecutionVariable(this,"cachedPosition",S),E._setExecutionVariable(this,"cachedRotation",u),E._setExecutionVariable(this,"cachedScaling",s),E._setExecutionVariable(this,"executionId",E.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,S.f)("FlowGraphMatrixDecompose",f);class d extends N.b{constructor(E){super(E),this.position=this.registerDataInput("position",L.D),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",L.w),this.Iu=this.registerDataInput("Iu",L.D),this.value=this.registerDataOutput("value",L.k)}_updateOutputs(E){const U=E._getExecutionVariable(this,"executionId",-1),g=E._getExecutionVariable(this,"cachedMatrix",null);if(U===E.executionId&&g)this.value.setValue(g,E);else{const U=D.Matrix.Compose(this.Iu.getValue(E),this.rotationQuaternion.getValue(E),this.position.getValue(E));this.value.setValue(U,E),E._setExecutionVariable(this,"cachedMatrix",U),E._setExecutionVariable(this,"executionId",E.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,S.f)("FlowGraphMatrixCompose",d)},15587:(E,U,g)=>{g.d(U,{b:()=>L});var N=g(15596);class L extends N.b{constructor(E,U,g,N,L,D){super(g,D),this._operation=N,this._className=L,this.a=this.registerDataInput("a",E),this.b=this.registerDataInput("b",U)}_doOperation(E){const U=this.a.getValue(E),g=this.b.getValue(E);return this._operation(U,g)}getClassName(){return this._className}}},15596:(E,U,g)=>{g.d(U,{b:()=>u});var N=g(14077),L=g(14058);const D="cachedOperationValue",S="cachedExecutionId";class u extends N.b{constructor(E,U){super(U),this.value=this.registerDataOutput("value",E),this.isValid=this.registerDataOutput("isValid",L.g)}_updateOutputs(E){const U=E._getExecutionVariable(this,S,-1),g=E._getExecutionVariable(this,D,null);if(void 0!==g&&null!==g&&U===E.executionId)this.isValid.setValue(!0,E),this.value.setValue(g,E);else try{const U=this._doOperation(E);if(void 0===U||null===U)return void this.isValid.setValue(!1,E);E._setExecutionVariable(this,D,U),E._setExecutionVariable(this,S,E.executionId),this.value.setValue(U,E),this.isValid.setValue(!0,E)}catch(N){this.isValid.setValue(!1,E)}}}},15598:(E,U,g)=>{g.d(U,{d:()=>L});var N=g(15596);class L extends N.b{constructor(E,U,g,N,L){super(U,L),this._operation=g,this._className=N,this.a=this.registerDataInput("a",E)}_doOperation(E){return this._operation(this.a.getValue(E))}getClassName(){return this._className}}}}]);