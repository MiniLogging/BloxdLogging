"use strict";(self.h66iwo8dvgq=self.h66iwo8dvgq||[]).push([[90],{15225:(b,X,P)=>{P.r(X),P.d(X,{FlowGraphDeterminantBlock:()=>f,FlowGraphInvertMatrixBlock:()=>O,FlowGraphMatrixComposeBlock:()=>D,FlowGraphMatrixDecomposeBlock:()=>Y,FlowGraphMatrixMultiplicationBlock:()=>e,FlowGraphTransposeBlock:()=>w});var Q=P(13647),S=P(13631),d=P(11834),N=P(11802),a=P(15213),u=P(15202);class w extends a.d{constructor(b){super((0,S.H)((null===b||void 0===b?void 0:b.matrixType)||"Matrix"),(0,S.H)((null===b||void 0===b?void 0:b.matrixType)||"Matrix"),(b=>b.transpose?b.transpose():d.Matrix.Transpose(b)),"FlowGraphTransposeBlock",b)}}(0,N.h)("FlowGraphTransposeBlock",w);class f extends a.d{constructor(b){super((0,S.H)((null===b||void 0===b?void 0:b.matrixType)||"Matrix"),S.t,(b=>b.determinant()),"FlowGraphDeterminantBlock",b)}}(0,N.h)("FlowGraphDeterminantBlock",f);class O extends a.d{constructor(b){super((0,S.H)((null===b||void 0===b?void 0:b.matrixType)||"Matrix"),(0,S.H)((null===b||void 0===b?void 0:b.matrixType)||"Matrix"),(b=>b.inverse?b.inverse():d.Matrix.Invert(b)),"FlowGraphInvertMatrixBlock",b)}}(0,N.h)("FlowGraphInvertMatrixBlock",O);class e extends u.b{constructor(b){super((0,S.H)((null===b||void 0===b?void 0:b.matrixType)||"Matrix"),(0,S.H)((null===b||void 0===b?void 0:b.matrixType)||"Matrix"),(0,S.H)((null===b||void 0===b?void 0:b.matrixType)||"Matrix"),((b,X)=>X.multiply(b)),"FlowGraphMatrixMultiplicationBlock",b)}}(0,N.h)("FlowGraphMatrixMultiplicationBlock",e);class Y extends Q.c{constructor(b){super(b),this.input=this.registerDataInput("input",S.k),this.position=this.registerDataOutput("position",S.B),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",S.u),this.Fd=this.registerDataOutput("Fd",S.B),this.isValid=this.registerDataOutput("isValid",S.h,!1)}_updateOutputs(b){const X=b._getExecutionVariable(this,"executionId",-1),P=b._getExecutionVariable(this,"cachedPosition",null),Q=b._getExecutionVariable(this,"cachedRotation",null),S=b._getExecutionVariable(this,"cachedScaling",null);if(X===b.executionId&&P&&Q&&S)this.position.setValue(P,b),this.rotationQuaternion.setValue(Q,b),this.Fd.setValue(S,b);else{const X=this.input.getValue(b),N=P||new d.tX,a=Q||new d.Quaternion,u=S||new d.tX,w=Math.round(1e4*X.m[3])/1e4,f=Math.round(1e4*X.m[7])/1e4,O=Math.round(1e4*X.m[11])/1e4,e=Math.round(1e4*X.m[15])/1e4;if(0!==w||0!==f||0!==O||1!==e)return this.isValid.setValue(!1,b),this.position.setValue(d.tX.Zero(),b),this.rotationQuaternion.setValue(d.Quaternion.Identity(),b),void this.Fd.setValue(d.tX.One(),b);const Y=X.decompose(u,a,N);this.isValid.setValue(Y,b),this.position.setValue(N,b),this.rotationQuaternion.setValue(a,b),this.Fd.setValue(u,b),b._setExecutionVariable(this,"cachedPosition",N),b._setExecutionVariable(this,"cachedRotation",a),b._setExecutionVariable(this,"cachedScaling",u),b._setExecutionVariable(this,"executionId",b.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,N.h)("FlowGraphMatrixDecompose",Y);class D extends Q.c{constructor(b){super(b),this.position=this.registerDataInput("position",S.B),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",S.u),this.Fd=this.registerDataInput("Fd",S.B),this.value=this.registerDataOutput("value",S.k)}_updateOutputs(b){const X=b._getExecutionVariable(this,"executionId",-1),P=b._getExecutionVariable(this,"cachedMatrix",null);if(X===b.executionId&&P)this.value.setValue(P,b);else{const X=d.Matrix.Compose(this.Fd.getValue(b),this.rotationQuaternion.getValue(b),this.position.getValue(b));this.value.setValue(X,b),b._setExecutionVariable(this,"cachedMatrix",X),b._setExecutionVariable(this,"executionId",b.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,N.h)("FlowGraphMatrixCompose",D)},15202:(b,X,P)=>{P.d(X,{b:()=>S});var Q=P(15207);class S extends Q.d{constructor(b,X,P,Q,S,d){super(P,d),this._operation=Q,this._className=S,this.a=this.registerDataInput("a",b),this.b=this.registerDataInput("b",X)}_doOperation(b){const X=this.a.getValue(b),P=this.b.getValue(b);return this._operation(X,P)}getClassName(){return this._className}}},15207:(b,X,P)=>{P.d(X,{d:()=>a});var Q=P(13647),S=P(13631);const d="cachedOperationValue",N="cachedExecutionId";class a extends Q.c{constructor(b,X){super(X),this.value=this.registerDataOutput("value",b),this.isValid=this.registerDataOutput("isValid",S.h)}_updateOutputs(b){const X=b._getExecutionVariable(this,N,-1),P=b._getExecutionVariable(this,d,null);if(void 0!==P&&null!==P&&X===b.executionId)this.isValid.setValue(!0,b),this.value.setValue(P,b);else try{const X=this._doOperation(b);if(void 0===X||null===X)return void this.isValid.setValue(!1,b);b._setExecutionVariable(this,d,X),b._setExecutionVariable(this,N,b.executionId),this.value.setValue(X,b),this.isValid.setValue(!0,b)}catch(Q){this.isValid.setValue(!1,b)}}}},15213:(b,X,P)=>{P.d(X,{d:()=>S});var Q=P(15207);class S extends Q.d{constructor(b,X,P,Q,S){super(X,S),this._operation=P,this._className=Q,this.a=this.registerDataInput("a",b)}_doOperation(b){return this._operation(this.a.getValue(b))}getClassName(){return this._className}}}}]);