"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[90],{14284:(v,d,Q)=>{Q.r(d),Q.d(d,{FlowGraphSwitchBlock:()=>F});var n=Q(12929),T=Q(12908),L=Q(591),e=Q(12950);class F extends n.b{constructor(v){super(v),this.config=v,this.default=this._registerSignalOutput("default"),this._caseToOutputFlow=new Map,this.case=this.registerDataInput("case",T.c);const d=this.config.cases||[];for(const Q of d)this._caseToOutputFlow.set(Q,this._registerSignalOutput(`out_${Q}`))}_execute(v,d){const Q=this.case.getValue(v);let n;n=(0,e.y)(Q)?this._getOutputFlowForCase((0,e.v)(Q)):this._getOutputFlowForCase(Q),n?n._activateSignal(v):this.default._activateSignal(v)}addCase(v){this.config.cases.includes(v)||(this.config.cases.push(v),this._caseToOutputFlow.set(v,this._registerSignalOutput(`out_${v}`)))}removeCase(v){if(!this.config.cases.includes(v))return;const d=this.config.cases.indexOf(v);this.config.cases.splice(d,1),this._caseToOutputFlow.delete(v)}_getOutputFlowForCase(v){return this._caseToOutputFlow.get(v)}getClassName(){return"FlowGraphSwitchBlock"}serialize(v){super.serialize(v),v.cases=this.config.cases}}(0,L.f)("FlowGraphSwitchBlock",F)}}]);