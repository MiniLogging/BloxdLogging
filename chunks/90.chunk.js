"use strict";(self.ksd6jhs1yr=self.ksd6jhs1yr||[]).push([[90],{15632:(C,c,d)=>{d.r(c),d.d(c,{FlowGraphDeterminantBlock:()=>g,FlowGraphInvertMatrixBlock:()=>k,FlowGraphMatrixComposeBlock:()=>A,FlowGraphMatrixDecomposeBlock:()=>U,FlowGraphMatrixMultiplicationBlock:()=>Z,FlowGraphTransposeBlock:()=>j});var b=d(14158),X=d(14126),P=d(12403),V=d(12345),R=d(15618),p=d(15608);class j extends R.c{constructor(C){super((0,X.H)((null===C||void 0===C?void 0:C.matrixType)||"Matrix"),(0,X.H)((null===C||void 0===C?void 0:C.matrixType)||"Matrix"),(C=>C.transpose?C.transpose():P.Matrix.Transpose(C)),"FlowGraphTransposeBlock",C)}}(0,V.e)("FlowGraphTransposeBlock",j);class g extends R.c{constructor(C){super((0,X.H)((null===C||void 0===C?void 0:C.matrixType)||"Matrix"),X.q,(C=>C.determinant()),"FlowGraphDeterminantBlock",C)}}(0,V.e)("FlowGraphDeterminantBlock",g);class k extends R.c{constructor(C){super((0,X.H)((null===C||void 0===C?void 0:C.matrixType)||"Matrix"),(0,X.H)((null===C||void 0===C?void 0:C.matrixType)||"Matrix"),(C=>C.inverse?C.inverse():P.Matrix.Invert(C)),"FlowGraphInvertMatrixBlock",C)}}(0,V.e)("FlowGraphInvertMatrixBlock",k);class Z extends p.d{constructor(C){super((0,X.H)((null===C||void 0===C?void 0:C.matrixType)||"Matrix"),(0,X.H)((null===C||void 0===C?void 0:C.matrixType)||"Matrix"),(0,X.H)((null===C||void 0===C?void 0:C.matrixType)||"Matrix"),((C,c)=>c.multiply(C)),"FlowGraphMatrixMultiplicationBlock",C)}}(0,V.e)("FlowGraphMatrixMultiplicationBlock",Z);class U extends b.e{constructor(C){super(C),this.input=this.registerDataInput("input",X.l),this.position=this.registerDataOutput("position",X.w),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",X.r),this.xc=this.registerDataOutput("xc",X.w),this.isValid=this.registerDataOutput("isValid",X.e,!1)}_updateOutputs(C){const c=C._getExecutionVariable(this,"executionId",-1),d=C._getExecutionVariable(this,"cachedPosition",null),b=C._getExecutionVariable(this,"cachedRotation",null),X=C._getExecutionVariable(this,"cachedScaling",null);if(c===C.executionId&&d&&b&&X)this.position.setValue(d,C),this.rotationQuaternion.setValue(b,C),this.xc.setValue(X,C);else{const c=this.input.getValue(C),V=d||new P.dd,R=b||new P.Quaternion,p=X||new P.dd,j=Math.round(1e4*c.m[3])/1e4,g=Math.round(1e4*c.m[7])/1e4,k=Math.round(1e4*c.m[11])/1e4,Z=Math.round(1e4*c.m[15])/1e4;if(0!==j||0!==g||0!==k||1!==Z)return this.isValid.setValue(!1,C),this.position.setValue(P.dd.Zero(),C),this.rotationQuaternion.setValue(P.Quaternion.Identity(),C),void this.xc.setValue(P.dd.One(),C);const U=c.decompose(p,R,V);this.isValid.setValue(U,C),this.position.setValue(V,C),this.rotationQuaternion.setValue(R,C),this.xc.setValue(p,C),C._setExecutionVariable(this,"cachedPosition",V),C._setExecutionVariable(this,"cachedRotation",R),C._setExecutionVariable(this,"cachedScaling",p),C._setExecutionVariable(this,"executionId",C.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,V.e)("FlowGraphMatrixDecompose",U);class A extends b.e{constructor(C){super(C),this.position=this.registerDataInput("position",X.w),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",X.r),this.xc=this.registerDataInput("xc",X.w),this.value=this.registerDataOutput("value",X.l)}_updateOutputs(C){const c=C._getExecutionVariable(this,"executionId",-1),d=C._getExecutionVariable(this,"cachedMatrix",null);if(c===C.executionId&&d)this.value.setValue(d,C);else{const c=P.Matrix.Compose(this.xc.getValue(C),this.rotationQuaternion.getValue(C),this.position.getValue(C));this.value.setValue(c,C),C._setExecutionVariable(this,"cachedMatrix",c),C._setExecutionVariable(this,"executionId",C.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,V.e)("FlowGraphMatrixCompose",A)},15608:(C,c,d)=>{d.d(c,{d:()=>X});var b=d(15611);class X extends b.e{constructor(C,c,d,b,X,P){super(d,P),this._operation=b,this._className=X,this.a=this.registerDataInput("a",C),this.b=this.registerDataInput("b",c)}_doOperation(C){const c=this.a.getValue(C),d=this.b.getValue(C);return this._operation(c,d)}getClassName(){return this._className}}},15611:(C,c,d)=>{d.d(c,{e:()=>R});var b=d(14158),X=d(14126);const P="cachedOperationValue",V="cachedExecutionId";class R extends b.e{constructor(C,c){super(c),this.value=this.registerDataOutput("value",C),this.isValid=this.registerDataOutput("isValid",X.e)}_updateOutputs(C){const c=C._getExecutionVariable(this,V,-1),d=C._getExecutionVariable(this,P,null);if(void 0!==d&&null!==d&&c===C.executionId)this.isValid.setValue(!0,C),this.value.setValue(d,C);else try{const c=this._doOperation(C);if(void 0===c||null===c)return void this.isValid.setValue(!1,C);C._setExecutionVariable(this,P,c),C._setExecutionVariable(this,V,C.executionId),this.value.setValue(c,C),this.isValid.setValue(!0,C)}catch(b){this.isValid.setValue(!1,C)}}}},15618:(C,c,d)=>{d.d(c,{c:()=>X});var b=d(15611);class X extends b.e{constructor(C,c,d,b,X){super(c,X),this._operation=d,this._className=b,this.a=this.registerDataInput("a",C)}_doOperation(C){return this._operation(this.a.getValue(C))}getClassName(){return this._className}}}}]);