"use strict";(self.zy41qorie9=self.zy41qorie9||[]).push([[90],{15395:(Z,l,C)=>{C.r(l),C.d(l,{FlowGraphDeterminantBlock:()=>d,FlowGraphInvertMatrixBlock:()=>E,FlowGraphMatrixComposeBlock:()=>q,FlowGraphMatrixDecomposeBlock:()=>a,FlowGraphMatrixMultiplicationBlock:()=>G,FlowGraphTransposeBlock:()=>J});var B=C(13853),x=C(13830),b=C(12442),K=C(12400),f=C(15383),W=C(15370);class J extends f.c{constructor(Z){super((0,x.I)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),(0,x.I)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),(Z=>Z.transpose?Z.transpose():b.Matrix.Transpose(Z)),"FlowGraphTransposeBlock",Z)}}(0,K.c)("FlowGraphTransposeBlock",J);class d extends f.c{constructor(Z){super((0,x.I)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),x.o,(Z=>Z.determinant()),"FlowGraphDeterminantBlock",Z)}}(0,K.c)("FlowGraphDeterminantBlock",d);class E extends f.c{constructor(Z){super((0,x.I)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),(0,x.I)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),(Z=>Z.inverse?Z.inverse():b.Matrix.Invert(Z)),"FlowGraphInvertMatrixBlock",Z)}}(0,K.c)("FlowGraphInvertMatrixBlock",E);class G extends W.b{constructor(Z){super((0,x.I)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),(0,x.I)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),(0,x.I)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),((Z,l)=>l.multiply(Z)),"FlowGraphMatrixMultiplicationBlock",Z)}}(0,K.c)("FlowGraphMatrixMultiplicationBlock",G);class a extends B.d{constructor(Z){super(Z),this.input=this.registerDataInput("input",x.k),this.position=this.registerDataOutput("position",x.y),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",x.p),this.eb=this.registerDataOutput("eb",x.y),this.isValid=this.registerDataOutput("isValid",x.e,!1)}_updateOutputs(Z){const l=Z._getExecutionVariable(this,"executionId",-1),C=Z._getExecutionVariable(this,"cachedPosition",null),B=Z._getExecutionVariable(this,"cachedRotation",null),x=Z._getExecutionVariable(this,"cachedScaling",null);if(l===Z.executionId&&C&&B&&x)this.position.setValue(C,Z),this.rotationQuaternion.setValue(B,Z),this.eb.setValue(x,Z);else{const l=this.input.getValue(Z),K=C||new b.ql,f=B||new b.Quaternion,W=x||new b.ql,J=Math.round(1e4*l.m[3])/1e4,d=Math.round(1e4*l.m[7])/1e4,E=Math.round(1e4*l.m[11])/1e4,G=Math.round(1e4*l.m[15])/1e4;if(0!==J||0!==d||0!==E||1!==G)return this.isValid.setValue(!1,Z),this.position.setValue(b.ql.Zero(),Z),this.rotationQuaternion.setValue(b.Quaternion.Identity(),Z),void this.eb.setValue(b.ql.One(),Z);const a=l.decompose(W,f,K);this.isValid.setValue(a,Z),this.position.setValue(K,Z),this.rotationQuaternion.setValue(f,Z),this.eb.setValue(W,Z),Z._setExecutionVariable(this,"cachedPosition",K),Z._setExecutionVariable(this,"cachedRotation",f),Z._setExecutionVariable(this,"cachedScaling",W),Z._setExecutionVariable(this,"executionId",Z.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,K.c)("FlowGraphMatrixDecompose",a);class q extends B.d{constructor(Z){super(Z),this.position=this.registerDataInput("position",x.y),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",x.p),this.eb=this.registerDataInput("eb",x.y),this.value=this.registerDataOutput("value",x.k)}_updateOutputs(Z){const l=Z._getExecutionVariable(this,"executionId",-1),C=Z._getExecutionVariable(this,"cachedMatrix",null);if(l===Z.executionId&&C)this.value.setValue(C,Z);else{const l=b.Matrix.Compose(this.eb.getValue(Z),this.rotationQuaternion.getValue(Z),this.position.getValue(Z));this.value.setValue(l,Z),Z._setExecutionVariable(this,"cachedMatrix",l),Z._setExecutionVariable(this,"executionId",Z.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,K.c)("FlowGraphMatrixCompose",q)},15370:(Z,l,C)=>{C.d(l,{b:()=>x});var B=C(15377);class x extends B.b{constructor(Z,l,C,B,x,b){super(C,b),this._operation=B,this._className=x,this.a=this.registerDataInput("a",Z),this.b=this.registerDataInput("b",l)}_doOperation(Z){const l=this.a.getValue(Z),C=this.b.getValue(Z);return this._operation(l,C)}getClassName(){return this._className}}},15377:(Z,l,C)=>{C.d(l,{b:()=>f});var B=C(13853),x=C(13830);const b="cachedOperationValue",K="cachedExecutionId";class f extends B.d{constructor(Z,l){super(l),this.value=this.registerDataOutput("value",Z),this.isValid=this.registerDataOutput("isValid",x.e)}_updateOutputs(Z){const l=Z._getExecutionVariable(this,K,-1),C=Z._getExecutionVariable(this,b,null);if(void 0!==C&&null!==C&&l===Z.executionId)this.isValid.setValue(!0,Z),this.value.setValue(C,Z);else try{const l=this._doOperation(Z);if(void 0===l||null===l)return void this.isValid.setValue(!1,Z);Z._setExecutionVariable(this,b,l),Z._setExecutionVariable(this,K,Z.executionId),this.value.setValue(l,Z),this.isValid.setValue(!0,Z)}catch(B){this.isValid.setValue(!1,Z)}}}},15383:(Z,l,C)=>{C.d(l,{c:()=>x});var B=C(15377);class x extends B.b{constructor(Z,l,C,B,x){super(l,x),this._operation=C,this._className=B,this.a=this.registerDataInput("a",Z)}_doOperation(Z){return this._operation(this.a.getValue(Z))}getClassName(){return this._className}}}}]);