"use strict";(self.fwuvyyymhp8=self.fwuvyyymhp8||[]).push([[90],{15609:(N,U,V)=>{V.r(U),V.d(U,{FlowGraphDeterminantBlock:()=>E,FlowGraphInvertMatrixBlock:()=>p,FlowGraphMatrixComposeBlock:()=>C,FlowGraphMatrixDecomposeBlock:()=>B,FlowGraphMatrixMultiplicationBlock:()=>k,FlowGraphTransposeBlock:()=>S});var A=V(14058),t=V(14036),n=V(12383),q=V(12344),i=V(15599),z=V(15587);class S extends i.e{constructor(N){super((0,t.F)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),(0,t.F)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),(N=>N.transpose?N.transpose():n.Matrix.Transpose(N)),"FlowGraphTransposeBlock",N)}}(0,q.e)("FlowGraphTransposeBlock",S);class E extends i.e{constructor(N){super((0,t.F)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),t.p,(N=>N.determinant()),"FlowGraphDeterminantBlock",N)}}(0,q.e)("FlowGraphDeterminantBlock",E);class p extends i.e{constructor(N){super((0,t.F)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),(0,t.F)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),(N=>N.inverse?N.inverse():n.Matrix.Invert(N)),"FlowGraphInvertMatrixBlock",N)}}(0,q.e)("FlowGraphInvertMatrixBlock",p);class k extends z.b{constructor(N){super((0,t.F)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),(0,t.F)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),(0,t.F)((null===N||void 0===N?void 0:N.matrixType)||"Matrix"),((N,U)=>U.multiply(N)),"FlowGraphMatrixMultiplicationBlock",N)}}(0,q.e)("FlowGraphMatrixMultiplicationBlock",k);class B extends A.c{constructor(N){super(N),this.input=this.registerDataInput("input",t.i),this.position=this.registerDataOutput("position",t.y),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",t.q),this.ci=this.registerDataOutput("ci",t.y),this.isValid=this.registerDataOutput("isValid",t.d,!1)}_updateOutputs(N){const U=N._getExecutionVariable(this,"executionId",-1),V=N._getExecutionVariable(this,"cachedPosition",null),A=N._getExecutionVariable(this,"cachedRotation",null),t=N._getExecutionVariable(this,"cachedScaling",null);if(U===N.executionId&&V&&A&&t)this.position.setValue(V,N),this.rotationQuaternion.setValue(A,N),this.ci.setValue(t,N);else{const U=this.input.getValue(N),q=V||new n.CU,i=A||new n.Quaternion,z=t||new n.CU,S=Math.round(1e4*U.m[3])/1e4,E=Math.round(1e4*U.m[7])/1e4,p=Math.round(1e4*U.m[11])/1e4,k=Math.round(1e4*U.m[15])/1e4;if(0!==S||0!==E||0!==p||1!==k)return this.isValid.setValue(!1,N),this.position.setValue(n.CU.Zero(),N),this.rotationQuaternion.setValue(n.Quaternion.Identity(),N),void this.ci.setValue(n.CU.One(),N);const B=U.decompose(z,i,q);this.isValid.setValue(B,N),this.position.setValue(q,N),this.rotationQuaternion.setValue(i,N),this.ci.setValue(z,N),N._setExecutionVariable(this,"cachedPosition",q),N._setExecutionVariable(this,"cachedRotation",i),N._setExecutionVariable(this,"cachedScaling",z),N._setExecutionVariable(this,"executionId",N.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,q.e)("FlowGraphMatrixDecompose",B);class C extends A.c{constructor(N){super(N),this.position=this.registerDataInput("position",t.y),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",t.q),this.ci=this.registerDataInput("ci",t.y),this.value=this.registerDataOutput("value",t.i)}_updateOutputs(N){const U=N._getExecutionVariable(this,"executionId",-1),V=N._getExecutionVariable(this,"cachedMatrix",null);if(U===N.executionId&&V)this.value.setValue(V,N);else{const U=n.Matrix.Compose(this.ci.getValue(N),this.rotationQuaternion.getValue(N),this.position.getValue(N));this.value.setValue(U,N),N._setExecutionVariable(this,"cachedMatrix",U),N._setExecutionVariable(this,"executionId",N.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,q.e)("FlowGraphMatrixCompose",C)},15587:(N,U,V)=>{V.d(U,{b:()=>t});var A=V(15590);class t extends A.c{constructor(N,U,V,A,t,n){super(V,n),this._operation=A,this._className=t,this.a=this.registerDataInput("a",N),this.b=this.registerDataInput("b",U)}_doOperation(N){const U=this.a.getValue(N),V=this.b.getValue(N);return this._operation(U,V)}getClassName(){return this._className}}},15590:(N,U,V)=>{V.d(U,{c:()=>i});var A=V(14058),t=V(14036);const n="cachedOperationValue",q="cachedExecutionId";class i extends A.c{constructor(N,U){super(U),this.value=this.registerDataOutput("value",N),this.isValid=this.registerDataOutput("isValid",t.d)}_updateOutputs(N){const U=N._getExecutionVariable(this,q,-1),V=N._getExecutionVariable(this,n,null);if(void 0!==V&&null!==V&&U===N.executionId)this.isValid.setValue(!0,N),this.value.setValue(V,N);else try{const U=this._doOperation(N);if(void 0===U||null===U)return void this.isValid.setValue(!1,N);N._setExecutionVariable(this,n,U),N._setExecutionVariable(this,q,N.executionId),this.value.setValue(U,N),this.isValid.setValue(!0,N)}catch(A){this.isValid.setValue(!1,N)}}}},15599:(N,U,V)=>{V.d(U,{e:()=>t});var A=V(15590);class t extends A.c{constructor(N,U,V,A,t){super(U,t),this._operation=V,this._className=A,this.a=this.registerDataInput("a",N)}_doOperation(N){return this._operation(this.a.getValue(N))}getClassName(){return this._className}}}}]);