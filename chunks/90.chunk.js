"use strict";(self.qbp2s7qydk=self.qbp2s7qydk||[]).push([[90],{15869:(M,A,O)=>{O.r(A),O.d(A,{FlowGraphDeterminantBlock:()=>g,FlowGraphInvertMatrixBlock:()=>e,FlowGraphMatrixComposeBlock:()=>K,FlowGraphMatrixDecomposeBlock:()=>J,FlowGraphMatrixMultiplicationBlock:()=>T,FlowGraphTransposeBlock:()=>B});var S=O(14255),z=O(14238),Q=O(12970),X=O(12919),c=O(15858),j=O(15842);class B extends c.e{constructor(M){super((0,z.P)((null===M||void 0===M?void 0:M.matrixType)||"Matrix"),(0,z.P)((null===M||void 0===M?void 0:M.matrixType)||"Matrix"),(M=>M.transpose?M.transpose():Q.Matrix.Transpose(M)),"FlowGraphTransposeBlock",M)}}(0,X.g)("FlowGraphTransposeBlock",B);class g extends c.e{constructor(M){super((0,z.P)((null===M||void 0===M?void 0:M.matrixType)||"Matrix"),z.t,(M=>M.determinant()),"FlowGraphDeterminantBlock",M)}}(0,X.g)("FlowGraphDeterminantBlock",g);class e extends c.e{constructor(M){super((0,z.P)((null===M||void 0===M?void 0:M.matrixType)||"Matrix"),(0,z.P)((null===M||void 0===M?void 0:M.matrixType)||"Matrix"),(M=>M.inverse?M.inverse():Q.Matrix.Invert(M)),"FlowGraphInvertMatrixBlock",M)}}(0,X.g)("FlowGraphInvertMatrixBlock",e);class T extends j.b{constructor(M){super((0,z.P)((null===M||void 0===M?void 0:M.matrixType)||"Matrix"),(0,z.P)((null===M||void 0===M?void 0:M.matrixType)||"Matrix"),(0,z.P)((null===M||void 0===M?void 0:M.matrixType)||"Matrix"),((M,A)=>A.multiply(M)),"FlowGraphMatrixMultiplicationBlock",M)}}(0,X.g)("FlowGraphMatrixMultiplicationBlock",T);class J extends S.c{constructor(M){super(M),this.input=this.registerDataInput("input",z.k),this.position=this.registerDataOutput("position",z.D),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",z.v),this.Ec=this.registerDataOutput("Ec",z.D),this.isValid=this.registerDataOutput("isValid",z.f,!1)}_updateOutputs(M){const A=M._getExecutionVariable(this,"executionId",-1),O=M._getExecutionVariable(this,"cachedPosition",null),S=M._getExecutionVariable(this,"cachedRotation",null),z=M._getExecutionVariable(this,"cachedScaling",null);if(A===M.executionId&&O&&S&&z)this.position.setValue(O,M),this.rotationQuaternion.setValue(S,M),this.Ec.setValue(z,M);else{const A=this.input.getValue(M),X=O||new Q.GA,c=S||new Q.Quaternion,j=z||new Q.GA,B=Math.round(1e4*A.m[3])/1e4,g=Math.round(1e4*A.m[7])/1e4,e=Math.round(1e4*A.m[11])/1e4,T=Math.round(1e4*A.m[15])/1e4;if(0!==B||0!==g||0!==e||1!==T)return this.isValid.setValue(!1,M),this.position.setValue(Q.GA.Zero(),M),this.rotationQuaternion.setValue(Q.Quaternion.Identity(),M),void this.Ec.setValue(Q.GA.One(),M);const J=A.decompose(j,c,X);this.isValid.setValue(J,M),this.position.setValue(X,M),this.rotationQuaternion.setValue(c,M),this.Ec.setValue(j,M),M._setExecutionVariable(this,"cachedPosition",X),M._setExecutionVariable(this,"cachedRotation",c),M._setExecutionVariable(this,"cachedScaling",j),M._setExecutionVariable(this,"executionId",M.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,X.g)("FlowGraphMatrixDecompose",J);class K extends S.c{constructor(M){super(M),this.position=this.registerDataInput("position",z.D),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",z.v),this.Ec=this.registerDataInput("Ec",z.D),this.value=this.registerDataOutput("value",z.k)}_updateOutputs(M){const A=M._getExecutionVariable(this,"executionId",-1),O=M._getExecutionVariable(this,"cachedMatrix",null);if(A===M.executionId&&O)this.value.setValue(O,M);else{const A=Q.Matrix.Compose(this.Ec.getValue(M),this.rotationQuaternion.getValue(M),this.position.getValue(M));this.value.setValue(A,M),M._setExecutionVariable(this,"cachedMatrix",A),M._setExecutionVariable(this,"executionId",M.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,X.g)("FlowGraphMatrixCompose",K)},15842:(M,A,O)=>{O.d(A,{b:()=>z});var S=O(15851);class z extends S.c{constructor(M,A,O,S,z,Q){super(O,Q),this._operation=S,this._className=z,this.a=this.registerDataInput("a",M),this.b=this.registerDataInput("b",A)}_doOperation(M){const A=this.a.getValue(M),O=this.b.getValue(M);return this._operation(A,O)}getClassName(){return this._className}}},15851:(M,A,O)=>{O.d(A,{c:()=>c});var S=O(14255),z=O(14238);const Q="cachedOperationValue",X="cachedExecutionId";class c extends S.c{constructor(M,A){super(A),this.value=this.registerDataOutput("value",M),this.isValid=this.registerDataOutput("isValid",z.f)}_updateOutputs(M){const A=M._getExecutionVariable(this,X,-1),O=M._getExecutionVariable(this,Q,null);if(void 0!==O&&null!==O&&A===M.executionId)this.isValid.setValue(!0,M),this.value.setValue(O,M);else try{const A=this._doOperation(M);if(void 0===A||null===A)return void this.isValid.setValue(!1,M);M._setExecutionVariable(this,Q,A),M._setExecutionVariable(this,X,M.executionId),this.value.setValue(A,M),this.isValid.setValue(!0,M)}catch(S){this.isValid.setValue(!1,M)}}}},15858:(M,A,O)=>{O.d(A,{e:()=>z});var S=O(15851);class z extends S.c{constructor(M,A,O,S,z){super(A,z),this._operation=O,this._className=S,this.a=this.registerDataInput("a",M)}_doOperation(M){return this._operation(this.a.getValue(M))}getClassName(){return this._className}}}}]);