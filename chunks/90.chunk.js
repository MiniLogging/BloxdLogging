"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[90],{14422:(B,I,C)=>{C.r(I),C.d(I,{FlowGraphDeterminantBlock:()=>N,FlowGraphInvertMatrixBlock:()=>R,FlowGraphMatrixComposeBlock:()=>k,FlowGraphMatrixDecomposeBlock:()=>F,FlowGraphMatrixMultiplicationBlock:()=>H,FlowGraphTransposeBlock:()=>g});var M=C(12927),x=C(12901),y=C(11194),f=C(11149),L=C(14415),e=C(14404);class g extends L.e{constructor(B){super((0,x.H)((null===B||void 0===B?void 0:B.matrixType)||"Matrix"),(0,x.H)((null===B||void 0===B?void 0:B.matrixType)||"Matrix"),(B=>B.transpose?B.transpose():y.Matrix.Transpose(B)),"FlowGraphTransposeBlock",B)}}(0,f.h)("FlowGraphTransposeBlock",g);class N extends L.e{constructor(B){super((0,x.H)((null===B||void 0===B?void 0:B.matrixType)||"Matrix"),x.m,(B=>B.determinant()),"FlowGraphDeterminantBlock",B)}}(0,f.h)("FlowGraphDeterminantBlock",N);class R extends L.e{constructor(B){super((0,x.H)((null===B||void 0===B?void 0:B.matrixType)||"Matrix"),(0,x.H)((null===B||void 0===B?void 0:B.matrixType)||"Matrix"),(B=>B.inverse?B.inverse():y.Matrix.Invert(B)),"FlowGraphInvertMatrixBlock",B)}}(0,f.h)("FlowGraphInvertMatrixBlock",R);class H extends e.d{constructor(B){super((0,x.H)((null===B||void 0===B?void 0:B.matrixType)||"Matrix"),(0,x.H)((null===B||void 0===B?void 0:B.matrixType)||"Matrix"),(0,x.H)((null===B||void 0===B?void 0:B.matrixType)||"Matrix"),((B,I)=>I.multiply(B)),"FlowGraphMatrixMultiplicationBlock",B)}}(0,f.h)("FlowGraphMatrixMultiplicationBlock",H);class F extends M.e{constructor(B){super(B),this.input=this.registerDataInput("input",x.g),this.position=this.registerDataOutput("position",x.x),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",x.p),this.Xf=this.registerDataOutput("Xf",x.x),this.isValid=this.registerDataOutput("isValid",x.e,!1)}_updateOutputs(B){const I=B._getExecutionVariable(this,"executionId",-1),C=B._getExecutionVariable(this,"cachedPosition",null),M=B._getExecutionVariable(this,"cachedRotation",null),x=B._getExecutionVariable(this,"cachedScaling",null);if(I===B.executionId&&C&&M&&x)this.position.setValue(C,B),this.rotationQuaternion.setValue(M,B),this.Xf.setValue(x,B);else{const I=this.input.getValue(B),f=C||new y.HI,L=M||new y.Quaternion,e=x||new y.HI,g=Math.round(1e4*I.m[3])/1e4,N=Math.round(1e4*I.m[7])/1e4,R=Math.round(1e4*I.m[11])/1e4,H=Math.round(1e4*I.m[15])/1e4;if(0!==g||0!==N||0!==R||1!==H)return this.isValid.setValue(!1,B),this.position.setValue(y.HI.Zero(),B),this.rotationQuaternion.setValue(y.Quaternion.Identity(),B),void this.Xf.setValue(y.HI.One(),B);const F=I.decompose(e,L,f);this.isValid.setValue(F,B),this.position.setValue(f,B),this.rotationQuaternion.setValue(L,B),this.Xf.setValue(e,B),B._setExecutionVariable(this,"cachedPosition",f),B._setExecutionVariable(this,"cachedRotation",L),B._setExecutionVariable(this,"cachedScaling",e),B._setExecutionVariable(this,"executionId",B.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,f.h)("FlowGraphMatrixDecompose",F);class k extends M.e{constructor(B){super(B),this.position=this.registerDataInput("position",x.x),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",x.p),this.Xf=this.registerDataInput("Xf",x.x),this.value=this.registerDataOutput("value",x.g)}_updateOutputs(B){const I=B._getExecutionVariable(this,"executionId",-1),C=B._getExecutionVariable(this,"cachedMatrix",null);if(I===B.executionId&&C)this.value.setValue(C,B);else{const I=y.Matrix.Compose(this.Xf.getValue(B),this.rotationQuaternion.getValue(B),this.position.getValue(B));this.value.setValue(I,B),B._setExecutionVariable(this,"cachedMatrix",I),B._setExecutionVariable(this,"executionId",B.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,f.h)("FlowGraphMatrixCompose",k)},14404:(B,I,C)=>{C.d(I,{d:()=>x});var M=C(14408);class x extends M.b{constructor(B,I,C,M,x,y){super(C,y),this._operation=M,this._className=x,this.a=this.registerDataInput("a",B),this.b=this.registerDataInput("b",I)}_doOperation(B){const I=this.a.getValue(B),C=this.b.getValue(B);return this._operation(I,C)}getClassName(){return this._className}}},14408:(B,I,C)=>{C.d(I,{b:()=>L});var M=C(12927),x=C(12901);const y="cachedOperationValue",f="cachedExecutionId";class L extends M.e{constructor(B,I){super(I),this.value=this.registerDataOutput("value",B),this.isValid=this.registerDataOutput("isValid",x.e)}_updateOutputs(B){const I=B._getExecutionVariable(this,f,-1),C=B._getExecutionVariable(this,y,null);if(void 0!==C&&null!==C&&I===B.executionId)this.isValid.setValue(!0,B),this.value.setValue(C,B);else try{const I=this._doOperation(B);if(void 0===I||null===I)return void this.isValid.setValue(!1,B);B._setExecutionVariable(this,y,I),B._setExecutionVariable(this,f,B.executionId),this.value.setValue(I,B),this.isValid.setValue(!0,B)}catch(M){this.isValid.setValue(!1,B)}}}},14415:(B,I,C)=>{C.d(I,{e:()=>x});var M=C(14408);class x extends M.b{constructor(B,I,C,M,x){super(I,x),this._operation=C,this._className=M,this.a=this.registerDataInput("a",B)}_doOperation(B){return this._operation(this.a.getValue(B))}getClassName(){return this._className}}}}]);