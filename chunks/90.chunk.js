"use strict";(self.wy695la1oic=self.wy695la1oic||[]).push([[90],{14657:(S,v,D)=>{D.r(v),D.d(v,{FlowGraphDeterminantBlock:()=>h,FlowGraphInvertMatrixBlock:()=>A,FlowGraphMatrixComposeBlock:()=>R,FlowGraphMatrixDecomposeBlock:()=>n,FlowGraphMatrixMultiplicationBlock:()=>w,FlowGraphTransposeBlock:()=>E});var z=D(13123),e=D(13108),N=D(11371),m=D(11329),B=D(14651),g=D(14644);class E extends B.e{constructor(S){super((0,e.L)((null===S||void 0===S?void 0:S.matrixType)||"Matrix"),(0,e.L)((null===S||void 0===S?void 0:S.matrixType)||"Matrix"),(S=>S.transpose?S.transpose():N.Matrix.Transpose(S)),"FlowGraphTransposeBlock",S)}}(0,m.f)("FlowGraphTransposeBlock",E);class h extends B.e{constructor(S){super((0,e.L)((null===S||void 0===S?void 0:S.matrixType)||"Matrix"),e.q,(S=>S.determinant()),"FlowGraphDeterminantBlock",S)}}(0,m.f)("FlowGraphDeterminantBlock",h);class A extends B.e{constructor(S){super((0,e.L)((null===S||void 0===S?void 0:S.matrixType)||"Matrix"),(0,e.L)((null===S||void 0===S?void 0:S.matrixType)||"Matrix"),(S=>S.inverse?S.inverse():N.Matrix.Invert(S)),"FlowGraphInvertMatrixBlock",S)}}(0,m.f)("FlowGraphInvertMatrixBlock",A);class w extends g.d{constructor(S){super((0,e.L)((null===S||void 0===S?void 0:S.matrixType)||"Matrix"),(0,e.L)((null===S||void 0===S?void 0:S.matrixType)||"Matrix"),(0,e.L)((null===S||void 0===S?void 0:S.matrixType)||"Matrix"),((S,v)=>v.multiply(S)),"FlowGraphMatrixMultiplicationBlock",S)}}(0,m.f)("FlowGraphMatrixMultiplicationBlock",w);class n extends z.d{constructor(S){super(S),this.input=this.registerDataInput("input",e.m),this.position=this.registerDataOutput("position",e.E),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",e.u),this.Me=this.registerDataOutput("Me",e.E),this.isValid=this.registerDataOutput("isValid",e.e,!1)}_updateOutputs(S){const v=S._getExecutionVariable(this,"executionId",-1),D=S._getExecutionVariable(this,"cachedPosition",null),z=S._getExecutionVariable(this,"cachedRotation",null),e=S._getExecutionVariable(this,"cachedScaling",null);if(v===S.executionId&&D&&z&&e)this.position.setValue(D,S),this.rotationQuaternion.setValue(z,S),this.Me.setValue(e,S);else{const v=this.input.getValue(S),m=D||new N.Rv,B=z||new N.Quaternion,g=e||new N.Rv,E=Math.round(1e4*v.m[3])/1e4,h=Math.round(1e4*v.m[7])/1e4,A=Math.round(1e4*v.m[11])/1e4,w=Math.round(1e4*v.m[15])/1e4;if(0!==E||0!==h||0!==A||1!==w)return this.isValid.setValue(!1,S),this.position.setValue(N.Rv.Zero(),S),this.rotationQuaternion.setValue(N.Quaternion.Identity(),S),void this.Me.setValue(N.Rv.One(),S);const n=v.decompose(g,B,m);this.isValid.setValue(n,S),this.position.setValue(m,S),this.rotationQuaternion.setValue(B,S),this.Me.setValue(g,S),S._setExecutionVariable(this,"cachedPosition",m),S._setExecutionVariable(this,"cachedRotation",B),S._setExecutionVariable(this,"cachedScaling",g),S._setExecutionVariable(this,"executionId",S.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,m.f)("FlowGraphMatrixDecompose",n);class R extends z.d{constructor(S){super(S),this.position=this.registerDataInput("position",e.E),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",e.u),this.Me=this.registerDataInput("Me",e.E),this.value=this.registerDataOutput("value",e.m)}_updateOutputs(S){const v=S._getExecutionVariable(this,"executionId",-1),D=S._getExecutionVariable(this,"cachedMatrix",null);if(v===S.executionId&&D)this.value.setValue(D,S);else{const v=N.Matrix.Compose(this.Me.getValue(S),this.rotationQuaternion.getValue(S),this.position.getValue(S));this.value.setValue(v,S),S._setExecutionVariable(this,"cachedMatrix",v),S._setExecutionVariable(this,"executionId",S.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,m.f)("FlowGraphMatrixCompose",R)},14644:(S,v,D)=>{D.d(v,{d:()=>e});var z=D(14647);class e extends z.e{constructor(S,v,D,z,e,N){super(D,N),this._operation=z,this._className=e,this.a=this.registerDataInput("a",S),this.b=this.registerDataInput("b",v)}_doOperation(S){const v=this.a.getValue(S),D=this.b.getValue(S);return this._operation(v,D)}getClassName(){return this._className}}},14647:(S,v,D)=>{D.d(v,{e:()=>B});var z=D(13123),e=D(13108);const N="cachedOperationValue",m="cachedExecutionId";class B extends z.d{constructor(S,v){super(v),this.value=this.registerDataOutput("value",S),this.isValid=this.registerDataOutput("isValid",e.e)}_updateOutputs(S){const v=S._getExecutionVariable(this,m,-1),D=S._getExecutionVariable(this,N,null);if(void 0!==D&&null!==D&&v===S.executionId)this.isValid.setValue(!0,S),this.value.setValue(D,S);else try{const v=this._doOperation(S);if(void 0===v||null===v)return void this.isValid.setValue(!1,S);S._setExecutionVariable(this,N,v),S._setExecutionVariable(this,m,S.executionId),this.value.setValue(v,S),this.isValid.setValue(!0,S)}catch(z){this.isValid.setValue(!1,S)}}}},14651:(S,v,D)=>{D.d(v,{e:()=>e});var z=D(14647);class e extends z.e{constructor(S,v,D,z,e){super(v,e),this._operation=D,this._className=z,this.a=this.registerDataInput("a",S)}_doOperation(S){return this._operation(this.a.getValue(S))}getClassName(){return this._className}}}}]);