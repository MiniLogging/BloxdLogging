"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[90],{14491:(Z,x,F)=>{F.r(x),F.d(x,{FlowGraphDeterminantBlock:()=>o,FlowGraphInvertMatrixBlock:()=>c,FlowGraphMatrixComposeBlock:()=>p,FlowGraphMatrixDecomposeBlock:()=>J,FlowGraphMatrixMultiplicationBlock:()=>s,FlowGraphTransposeBlock:()=>t});var u=F(12977),G=F(12954),f=F(11179),Y=F(11136),j=F(14478),d=F(14469);class t extends j.d{constructor(Z){super((0,G.Q)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),(0,G.Q)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),(Z=>Z.transpose?Z.transpose():f.Matrix.Transpose(Z)),"FlowGraphTransposeBlock",Z)}}(0,Y.g)("FlowGraphTransposeBlock",t);class o extends j.d{constructor(Z){super((0,G.Q)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),G.u,(Z=>Z.determinant()),"FlowGraphDeterminantBlock",Z)}}(0,Y.g)("FlowGraphDeterminantBlock",o);class c extends j.d{constructor(Z){super((0,G.Q)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),(0,G.Q)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),(Z=>Z.inverse?Z.inverse():f.Matrix.Invert(Z)),"FlowGraphInvertMatrixBlock",Z)}}(0,Y.g)("FlowGraphInvertMatrixBlock",c);class s extends d.c{constructor(Z){super((0,G.Q)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),(0,G.Q)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),(0,G.Q)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),((Z,x)=>x.multiply(Z)),"FlowGraphMatrixMultiplicationBlock",Z)}}(0,Y.g)("FlowGraphMatrixMultiplicationBlock",s);class J extends u.e{constructor(Z){super(Z),this.input=this.registerDataInput("input",G.k),this.position=this.registerDataOutput("position",G.D),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",G.v),this.pj=this.registerDataOutput("pj",G.D),this.isValid=this.registerDataOutput("isValid",G.f,!1)}_updateOutputs(Z){const x=Z._getExecutionVariable(this,"executionId",-1),F=Z._getExecutionVariable(this,"cachedPosition",null),u=Z._getExecutionVariable(this,"cachedRotation",null),G=Z._getExecutionVariable(this,"cachedScaling",null);if(x===Z.executionId&&F&&u&&G)this.position.setValue(F,Z),this.rotationQuaternion.setValue(u,Z),this.pj.setValue(G,Z);else{const x=this.input.getValue(Z),Y=F||new f.kx,j=u||new f.Quaternion,d=G||new f.kx,t=Math.round(1e4*x.m[3])/1e4,o=Math.round(1e4*x.m[7])/1e4,c=Math.round(1e4*x.m[11])/1e4,s=Math.round(1e4*x.m[15])/1e4;if(0!==t||0!==o||0!==c||1!==s)return this.isValid.setValue(!1,Z),this.position.setValue(f.kx.Zero(),Z),this.rotationQuaternion.setValue(f.Quaternion.Identity(),Z),void this.pj.setValue(f.kx.One(),Z);const J=x.decompose(d,j,Y);this.isValid.setValue(J,Z),this.position.setValue(Y,Z),this.rotationQuaternion.setValue(j,Z),this.pj.setValue(d,Z),Z._setExecutionVariable(this,"cachedPosition",Y),Z._setExecutionVariable(this,"cachedRotation",j),Z._setExecutionVariable(this,"cachedScaling",d),Z._setExecutionVariable(this,"executionId",Z.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,Y.g)("FlowGraphMatrixDecompose",J);class p extends u.e{constructor(Z){super(Z),this.position=this.registerDataInput("position",G.D),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",G.v),this.pj=this.registerDataInput("pj",G.D),this.value=this.registerDataOutput("value",G.k)}_updateOutputs(Z){const x=Z._getExecutionVariable(this,"executionId",-1),F=Z._getExecutionVariable(this,"cachedMatrix",null);if(x===Z.executionId&&F)this.value.setValue(F,Z);else{const x=f.Matrix.Compose(this.pj.getValue(Z),this.rotationQuaternion.getValue(Z),this.position.getValue(Z));this.value.setValue(x,Z),Z._setExecutionVariable(this,"cachedMatrix",x),Z._setExecutionVariable(this,"executionId",Z.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,Y.g)("FlowGraphMatrixCompose",p)},14469:(Z,x,F)=>{F.d(x,{c:()=>G});var u=F(14476);class G extends u.c{constructor(Z,x,F,u,G,f){super(F,f),this._operation=u,this._className=G,this.a=this.registerDataInput("a",Z),this.b=this.registerDataInput("b",x)}_doOperation(Z){const x=this.a.getValue(Z),F=this.b.getValue(Z);return this._operation(x,F)}getClassName(){return this._className}}},14476:(Z,x,F)=>{F.d(x,{c:()=>j});var u=F(12977),G=F(12954);const f="cachedOperationValue",Y="cachedExecutionId";class j extends u.e{constructor(Z,x){super(x),this.value=this.registerDataOutput("value",Z),this.isValid=this.registerDataOutput("isValid",G.f)}_updateOutputs(Z){const x=Z._getExecutionVariable(this,Y,-1),F=Z._getExecutionVariable(this,f,null);if(void 0!==F&&null!==F&&x===Z.executionId)this.isValid.setValue(!0,Z),this.value.setValue(F,Z);else try{const x=this._doOperation(Z);if(void 0===x||null===x)return void this.isValid.setValue(!1,Z);Z._setExecutionVariable(this,f,x),Z._setExecutionVariable(this,Y,Z.executionId),this.value.setValue(x,Z),this.isValid.setValue(!0,Z)}catch(u){this.isValid.setValue(!1,Z)}}}},14478:(Z,x,F)=>{F.d(x,{d:()=>G});var u=F(14476);class G extends u.c{constructor(Z,x,F,u,G){super(x,G),this._operation=F,this._className=u,this.a=this.registerDataInput("a",Z)}_doOperation(Z){return this._operation(this.a.getValue(Z))}getClassName(){return this._className}}}}]);