"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[66],{14117:(t,q,S)=>{S.r(q),S.d(q,{FlowGraphInterpolationBlock:()=>r});var o=S(12946),B=S(12927),z=S(12019),L=S(622);class r extends o.d{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(t),this.keyFrames=[];const q="string"===typeof(null===t||void 0===t?void 0:t.animationType)?(0,B.R)(t.animationType):(0,B.O)((null===t||void 0===t?void 0:t.animationType)??0),S=(null===t||void 0===t?void 0:t.keyFramesCount)??1,o=this.registerDataInput("duration_0",B.v,0),z=this.registerDataInput("value_0",q);this.keyFrames.push({duration:o,value:z});for(let L=1;L<S+1;L++){const o=this.registerDataInput(`duration_${L}`,B.v,L===S?t.duration:void 0),z=this.registerDataInput(`value_${L}`,q);this.keyFrames.push({duration:o,value:z})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[S].value,this.easingFunction=this.registerDataInput("easingFunction",B.b),this.animation=this.registerDataOutput("animation",B.b),this.propertyName=this.registerDataInput("propertyName",B.b,null===t||void 0===t?void 0:t.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",B.b)}_updateOutputs(t){const q=t._getGlobalContextVariable("interpolationAnimations",[]),S=this.propertyName.getValue(t),o=this.easingFunction.getValue(t),B=this._createAnimation(t,S,o);if(this.animation.setValue(B,t),Array.isArray(B))for(const z of B)q.push(z.uniqueId);else q.push(B.uniqueId);t._setGlobalContextVariable("interpolationAnimations",q)}_createAnimation(t,q,S){var o;const B=this.initialValue.richType,L=[],r=this.initialValue.getValue(t)||B.defaultValue;L.push({frame:0,value:r});const e=(null===(o=this.config)||void 0===o?void 0:o.numberOfKeyFrames)??1;for(let z=1;z<e+1;z++){var C,Z;const q=null===(C=this.keyFrames[z].duration)||void 0===C?void 0:C.getValue(t);let S=null===(Z=this.keyFrames[z].value)||void 0===Z?void 0:Z.getValue(t);z===e-1&&(S=S||B.defaultValue),void 0!==q&&S&&L.push({frame:60*q,value:S})}const b=this.customBuildAnimation.getValue(t);if(b)return b(null,null,t)(L,60,B.animationType,S);if("string"===typeof q){const t=z.b.CreateAnimation(q,B.animationType,60,S);return t.setKeys(L),[t]}return q.map((t=>{const q=z.b.CreateAnimation(t,B.animationType,60,S);return q.setKeys(L),q}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,L.c)("FlowGraphInterpolationBlock",r)}}]);