"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[66],{13731:(L,j,P)=>{P.r(j),P.d(j,{FlowGraphInterpolationBlock:()=>u});var A=P(12523),R=P(12510),o=P(11669),Y=P(606);class u extends A.d{constructor(){let L=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(L),this.keyFrames=[];const j="string"===typeof(null===L||void 0===L?void 0:L.animationType)?(0,R.N)(L.animationType):(0,R.M)((null===L||void 0===L?void 0:L.animationType)??0),P=(null===L||void 0===L?void 0:L.keyFramesCount)??1,A=this.registerDataInput("duration_0",R.p,0),o=this.registerDataInput("value_0",j);this.keyFrames.push({duration:A,value:o});for(let Y=1;Y<P+1;Y++){const A=this.registerDataInput(`duration_${Y}`,R.p,Y===P?L.duration:void 0),o=this.registerDataInput(`value_${Y}`,j);this.keyFrames.push({duration:A,value:o})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[P].value,this.easingFunction=this.registerDataInput("easingFunction",R.d),this.animation=this.registerDataOutput("animation",R.d),this.propertyName=this.registerDataInput("propertyName",R.d,null===L||void 0===L?void 0:L.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",R.d)}_updateOutputs(L){const j=L._getGlobalContextVariable("interpolationAnimations",[]),P=this.propertyName.getValue(L),A=this.easingFunction.getValue(L),R=this._createAnimation(L,P,A);if(this.animation.setValue(R,L),Array.isArray(R))for(const o of R)j.push(o.uniqueId);else j.push(R.uniqueId);L._setGlobalContextVariable("interpolationAnimations",j)}_createAnimation(L,j,P){var A;const R=this.initialValue.richType,Y=[],u=this.initialValue.getValue(L)||R.defaultValue;Y.push({frame:0,value:u});const a=(null===(A=this.config)||void 0===A?void 0:A.numberOfKeyFrames)??1;for(let o=1;o<a+1;o++){var D,S;const j=null===(D=this.keyFrames[o].duration)||void 0===D?void 0:D.getValue(L);let P=null===(S=this.keyFrames[o].value)||void 0===S?void 0:S.getValue(L);o===a-1&&(P=P||R.defaultValue),void 0!==j&&P&&Y.push({frame:60*j,value:P})}const g=this.customBuildAnimation.getValue(L);if(g)return g(null,null,L)(Y,60,R.animationType,P);if("string"===typeof j){const L=o.c.CreateAnimation(j,R.animationType,60,P);return L.setKeys(Y),[L]}return j.map((L=>{const j=o.c.CreateAnimation(L,R.animationType,60,P);return j.setKeys(Y),j}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,Y.h)("FlowGraphInterpolationBlock",u)}}]);