"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[66],{14434:(R,x,H)=>{H.r(x),H.d(x,{FlowGraphInterpolationBlock:()=>D});var k=H(13268),c=H(13246),t=H(12331),A=H(610);class D extends k.b{constructor(){let R=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(R),this.keyFrames=[];const x="string"===typeof(null===R||void 0===R?void 0:R.animationType)?(0,c.C)(R.animationType):(0,c.B)((null===R||void 0===R?void 0:R.animationType)??0),H=(null===R||void 0===R?void 0:R.keyFramesCount)??1,k=this.registerDataInput("duration_0",c.m,0),t=this.registerDataInput("value_0",x);this.keyFrames.push({duration:k,value:t});for(let A=1;A<H+1;A++){const k=this.registerDataInput(`duration_${A}`,c.m,A===H?R.duration:void 0),t=this.registerDataInput(`value_${A}`,x);this.keyFrames.push({duration:k,value:t})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[H].value,this.easingFunction=this.registerDataInput("easingFunction",c.b),this.animation=this.registerDataOutput("animation",c.b),this.propertyName=this.registerDataInput("propertyName",c.b,null===R||void 0===R?void 0:R.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",c.b)}_updateOutputs(R){const x=R._getGlobalContextVariable("interpolationAnimations",[]),H=this.propertyName.getValue(R),k=this.easingFunction.getValue(R),c=this._createAnimation(R,H,k);if(this.animation.setValue(c,R),Array.isArray(c))for(const t of c)x.push(t.uniqueId);else x.push(c.uniqueId);R._setGlobalContextVariable("interpolationAnimations",x)}_createAnimation(R,x,H){var k;const c=this.initialValue.richType,A=[],D=this.initialValue.getValue(R)||c.defaultValue;A.push({frame:0,value:D});const U=(null===(k=this.config)||void 0===k?void 0:k.numberOfKeyFrames)??1;for(let t=1;t<U+1;t++){var J,V;const x=null===(J=this.keyFrames[t].duration)||void 0===J?void 0:J.getValue(R);let H=null===(V=this.keyFrames[t].value)||void 0===V?void 0:V.getValue(R);t===U-1&&(H=H||c.defaultValue),void 0!==x&&H&&A.push({frame:60*x,value:H})}const n=this.customBuildAnimation.getValue(R);if(n)return n(null,null,R)(A,60,c.animationType,H);if("string"===typeof x){const R=t.c.CreateAnimation(x,c.animationType,60,H);return R.setKeys(A),[R]}return x.map((R=>{const x=t.c.CreateAnimation(R,c.animationType,60,H);return x.setKeys(A),x}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,A.h)("FlowGraphInterpolationBlock",D)}}]);