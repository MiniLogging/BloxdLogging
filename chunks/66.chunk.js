"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[66],{14040:(Z,U,n)=>{n.r(U),n.d(U,{FlowGraphInterpolationBlock:()=>V});var i=n(12837),B=n(12826),l=n(11964),H=n(633);class V extends i.b{constructor(){let Z=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(Z),this.keyFrames=[];const U="string"===typeof(null===Z||void 0===Z?void 0:Z.animationType)?(0,B.J)(Z.animationType):(0,B.G)((null===Z||void 0===Z?void 0:Z.animationType)??0),n=(null===Z||void 0===Z?void 0:Z.keyFramesCount)??1,i=this.registerDataInput("duration_0",B.s,0),l=this.registerDataInput("value_0",U);this.keyFrames.push({duration:i,value:l});for(let H=1;H<n+1;H++){const i=this.registerDataInput(`duration_${H}`,B.s,H===n?Z.duration:void 0),l=this.registerDataInput(`value_${H}`,U);this.keyFrames.push({duration:i,value:l})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[n].value,this.easingFunction=this.registerDataInput("easingFunction",B.b),this.animation=this.registerDataOutput("animation",B.b),this.propertyName=this.registerDataInput("propertyName",B.b,null===Z||void 0===Z?void 0:Z.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",B.b)}_updateOutputs(Z){const U=Z._getGlobalContextVariable("interpolationAnimations",[]),n=this.propertyName.getValue(Z),i=this.easingFunction.getValue(Z),B=this._createAnimation(Z,n,i);if(this.animation.setValue(B,Z),Array.isArray(B))for(const l of B)U.push(l.uniqueId);else U.push(B.uniqueId);Z._setGlobalContextVariable("interpolationAnimations",U)}_createAnimation(Z,U,n){var i;const B=this.initialValue.richType,H=[],V=this.initialValue.getValue(Z)||B.defaultValue;H.push({frame:0,value:V});const G=(null===(i=this.config)||void 0===i?void 0:i.numberOfKeyFrames)??1;for(let l=1;l<G+1;l++){var R,d;const U=null===(R=this.keyFrames[l].duration)||void 0===R?void 0:R.getValue(Z);let n=null===(d=this.keyFrames[l].value)||void 0===d?void 0:d.getValue(Z);l===G-1&&(n=n||B.defaultValue),void 0!==U&&n&&H.push({frame:60*U,value:n})}const F=this.customBuildAnimation.getValue(Z);if(F)return F(null,null,Z)(H,60,B.animationType,n);if("string"===typeof U){const Z=l.e.CreateAnimation(U,B.animationType,60,n);return Z.setKeys(H),[Z]}return U.map((Z=>{const U=l.e.CreateAnimation(Z,B.animationType,60,n);return U.setKeys(H),U}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,H.g)("FlowGraphInterpolationBlock",V)}}]);