"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[66],{14274:(Q,X,C)=>{C.r(X),C.d(X,{FlowGraphInterpolationBlock:()=>O});var l=C(13092),h=C(13063),M=C(12229),f=C(620);class O extends l.c{constructor(){let Q=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(Q),this.keyFrames=[];const X="string"===typeof(null===Q||void 0===Q?void 0:Q.animationType)?(0,h.H)(Q.animationType):(0,h.G)((null===Q||void 0===Q?void 0:Q.animationType)??0),C=(null===Q||void 0===Q?void 0:Q.keyFramesCount)??1,l=this.registerDataInput("duration_0",h.p,0),M=this.registerDataInput("value_0",X);this.keyFrames.push({duration:l,value:M});for(let f=1;f<C+1;f++){const l=this.registerDataInput(`duration_${f}`,h.p,f===C?Q.duration:void 0),M=this.registerDataInput(`value_${f}`,X);this.keyFrames.push({duration:l,value:M})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[C].value,this.easingFunction=this.registerDataInput("easingFunction",h.d),this.animation=this.registerDataOutput("animation",h.d),this.propertyName=this.registerDataInput("propertyName",h.d,null===Q||void 0===Q?void 0:Q.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",h.d)}_updateOutputs(Q){const X=Q._getGlobalContextVariable("interpolationAnimations",[]),C=this.propertyName.getValue(Q),l=this.easingFunction.getValue(Q),h=this._createAnimation(Q,C,l);if(this.animation.setValue(h,Q),Array.isArray(h))for(const M of h)X.push(M.uniqueId);else X.push(h.uniqueId);Q._setGlobalContextVariable("interpolationAnimations",X)}_createAnimation(Q,X,C){var l;const h=this.initialValue.richType,f=[],O=this.initialValue.getValue(Q)||h.defaultValue;f.push({frame:0,value:O});const m=(null===(l=this.config)||void 0===l?void 0:l.numberOfKeyFrames)??1;for(let M=1;M<m+1;M++){var W,U;const X=null===(W=this.keyFrames[M].duration)||void 0===W?void 0:W.getValue(Q);let C=null===(U=this.keyFrames[M].value)||void 0===U?void 0:U.getValue(Q);M===m-1&&(C=C||h.defaultValue),void 0!==X&&C&&f.push({frame:60*X,value:C})}const L=this.customBuildAnimation.getValue(Q);if(L)return L(null,null,Q)(f,60,h.animationType,C);if("string"===typeof X){const Q=M.e.CreateAnimation(X,h.animationType,60,C);return Q.setKeys(f),[Q]}return X.map((Q=>{const X=M.e.CreateAnimation(Q,h.animationType,60,C);return X.setKeys(f),X}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,f.g)("FlowGraphInterpolationBlock",O)}}]);