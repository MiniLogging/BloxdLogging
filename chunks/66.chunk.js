"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[66],{14161:(v,d,Q)=>{Q.r(d),Q.d(d,{FlowGraphInterpolationBlock:()=>F});var n=Q(12934),T=Q(12908),L=Q(12002),e=Q(591);class F extends n.b{constructor(){let v=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(v),this.keyFrames=[];const d="string"===typeof(null===v||void 0===v?void 0:v.animationType)?(0,T.R)(v.animationType):(0,T.O)((null===v||void 0===v?void 0:v.animationType)??0),Q=(null===v||void 0===v?void 0:v.keyFramesCount)??1,n=this.registerDataInput("duration_0",T.u,0),L=this.registerDataInput("value_0",d);this.keyFrames.push({duration:n,value:L});for(let e=1;e<Q+1;e++){const n=this.registerDataInput(`duration_${e}`,T.u,e===Q?v.duration:void 0),L=this.registerDataInput(`value_${e}`,d);this.keyFrames.push({duration:n,value:L})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[Q].value,this.easingFunction=this.registerDataInput("easingFunction",T.c),this.animation=this.registerDataOutput("animation",T.c),this.propertyName=this.registerDataInput("propertyName",T.c,null===v||void 0===v?void 0:v.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",T.c)}_updateOutputs(v){const d=v._getGlobalContextVariable("interpolationAnimations",[]),Q=this.propertyName.getValue(v),n=this.easingFunction.getValue(v),T=this._createAnimation(v,Q,n);if(this.animation.setValue(T,v),Array.isArray(T))for(const L of T)d.push(L.uniqueId);else d.push(T.uniqueId);v._setGlobalContextVariable("interpolationAnimations",d)}_createAnimation(v,d,Q){var n;const T=this.initialValue.richType,e=[],F=this.initialValue.getValue(v)||T.defaultValue;e.push({frame:0,value:F});const r=(null===(n=this.config)||void 0===n?void 0:n.numberOfKeyFrames)??1;for(let L=1;L<r+1;L++){var C,u;const d=null===(C=this.keyFrames[L].duration)||void 0===C?void 0:C.getValue(v);let Q=null===(u=this.keyFrames[L].value)||void 0===u?void 0:u.getValue(v);L===r-1&&(Q=Q||T.defaultValue),void 0!==d&&Q&&e.push({frame:60*d,value:Q})}const y=this.customBuildAnimation.getValue(v);if(y)return y(null,null,v)(e,60,T.animationType,Q);if("string"===typeof d){const v=L.d.CreateAnimation(d,T.animationType,60,Q);return v.setKeys(e),[v]}return d.map((v=>{const d=L.d.CreateAnimation(v,T.animationType,60,Q);return d.setKeys(e),d}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,e.f)("FlowGraphInterpolationBlock",F)}}]);