"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[66],{13939:(U,W,l)=>{l.r(W),l.d(W,{FlowGraphInterpolationBlock:()=>B});var M=l(12739),t=l(12704),L=l(11860),p=l(655);class B extends M.e{constructor(){let U=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(U),this.keyFrames=[];const W="string"===typeof(null===U||void 0===U?void 0:U.animationType)?(0,t.Q)(U.animationType):(0,t.N)((null===U||void 0===U?void 0:U.animationType)??0),l=(null===U||void 0===U?void 0:U.keyFramesCount)??1,M=this.registerDataInput("duration_0",t.s,0),L=this.registerDataInput("value_0",W);this.keyFrames.push({duration:M,value:L});for(let p=1;p<l+1;p++){const M=this.registerDataInput(`duration_${p}`,t.s,p===l?U.duration:void 0),L=this.registerDataInput(`value_${p}`,W);this.keyFrames.push({duration:M,value:L})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[l].value,this.easingFunction=this.registerDataInput("easingFunction",t.d),this.animation=this.registerDataOutput("animation",t.d),this.propertyName=this.registerDataInput("propertyName",t.d,null===U||void 0===U?void 0:U.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",t.d)}_updateOutputs(U){const W=U._getGlobalContextVariable("interpolationAnimations",[]),l=this.propertyName.getValue(U),M=this.easingFunction.getValue(U),t=this._createAnimation(U,l,M);if(this.animation.setValue(t,U),Array.isArray(t))for(const L of t)W.push(L.uniqueId);else W.push(t.uniqueId);U._setGlobalContextVariable("interpolationAnimations",W)}_createAnimation(U,W,l){var M;const t=this.initialValue.richType,p=[],B=this.initialValue.getValue(U)||t.defaultValue;p.push({frame:0,value:B});const k=(null===(M=this.config)||void 0===M?void 0:M.numberOfKeyFrames)??1;for(let L=1;L<k+1;L++){var A,q;const W=null===(A=this.keyFrames[L].duration)||void 0===A?void 0:A.getValue(U);let l=null===(q=this.keyFrames[L].value)||void 0===q?void 0:q.getValue(U);L===k-1&&(l=l||t.defaultValue),void 0!==W&&l&&p.push({frame:60*W,value:l})}const y=this.customBuildAnimation.getValue(U);if(y)return y(null,null,U)(p,60,t.animationType,l);if("string"===typeof W){const U=L.c.CreateAnimation(W,t.animationType,60,l);return U.setKeys(p),[U]}return W.map((U=>{const W=L.c.CreateAnimation(U,t.animationType,60,l);return W.setKeys(p),W}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,p.f)("FlowGraphInterpolationBlock",B)}}]);