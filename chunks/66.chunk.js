"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[66],{13976:(c,b,A)=>{A.r(b),A.d(b,{FlowGraphInterpolationBlock:()=>s});var o=A(12789),t=A(12763),n=A(11907),h=A(633);class s extends o.d{constructor(){let c=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(c),this.keyFrames=[];const b="string"===typeof(null===c||void 0===c?void 0:c.animationType)?(0,t.L)(c.animationType):(0,t.K)((null===c||void 0===c?void 0:c.animationType)??0),A=(null===c||void 0===c?void 0:c.keyFramesCount)??1,o=this.registerDataInput("duration_0",t.t,0),n=this.registerDataInput("value_0",b);this.keyFrames.push({duration:o,value:n});for(let h=1;h<A+1;h++){const o=this.registerDataInput(`duration_${h}`,t.t,h===A?c.duration:void 0),n=this.registerDataInput(`value_${h}`,b);this.keyFrames.push({duration:o,value:n})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[A].value,this.easingFunction=this.registerDataInput("easingFunction",t.e),this.animation=this.registerDataOutput("animation",t.e),this.propertyName=this.registerDataInput("propertyName",t.e,null===c||void 0===c?void 0:c.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",t.e)}_updateOutputs(c){const b=c._getGlobalContextVariable("interpolationAnimations",[]),A=this.propertyName.getValue(c),o=this.easingFunction.getValue(c),t=this._createAnimation(c,A,o);if(this.animation.setValue(t,c),Array.isArray(t))for(const n of t)b.push(n.uniqueId);else b.push(t.uniqueId);c._setGlobalContextVariable("interpolationAnimations",b)}_createAnimation(c,b,A){var o;const t=this.initialValue.richType,h=[],s=this.initialValue.getValue(c)||t.defaultValue;h.push({frame:0,value:s});const L=(null===(o=this.config)||void 0===o?void 0:o.numberOfKeyFrames)??1;for(let n=1;n<L+1;n++){var C,J;const b=null===(C=this.keyFrames[n].duration)||void 0===C?void 0:C.getValue(c);let A=null===(J=this.keyFrames[n].value)||void 0===J?void 0:J.getValue(c);n===L-1&&(A=A||t.defaultValue),void 0!==b&&A&&h.push({frame:60*b,value:A})}const X=this.customBuildAnimation.getValue(c);if(X)return X(null,null,c)(h,60,t.animationType,A);if("string"===typeof b){const c=n.d.CreateAnimation(b,t.animationType,60,A);return c.setKeys(h),[c]}return b.map((c=>{const b=n.d.CreateAnimation(c,t.animationType,60,A);return b.setKeys(h),b}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,h.d)("FlowGraphInterpolationBlock",s)}}]);