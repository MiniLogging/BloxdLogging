/*! For license information please see jg69z6.21.417c481d.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[21],{11908:(P,Q,O)=>{O.r(Q),O.d(Q,{getAnalytics:()=>fP,getGoogleAnalyticsClientId:()=>EP,initializeAnalytics:()=>nP,isSupported:()=>ZP,logEvent:()=>OQ,setAnalyticsCollectionEnabled:()=>PQ,setConsent:()=>bQ,setCurrentScreen:()=>UP,setDefaultEventParameters:()=>QQ,setUserId:()=>kP,setUserProperties:()=>vP,settings:()=>dP});var b=O(11887),F=O(11902),g=O(11895),m=O(11893);let q,R;const X=new WeakMap,C=new WeakMap,L=new WeakMap,G=new WeakMap,A=new WeakMap;let j={get(P,Q,O){if(P instanceof IDBTransaction){if("done"===Q)return C.get(P);if("objectStoreNames"===Q)return P.objectStoreNames||L.get(P);if("store"===Q)return O.objectStoreNames[1]?void 0:O.objectStore(O.objectStoreNames[0])}return r(P[Q])},set:(P,Q,O)=>(P[Q]=O,!0),has:(P,Q)=>P instanceof IDBTransaction&&("done"===Q||"store"===Q)||Q in P};function w(P){return P!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(R||(R=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(P)?function(){for(var Q=arguments.length,O=new Array(Q),b=0;b<Q;b++)O[b]=arguments[b];return P.apply(K(this),O),r(X.get(this))}:function(){for(var Q=arguments.length,O=new Array(Q),b=0;b<Q;b++)O[b]=arguments[b];return r(P.apply(K(this),O))}:function(Q){for(var O=arguments.length,b=new Array(O>1?O-1:0),F=1;F<O;F++)b[F-1]=arguments[F];const g=P.call(K(this),Q,...b);return L.set(g,Q.sort?Q.sort():[Q]),r(g)}}function W(P){return"function"===typeof P?w(P):(P instanceof IDBTransaction&&function(P){if(C.has(P))return;const Q=new Promise(((Q,O)=>{const b=()=>{P.removeEventListener("complete",F),P.removeEventListener("error",g),P.removeEventListener("abort",g)},F=()=>{Q(),b()},g=()=>{O(P.error||new DOMException("AbortError","AbortError")),b()};P.addEventListener("complete",F),P.addEventListener("error",g),P.addEventListener("abort",g)}));C.set(P,Q)}(P),Q=P,(q||(q=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((P=>Q instanceof P))?new Proxy(P,j):P);var Q}function r(P){if(P instanceof IDBRequest)return function(P){const Q=new Promise(((Q,O)=>{const b=()=>{P.removeEventListener("success",F),P.removeEventListener("error",g)},F=()=>{Q(r(P.result)),b()},g=()=>{O(P.error),b()};P.addEventListener("success",F),P.addEventListener("error",g)}));return Q.then((Q=>{Q instanceof IDBCursor&&X.set(Q,P)})).catch((()=>{})),A.set(Q,P),Q}(P);if(G.has(P))return G.get(P);const Q=W(P);return Q!==P&&(G.set(P,Q),A.set(Q,P)),Q}const K=P=>A.get(P);const T=["get","getKey","getAll","getAllKeys","count"],x=["put","add","delete","clear"],u=new Map;function H(P,Q){if(!(P instanceof IDBDatabase)||Q in P||"string"!==typeof Q)return;if(u.get(Q))return u.get(Q);const O=Q.replace(/FromIndex$/,""),b=Q!==O,F=x.includes(O);if(!(O in(b?IDBIndex:IDBObjectStore).prototype)||!F&&!T.includes(O))return;const g=async function(P){const Q=this.transaction(P,F?"readwrite":"readonly");let g=Q.store;for(var m=arguments.length,q=new Array(m>1?m-1:0),R=1;R<m;R++)q[R-1]=arguments[R];return b&&(g=g.index(q.shift())),(await Promise.all([g[O](...q),F&&Q.done]))[0]};return u.set(Q,g),g}j=(P=>({...P,get:(Q,O,b)=>H(Q,O)||P.get(Q,O,b),has:(Q,O)=>!!H(Q,O)||P.has(Q,O)}))(j);const t="@firebase/installations",B="0.6.4",I=1e4,l=`w:${B}`,M="FIS_v2",S=36e5,o={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},z=new g.d("installations","Installations",o);function a(P){return P instanceof g.h&&P.code.includes("request-failed")}function y(P){let{projectId:Q}=P;return`https://firebaseinstallations.googleapis.com/v1/projects/${Q}/installations`}function c(P){return{token:P.token,requestStatus:2,expiresIn:(Q=P.expiresIn,Number(Q.replace("s","000"))),creationTime:Date.now()};var Q}async function h(P,Q){const O=(await Q.json()).error;return z.create("request-failed",{requestName:P,serverCode:O.code,serverMessage:O.message,serverStatus:O.status})}function V(P){let{apiKey:Q}=P;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":Q})}function s(P,Q){let{refreshToken:O}=Q;const b=V(P);return b.append("Authorization",function(P){return`${M} ${P}`}(O)),b}async function J(P){const Q=await P();return Q.status>=500&&Q.status<600?P():Q}function e(P){return new Promise((Q=>{setTimeout(Q,P)}))}const i=/^[cdef][\w-]{21}$/;function Y(){try{const P=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(P),P[0]=112+P[0]%16;const Q=function(P){const Q=(O=P,btoa(String.fromCharCode(...O)).replace(/\+/g,"-").replace(/\//g,"_"));var O;return Q.substr(0,22)}(P);return i.test(Q)?Q:""}catch(P){return""}}function p(P){return`${P.appName}!${P.appId}`}const D=new Map;function d(P,Q){const O=p(P);N(O,Q),function(P,Q){const O=n();O&&O.postMessage({key:P,fid:Q});Z()}(O,Q)}function N(P,Q){const O=D.get(P);if(O)for(const b of O)b(Q)}let f=null;function n(){return!f&&"BroadcastChannel"in self&&(f=new BroadcastChannel("[Firebase] FID Change"),f.onmessage=P=>{N(P.data.key,P.data.fid)}),f}function Z(){0===D.size&&f&&(f.close(),f=null)}const U="firebase-installations-store";let E=null;function k(){return E||(E=function(P,Q){let{blocked:O,upgrade:b,blocking:F,terminated:g}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const m=indexedDB.open(P,Q),q=r(m);return b&&m.addEventListener("upgradeneeded",(P=>{b(r(m.result),P.oldVersion,P.newVersion,r(m.transaction))})),O&&m.addEventListener("blocked",(()=>O())),q.then((P=>{g&&P.addEventListener("close",(()=>g())),F&&P.addEventListener("versionchange",(()=>F()))})).catch((()=>{})),q}("firebase-installations-database",1,{upgrade:(P,Q)=>{if(0===Q)P.createObjectStore(U)}})),E}async function v(P,Q){const O=p(P),b=(await k()).transaction(U,"readwrite"),F=b.objectStore(U),g=await F.get(O);return await F.put(Q,O),await b.done,g&&g.fid===Q.fid||d(P,Q.fid),Q}async function PP(P){const Q=p(P),O=(await k()).transaction(U,"readwrite");await O.objectStore(U).delete(Q),await O.done}async function QP(P,Q){const O=p(P),b=(await k()).transaction(U,"readwrite"),F=b.objectStore(U),g=await F.get(O),m=Q(g);return void 0===m?await F.delete(O):await F.put(m,O),await b.done,!m||g&&g.fid===m.fid||d(P,m.fid),m}async function OP(P){let Q;const O=await QP(P.appConfig,(O=>{const b=function(P){const Q=P||{fid:Y(),registrationStatus:0};return gP(Q)}(O),F=function(P,Q){if(0===Q.registrationStatus){if(!navigator.onLine){return{installationEntry:Q,registrationPromise:Promise.reject(z.create("app-offline"))}}const O={fid:Q.fid,registrationStatus:1,registrationTime:Date.now()},b=async function(P,Q){try{const O=await async function(P,Q){let{appConfig:O,heartbeatServiceProvider:b}=P,{fid:F}=Q;const g=y(O),m=V(O),q=b.getImmediate({optional:!0});if(q){const P=await q.getHeartbeatsHeader();P&&m.append("x-firebase-client",P)}const R={fid:F,authVersion:M,appId:O.appId,sdkVersion:l},X={method:"POST",headers:m,body:JSON.stringify(R)},C=await J((()=>fetch(g,X)));if(C.ok){const P=await C.json();return{fid:P.fid||F,registrationStatus:2,refreshToken:P.refreshToken,authToken:c(P.authToken)}}throw await h("Create Installation",C)}(P,Q);return v(P.appConfig,O)}catch(O){throw a(O)&&409===O.customData.serverCode?await PP(P.appConfig):await v(P.appConfig,{fid:Q.fid,registrationStatus:0}),O}}(P,O);return{installationEntry:O,registrationPromise:b}}return 1===Q.registrationStatus?{installationEntry:Q,registrationPromise:bP(P)}:{installationEntry:Q}}(P,b);return Q=F.registrationPromise,F.installationEntry}));return""===O.fid?{installationEntry:await Q}:{installationEntry:O,registrationPromise:Q}}async function bP(P){let Q=await FP(P.appConfig);for(;1===Q.registrationStatus;)await e(100),Q=await FP(P.appConfig);if(0===Q.registrationStatus){const{installationEntry:Q,registrationPromise:O}=await OP(P);return O||Q}return Q}function FP(P){return QP(P,(P=>{if(!P)throw z.create("installation-not-found");return gP(P)}))}function gP(P){return 1===(Q=P).registrationStatus&&Q.registrationTime+I<Date.now()?{fid:P.fid,registrationStatus:0}:P;var Q}async function mP(P,Q){let{appConfig:O,heartbeatServiceProvider:b}=P;const F=function(P,Q){let{fid:O}=Q;return`${y(P)}/${O}/authTokens:generate`}(O,Q),g=s(O,Q),m=b.getImmediate({optional:!0});if(m){const P=await m.getHeartbeatsHeader();P&&g.append("x-firebase-client",P)}const q={installation:{sdkVersion:l,appId:O.appId}},R={method:"POST",headers:g,body:JSON.stringify(q)},X=await J((()=>fetch(F,R)));if(X.ok){return c(await X.json())}throw await h("Generate Auth Token",X)}async function qP(P){let Q,O=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const b=await QP(P.appConfig,(b=>{if(!XP(b))throw z.create("not-registered");const F=b.authToken;if(!O&&function(P){return 2===P.requestStatus&&!function(P){const Q=Date.now();return Q<P.creationTime||P.creationTime+P.expiresIn<Q+S}(P)}(F))return b;if(1===F.requestStatus)return Q=async function(P,Q){let O=await RP(P.appConfig);for(;1===O.authToken.requestStatus;)await e(100),O=await RP(P.appConfig);const b=O.authToken;return 0===b.requestStatus?qP(P,Q):b}(P,O),b;{if(!navigator.onLine)throw z.create("app-offline");const O=function(P){const Q={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},P),{authToken:Q})}(b);return Q=async function(P,Q){try{const O=await mP(P,Q),b=Object.assign(Object.assign({},Q),{authToken:O});return await v(P.appConfig,b),O}catch(O){if(!a(O)||401!==O.customData.serverCode&&404!==O.customData.serverCode){const O=Object.assign(Object.assign({},Q),{authToken:{requestStatus:0}});await v(P.appConfig,O)}else await PP(P.appConfig);throw O}}(P,O),O}}));return Q?await Q:b.authToken}function RP(P){return QP(P,(P=>{if(!XP(P))throw z.create("not-registered");const Q=P.authToken;return 1===(O=Q).requestStatus&&O.requestTime+I<Date.now()?Object.assign(Object.assign({},P),{authToken:{requestStatus:0}}):P;var O}))}function XP(P){return void 0!==P&&2===P.registrationStatus}async function CP(P){let Q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const O=P;await async function(P){const{registrationPromise:Q}=await OP(P);Q&&await Q}(O);return(await qP(O,Q)).token}function LP(P){return z.create("missing-app-config-values",{valueName:P})}const GP="installations",AP=P=>{const Q=P.getProvider("app").getImmediate(),O=function(P){if(!P||!P.options)throw LP("App Configuration");if(!P.name)throw LP("App Name");const Q=["projectId","apiKey","appId"];for(const O of Q)if(!P.options[O])throw LP(O);return{appName:P.name,projectId:P.options.projectId,apiKey:P.options.apiKey,appId:P.options.appId}}(Q);return{app:Q,appConfig:O,heartbeatServiceProvider:(0,b.C)(Q,"heartbeat"),_delete:()=>Promise.resolve()}},jP=P=>{const Q=P.getProvider("app").getImmediate(),O=(0,b.C)(Q,GP).getImmediate();return{getId:()=>async function(P){const Q=P,{installationEntry:O,registrationPromise:b}=await OP(Q);return b?b.catch(console.error):qP(Q).catch(console.error),O.fid}(O),getToken:P=>CP(O,P)}};(0,b.G)(new m.c(GP,AP,"PUBLIC")),(0,b.G)(new m.c("installations-internal",jP,"PRIVATE")),(0,b.Z)(t,B),(0,b.Z)(t,B,"esm2017");const wP="analytics",WP="https://www.googletagmanager.com/gtag/js",rP=new F.f("@firebase/analytics"),KP={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},TP=new g.d("analytics","Analytics",KP);function xP(P){if(!P.startsWith(WP)){const Q=TP.create("invalid-gtag-resource",{gtagURL:P});return rP.warn(Q.message),""}return P}function uP(P){return Promise.all(P.map((P=>P.catch((P=>P)))))}function HP(P,Q){const O=function(P,Q){let O;return window.trustedTypes&&(O=window.trustedTypes.createPolicy(P,Q)),O}("firebase-js-sdk-policy",{createScriptURL:xP}),b=document.createElement("script"),F=`${WP}?l=${P}&id=${Q}`;b.src=O?null===O||void 0===O?void 0:O.createScriptURL(F):F,b.async=!0,document.head.appendChild(b)}function tP(P,Q,O,b){return async function(F){try{for(var g=arguments.length,m=new Array(g>1?g-1:0),q=1;q<g;q++)m[q-1]=arguments[q];if("event"===F){const[b,F]=m;await async function(P,Q,O,b,F){try{let g=[];if(F&&F.send_to){let P=F.send_to;Array.isArray(P)||(P=[P]);const b=await uP(O);for(const O of P){const P=b.find((P=>P.measurementId===O)),F=P&&Q[P.appId];if(!F){g=[];break}g.push(F)}}0===g.length&&(g=Object.values(Q)),await Promise.all(g),P("event",b,F||{})}catch(g){rP.error(g)}}(P,Q,O,b,F)}else if("config"===F){const[F,g]=m;await async function(P,Q,O,b,F,g){const m=b[F];try{if(m)await Q[m];else{const P=(await uP(O)).find((P=>P.measurementId===F));P&&await Q[P.appId]}}catch(q){rP.error(q)}P("config",F,g)}(P,Q,O,b,F,g)}else if("consent"===F){const[Q]=m;P("consent","update",Q)}else if("get"===F){const[Q,O,b]=m;P("get",Q,O,b)}else if("set"===F){const[Q]=m;P("set",Q)}else P(F,...m)}catch(R){rP.error(R)}}}const BP=new class{constructor(){let P=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},Q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=P,this.intervalMillis=Q}getThrottleMetadata(P){return this.throttleMetadata[P]}setThrottleMetadata(P,Q){this.throttleMetadata[P]=Q}deleteThrottleMetadata(P){delete this.throttleMetadata[P]}};function IP(P){return new Headers({Accept:"application/json","x-goog-api-key":P})}async function lP(P){let Q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:BP,O=arguments.length>2?arguments[2]:void 0;const{appId:b,apiKey:F,measurementId:g}=P.options;if(!b)throw TP.create("no-app-id");if(!F){if(g)return{measurementId:g,appId:b};throw TP.create("no-api-key")}const m=Q.getThrottleMetadata(b)||{backoffCount:0,throttleEndTimeMillis:Date.now()},q=new SP;return setTimeout((async()=>{q.abort()}),void 0!==O?O:6e4),MP({appId:b,apiKey:F,measurementId:g},m,q,Q)}async function MP(P,Q,O){let{throttleEndTimeMillis:b,backoffCount:F}=Q,m=arguments.length>3&&void 0!==arguments[3]?arguments[3]:BP;var q;const{appId:R,measurementId:X}=P;try{await function(P,Q){return new Promise(((O,b)=>{const F=Math.max(Q-Date.now(),0),g=setTimeout(O,F);P.addEventListener((()=>{clearTimeout(g),b(TP.create("fetch-throttle",{throttleEndTimeMillis:Q}))}))}))}(O,b)}catch(C){if(X)return rP.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${X} provided in the "measurementId" field in the local Firebase config. [${null===C||void 0===C?void 0:C.message}]`),{appId:R,measurementId:X};throw C}try{const Q=await async function(P){var Q;const{appId:O,apiKey:b}=P,F={method:"GET",headers:IP(b)},g="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",O),m=await fetch(g,F);if(200!==m.status&&304!==m.status){let P="";try{const O=await m.json();(null===(Q=O.error)||void 0===Q?void 0:Q.message)&&(P=O.error.message)}catch(q){}throw TP.create("config-fetch-failed",{httpStatus:m.status,responseMessage:P})}return m.json()}(P);return m.deleteThrottleMetadata(R),Q}catch(C){const Q=C;if(!function(P){if(!(P instanceof g.h)||!P.customData)return!1;const Q=Number(P.customData.httpStatus);return 429===Q||500===Q||503===Q||504===Q}(Q)){if(m.deleteThrottleMetadata(R),X)return rP.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${X} provided in the "measurementId" field in the local Firebase config. [${null===Q||void 0===Q?void 0:Q.message}]`),{appId:R,measurementId:X};throw C}const b=503===Number(null===(q=null===Q||void 0===Q?void 0:Q.customData)||void 0===q?void 0:q.httpStatus)?(0,g.p)(F,m.intervalMillis,30):(0,g.p)(F,m.intervalMillis),L={throttleEndTimeMillis:Date.now()+b,backoffCount:F+1};return m.setThrottleMetadata(R,L),rP.debug(`Calling attemptFetch again in ${b} millis`),MP(P,L,O,m)}}class SP{constructor(){this.listeners=[]}addEventListener(P){this.listeners.push(P)}abort(){this.listeners.forEach((P=>P()))}}let oP,zP;function aP(P){zP=P}function yP(P){oP=P}async function cP(P,Q,O,b,F,m,q){var R;const X=lP(P);X.then((Q=>{O[Q.measurementId]=Q.appId,P.options.measurementId&&Q.measurementId!==P.options.measurementId&&rP.warn(`The measurement ID in the local Firebase config (${P.options.measurementId}) does not match the measurement ID fetched from the server (${Q.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((P=>rP.error(P))),Q.push(X);const C=async function(){if(!(0,g.W)())return rP.warn(TP.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,g.jb)()}catch(P){return rP.warn(TP.create("indexeddb-unavailable",{errorInfo:null===P||void 0===P?void 0:P.toString()}).message),!1}return!0}().then((P=>P?b.getId():void 0)),[L,G]=await Promise.all([X,C]);(function(P){const Q=window.document.getElementsByTagName("script");for(const O of Object.values(Q))if(O.src&&O.src.includes(WP)&&O.src.includes(P))return O;return null})(m)||HP(m,L.measurementId),zP&&(F("consent","default",zP),aP(void 0)),F("js",new Date);const A=null!==(R=null===q||void 0===q?void 0:q.config)&&void 0!==R?R:{};return A.origin="firebase",A.update=!0,null!=G&&(A.firebase_id=G),F("config",L.measurementId,A),oP&&(F("set",oP),yP(void 0)),L.measurementId}class hP{constructor(P){this.app=P}_delete(){return delete VP[this.app.options.appId],Promise.resolve()}}let VP={},sP=[];const JP={};let eP,iP,YP="dataLayer",pP="gtag",DP=!1;function dP(P){if(DP)throw TP.create("already-initialized");P.dataLayerName&&(YP=P.dataLayerName),P.gtagName&&(pP=P.gtagName)}function NP(P,Q,O){!function(){const P=[];if((0,g.L)()&&P.push("This is a browser extension environment."),(0,g.j)()||P.push("Cookies are not available."),P.length>0){const Q=P.map(((P,Q)=>`(${Q+1}) ${P}`)).join(" "),O=TP.create("invalid-analytics-context",{errorInfo:Q});rP.warn(O.message)}}();const b=P.options.appId;if(!b)throw TP.create("no-app-id");if(!P.options.apiKey){if(!P.options.measurementId)throw TP.create("no-api-key");rP.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${P.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=VP[b])throw TP.create("already-exists",{id:b});if(!DP){!function(P){let Q=[];Array.isArray(window[P])?Q=window[P]:window[P]=Q}(YP);const{wrappedGtag:P,gtagCore:Q}=function(P,Q,O,b,F){let g=function(){for(var P=arguments.length,Q=new Array(P),O=0;O<P;O++)Q[O]=arguments[O];window[b].push(arguments)};return window[F]&&"function"===typeof window[F]&&(g=window[F]),window[F]=tP(g,P,Q,O),{gtagCore:g,wrappedGtag:window[F]}}(VP,sP,JP,YP,pP);iP=P,eP=Q,DP=!0}VP[b]=cP(P,sP,JP,Q,eP,YP,O);return new hP(P)}function fP(){let P=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,b.R)();P=(0,g.E)(P);const Q=(0,b.C)(P,wP);return Q.isInitialized()?Q.getImmediate():nP(P)}function nP(P){let Q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const O=(0,b.C)(P,wP);if(O.isInitialized()){const P=O.getImmediate();if((0,g.u)(Q,O.getOptions()))return P;throw TP.create("already-initialized")}return O.initialize({options:Q})}async function ZP(){if((0,g.L)())return!1;if(!(0,g.j)())return!1;if(!(0,g.W)())return!1;try{return await(0,g.jb)()}catch(P){return!1}}function UP(P,Q,O){P=(0,g.E)(P),async function(P,Q,O,b){if(b&&b.global)return P("set",{screen_name:O}),Promise.resolve();P("config",await Q,{update:!0,screen_name:O})}(iP,VP[P.app.options.appId],Q,O).catch((P=>rP.error(P)))}async function EP(P){return P=(0,g.E)(P),async function(P,Q){const O=await Q;return new Promise(((Q,b)=>{P("get",O,"client_id",(P=>{P||b(TP.create("no-client-id")),Q(P)}))}))}(iP,VP[P.app.options.appId])}function kP(P,Q,O){P=(0,g.E)(P),async function(P,Q,O,b){if(b&&b.global)return P("set",{user_id:O}),Promise.resolve();P("config",await Q,{update:!0,user_id:O})}(iP,VP[P.app.options.appId],Q,O).catch((P=>rP.error(P)))}function vP(P,Q,O){P=(0,g.E)(P),async function(P,Q,O,b){if(b&&b.global){const Q={};for(const P of Object.keys(O))Q[`user_properties.${P}`]=O[P];return P("set",Q),Promise.resolve()}P("config",await Q,{update:!0,user_properties:O})}(iP,VP[P.app.options.appId],Q,O).catch((P=>rP.error(P)))}function PQ(P,Q){P=(0,g.E)(P),async function(P,Q){const O=await P;window[`ga-disable-${O}`]=!Q}(VP[P.app.options.appId],Q).catch((P=>rP.error(P)))}function QQ(P){iP?iP("set",P):yP(P)}function OQ(P,Q,O,b){P=(0,g.E)(P),async function(P,Q,O,b,F){if(F&&F.global)P("event",O,b);else{const F=await Q;P("event",O,Object.assign(Object.assign({},b),{send_to:F}))}}(iP,VP[P.app.options.appId],Q,O,b).catch((P=>rP.error(P)))}function bQ(P){iP?iP("consent","update",P):aP(P)}const FQ="@firebase/analytics",gQ="0.10.0";(0,b.G)(new m.c(wP,((P,Q)=>{let{options:O}=Q;return NP(P.getProvider("app").getImmediate(),P.getProvider("installations-internal").getImmediate(),O)}),"PUBLIC")),(0,b.G)(new m.c("analytics-internal",(function(P){try{const Q=P.getProvider(wP).getImmediate();return{logEvent:(P,O,b)=>OQ(Q,P,O,b)}}catch(Q){throw TP.create("interop-component-reg-failed",{reason:Q})}}),"PRIVATE")),(0,b.Z)(FQ,gQ),(0,b.Z)(FQ,gQ,"esm2017")}}]);