"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[20,21],{11653:(h,V,i)=>{var S=i(11659),l=i(11167);l.e.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(l.e.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=S.e.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((h=>{this._texture._sphericalPolynomial=h,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(h){this._texture&&(this._texture._sphericalPolynomial=h)},enumerable:!0,configurable:!0})},11659:(h,V,i)=>{i.d(V,{e:()=>J});var S=i(11138),l=i(11162),Y=i(11335),g=i(11147),q=i(11189);class B{constructor(h,V,i,S){this.name=h,this.worldAxisForNormal=V,this.worldAxisForFileX=i,this.worldAxisForFileY=S}}class J{static ConvertCubeMapTextureToSphericalPolynomial(h){var V;if(!h.isCube)return null;null===(V=h.Mh())||void 0===V||V.getEngine().flushFramebuffer();const i=h.getSize().width,S=h.readPixels(0,void 0,void 0,!1),l=h.readPixels(1,void 0,void 0,!1);let Y,g;h.isRenderTarget?(Y=h.readPixels(3,void 0,void 0,!1),g=h.readPixels(2,void 0,void 0,!1)):(Y=h.readPixels(2,void 0,void 0,!1),g=h.readPixels(3,void 0,void 0,!1));const q=h.readPixels(4,void 0,void 0,!1),B=h.readPixels(5,void 0,void 0,!1),J=h.gammaSpace;let I=0;return 1!=h.textureType&&2!=h.textureType||(I=1),new Promise((h=>{Promise.all([l,S,Y,g,q,B]).then((V=>{let[S,l,Y,g,q,B]=V;const v={size:i,right:l,left:S,up:Y,down:g,front:q,back:B,format:5,type:I,gammaSpace:J};h(this.ConvertCubeMapToSphericalPolynomial(v))}))}))}static _AreaElement(h,V){return Math.atan2(h*V,Math.sqrt(h*h+V*V+1))}static ConvertCubeMapToSphericalPolynomial(h){const V=new Y.b;let i=0;const S=2/h.size,B=S,J=.5*S,I=J-1;for(let Y=0;Y<6;Y++){const v=this._FileFaces[Y],s=h[v.name];let t=I;const T=5===h.format?4:3;for(let Y=0;Y<h.size;Y++){let e=I;for(let B=0;B<h.size;B++){const I=v.worldAxisForFileX.scale(e).add(v.worldAxisForFileY.scale(t)).add(v.worldAxisForNormal);I.normalize();const n=this._AreaElement(e-J,t-J)-this._AreaElement(e-J,t+J)-this._AreaElement(e+J,t-J)+this._AreaElement(e+J,t+J);let c=s[Y*h.size*T+B*T+0],f=s[Y*h.size*T+B*T+1],P=s[Y*h.size*T+B*T+2];isNaN(c)&&(c=0),isNaN(f)&&(f=0),isNaN(P)&&(P=0),0===h.type&&(c/=255,f/=255,P/=255),h.gammaSpace&&(c=Math.pow((0,l.Clamp)(c),g.j),f=Math.pow((0,l.Clamp)(f),g.j),P=Math.pow((0,l.Clamp)(P),g.j));const L=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const h=Math.max(c,f,P);if(h>L){const V=L/h;c*=V,f*=V,P*=V}}else c=(0,l.Clamp)(c,0,L),f=(0,l.Clamp)(f,0,L),P=(0,l.Clamp)(P,0,L);const U=new q.LV(c,f,P);V.addLight(I,U,n),i+=n,e+=S}t+=B}}const v=6*(4*Math.PI)/6/i;return V.scaleInPlace(v),V.convertIncidentRadianceToIrradiance(),V.convertIrradianceToLambertianRadiance(),Y.e.FromHarmonics(V)}}J._FileFaces=[new B("right",new S.nV(1,0,0),new S.nV(0,0,-1),new S.nV(0,-1,0)),new B("left",new S.nV(-1,0,0),new S.nV(0,0,1),new S.nV(0,-1,0)),new B("up",new S.nV(0,1,0),new S.nV(1,0,0),new S.nV(0,0,1)),new B("down",new S.nV(0,-1,0),new S.nV(1,0,0),new S.nV(0,0,-1)),new B("front",new S.nV(0,0,1),new S.nV(1,0,0),new S.nV(0,-1,0)),new B("back",new S.nV(0,0,-1),new S.nV(-1,0,0),new S.nV(0,-1,0))],J.MAX_HDRI_VALUE=4096,J.PRESERVE_CLAMPED_COLORS=!1},11362:(h,V,i)=>{i.r(V),i.d(V,{Dispose:()=>s,DumpData:()=>v,DumpDataAsync:()=>I,DumpFramebuffer:()=>J,DumpTools:()=>t});var S=i(11257),l=i(10952),Y=i(11162),g=i(10988);let q,B=null;async function J(h,V,i,S){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Y=arguments.length>5?arguments[5]:void 0,g=arguments.length>6?arguments[6]:void 0;const q=await i.readPixels(0,0,h,V);v(h,V,new Uint8Array(q.buffer),S,l,Y,!0,void 0,g)}async function I(h,V,i){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",l=arguments.length>4?arguments[4]:void 0,Y=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6&&void 0!==arguments[6]&&arguments[6],q=arguments.length>7?arguments[7]:void 0;return await new Promise((B=>{v(h,V,i,(h=>B(h)),S,l,Y,g,q)}))}function v(h,V,J,I){let v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",t=arguments.length>5?arguments[5]:void 0,T=arguments.length>6&&void 0!==arguments[6]&&arguments[6],e=arguments.length>7&&void 0!==arguments[7]&&arguments[7],n=arguments.length>8?arguments[8]:void 0;(async function(){return B||(B=new Promise(((h,V)=>{let l,Y=null;const B={Xg:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(i.bind(i,11285)).then((J=>{let{ThinEngine:I}=J;const v=g.d.Instances.length;try{l=new OffscreenCanvas(100,100),Y=new I(l,!1,B)}catch(e){var t;v<g.d.Instances.length&&(null===(t=g.d.Instances.pop())||void 0===t||t.dispose()),l=document.createElement("canvas"),Y=new I(l,!1,B)}g.d.Instances.pop(),g.d.OnEnginesDisposedObservable.add((h=>{Y&&h!==Y&&!Y.B&&0===g.d.Instances.length&&s()})),Y.getCaps().parallelShaderCompile=void 0;const T=new S.b(Y);i.e(52).then(i.bind(i,13576)).then((i=>{let{passPixelShader:g}=i;if(!Y)return void V("Engine is not defined");const B=new S.e({eV:Y,name:g.name,fragmentShader:g.shader,samplerNames:["textureSampler"]});q={canvas:l,eV:Y,renderer:T,wrapper:B},h(q)}))})).catch(V)}))),await B})().then((i=>{if(i.eV.setSize(h,V,!0),J instanceof Float32Array){const h=new Uint8Array(J.length);let V=J.length;for(;V--;){const i=J[V];h[V]=Math.round(255*(0,Y.Clamp)(i))}J=h}const S=i.eV.createRawTexture(J,h,V,5,!1,!T,1);i.renderer.setViewport(),i.renderer.applyEffectWrapper(i.wrapper),i.wrapper.effect._bindTexture("textureSampler",S),i.renderer.draw(),e?l.Tools.ToBlob(i.canvas,(h=>{const V=new FileReader;V.onload=h=>{const V=h.target.result;I&&I(V)},V.readAsArrayBuffer(h)}),v,n):l.Tools.EncodeScreenshotCanvasData(i.canvas,I,v,t,n),S.dispose()}))}function s(){var h;q?(q.wrapper.dispose(),q.renderer.dispose(),q.eV.dispose()):null===(h=B)||void 0===h||h.then((h=>{h.wrapper.dispose(),h.renderer.dispose(),h.eV.dispose()}));B=null,q=null}const t={DumpData:v,DumpDataAsync:I,DumpFramebuffer:J,Dispose:s};l.Tools.DumpData=v,l.Tools.DumpDataAsync=I,l.Tools.DumpFramebuffer=J},11643:(h,V,i)=>{i.d(V,{b:()=>Y});var S=i(11250),l=i(11371);class Y{static ExpandRGBDTexture(h){const V=h._texture;if(!V||!h.isRGBD)return;const l=V.getEngine(),Y=l.getCaps(),g=V.isReady;let q=!1;Y.textureHalfFloatRender&&Y.textureHalfFloatLinearFiltering?(q=!0,V.type=2):Y.textureFloatRender&&Y.textureFloatLinearFiltering&&(q=!0,V.type=1),q&&(V.isReady=!1,V._isRGBD=!1,V.invertY=!1);const B=async()=>{const Y=l.isWebGPU,g=Y?1:0;V.isReady=!1,Y?await i.e(42).then(i.bind(i,14167)):await i.e(35).then(i.bind(i,14175));const q=new S.d("rgbdDecode","rgbdDecode",null,null,1,null,3,l,!1,void 0,V.type,void 0,null,!1,void 0,g);q.externalTextureSamplerBinding=!0;const B=l.createRenderTargetTexture(V.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:V.samplingMode,type:V.type,format:5});q.onEffectCreatedObservable.addOnce((i=>{i.executeWhenCompiled((()=>{q.onApply=h=>{h._bindTexture("textureSampler",V),h.setFloat2("scale",1,1)},h.Mh().postProcessManager.directRender([q],B,!0),l.restoreDefaultFramebuffer(),l._releaseTexture(V),q&&q.dispose(),B._swapAndDie(V),V.isReady=!0}))}))};q&&(g?B():h.onLoadObservable.addOnce(B))}static async EncodeTextureToRGBD(h,V){let S=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return V.getEngine().isWebGPU?await i.e(43).then(i.bind(i,14188)):await i.e(36).then(i.bind(i,14183)),await(0,l.d)("rgbdEncode",h,V,S,1,5)}}}}]);