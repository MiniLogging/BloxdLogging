"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[62],{14054:(q,c,U)=>{U.r(c),U.d(c,{FlowGraphInterpolationBlock:()=>X});var J=U(12667),Q=U(12648),s=U(11468),g=U(10850);class X extends J.c{constructor(){let q=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(q),this.keyFrames=[];const c="string"===typeof(null===q||void 0===q?void 0:q.animationType)?(0,Q.S)(q.animationType):(0,Q.P)((null===q||void 0===q?void 0:q.animationType)??0),U=(null===q||void 0===q?void 0:q.keyFramesCount)??1,J=this.registerDataInput("duration_0",Q.t,0),s=this.registerDataInput("value_0",c);this.keyFrames.push({duration:J,value:s});for(let g=1;g<U+1;g++){const J=this.registerDataInput(`duration_${g}`,Q.t,g===U?q.duration:void 0),s=this.registerDataInput(`value_${g}`,c);this.keyFrames.push({duration:J,value:s})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[U].value,this.easingFunction=this.registerDataInput("easingFunction",Q.c),this.animation=this.registerDataOutput("animation",Q.c),this.propertyName=this.registerDataInput("propertyName",Q.c,null===q||void 0===q?void 0:q.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",Q.c)}_updateOutputs(q){const c=q._getGlobalContextVariable("interpolationAnimations",[]),U=this.propertyName.getValue(q),J=this.easingFunction.getValue(q),Q=this._createAnimation(q,U,J);if(this.animation.setValue(Q,q),Array.isArray(Q))for(const s of Q)c.push(s.uniqueId);else c.push(Q.uniqueId);q._setGlobalContextVariable("interpolationAnimations",c)}_createAnimation(q,c,U){var J;const Q=this.initialValue.richType,g=[],X=this.initialValue.getValue(q)||Q.defaultValue;g.push({frame:0,value:X});const n=(null===(J=this.config)||void 0===J?void 0:J.numberOfKeyFrames)??1;for(let s=1;s<n+1;s++){var W,D;const c=null===(W=this.keyFrames[s].duration)||void 0===W?void 0:W.getValue(q);let U=null===(D=this.keyFrames[s].value)||void 0===D?void 0:D.getValue(q);s===n-1&&(U=U||Q.defaultValue),void 0!==c&&U&&g.push({frame:60*c,value:U})}const u=this.customBuildAnimation.getValue(q);if(u)return u(null,null,q)(g,60,Q.animationType,U);if("string"===typeof c){const q=s.b.CreateAnimation(c,Q.animationType,60,U);return q.setKeys(g),[q]}return c.map((q=>{const c=s.b.CreateAnimation(q,Q.animationType,60,U);return c.setKeys(g),c}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,g.f)("FlowGraphInterpolationBlock",X)}}]);