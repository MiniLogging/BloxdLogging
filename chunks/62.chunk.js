"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[62],{14367:(w,p,e)=>{e.r(p),e.d(p,{FlowGraphInterpolationBlock:()=>q});var r=e(12893),I=e(12872),d=e(11713),f=e(11038);class q extends r.e{constructor(){let w=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(w),this.keyFrames=[];const p="string"===typeof(null===w||void 0===w?void 0:w.animationType)?(0,I.L)(w.animationType):(0,I.H)((null===w||void 0===w?void 0:w.animationType)??0),e=(null===w||void 0===w?void 0:w.keyFramesCount)??1,r=this.registerDataInput("duration_0",I.o,0),d=this.registerDataInput("value_0",p);this.keyFrames.push({duration:r,value:d});for(let f=1;f<e+1;f++){const r=this.registerDataInput(`duration_${f}`,I.o,f===e?w.duration:void 0),d=this.registerDataInput(`value_${f}`,p);this.keyFrames.push({duration:r,value:d})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[e].value,this.easingFunction=this.registerDataInput("easingFunction",I.c),this.animation=this.registerDataOutput("animation",I.c),this.propertyName=this.registerDataInput("propertyName",I.c,null===w||void 0===w?void 0:w.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",I.c)}_updateOutputs(w){const p=w._getGlobalContextVariable("interpolationAnimations",[]),e=this.propertyName.getValue(w),r=this.easingFunction.getValue(w),I=this._createAnimation(w,e,r);if(this.animation.setValue(I,w),Array.isArray(I))for(const d of I)p.push(d.uniqueId);else p.push(I.uniqueId);w._setGlobalContextVariable("interpolationAnimations",p)}_createAnimation(w,p,e){var r;const I=this.initialValue.richType,f=[],q=this.initialValue.getValue(w)||I.defaultValue;f.push({frame:0,value:q});const E=(null===(r=this.config)||void 0===r?void 0:r.numberOfKeyFrames)??1;for(let d=1;d<E+1;d++){var j,X;const p=null===(j=this.keyFrames[d].duration)||void 0===j?void 0:j.getValue(w);let e=null===(X=this.keyFrames[d].value)||void 0===X?void 0:X.getValue(w);d===E-1&&(e=e||I.defaultValue),void 0!==p&&e&&f.push({frame:60*p,value:e})}const k=this.customBuildAnimation.getValue(w);if(k)return k(null,null,w)(f,60,I.animationType,e);if("string"===typeof p){const w=d.c.CreateAnimation(p,I.animationType,60,e);return w.setKeys(f),[w]}return p.map((w=>{const p=d.c.CreateAnimation(w,I.animationType,60,e);return p.setKeys(f),p}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,f.d)("FlowGraphInterpolationBlock",q)}}]);