"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[62],{14167:(x,O,Q)=>{Q.r(O),Q.d(O,{FlowGraphInterpolationBlock:()=>o});var X=Q(12726),Z=Q(12707),n=Q(11538),V=Q(10866);class o extends X.d{constructor(){let x=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(x),this.keyFrames=[];const O="string"===typeof(null===x||void 0===x?void 0:x.animationType)?(0,Z.G)(x.animationType):(0,Z.E)((null===x||void 0===x?void 0:x.animationType)??0),Q=(null===x||void 0===x?void 0:x.keyFramesCount)??1,X=this.registerDataInput("duration_0",Z.q,0),n=this.registerDataInput("value_0",O);this.keyFrames.push({duration:X,value:n});for(let V=1;V<Q+1;V++){const X=this.registerDataInput(`duration_${V}`,Z.q,V===Q?x.duration:void 0),n=this.registerDataInput(`value_${V}`,O);this.keyFrames.push({duration:X,value:n})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[Q].value,this.easingFunction=this.registerDataInput("easingFunction",Z.d),this.animation=this.registerDataOutput("animation",Z.d),this.propertyName=this.registerDataInput("propertyName",Z.d,null===x||void 0===x?void 0:x.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",Z.d)}_updateOutputs(x){const O=x._getGlobalContextVariable("interpolationAnimations",[]),Q=this.propertyName.getValue(x),X=this.easingFunction.getValue(x),Z=this._createAnimation(x,Q,X);if(this.animation.setValue(Z,x),Array.isArray(Z))for(const n of Z)O.push(n.uniqueId);else O.push(Z.uniqueId);x._setGlobalContextVariable("interpolationAnimations",O)}_createAnimation(x,O,Q){var X;const Z=this.initialValue.richType,V=[],o=this.initialValue.getValue(x)||Z.defaultValue;V.push({frame:0,value:o});const l=(null===(X=this.config)||void 0===X?void 0:X.numberOfKeyFrames)??1;for(let n=1;n<l+1;n++){var C,U;const O=null===(C=this.keyFrames[n].duration)||void 0===C?void 0:C.getValue(x);let Q=null===(U=this.keyFrames[n].value)||void 0===U?void 0:U.getValue(x);n===l-1&&(Q=Q||Z.defaultValue),void 0!==O&&Q&&V.push({frame:60*O,value:Q})}const L=this.customBuildAnimation.getValue(x);if(L)return L(null,null,x)(V,60,Z.animationType,Q);if("string"===typeof O){const x=n.b.CreateAnimation(O,Z.animationType,60,Q);return x.setKeys(V),[x]}return O.map((x=>{const O=n.b.CreateAnimation(x,Z.animationType,60,Q);return O.setKeys(V),O}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,V.d)("FlowGraphInterpolationBlock",o)}}]);