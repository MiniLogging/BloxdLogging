"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[62],{14493:(G,V,W)=>{W.r(V),W.d(V,{FlowGraphInterpolationBlock:()=>z});var J=W(13093),R=W(13071),d=W(11847),k=W(11159);class z extends J.c{constructor(){let G=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(G),this.keyFrames=[];const V="string"===typeof(null===G||void 0===G?void 0:G.animationType)?(0,R.I)(G.animationType):(0,R.E)((null===G||void 0===G?void 0:G.animationType)??0),W=(null===G||void 0===G?void 0:G.keyFramesCount)??1,J=this.registerDataInput("duration_0",R.r,0),d=this.registerDataInput("value_0",V);this.keyFrames.push({duration:J,value:d});for(let k=1;k<W+1;k++){const J=this.registerDataInput(`duration_${k}`,R.r,k===W?G.duration:void 0),d=this.registerDataInput(`value_${k}`,V);this.keyFrames.push({duration:J,value:d})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[W].value,this.easingFunction=this.registerDataInput("easingFunction",R.b),this.animation=this.registerDataOutput("animation",R.b),this.propertyName=this.registerDataInput("propertyName",R.b,null===G||void 0===G?void 0:G.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",R.b)}_updateOutputs(G){const V=G._getGlobalContextVariable("interpolationAnimations",[]),W=this.propertyName.getValue(G),J=this.easingFunction.getValue(G),R=this._createAnimation(G,W,J);if(this.animation.setValue(R,G),Array.isArray(R))for(const d of R)V.push(d.uniqueId);else V.push(R.uniqueId);G._setGlobalContextVariable("interpolationAnimations",V)}_createAnimation(G,V,W){var J;const R=this.initialValue.richType,k=[],z=this.initialValue.getValue(G)||R.defaultValue;k.push({frame:0,value:z});const X=(null===(J=this.config)||void 0===J?void 0:J.numberOfKeyFrames)??1;for(let d=1;d<X+1;d++){var P,A;const V=null===(P=this.keyFrames[d].duration)||void 0===P?void 0:P.getValue(G);let W=null===(A=this.keyFrames[d].value)||void 0===A?void 0:A.getValue(G);d===X-1&&(W=W||R.defaultValue),void 0!==V&&W&&k.push({frame:60*V,value:W})}const x=this.customBuildAnimation.getValue(G);if(x)return x(null,null,G)(k,60,R.animationType,W);if("string"===typeof V){const G=d.e.CreateAnimation(V,R.animationType,60,W);return G.setKeys(k),[G]}return V.map((G=>{const V=d.e.CreateAnimation(G,R.animationType,60,W);return V.setKeys(k),V}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,k.d)("FlowGraphInterpolationBlock",z)}}]);