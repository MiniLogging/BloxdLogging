"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[62],{14131:(q,f,j)=>{j.r(f),j.d(f,{FlowGraphInterpolationBlock:()=>Q});var d=j(12726),g=j(12709),h=j(11609),L=j(10965);class Q extends d.e{constructor(){let q=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(q),this.keyFrames=[];const f="string"===typeof(null===q||void 0===q?void 0:q.animationType)?(0,g.D)(q.animationType):(0,g.C)((null===q||void 0===q?void 0:q.animationType)??0),j=(null===q||void 0===q?void 0:q.keyFramesCount)??1,d=this.registerDataInput("duration_0",g.o,0),h=this.registerDataInput("value_0",f);this.keyFrames.push({duration:d,value:h});for(let L=1;L<j+1;L++){const d=this.registerDataInput(`duration_${L}`,g.o,L===j?q.duration:void 0),h=this.registerDataInput(`value_${L}`,f);this.keyFrames.push({duration:d,value:h})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[j].value,this.easingFunction=this.registerDataInput("easingFunction",g.c),this.animation=this.registerDataOutput("animation",g.c),this.propertyName=this.registerDataInput("propertyName",g.c,null===q||void 0===q?void 0:q.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",g.c)}_updateOutputs(q){const f=q._getGlobalContextVariable("interpolationAnimations",[]),j=this.propertyName.getValue(q),d=this.easingFunction.getValue(q),g=this._createAnimation(q,j,d);if(this.animation.setValue(g,q),Array.isArray(g))for(const h of g)f.push(h.uniqueId);else f.push(g.uniqueId);q._setGlobalContextVariable("interpolationAnimations",f)}_createAnimation(q,f,j){var d;const g=this.initialValue.richType,L=[],Q=this.initialValue.getValue(q)||g.defaultValue;L.push({frame:0,value:Q});const H=(null===(d=this.config)||void 0===d?void 0:d.numberOfKeyFrames)??1;for(let h=1;h<H+1;h++){var r,u;const f=null===(r=this.keyFrames[h].duration)||void 0===r?void 0:r.getValue(q);let j=null===(u=this.keyFrames[h].value)||void 0===u?void 0:u.getValue(q);h===H-1&&(j=j||g.defaultValue),void 0!==f&&j&&L.push({frame:60*f,value:j})}const X=this.customBuildAnimation.getValue(q);if(X)return X(null,null,q)(L,60,g.animationType,j);if("string"===typeof f){const q=h.e.CreateAnimation(f,g.animationType,60,j);return q.setKeys(L),[q]}return f.map((q=>{const f=h.e.CreateAnimation(q,g.animationType,60,j);return f.setKeys(L),f}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,L.f)("FlowGraphInterpolationBlock",Q)}}]);