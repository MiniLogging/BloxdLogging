"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[62],{14321:(Z,c,L)=>{L.r(c),L.d(c,{FlowGraphInterpolationBlock:()=>V});var k=L(12846),N=L(12825),R=L(11716),G=L(11012);class V extends k.c{constructor(){let Z=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(Z),this.keyFrames=[];const c="string"===typeof(null===Z||void 0===Z?void 0:Z.animationType)?(0,N.H)(Z.animationType):(0,N.G)((null===Z||void 0===Z?void 0:Z.animationType)??0),L=(null===Z||void 0===Z?void 0:Z.keyFramesCount)??1,k=this.registerDataInput("duration_0",N.t,0),R=this.registerDataInput("value_0",c);this.keyFrames.push({duration:k,value:R});for(let G=1;G<L+1;G++){const k=this.registerDataInput(`duration_${G}`,N.t,G===L?Z.duration:void 0),R=this.registerDataInput(`value_${G}`,c);this.keyFrames.push({duration:k,value:R})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[L].value,this.easingFunction=this.registerDataInput("easingFunction",N.e),this.animation=this.registerDataOutput("animation",N.e),this.propertyName=this.registerDataInput("propertyName",N.e,null===Z||void 0===Z?void 0:Z.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",N.e)}_updateOutputs(Z){const c=Z._getGlobalContextVariable("interpolationAnimations",[]),L=this.propertyName.getValue(Z),k=this.easingFunction.getValue(Z),N=this._createAnimation(Z,L,k);if(this.animation.setValue(N,Z),Array.isArray(N))for(const R of N)c.push(R.uniqueId);else c.push(N.uniqueId);Z._setGlobalContextVariable("interpolationAnimations",c)}_createAnimation(Z,c,L){var k;const N=this.initialValue.richType,G=[],V=this.initialValue.getValue(Z)||N.defaultValue;G.push({frame:0,value:V});const p=(null===(k=this.config)||void 0===k?void 0:k.numberOfKeyFrames)??1;for(let R=1;R<p+1;R++){var J,z;const c=null===(J=this.keyFrames[R].duration)||void 0===J?void 0:J.getValue(Z);let L=null===(z=this.keyFrames[R].value)||void 0===z?void 0:z.getValue(Z);R===p-1&&(L=L||N.defaultValue),void 0!==c&&L&&G.push({frame:60*c,value:L})}const i=this.customBuildAnimation.getValue(Z);if(i)return i(null,null,Z)(G,60,N.animationType,L);if("string"===typeof c){const Z=R.c.CreateAnimation(c,N.animationType,60,L);return Z.setKeys(G),[Z]}return c.map((Z=>{const c=R.c.CreateAnimation(Z,N.animationType,60,L);return c.setKeys(G),c}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,G.g)("FlowGraphInterpolationBlock",V)}}]);