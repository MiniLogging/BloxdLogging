"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[62],{14237:(s,Z,o)=>{o.r(Z),o.d(Z,{FlowGraphInterpolationBlock:()=>O});var t=o(12802),j=o(12775),S=o(11611),a=o(10916);class O extends t.e{constructor(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(s),this.keyFrames=[];const Z="string"===typeof(null===s||void 0===s?void 0:s.animationType)?(0,j.U)(s.animationType):(0,j.R)((null===s||void 0===s?void 0:s.animationType)??0),o=(null===s||void 0===s?void 0:s.keyFramesCount)??1,t=this.registerDataInput("duration_0",j.w,0),S=this.registerDataInput("value_0",Z);this.keyFrames.push({duration:t,value:S});for(let a=1;a<o+1;a++){const t=this.registerDataInput(`duration_${a}`,j.w,a===o?s.duration:void 0),S=this.registerDataInput(`value_${a}`,Z);this.keyFrames.push({duration:t,value:S})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[o].value,this.easingFunction=this.registerDataInput("easingFunction",j.d),this.animation=this.registerDataOutput("animation",j.d),this.propertyName=this.registerDataInput("propertyName",j.d,null===s||void 0===s?void 0:s.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",j.d)}_updateOutputs(s){const Z=s._getGlobalContextVariable("interpolationAnimations",[]),o=this.propertyName.getValue(s),t=this.easingFunction.getValue(s),j=this._createAnimation(s,o,t);if(this.animation.setValue(j,s),Array.isArray(j))for(const S of j)Z.push(S.uniqueId);else Z.push(j.uniqueId);s._setGlobalContextVariable("interpolationAnimations",Z)}_createAnimation(s,Z,o){var t;const j=this.initialValue.richType,a=[],O=this.initialValue.getValue(s)||j.defaultValue;a.push({frame:0,value:O});const v=(null===(t=this.config)||void 0===t?void 0:t.numberOfKeyFrames)??1;for(let S=1;S<v+1;S++){var G,B;const Z=null===(G=this.keyFrames[S].duration)||void 0===G?void 0:G.getValue(s);let o=null===(B=this.keyFrames[S].value)||void 0===B?void 0:B.getValue(s);S===v-1&&(o=o||j.defaultValue),void 0!==Z&&o&&a.push({frame:60*Z,value:o})}const Q=this.customBuildAnimation.getValue(s);if(Q)return Q(null,null,s)(a,60,j.animationType,o);if("string"===typeof Z){const s=S.e.CreateAnimation(Z,j.animationType,60,o);return s.setKeys(a),[s]}return Z.map((s=>{const Z=S.e.CreateAnimation(s,j.animationType,60,o);return Z.setKeys(a),Z}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,a.f)("FlowGraphInterpolationBlock",O)}}]);