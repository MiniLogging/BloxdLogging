"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[62],{14015:(Z,U,n)=>{n.r(U),n.d(U,{AnimationGroup:()=>O,TargetedAnimation:()=>z});var i=n(11964),B=n(493),l=n(547),H=n(656),V=n(12774),G=n(702);class R{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(Z,U,n,B){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=U,this._target=Z,this._scene=n,this._host=B,this._activeTargets=[],U._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===i.e.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=G.b.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const Z={frame:0,value:this._minValue};this._keys.splice(0,0,Z)}if(this._target instanceof Array){let Z=0;for(const U of this._target)this._preparePath(U,Z),this._getOriginalValues(Z),Z++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const l=U.getEvents();if(l&&l.length>0)for(const i of l)this._events.push(i._clone());this._enableBlending=Z&&Z.animationPropertiesOverride?Z.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(Z){let U=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=this._animation.targetPropertyPath;if(n.length>1){let i=Z;for(let Z=0;Z<n.length-1;Z++){const U=n[Z];if(i=i[U],void 0===i)throw new Error(`Invalid property (${U}) in property path (${n.join(".")})`)}this._targetPath=n[n.length-1],this._activeTargets[U]=i}else this._targetPath=n[0],this._activeTargets[U]=Z;if(void 0===this._activeTargets[U][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${n.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let Z=0;for(const U of this._target)void 0!==this._originalValue[Z]&&this._setValue(U,this._activeTargets[Z],this._originalValue[Z],-1,Z),Z++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let Z=0;Z<this._events.length;Z++)this._events[Z].isDone=!1}isStopped(){return this._stopped}dispose(){const Z=this._animation.runtimeAnimations.indexOf(this);Z>-1&&this._animation.runtimeAnimations.splice(Z,1)}setValue(Z,U){if(this._targetIsArray)for(let n=0;n<this._target.length;n++){const i=this._target[n];this._setValue(i,this._activeTargets[n],Z,U,n)}else this._setValue(this._target,this._directTarget,Z,U,0)}_getOriginalValues(){let Z,U=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const n=this._activeTargets[U];Z=n.getLocalMatrix&&"_matrix"===this._targetPath?n.getLocalMatrix():n[this._targetPath],Z&&Z.clone?this._originalValue[U]=Z.clone():this._originalValue[U]=Z}_registerTargetForLateAnimationBinding(Z,U){const n=Z.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(n),n._lateAnimationHolders||(n._lateAnimationHolders={}),n._lateAnimationHolders[Z.targetPath]||(n._lateAnimationHolders[Z.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:U}),Z.isAdditive?(n._lateAnimationHolders[Z.targetPath].additiveAnimations.push(Z),n._lateAnimationHolders[Z.targetPath].totalAdditiveWeight+=Z.weight):(n._lateAnimationHolders[Z.targetPath].animations.push(Z),n._lateAnimationHolders[Z.targetPath].totalWeight+=Z.weight)}_setValue(Z,U,n,B,l){if(this._currentActiveTarget=U,this._weight=B,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const Z=U[this._targetPath];Z.clone?this._originalBlendValue=Z.clone():this._originalBlendValue=Z}this._originalBlendValue.m?i.e.AllowMatrixDecomposeForInterpolation?this._currentValue?G.b.DecomposeLerpToRef(this._originalBlendValue,n,this._blendingFactor,this._currentValue):this._currentValue=G.b.DecomposeLerp(this._originalBlendValue,n,this._blendingFactor):this._currentValue?G.b.LerpToRef(this._originalBlendValue,n,this._blendingFactor,this._currentValue):this._currentValue=G.b.Lerp(this._originalBlendValue,n,this._blendingFactor):this._currentValue=i.e._UniversalLerp(this._originalBlendValue,n,this._blendingFactor);const B=Z&&Z.animationPropertiesOverride?Z.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=B}else this._currentValue?this._currentValue.p?this._currentValue.p(n):this._currentValue=n:null!==n&&void 0!==n&&n.clone?this._currentValue=n.clone():this._currentValue=n;-1!==B?this._registerTargetForLateAnimationBinding(this,this._originalValue[l]):this._animationState.loopMode===i.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[l],U[this._targetPath]):U[this._targetPath]=this._originalValue[l]+this._currentValue:U[this._targetPath]=this._currentValue,Z.Ti&&Z.Ti(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(Z){let U=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=this._animation.getKeys();Z<n[0].frame?Z=n[0].frame:Z>n[n.length-1].frame&&(Z=n[n.length-1].frame);const i=this._events;if(i.length)for(let l=0;l<i.length;l++)i[l].onlyOnce||(i[l].isDone=i[l].frame<Z);this._currentFrame=Z;const B=this._animation._interpolate(Z,this._animationState);this.setValue(B,U)}_prepareForSpeedRatioChange(Z){const U=this._previousElapsedTime*(this._animation.framePerSecond*Z)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-U}animate(Z,U,n,B,l){let H=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const V=this._animation,G=V.targetPropertyPath;if(!G||G.length<1)return this._stopped=!0,!1;let R,d=!0;const F=this._events;let y=0;if(this._coreRuntimeAnimation)y=n-U,R=this._coreRuntimeAnimation.currentFrame,this._currentFrame=R,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let H;(U<this._minFrame||U>this._maxFrame)&&(U=this._minFrame),(n<this._minFrame||n>this._maxFrame)&&(n=this._maxFrame),y=n-U;let G=Z*(V.framePerSecond*l)/1e3+this._absoluteFrameOffset,S=0,q=!1;const c=B&&this._animationState.loopMode===i.e.ANIMATIONLOOPMODE_YOYO;if(c){const Z=(G-U)/y,n=Math.sin(Z*Math.PI);G=Math.abs(n)*y+U;const i=n>=0?1:-1;this._yoyoDirection!==i&&(q=!0),this._yoyoDirection=i}if(this._previousElapsedTime=Z,this._previousAbsoluteFrame=G,!B&&n>=U&&(G>=y&&l>0||G<=0&&l<0))d=!1,S=V._getKeyValue(this._maxValue);else if(!B&&U>=n&&(G<=y&&l<0||G>=0&&l>0))d=!1,S=V._getKeyValue(this._minValue);else if(this._animationState.loopMode!==i.e.ANIMATIONLOOPMODE_CYCLE){const Z=n.toString()+U.toString();if(!this._offsetsCache[Z]){this._animationState.repeatCount=0,this._animationState.loopMode=i.e.ANIMATIONLOOPMODE_CYCLE;const B=V._interpolate(U,this._animationState),l=V._interpolate(n,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),V.dataType){case i.e.ANIMATIONTYPE_FLOAT:this._offsetsCache[Z]=l-B;break;case i.e.ANIMATIONTYPE_QUATERNION:case i.e.ANIMATIONTYPE_VECTOR3:case i.e.ANIMATIONTYPE_VECTOR2:case i.e.ANIMATIONTYPE_SIZE:case i.e.ANIMATIONTYPE_COLOR3:this._offsetsCache[Z]=l.Qg(B)}this._highLimitsCache[Z]=l}S=this._highLimitsCache[Z],H=this._offsetsCache[Z]}if(void 0===H)switch(V.dataType){case i.e.ANIMATIONTYPE_FLOAT:H=0;break;case i.e.ANIMATIONTYPE_QUATERNION:H=i.h;break;case i.e.ANIMATIONTYPE_VECTOR3:H=i.q;break;case i.e.ANIMATIONTYPE_VECTOR2:H=i.m;break;case i.e.ANIMATIONTYPE_SIZE:H=i.l;break;case i.e.ANIMATIONTYPE_COLOR3:H=i.f;break;case i.e.ANIMATIONTYPE_COLOR4:H=i.g}if(this._host&&this._host.syncRoot){const Z=this._host.syncRoot;R=U+y*((Z.masterFrame-Z.fromFrame)/(Z.toFrame-Z.fromFrame))}else R=G>0&&U>n||G<0&&U<n?d&&0!==y?n+G%y:U:d&&0!==y?U+G%y:n;if(!c&&(l>0&&this.currentFrame>R||l<0&&this.currentFrame<R)||c&&q){this._onLoop();for(let Z=0;Z<F.length;Z++)F[Z].onlyOnce||(F[Z].isDone=!1);this._animationState.key=l>0?0:V.getKeys().length-1}this._currentFrame=R,this._animationState.repeatCount=0===y?0:G/y|0,this._animationState.highLimitValue=S,this._animationState.offsetValue=H}const S=V._interpolate(R,this._animationState);if(this.setValue(S,H),F.length)for(let i=0;i<F.length;i++)if(y>=0&&R>=F[i].frame&&F[i].frame>=U||y<0&&R<=F[i].frame&&F[i].frame<=U){const Z=F[i];Z.isDone||(Z.onlyOnce&&(F.splice(i,1),i--),Z.isDone=!0,Z.action(R))}return d||(this._stopped=!0),d}}var d=n(529);class F{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(Z){this._weight=-1!==Z?Math.min(Math.max(Z,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(Z){for(let U=0;U<this._runtimeAnimations.length;U++){this._runtimeAnimations[U]._prepareForSpeedRatioChange(Z)}this._speedRatio=Z,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(Z,U){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,l=arguments.length>4&&void 0!==arguments[4]&&arguments[4],H=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,V=arguments.length>6?arguments[6]:void 0,G=arguments.length>7?arguments[7]:void 0,R=arguments.length>8?arguments[8]:void 0,d=arguments.length>9&&void 0!==arguments[9]&&arguments[9],F=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=U,this.fromFrame=n,this.toFrame=i,this.loopAnimation=l,this.onAnimationEnd=V,this.onAnimationLoop=R,this.isAdditive=d,this.playOrder=F,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.Tk=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new B.e,this.onAnimationLoopObservable=new B.e,this._scene=Z,G&&this.appendAnimations(U,G),this._speedRatio=H,Z._activeAnimatables.push(this)}syncWith(Z){if(this._syncRoot=Z,Z){const Z=this._scene._activeAnimatables.indexOf(this);Z>-1&&(this._scene._activeAnimatables.splice(Z,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(Z,U){for(let n=0;n<U.length;n++){const i=U[n],B=new R(Z,i,this._scene,this);B._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(B)}}getAnimationByTargetProperty(Z){const U=this._runtimeAnimations;for(let n=0;n<U.length;n++)if(U[n].animation.targetProperty===Z)return U[n].animation;return null}getRuntimeAnimationByTargetProperty(Z){const U=this._runtimeAnimations;for(let n=0;n<U.length;n++)if(U[n].animation.targetProperty===Z)return U[n];return null}reset(){const Z=this._runtimeAnimations;for(let U=0;U<Z.length;U++)Z[U].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(Z){const U=this._runtimeAnimations;for(let n=0;n<U.length;n++)U[n].animation.enableBlending=!0,U[n].animation.blendingSpeed=Z}disableBlending(){const Z=this._runtimeAnimations;for(let U=0;U<Z.length;U++)Z[U].animation.enableBlending=!1}goToFrame(Z){let U=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=this._runtimeAnimations;if(n[0]){const U=n[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??n[0].currentFrame;const i=0===this.speedRatio?0:(Z-this._frameToSyncFromJump)/U*1e3/this.speedRatio;this._manualJumpDelay=-i}for(let i=0;i<n.length;i++)n[i].goToFrame(Z,U?this._weight:-1);this._goToFrame=Z}get paused(){return this.Tk}pause(){this.Tk||(this.Tk=!0)}restart(){this.Tk=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(Z,U){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(Z||U){const B=this._scene._activeAnimatables.indexOf(this);if(B>-1){const l=this._runtimeAnimations;for(let n=l.length-1;n>=0;n--){const i=l[n];Z&&i.animation.name!=Z||(U&&!U(i.target)||(i.dispose(),l.splice(n,1)))}0==l.length&&(n||this._scene._activeAnimatables.splice(B,1),i||this._raiseOnAnimationEnd())}}else{const Z=this._scene._activeAnimatables.indexOf(this);if(Z>-1){n||this._scene._activeAnimatables.splice(Z,1);const U=this._runtimeAnimations;for(let Z=0;Z<U.length;Z++)U[Z].dispose();this._runtimeAnimations.length=0,i||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((Z=>{this.onAnimationEndObservable.add((()=>{Z(this)}),void 0,void 0,this,!0)}))}_animate(Z){if(this.Tk)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=Z),!0;if(null===this._localDelayOffset?(this._localDelayOffset=Z,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=Z-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let U=!1;const n=this._runtimeAnimations;let i;for(i=0;i<n.length;i++){const B=n[i].animate(Z-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);U=U||B}if(this.animationStarted=U,!U){if(this.disposeOnEnd)for(i=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(i,1),i=0;i<n.length;i++)n[i].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return U}}function y(Z){if(0===Z.totalWeight&&0===Z.totalAdditiveWeight)return Z.originalValue;let U=1;const n=G.g.ti[0],i=G.g.ti[1],B=G.g.Quaternion[0];let l=0;const H=Z.animations[0],V=Z.originalValue;let R=1,d=!1;if(Z.totalWeight<1)R=1-Z.totalWeight,V.decompose(i,B,n);else{if(l=1,U=Z.totalWeight,R=H.weight/U,1==R){if(!Z.totalAdditiveWeight)return H.currentValue;d=!0}H.currentValue.decompose(i,B,n)}if(!d){i.scaleInPlace(R),n.scaleInPlace(R),B.scaleInPlace(R);for(let H=l;H<Z.animations.length;H++){const l=Z.animations[H];if(0===l.weight)continue;R=l.weight/U;const V=G.g.ti[2],d=G.g.ti[3],F=G.g.Quaternion[1];l.currentValue.decompose(d,F,V),d.scaleAndAddToRef(R,i),F.scaleAndAddToRef(G.d.Dot(B,F)>0?R:-R,B),V.scaleAndAddToRef(R,n)}B.normalize()}for(let y=0;y<Z.additiveAnimations.length;y++){const U=Z.additiveAnimations[y];if(0===U.weight)continue;const l=G.g.ti[2],H=G.g.ti[3],V=G.g.Quaternion[1];U.currentValue.decompose(H,V,l),H.multiplyToRef(i,H),G.k.LerpToRef(i,H,U.weight,i),B.multiplyToRef(V,V),G.d.SlerpToRef(B,V,U.weight,B),l.scaleAndAddToRef(U.weight,n)}const F=H?H._animationState.workValue:G.g.Matrix[0].clone();return G.b.ComposeToRef(i,B,n,F),F}function S(Z,U){if(0===Z.totalWeight&&0===Z.totalAdditiveWeight)return U;const n=Z.animations[0],i=Z.originalValue;let B=U;if(0===Z.totalWeight&&Z.totalAdditiveWeight>0)B.p(i);else if(1===Z.animations.length){if(G.d.SlerpToRef(i,n.currentValue,Math.min(1,Z.totalWeight),B),0===Z.totalAdditiveWeight)return B}else if(Z.animations.length>1){let n,l,H=1;if(Z.totalWeight<1){const U=1-Z.totalWeight;n=[],l=[],n.push(i),l.push(U)}else{if(2===Z.animations.length&&(G.d.SlerpToRef(Z.animations[0].currentValue,Z.animations[1].currentValue,Z.animations[1].weight/Z.totalWeight,U),0===Z.totalAdditiveWeight))return U;n=[],l=[],H=Z.totalWeight}for(let U=0;U<Z.animations.length;U++){const i=Z.animations[U];n.push(i.currentValue),l.push(i.weight/H)}let V=0;for(let Z=0;Z<n.length;)Z?(V+=l[Z],G.d.SlerpToRef(B,n[Z],l[Z]/V,B),Z++):(G.d.SlerpToRef(n[Z],n[Z+1],l[Z+1]/(l[Z]+l[Z+1]),U),B=U,V=l[Z]+l[Z+1],Z+=2)}for(let l=0;l<Z.additiveAnimations.length;l++){const U=Z.additiveAnimations[l];0!==U.weight&&(B.multiplyToRef(U.currentValue,G.g.Quaternion[0]),G.d.SlerpToRef(B,G.g.Quaternion[0],U.weight,B))}return B}var q,c,s=n(2420);q=s.d,(c=V.e)&&(c.prototype.copyAnimationRange=function(Z,U,n){let B=arguments.length>3&&void 0!==arguments[3]&&arguments[3],l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new i.e(this.name,"_matrix",Z.animations[0].framePerSecond,i.e.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const H=Z.animations[0].getRange(U);if(!H)return!1;const V=H.from,G=H.to,R=Z.animations[0].getKeys(),d=Z.length,F=Z.getParent(),y=this.getParent(),S=B&&F&&d&&this.length&&d!==this.length,q=S&&y&&F?y.length/F.length:1,c=B&&!y&&l&&(1!==l.x||1!==l.y||1!==l.z),s=this.animations[0].getKeys();let z,O,E;for(let i=0,t=R.length;i<t;i++)z=R[i],z.frame>=V&&z.frame<=G&&(B?(E=z.value.clone(),S?(O=E.getTranslation(),E.setTranslation(O.scaleInPlace(q))):c&&l?(O=E.getTranslation(),E.setTranslation(O.multiplyInPlace(l))):E=z.value):E=z.value,s.push({frame:z.frame+n,value:E}));return this.animations[0].createRange(U,V+n,G+n),!0}),q&&(q.prototype._animate=function(Z){if(!this.animationsEnabled)return;const U=d.c.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=U}this.deltaTime=void 0!==Z?Z:this.useConstantAnimationDeltaTime?16:(U-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=U;const n=this._activeAnimatables;if(0===n.length)return;this._animationTime+=this.deltaTime;const B=this._animationTime;for(let i=0;i<n.length;i++){const Z=n[i];!Z._animate(B)&&Z.disposeOnEnd&&i--}!function(Z){if(Z._registeredForLateAnimationBindings.length){for(let U=0;U<Z._registeredForLateAnimationBindings.length;U++){const n=Z._registeredForLateAnimationBindings.data[U];for(const Z in n._lateAnimationHolders){const U=n._lateAnimationHolders[Z],B=U.animations[0],l=U.originalValue;if(void 0===l||null===l)continue;const H=i.e.AllowMatrixDecomposeForInterpolation&&l.m;let V=n[Z];if(H)V=y(U);else if(void 0!==l.w)V=S(U,V||G.d.Identity());else{let Z=0,n=1;const H=B&&B._animationState.loopMode===i.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(U.totalWeight<1)V=H?l.clone?l.clone():l:B&&l.scale?l.scale(1-U.totalWeight):B?l*(1-U.totalWeight):l.clone?l.clone():l;else if(B){n=U.totalWeight;const i=B.weight/n;V=1!==i?B.currentValue.scale?B.currentValue.scale(i):B.currentValue*i:B.currentValue,H&&(V.addToRef?V.addToRef(l,V):V+=l),Z=1}for(let i=Z;i<U.animations.length;i++){const Z=U.animations[i],B=Z.weight/n;B&&(Z.currentValue.scaleAndAddToRef?Z.currentValue.scaleAndAddToRef(B,V):V+=Z.currentValue*B)}for(let i=0;i<U.additiveAnimations.length;i++){const Z=U.additiveAnimations[i],n=Z.weight;n&&(Z.currentValue.scaleAndAddToRef?Z.currentValue.scaleAndAddToRef(n,V):V+=Z.currentValue*n)}}n[Z]=V}n._lateAnimationHolders={}}Z._registeredForLateAnimationBindings.reset()}}(this)},q.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((Z,U)=>Z.playOrder-U.playOrder))},q.prototype.beginWeightedAnimation=function(Z,U,n){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,B=arguments.length>4?arguments[4]:void 0,l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,H=arguments.length>6?arguments[6]:void 0,V=arguments.length>7?arguments[7]:void 0,G=arguments.length>8?arguments[8]:void 0,R=arguments.length>9?arguments[9]:void 0,d=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const F=this.beginAnimation(Z,U,n,B,l,H,V,!1,G,R,d);return F.weight=i,F},q.prototype.beginAnimation=function(Z,U,n,i){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,l=arguments.length>5?arguments[5]:void 0,H=arguments.length>6?arguments[6]:void 0,V=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],G=arguments.length>8?arguments[8]:void 0,R=arguments.length>9?arguments[9]:void 0,d=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(B<0){const Z=U;U=n,n=Z,B=-B}U>n&&(B=-B),V&&this.stopAnimation(Z,void 0,G),H||(H=new F(this,Z,U,n,i,B,l,void 0,R,d));const y=!G||G(Z);if(Z.animations&&y&&H.appendAnimations(Z,Z.animations),Z.getAnimatables){const d=Z.getAnimatables();for(let Z=0;Z<d.length;Z++)this.beginAnimation(d[Z],U,n,i,B,l,H,V,G,R)}return H.reset(),H},q.prototype.beginHierarchyAnimation=function(Z,U,n,i,B){let l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,H=arguments.length>6?arguments[6]:void 0,V=arguments.length>7?arguments[7]:void 0,G=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],R=arguments.length>9?arguments[9]:void 0,d=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const F=Z.getDescendants(U),y=[];y.push(this.beginAnimation(Z,n,i,B,l,H,V,G,R,void 0,d));for(const S of F)y.push(this.beginAnimation(S,n,i,B,l,H,V,G,R,void 0,d));return y},q.prototype.beginDirectAnimation=function(Z,U,n,i,B){let l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(l<0){const Z=n;n=i,i=Z,l=-l}return n>i&&(l=-l),new F(this,Z,n,i,B,l,arguments.length>6?arguments[6]:void 0,U,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},q.prototype.beginDirectHierarchyAnimation=function(Z,U,n,i,B,l,H,V,G){let R=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const d=Z.getDescendants(U),F=[];F.push(this.beginDirectAnimation(Z,n,i,B,l,H,V,G,R));for(const y of d)F.push(this.beginDirectAnimation(y,n,i,B,l,H,V,G,R));return F},q.prototype.getAnimatableByTarget=function(Z){for(let U=0;U<this._activeAnimatables.length;U++)if(this._activeAnimatables[U].target===Z)return this._activeAnimatables[U];return null},q.prototype.getAllAnimatablesByTarget=function(Z){const U=[];for(let n=0;n<this._activeAnimatables.length;n++)this._activeAnimatables[n].target===Z&&U.push(this._activeAnimatables[n]);return U},q.prototype.stopAnimation=function(Z,U,n){const i=this.getAllAnimatablesByTarget(Z);for(const B of i)B.stop(U,n)},q.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let Z=0;Z<this._activeAnimatables.length;Z++)this._activeAnimatables[Z].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const Z of this.animationGroups)Z.stop()});class z{getClassName(){return"TargetedAnimation"}serialize(){const Z={};return Z.animation=this.animation.serialize(),Z.targetId=this.target.id,Z}}class O{get mask(){return this._mask}set mask(Z){this._mask!==Z&&(this._mask=Z,this.syncWithMask(!0))}syncWithMask(){let Z=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||Z){this._numActiveAnimatables=0;for(let Z=0;Z<this._animatables.length;++Z){const U=this._animatables[Z];!this.mask||this.mask.disabled||this.mask.retainsTarget(U.target.name)?(this._numActiveAnimatables++,U.paused&&U.restart()):U.paused||U.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let Z=0;Z<this._animatables.length;++Z){const U=this._animatables[Z];this.mask.retainsTarget(U.target.name)||(U.stop(),this._animatables.splice(Z,1),--Z)}for(let Z=0;Z<this._targetedAnimations.length;Z++){const U=this._targetedAnimations[Z];this.mask.retainsTarget(U.target.name)||(this._targetedAnimations.splice(Z,1),--Z)}}}get from(){return this._from}set from(Z){if(this._from!==Z){this._from=Z;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].fromFrame=this._from}}}get to(){return this._to}set to(Z){if(this._to!==Z){this._to=Z;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(Z){if(this._speedRatio!==Z){this._speedRatio=Z;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(Z){if(this._loopAnimation!==Z){this._loopAnimation=Z;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(Z){if(this._isAdditive!==Z){this._isAdditive=Z;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(Z){this._weight!==Z&&(this._weight=Z,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(Z){if(this._playOrder!==Z&&(this._playOrder=Z,this._animatables.length>0)){for(let Z=0;Z<this._animatables.length;Z++)this._animatables[Z].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(Z){if(this._enableBlending!==Z&&(this._enableBlending=Z,null!==Z))for(let U=0;U<this._targetedAnimations.length;++U)this._targetedAnimations[U].animation.enableBlending=Z}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(Z){if(this._blendingSpeed!==Z&&(this._blendingSpeed=Z,null!==Z))for(let U=0;U<this._targetedAnimations.length;++U)this._targetedAnimations[U].animation.blendingSpeed=Z}getLength(Z,U){Z=Z??this._from;return((U=U??this._to)-Z)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(Z){let U=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3?arguments[3]:void 0;if(0===Z.length)return null;i=i??Z[0].weight;let B=Number.MAX_VALUE,l=-Number.MAX_VALUE;if(n)for(const V of Z)V.from<B&&(B=V.from),V.to>l&&(l=V.to);const H=new O(Z[0].name+"_merged",Z[0]._scene,i);for(const V of Z){n&&V.normalize(B,l);for(const Z of V.targetedAnimations)H.addTargetedAnimation(Z.animation,Z.target);U&&V.dispose()}return H}constructor(Z){let U=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=Z,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new B.e,this.onAnimationLoopObservable=new B.e,this.onAnimationGroupLoopObservable=new B.e,this.onAnimationGroupEndObservable=new B.e,this.onAnimationGroupPauseObservable=new B.e,this.onAnimationGroupPlayObservable=new B.e,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=U||l.b.LastCreatedScene,this._weight=n,this._playOrder=i,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(Z,U){const n=new z;n.animation=Z,n.target=U;const i=Z.getKeys();return this._from>i[0].frame&&(this._from=i[0].frame),this._to<i[i.length-1].frame&&(this._to=i[i.length-1].frame),null!==this._enableBlending&&(Z.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(Z.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(n),this._shouldStart=!0,n}removeTargetedAnimation(Z){for(let U=this._targetedAnimations.length-1;U>-1;U--){this._targetedAnimations[U].animation===Z&&this._targetedAnimations.splice(U,1)}}normalize(){let Z=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,U=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==Z&&(Z=this._from),null==U&&(U=this._to);for(let n=0;n<this._targetedAnimations.length;n++){const i=this._targetedAnimations[n].animation.getKeys(),B=i[0],l=i[i.length-1];if(B.frame>Z){const U={frame:Z,value:B.value,inTangent:B.inTangent,outTangent:B.outTangent,interpolation:B.interpolation};i.splice(0,0,U)}if(l.frame<U){const Z={frame:U,value:l.value,inTangent:l.inTangent,outTangent:l.outTangent,interpolation:l.interpolation};i.push(Z)}}return this._from=Z,this._to=U,this}_processLoop(Z,U,n){Z.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(U),this._animationLoopFlags[n]||(this._animationLoopFlags[n]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let Z=arguments.length>0&&void 0!==arguments[0]&&arguments[0],U=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,i=arguments.length>3?arguments[3]:void 0,B=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=Z,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let l=0;l<this._targetedAnimations.length;l++){const H=this._targetedAnimations[l],V=this._scene.beginDirectAnimation(H.target,[H.animation],void 0!==n?n:this._from,void 0!==i?i:this._to,Z,U,void 0,void 0,void 0!==B?B:this._isAdditive);V.weight=this._weight,V.playOrder=this._playOrder,V.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(H),this._checkAnimationGroupEnded(V)},this._processLoop(V,H,l),this._animatables.push(V)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=U,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(Z){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==Z&&(this.loopAnimation=Z),this.restart()):(this.stop(),this.start(Z,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].reset()}return this}restart(){if(!this._isStarted)return this;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let Z=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const U=this._animatables.slice();for(let i=0;i<U.length;i++)U[i].stop(void 0,void 0,!0,Z);let n=0;for(let i=0;i<this._scene._activeAnimatables.length;i++){const U=this._scene._activeAnimatables[i];U._runtimeAnimations.length>0?this._scene._activeAnimatables[n++]=U:Z&&this._checkAnimationGroupEnded(U,Z)}return this._scene._activeAnimatables.length=n,this._isStarted=!1,this}setWeightForAllAnimatables(Z){for(let U=0;U<this._animatables.length;U++){this._animatables[U].weight=Z}return this}syncAllAnimationsWith(Z){for(let U=0;U<this._animatables.length;U++){this._animatables[U].syncWith(Z)}return this}goToFrame(Z){let U=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let n=0;n<this._animatables.length;n++){this._animatables[n].goToFrame(Z,U)}return this}getCurrentFrame(){var Z;return(null===(Z=this.animatables[0])||void 0===Z?void 0:Z.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const Z=this._scene.animationGroups.indexOf(this);if(Z>-1&&this._scene.animationGroups.splice(Z,1),this._parentContainer){const Z=this._parentContainer.animationGroups.indexOf(this);Z>-1&&this._parentContainer.animationGroups.splice(Z,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(Z){let U=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=this._animatables.indexOf(Z);n>-1&&this._animatables.splice(n,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,U||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(Z,U){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const i=new O(Z||this.name,this._scene,this._weight,this._playOrder);i._from=this.from,i._to=this.to,i._speedRatio=this.speedRatio,i._loopAnimation=this.loopAnimation,i._isAdditive=this.isAdditive,i._enableBlending=this.enableBlending,i._blendingSpeed=this.blendingSpeed,i.metadata=this.metadata,i.mask=this.mask;for(const B of this._targetedAnimations)i.addTargetedAnimation(n?B.animation.clone():B.animation,U?U(B.target):B.target);return i}serialize(){const Z={};Z.name=this.name,Z.from=this.from,Z.to=this.to,Z.speedRatio=this.speedRatio,Z.loopAnimation=this.loopAnimation,Z.isAdditive=this.isAdditive,Z.weight=this.weight,Z.playOrder=this.playOrder,Z.enableBlending=this.enableBlending,Z.blendingSpeed=this.blendingSpeed,Z.targetedAnimations=[];for(let U=0;U<this.targetedAnimations.length;U++){const n=this.targetedAnimations[U];Z.targetedAnimations[U]=n.serialize()}return H.b&&H.b.HasTags(this)&&(Z.tags=H.b.GetTags(this)),this.metadata&&(Z.metadata=this.metadata),Z}static Parse(Z,U){const n=new O(Z.name,U,Z.weight,Z.playOrder);for(let B=0;B<Z.targetedAnimations.length;B++){const l=Z.targetedAnimations[B],H=i.e.Parse(l.animation),V=l.targetId;if("influence"===l.animation.property){const Z=U.getMorphTargetById(V);Z&&n.addTargetedAnimation(H,Z)}else{const Z=U.getNodeById(V);null!=Z&&n.addTargetedAnimation(H,Z)}}return H.b&&H.b.AddTagsTo(n,Z.tags),null!==Z.from&&null!==Z.to&&n.normalize(Z.from,Z.to),void 0!==Z.speedRatio&&(n._speedRatio=Z.speedRatio),void 0!==Z.loopAnimation&&(n._loopAnimation=Z.loopAnimation),void 0!==Z.isAdditive&&(n._isAdditive=Z.isAdditive),void 0!==Z.weight&&(n._weight=Z.weight),void 0!==Z.playOrder&&(n._playOrder=Z.playOrder),void 0!==Z.enableBlending&&(n._enableBlending=Z.enableBlending),void 0!==Z.blendingSpeed&&(n._blendingSpeed=Z.blendingSpeed),void 0!==Z.metadata&&(n.metadata=Z.metadata),n}static MakeAnimationAdditive(Z,U,n){let B;B="object"===typeof U?U:{referenceFrame:U,range:n,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let l=Z;B.cloneOriginalAnimationGroup&&(l=Z.clone(B.clonedAnimationGroupName||l.name));const H=l.targetedAnimations;for(let V=0;V<H.length;V++){const Z=H[V];Z.animation=i.e.MakeAnimationAdditive(Z.animation,B)}if(l.isAdditive=!0,B.clipKeys){let Z=Number.MAX_VALUE,U=-Number.MAX_VALUE;const n=l.targetedAnimations;for(let i=0;i<n.length;i++){const B=n[i].animation.getKeys();Z>B[0].frame&&(Z=B[0].frame),U<B[B.length-1].frame&&(U=B[B.length-1].frame)}l._from=Z,l._to=U}return l}static ClipKeys(Z,U,n,i,B){const l=Z.clone(i||Z.name);return O.ClipKeysInPlace(l,U,n,B)}static ClipKeysInPlace(Z,U,n,i){return O.ClipInPlace(Z,U,n,i,!1)}static ClipFrames(Z,U,n,i,B){const l=Z.clone(i||Z.name);return O.ClipFramesInPlace(l,U,n,B)}static ClipFramesInPlace(Z,U,n,i){return O.ClipInPlace(Z,U,n,i,!0)}static ClipInPlace(Z,U,n,i){let B=arguments.length>4&&void 0!==arguments[4]&&arguments[4],l=Number.MAX_VALUE,H=-Number.MAX_VALUE;const V=Z.targetedAnimations;for(let G=0;G<V.length;G++){const Z=V[G],R=i?Z.animation:Z.animation.clone();B&&(R.createKeyForFrame(U),R.createKeyForFrame(n));const d=R.getKeys(),F=[];let y=Number.MAX_VALUE;for(let i=0;i<d.length;i++){const Z=d[i];if(!B&&i>=U&&i<=n||B&&Z.frame>=U&&Z.frame<=n){const U={frame:Z.frame,value:Z.value.clone?Z.value.clone():Z.value,inTangent:Z.inTangent,outTangent:Z.outTangent,interpolation:Z.interpolation,lockedTangent:Z.lockedTangent};y===Number.MAX_VALUE&&(y=U.frame),U.frame-=y,F.push(U)}}0!==F.length?(l>F[0].frame&&(l=F[0].frame),H<F[F.length-1].frame&&(H=F[F.length-1].frame),R.setKeys(F,!0),Z.animation=R):(V.splice(G,1),G--)}return Z._from=l,Z._to=H,Z}getClassName(){return"AnimationGroup"}toString(Z){let U="Name: "+this.name;return U+=", type: "+this.getClassName(),Z&&(U+=", from: "+this._from,U+=", to: "+this._to,U+=", isStarted: "+this._isStarted,U+=", speedRatio: "+this._speedRatio,U+=", targetedAnimations length: "+this._targetedAnimations.length,U+=", animatables length: "+this._animatables),U}}}}]);