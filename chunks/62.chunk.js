"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[62],{13953:(c,b,A)=>{A.r(b),A.d(b,{AnimationGroup:()=>j,TargetedAnimation:()=>y});var o=A(11907),t=A(518),n=A(550),h=A(653),s=A(12701),L=A(688);class C{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(c,b,A,t){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=b,this._target=c,this._scene=A,this._host=t,this._activeTargets=[],b._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===o.d.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=L.b.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const c={frame:0,value:this._minValue};this._keys.splice(0,0,c)}if(this._target instanceof Array){let c=0;for(const b of this._target)this._preparePath(b,c),this._getOriginalValues(c),c++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const n=b.getEvents();if(n&&n.length>0)for(const o of n)this._events.push(o._clone());this._enableBlending=c&&c.animationPropertiesOverride?c.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(c){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const A=this._animation.targetPropertyPath;if(A.length>1){let o=c;for(let c=0;c<A.length-1;c++){const b=A[c];if(o=o[b],void 0===o)throw new Error(`Invalid property (${b}) in property path (${A.join(".")})`)}this._targetPath=A[A.length-1],this._activeTargets[b]=o}else this._targetPath=A[0],this._activeTargets[b]=c;if(void 0===this._activeTargets[b][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${A.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let c=0;for(const b of this._target)void 0!==this._originalValue[c]&&this._setValue(b,this._activeTargets[c],this._originalValue[c],-1,c),c++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let c=0;c<this._events.length;c++)this._events[c].isDone=!1}isStopped(){return this._stopped}dispose(){const c=this._animation.runtimeAnimations.indexOf(this);c>-1&&this._animation.runtimeAnimations.splice(c,1)}setValue(c,b){if(this._targetIsArray)for(let A=0;A<this._target.length;A++){const o=this._target[A];this._setValue(o,this._activeTargets[A],c,b,A)}else this._setValue(this._target,this._directTarget,c,b,0)}_getOriginalValues(){let c,b=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const A=this._activeTargets[b];c=A.getLocalMatrix&&"_matrix"===this._targetPath?A.getLocalMatrix():A[this._targetPath],c&&c.clone?this._originalValue[b]=c.clone():this._originalValue[b]=c}_registerTargetForLateAnimationBinding(c,b){const A=c.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(A),A._lateAnimationHolders||(A._lateAnimationHolders={}),A._lateAnimationHolders[c.targetPath]||(A._lateAnimationHolders[c.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:b}),c.isAdditive?(A._lateAnimationHolders[c.targetPath].additiveAnimations.push(c),A._lateAnimationHolders[c.targetPath].totalAdditiveWeight+=c.weight):(A._lateAnimationHolders[c.targetPath].animations.push(c),A._lateAnimationHolders[c.targetPath].totalWeight+=c.weight)}_setValue(c,b,A,t,n){if(this._currentActiveTarget=b,this._weight=t,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const c=b[this._targetPath];c.clone?this._originalBlendValue=c.clone():this._originalBlendValue=c}this._originalBlendValue.m?o.d.AllowMatrixDecomposeForInterpolation?this._currentValue?L.b.DecomposeLerpToRef(this._originalBlendValue,A,this._blendingFactor,this._currentValue):this._currentValue=L.b.DecomposeLerp(this._originalBlendValue,A,this._blendingFactor):this._currentValue?L.b.LerpToRef(this._originalBlendValue,A,this._blendingFactor,this._currentValue):this._currentValue=L.b.Lerp(this._originalBlendValue,A,this._blendingFactor):this._currentValue=o.d._UniversalLerp(this._originalBlendValue,A,this._blendingFactor);const t=c&&c.animationPropertiesOverride?c.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=t}else this._currentValue?this._currentValue.p?this._currentValue.p(A):this._currentValue=A:null!==A&&void 0!==A&&A.clone?this._currentValue=A.clone():this._currentValue=A;-1!==t?this._registerTargetForLateAnimationBinding(this,this._originalValue[n]):this._animationState.loopMode===o.d.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[n],b[this._targetPath]):b[this._targetPath]=this._originalValue[n]+this._currentValue:b[this._targetPath]=this._currentValue,c.Yj&&c.Yj(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(c){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const A=this._animation.getKeys();c<A[0].frame?c=A[0].frame:c>A[A.length-1].frame&&(c=A[A.length-1].frame);const o=this._events;if(o.length)for(let n=0;n<o.length;n++)o[n].onlyOnce||(o[n].isDone=o[n].frame<c);this._currentFrame=c;const t=this._animation._interpolate(c,this._animationState);this.setValue(t,b)}_prepareForSpeedRatioChange(c){const b=this._previousElapsedTime*(this._animation.framePerSecond*c)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-b}animate(c,b,A,t,n){let h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const s=this._animation,L=s.targetPropertyPath;if(!L||L.length<1)return this._stopped=!0,!1;let C,J=!0;const X=this._events;let R=0;if(this._coreRuntimeAnimation)R=A-b,C=this._coreRuntimeAnimation.currentFrame,this._currentFrame=C,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let h;(b<this._minFrame||b>this._maxFrame)&&(b=this._minFrame),(A<this._minFrame||A>this._maxFrame)&&(A=this._maxFrame),R=A-b;let L=c*(s.framePerSecond*n)/1e3+this._absoluteFrameOffset,N=0,k=!1;const E=t&&this._animationState.loopMode===o.d.ANIMATIONLOOPMODE_YOYO;if(E){const c=(L-b)/R,A=Math.sin(c*Math.PI);L=Math.abs(A)*R+b;const o=A>=0?1:-1;this._yoyoDirection!==o&&(k=!0),this._yoyoDirection=o}if(this._previousElapsedTime=c,this._previousAbsoluteFrame=L,!t&&A>=b&&(L>=R&&n>0||L<=0&&n<0))J=!1,N=s._getKeyValue(this._maxValue);else if(!t&&b>=A&&(L<=R&&n<0||L>=0&&n>0))J=!1,N=s._getKeyValue(this._minValue);else if(this._animationState.loopMode!==o.d.ANIMATIONLOOPMODE_CYCLE){const c=A.toString()+b.toString();if(!this._offsetsCache[c]){this._animationState.repeatCount=0,this._animationState.loopMode=o.d.ANIMATIONLOOPMODE_CYCLE;const t=s._interpolate(b,this._animationState),n=s._interpolate(A,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),s.dataType){case o.d.ANIMATIONTYPE_FLOAT:this._offsetsCache[c]=n-t;break;case o.d.ANIMATIONTYPE_QUATERNION:case o.d.ANIMATIONTYPE_VECTOR3:case o.d.ANIMATIONTYPE_VECTOR2:case o.d.ANIMATIONTYPE_SIZE:case o.d.ANIMATIONTYPE_COLOR3:this._offsetsCache[c]=n.Xd(t)}this._highLimitsCache[c]=n}N=this._highLimitsCache[c],h=this._offsetsCache[c]}if(void 0===h)switch(s.dataType){case o.d.ANIMATIONTYPE_FLOAT:h=0;break;case o.d.ANIMATIONTYPE_QUATERNION:h=o.j;break;case o.d.ANIMATIONTYPE_VECTOR3:h=o.n;break;case o.d.ANIMATIONTYPE_VECTOR2:h=o.l;break;case o.d.ANIMATIONTYPE_SIZE:h=o.k;break;case o.d.ANIMATIONTYPE_COLOR3:h=o.e;break;case o.d.ANIMATIONTYPE_COLOR4:h=o.h}if(this._host&&this._host.syncRoot){const c=this._host.syncRoot;C=b+R*((c.masterFrame-c.fromFrame)/(c.toFrame-c.fromFrame))}else C=L>0&&b>A||L<0&&b<A?J&&0!==R?A+L%R:b:J&&0!==R?b+L%R:A;if(!E&&(n>0&&this.currentFrame>C||n<0&&this.currentFrame<C)||E&&k){this._onLoop();for(let c=0;c<X.length;c++)X[c].onlyOnce||(X[c].isDone=!1);this._animationState.key=n>0?0:s.getKeys().length-1}this._currentFrame=C,this._animationState.repeatCount=0===R?0:L/R|0,this._animationState.highLimitValue=N,this._animationState.offsetValue=h}const N=s._interpolate(C,this._animationState);if(this.setValue(N,h),X.length)for(let o=0;o<X.length;o++)if(R>=0&&C>=X[o].frame&&X[o].frame>=b||R<0&&C<=X[o].frame&&X[o].frame<=b){const c=X[o];c.isDone||(c.onlyOnce&&(X.splice(o,1),o--),c.isDone=!0,c.action(C))}return J||(this._stopped=!0),J}}var J=A(536);class X{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(c){this._weight=-1!==c?Math.min(Math.max(c,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(c){for(let b=0;b<this._runtimeAnimations.length;b++){this._runtimeAnimations[b]._prepareForSpeedRatioChange(c)}this._speedRatio=c,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(c,b){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,n=arguments.length>4&&void 0!==arguments[4]&&arguments[4],h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,s=arguments.length>6?arguments[6]:void 0,L=arguments.length>7?arguments[7]:void 0,C=arguments.length>8?arguments[8]:void 0,J=arguments.length>9&&void 0!==arguments[9]&&arguments[9],X=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=b,this.fromFrame=A,this.toFrame=o,this.loopAnimation=n,this.onAnimationEnd=s,this.onAnimationLoop=C,this.isAdditive=J,this.playOrder=X,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.Tj=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new t.b,this.onAnimationLoopObservable=new t.b,this._scene=c,L&&this.appendAnimations(b,L),this._speedRatio=h,c._activeAnimatables.push(this)}syncWith(c){if(this._syncRoot=c,c){const c=this._scene._activeAnimatables.indexOf(this);c>-1&&(this._scene._activeAnimatables.splice(c,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(c,b){for(let A=0;A<b.length;A++){const o=b[A],t=new C(c,o,this._scene,this);t._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(t)}}getAnimationByTargetProperty(c){const b=this._runtimeAnimations;for(let A=0;A<b.length;A++)if(b[A].animation.targetProperty===c)return b[A].animation;return null}getRuntimeAnimationByTargetProperty(c){const b=this._runtimeAnimations;for(let A=0;A<b.length;A++)if(b[A].animation.targetProperty===c)return b[A];return null}reset(){const c=this._runtimeAnimations;for(let b=0;b<c.length;b++)c[b].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(c){const b=this._runtimeAnimations;for(let A=0;A<b.length;A++)b[A].animation.enableBlending=!0,b[A].animation.blendingSpeed=c}disableBlending(){const c=this._runtimeAnimations;for(let b=0;b<c.length;b++)c[b].animation.enableBlending=!1}goToFrame(c){let b=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const A=this._runtimeAnimations;if(A[0]){const b=A[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??A[0].currentFrame;const o=0===this.speedRatio?0:(c-this._frameToSyncFromJump)/b*1e3/this.speedRatio;this._manualJumpDelay=-o}for(let o=0;o<A.length;o++)A[o].goToFrame(c,b?this._weight:-1);this._goToFrame=c}get paused(){return this.Tj}pause(){this.Tj||(this.Tj=!0)}restart(){this.Tj=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(c,b){let A=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(c||b){const t=this._scene._activeAnimatables.indexOf(this);if(t>-1){const n=this._runtimeAnimations;for(let A=n.length-1;A>=0;A--){const o=n[A];c&&o.animation.name!=c||(b&&!b(o.target)||(o.dispose(),n.splice(A,1)))}0==n.length&&(A||this._scene._activeAnimatables.splice(t,1),o||this._raiseOnAnimationEnd())}}else{const c=this._scene._activeAnimatables.indexOf(this);if(c>-1){A||this._scene._activeAnimatables.splice(c,1);const b=this._runtimeAnimations;for(let c=0;c<b.length;c++)b[c].dispose();this._runtimeAnimations.length=0,o||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((c=>{this.onAnimationEndObservable.add((()=>{c(this)}),void 0,void 0,this,!0)}))}_animate(c){if(this.Tj)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=c),!0;if(null===this._localDelayOffset?(this._localDelayOffset=c,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=c-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let b=!1;const A=this._runtimeAnimations;let o;for(o=0;o<A.length;o++){const t=A[o].animate(c-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);b=b||t}if(this.animationStarted=b,!b){if(this.disposeOnEnd)for(o=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(o,1),o=0;o<A.length;o++)A[o].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return b}}function R(c){if(0===c.totalWeight&&0===c.totalAdditiveWeight)return c.originalValue;let b=1;const A=L.f.ak[0],o=L.f.ak[1],t=L.f.Quaternion[0];let n=0;const h=c.animations[0],s=c.originalValue;let C=1,J=!1;if(c.totalWeight<1)C=1-c.totalWeight,s.decompose(o,t,A);else{if(n=1,b=c.totalWeight,C=h.weight/b,1==C){if(!c.totalAdditiveWeight)return h.currentValue;J=!0}h.currentValue.decompose(o,t,A)}if(!J){o.scaleInPlace(C),A.scaleInPlace(C),t.scaleInPlace(C);for(let h=n;h<c.animations.length;h++){const n=c.animations[h];if(0===n.weight)continue;C=n.weight/b;const s=L.f.ak[2],J=L.f.ak[3],X=L.f.Quaternion[1];n.currentValue.decompose(J,X,s),J.scaleAndAddToRef(C,o),X.scaleAndAddToRef(L.e.Dot(t,X)>0?C:-C,t),s.scaleAndAddToRef(C,A)}t.normalize()}for(let R=0;R<c.additiveAnimations.length;R++){const b=c.additiveAnimations[R];if(0===b.weight)continue;const n=L.f.ak[2],h=L.f.ak[3],s=L.f.Quaternion[1];b.currentValue.decompose(h,s,n),h.multiplyToRef(o,h),L.k.LerpToRef(o,h,b.weight,o),t.multiplyToRef(s,s),L.e.SlerpToRef(t,s,b.weight,t),n.scaleAndAddToRef(b.weight,A)}const X=h?h._animationState.workValue:L.f.Matrix[0].clone();return L.b.ComposeToRef(o,t,A,X),X}function N(c,b){if(0===c.totalWeight&&0===c.totalAdditiveWeight)return b;const A=c.animations[0],o=c.originalValue;let t=b;if(0===c.totalWeight&&c.totalAdditiveWeight>0)t.p(o);else if(1===c.animations.length){if(L.e.SlerpToRef(o,A.currentValue,Math.min(1,c.totalWeight),t),0===c.totalAdditiveWeight)return t}else if(c.animations.length>1){let A,n,h=1;if(c.totalWeight<1){const b=1-c.totalWeight;A=[],n=[],A.push(o),n.push(b)}else{if(2===c.animations.length&&(L.e.SlerpToRef(c.animations[0].currentValue,c.animations[1].currentValue,c.animations[1].weight/c.totalWeight,b),0===c.totalAdditiveWeight))return b;A=[],n=[],h=c.totalWeight}for(let b=0;b<c.animations.length;b++){const o=c.animations[b];A.push(o.currentValue),n.push(o.weight/h)}let s=0;for(let c=0;c<A.length;)c?(s+=n[c],L.e.SlerpToRef(t,A[c],n[c]/s,t),c++):(L.e.SlerpToRef(A[c],A[c+1],n[c+1]/(n[c]+n[c+1]),b),t=b,s=n[c]+n[c+1],c+=2)}for(let n=0;n<c.additiveAnimations.length;n++){const b=c.additiveAnimations[n];0!==b.weight&&(t.multiplyToRef(b.currentValue,L.f.Quaternion[0]),L.e.SlerpToRef(t,L.f.Quaternion[0],b.weight,t))}return t}var k,E,V=A(2186);k=V.d,(E=s.b)&&(E.prototype.copyAnimationRange=function(c,b,A){let t=arguments.length>3&&void 0!==arguments[3]&&arguments[3],n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new o.d(this.name,"_matrix",c.animations[0].framePerSecond,o.d.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const h=c.animations[0].getRange(b);if(!h)return!1;const s=h.from,L=h.to,C=c.animations[0].getKeys(),J=c.length,X=c.getParent(),R=this.getParent(),N=t&&X&&J&&this.length&&J!==this.length,k=N&&R&&X?R.length/X.length:1,E=t&&!R&&n&&(1!==n.x||1!==n.y||1!==n.z),V=this.animations[0].getKeys();let y,j,F;for(let o=0,M=C.length;o<M;o++)y=C[o],y.frame>=s&&y.frame<=L&&(t?(F=y.value.clone(),N?(j=F.getTranslation(),F.setTranslation(j.scaleInPlace(k))):E&&n?(j=F.getTranslation(),F.setTranslation(j.multiplyInPlace(n))):F=y.value):F=y.value,V.push({frame:y.frame+A,value:F}));return this.animations[0].createRange(b,s+A,L+A),!0}),k&&(k.prototype._animate=function(c){if(!this.animationsEnabled)return;const b=J.e.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=b}this.deltaTime=void 0!==c?c:this.useConstantAnimationDeltaTime?16:(b-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=b;const A=this._activeAnimatables;if(0===A.length)return;this._animationTime+=this.deltaTime;const t=this._animationTime;for(let o=0;o<A.length;o++){const c=A[o];!c._animate(t)&&c.disposeOnEnd&&o--}!function(c){if(c._registeredForLateAnimationBindings.length){for(let b=0;b<c._registeredForLateAnimationBindings.length;b++){const A=c._registeredForLateAnimationBindings.data[b];for(const c in A._lateAnimationHolders){const b=A._lateAnimationHolders[c],t=b.animations[0],n=b.originalValue;if(void 0===n||null===n)continue;const h=o.d.AllowMatrixDecomposeForInterpolation&&n.m;let s=A[c];if(h)s=R(b);else if(void 0!==n.w)s=N(b,s||L.e.Identity());else{let c=0,A=1;const h=t&&t._animationState.loopMode===o.d.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(b.totalWeight<1)s=h?n.clone?n.clone():n:t&&n.scale?n.scale(1-b.totalWeight):t?n*(1-b.totalWeight):n.clone?n.clone():n;else if(t){A=b.totalWeight;const o=t.weight/A;s=1!==o?t.currentValue.scale?t.currentValue.scale(o):t.currentValue*o:t.currentValue,h&&(s.addToRef?s.addToRef(n,s):s+=n),c=1}for(let o=c;o<b.animations.length;o++){const c=b.animations[o],t=c.weight/A;t&&(c.currentValue.scaleAndAddToRef?c.currentValue.scaleAndAddToRef(t,s):s+=c.currentValue*t)}for(let o=0;o<b.additiveAnimations.length;o++){const c=b.additiveAnimations[o],A=c.weight;A&&(c.currentValue.scaleAndAddToRef?c.currentValue.scaleAndAddToRef(A,s):s+=c.currentValue*A)}}A[c]=s}A._lateAnimationHolders={}}c._registeredForLateAnimationBindings.reset()}}(this)},k.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((c,b)=>c.playOrder-b.playOrder))},k.prototype.beginWeightedAnimation=function(c,b,A){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,t=arguments.length>4?arguments[4]:void 0,n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,h=arguments.length>6?arguments[6]:void 0,s=arguments.length>7?arguments[7]:void 0,L=arguments.length>8?arguments[8]:void 0,C=arguments.length>9?arguments[9]:void 0,J=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const X=this.beginAnimation(c,b,A,t,n,h,s,!1,L,C,J);return X.weight=o,X},k.prototype.beginAnimation=function(c,b,A,o){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,n=arguments.length>5?arguments[5]:void 0,h=arguments.length>6?arguments[6]:void 0,s=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],L=arguments.length>8?arguments[8]:void 0,C=arguments.length>9?arguments[9]:void 0,J=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(t<0){const c=b;b=A,A=c,t=-t}b>A&&(t=-t),s&&this.stopAnimation(c,void 0,L),h||(h=new X(this,c,b,A,o,t,n,void 0,C,J));const R=!L||L(c);if(c.animations&&R&&h.appendAnimations(c,c.animations),c.getAnimatables){const J=c.getAnimatables();for(let c=0;c<J.length;c++)this.beginAnimation(J[c],b,A,o,t,n,h,s,L,C)}return h.reset(),h},k.prototype.beginHierarchyAnimation=function(c,b,A,o,t){let n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,h=arguments.length>6?arguments[6]:void 0,s=arguments.length>7?arguments[7]:void 0,L=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],C=arguments.length>9?arguments[9]:void 0,J=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const X=c.getDescendants(b),R=[];R.push(this.beginAnimation(c,A,o,t,n,h,s,L,C,void 0,J));for(const N of X)R.push(this.beginAnimation(N,A,o,t,n,h,s,L,C,void 0,J));return R},k.prototype.beginDirectAnimation=function(c,b,A,o,t){let n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(n<0){const c=A;A=o,o=c,n=-n}return A>o&&(n=-n),new X(this,c,A,o,t,n,arguments.length>6?arguments[6]:void 0,b,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},k.prototype.beginDirectHierarchyAnimation=function(c,b,A,o,t,n,h,s,L){let C=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const J=c.getDescendants(b),X=[];X.push(this.beginDirectAnimation(c,A,o,t,n,h,s,L,C));for(const R of J)X.push(this.beginDirectAnimation(R,A,o,t,n,h,s,L,C));return X},k.prototype.getAnimatableByTarget=function(c){for(let b=0;b<this._activeAnimatables.length;b++)if(this._activeAnimatables[b].target===c)return this._activeAnimatables[b];return null},k.prototype.getAllAnimatablesByTarget=function(c){const b=[];for(let A=0;A<this._activeAnimatables.length;A++)this._activeAnimatables[A].target===c&&b.push(this._activeAnimatables[A]);return b},k.prototype.stopAnimation=function(c,b,A){const o=this.getAllAnimatablesByTarget(c);for(const t of o)t.stop(b,A)},k.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let c=0;c<this._activeAnimatables.length;c++)this._activeAnimatables[c].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const c of this.animationGroups)c.stop()});class y{getClassName(){return"TargetedAnimation"}serialize(){const c={};return c.animation=this.animation.serialize(),c.targetId=this.target.id,c}}class j{get mask(){return this._mask}set mask(c){this._mask!==c&&(this._mask=c,this.syncWithMask(!0))}syncWithMask(){let c=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||c){this._numActiveAnimatables=0;for(let c=0;c<this._animatables.length;++c){const b=this._animatables[c];!this.mask||this.mask.disabled||this.mask.retainsTarget(b.target.name)?(this._numActiveAnimatables++,b.paused&&b.restart()):b.paused||b.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let c=0;c<this._animatables.length;++c){const b=this._animatables[c];this.mask.retainsTarget(b.target.name)||(b.stop(),this._animatables.splice(c,1),--c)}for(let c=0;c<this._targetedAnimations.length;c++){const b=this._targetedAnimations[c];this.mask.retainsTarget(b.target.name)||(this._targetedAnimations.splice(c,1),--c)}}}get from(){return this._from}set from(c){if(this._from!==c){this._from=c;for(let c=0;c<this._animatables.length;c++){this._animatables[c].fromFrame=this._from}}}get to(){return this._to}set to(c){if(this._to!==c){this._to=c;for(let c=0;c<this._animatables.length;c++){this._animatables[c].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(c){if(this._speedRatio!==c){this._speedRatio=c;for(let c=0;c<this._animatables.length;c++){this._animatables[c].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(c){if(this._loopAnimation!==c){this._loopAnimation=c;for(let c=0;c<this._animatables.length;c++){this._animatables[c].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(c){if(this._isAdditive!==c){this._isAdditive=c;for(let c=0;c<this._animatables.length;c++){this._animatables[c].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(c){this._weight!==c&&(this._weight=c,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(c){if(this._playOrder!==c&&(this._playOrder=c,this._animatables.length>0)){for(let c=0;c<this._animatables.length;c++)this._animatables[c].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(c){if(this._enableBlending!==c&&(this._enableBlending=c,null!==c))for(let b=0;b<this._targetedAnimations.length;++b)this._targetedAnimations[b].animation.enableBlending=c}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(c){if(this._blendingSpeed!==c&&(this._blendingSpeed=c,null!==c))for(let b=0;b<this._targetedAnimations.length;++b)this._targetedAnimations[b].animation.blendingSpeed=c}getLength(c,b){c=c??this._from;return((b=b??this._to)-c)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(c){let b=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],A=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3?arguments[3]:void 0;if(0===c.length)return null;o=o??c[0].weight;let t=Number.MAX_VALUE,n=-Number.MAX_VALUE;if(A)for(const s of c)s.from<t&&(t=s.from),s.to>n&&(n=s.to);const h=new j(c[0].name+"_merged",c[0]._scene,o);for(const s of c){A&&s.normalize(t,n);for(const c of s.targetedAnimations)h.addTargetedAnimation(c.animation,c.target);b&&s.dispose()}return h}constructor(c){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=c,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new t.b,this.onAnimationLoopObservable=new t.b,this.onAnimationGroupLoopObservable=new t.b,this.onAnimationGroupEndObservable=new t.b,this.onAnimationGroupPauseObservable=new t.b,this.onAnimationGroupPlayObservable=new t.b,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=b||n.c.LastCreatedScene,this._weight=A,this._playOrder=o,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(c,b){const A=new y;A.animation=c,A.target=b;const o=c.getKeys();return this._from>o[0].frame&&(this._from=o[0].frame),this._to<o[o.length-1].frame&&(this._to=o[o.length-1].frame),null!==this._enableBlending&&(c.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(c.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(A),this._shouldStart=!0,A}removeTargetedAnimation(c){for(let b=this._targetedAnimations.length-1;b>-1;b--){this._targetedAnimations[b].animation===c&&this._targetedAnimations.splice(b,1)}}normalize(){let c=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==c&&(c=this._from),null==b&&(b=this._to);for(let A=0;A<this._targetedAnimations.length;A++){const o=this._targetedAnimations[A].animation.getKeys(),t=o[0],n=o[o.length-1];if(t.frame>c){const b={frame:c,value:t.value,inTangent:t.inTangent,outTangent:t.outTangent,interpolation:t.interpolation};o.splice(0,0,b)}if(n.frame<b){const c={frame:b,value:n.value,inTangent:n.inTangent,outTangent:n.outTangent,interpolation:n.interpolation};o.push(c)}}return this._from=c,this._to=b,this}_processLoop(c,b,A){c.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(b),this._animationLoopFlags[A]||(this._animationLoopFlags[A]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let c=arguments.length>0&&void 0!==arguments[0]&&arguments[0],b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,A=arguments.length>2?arguments[2]:void 0,o=arguments.length>3?arguments[3]:void 0,t=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=c,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let n=0;n<this._targetedAnimations.length;n++){const h=this._targetedAnimations[n],s=this._scene.beginDirectAnimation(h.target,[h.animation],void 0!==A?A:this._from,void 0!==o?o:this._to,c,b,void 0,void 0,void 0!==t?t:this._isAdditive);s.weight=this._weight,s.playOrder=this._playOrder,s.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(h),this._checkAnimationGroupEnded(s)},this._processLoop(s,h,n),this._animatables.push(s)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=b,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let c=0;c<this._animatables.length;c++){this._animatables[c].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(c){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==c&&(this.loopAnimation=c),this.restart()):(this.stop(),this.start(c,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let c=0;c<this._animatables.length;c++){this._animatables[c].reset()}return this}restart(){if(!this._isStarted)return this;for(let c=0;c<this._animatables.length;c++){this._animatables[c].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let c=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const b=this._animatables.slice();for(let o=0;o<b.length;o++)b[o].stop(void 0,void 0,!0,c);let A=0;for(let o=0;o<this._scene._activeAnimatables.length;o++){const b=this._scene._activeAnimatables[o];b._runtimeAnimations.length>0?this._scene._activeAnimatables[A++]=b:c&&this._checkAnimationGroupEnded(b,c)}return this._scene._activeAnimatables.length=A,this._isStarted=!1,this}setWeightForAllAnimatables(c){for(let b=0;b<this._animatables.length;b++){this._animatables[b].weight=c}return this}syncAllAnimationsWith(c){for(let b=0;b<this._animatables.length;b++){this._animatables[b].syncWith(c)}return this}goToFrame(c){let b=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let A=0;A<this._animatables.length;A++){this._animatables[A].goToFrame(c,b)}return this}getCurrentFrame(){var c;return(null===(c=this.animatables[0])||void 0===c?void 0:c.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const c=this._scene.animationGroups.indexOf(this);if(c>-1&&this._scene.animationGroups.splice(c,1),this._parentContainer){const c=this._parentContainer.animationGroups.indexOf(this);c>-1&&this._parentContainer.animationGroups.splice(c,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(c){let b=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const A=this._animatables.indexOf(c);A>-1&&this._animatables.splice(A,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,b||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(c,b){let A=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o=new j(c||this.name,this._scene,this._weight,this._playOrder);o._from=this.from,o._to=this.to,o._speedRatio=this.speedRatio,o._loopAnimation=this.loopAnimation,o._isAdditive=this.isAdditive,o._enableBlending=this.enableBlending,o._blendingSpeed=this.blendingSpeed,o.metadata=this.metadata,o.mask=this.mask;for(const t of this._targetedAnimations)o.addTargetedAnimation(A?t.animation.clone():t.animation,b?b(t.target):t.target);return o}serialize(){const c={};c.name=this.name,c.from=this.from,c.to=this.to,c.speedRatio=this.speedRatio,c.loopAnimation=this.loopAnimation,c.isAdditive=this.isAdditive,c.weight=this.weight,c.playOrder=this.playOrder,c.enableBlending=this.enableBlending,c.blendingSpeed=this.blendingSpeed,c.targetedAnimations=[];for(let b=0;b<this.targetedAnimations.length;b++){const A=this.targetedAnimations[b];c.targetedAnimations[b]=A.serialize()}return h.d&&h.d.HasTags(this)&&(c.tags=h.d.GetTags(this)),this.metadata&&(c.metadata=this.metadata),c}static Parse(c,b){const A=new j(c.name,b,c.weight,c.playOrder);for(let t=0;t<c.targetedAnimations.length;t++){const n=c.targetedAnimations[t],h=o.d.Parse(n.animation),s=n.targetId;if("influence"===n.animation.property){const c=b.getMorphTargetById(s);c&&A.addTargetedAnimation(h,c)}else{const c=b.getNodeById(s);null!=c&&A.addTargetedAnimation(h,c)}}return h.d&&h.d.AddTagsTo(A,c.tags),null!==c.from&&null!==c.to&&A.normalize(c.from,c.to),void 0!==c.speedRatio&&(A._speedRatio=c.speedRatio),void 0!==c.loopAnimation&&(A._loopAnimation=c.loopAnimation),void 0!==c.isAdditive&&(A._isAdditive=c.isAdditive),void 0!==c.weight&&(A._weight=c.weight),void 0!==c.playOrder&&(A._playOrder=c.playOrder),void 0!==c.enableBlending&&(A._enableBlending=c.enableBlending),void 0!==c.blendingSpeed&&(A._blendingSpeed=c.blendingSpeed),void 0!==c.metadata&&(A.metadata=c.metadata),A}static MakeAnimationAdditive(c,b,A){let t;t="object"===typeof b?b:{referenceFrame:b,range:A,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let n=c;t.cloneOriginalAnimationGroup&&(n=c.clone(t.clonedAnimationGroupName||n.name));const h=n.targetedAnimations;for(let s=0;s<h.length;s++){const c=h[s];c.animation=o.d.MakeAnimationAdditive(c.animation,t)}if(n.isAdditive=!0,t.clipKeys){let c=Number.MAX_VALUE,b=-Number.MAX_VALUE;const A=n.targetedAnimations;for(let o=0;o<A.length;o++){const t=A[o].animation.getKeys();c>t[0].frame&&(c=t[0].frame),b<t[t.length-1].frame&&(b=t[t.length-1].frame)}n._from=c,n._to=b}return n}static ClipKeys(c,b,A,o,t){const n=c.clone(o||c.name);return j.ClipKeysInPlace(n,b,A,t)}static ClipKeysInPlace(c,b,A,o){return j.ClipInPlace(c,b,A,o,!1)}static ClipFrames(c,b,A,o,t){const n=c.clone(o||c.name);return j.ClipFramesInPlace(n,b,A,t)}static ClipFramesInPlace(c,b,A,o){return j.ClipInPlace(c,b,A,o,!0)}static ClipInPlace(c,b,A,o){let t=arguments.length>4&&void 0!==arguments[4]&&arguments[4],n=Number.MAX_VALUE,h=-Number.MAX_VALUE;const s=c.targetedAnimations;for(let L=0;L<s.length;L++){const c=s[L],C=o?c.animation:c.animation.clone();t&&(C.createKeyForFrame(b),C.createKeyForFrame(A));const J=C.getKeys(),X=[];let R=Number.MAX_VALUE;for(let o=0;o<J.length;o++){const c=J[o];if(!t&&o>=b&&o<=A||t&&c.frame>=b&&c.frame<=A){const b={frame:c.frame,value:c.value.clone?c.value.clone():c.value,inTangent:c.inTangent,outTangent:c.outTangent,interpolation:c.interpolation,lockedTangent:c.lockedTangent};R===Number.MAX_VALUE&&(R=b.frame),b.frame-=R,X.push(b)}}0!==X.length?(n>X[0].frame&&(n=X[0].frame),h<X[X.length-1].frame&&(h=X[X.length-1].frame),C.setKeys(X,!0),c.animation=C):(s.splice(L,1),L--)}return c._from=n,c._to=h,c}getClassName(){return"AnimationGroup"}toString(c){let b="Name: "+this.name;return b+=", type: "+this.getClassName(),c&&(b+=", from: "+this._from,b+=", to: "+this._to,b+=", isStarted: "+this._isStarted,b+=", speedRatio: "+this._speedRatio,b+=", targetedAnimations length: "+this._targetedAnimations.length,b+=", animatables length: "+this._animatables),b}}}}]);