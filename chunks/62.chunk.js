"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[62],{14392:(V,I,m)=>{m.r(I),m.d(I,{FlowGraphInterpolationBlock:()=>k});var C=m(12921),l=m(12899),s=m(11700),F=m(11048);class k extends C.e{constructor(){let V=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(V),this.keyFrames=[];const I="string"===typeof(null===V||void 0===V?void 0:V.animationType)?(0,l.I)(V.animationType):(0,l.G)((null===V||void 0===V?void 0:V.animationType)??0),m=(null===V||void 0===V?void 0:V.keyFramesCount)??1,C=this.registerDataInput("duration_0",l.r,0),s=this.registerDataInput("value_0",I);this.keyFrames.push({duration:C,value:s});for(let F=1;F<m+1;F++){const C=this.registerDataInput(`duration_${F}`,l.r,F===m?V.duration:void 0),s=this.registerDataInput(`value_${F}`,I);this.keyFrames.push({duration:C,value:s})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[m].value,this.easingFunction=this.registerDataInput("easingFunction",l.b),this.animation=this.registerDataOutput("animation",l.b),this.propertyName=this.registerDataInput("propertyName",l.b,null===V||void 0===V?void 0:V.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",l.b)}_updateOutputs(V){const I=V._getGlobalContextVariable("interpolationAnimations",[]),m=this.propertyName.getValue(V),C=this.easingFunction.getValue(V),l=this._createAnimation(V,m,C);if(this.animation.setValue(l,V),Array.isArray(l))for(const s of l)I.push(s.uniqueId);else I.push(l.uniqueId);V._setGlobalContextVariable("interpolationAnimations",I)}_createAnimation(V,I,m){var C;const l=this.initialValue.richType,F=[],k=this.initialValue.getValue(V)||l.defaultValue;F.push({frame:0,value:k});const j=(null===(C=this.config)||void 0===C?void 0:C.numberOfKeyFrames)??1;for(let s=1;s<j+1;s++){var E,K;const I=null===(E=this.keyFrames[s].duration)||void 0===E?void 0:E.getValue(V);let m=null===(K=this.keyFrames[s].value)||void 0===K?void 0:K.getValue(V);s===j-1&&(m=m||l.defaultValue),void 0!==I&&m&&F.push({frame:60*I,value:m})}const Y=this.customBuildAnimation.getValue(V);if(Y)return Y(null,null,V)(F,60,l.animationType,m);if("string"===typeof I){const V=s.c.CreateAnimation(I,l.animationType,60,m);return V.setKeys(F),[V]}return I.map((V=>{const I=s.c.CreateAnimation(V,l.animationType,60,m);return I.setKeys(F),I}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,F.h)("FlowGraphInterpolationBlock",k)}}]);