"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[62],{14067:(h,d,m)=>{m.r(d),m.d(d,{FlowGraphInterpolationBlock:()=>a});var j=m(12687),A=m(12671),b=m(11714),w=m(11080);class a extends j.d{constructor(){let h=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(h),this.keyFrames=[];const d="string"===typeof(null===h||void 0===h?void 0:h.animationType)?(0,A.M)(h.animationType):(0,A.I)((null===h||void 0===h?void 0:h.animationType)??0),m=(null===h||void 0===h?void 0:h.keyFramesCount)??1,j=this.registerDataInput("duration_0",A.y,0),b=this.registerDataInput("value_0",d);this.keyFrames.push({duration:j,value:b});for(let w=1;w<m+1;w++){const j=this.registerDataInput(`duration_${w}`,A.y,w===m?h.duration:void 0),b=this.registerDataInput(`value_${w}`,d);this.keyFrames.push({duration:j,value:b})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[m].value,this.easingFunction=this.registerDataInput("easingFunction",A.e),this.animation=this.registerDataOutput("animation",A.e),this.propertyName=this.registerDataInput("propertyName",A.e,null===h||void 0===h?void 0:h.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",A.e)}_updateOutputs(h){const d=h._getGlobalContextVariable("interpolationAnimations",[]),m=this.propertyName.getValue(h),j=this.easingFunction.getValue(h),A=this._createAnimation(h,m,j);if(this.animation.setValue(A,h),Array.isArray(A))for(const b of A)d.push(b.uniqueId);else d.push(A.uniqueId);h._setGlobalContextVariable("interpolationAnimations",d)}_createAnimation(h,d,m){var j;const A=this.initialValue.richType,w=[],a=this.initialValue.getValue(h)||A.defaultValue;w.push({frame:0,value:a});const D=(null===(j=this.config)||void 0===j?void 0:j.numberOfKeyFrames)??1;for(let b=1;b<D+1;b++){var S,M;const d=null===(S=this.keyFrames[b].duration)||void 0===S?void 0:S.getValue(h);let m=null===(M=this.keyFrames[b].value)||void 0===M?void 0:M.getValue(h);b===D-1&&(m=m||A.defaultValue),void 0!==d&&m&&w.push({frame:60*d,value:m})}const q=this.customBuildAnimation.getValue(h);if(q)return q(null,null,h)(w,60,A.animationType,m);if("string"===typeof d){const h=b.b.CreateAnimation(d,A.animationType,60,m);return h.setKeys(w),[h]}return d.map((h=>{const d=b.b.CreateAnimation(h,A.animationType,60,m);return d.setKeys(w),d}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,w.i)("FlowGraphInterpolationBlock",a)}}]);