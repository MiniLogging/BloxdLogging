"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[9],{2492:(k,M,F)=>{F.r(M),F.d(M,{Dispose:()=>U,DumpData:()=>L,DumpDataAsync:()=>d,DumpFramebuffer:()=>N,DumpTools:()=>O});var l=F(2409),t=F(480),g=F(698),B=F(516);let G,A=null;async function N(k,M,F,l){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",g=arguments.length>5?arguments[5]:void 0,B=arguments.length>6?arguments[6]:void 0;const G=await F.readPixels(0,0,k,M);L(k,M,new Uint8Array(G.buffer),l,t,g,!0,void 0,B)}function d(k,M,F){let l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",t=arguments.length>4?arguments[4]:void 0,g=arguments.length>5&&void 0!==arguments[5]&&arguments[5],B=arguments.length>6&&void 0!==arguments[6]&&arguments[6],G=arguments.length>7?arguments[7]:void 0;return new Promise((A=>{L(k,M,F,(k=>A(k)),l,t,g,B,G)}))}function L(k,M,N,d){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",O=arguments.length>5?arguments[5]:void 0,w=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Z=arguments.length>7&&void 0!==arguments[7]&&arguments[7],R=arguments.length>8?arguments[8]:void 0;(async function(){return A||(A=new Promise(((k,M)=>{let t,g=null;const A={Sk:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};F.e(22).then(F.bind(F,12169)).then((N=>{let{ThinEngine:d}=N;try{t=new OffscreenCanvas(100,100),g=new d(t,!1,A)}catch(O){t=document.createElement("canvas"),g=new d(t,!1,A)}B.e.Instances.pop(),B.e.OnEnginesDisposedObservable.add((k=>{g&&k!==g&&!g.u&&0===B.e.Instances.length&&U()})),g.getCaps().parallelShaderCompile=void 0;const L=new l.b(g);F.e(33).then(F.bind(F,13073)).then((F=>{let{passPixelShader:B}=F;if(!g)return void M("Engine is not defined");const A=new l.e({Xj:g,name:B.name,fragmentShader:B.shader,samplerNames:["textureSampler"]});G={canvas:t,Xj:g,renderer:L,wrapper:A},k(G)}))})).catch(M)}))),await A})().then((F=>{if(F.Xj.setSize(k,M,!0),N instanceof Float32Array){const k=new Uint8Array(N.length);let M=N.length;for(;M--;){const F=N[M];k[M]=Math.round(255*(0,g.e)(F))}N=k}const l=F.Xj.createRawTexture(N,k,M,5,!1,!w,1);F.renderer.setViewport(),F.renderer.applyEffectWrapper(F.wrapper),F.wrapper.effect._bindTexture("textureSampler",l),F.renderer.draw(),Z?t.f.ToBlob(F.canvas,(k=>{const M=new FileReader;M.onload=k=>{const M=k.target.result;d&&d(M)},M.readAsArrayBuffer(k)}),L,R):t.f.EncodeScreenshotCanvasData(F.canvas,d,L,O,R),l.dispose()}))}function U(){var k;G?(G.wrapper.dispose(),G.renderer.dispose(),G.Xj.dispose()):null===(k=A)||void 0===k||k.then((k=>{k.wrapper.dispose(),k.renderer.dispose(),k.Xj.dispose()}));A=null,G=null}const O={DumpData:L,DumpDataAsync:d,DumpFramebuffer:N,Dispose:U};t.f.DumpData=L,t.f.DumpDataAsync=d,t.f.DumpFramebuffer=N}}]);