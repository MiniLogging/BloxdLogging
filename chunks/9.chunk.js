"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[9],{2433:(a,x,Q)=>{Q.r(x),Q.d(x,{Dispose:()=>e,DumpData:()=>v,DumpDataAsync:()=>W,DumpFramebuffer:()=>U,DumpTools:()=>p});var s=Q(2342),h=Q(496),D=Q(699),N=Q(529);let C,R=null;async function U(a,x,Q,s){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",D=arguments.length>5?arguments[5]:void 0,N=arguments.length>6?arguments[6]:void 0;const C=await Q.readPixels(0,0,a,x);v(a,x,new Uint8Array(C.buffer),s,h,D,!0,void 0,N)}function W(a,x,Q){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",h=arguments.length>4?arguments[4]:void 0,D=arguments.length>5&&void 0!==arguments[5]&&arguments[5],N=arguments.length>6&&void 0!==arguments[6]&&arguments[6],C=arguments.length>7?arguments[7]:void 0;return new Promise((R=>{v(a,x,Q,(a=>R(a)),s,h,D,N,C)}))}function v(a,x,U,W){let v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",p=arguments.length>5?arguments[5]:void 0,j=arguments.length>6&&void 0!==arguments[6]&&arguments[6],H=arguments.length>7&&void 0!==arguments[7]&&arguments[7],d=arguments.length>8?arguments[8]:void 0;(async function(){return R||(R=new Promise(((a,x)=>{let h,D=null;const R={Mk:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Q.e(22).then(Q.bind(Q,12158)).then((U=>{let{ThinEngine:W}=U;try{h=new OffscreenCanvas(100,100),D=new W(h,!1,R)}catch(p){h=document.createElement("canvas"),D=new W(h,!1,R)}N.d.Instances.pop(),N.d.OnEnginesDisposedObservable.add((a=>{D&&a!==D&&!D.u&&0===N.d.Instances.length&&e()})),D.getCaps().parallelShaderCompile=void 0;const v=new s.c(D);Q.e(33).then(Q.bind(Q,13145)).then((Q=>{let{passPixelShader:N}=Q;if(!D)return void x("Engine is not defined");const R=new s.e({Gi:D,name:N.name,fragmentShader:N.shader,samplerNames:["textureSampler"]});C={canvas:h,Gi:D,renderer:v,wrapper:R},a(C)}))})).catch(x)}))),await R})().then((Q=>{if(Q.Gi.setSize(a,x,!0),U instanceof Float32Array){const a=new Uint8Array(U.length);let x=U.length;for(;x--;){const Q=U[x];a[x]=Math.round(255*(0,D.c)(Q))}U=a}const s=Q.Gi.createRawTexture(U,a,x,5,!1,!j,1);Q.renderer.setViewport(),Q.renderer.applyEffectWrapper(Q.wrapper),Q.wrapper.effect._bindTexture("textureSampler",s),Q.renderer.draw(),H?h.g.ToBlob(Q.canvas,(a=>{const x=new FileReader;x.onload=a=>{const x=a.target.result;W&&W(x)},x.readAsArrayBuffer(a)}),v,d):h.g.EncodeScreenshotCanvasData(Q.canvas,W,v,p,d),s.dispose()}))}function e(){var a;C?(C.wrapper.dispose(),C.renderer.dispose(),C.Gi.dispose()):null===(a=R)||void 0===a||a.then((a=>{a.wrapper.dispose(),a.renderer.dispose(),a.Gi.dispose()}));R=null,C=null}const p={DumpData:v,DumpDataAsync:W,DumpFramebuffer:U,Dispose:e};h.g.DumpData=v,h.g.DumpDataAsync=W,h.g.DumpFramebuffer=U}}]);