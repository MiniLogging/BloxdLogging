"use strict";(self.hbnkweqmycf=self.hbnkweqmycf||[]).push([[12,20],{11835:(F,P,f)=>{f.r(P),f.d(P,{Dispose:()=>T,DumpData:()=>u,DumpDataAsync:()=>i,DumpFramebuffer:()=>j,DumpTools:()=>Y});var c=f(11730),N=f(11462),q=f(11664),H=f(11501);let A,o=null;async function j(F,P,f,c){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",q=arguments.length>5?arguments[5]:void 0,H=arguments.length>6?arguments[6]:void 0;const A=await f.readPixels(0,0,F,P);u(F,P,new Uint8Array(A.buffer),c,N,q,!0,void 0,H)}async function i(F,P,f){let c=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",N=arguments.length>4?arguments[4]:void 0,q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],H=arguments.length>6&&void 0!==arguments[6]&&arguments[6],A=arguments.length>7?arguments[7]:void 0;return await new Promise((o=>{u(F,P,f,(F=>o(F)),c,N,q,H,A)}))}function u(F,P,j,i){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Y=arguments.length>5?arguments[5]:void 0,t=arguments.length>6&&void 0!==arguments[6]&&arguments[6],C=arguments.length>7&&void 0!==arguments[7]&&arguments[7],L=arguments.length>8?arguments[8]:void 0;(async function(){return o||(o=new Promise(((F,P)=>{let N,q=null;const o={If:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(f.bind(f,11752)).then((j=>{let{ThinEngine:i}=j;const u=H.b.Instances.length;try{N=new OffscreenCanvas(100,100),q=new i(N,!1,o)}catch(C){var Y;u<H.b.Instances.length&&(null===(Y=H.b.Instances.pop())||void 0===Y||Y.dispose()),N=document.createElement("canvas"),q=new i(N,!1,o)}H.b.Instances.pop(),H.b.OnEnginesDisposedObservable.add((F=>{q&&F!==q&&!q.u&&0===H.b.Instances.length&&T()})),q.getCaps().parallelShaderCompile=void 0;const t=new c.b(q);f.e(52).then(f.bind(f,14082)).then((f=>{let{passPixelShader:H}=f;if(!q)return void P("Engine is not defined");const o=new c.f({YP:q,name:H.name,fragmentShader:H.shader,samplerNames:["textureSampler"]});A={canvas:N,YP:q,renderer:t,wrapper:o},F(A)}))})).catch(P)}))),await o})().then((f=>{if(f.YP.setSize(F,P,!0),j instanceof Float32Array){const F=new Uint8Array(j.length);let P=j.length;for(;P--;){const f=j[P];F[P]=Math.round(255*(0,q.Clamp)(f))}j=F}const c=f.YP.createRawTexture(j,F,P,5,!1,!t,1);f.renderer.setViewport(),f.renderer.applyEffectWrapper(f.wrapper),f.wrapper.effect._bindTexture("textureSampler",c),f.renderer.draw(),C?N.Tools.ToBlob(f.canvas,(F=>{const P=new FileReader;P.onload=F=>{const P=F.target.result;i&&i(P)},P.readAsArrayBuffer(F)}),u,L):N.Tools.EncodeScreenshotCanvasData(f.canvas,i,u,Y,L),c.dispose()}))}function T(){var F;A?(A.wrapper.dispose(),A.renderer.dispose(),A.YP.dispose()):null===(F=o)||void 0===F||F.then((F=>{F.wrapper.dispose(),F.renderer.dispose(),F.YP.dispose()}));o=null,A=null}const Y={DumpData:u,DumpDataAsync:i,DumpFramebuffer:j,Dispose:T};N.Tools.DumpData=u,N.Tools.DumpDataAsync=i,N.Tools.DumpFramebuffer=j},11604:(F,P,f)=>{f.r(P),f.d(P,{CreateScreenshot:()=>z,CreateScreenshotAsync:()=>Z,CreateScreenshotUsingRenderTarget:()=>y,CreateScreenshotUsingRenderTargetAsync:()=>O,CreateScreenshotWithResizeAsync:()=>R,ScreenshotTools:()=>M});var c=f(11612),N=f(11702),q=f(11728),H=f(11587),A=f(11677),o=f(11730),j=f(11743),i=f(11639);class u extends o.f{static _GetDefines(F){if(!F)return null;return F.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(F,P){F?(this._webGPUReady=!0,P.push(Promise.all([f.e(54).then(f.bind(f,14094)),f.e(55).then(f.bind(f,14096))]))):P.push(Promise.all([f.e(56).then(f.bind(f,14099)),f.e(57).then(f.bind(f,14104))]))}constructor(F){const P={...arguments.length>2?arguments[2]:void 0,name:F,YP:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||j.d.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:u.VertexUrl,fragmentShader:u.FragmentUrl,uniforms:u.Uniforms};super({...P,defines:u._GetDefines(P.YP)}),this.texelSize=new i.Vector2(0,0)}bind(){let F=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(F),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}u.VertexUrl="fxaa",u.FragmentUrl="fxaa",u.Uniforms=["texelSize"];class T extends q.b{getClassName(){return"FxaaPostProcess"}constructor(F,P){let f=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,N=arguments.length>3?arguments[3]:void 0,q=arguments.length>4?arguments[4]:void 0,H=arguments.length>5?arguments[5]:void 0,A=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const o={uniforms:u.Uniforms,size:"number"===typeof P?P:void 0,camera:f,samplingMode:N||c.e.BILINEAR_SAMPLINGMODE,YP:q,reusable:H,textureType:A,...P};super(F,u.FragmentUrl,{effectWrapper:"number"!==typeof P&&P.effectWrapper?void 0:new u(F,q,o),...o}),this.onApplyObservable.add((F=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(F,P,f,c){return A.e.Parse((()=>new T(F.name,F.options,P,F.renderTargetSamplingMode,f.getEngine(),F.reusable)),F,f,c)}}(0,H.f)("BABYLON.FxaaPostProcess",T);var Y=f(11474),t=f(11462),C=f(11835),L=f(11841),J=f(11538);let B=null;function z(F,P,f,c){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],H=arguments.length>6?arguments[6]:void 0,A=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:o,width:j}=d(F,P,f);if(!o||!j)return void Y.d.Error("Invalid 'size' parameter !");P.OF().activeCamera===P?F.onEndFrameObservable.addOnce((()=>{B||(B=document.createElement("canvas")),B.width=j,B.height=o;const P=B.getContext("2d"),f=F.getRenderingCanvas();if(!P||!f)return void Y.d.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const i=f.width,u=f.height,T=B.width,C=B.height,L=T/i,J=C/u,z=A?Math.max(L,J):Math.min(L,J),Z=i*z,R=u*z,y=(T-Z)/2,O=(C-R)/2;P.drawImage(f,0,0,i,u,y,O,Z,R),q?(t.Tools.EncodeScreenshotCanvasData(B,void 0,N,void 0,H),c&&c("")):t.Tools.EncodeScreenshotCanvasData(B,c,N,void 0,H)})):y(F,P,f,(F=>{if(q){const P=new Blob([F]);t.Tools.DownloadBlob(P),c&&c("")}else c&&c(F)}),N,1,F.getCreationOptions().antialias,void 0,void 0,void 0,void 0,H)}async function Z(F,P,f){let c=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",N=arguments.length>4?arguments[4]:void 0,q=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((H,A)=>{z(F,P,f,(F=>{"undefined"!==typeof F?H(F):A(new Error("Data is undefined"))}),c,void 0,N,q)}))}async function R(F,P,f,c){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",q=arguments.length>5?arguments[5]:void 0,H=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((A=>{z(F,P,{width:f,height:c},(()=>{A()}),N,!0,q,H)}))}function y(F,P,q,H){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,j=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7?arguments[7]:void 0,u=arguments.length>8&&void 0!==arguments[8]&&arguments[8],t=arguments.length>9&&void 0!==arguments[9]&&arguments[9],B=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],z=arguments.length>11?arguments[11]:void 0,Z=arguments.length>12?arguments[12]:void 0,R=arguments.length>13?arguments[13]:void 0;const{height:y,width:O,finalWidth:M,finalHeight:V}=d(F,P,q),Q={width:O,height:y};if(!y||!O)return void Y.d.Error("Invalid 'size' parameter !");F.skipFrameRender=!0;const K=F.getRenderWidth,x=F.getRenderHeight;F.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&F._currentRenderTarget?F._currentRenderTarget.width:O},F.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&F._currentRenderTarget?F._currentRenderTarget.height:y},F.onResizeObservable.hasObservers()&&F.onResizeObservable.notifyObservers(F);const k=P.OF(),I=new N.c("screenShot",Q,k,!1,!1,0,!1,c.e.BILINEAR_SAMPLINGMODE,void 0,t,void 0,void 0,void 0,o);I.renderList=k.meshes.slice(),I.samples=o,I.renderSprites=u,I.activeCamera=P,I.forceLayerMaskCheck=B,null===Z||void 0===Z||Z(I);const E=R||C.DumpData,r=()=>{k.incrementRenderId(),k.resetCachedMaterial(),(0,J.f)((()=>I.isReadyForRendering()&&P.isReady(!0)),(()=>{F.onEndFrameObservable.addOnce((()=>{M===O&&V===y?I.readPixels(void 0,void 0,void 0,!1).then((F=>{E(O,y,F,H,A,i,!0,void 0,z),I.dispose()})):(F.isWebGPU?f.e(51).then(f.bind(f,14079)):f.e(52).then(f.bind(f,14082))).then((async()=>await(0,L.d)("pass",I.getInternalTexture(),k,void 0,void 0,void 0,M,V).then((P=>{F._readTexturePixels(P,M,V,-1,0,null,!0,!1,0,0).then((F=>{E(M,V,F,H,A,i,!0,void 0,z),P.dispose()}))}))))})),k.incrementRenderId(),k.resetCachedMaterial();const c=k.activeCamera,N=k.activeCameras,q=P.outputRenderTarget,o=k.spritesEnabled;k.activeCamera=P,k.activeCameras=null,P.outputRenderTarget=I,k.spritesEnabled=u;const j=k.meshes;k.meshes=I.renderList||k.meshes;try{k.render()}finally{k.activeCamera=c,k.activeCameras=N,P.outputRenderTarget=q,k.spritesEnabled=o,k.meshes=j,F.getRenderWidth=K,F.getRenderHeight=x,F.onResizeObservable.hasObservers()&&F.onResizeObservable.notifyObservers(F),P.getProjectionMatrix(!0),F.skipFrameRender=!1}}),(()=>{F.skipFrameRender=!1,F.getRenderWidth=K,F.getRenderHeight=x}))};if(j){const F=new T("antialiasing",1,k.activeCamera);I.addPostProcess(F),F.Ef=!0,F.onEffectCreatedObservable.addOnce((F=>{F.isReady()?r():F.onCompiled=()=>{r()}}))}else r()}async function O(F,P,f){let c=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],H=arguments.length>6?arguments[6]:void 0,A=arguments.length>7&&void 0!==arguments[7]&&arguments[7],o=arguments.length>8&&void 0!==arguments[8]&&arguments[8],j=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],i=arguments.length>10?arguments[10]:void 0,u=arguments.length>11?arguments[11]:void 0,T=arguments.length>12?arguments[12]:void 0;return await new Promise(((Y,t)=>{y(F,P,f,(F=>{"undefined"!==typeof F?Y(F):t(new Error("Data is undefined"))}),c,N,q,H,A,o,j,i,u,T)}))}function d(F,P,f){let c=0,N=0,q=0,H=0;if("object"===typeof f){const A=f.precision?Math.abs(f.precision):1;f.width&&f.height?(c=f.height*A,N=f.width*A):f.width&&!f.height?(N=f.width*A,c=Math.round(N/F.getAspectRatio(P))):f.height&&!f.width?(c=f.height*A,N=Math.round(c*F.getAspectRatio(P))):(N=Math.round(F.getRenderWidth()*A),c=Math.round(N/F.getAspectRatio(P))),f.finalWidth&&f.finalHeight?(H=f.finalHeight,q=f.finalWidth):f.finalWidth&&!f.finalHeight?(q=f.finalWidth,H=Math.round(q/F.getAspectRatio(P))):f.finalHeight&&!f.finalWidth?(H=f.finalHeight,q=Math.round(H*F.getAspectRatio(P))):(q=N,H=c)}else isNaN(f)||(c=f,N=f,q=f,H=f);return N&&(N=Math.floor(N)),c&&(c=Math.floor(c)),q&&(q=Math.floor(q)),H&&(H=Math.floor(H)),{height:0|c,width:0|N,finalWidth:0|q,finalHeight:0|H}}const M={CreateScreenshot:z,CreateScreenshotAsync:Z,CreateScreenshotWithResizeAsync:R,CreateScreenshotUsingRenderTarget:y,CreateScreenshotUsingRenderTargetAsync:O};t.Tools.CreateScreenshot=z,t.Tools.CreateScreenshotAsync=Z,t.Tools.CreateScreenshotUsingRenderTarget=y,t.Tools.CreateScreenshotUsingRenderTargetAsync=O}}]);