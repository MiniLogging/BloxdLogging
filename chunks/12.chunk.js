"use strict";(self.isj1uwvwrek=self.isj1uwvwrek||[]).push([[12,20],{13202:(I,x,L)=>{L.r(x),L.d(x,{Dispose:()=>e,DumpData:()=>Q,DumpDataAsync:()=>W,DumpFramebuffer:()=>l,DumpTools:()=>g});var F=L(13085),X=L(12791),G=L(13001),Y=L(12840);let p,B=null;async function l(I,x,L,F){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",G=arguments.length>5?arguments[5]:void 0,Y=arguments.length>6?arguments[6]:void 0;const p=await L.readPixels(0,0,I,x);Q(I,x,new Uint8Array(p.buffer),F,X,G,!0,void 0,Y)}async function W(I,x,L){let F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",X=arguments.length>4?arguments[4]:void 0,G=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],p=arguments.length>7?arguments[7]:void 0;return await new Promise((B=>{Q(I,x,L,(I=>B(I)),F,X,G,Y,p)}))}function Q(I,x,l,W){let Q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",g=arguments.length>5?arguments[5]:void 0,v=arguments.length>6&&void 0!==arguments[6]&&arguments[6],z=arguments.length>7&&void 0!==arguments[7]&&arguments[7],H=arguments.length>8?arguments[8]:void 0;(async function(){return B||(B=new Promise(((I,x)=>{let X,G=null;const B={ip:!0,depth:!1,op:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(L.bind(L,13116)).then((l=>{let{ThinEngine:W}=l;const Q=Y.e.Instances.length;try{X=new OffscreenCanvas(100,100),G=new W(X,!1,B)}catch(z){var g;Q<Y.e.Instances.length&&(null===(g=Y.e.Instances.pop())||void 0===g||g.dispose()),X=document.createElement("canvas"),G=new W(X,!1,B)}Y.e.Instances.pop(),Y.e.OnEnginesDisposedObservable.add((I=>{G&&I!==G&&!G.p&&0===Y.e.Instances.length&&e()})),G.getCaps().parallelShaderCompile=void 0;const v=new F.e(G);L.e(52).then(L.bind(L,15376)).then((L=>{let{passPixelShader:Y}=L;if(!G)return void x("Engine is not defined");const B=new F.i({Hx:G,name:Y.name,fragmentShader:Y.shader,samplerNames:["textureSampler"]});p={canvas:X,Hx:G,renderer:v,wrapper:B},I(p)}))})).catch(x)}))),await B})().then((L=>{if(L.Hx.setSize(I,x,!0),l instanceof Float32Array){const I=new Uint8Array(l.length);let x=l.length;for(;x--;){const L=l[x];I[x]=Math.round(255*(0,G.Clamp)(L))}l=I}const F=L.Hx.createRawTexture(l,I,x,5,!1,!v,1);L.renderer.setViewport(),L.renderer.applyEffectWrapper(L.wrapper),L.wrapper.effect._bindTexture("textureSampler",F),L.renderer.draw(),z?X.Tools.ToBlob(L.canvas,(I=>{const x=new FileReader;x.onload=I=>{const x=I.target.result;W&&W(x)},x.readAsArrayBuffer(I)}),Q,H):X.Tools.EncodeScreenshotCanvasData(L.canvas,W,Q,g,H),F.dispose()}))}function e(){var I;p?(p.wrapper.dispose(),p.renderer.dispose(),p.Hx.dispose()):null===(I=B)||void 0===I||I.then((I=>{I.wrapper.dispose(),I.renderer.dispose(),I.Hx.dispose()}));B=null,p=null}const g={DumpData:Q,DumpDataAsync:W,DumpFramebuffer:l,Dispose:e};X.Tools.DumpData=Q,X.Tools.DumpDataAsync=W,X.Tools.DumpFramebuffer=l},12961:(I,x,L)=>{L.r(x),L.d(x,{CreateScreenshot:()=>q,CreateScreenshotAsync:()=>y,CreateScreenshotUsingRenderTarget:()=>Z,CreateScreenshotUsingRenderTargetAsync:()=>t,CreateScreenshotWithResizeAsync:()=>T,ScreenshotTools:()=>R});var F=L(12965),X=L(13042),G=L(13081),Y=L(12938),p=L(13012),B=L(13085),l=L(13112),W=L(12983);class Q extends B.i{static _GetDefines(I){if(!I)return null;return I.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(I,x){I?(this._webGPUReady=!0,x.push(Promise.all([L.e(54).then(L.bind(L,15383)),L.e(55).then(L.bind(L,15391))]))):x.push(Promise.all([L.e(56).then(L.bind(L,15396)),L.e(57).then(L.bind(L,15402))]))}constructor(I){const x={...arguments.length>2?arguments[2]:void 0,name:I,Hx:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||l.b.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:Q.VertexUrl,fragmentShader:Q.FragmentUrl,uniforms:Q.Uniforms};super({...x,defines:Q._GetDefines(x.Hx)}),this.texelSize=new W.Vector2(0,0)}bind(){let I=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(I),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}Q.VertexUrl="fxaa",Q.FragmentUrl="fxaa",Q.Uniforms=["texelSize"];class e extends G.d{getClassName(){return"FxaaPostProcess"}constructor(I,x){let L=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,X=arguments.length>3?arguments[3]:void 0,G=arguments.length>4?arguments[4]:void 0,Y=arguments.length>5?arguments[5]:void 0,p=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const B={uniforms:Q.Uniforms,size:"number"===typeof x?x:void 0,camera:L,samplingMode:X||F.d.BILINEAR_SAMPLINGMODE,Hx:G,reusable:Y,textureType:p,...x};super(I,Q.FragmentUrl,{effectWrapper:"number"!==typeof x&&x.effectWrapper?void 0:new Q(I,G,B),...B}),this.onApplyObservable.add((I=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(I,x,L,F){return p.c.Parse((()=>new e(I.name,I.options,x,I.renderTargetSamplingMode,L.getEngine(),I.reusable)),I,L,F)}}(0,Y.d)("BABYLON.FxaaPostProcess",e);var g=L(12809),v=L(12791),z=L(13202),H=L(13209),s=L(12865);let U=null;function q(I,x,L,F){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",G=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6?arguments[6]:void 0,p=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:B,width:l}=f(I,x,L);if(!B||!l)return void g.c.Error("Invalid 'size' parameter !");x.tI().activeCamera===x?I.onEndFrameObservable.addOnce((()=>{U||(U=document.createElement("canvas")),U.width=l,U.height=B;const x=U.getContext("2d"),L=I.getRenderingCanvas();if(!x||!L)return void g.c.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const W=L.width,Q=L.height,e=U.width,z=U.height,H=e/W,s=z/Q,q=p?Math.max(H,s):Math.min(H,s),y=W*q,T=Q*q,Z=(e-y)/2,t=(z-T)/2;x.drawImage(L,0,0,W,Q,Z,t,y,T),G?(v.Tools.EncodeScreenshotCanvasData(U,void 0,X,void 0,Y),F&&F("")):v.Tools.EncodeScreenshotCanvasData(U,F,X,void 0,Y)})):Z(I,x,L,(I=>{if(G){const x=new Blob([I]);v.Tools.DownloadBlob(x),F&&F("")}else F&&F(I)}),X,1,I.getCreationOptions().antialias,void 0,void 0,void 0,void 0,Y)}async function y(I,x,L){let F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",X=arguments.length>4?arguments[4]:void 0,G=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((Y,p)=>{q(I,x,L,(I=>{"undefined"!==typeof I?Y(I):p(new Error("Data is undefined"))}),F,void 0,X,G)}))}async function T(I,x,L,F){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",G=arguments.length>5?arguments[5]:void 0,Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((p=>{q(I,x,{width:L,height:F},(()=>{p()}),X,!0,G,Y)}))}function Z(I,x,G,Y){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",B=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,l=arguments.length>6&&void 0!==arguments[6]&&arguments[6],W=arguments.length>7?arguments[7]:void 0,Q=arguments.length>8&&void 0!==arguments[8]&&arguments[8],v=arguments.length>9&&void 0!==arguments[9]&&arguments[9],U=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],q=arguments.length>11?arguments[11]:void 0,y=arguments.length>12?arguments[12]:void 0,T=arguments.length>13?arguments[13]:void 0;const{height:Z,width:t,finalWidth:R,finalHeight:n}=f(I,x,G),P={width:t,height:Z};if(!Z||!t)return void g.c.Error("Invalid 'size' parameter !");I.skipFrameRender=!0;const d=I.getRenderWidth,M=I.getRenderHeight;I.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&I._currentRenderTarget?I._currentRenderTarget.width:t},I.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&I._currentRenderTarget?I._currentRenderTarget.height:Z},I.onResizeObservable.hasObservers()&&I.onResizeObservable.notifyObservers(I);const K=x.tI(),u=new X.e("screenShot",P,K,!1,!1,0,!1,F.d.BILINEAR_SAMPLINGMODE,void 0,v,void 0,void 0,void 0,B);u.renderList=K.meshes.slice(),u.samples=B,u.renderSprites=Q,u.activeCamera=x,u.forceLayerMaskCheck=U,null===y||void 0===y||y(u);const A=T||z.DumpData,mI=()=>{K.incrementRenderId(),K.resetCachedMaterial(),(0,s.e)((()=>u.isReadyForRendering()&&x.isReady(!0)),(()=>{I.onEndFrameObservable.addOnce((()=>{R===t&&n===Z?u.readPixels(void 0,void 0,void 0,!1).then((I=>{A(t,Z,I,Y,p,W,!0,void 0,q),u.dispose()})):(I.isWebGPU?L.e(51).then(L.bind(L,15367)):L.e(52).then(L.bind(L,15376))).then((async()=>await(0,H.d)("pass",u.getInternalTexture(),K,void 0,void 0,void 0,R,n).then((x=>{I._readTexturePixels(x,R,n,-1,0,null,!0,!1,0,0).then((I=>{A(R,n,I,Y,p,W,!0,void 0,q),x.dispose()}))}))))})),K.incrementRenderId(),K.resetCachedMaterial();const F=K.activeCamera,X=K.activeCameras,G=x.outputRenderTarget,B=K.spritesEnabled;K.activeCamera=x,K.activeCameras=null,x.outputRenderTarget=u,K.spritesEnabled=Q;const l=K.meshes;K.meshes=u.renderList||K.meshes;try{K.render()}finally{K.activeCamera=F,K.activeCameras=X,x.outputRenderTarget=G,K.spritesEnabled=B,K.meshes=l,I.getRenderWidth=d,I.getRenderHeight=M,I.onResizeObservable.hasObservers()&&I.onResizeObservable.notifyObservers(I),x.getProjectionMatrix(!0),I.skipFrameRender=!1}}),(()=>{I.skipFrameRender=!1,I.getRenderWidth=d,I.getRenderHeight=M}))};if(l){const I=new e("antialiasing",1,K.activeCamera);u.addPostProcess(I),I.Vp=!0,I.onEffectCreatedObservable.addOnce((I=>{I.isReady()?mI():I.onCompiled=()=>{mI()}}))}else mI()}async function t(I,x,L){let F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,G=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6?arguments[6]:void 0,p=arguments.length>7&&void 0!==arguments[7]&&arguments[7],B=arguments.length>8&&void 0!==arguments[8]&&arguments[8],l=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],W=arguments.length>10?arguments[10]:void 0,Q=arguments.length>11?arguments[11]:void 0,e=arguments.length>12?arguments[12]:void 0;return await new Promise(((g,v)=>{Z(I,x,L,(I=>{"undefined"!==typeof I?g(I):v(new Error("Data is undefined"))}),F,X,G,Y,p,B,l,W,Q,e)}))}function f(I,x,L){let F=0,X=0,G=0,Y=0;if("object"===typeof L){const p=L.precision?Math.abs(L.precision):1;L.width&&L.height?(F=L.height*p,X=L.width*p):L.width&&!L.height?(X=L.width*p,F=Math.round(X/I.getAspectRatio(x))):L.height&&!L.width?(F=L.height*p,X=Math.round(F*I.getAspectRatio(x))):(X=Math.round(I.getRenderWidth()*p),F=Math.round(X/I.getAspectRatio(x))),L.finalWidth&&L.finalHeight?(Y=L.finalHeight,G=L.finalWidth):L.finalWidth&&!L.finalHeight?(G=L.finalWidth,Y=Math.round(G/I.getAspectRatio(x))):L.finalHeight&&!L.finalWidth?(Y=L.finalHeight,G=Math.round(Y*I.getAspectRatio(x))):(G=X,Y=F)}else isNaN(L)||(F=L,X=L,G=L,Y=L);return X&&(X=Math.floor(X)),F&&(F=Math.floor(F)),G&&(G=Math.floor(G)),Y&&(Y=Math.floor(Y)),{height:0|F,width:0|X,finalWidth:0|G,finalHeight:0|Y}}const R={CreateScreenshot:q,CreateScreenshotAsync:y,CreateScreenshotWithResizeAsync:T,CreateScreenshotUsingRenderTarget:Z,CreateScreenshotUsingRenderTargetAsync:t};v.Tools.CreateScreenshot=q,v.Tools.CreateScreenshotAsync=y,v.Tools.CreateScreenshotUsingRenderTarget=Z,v.Tools.CreateScreenshotUsingRenderTargetAsync=t}}]);