"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[12],{2578:(Q,X,C)=>{C.r(X),C.d(X,{Dispose:()=>w,DumpData:()=>L,DumpDataAsync:()=>U,DumpFramebuffer:()=>W,DumpTools:()=>i});var l=C(2431),h=C(487),M=C(690),f=C(524);let O,m=null;async function W(Q,X,C,l){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",M=arguments.length>5?arguments[5]:void 0,f=arguments.length>6?arguments[6]:void 0;const O=await C.readPixels(0,0,Q,X);L(Q,X,new Uint8Array(O.buffer),l,h,M,!0,void 0,f)}async function U(Q,X,C){let l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",h=arguments.length>4?arguments[4]:void 0,M=arguments.length>5&&void 0!==arguments[5]&&arguments[5],f=arguments.length>6&&void 0!==arguments[6]&&arguments[6],O=arguments.length>7?arguments[7]:void 0;return await new Promise((m=>{L(Q,X,C,(Q=>m(Q)),l,h,M,f,O)}))}function L(Q,X,W,U){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",i=arguments.length>5?arguments[5]:void 0,a=arguments.length>6&&void 0!==arguments[6]&&arguments[6],F=arguments.length>7&&void 0!==arguments[7]&&arguments[7],s=arguments.length>8?arguments[8]:void 0;(async function(){return m||(m=new Promise(((Q,X)=>{let h,M=null;const m={Lk:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(C.bind(C,2449)).then((W=>{let{ThinEngine:U}=W;const L=f.b.Instances.length;try{h=new OffscreenCanvas(100,100),M=new U(h,!1,m)}catch(F){var i;L<f.b.Instances.length&&(null===(i=f.b.Instances.pop())||void 0===i||i.dispose()),h=document.createElement("canvas"),M=new U(h,!1,m)}f.b.Instances.pop(),f.b.OnEnginesDisposedObservable.add((Q=>{M&&Q!==M&&!M.u&&0===f.b.Instances.length&&w()})),M.getCaps().parallelShaderCompile=void 0;const a=new l.e(M);C.e(46).then(C.bind(C,13675)).then((C=>{let{passPixelShader:f}=C;if(!M)return void X("Engine is not defined");const m=new l.h({Oj:M,name:f.name,fragmentShader:f.shader,samplerNames:["textureSampler"]});O={canvas:h,Oj:M,renderer:a,wrapper:m},Q(O)}))})).catch(X)}))),await m})().then((C=>{if(C.Oj.setSize(Q,X,!0),W instanceof Float32Array){const Q=new Uint8Array(W.length);let X=W.length;for(;X--;){const C=W[X];Q[X]=Math.round(255*(0,M.Clamp)(C))}W=Q}const l=C.Oj.createRawTexture(W,Q,X,5,!1,!a,1);C.renderer.setViewport(),C.renderer.applyEffectWrapper(C.wrapper),C.wrapper.effect._bindTexture("textureSampler",l),C.renderer.draw(),F?h.i.ToBlob(C.canvas,(Q=>{const X=new FileReader;X.onload=Q=>{const X=Q.target.result;U&&U(X)},X.readAsArrayBuffer(Q)}),L,s):h.i.EncodeScreenshotCanvasData(C.canvas,U,L,i,s),l.dispose()}))}function w(){var Q;O?(O.wrapper.dispose(),O.renderer.dispose(),O.Oj.dispose()):null===(Q=m)||void 0===Q||Q.then((Q=>{Q.wrapper.dispose(),Q.renderer.dispose(),Q.Oj.dispose()}));m=null,O=null}const i={DumpData:L,DumpDataAsync:U,DumpFramebuffer:W,Dispose:w};h.i.DumpData=L,h.i.DumpDataAsync=U,h.i.DumpFramebuffer=W}}]);