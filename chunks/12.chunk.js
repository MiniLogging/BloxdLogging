"use strict";(self.rsqbdnwe5e=self.rsqbdnwe5e||[]).push([[12,20],{12606:(N,p,T)=>{T.r(p),T.d(p,{Dispose:()=>b,DumpData:()=>M,DumpDataAsync:()=>H,DumpFramebuffer:()=>e,DumpTools:()=>l});var A=T(12480),a=T(12190),C=T(12390),U=T(12231);let X,y=null;async function e(N,p,T,A){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",C=arguments.length>5?arguments[5]:void 0,U=arguments.length>6?arguments[6]:void 0;const X=await T.readPixels(0,0,N,p);M(N,p,new Uint8Array(X.buffer),A,a,C,!0,void 0,U)}async function H(N,p,T){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",a=arguments.length>4?arguments[4]:void 0,C=arguments.length>5&&void 0!==arguments[5]&&arguments[5],U=arguments.length>6&&void 0!==arguments[6]&&arguments[6],X=arguments.length>7?arguments[7]:void 0;return await new Promise((y=>{M(N,p,T,(N=>y(N)),A,a,C,U,X)}))}function M(N,p,e,H){let M=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",l=arguments.length>5?arguments[5]:void 0,k=arguments.length>6&&void 0!==arguments[6]&&arguments[6],x=arguments.length>7&&void 0!==arguments[7]&&arguments[7],I=arguments.length>8?arguments[8]:void 0;(async function(){return y||(y=new Promise(((N,p)=>{let a,C=null;const y={AX:!0,depth:!1,sU:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(T.bind(T,12511)).then((e=>{let{ThinEngine:H}=e;const M=U.b.Instances.length;try{a=new OffscreenCanvas(100,100),C=new H(a,!1,y)}catch(x){var l;M<U.b.Instances.length&&(null===(l=U.b.Instances.pop())||void 0===l||l.dispose()),a=document.createElement("canvas"),C=new H(a,!1,y)}U.b.Instances.pop(),U.b.OnEnginesDisposedObservable.add((N=>{C&&N!==C&&!C.X&&0===U.b.Instances.length&&b()})),C.getCaps().parallelShaderCompile=void 0;const k=new A.c(C);T.e(52).then(T.bind(T,14826)).then((T=>{let{passPixelShader:U}=T;if(!C)return void p("Engine is not defined");const y=new A.e({kp:C,name:U.name,fragmentShader:U.shader,samplerNames:["textureSampler"]});X={canvas:a,kp:C,renderer:k,wrapper:y},N(X)}))})).catch(p)}))),await y})().then((T=>{if(T.kp.setSize(N,p,!0),e instanceof Float32Array){const N=new Uint8Array(e.length);let p=e.length;for(;p--;){const T=e[p];N[p]=Math.round(255*(0,C.Clamp)(T))}e=N}const A=T.kp.createRawTexture(e,N,p,5,!1,!k,1);T.renderer.setViewport(),T.renderer.applyEffectWrapper(T.wrapper),T.wrapper.effect._bindTexture("textureSampler",A),T.renderer.draw(),x?a.Tools.ToBlob(T.canvas,(N=>{const p=new FileReader;p.onload=N=>{const p=N.target.result;H&&H(p)},p.readAsArrayBuffer(N)}),M,I):a.Tools.EncodeScreenshotCanvasData(T.canvas,H,M,l,I),A.dispose()}))}function b(){var N;X?(X.wrapper.dispose(),X.renderer.dispose(),X.kp.dispose()):null===(N=y)||void 0===N||N.then((N=>{N.wrapper.dispose(),N.renderer.dispose(),N.kp.dispose()}));y=null,X=null}const l={DumpData:M,DumpDataAsync:H,DumpFramebuffer:e,Dispose:b};a.Tools.DumpData=M,a.Tools.DumpDataAsync=H,a.Tools.DumpFramebuffer=e},12349:(N,p,T)=>{T.r(p),T.d(p,{CreateScreenshot:()=>w,CreateScreenshotAsync:()=>g,CreateScreenshotUsingRenderTarget:()=>i,CreateScreenshotUsingRenderTargetAsync:()=>K,CreateScreenshotWithResizeAsync:()=>P,ScreenshotTools:()=>v});var A=T(12352),a=T(12435),C=T(12477),U=T(12331),X=T(12409),y=T(12480),e=T(12505),H=T(12371);class M extends y.e{static _GetDefines(N){if(!N)return null;return N.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(N,p){N?(this._webGPUReady=!0,p.push(Promise.all([T.e(54).then(T.bind(T,14836)),T.e(55).then(T.bind(T,14839))]))):p.push(Promise.all([T.e(56).then(T.bind(T,14847)),T.e(57).then(T.bind(T,14855))]))}constructor(N){const p={...arguments.length>2?arguments[2]:void 0,name:N,kp:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||e.d.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:M.VertexUrl,fragmentShader:M.FragmentUrl,uniforms:M.Uniforms};super({...p,defines:M._GetDefines(p.kp)}),this.texelSize=new H.Vector2(0,0)}bind(){let N=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(N),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}M.VertexUrl="fxaa",M.FragmentUrl="fxaa",M.Uniforms=["texelSize"];class b extends C.d{getClassName(){return"FxaaPostProcess"}constructor(N,p){let T=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3?arguments[3]:void 0,C=arguments.length>4?arguments[4]:void 0,U=arguments.length>5?arguments[5]:void 0,X=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const y={uniforms:M.Uniforms,size:"number"===typeof p?p:void 0,camera:T,samplingMode:a||A.c.BILINEAR_SAMPLINGMODE,kp:C,reusable:U,textureType:X,...p};super(N,M.FragmentUrl,{effectWrapper:"number"!==typeof p&&p.effectWrapper?void 0:new M(N,C,y),...y}),this.onApplyObservable.add((N=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(N,p,T,A){return X.e.Parse((()=>new b(N.name,N.options,p,N.renderTargetSamplingMode,T.getEngine(),N.reusable)),N,T,A)}}(0,U.d)("BABYLON.FxaaPostProcess",b);var l=T(12205),k=T(12190),x=T(12606),I=T(12608),L=T(12264);let n=null;function w(N,p,T,A){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",C=arguments.length>5&&void 0!==arguments[5]&&arguments[5],U=arguments.length>6?arguments[6]:void 0,X=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:y,width:e}=F(N,p,T);if(!y||!e)return void l.d.Error("Invalid 'size' parameter !");p.KN().activeCamera===p?N.onEndFrameObservable.addOnce((()=>{n||(n=document.createElement("canvas")),n.width=e,n.height=y;const p=n.getContext("2d"),T=N.getRenderingCanvas();if(!p||!T)return void l.d.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const H=T.width,M=T.height,b=n.width,x=n.height,I=b/H,L=x/M,w=X?Math.max(I,L):Math.min(I,L),g=H*w,P=M*w,i=(b-g)/2,K=(x-P)/2;p.drawImage(T,0,0,H,M,i,K,g,P),C?(k.Tools.EncodeScreenshotCanvasData(n,void 0,a,void 0,U),A&&A("")):k.Tools.EncodeScreenshotCanvasData(n,A,a,void 0,U)})):i(N,p,T,(N=>{if(C){const p=new Blob([N]);k.Tools.DownloadBlob(p),A&&A("")}else A&&A(N)}),a,1,N.getCreationOptions().antialias,void 0,void 0,void 0,void 0,U)}async function g(N,p,T){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",a=arguments.length>4?arguments[4]:void 0,C=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((U,X)=>{w(N,p,T,(N=>{"undefined"!==typeof N?U(N):X(new Error("Data is undefined"))}),A,void 0,a,C)}))}async function P(N,p,T,A){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",C=arguments.length>5?arguments[5]:void 0,U=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((X=>{w(N,p,{width:T,height:A},(()=>{X()}),a,!0,C,U)}))}function i(N,p,C,U){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",y=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,e=arguments.length>6&&void 0!==arguments[6]&&arguments[6],H=arguments.length>7?arguments[7]:void 0,M=arguments.length>8&&void 0!==arguments[8]&&arguments[8],k=arguments.length>9&&void 0!==arguments[9]&&arguments[9],n=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],w=arguments.length>11?arguments[11]:void 0,g=arguments.length>12?arguments[12]:void 0,P=arguments.length>13?arguments[13]:void 0;const{height:i,width:K,finalWidth:v,finalHeight:W}=F(N,p,C),z={width:K,height:i};if(!i||!K)return void l.d.Error("Invalid 'size' parameter !");N.skipFrameRender=!0;const R=N.getRenderWidth,J=N.getRenderHeight;N.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&N._currentRenderTarget?N._currentRenderTarget.width:K},N.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&N._currentRenderTarget?N._currentRenderTarget.height:i},N.onResizeObservable.hasObservers()&&N.onResizeObservable.notifyObservers(N);const f=p.KN(),G=new a.e("screenShot",z,f,!1,!1,0,!1,A.c.BILINEAR_SAMPLINGMODE,void 0,k,void 0,void 0,void 0,y);G.renderList=f.meshes.slice(),G.samples=y,G.renderSprites=M,G.activeCamera=p,G.forceLayerMaskCheck=n,null===g||void 0===g||g(G);const o=P||x.DumpData,Z=()=>{f.incrementRenderId(),f.resetCachedMaterial(),(0,L.g)((()=>G.isReadyForRendering()&&p.isReady(!0)),(()=>{N.onEndFrameObservable.addOnce((()=>{v===K&&W===i?G.readPixels(void 0,void 0,void 0,!1).then((N=>{o(K,i,N,U,X,H,!0,void 0,w),G.dispose()})):(N.isWebGPU?T.e(51).then(T.bind(T,14823)):T.e(52).then(T.bind(T,14826))).then((async()=>await(0,I.b)("pass",G.getInternalTexture(),f,void 0,void 0,void 0,v,W).then((p=>{N._readTexturePixels(p,v,W,-1,0,null,!0,!1,0,0).then((N=>{o(v,W,N,U,X,H,!0,void 0,w),p.dispose()}))}))))})),f.incrementRenderId(),f.resetCachedMaterial();const A=f.activeCamera,a=f.activeCameras,C=p.outputRenderTarget,y=f.spritesEnabled;f.activeCamera=p,f.activeCameras=null,p.outputRenderTarget=G,f.spritesEnabled=M;const e=f.meshes;f.meshes=G.renderList||f.meshes;try{f.render()}finally{f.activeCamera=A,f.activeCameras=a,p.outputRenderTarget=C,f.spritesEnabled=y,f.meshes=e,N.getRenderWidth=R,N.getRenderHeight=J,N.onResizeObservable.hasObservers()&&N.onResizeObservable.notifyObservers(N),p.getProjectionMatrix(!0),N.skipFrameRender=!1}}),(()=>{N.skipFrameRender=!1,N.getRenderWidth=R,N.getRenderHeight=J}))};if(e){const N=new b("antialiasing",1,f.activeCamera);G.addPostProcess(N),N.aX=!0,N.onEffectCreatedObservable.addOnce((N=>{N.isReady()?Z():N.onCompiled=()=>{Z()}}))}else Z()}async function K(N,p,T){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,C=arguments.length>5&&void 0!==arguments[5]&&arguments[5],U=arguments.length>6?arguments[6]:void 0,X=arguments.length>7&&void 0!==arguments[7]&&arguments[7],y=arguments.length>8&&void 0!==arguments[8]&&arguments[8],e=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],H=arguments.length>10?arguments[10]:void 0,M=arguments.length>11?arguments[11]:void 0,b=arguments.length>12?arguments[12]:void 0;return await new Promise(((l,k)=>{i(N,p,T,(N=>{"undefined"!==typeof N?l(N):k(new Error("Data is undefined"))}),A,a,C,U,X,y,e,H,M,b)}))}function F(N,p,T){let A=0,a=0,C=0,U=0;if("object"===typeof T){const X=T.precision?Math.abs(T.precision):1;T.width&&T.height?(A=T.height*X,a=T.width*X):T.width&&!T.height?(a=T.width*X,A=Math.round(a/N.getAspectRatio(p))):T.height&&!T.width?(A=T.height*X,a=Math.round(A*N.getAspectRatio(p))):(a=Math.round(N.getRenderWidth()*X),A=Math.round(a/N.getAspectRatio(p))),T.finalWidth&&T.finalHeight?(U=T.finalHeight,C=T.finalWidth):T.finalWidth&&!T.finalHeight?(C=T.finalWidth,U=Math.round(C/N.getAspectRatio(p))):T.finalHeight&&!T.finalWidth?(U=T.finalHeight,C=Math.round(U*N.getAspectRatio(p))):(C=a,U=A)}else isNaN(T)||(A=T,a=T,C=T,U=T);return a&&(a=Math.floor(a)),A&&(A=Math.floor(A)),C&&(C=Math.floor(C)),U&&(U=Math.floor(U)),{height:0|A,width:0|a,finalWidth:0|C,finalHeight:0|U}}const v={CreateScreenshot:w,CreateScreenshotAsync:g,CreateScreenshotWithResizeAsync:P,CreateScreenshotUsingRenderTarget:i,CreateScreenshotUsingRenderTargetAsync:K};k.Tools.CreateScreenshot=w,k.Tools.CreateScreenshotAsync=g,k.Tools.CreateScreenshotUsingRenderTarget=i,k.Tools.CreateScreenshotUsingRenderTargetAsync=K}}]);