"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[12,20],{11362:(h,V,i)=>{i.r(V),i.d(V,{Dispose:()=>s,DumpData:()=>v,DumpDataAsync:()=>I,DumpFramebuffer:()=>J,DumpTools:()=>t});var S=i(11257),l=i(10952),Y=i(11162),g=i(10988);let q,B=null;async function J(h,V,i,S){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Y=arguments.length>5?arguments[5]:void 0,g=arguments.length>6?arguments[6]:void 0;const q=await i.readPixels(0,0,h,V);v(h,V,new Uint8Array(q.buffer),S,l,Y,!0,void 0,g)}async function I(h,V,i){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",l=arguments.length>4?arguments[4]:void 0,Y=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6&&void 0!==arguments[6]&&arguments[6],q=arguments.length>7?arguments[7]:void 0;return await new Promise((B=>{v(h,V,i,(h=>B(h)),S,l,Y,g,q)}))}function v(h,V,J,I){let v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",t=arguments.length>5?arguments[5]:void 0,T=arguments.length>6&&void 0!==arguments[6]&&arguments[6],e=arguments.length>7&&void 0!==arguments[7]&&arguments[7],n=arguments.length>8?arguments[8]:void 0;(async function(){return B||(B=new Promise(((h,V)=>{let l,Y=null;const B={Xg:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(i.bind(i,11285)).then((J=>{let{ThinEngine:I}=J;const v=g.d.Instances.length;try{l=new OffscreenCanvas(100,100),Y=new I(l,!1,B)}catch(e){var t;v<g.d.Instances.length&&(null===(t=g.d.Instances.pop())||void 0===t||t.dispose()),l=document.createElement("canvas"),Y=new I(l,!1,B)}g.d.Instances.pop(),g.d.OnEnginesDisposedObservable.add((h=>{Y&&h!==Y&&!Y.B&&0===g.d.Instances.length&&s()})),Y.getCaps().parallelShaderCompile=void 0;const T=new S.b(Y);i.e(52).then(i.bind(i,13576)).then((i=>{let{passPixelShader:g}=i;if(!Y)return void V("Engine is not defined");const B=new S.e({eV:Y,name:g.name,fragmentShader:g.shader,samplerNames:["textureSampler"]});q={canvas:l,eV:Y,renderer:T,wrapper:B},h(q)}))})).catch(V)}))),await B})().then((i=>{if(i.eV.setSize(h,V,!0),J instanceof Float32Array){const h=new Uint8Array(J.length);let V=J.length;for(;V--;){const i=J[V];h[V]=Math.round(255*(0,Y.Clamp)(i))}J=h}const S=i.eV.createRawTexture(J,h,V,5,!1,!T,1);i.renderer.setViewport(),i.renderer.applyEffectWrapper(i.wrapper),i.wrapper.effect._bindTexture("textureSampler",S),i.renderer.draw(),e?l.Tools.ToBlob(i.canvas,(h=>{const V=new FileReader;V.onload=h=>{const V=h.target.result;I&&I(V)},V.readAsArrayBuffer(h)}),v,n):l.Tools.EncodeScreenshotCanvasData(i.canvas,I,v,t,n),S.dispose()}))}function s(){var h;q?(q.wrapper.dispose(),q.renderer.dispose(),q.eV.dispose()):null===(h=B)||void 0===h||h.then((h=>{h.wrapper.dispose(),h.renderer.dispose(),h.eV.dispose()}));B=null,q=null}const t={DumpData:v,DumpDataAsync:I,DumpFramebuffer:J,Dispose:s};l.Tools.DumpData=v,l.Tools.DumpDataAsync=I,l.Tools.DumpFramebuffer=J},11113:(h,V,i)=>{i.r(V),i.d(V,{CreateScreenshot:()=>P,CreateScreenshotAsync:()=>L,CreateScreenshotUsingRenderTarget:()=>X,CreateScreenshotUsingRenderTargetAsync:()=>D,CreateScreenshotWithResizeAsync:()=>U,ScreenshotTools:()=>o});var S=i(11117),l=i(11211),Y=i(11250),g=i(11091),q=i(11179),B=i(11257),J=i(11280),I=i(11138);class v extends B.e{static _GetDefines(h){if(!h)return null;return h.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(h,V){h?(this._webGPUReady=!0,V.push(Promise.all([i.e(54).then(i.bind(i,13592)),i.e(55).then(i.bind(i,13594))]))):V.push(Promise.all([i.e(56).then(i.bind(i,13598)),i.e(57).then(i.bind(i,13601))]))}constructor(h){const V={...arguments.length>2?arguments[2]:void 0,name:h,eV:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||J.b.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:v.VertexUrl,fragmentShader:v.FragmentUrl,uniforms:v.Uniforms};super({...V,defines:v._GetDefines(V.eV)}),this.texelSize=new I.Vector2(0,0)}bind(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(h),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}v.VertexUrl="fxaa",v.FragmentUrl="fxaa",v.Uniforms=["texelSize"];class s extends Y.d{getClassName(){return"FxaaPostProcess"}constructor(h,V){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,l=arguments.length>3?arguments[3]:void 0,Y=arguments.length>4?arguments[4]:void 0,g=arguments.length>5?arguments[5]:void 0,q=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const B={uniforms:v.Uniforms,size:"number"===typeof V?V:void 0,camera:i,samplingMode:l||S.d.BILINEAR_SAMPLINGMODE,eV:Y,reusable:g,textureType:q,...V};super(h,v.FragmentUrl,{effectWrapper:"number"!==typeof V&&V.effectWrapper?void 0:new v(h,Y,B),...B}),this.onApplyObservable.add((h=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(h,V,i,S){return q.d.Parse((()=>new s(h.name,h.options,V,h.renderTargetSamplingMode,i.getEngine(),h.reusable)),h,i,S)}}(0,g.f)("BABYLON.FxaaPostProcess",s);var t=i(10967),T=i(10952),e=i(11362),n=i(11371),c=i(11021);let f=null;function P(h,V,i,S){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Y=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6?arguments[6]:void 0,q=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:B,width:J}=O(h,V,i);if(!B||!J)return void t.d.Error("Invalid 'size' parameter !");V.Mh().activeCamera===V?h.onEndFrameObservable.addOnce((()=>{f||(f=document.createElement("canvas")),f.width=J,f.height=B;const V=f.getContext("2d"),i=h.getRenderingCanvas();if(!V||!i)return void t.d.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const I=i.width,v=i.height,s=f.width,e=f.height,n=s/I,c=e/v,P=q?Math.max(n,c):Math.min(n,c),L=I*P,U=v*P,X=(s-L)/2,D=(e-U)/2;V.drawImage(i,0,0,I,v,X,D,L,U),Y?(T.Tools.EncodeScreenshotCanvasData(f,void 0,l,void 0,g),S&&S("")):T.Tools.EncodeScreenshotCanvasData(f,S,l,void 0,g)})):X(h,V,i,(h=>{if(Y){const V=new Blob([h]);T.Tools.DownloadBlob(V),S&&S("")}else S&&S(h)}),l,1,h.getCreationOptions().antialias,void 0,void 0,void 0,void 0,g)}async function L(h,V,i){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",l=arguments.length>4?arguments[4]:void 0,Y=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((g,q)=>{P(h,V,i,(h=>{"undefined"!==typeof h?g(h):q(new Error("Data is undefined"))}),S,void 0,l,Y)}))}async function U(h,V,i,S){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Y=arguments.length>5?arguments[5]:void 0,g=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((q=>{P(h,V,{width:i,height:S},(()=>{q()}),l,!0,Y,g)}))}function X(h,V,Y,g){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",B=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,J=arguments.length>6&&void 0!==arguments[6]&&arguments[6],I=arguments.length>7?arguments[7]:void 0,v=arguments.length>8&&void 0!==arguments[8]&&arguments[8],T=arguments.length>9&&void 0!==arguments[9]&&arguments[9],f=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],P=arguments.length>11?arguments[11]:void 0,L=arguments.length>12?arguments[12]:void 0,U=arguments.length>13?arguments[13]:void 0;const{height:X,width:D,finalWidth:o,finalHeight:M}=O(h,V,Y),F={width:D,height:X};if(!X||!D)return void t.d.Error("Invalid 'size' parameter !");h.skipFrameRender=!0;const E=h.getRenderWidth,H=h.getRenderHeight;h.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&h._currentRenderTarget?h._currentRenderTarget.width:D},h.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&h._currentRenderTarget?h._currentRenderTarget.height:X},h.onResizeObservable.hasObservers()&&h.onResizeObservable.notifyObservers(h);const j=V.Mh(),m=new l.c("screenShot",F,j,!1,!1,0,!1,S.d.BILINEAR_SAMPLINGMODE,void 0,T,void 0,void 0,void 0,B);m.renderList=j.meshes.slice(),m.samples=B,m.renderSprites=v,m.activeCamera=V,m.forceLayerMaskCheck=f,null===L||void 0===L||L(m);const G=U||e.DumpData,w=()=>{j.incrementRenderId(),j.resetCachedMaterial(),(0,c.h)((()=>m.isReadyForRendering()&&V.isReady(!0)),(()=>{h.onEndFrameObservable.addOnce((()=>{o===D&&M===X?m.readPixels(void 0,void 0,void 0,!1).then((h=>{G(D,X,h,g,q,I,!0,void 0,P),m.dispose()})):(h.isWebGPU?i.e(51).then(i.bind(i,13573)):i.e(52).then(i.bind(i,13576))).then((async()=>await(0,n.d)("pass",m.getInternalTexture(),j,void 0,void 0,void 0,o,M).then((V=>{h._readTexturePixels(V,o,M,-1,0,null,!0,!1,0,0).then((h=>{G(o,M,h,g,q,I,!0,void 0,P),V.dispose()}))}))))})),j.incrementRenderId(),j.resetCachedMaterial();const S=j.activeCamera,l=j.activeCameras,Y=V.outputRenderTarget,B=j.spritesEnabled;j.activeCamera=V,j.activeCameras=null,V.outputRenderTarget=m,j.spritesEnabled=v;const J=j.meshes;j.meshes=m.renderList||j.meshes;try{j.render()}finally{j.activeCamera=S,j.activeCameras=l,V.outputRenderTarget=Y,j.spritesEnabled=B,j.meshes=J,h.getRenderWidth=E,h.getRenderHeight=H,h.onResizeObservable.hasObservers()&&h.onResizeObservable.notifyObservers(h),V.getProjectionMatrix(!0),h.skipFrameRender=!1}}),(()=>{h.skipFrameRender=!1,h.getRenderWidth=E,h.getRenderHeight=H}))};if(J){const h=new s("antialiasing",1,j.activeCamera);m.addPostProcess(h),h.Fg=!0,h.onEffectCreatedObservable.addOnce((h=>{h.isReady()?w():h.onCompiled=()=>{w()}}))}else w()}async function D(h,V,i){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,Y=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6?arguments[6]:void 0,q=arguments.length>7&&void 0!==arguments[7]&&arguments[7],B=arguments.length>8&&void 0!==arguments[8]&&arguments[8],J=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],I=arguments.length>10?arguments[10]:void 0,v=arguments.length>11?arguments[11]:void 0,s=arguments.length>12?arguments[12]:void 0;return await new Promise(((t,T)=>{X(h,V,i,(h=>{"undefined"!==typeof h?t(h):T(new Error("Data is undefined"))}),S,l,Y,g,q,B,J,I,v,s)}))}function O(h,V,i){let S=0,l=0,Y=0,g=0;if("object"===typeof i){const q=i.precision?Math.abs(i.precision):1;i.width&&i.height?(S=i.height*q,l=i.width*q):i.width&&!i.height?(l=i.width*q,S=Math.round(l/h.getAspectRatio(V))):i.height&&!i.width?(S=i.height*q,l=Math.round(S*h.getAspectRatio(V))):(l=Math.round(h.getRenderWidth()*q),S=Math.round(l/h.getAspectRatio(V))),i.finalWidth&&i.finalHeight?(g=i.finalHeight,Y=i.finalWidth):i.finalWidth&&!i.finalHeight?(Y=i.finalWidth,g=Math.round(Y/h.getAspectRatio(V))):i.finalHeight&&!i.finalWidth?(g=i.finalHeight,Y=Math.round(g*h.getAspectRatio(V))):(Y=l,g=S)}else isNaN(i)||(S=i,l=i,Y=i,g=i);return l&&(l=Math.floor(l)),S&&(S=Math.floor(S)),Y&&(Y=Math.floor(Y)),g&&(g=Math.floor(g)),{height:0|S,width:0|l,finalWidth:0|Y,finalHeight:0|g}}const o={CreateScreenshot:P,CreateScreenshotAsync:L,CreateScreenshotWithResizeAsync:U,CreateScreenshotUsingRenderTarget:X,CreateScreenshotUsingRenderTargetAsync:D};T.Tools.CreateScreenshot=P,T.Tools.CreateScreenshotAsync=L,T.Tools.CreateScreenshotUsingRenderTarget=X,T.Tools.CreateScreenshotUsingRenderTargetAsync=D}}]);