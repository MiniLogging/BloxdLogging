"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[12],{10232:(b,G,i)=>{i.r(G),i.d(G,{_ExrTextureLoader:()=>I});var g=i(1112),c=i(1045);const V=65536,z=14,E=65537,Z=16384;var Y,J;!function(b){b[b.NO_COMPRESSION=0]="NO_COMPRESSION",b[b.RLE_COMPRESSION=1]="RLE_COMPRESSION",b[b.ZIPS_COMPRESSION=2]="ZIPS_COMPRESSION",b[b.ZIP_COMPRESSION=3]="ZIP_COMPRESSION",b[b.PIZ_COMPRESSION=4]="PIZ_COMPRESSION",b[b.PXR24_COMPRESSION=5]="PXR24_COMPRESSION"}(Y||(Y={})),function(b){b[b.INCREASING_Y=0]="INCREASING_Y",b[b.DECREASING_Y=1]="DECREASING_Y"}(J||(J={}));const q=function(){const b=new ArrayBuffer(4),G=new Float32Array(b),i=new Uint32Array(b),g=new Uint32Array(512),c=new Uint32Array(512);for(let Z=0;Z<256;++Z){const b=Z-127;b<-27?(g[Z]=0,g[256|Z]=32768,c[Z]=24,c[256|Z]=24):b<-14?(g[Z]=1024>>-b-14,g[256|Z]=1024>>-b-14|32768,c[Z]=-b-1,c[256|Z]=-b-1):b<=15?(g[Z]=b+15<<10,g[256|Z]=b+15<<10|32768,c[Z]=13,c[256|Z]=13):b<128?(g[Z]=31744,g[256|Z]=64512,c[Z]=24,c[256|Z]=24):(g[Z]=31744,g[256|Z]=64512,c[Z]=13,c[256|Z]=13)}const V=new Uint32Array(2048),z=new Uint32Array(64),E=new Uint32Array(64);for(let Z=1;Z<1024;++Z){let b=Z<<13,G=0;for(;0===(8388608&b);)b<<=1,G-=8388608;b&=-8388609,G+=947912704,V[Z]=b|G}for(let Z=1024;Z<2048;++Z)V[Z]=939524096+(Z-1024<<13);for(let Z=1;Z<31;++Z)z[Z]=Z<<23;z[31]=1199570944,z[32]=2147483648;for(let Z=33;Z<63;++Z)z[Z]=2147483648+(Z-32<<23);z[63]=3347054592;for(let Z=1;Z<64;++Z)32!==Z&&(E[Z]=1024);return{floatView:G,uint32View:i,baseTable:g,shiftTable:c,mantissaTable:V,exponentTable:z,offsetTable:E}}();function o(b,G){const i=new Uint8Array(b);let g=0;for(;0!=i[G.value+g];)g+=1;const c=(new TextDecoder).decode(i.slice(G.value,G.value+g));return G.value=G.value+g+1,c}function s(b,G){const i=b.getInt32(G.value,!0);return G.value+=4,i}function F(b,G){const i=b.getUint32(G.value,!0);return G.value+=4,i}function l(b,G){const i=b.getUint8(G.value);return G.value+=1,i}function v(b,G){const i=b.getUint16(G.value,!0);return G.value+=2,i}function u(b,G){const i=b[G.value];return G.value+=1,i}function W(b,G){let i;return i="getBigInt64"in DataView.prototype?Number(b.getBigInt64(G.value,!0)):b.getUint32(G.value+4,!0)+Number(b.getUint32(G.value,!0)<<32),G.value+=8,i}function x(b,G){const i=b.getFloat32(G.value,!0);return G.value+=4,i}function M(b,G){return function(b){const G=(31744&b)>>10,i=1023&b;return(b>>15?-1:1)*(G?31===G?i?NaN:1/0:Math.pow(2,G-15)*(1+i/1024):i/1024*6103515625e-14)}(v(b,G))}function A(b,G){return function(b){if(Math.abs(b)>65504)throw new Error("Value out of range.Consider using float instead of half-float.");b=(0,c.e)(b,-65504,65504),q.floatView[0]=b;const G=q.uint32View[0],i=G>>23&511;return q.baseTable[i]+((8388607&G)>>q.shiftTable[i])}(x(b,G))}function H(b,G,i,g){switch(i){case"string":case"stringvector":case"iccProfile":return function(b,G,i){const g=(new TextDecoder).decode(new Uint8Array(b).slice(G.value,G.value+i));return G.value=G.value+i,g}(b.buffer,G,g);case"chlist":return function(b,G,i){const g=G.value,c=[];for(;G.value<g+i-1;){const i=o(b.buffer,G),g=s(b,G),V=l(b,G);G.value+=3;const z=s(b,G),E=s(b,G);c.push({name:i,pixelType:g,pLinear:V,xSampling:z,ySampling:E})}return G.value+=1,c}(b,G,g);case"chromaticities":return function(b,G){return{redX:x(b,G),redY:x(b,G),greenX:x(b,G),greenY:x(b,G),blueX:x(b,G),blueY:x(b,G),whiteX:x(b,G),whiteY:x(b,G)}}(b,G);case"compression":return function(b,G){return l(b,G)}(b,G);case"box2i":return function(b,G){return{xMin:s(b,G),yMin:s(b,G),xMax:s(b,G),yMax:s(b,G)}}(b,G);case"lineOrder":return function(b,G){const i=l(b,G);return J[i]}(b,G);case"float":return x(b,G);case"v2f":return function(b,G){return[x(b,G),x(b,G)]}(b,G);case"v3f":return function(b,G){return[x(b,G),x(b,G),x(b,G)]}(b,G);case"int":return s(b,G);case"rational":return function(b,G){return[s(b,G),F(b,G)]}(b,G);case"timecode":return function(b,G){return[F(b,G),F(b,G)]}(b,G);case"preview":return G.value+=g,"skipped";default:return void(G.value+=g)}}function j(b){for(let G=1;G<b.length;G++){const i=b[G-1]+b[G]-128;b[G]=i}}function R(b,G){let i=0,g=Math.floor((b.length+1)/2),c=0;const V=b.length-1;for(;!(c>V)&&(G[c++]=b[i++],!(c>V));)G[c++]=b[g++]}function y(b,G,i,g,c){for(;i<b;)G=G<<8|u(g,c),i+=8;return{l:G>>(i-=b)&(1<<b)-1,c:G,lc:i}}function f(b,G,i,g){return{c:b=b<<8|u(i,g),lc:G+=8}}function C(b,G,i,g,c,V,z,E,Z){if(b==G){if(g<8){const b=f(i,g,c,V);i=b.c,g=b.lc}let b=i>>(g-=8);if(b=new Uint8Array([b])[0],E.value+b>Z)return null;const G=z[E.value-1];for(;b-- >0;)z[E.value++]=G}else{if(!(E.value<Z))return null;z[E.value++]=b}return{c:i,lc:g}}const d=new Array(59);function L(b,G,i,g,c,V){const z=G;let Z=0,Y=0;for(;g<=c;g++){if(z.value-G.value>i)return;let E=y(6,Z,Y,b,z);const J=E.l;if(Z=E.c,Y=E.lc,V[g]=J,63==J){if(z.value-G.value>i)throw new Error("Error in HufUnpackEncTable");E=y(8,Z,Y,b,z);let J=E.l+6;if(Z=E.c,Y=E.lc,g+J>c+1)throw new Error("Error in HufUnpackEncTable");for(;J--;)V[g++]=0;g--}else if(J>=59){let b=J-59+2;if(g+b>c+1)throw new Error("Error in HufUnpackEncTable");for(;b--;)V[g++]=0;g--}}!function(b){for(let i=0;i<=58;++i)d[i]=0;for(let i=0;i<E;++i)d[b[i]]+=1;let G=0;for(let i=58;i>0;--i){const b=G+d[i]>>1;d[i]=G,G=b}for(let i=0;i<E;++i){const G=b[i];G>0&&(b[i]=G|d[G]++<<6)}}(V)}function D(b){return 63&b}function r(b){return b>>6}function N(b,G,i,g,c,V){const Y=i.value,J=F(G,i),q=F(G,i);i.value+=4;const o=F(G,i);if(i.value+=4,J<0||J>=E||q<0||q>=E)throw new Error("Wrong HUF_ENCSIZE");const s=new Array(E),l=new Array(Z);!function(b){for(let G=0;G<Z;G++)b[G]={},b[G].len=0,b[G].lit=0,b[G].p=null}(l);if(L(b,i,g-(i.value-Y),J,q,s),o>8*(g-(i.value-Y)))throw new Error("Wrong hufUncompress");!function(b,G,i,g){for(;G<=i;G++){const i=r(b[G]),c=D(b[G]);if(i>>c)throw new Error("Invalid table entry");if(c>z){const b=g[i>>c-z];if(b.len)throw new Error("Invalid table entry");if(b.lit++,b.p){const G=b.p;b.p=new Array(b.lit);for(let i=0;i<b.lit-1;++i)b.p[i]=G[i]}else b.p=new Array(1);b.p[b.lit-1]=G}else if(c){let b=0;for(let V=1<<z-c;V>0;V--){const V=g[(i<<z-c)+b];if(V.len||V.p)throw new Error("Invalid table entry");V.len=c,V.lit=G,b++}}}}(s,J,q,l),function(b,G,i,g,c,V,E,Z,Y){let J=0,q=0;const o=E,s=Math.trunc(g.value+(c+7)/8);for(;g.value<s;){let c=f(J,q,i,g);for(J=c.c,q=c.lc;q>=z;){const E=G[J>>q-z&16383];if(E.len){q-=E.len;const b=C(E.lit,V,J,q,i,g,Z,Y,o);b&&(J=b.c,q=b.lc)}else{if(!E.p)throw new Error("hufDecode issues");let G;for(G=0;G<E.lit;G++){const z=D(b[E.p[G]]);for(;q<z&&g.value<s;)c=f(J,q,i,g),J=c.c,q=c.lc;if(q>=z&&r(b[E.p[G]])==(J>>q-z&(1<<z)-1)){q-=z;const b=C(E.p[G],V,J,q,i,g,Z,Y,o);b&&(J=b.c,q=b.lc);break}}if(G==E.lit)throw new Error("HufDecode issues")}}}const F=8-c&7;for(J>>=F,q-=F;q>0;){const b=G[J<<z-q&16383];if(!b.len)throw new Error("HufDecode issues");{q-=b.len;const G=C(b.lit,V,J,q,i,g,Z,Y,o);G&&(J=G.c,q=G.lc)}}}(s,l,b,i,o,q,V,c,{value:0})}function K(b){return 65535&b}function w(b){const G=K(b);return G>32767?G-65536:G}function n(b,G){const i=w(b),g=w(G),c=i+(1&g)+(g>>1);return{a:c,b:c-g}}function U(b,G){const i=K(b),g=K(G),c=i-(g>>1)&65535;return{a:g+c-32768&65535,b:c}}function t(b,G,i,g,c,V,z){const E=z<16384,Z=i>c?c:i;let Y,J,q=1;for(;q<=Z;)q<<=1;for(q>>=1,Y=q,q>>=1;q>=1;){J=0;const z=J+V*(c-Y),Z=V*q,o=V*Y,s=g*q,F=g*Y;let l,v,u,W;for(;J<=z;J+=o){let c=J;const V=J+g*(i-Y);for(;c<=V;c+=F){const i=c+s,g=c+Z,V=g+s;if(E){let z=n(b[c+G],b[g+G]);l=z.a,u=z.b,z=n(b[i+G],b[V+G]),v=z.a,W=z.b,z=n(l,v),b[c+G]=z.a,b[i+G]=z.b,z=n(u,W),b[g+G]=z.a,b[V+G]=z.b}else{let z=U(b[c+G],b[g+G]);l=z.a,u=z.b,z=U(b[i+G],b[V+G]),v=z.a,W=z.b,z=U(l,v),b[c+G]=z.a,b[i+G]=z.b,z=U(u,W),b[g+G]=z.a,b[V+G]=z.b}}if(i&q){const i=c+Z;let g;g=E?n(b[c+G],b[i+G]):U(b[c+G],b[i+G]),l=g.a,b[i+G]=g.b,b[c+G]=l}}if(c&q){let c=J;const V=J+g*(i-Y);for(;c<=V;c+=F){const i=c+s;let g;g=E?n(b[c+G],b[i+G]):U(b[c+G],b[i+G]),l=g.a,b[i+G]=g.b,b[c+G]=l}}Y=q,q>>=1}return J}function X(b){return new DataView(b.array.buffer,b.offset.value,b.size)}function e(b){const G=b.viewer.buffer.slice(b.offset.value,b.offset.value+b.size),i=new Uint8Array(function(b){let G=b.byteLength;const i=new Array;let g=0;const c=new DataView(b);for(;G>0;){const b=c.getInt8(g++);if(b<0){const V=-b;G-=V+1;for(let b=0;b<V;b++)i.push(c.getUint8(g++))}else{const V=b;G-=2;const z=c.getUint8(g++);for(let b=0;b<V+1;b++)i.push(z)}}return i}(G)),g=new Uint8Array(i.length);return j(i),R(i,g),new DataView(g.buffer)}function O(b){const G=b.array.slice(b.offset.value,b.offset.value+b.size),i=fflate.unzlibSync(G),g=new Uint8Array(i.length);return j(i),R(i,g),new DataView(g.buffer)}function p(b){const G=b.array.slice(b.offset.value,b.offset.value+b.size),i=fflate.unzlibSync(G),g=b.lines*b.channels*b.width,c=1==b.type?new Uint16Array(g):new Uint32Array(g);let V=0,z=0;const E=new Array(4);for(let Z=0;Z<b.lines;Z++)for(let G=0;G<b.channels;G++){let G=0;switch(b.type){case 1:E[0]=V,E[1]=E[0]+b.width,V=E[1]+b.width;for(let g=0;g<b.width;++g){G+=i[E[0]++]<<8|i[E[1]++],c[z]=G,z++}break;case 2:E[0]=V,E[1]=E[0]+b.width,E[2]=E[1]+b.width,V=E[2]+b.width;for(let g=0;g<b.width;++g){G+=i[E[0]++]<<24|i[E[1]++]<<16|i[E[2]++]<<8,c[z]=G,z++}}}return new DataView(c.buffer)}function S(b){const G=b.viewer,i={value:b.offset.value},g=new Uint16Array(b.width*b.scanlineBlockSize*(b.channels*b.type)),c=new Uint8Array(8192);let z=0;const E=new Array(b.channels);for(let V=0;V<b.channels;V++)E[V]={},E[V].start=z,E[V].end=E[V].start,E[V].nx=b.width,E[V].ny=b.lines,E[V].size=b.type,z+=E[V].nx*E[V].ny*E[V].size;const Z=v(G,i),Y=v(G,i);if(Y>=8192)throw new Error("Wrong PIZ_COMPRESSION BITMAP_SIZE");if(Z<=Y)for(let V=0;V<Y-Z+1;V++)c[V+Z]=l(G,i);const J=new Uint16Array(V),q=function(b,G){let i=0;for(let c=0;c<V;++c)(0==c||b[c>>3]&1<<(7&c))&&(G[i++]=c);const g=i-1;for(;i<V;)G[i++]=0;return g}(c,J),o=F(G,i);N(b.array,G,i,o,g,z);for(let V=0;V<b.channels;++V){const b=E[V];for(let G=0;G<E[V].size;++G)t(g,b.start+G,b.nx,b.size,b.ny,b.nx*b.size,q)}!function(b,G,i){for(let g=0;g<i;++g)G[g]=b[G[g]]}(J,g,z);let s=0;const u=new Uint8Array(g.buffer.byteLength);for(let V=0;V<b.lines;V++)for(let G=0;G<b.channels;G++){const b=E[G],i=b.nx*b.size,c=new Uint8Array(g.buffer,2*b.end,2*i);u.set(c,s),s+=2*i,b.end+=i}return new DataView(u.buffer)}var P,m=i(1224);!function(b){b[b.Float=0]="Float",b[b.HalfFloat=1]="HalfFloat"}(P||(P={}));class Q{}Q.DefaultOutputType=P.HalfFloat,Q.FFLATEUrl="https://unpkg.com/fflate@0.8.2";class I{constructor(){this.supportCascades=!1}loadCubeData(b,G,i,g,c){throw".exr not supported in Cube."}async loadData(b,G,i){const c=new DataView(b.buffer),V={value:0},z=function(b,G){if(20000630!=b.getUint32(0,!0))throw new Error("Incorrect OpenEXR format");const i=b.getUint8(4),c=b.getUint8(5),V={singleTile:!!(2&c),longName:!!(4&c),deepFormat:!!(8&c),multiPart:!!(16&c)};G.value=8;const z={};let E=!0;for(;E;){const i=o(b.buffer,G);if(i){const c=o(b.buffer,G),V=H(b,G,c,F(b,G));void 0===V?g.b.Warn(`Unknown header attribute type ${c}'.`):z[i]=V}else E=!1}if(0!=(-5&c))throw new Error("Unsupported file format");return{version:i,spec:V,...z}}(c,V),E=await async function(b,G,i,g){const c={size:0,viewer:G,array:new Uint8Array(G.buffer),offset:i,width:b.dataWindow.xMax-b.dataWindow.xMin+1,height:b.dataWindow.yMax-b.dataWindow.yMin+1,channels:b.channels.length,channelLineOffsets:{},scanOrder:()=>0,bytesPerLine:0,outLineWidth:0,lines:0,scanlineBlockSize:0,inputSize:null,type:0,uncompress:null,getter:()=>0,format:5,outputChannels:0,decodeChannels:{},blockCount:null,byteArray:null,linearSpace:!1,textureType:0};switch(b.compression){case Y.NO_COMPRESSION:c.lines=1,c.uncompress=X;break;case Y.RLE_COMPRESSION:c.lines=1,c.uncompress=e;break;case Y.ZIPS_COMPRESSION:c.lines=1,c.uncompress=O,await m.g.LoadScriptAsync(Q.FFLATEUrl);break;case Y.ZIP_COMPRESSION:c.lines=16,c.uncompress=O,await m.g.LoadScriptAsync(Q.FFLATEUrl);break;case Y.PIZ_COMPRESSION:c.lines=32,c.uncompress=S;break;case Y.PXR24_COMPRESSION:c.lines=16,c.uncompress=p,await m.g.LoadScriptAsync(Q.FFLATEUrl);break;default:throw new Error(Y[b.compression]+" is unsupported")}c.scanlineBlockSize=c.lines;const V={};for(const Y of b.channels)switch(Y.name){case"Y":case"R":case"G":case"B":case"A":V[Y.name]=!0,c.type=Y.pixelType}let z=!1;if(V.R&&V.G&&V.B)z=!V.A,c.outputChannels=4,c.decodeChannels={R:0,G:1,B:2,A:3};else{if(!V.Y)throw new Error("EXRLoader.parse: file contains unsupported data channels.");c.outputChannels=1,c.decodeChannels={Y:0}}if(1===c.type)switch(g){case P.Float:c.getter=M,c.inputSize=2;break;case P.HalfFloat:c.getter=v,c.inputSize=2}else{if(2!==c.type)throw new Error("Unsupported pixelType "+c.type+" for "+b.compression);switch(g){case P.Float:c.getter=x,c.inputSize=4;break;case P.HalfFloat:c.getter=A,c.inputSize=4}}c.blockCount=c.height/c.scanlineBlockSize;for(let Y=0;Y<c.blockCount;Y++)W(G,i);const E=c.width*c.height*c.outputChannels;switch(g){case P.Float:c.byteArray=new Float32Array(E),c.textureType=1,z&&c.byteArray.fill(1,0,E);break;case P.HalfFloat:c.byteArray=new Uint16Array(E),c.textureType=2,z&&c.byteArray.fill(15360,0,E);break;default:throw new Error("Unsupported type: "+g)}let Z=0;for(const Y of b.channels)void 0!==c.decodeChannels[Y.name]&&(c.channelLineOffsets[Y.name]=Z*c.width),Z+=2*Y.pixelType;return c.bytesPerLine=c.width*Z,c.outLineWidth=c.width*c.outputChannels,"INCREASING_Y"===b.lineOrder?c.scanOrder=b=>b:c.scanOrder=b=>c.height-1-b,4==c.outputChannels?(c.format=5,c.linearSpace=!0):(c.format=6,c.linearSpace=!1),c}(z,c,V,Q.DefaultOutputType);!function(b,G,i,g){const c={value:0};for(let V=0;V<b.height/b.scanlineBlockSize;V++){const z=s(i,g)-G.dataWindow.yMin;b.size=F(i,g),b.lines=z+b.scanlineBlockSize>b.height?b.height-z:b.scanlineBlockSize;const E=b.size<b.lines*b.bytesPerLine&&b.uncompress?b.uncompress(b):X(b);g.value+=b.size;for(let i=0;i<b.scanlineBlockSize;i++){const g=V*b.scanlineBlockSize,z=i+b.scanOrder(g);if(z>=b.height)continue;const Z=i*b.bytesPerLine,Y=(b.height-1-z)*b.outLineWidth;for(let i=0;i<b.channels;i++){const g=G.channels[i].name,V=b.channelLineOffsets[g],z=b.decodeChannels[g];if(void 0!==z){c.value=Z+V;for(let G=0;G<b.width;G++){const i=Y+G*b.outputChannels+z;b.byteArray&&(b.byteArray[i]=b.getter(E,c))}}}}}}(E,z,c,V);i(z.dataWindow.xMax-z.dataWindow.xMin+1,z.dataWindow.yMax-z.dataWindow.yMin+1,G.generateMipMaps,!1,(()=>{const b=G.getEngine();G.format=z.format,G.type=E.textureType,G.invertY=!1,G._gammaSpace=!z.linearSpace,E.byteArray&&b._uploadDataToTextureDirectly(G,E.byteArray,0,0,void 0,!0)}))}}}}]);