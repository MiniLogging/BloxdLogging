"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[12],{10977:(D,j,W)=>{W.r(j),W.d(j,{_ExrTextureLoader:()=>J});var Q=W(1083),C=W(1e3);const k=65536,M=14,O=65537,E=16384;var f,F;!function(D){D[D.NO_COMPRESSION=0]="NO_COMPRESSION",D[D.RLE_COMPRESSION=1]="RLE_COMPRESSION",D[D.ZIPS_COMPRESSION=2]="ZIPS_COMPRESSION",D[D.ZIP_COMPRESSION=3]="ZIP_COMPRESSION",D[D.PIZ_COMPRESSION=4]="PIZ_COMPRESSION",D[D.PXR24_COMPRESSION=5]="PXR24_COMPRESSION"}(f||(f={})),function(D){D[D.INCREASING_Y=0]="INCREASING_Y",D[D.DECREASING_Y=1]="DECREASING_Y"}(F||(F={}));const Z=function(){const D=new ArrayBuffer(4),j=new Float32Array(D),W=new Uint32Array(D),Q=new Uint32Array(512),C=new Uint32Array(512);for(let E=0;E<256;++E){const D=E-127;D<-27?(Q[E]=0,Q[256|E]=32768,C[E]=24,C[256|E]=24):D<-14?(Q[E]=1024>>-D-14,Q[256|E]=1024>>-D-14|32768,C[E]=-D-1,C[256|E]=-D-1):D<=15?(Q[E]=D+15<<10,Q[256|E]=D+15<<10|32768,C[E]=13,C[256|E]=13):D<128?(Q[E]=31744,Q[256|E]=64512,C[E]=24,C[256|E]=24):(Q[E]=31744,Q[256|E]=64512,C[E]=13,C[256|E]=13)}const k=new Uint32Array(2048),M=new Uint32Array(64),O=new Uint32Array(64);for(let E=1;E<1024;++E){let D=E<<13,j=0;for(;0===(8388608&D);)D<<=1,j-=8388608;D&=-8388609,j+=947912704,k[E]=D|j}for(let E=1024;E<2048;++E)k[E]=939524096+(E-1024<<13);for(let E=1;E<31;++E)M[E]=E<<23;M[31]=1199570944,M[32]=2147483648;for(let E=33;E<63;++E)M[E]=2147483648+(E-32<<23);M[63]=3347054592;for(let E=1;E<64;++E)32!==E&&(O[E]=1024);return{floatView:j,uint32View:W,baseTable:Q,shiftTable:C,mantissaTable:k,exponentTable:M,offsetTable:O}}();function P(D,j){const W=new Uint8Array(D);let Q=0;for(;0!=W[j.value+Q];)Q+=1;const C=(new TextDecoder).decode(W.slice(j.value,j.value+Q));return j.value=j.value+Q+1,C}function X(D,j){const W=D.getInt32(j.value,!0);return j.value+=4,W}function x(D,j){const W=D.getUint32(j.value,!0);return j.value+=4,W}function R(D,j){const W=D.getUint8(j.value);return j.value+=1,W}function V(D,j){const W=D.getUint16(j.value,!0);return j.value+=2,W}function U(D,j){const W=D[j.value];return j.value+=1,W}function g(D,j){let W;return W="getBigInt64"in DataView.prototype?Number(D.getBigInt64(j.value,!0)):D.getUint32(j.value+4,!0)+Number(D.getUint32(j.value,!0)<<32),j.value+=8,W}function N(D,j){const W=D.getFloat32(j.value,!0);return j.value+=4,W}function G(D,j){return function(D){const j=(31744&D)>>10,W=1023&D;return(D>>15?-1:1)*(j?31===j?W?NaN:1/0:Math.pow(2,j-15)*(1+W/1024):W/1024*6103515625e-14)}(V(D,j))}function K(D,j){return function(D){if(Math.abs(D)>65504)throw new Error("Value out of range.Consider using float instead of half-float.");D=(0,C.e)(D,-65504,65504),Z.floatView[0]=D;const j=Z.uint32View[0],W=j>>23&511;return Z.baseTable[W]+((8388607&j)>>Z.shiftTable[W])}(N(D,j))}function L(D,j,W,Q){switch(W){case"string":case"stringvector":case"iccProfile":return function(D,j,W){const Q=(new TextDecoder).decode(new Uint8Array(D).slice(j.value,j.value+W));return j.value=j.value+W,Q}(D.buffer,j,Q);case"chlist":return function(D,j,W){const Q=j.value,C=[];for(;j.value<Q+W-1;){const W=P(D.buffer,j),Q=X(D,j),k=R(D,j);j.value+=3;const M=X(D,j),O=X(D,j);C.push({name:W,pixelType:Q,pLinear:k,xSampling:M,ySampling:O})}return j.value+=1,C}(D,j,Q);case"chromaticities":return function(D,j){return{redX:N(D,j),redY:N(D,j),greenX:N(D,j),greenY:N(D,j),blueX:N(D,j),blueY:N(D,j),whiteX:N(D,j),whiteY:N(D,j)}}(D,j);case"compression":return function(D,j){return R(D,j)}(D,j);case"box2i":return function(D,j){return{xMin:X(D,j),yMin:X(D,j),xMax:X(D,j),yMax:X(D,j)}}(D,j);case"lineOrder":return function(D,j){const W=R(D,j);return F[W]}(D,j);case"float":return N(D,j);case"v2f":return function(D,j){return[N(D,j),N(D,j)]}(D,j);case"v3f":return function(D,j){return[N(D,j),N(D,j),N(D,j)]}(D,j);case"int":return X(D,j);case"rational":return function(D,j){return[X(D,j),x(D,j)]}(D,j);case"timecode":return function(D,j){return[x(D,j),x(D,j)]}(D,j);case"preview":return j.value+=Q,"skipped";default:return void(j.value+=Q)}}function e(D){for(let j=1;j<D.length;j++){const W=D[j-1]+D[j]-128;D[j]=W}}function s(D,j){let W=0,Q=Math.floor((D.length+1)/2),C=0;const k=D.length-1;for(;!(C>k)&&(j[C++]=D[W++],!(C>k));)j[C++]=D[Q++]}function b(D,j,W,Q,C){for(;W<D;)j=j<<8|U(Q,C),W+=8;return{l:j>>(W-=D)&(1<<D)-1,c:j,lc:W}}function Y(D,j,W,Q){return{c:D=D<<8|U(W,Q),lc:j+=8}}function t(D,j,W,Q,C,k,M,O,E){if(D==j){if(Q<8){const D=Y(W,Q,C,k);W=D.c,Q=D.lc}let D=W>>(Q-=8);if(D=new Uint8Array([D])[0],O.value+D>E)return null;const j=M[O.value-1];for(;D-- >0;)M[O.value++]=j}else{if(!(O.value<E))return null;M[O.value++]=D}return{c:W,lc:Q}}const c=new Array(59);function l(D,j,W,Q,C,k){const M=j;let E=0,f=0;for(;Q<=C;Q++){if(M.value-j.value>W)return;let O=b(6,E,f,D,M);const F=O.l;if(E=O.c,f=O.lc,k[Q]=F,63==F){if(M.value-j.value>W)throw new Error("Error in HufUnpackEncTable");O=b(8,E,f,D,M);let F=O.l+6;if(E=O.c,f=O.lc,Q+F>C+1)throw new Error("Error in HufUnpackEncTable");for(;F--;)k[Q++]=0;Q--}else if(F>=59){let D=F-59+2;if(Q+D>C+1)throw new Error("Error in HufUnpackEncTable");for(;D--;)k[Q++]=0;Q--}}!function(D){for(let W=0;W<=58;++W)c[W]=0;for(let W=0;W<O;++W)c[D[W]]+=1;let j=0;for(let W=58;W>0;--W){const D=j+c[W]>>1;c[W]=j,j=D}for(let W=0;W<O;++W){const j=D[W];j>0&&(D[W]=j|c[j]++<<6)}}(k)}function I(D){return 63&D}function y(D){return D>>6}function m(D,j,W,Q,C,k){const f=W.value,F=x(j,W),Z=x(j,W);W.value+=4;const P=x(j,W);if(W.value+=4,F<0||F>=O||Z<0||Z>=O)throw new Error("Wrong HUF_ENCSIZE");const X=new Array(O),R=new Array(E);!function(D){for(let j=0;j<E;j++)D[j]={},D[j].len=0,D[j].lit=0,D[j].p=null}(R);if(l(D,W,Q-(W.value-f),F,Z,X),P>8*(Q-(W.value-f)))throw new Error("Wrong hufUncompress");!function(D,j,W,Q){for(;j<=W;j++){const W=y(D[j]),C=I(D[j]);if(W>>C)throw new Error("Invalid table entry");if(C>M){const D=Q[W>>C-M];if(D.len)throw new Error("Invalid table entry");if(D.lit++,D.p){const j=D.p;D.p=new Array(D.lit);for(let W=0;W<D.lit-1;++W)D.p[W]=j[W]}else D.p=new Array(1);D.p[D.lit-1]=j}else if(C){let D=0;for(let k=1<<M-C;k>0;k--){const k=Q[(W<<M-C)+D];if(k.len||k.p)throw new Error("Invalid table entry");k.len=C,k.lit=j,D++}}}}(X,F,Z,R),function(D,j,W,Q,C,k,O,E,f){let F=0,Z=0;const P=O,X=Math.trunc(Q.value+(C+7)/8);for(;Q.value<X;){let C=Y(F,Z,W,Q);for(F=C.c,Z=C.lc;Z>=M;){const O=j[F>>Z-M&16383];if(O.len){Z-=O.len;const D=t(O.lit,k,F,Z,W,Q,E,f,P);D&&(F=D.c,Z=D.lc)}else{if(!O.p)throw new Error("hufDecode issues");let j;for(j=0;j<O.lit;j++){const M=I(D[O.p[j]]);for(;Z<M&&Q.value<X;)C=Y(F,Z,W,Q),F=C.c,Z=C.lc;if(Z>=M&&y(D[O.p[j]])==(F>>Z-M&(1<<M)-1)){Z-=M;const D=t(O.p[j],k,F,Z,W,Q,E,f,P);D&&(F=D.c,Z=D.lc);break}}if(j==O.lit)throw new Error("HufDecode issues")}}}const x=8-C&7;for(F>>=x,Z-=x;Z>0;){const D=j[F<<M-Z&16383];if(!D.len)throw new Error("HufDecode issues");{Z-=D.len;const j=t(D.lit,k,F,Z,W,Q,E,f,P);j&&(F=j.c,Z=j.lc)}}}(X,R,D,W,P,Z,k,C,{value:0})}function a(D){return 65535&D}function S(D){const j=a(D);return j>32767?j-65536:j}function H(D,j){const W=S(D),Q=S(j),C=W+(1&Q)+(Q>>1);return{a:C,b:C-Q}}function z(D,j){const W=a(D),Q=a(j),C=W-(Q>>1)&65535;return{a:Q+C-32768&65535,b:C}}function i(D,j,W,Q,C,k,M){const O=M<16384,E=W>C?C:W;let f,F,Z=1;for(;Z<=E;)Z<<=1;for(Z>>=1,f=Z,Z>>=1;Z>=1;){F=0;const M=F+k*(C-f),E=k*Z,P=k*f,X=Q*Z,x=Q*f;let R,V,U,g;for(;F<=M;F+=P){let C=F;const k=F+Q*(W-f);for(;C<=k;C+=x){const W=C+X,Q=C+E,k=Q+X;if(O){let M=H(D[C+j],D[Q+j]);R=M.a,U=M.b,M=H(D[W+j],D[k+j]),V=M.a,g=M.b,M=H(R,V),D[C+j]=M.a,D[W+j]=M.b,M=H(U,g),D[Q+j]=M.a,D[k+j]=M.b}else{let M=z(D[C+j],D[Q+j]);R=M.a,U=M.b,M=z(D[W+j],D[k+j]),V=M.a,g=M.b,M=z(R,V),D[C+j]=M.a,D[W+j]=M.b,M=z(U,g),D[Q+j]=M.a,D[k+j]=M.b}}if(W&Z){const W=C+E;let Q;Q=O?H(D[C+j],D[W+j]):z(D[C+j],D[W+j]),R=Q.a,D[W+j]=Q.b,D[C+j]=R}}if(C&Z){let C=F;const k=F+Q*(W-f);for(;C<=k;C+=x){const W=C+X;let Q;Q=O?H(D[C+j],D[W+j]):z(D[C+j],D[W+j]),R=Q.a,D[W+j]=Q.b,D[C+j]=R}}f=Z,Z>>=1}return F}function p(D){return new DataView(D.array.buffer,D.offset.value,D.size)}function T(D){const j=D.viewer.buffer.slice(D.offset.value,D.offset.value+D.size),W=new Uint8Array(function(D){let j=D.byteLength;const W=new Array;let Q=0;const C=new DataView(D);for(;j>0;){const D=C.getInt8(Q++);if(D<0){const k=-D;j-=k+1;for(let D=0;D<k;D++)W.push(C.getUint8(Q++))}else{const k=D;j-=2;const M=C.getUint8(Q++);for(let D=0;D<k+1;D++)W.push(M)}}return W}(j)),Q=new Uint8Array(W.length);return e(W),s(W,Q),new DataView(Q.buffer)}function A(D){const j=D.array.slice(D.offset.value,D.offset.value+D.size),W=fflate.unzlibSync(j),Q=new Uint8Array(W.length);return e(W),s(W,Q),new DataView(Q.buffer)}function w(D){const j=D.array.slice(D.offset.value,D.offset.value+D.size),W=fflate.unzlibSync(j),Q=D.lines*D.channels*D.width,C=1==D.type?new Uint16Array(Q):new Uint32Array(Q);let k=0,M=0;const O=new Array(4);for(let E=0;E<D.lines;E++)for(let j=0;j<D.channels;j++){let j=0;switch(D.type){case 1:O[0]=k,O[1]=O[0]+D.width,k=O[1]+D.width;for(let Q=0;Q<D.width;++Q){j+=W[O[0]++]<<8|W[O[1]++],C[M]=j,M++}break;case 2:O[0]=k,O[1]=O[0]+D.width,O[2]=O[1]+D.width,k=O[2]+D.width;for(let Q=0;Q<D.width;++Q){j+=W[O[0]++]<<24|W[O[1]++]<<16|W[O[2]++]<<8,C[M]=j,M++}}}return new DataView(C.buffer)}function n(D){const j=D.viewer,W={value:D.offset.value},Q=new Uint16Array(D.width*D.scanlineBlockSize*(D.channels*D.type)),C=new Uint8Array(8192);let M=0;const O=new Array(D.channels);for(let k=0;k<D.channels;k++)O[k]={},O[k].start=M,O[k].end=O[k].start,O[k].nx=D.width,O[k].ny=D.lines,O[k].size=D.type,M+=O[k].nx*O[k].ny*O[k].size;const E=V(j,W),f=V(j,W);if(f>=8192)throw new Error("Wrong PIZ_COMPRESSION BITMAP_SIZE");if(E<=f)for(let k=0;k<f-E+1;k++)C[k+E]=R(j,W);const F=new Uint16Array(k),Z=function(D,j){let W=0;for(let C=0;C<k;++C)(0==C||D[C>>3]&1<<(7&C))&&(j[W++]=C);const Q=W-1;for(;W<k;)j[W++]=0;return Q}(C,F),P=x(j,W);m(D.array,j,W,P,Q,M);for(let k=0;k<D.channels;++k){const D=O[k];for(let j=0;j<O[k].size;++j)i(Q,D.start+j,D.nx,D.size,D.ny,D.nx*D.size,Z)}!function(D,j,W){for(let Q=0;Q<W;++Q)j[Q]=D[j[Q]]}(F,Q,M);let X=0;const U=new Uint8Array(Q.buffer.byteLength);for(let k=0;k<D.lines;k++)for(let j=0;j<D.channels;j++){const D=O[j],W=D.nx*D.size,C=new Uint8Array(Q.buffer,2*D.end,2*W);U.set(C,X),X+=2*W,D.end+=W}return new DataView(U.buffer)}var u,q=W(1207);!function(D){D[D.Float=0]="Float",D[D.HalfFloat=1]="HalfFloat"}(u||(u={}));class o{}o.DefaultOutputType=u.HalfFloat,o.FFLATEUrl="https://unpkg.com/fflate@0.8.2";class J{constructor(){this.supportCascades=!1}loadCubeData(D,j,W,Q,C){throw".exr not supported in Cube."}async loadData(D,j,W){const C=new DataView(D.buffer),k={value:0},M=function(D,j){if(20000630!=D.getUint32(0,!0))throw new Error("Incorrect OpenEXR format");const W=D.getUint8(4),C=D.getUint8(5),k={singleTile:!!(2&C),longName:!!(4&C),deepFormat:!!(8&C),multiPart:!!(16&C)};j.value=8;const M={};let O=!0;for(;O;){const W=P(D.buffer,j);if(W){const C=P(D.buffer,j),k=L(D,j,C,x(D,j));void 0===k?Q.b.Warn(`Unknown header attribute type ${C}'.`):M[W]=k}else O=!1}if(0!=(-5&C))throw new Error("Unsupported file format");return{version:W,spec:k,...M}}(C,k),O=await async function(D,j,W,Q){const C={size:0,viewer:j,array:new Uint8Array(j.buffer),offset:W,width:D.dataWindow.xMax-D.dataWindow.xMin+1,height:D.dataWindow.yMax-D.dataWindow.yMin+1,channels:D.channels.length,channelLineOffsets:{},scanOrder:()=>0,bytesPerLine:0,outLineWidth:0,lines:0,scanlineBlockSize:0,inputSize:null,type:0,uncompress:null,getter:()=>0,format:5,outputChannels:0,decodeChannels:{},blockCount:null,byteArray:null,linearSpace:!1,textureType:0};switch(D.compression){case f.NO_COMPRESSION:C.lines=1,C.uncompress=p;break;case f.RLE_COMPRESSION:C.lines=1,C.uncompress=T;break;case f.ZIPS_COMPRESSION:C.lines=1,C.uncompress=A,await q.f.LoadScriptAsync(o.FFLATEUrl);break;case f.ZIP_COMPRESSION:C.lines=16,C.uncompress=A,await q.f.LoadScriptAsync(o.FFLATEUrl);break;case f.PIZ_COMPRESSION:C.lines=32,C.uncompress=n;break;case f.PXR24_COMPRESSION:C.lines=16,C.uncompress=w,await q.f.LoadScriptAsync(o.FFLATEUrl);break;default:throw new Error(f[D.compression]+" is unsupported")}C.scanlineBlockSize=C.lines;const k={};for(const f of D.channels)switch(f.name){case"Y":case"R":case"G":case"B":case"A":k[f.name]=!0,C.type=f.pixelType}let M=!1;if(k.R&&k.G&&k.B)M=!k.A,C.outputChannels=4,C.decodeChannels={R:0,G:1,B:2,A:3};else{if(!k.Y)throw new Error("EXRLoader.parse: file contains unsupported data channels.");C.outputChannels=1,C.decodeChannels={Y:0}}if(1===C.type)switch(Q){case u.Float:C.getter=G,C.inputSize=2;break;case u.HalfFloat:C.getter=V,C.inputSize=2}else{if(2!==C.type)throw new Error("Unsupported pixelType "+C.type+" for "+D.compression);switch(Q){case u.Float:C.getter=N,C.inputSize=4;break;case u.HalfFloat:C.getter=K,C.inputSize=4}}C.blockCount=C.height/C.scanlineBlockSize;for(let f=0;f<C.blockCount;f++)g(j,W);const O=C.width*C.height*C.outputChannels;switch(Q){case u.Float:C.byteArray=new Float32Array(O),C.textureType=1,M&&C.byteArray.fill(1,0,O);break;case u.HalfFloat:C.byteArray=new Uint16Array(O),C.textureType=2,M&&C.byteArray.fill(15360,0,O);break;default:throw new Error("Unsupported type: "+Q)}let E=0;for(const f of D.channels)void 0!==C.decodeChannels[f.name]&&(C.channelLineOffsets[f.name]=E*C.width),E+=2*f.pixelType;return C.bytesPerLine=C.width*E,C.outLineWidth=C.width*C.outputChannels,"INCREASING_Y"===D.lineOrder?C.scanOrder=D=>D:C.scanOrder=D=>C.height-1-D,4==C.outputChannels?(C.format=5,C.linearSpace=!0):(C.format=6,C.linearSpace=!1),C}(M,C,k,o.DefaultOutputType);!function(D,j,W,Q){const C={value:0};for(let k=0;k<D.height/D.scanlineBlockSize;k++){const M=X(W,Q)-j.dataWindow.yMin;D.size=x(W,Q),D.lines=M+D.scanlineBlockSize>D.height?D.height-M:D.scanlineBlockSize;const O=D.size<D.lines*D.bytesPerLine&&D.uncompress?D.uncompress(D):p(D);Q.value+=D.size;for(let W=0;W<D.scanlineBlockSize;W++){const Q=k*D.scanlineBlockSize,M=W+D.scanOrder(Q);if(M>=D.height)continue;const E=W*D.bytesPerLine,f=(D.height-1-M)*D.outLineWidth;for(let W=0;W<D.channels;W++){const Q=j.channels[W].name,k=D.channelLineOffsets[Q],M=D.decodeChannels[Q];if(void 0!==M){C.value=E+k;for(let j=0;j<D.width;j++){const W=f+j*D.outputChannels+M;D.byteArray&&(D.byteArray[W]=D.getter(O,C))}}}}}}(O,M,C,k);W(M.dataWindow.xMax-M.dataWindow.xMin+1,M.dataWindow.yMax-M.dataWindow.yMin+1,j.generateMipMaps,!1,(()=>{const D=j.getEngine();j.format=M.format,j.type=O.textureType,j.invertY=!1,j._gammaSpace=!M.linearSpace,O.byteArray&&D._uploadDataToTextureDirectly(j,O.byteArray,0,0,void 0,!0)}))}}}}]);