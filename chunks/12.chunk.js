"use strict";(self.qbp2s7qydk=self.qbp2s7qydk||[]).push([[12,20],{13196:(M,A,O)=>{O.r(A),O.d(A,{Dispose:()=>T,DumpData:()=>e,DumpDataAsync:()=>g,DumpFramebuffer:()=>B,DumpTools:()=>J});var S=O(13090),z=O(12768),Q=O(12980),X=O(12811);let c,j=null;async function B(M,A,O,S){let z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Q=arguments.length>5?arguments[5]:void 0,X=arguments.length>6?arguments[6]:void 0;const c=await O.readPixels(0,0,M,A);e(M,A,new Uint8Array(c.buffer),S,z,Q,!0,void 0,X)}async function g(M,A,O){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",z=arguments.length>4?arguments[4]:void 0,Q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],X=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7?arguments[7]:void 0;return await new Promise((j=>{e(M,A,O,(M=>j(M)),S,z,Q,X,c)}))}function e(M,A,B,g){let e=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",J=arguments.length>5?arguments[5]:void 0,K=arguments.length>6&&void 0!==arguments[6]&&arguments[6],G=arguments.length>7&&void 0!==arguments[7]&&arguments[7],d=arguments.length>8?arguments[8]:void 0;(async function(){return j||(j=new Promise(((M,A)=>{let z,Q=null;const j={cc:!0,depth:!1,Sc:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(O.bind(O,13119)).then((B=>{let{ThinEngine:g}=B;const e=X.d.Instances.length;try{z=new OffscreenCanvas(100,100),Q=new g(z,!1,j)}catch(G){var J;e<X.d.Instances.length&&(null===(J=X.d.Instances.pop())||void 0===J||J.dispose()),z=document.createElement("canvas"),Q=new g(z,!1,j)}X.d.Instances.pop(),X.d.OnEnginesDisposedObservable.add((M=>{Q&&M!==Q&&!Q.T&&0===X.d.Instances.length&&T()})),Q.getCaps().parallelShaderCompile=void 0;const K=new S.b(Q);O.e(52).then(O.bind(O,15129)).then((O=>{let{passPixelShader:X}=O;if(!Q)return void A("Engine is not defined");const j=new S.c({KA:Q,name:X.name,fragmentShader:X.shader,samplerNames:["textureSampler"]});c={canvas:z,KA:Q,renderer:K,wrapper:j},M(c)}))})).catch(A)}))),await j})().then((O=>{if(O.KA.setSize(M,A,!0),B instanceof Float32Array){const M=new Uint8Array(B.length);let A=B.length;for(;A--;){const O=B[A];M[A]=Math.round(255*(0,Q.Clamp)(O))}B=M}const S=O.KA.createRawTexture(B,M,A,5,!1,!K,1);O.renderer.setViewport(),O.renderer.applyEffectWrapper(O.wrapper),O.wrapper.effect._bindTexture("textureSampler",S),O.renderer.draw(),G?z.Tools.ToBlob(O.canvas,(M=>{const A=new FileReader;A.onload=M=>{const A=M.target.result;g&&g(A)},A.readAsArrayBuffer(M)}),e,d):z.Tools.EncodeScreenshotCanvasData(O.canvas,g,e,J,d),S.dispose()}))}function T(){var M;c?(c.wrapper.dispose(),c.renderer.dispose(),c.KA.dispose()):null===(M=j)||void 0===M||M.then((M=>{M.wrapper.dispose(),M.renderer.dispose(),M.KA.dispose()}));j=null,c=null}const J={DumpData:e,DumpDataAsync:g,DumpFramebuffer:B,Dispose:T};z.Tools.DumpData=e,z.Tools.DumpDataAsync=g,z.Tools.DumpFramebuffer=B},12940:(M,A,O)=>{O.r(A),O.d(A,{CreateScreenshot:()=>s,CreateScreenshotAsync:()=>Y,CreateScreenshotUsingRenderTarget:()=>H,CreateScreenshotUsingRenderTargetAsync:()=>C,CreateScreenshotWithResizeAsync:()=>E,ScreenshotTools:()=>D});var S=O(12949),z=O(13033),Q=O(22),X=O(13084),c=O(12919),j=O(12998),B=O(13090),g=O(13110),e=O(12970);class T extends B.c{static _GetDefines(M){if(!M)return null;return M.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(M,A){M?(this._webGPUReady=!0,A.push(Promise.all([O.e(54).then(O.bind(O,15134)),O.e(55).then(O.bind(O,15136))]))):A.push(Promise.all([O.e(56).then(O.bind(O,15144)),O.e(57).then(O.bind(O,15148))]))}constructor(M){let A=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,O=arguments.length>2?arguments[2]:void 0;const S=(0,Q.d)((0,Q.d)({},O),{},{name:M,KA:A||g.b.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:T.VertexUrl,fragmentShader:T.FragmentUrl,uniforms:T.Uniforms});super((0,Q.d)((0,Q.d)({},S),{},{defines:T._GetDefines(S.KA)})),this.texelSize=new e.Vector2(0,0)}bind(){let M=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(M),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}T.VertexUrl="fxaa",T.FragmentUrl="fxaa",T.Uniforms=["texelSize"];class J extends X.c{getClassName(){return"FxaaPostProcess"}constructor(M,A){let O=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,z=arguments.length>3?arguments[3]:void 0,X=arguments.length>4?arguments[4]:void 0,c=arguments.length>5?arguments[5]:void 0,j=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const B=(0,Q.d)({uniforms:T.Uniforms,size:"number"===typeof A?A:void 0,camera:O,samplingMode:z||S.c.BILINEAR_SAMPLINGMODE,KA:X,reusable:c,textureType:j},A);super(M,T.FragmentUrl,(0,Q.d)({effectWrapper:"number"!==typeof A&&A.effectWrapper?void 0:new T(M,X,B)},B)),this.onApplyObservable.add((M=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(M,A,O,S){return j.e.Parse((()=>new J(M.name,M.options,A,M.renderTargetSamplingMode,O.getEngine(),M.reusable)),M,O,S)}}(0,c.g)("BABYLON.FxaaPostProcess",J);var K=O(12783),G=O(12768),d=O(13196),w=O(13203),I=O(12848);let b=null;function s(M,A,O,S){let z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],X=arguments.length>6?arguments[6]:void 0,c=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:j,width:B}=f(M,A,O);if(!j||!B)return void K.c.Error("Invalid 'size' parameter !");A.HM().activeCamera===A?M.onEndFrameObservable.addOnce((()=>{b||(b=document.createElement("canvas")),b.width=B,b.height=j;const A=b.getContext("2d"),O=M.getRenderingCanvas();if(!A||!O)return void K.c.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const g=O.width,e=O.height,T=b.width,J=b.height,d=T/g,w=J/e,I=c?Math.max(d,w):Math.min(d,w),s=g*I,Y=e*I,E=(T-s)/2,H=(J-Y)/2;A.drawImage(O,0,0,g,e,E,H,s,Y),Q?(G.Tools.EncodeScreenshotCanvasData(b,void 0,z,void 0,X),S&&S("")):G.Tools.EncodeScreenshotCanvasData(b,S,z,void 0,X)})):H(M,A,O,(M=>{if(Q){const A=new Blob([M]);G.Tools.DownloadBlob(A),S&&S("")}else S&&S(M)}),z,1,M.getCreationOptions().antialias,void 0,void 0,void 0,void 0,X)}async function Y(M,A,O){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",z=arguments.length>4?arguments[4]:void 0,Q=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((X,c)=>{s(M,A,O,(M=>{"undefined"!==typeof M?X(M):c(new Error("Data is undefined"))}),S,void 0,z,Q)}))}async function E(M,A,O,S){let z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Q=arguments.length>5?arguments[5]:void 0,X=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((c=>{s(M,A,{width:O,height:S},(()=>{c()}),z,!0,Q,X)}))}function H(M,A,Q,X){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",j=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,B=arguments.length>6&&void 0!==arguments[6]&&arguments[6],g=arguments.length>7?arguments[7]:void 0,e=arguments.length>8&&void 0!==arguments[8]&&arguments[8],T=arguments.length>9&&void 0!==arguments[9]&&arguments[9],G=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],b=arguments.length>11?arguments[11]:void 0,s=arguments.length>12?arguments[12]:void 0,Y=arguments.length>13?arguments[13]:void 0;const{height:E,width:H,finalWidth:C,finalHeight:D}=f(M,A,Q),F={width:H,height:E};if(!E||!H)return void K.c.Error("Invalid 'size' parameter !");M.skipFrameRender=!0;const N=M.getRenderWidth,y=M.getRenderHeight;M.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&M._currentRenderTarget?M._currentRenderTarget.width:H},M.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&M._currentRenderTarget?M._currentRenderTarget.height:E},M.onResizeObservable.hasObservers()&&M.onResizeObservable.notifyObservers(M);const h=A.HM(),u=new z.e("screenShot",F,h,!1,!1,0,!1,S.c.BILINEAR_SAMPLINGMODE,void 0,T,void 0,void 0,void 0,j);u.renderList=h.meshes.slice(),u.samples=j,u.renderSprites=e,u.activeCamera=A,u.forceLayerMaskCheck=G,null===s||void 0===s||s(u);const i=Y||d.DumpData,U=()=>{h.incrementRenderId(),h.resetCachedMaterial(),(0,I.c)((()=>u.isReadyForRendering()&&A.isReady(!0)),(()=>{M.onEndFrameObservable.addOnce((()=>{C===H&&D===E?u.readPixels(void 0,void 0,void 0,!1).then((M=>{i(H,E,M,X,c,g,!0,void 0,b),u.dispose()})):(M.isWebGPU?O.e(51).then(O.bind(O,15121)):O.e(52).then(O.bind(O,15129))).then((async()=>await(0,w.d)("pass",u.getInternalTexture(),h,void 0,void 0,void 0,C,D).then((A=>{M._readTexturePixels(A,C,D,-1,0,null,!0,!1,0,0).then((M=>{i(C,D,M,X,c,g,!0,void 0,b),A.dispose()}))}))))})),h.incrementRenderId(),h.resetCachedMaterial();const S=h.activeCamera,z=h.activeCameras,Q=A.outputRenderTarget,j=h.spritesEnabled;h.activeCamera=A,h.activeCameras=null,A.outputRenderTarget=u,h.spritesEnabled=e;const B=h.meshes;h.meshes=u.renderList||h.meshes;try{h.render()}finally{h.activeCamera=S,h.activeCameras=z,A.outputRenderTarget=Q,h.spritesEnabled=j,h.meshes=B,M.getRenderWidth=N,M.getRenderHeight=y,M.onResizeObservable.hasObservers()&&M.onResizeObservable.notifyObservers(M),A.getProjectionMatrix(!0),M.skipFrameRender=!1}}),(()=>{M.skipFrameRender=!1,M.getRenderWidth=N,M.getRenderHeight=y}))};if(B){const M=new J("antialiasing",1,h.activeCamera);u.addPostProcess(M),M.jc=!0,M.onEffectCreatedObservable.addOnce((M=>{M.isReady()?U():M.onCompiled=()=>{U()}}))}else U()}async function C(M,A,O){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,Q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],X=arguments.length>6?arguments[6]:void 0,c=arguments.length>7&&void 0!==arguments[7]&&arguments[7],j=arguments.length>8&&void 0!==arguments[8]&&arguments[8],B=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],g=arguments.length>10?arguments[10]:void 0,e=arguments.length>11?arguments[11]:void 0,T=arguments.length>12?arguments[12]:void 0;return await new Promise(((J,K)=>{H(M,A,O,(M=>{"undefined"!==typeof M?J(M):K(new Error("Data is undefined"))}),S,z,Q,X,c,j,B,g,e,T)}))}function f(M,A,O){let S=0,z=0,Q=0,X=0;if("object"===typeof O){const c=O.precision?Math.abs(O.precision):1;O.width&&O.height?(S=O.height*c,z=O.width*c):O.width&&!O.height?(z=O.width*c,S=Math.round(z/M.getAspectRatio(A))):O.height&&!O.width?(S=O.height*c,z=Math.round(S*M.getAspectRatio(A))):(z=Math.round(M.getRenderWidth()*c),S=Math.round(z/M.getAspectRatio(A))),O.finalWidth&&O.finalHeight?(X=O.finalHeight,Q=O.finalWidth):O.finalWidth&&!O.finalHeight?(Q=O.finalWidth,X=Math.round(Q/M.getAspectRatio(A))):O.finalHeight&&!O.finalWidth?(X=O.finalHeight,Q=Math.round(X*M.getAspectRatio(A))):(Q=z,X=S)}else isNaN(O)||(S=O,z=O,Q=O,X=O);return z&&(z=Math.floor(z)),S&&(S=Math.floor(S)),Q&&(Q=Math.floor(Q)),X&&(X=Math.floor(X)),{height:0|S,width:0|z,finalWidth:0|Q,finalHeight:0|X}}const D={CreateScreenshot:s,CreateScreenshotAsync:Y,CreateScreenshotWithResizeAsync:E,CreateScreenshotUsingRenderTarget:H,CreateScreenshotUsingRenderTargetAsync:C};G.Tools.CreateScreenshot=s,G.Tools.CreateScreenshotAsync=Y,G.Tools.CreateScreenshotUsingRenderTarget=H,G.Tools.CreateScreenshotUsingRenderTargetAsync=C}}]);