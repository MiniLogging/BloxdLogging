"use strict";(self.fyqbdzs5tyo=self.fyqbdzs5tyo||[]).push([[12,20],{11454:(V,I,A)=>{A.r(I),A.d(I,{Dispose:()=>J,DumpData:()=>P,DumpDataAsync:()=>X,DumpFramebuffer:()=>b,DumpTools:()=>G});var B=A(11330),F=A(11052),E=A(11249),Y=A(11097);let H,c=null;async function b(V,I,A,B){let F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",E=arguments.length>5?arguments[5]:void 0,Y=arguments.length>6?arguments[6]:void 0;const H=await A.readPixels(0,0,V,I);P(V,I,new Uint8Array(H.buffer),B,F,E,!0,void 0,Y)}async function X(V,I,A){let B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",F=arguments.length>4?arguments[4]:void 0,E=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],H=arguments.length>7?arguments[7]:void 0;return await new Promise((c=>{P(V,I,A,(V=>c(V)),B,F,E,Y,H)}))}function P(V,I,b,X){let P=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",G=arguments.length>5?arguments[5]:void 0,w=arguments.length>6&&void 0!==arguments[6]&&arguments[6],t=arguments.length>7&&void 0!==arguments[7]&&arguments[7],u=arguments.length>8?arguments[8]:void 0;(async function(){return c||(c=new Promise(((V,I)=>{let F,E=null;const c={o:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(A.bind(A,11363)).then((b=>{let{ThinEngine:X}=b;const P=Y.e.Instances.length;try{F=new OffscreenCanvas(100,100),E=new X(F,!1,c)}catch(t){var G;P<Y.e.Instances.length&&(null===(G=Y.e.Instances.pop())||void 0===G||G.dispose()),F=document.createElement("canvas"),E=new X(F,!1,c)}Y.e.Instances.pop(),Y.e.OnEnginesDisposedObservable.add((V=>{E&&V!==E&&!E.H&&0===Y.e.Instances.length&&J()})),E.getCaps().parallelShaderCompile=void 0;const w=new B.e(E);A.e(52).then(A.bind(A,13683)).then((A=>{let{passPixelShader:Y}=A;if(!E)return void I("Engine is not defined");const c=new B.f({wI:E,name:Y.name,fragmentShader:Y.shader,samplerNames:["textureSampler"]});H={canvas:F,wI:E,renderer:w,wrapper:c},V(H)}))})).catch(I)}))),await c})().then((A=>{if(A.wI.setSize(V,I,!0),b instanceof Float32Array){const V=new Uint8Array(b.length);let I=b.length;for(;I--;){const A=b[I];V[I]=Math.round(255*(0,E.Clamp)(A))}b=V}const B=A.wI.createRawTexture(b,V,I,5,!1,!w,1);A.renderer.setViewport(),A.renderer.applyEffectWrapper(A.wrapper),A.wrapper.effect._bindTexture("textureSampler",B),A.renderer.draw(),t?F.Tools.ToBlob(A.canvas,(V=>{const I=new FileReader;I.onload=V=>{const I=V.target.result;X&&X(I)},I.readAsArrayBuffer(V)}),P,u):F.Tools.EncodeScreenshotCanvasData(A.canvas,X,P,G,u),B.dispose()}))}function J(){var V;H?(H.wrapper.dispose(),H.renderer.dispose(),H.wI.dispose()):null===(V=c)||void 0===V||V.then((V=>{V.wrapper.dispose(),V.renderer.dispose(),V.wI.dispose()}));c=null,H=null}const G={DumpData:P,DumpDataAsync:X,DumpFramebuffer:b,Dispose:J};F.Tools.DumpData=P,F.Tools.DumpDataAsync=X,F.Tools.DumpFramebuffer=b},11203:(V,I,A)=>{A.r(I),A.d(I,{CreateScreenshot:()=>o,CreateScreenshotAsync:()=>L,CreateScreenshotUsingRenderTarget:()=>m,CreateScreenshotUsingRenderTargetAsync:()=>s,CreateScreenshotWithResizeAsync:()=>z,ScreenshotTools:()=>S});var B=A(11207),F=A(11285),E=A(11325),Y=A(11189),H=A(11265),c=A(11330),b=A(11359),X=A(11231);class P extends c.f{static _GetDefines(V){if(!V)return null;return V.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(V,I){V?(this._webGPUReady=!0,I.push(Promise.all([A.e(54).then(A.bind(A,13692)),A.e(55).then(A.bind(A,13701))]))):I.push(Promise.all([A.e(56).then(A.bind(A,13709)),A.e(57).then(A.bind(A,13714))]))}constructor(V){const I={...arguments.length>2?arguments[2]:void 0,name:V,wI:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||b.c.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:P.VertexUrl,fragmentShader:P.FragmentUrl,uniforms:P.Uniforms};super({...I,defines:P._GetDefines(I.wI)}),this.texelSize=new X.Vector2(0,0)}bind(){let V=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(V),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}P.VertexUrl="fxaa",P.FragmentUrl="fxaa",P.Uniforms=["texelSize"];class J extends E.d{getClassName(){return"FxaaPostProcess"}constructor(V,I){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,F=arguments.length>3?arguments[3]:void 0,E=arguments.length>4?arguments[4]:void 0,Y=arguments.length>5?arguments[5]:void 0,H=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const c={uniforms:P.Uniforms,size:"number"===typeof I?I:void 0,camera:A,samplingMode:F||B.e.BILINEAR_SAMPLINGMODE,wI:E,reusable:Y,textureType:H,...I};super(V,P.FragmentUrl,{effectWrapper:"number"!==typeof I&&I.effectWrapper?void 0:new P(V,E,c),...c}),this.onApplyObservable.add((V=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(V,I,A,B){return H.b.Parse((()=>new J(V.name,V.options,I,V.renderTargetSamplingMode,A.getEngine(),V.reusable)),V,A,B)}}(0,Y.e)("BABYLON.FxaaPostProcess",J);var G=A(11064),w=A(11052),t=A(11454),u=A(11461),W=A(11135);let g=null;function o(V,I,A,B){let F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",E=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6?arguments[6]:void 0,H=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:c,width:b}=e(V,I,A);if(!c||!b)return void G.b.Error("Invalid 'size' parameter !");I.sV().activeCamera===I?V.onEndFrameObservable.addOnce((()=>{g||(g=document.createElement("canvas")),g.width=b,g.height=c;const I=g.getContext("2d"),A=V.getRenderingCanvas();if(!I||!A)return void G.b.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const X=A.width,P=A.height,J=g.width,t=g.height,u=J/X,W=t/P,o=H?Math.max(u,W):Math.min(u,W),L=X*o,z=P*o,m=(J-L)/2,s=(t-z)/2;I.drawImage(A,0,0,X,P,m,s,L,z),E?(w.Tools.EncodeScreenshotCanvasData(g,void 0,F,void 0,Y),B&&B("")):w.Tools.EncodeScreenshotCanvasData(g,B,F,void 0,Y)})):m(V,I,A,(V=>{if(E){const I=new Blob([V]);w.Tools.DownloadBlob(I),B&&B("")}else B&&B(V)}),F,1,V.getCreationOptions().antialias,void 0,void 0,void 0,void 0,Y)}async function L(V,I,A){let B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",F=arguments.length>4?arguments[4]:void 0,E=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((Y,H)=>{o(V,I,A,(V=>{"undefined"!==typeof V?Y(V):H(new Error("Data is undefined"))}),B,void 0,F,E)}))}async function z(V,I,A,B){let F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",E=arguments.length>5?arguments[5]:void 0,Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((H=>{o(V,I,{width:A,height:B},(()=>{H()}),F,!0,E,Y)}))}function m(V,I,E,Y){let H=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,b=arguments.length>6&&void 0!==arguments[6]&&arguments[6],X=arguments.length>7?arguments[7]:void 0,P=arguments.length>8&&void 0!==arguments[8]&&arguments[8],w=arguments.length>9&&void 0!==arguments[9]&&arguments[9],g=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],o=arguments.length>11?arguments[11]:void 0,L=arguments.length>12?arguments[12]:void 0,z=arguments.length>13?arguments[13]:void 0;const{height:m,width:s,finalWidth:S,finalHeight:Q}=e(V,I,E),h={width:s,height:m};if(!m||!s)return void G.b.Error("Invalid 'size' parameter !");V.skipFrameRender=!0;const r=V.getRenderWidth,M=V.getRenderHeight;V.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&V._currentRenderTarget?V._currentRenderTarget.width:s},V.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&V._currentRenderTarget?V._currentRenderTarget.height:m},V.onResizeObservable.hasObservers()&&V.onResizeObservable.notifyObservers(V);const x=I.sV(),f=new F.b("screenShot",h,x,!1,!1,0,!1,B.e.BILINEAR_SAMPLINGMODE,void 0,w,void 0,void 0,void 0,c);f.renderList=x.meshes.slice(),f.samples=c,f.renderSprites=P,f.activeCamera=I,f.forceLayerMaskCheck=g,null===L||void 0===L||L(f);const R=z||t.DumpData,q=()=>{x.incrementRenderId(),x.resetCachedMaterial(),(0,W.e)((()=>f.isReadyForRendering()&&I.isReady(!0)),(()=>{V.onEndFrameObservable.addOnce((()=>{S===s&&Q===m?f.readPixels(void 0,void 0,void 0,!1).then((V=>{R(s,m,V,Y,H,X,!0,void 0,o),f.dispose()})):(V.isWebGPU?A.e(51).then(A.bind(A,13678)):A.e(52).then(A.bind(A,13683))).then((async()=>await(0,u.d)("pass",f.getInternalTexture(),x,void 0,void 0,void 0,S,Q).then((I=>{V._readTexturePixels(I,S,Q,-1,0,null,!0,!1,0,0).then((V=>{R(S,Q,V,Y,H,X,!0,void 0,o),I.dispose()}))}))))})),x.incrementRenderId(),x.resetCachedMaterial();const B=x.activeCamera,F=x.activeCameras,E=I.outputRenderTarget,c=x.spritesEnabled;x.activeCamera=I,x.activeCameras=null,I.outputRenderTarget=f,x.spritesEnabled=P;const b=x.meshes;x.meshes=f.renderList||x.meshes;try{x.render()}finally{x.activeCamera=B,x.activeCameras=F,I.outputRenderTarget=E,x.spritesEnabled=c,x.meshes=b,V.getRenderWidth=r,V.getRenderHeight=M,V.onResizeObservable.hasObservers()&&V.onResizeObservable.notifyObservers(V),I.getProjectionMatrix(!0),V.skipFrameRender=!1}}),(()=>{V.skipFrameRender=!1,V.getRenderWidth=r,V.getRenderHeight=M}))};if(b){const V=new J("antialiasing",1,x.activeCamera);f.addPostProcess(V),V.VH=!0,V.onEffectCreatedObservable.addOnce((V=>{V.isReady()?q():V.onCompiled=()=>{q()}}))}else q()}async function s(V,I,A){let B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,E=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6?arguments[6]:void 0,H=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8],b=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],X=arguments.length>10?arguments[10]:void 0,P=arguments.length>11?arguments[11]:void 0,J=arguments.length>12?arguments[12]:void 0;return await new Promise(((G,w)=>{m(V,I,A,(V=>{"undefined"!==typeof V?G(V):w(new Error("Data is undefined"))}),B,F,E,Y,H,c,b,X,P,J)}))}function e(V,I,A){let B=0,F=0,E=0,Y=0;if("object"===typeof A){const H=A.precision?Math.abs(A.precision):1;A.width&&A.height?(B=A.height*H,F=A.width*H):A.width&&!A.height?(F=A.width*H,B=Math.round(F/V.getAspectRatio(I))):A.height&&!A.width?(B=A.height*H,F=Math.round(B*V.getAspectRatio(I))):(F=Math.round(V.getRenderWidth()*H),B=Math.round(F/V.getAspectRatio(I))),A.finalWidth&&A.finalHeight?(Y=A.finalHeight,E=A.finalWidth):A.finalWidth&&!A.finalHeight?(E=A.finalWidth,Y=Math.round(E/V.getAspectRatio(I))):A.finalHeight&&!A.finalWidth?(Y=A.finalHeight,E=Math.round(Y*V.getAspectRatio(I))):(E=F,Y=B)}else isNaN(A)||(B=A,F=A,E=A,Y=A);return F&&(F=Math.floor(F)),B&&(B=Math.floor(B)),E&&(E=Math.floor(E)),Y&&(Y=Math.floor(Y)),{height:0|B,width:0|F,finalWidth:0|E,finalHeight:0|Y}}const S={CreateScreenshot:o,CreateScreenshotAsync:L,CreateScreenshotWithResizeAsync:z,CreateScreenshotUsingRenderTarget:m,CreateScreenshotUsingRenderTargetAsync:s};w.Tools.CreateScreenshot=o,w.Tools.CreateScreenshotAsync=L,w.Tools.CreateScreenshotUsingRenderTarget=m,w.Tools.CreateScreenshotUsingRenderTargetAsync=s}}]);