"use strict";(self["269hv5nclphh"]=self["269hv5nclphh"]||[]).push([[12,20],{12614:(E,H,d)=>{d.r(H),d.d(H,{Dispose:()=>V,DumpData:()=>M,DumpDataAsync:()=>S,DumpFramebuffer:()=>t,DumpTools:()=>C});var n=d(12509),Z=d(12228),I=d(12406),g=d(12268);let l,r=null;async function t(E,H,d,n){let Z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",I=arguments.length>5?arguments[5]:void 0,g=arguments.length>6?arguments[6]:void 0;const l=await d.readPixels(0,0,E,H);M(E,H,new Uint8Array(l.buffer),n,Z,I,!0,void 0,g)}async function S(E,H,d){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",Z=arguments.length>4?arguments[4]:void 0,I=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6&&void 0!==arguments[6]&&arguments[6],l=arguments.length>7?arguments[7]:void 0;return await new Promise((r=>{M(E,H,d,(E=>r(E)),n,Z,I,g,l)}))}function M(E,H,t,S){let M=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",C=arguments.length>5?arguments[5]:void 0,w=arguments.length>6&&void 0!==arguments[6]&&arguments[6],R=arguments.length>7&&void 0!==arguments[7]&&arguments[7],Q=arguments.length>8?arguments[8]:void 0;(async function(){return r||(r=new Promise(((E,H)=>{let Z,I=null;const r={Ud:!0,depth:!1,ed:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(d.bind(d,12524)).then((t=>{let{ThinEngine:S}=t;const M=g.b.Instances.length;try{Z=new OffscreenCanvas(100,100),I=new S(Z,!1,r)}catch(R){var C;M<g.b.Instances.length&&(null===(C=g.b.Instances.pop())||void 0===C||C.dispose()),Z=document.createElement("canvas"),I=new S(Z,!1,r)}g.b.Instances.pop(),g.b.OnEnginesDisposedObservable.add((E=>{I&&E!==I&&!I.M&&0===g.b.Instances.length&&V()})),I.getCaps().parallelShaderCompile=void 0;const w=new n.e(I);d.e(52).then(d.bind(d,14888)).then((d=>{let{passPixelShader:g}=d;if(!I)return void H("Engine is not defined");const r=new n.g({CH:I,name:g.name,fragmentShader:g.shader,samplerNames:["textureSampler"]});l={canvas:Z,CH:I,renderer:w,wrapper:r},E(l)}))})).catch(H)}))),await r})().then((d=>{if(d.CH.setSize(E,H,!0),t instanceof Float32Array){const E=new Uint8Array(t.length);let H=t.length;for(;H--;){const d=t[H];E[H]=Math.round(255*(0,I.Clamp)(d))}t=E}const n=d.CH.createRawTexture(t,E,H,5,!1,!w,1);d.renderer.setViewport(),d.renderer.applyEffectWrapper(d.wrapper),d.wrapper.effect._bindTexture("textureSampler",n),d.renderer.draw(),R?Z.Tools.ToBlob(d.canvas,(E=>{const H=new FileReader;H.onload=E=>{const H=E.target.result;S&&S(H)},H.readAsArrayBuffer(E)}),M,Q):Z.Tools.EncodeScreenshotCanvasData(d.canvas,S,M,C,Q),n.dispose()}))}function V(){var E;l?(l.wrapper.dispose(),l.renderer.dispose(),l.CH.dispose()):null===(E=r)||void 0===E||E.then((E=>{E.wrapper.dispose(),E.renderer.dispose(),E.CH.dispose()}));r=null,l=null}const C={DumpData:M,DumpDataAsync:S,DumpFramebuffer:t,Dispose:V};Z.Tools.DumpData=M,Z.Tools.DumpDataAsync=S,Z.Tools.DumpFramebuffer=t},12361:(E,H,d)=>{d.r(H),d.d(H,{CreateScreenshot:()=>e,CreateScreenshotAsync:()=>s,CreateScreenshotUsingRenderTarget:()=>p,CreateScreenshotUsingRenderTargetAsync:()=>f,CreateScreenshotWithResizeAsync:()=>i,ScreenshotTools:()=>j});var n=d(12366),Z=d(12452),I=d(12500),g=d(12344),l=d(12428),r=d(12509),t=d(12522),S=d(12384);class M extends r.g{static _GetDefines(E){if(!E)return null;return E.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(E,H){E?(this._webGPUReady=!0,H.push(Promise.all([d.e(54).then(d.bind(d,14901)),d.e(55).then(d.bind(d,14910))]))):H.push(Promise.all([d.e(56).then(d.bind(d,14916)),d.e(57).then(d.bind(d,14920))]))}constructor(E){const H={...arguments.length>2?arguments[2]:void 0,name:E,CH:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||t.b.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:M.VertexUrl,fragmentShader:M.FragmentUrl,uniforms:M.Uniforms};super({...H,defines:M._GetDefines(H.CH)}),this.texelSize=new S.Vector2(0,0)}bind(){let E=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(E),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}M.VertexUrl="fxaa",M.FragmentUrl="fxaa",M.Uniforms=["texelSize"];class V extends I.c{getClassName(){return"FxaaPostProcess"}constructor(E,H){let d=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,Z=arguments.length>3?arguments[3]:void 0,I=arguments.length>4?arguments[4]:void 0,g=arguments.length>5?arguments[5]:void 0,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const r={uniforms:M.Uniforms,size:"number"===typeof H?H:void 0,camera:d,samplingMode:Z||n.c.BILINEAR_SAMPLINGMODE,CH:I,reusable:g,textureType:l,...H};super(E,M.FragmentUrl,{effectWrapper:"number"!==typeof H&&H.effectWrapper?void 0:new M(E,I,r),...r}),this.onApplyObservable.add((E=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(E,H,d,n){return l.c.Parse((()=>new V(E.name,E.options,H,E.renderTargetSamplingMode,d.getEngine(),E.reusable)),E,d,n)}}(0,g.e)("BABYLON.FxaaPostProcess",V);var C=d(12237),w=d(12228),R=d(12614),Q=d(12622),L=d(12287);let D=null;function e(E,H,d,n){let Z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",I=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6?arguments[6]:void 0,l=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:r,width:t}=P(E,H,d);if(!r||!t)return void C.b.Error("Invalid 'size' parameter !");H.fE().activeCamera===H?E.onEndFrameObservable.addOnce((()=>{D||(D=document.createElement("canvas")),D.width=t,D.height=r;const H=D.getContext("2d"),d=E.getRenderingCanvas();if(!H||!d)return void C.b.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const S=d.width,M=d.height,V=D.width,R=D.height,Q=V/S,L=R/M,e=l?Math.max(Q,L):Math.min(Q,L),s=S*e,i=M*e,p=(V-s)/2,f=(R-i)/2;H.drawImage(d,0,0,S,M,p,f,s,i),I?(w.Tools.EncodeScreenshotCanvasData(D,void 0,Z,void 0,g),n&&n("")):w.Tools.EncodeScreenshotCanvasData(D,n,Z,void 0,g)})):p(E,H,d,(E=>{if(I){const H=new Blob([E]);w.Tools.DownloadBlob(H),n&&n("")}else n&&n(E)}),Z,1,E.getCreationOptions().antialias,void 0,void 0,void 0,void 0,g)}async function s(E,H,d){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",Z=arguments.length>4?arguments[4]:void 0,I=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((g,l)=>{e(E,H,d,(E=>{"undefined"!==typeof E?g(E):l(new Error("Data is undefined"))}),n,void 0,Z,I)}))}async function i(E,H,d,n){let Z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",I=arguments.length>5?arguments[5]:void 0,g=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((l=>{e(E,H,{width:d,height:n},(()=>{l()}),Z,!0,I,g)}))}function p(E,H,I,g){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,t=arguments.length>6&&void 0!==arguments[6]&&arguments[6],S=arguments.length>7?arguments[7]:void 0,M=arguments.length>8&&void 0!==arguments[8]&&arguments[8],w=arguments.length>9&&void 0!==arguments[9]&&arguments[9],D=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],e=arguments.length>11?arguments[11]:void 0,s=arguments.length>12?arguments[12]:void 0,i=arguments.length>13?arguments[13]:void 0;const{height:p,width:f,finalWidth:j,finalHeight:X}=P(E,H,I),W={width:f,height:p};if(!p||!f)return void C.b.Error("Invalid 'size' parameter !");E.skipFrameRender=!0;const U=E.getRenderWidth,Y=E.getRenderHeight;E.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&E._currentRenderTarget?E._currentRenderTarget.width:f},E.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&E._currentRenderTarget?E._currentRenderTarget.height:p},E.onResizeObservable.hasObservers()&&E.onResizeObservable.notifyObservers(E);const c=H.fE(),u=new Z.d("screenShot",W,c,!1,!1,0,!1,n.c.BILINEAR_SAMPLINGMODE,void 0,w,void 0,void 0,void 0,r);u.renderList=c.meshes.slice(),u.samples=r,u.renderSprites=M,u.activeCamera=H,u.forceLayerMaskCheck=D,null===s||void 0===s||s(u);const o=i||R.DumpData,F=()=>{c.incrementRenderId(),c.resetCachedMaterial(),(0,L.d)((()=>u.isReadyForRendering()&&H.isReady(!0)),(()=>{E.onEndFrameObservable.addOnce((()=>{j===f&&X===p?u.readPixels(void 0,void 0,void 0,!1).then((E=>{o(f,p,E,g,l,S,!0,void 0,e),u.dispose()})):(E.isWebGPU?d.e(51).then(d.bind(d,14880)):d.e(52).then(d.bind(d,14888))).then((async()=>await(0,Q.e)("pass",u.getInternalTexture(),c,void 0,void 0,void 0,j,X).then((H=>{E._readTexturePixels(H,j,X,-1,0,null,!0,!1,0,0).then((E=>{o(j,X,E,g,l,S,!0,void 0,e),H.dispose()}))}))))})),c.incrementRenderId(),c.resetCachedMaterial();const n=c.activeCamera,Z=c.activeCameras,I=H.outputRenderTarget,r=c.spritesEnabled;c.activeCamera=H,c.activeCameras=null,H.outputRenderTarget=u,c.spritesEnabled=M;const t=c.meshes;c.meshes=u.renderList||c.meshes;try{c.render()}finally{c.activeCamera=n,c.activeCameras=Z,H.outputRenderTarget=I,c.spritesEnabled=r,c.meshes=t,E.getRenderWidth=U,E.getRenderHeight=Y,E.onResizeObservable.hasObservers()&&E.onResizeObservable.notifyObservers(E),H.getProjectionMatrix(!0),E.skipFrameRender=!1}}),(()=>{E.skipFrameRender=!1,E.getRenderWidth=U,E.getRenderHeight=Y}))};if(t){const E=new V("antialiasing",1,c.activeCamera);u.addPostProcess(E),E.ud=!0,E.onEffectCreatedObservable.addOnce((E=>{E.isReady()?F():E.onCompiled=()=>{F()}}))}else F()}async function f(E,H,d){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",Z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,I=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6?arguments[6]:void 0,l=arguments.length>7&&void 0!==arguments[7]&&arguments[7],r=arguments.length>8&&void 0!==arguments[8]&&arguments[8],t=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],S=arguments.length>10?arguments[10]:void 0,M=arguments.length>11?arguments[11]:void 0,V=arguments.length>12?arguments[12]:void 0;return await new Promise(((C,w)=>{p(E,H,d,(E=>{"undefined"!==typeof E?C(E):w(new Error("Data is undefined"))}),n,Z,I,g,l,r,t,S,M,V)}))}function P(E,H,d){let n=0,Z=0,I=0,g=0;if("object"===typeof d){const l=d.precision?Math.abs(d.precision):1;d.width&&d.height?(n=d.height*l,Z=d.width*l):d.width&&!d.height?(Z=d.width*l,n=Math.round(Z/E.getAspectRatio(H))):d.height&&!d.width?(n=d.height*l,Z=Math.round(n*E.getAspectRatio(H))):(Z=Math.round(E.getRenderWidth()*l),n=Math.round(Z/E.getAspectRatio(H))),d.finalWidth&&d.finalHeight?(g=d.finalHeight,I=d.finalWidth):d.finalWidth&&!d.finalHeight?(I=d.finalWidth,g=Math.round(I/E.getAspectRatio(H))):d.finalHeight&&!d.finalWidth?(g=d.finalHeight,I=Math.round(g*E.getAspectRatio(H))):(I=Z,g=n)}else isNaN(d)||(n=d,Z=d,I=d,g=d);return Z&&(Z=Math.floor(Z)),n&&(n=Math.floor(n)),I&&(I=Math.floor(I)),g&&(g=Math.floor(g)),{height:0|n,width:0|Z,finalWidth:0|I,finalHeight:0|g}}const j={CreateScreenshot:e,CreateScreenshotAsync:s,CreateScreenshotWithResizeAsync:i,CreateScreenshotUsingRenderTarget:p,CreateScreenshotUsingRenderTargetAsync:f};w.Tools.CreateScreenshot=e,w.Tools.CreateScreenshotAsync=s,w.Tools.CreateScreenshotUsingRenderTarget=p,w.Tools.CreateScreenshotUsingRenderTargetAsync=f}}]);