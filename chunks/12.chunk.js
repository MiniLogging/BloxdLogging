"use strict";(self.xeuzlpp225k=self.xeuzlpp225k||[]).push([[12,20],{11522:(k,Q,i)=>{i.r(Q),i.d(Q,{Dispose:()=>H,DumpData:()=>G,DumpDataAsync:()=>J,DumpFramebuffer:()=>O,DumpTools:()=>e});var Z=i(11406),U=i(11119),C=i(11311),B=i(11157);let o,m=null;async function O(k,Q,i,Z){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",C=arguments.length>5?arguments[5]:void 0,B=arguments.length>6?arguments[6]:void 0;const o=await i.readPixels(0,0,k,Q);G(k,Q,new Uint8Array(o.buffer),Z,U,C,!0,void 0,B)}async function J(k,Q,i){let Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",U=arguments.length>4?arguments[4]:void 0,C=arguments.length>5&&void 0!==arguments[5]&&arguments[5],B=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7?arguments[7]:void 0;return await new Promise((m=>{G(k,Q,i,(k=>m(k)),Z,U,C,B,o)}))}function G(k,Q,O,J){let G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",e=arguments.length>5?arguments[5]:void 0,F=arguments.length>6&&void 0!==arguments[6]&&arguments[6],z=arguments.length>7&&void 0!==arguments[7]&&arguments[7],E=arguments.length>8?arguments[8]:void 0;(async function(){return m||(m=new Promise(((k,Q)=>{let U,C=null;const m={ko:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(i.bind(i,11434)).then((O=>{let{ThinEngine:J}=O;const G=B.b.Instances.length;try{U=new OffscreenCanvas(100,100),C=new J(U,!1,m)}catch(z){var e;G<B.b.Instances.length&&(null===(e=B.b.Instances.pop())||void 0===e||e.dispose()),U=document.createElement("canvas"),C=new J(U,!1,m)}B.b.Instances.pop(),B.b.OnEnginesDisposedObservable.add((k=>{C&&k!==C&&!C.J&&0===B.b.Instances.length&&H()})),C.getCaps().parallelShaderCompile=void 0;const F=new Z.d(C);i.e(52).then(i.bind(i,13852)).then((i=>{let{passPixelShader:B}=i;if(!C)return void Q("Engine is not defined");const m=new Z.g({FQ:C,name:B.name,fragmentShader:B.shader,samplerNames:["textureSampler"]});o={canvas:U,FQ:C,renderer:F,wrapper:m},k(o)}))})).catch(Q)}))),await m})().then((i=>{if(i.FQ.setSize(k,Q,!0),O instanceof Float32Array){const k=new Uint8Array(O.length);let Q=O.length;for(;Q--;){const i=O[Q];k[Q]=Math.round(255*(0,C.Clamp)(i))}O=k}const Z=i.FQ.createRawTexture(O,k,Q,5,!1,!F,1);i.renderer.setViewport(),i.renderer.applyEffectWrapper(i.wrapper),i.wrapper.effect._bindTexture("textureSampler",Z),i.renderer.draw(),z?U.Tools.ToBlob(i.canvas,(k=>{const Q=new FileReader;Q.onload=k=>{const Q=k.target.result;J&&J(Q)},Q.readAsArrayBuffer(k)}),G,E):U.Tools.EncodeScreenshotCanvasData(i.canvas,J,G,e,E),Z.dispose()}))}function H(){var k;o?(o.wrapper.dispose(),o.renderer.dispose(),o.FQ.dispose()):null===(k=m)||void 0===k||k.then((k=>{k.wrapper.dispose(),k.renderer.dispose(),k.FQ.dispose()}));m=null,o=null}const e={DumpData:G,DumpDataAsync:J,DumpFramebuffer:O,Dispose:H};U.Tools.DumpData=G,U.Tools.DumpDataAsync=J,U.Tools.DumpFramebuffer=O},11264:(k,Q,i)=>{i.r(Q),i.d(Q,{CreateScreenshot:()=>c,CreateScreenshotAsync:()=>f,CreateScreenshotUsingRenderTarget:()=>y,CreateScreenshotUsingRenderTargetAsync:()=>L,CreateScreenshotWithResizeAsync:()=>Y,ScreenshotTools:()=>u});var Z=i(11273),U=i(11370),C=i(11400),B=i(11253),o=i(11334),m=i(11406),O=i(11428),J=i(11298);class G extends m.g{static _GetDefines(k){if(!k)return null;return k.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(k,Q){k?(this._webGPUReady=!0,Q.push(Promise.all([i.e(54).then(i.bind(i,13866)),i.e(55).then(i.bind(i,13870))]))):Q.push(Promise.all([i.e(56).then(i.bind(i,13872)),i.e(57).then(i.bind(i,13875))]))}constructor(k){const Q={...arguments.length>2?arguments[2]:void 0,name:k,FQ:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||O.b.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:G.VertexUrl,fragmentShader:G.FragmentUrl,uniforms:G.Uniforms};super({...Q,defines:G._GetDefines(Q.FQ)}),this.texelSize=new J.Vector2(0,0)}bind(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(k),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}G.VertexUrl="fxaa",G.FragmentUrl="fxaa",G.Uniforms=["texelSize"];class H extends C.c{getClassName(){return"FxaaPostProcess"}constructor(k,Q){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,U=arguments.length>3?arguments[3]:void 0,C=arguments.length>4?arguments[4]:void 0,B=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const m={uniforms:G.Uniforms,size:"number"===typeof Q?Q:void 0,camera:i,samplingMode:U||Z.c.BILINEAR_SAMPLINGMODE,FQ:C,reusable:B,textureType:o,...Q};super(k,G.FragmentUrl,{effectWrapper:"number"!==typeof Q&&Q.effectWrapper?void 0:new G(k,C,m),...m}),this.onApplyObservable.add((k=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(k,Q,i,Z){return o.d.Parse((()=>new H(k.name,k.options,Q,k.renderTargetSamplingMode,i.getEngine(),k.reusable)),k,i,Z)}}(0,B.e)("BABYLON.FxaaPostProcess",H);var e=i(11134),F=i(11119),z=i(11522),E=i(11529),l=i(11189);let h=null;function c(k,Q,i,Z){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",C=arguments.length>5&&void 0!==arguments[5]&&arguments[5],B=arguments.length>6?arguments[6]:void 0,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:m,width:O}=s(k,Q,i);if(!m||!O)return void e.c.Error("Invalid 'size' parameter !");Q.sk().activeCamera===Q?k.onEndFrameObservable.addOnce((()=>{h||(h=document.createElement("canvas")),h.width=O,h.height=m;const Q=h.getContext("2d"),i=k.getRenderingCanvas();if(!Q||!i)return void e.c.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const J=i.width,G=i.height,H=h.width,z=h.height,E=H/J,l=z/G,c=o?Math.max(E,l):Math.min(E,l),f=J*c,Y=G*c,y=(H-f)/2,L=(z-Y)/2;Q.drawImage(i,0,0,J,G,y,L,f,Y),C?(F.Tools.EncodeScreenshotCanvasData(h,void 0,U,void 0,B),Z&&Z("")):F.Tools.EncodeScreenshotCanvasData(h,Z,U,void 0,B)})):y(k,Q,i,(k=>{if(C){const Q=new Blob([k]);F.Tools.DownloadBlob(Q),Z&&Z("")}else Z&&Z(k)}),U,1,k.getCreationOptions().antialias,void 0,void 0,void 0,void 0,B)}async function f(k,Q,i){let Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",U=arguments.length>4?arguments[4]:void 0,C=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((B,o)=>{c(k,Q,i,(k=>{"undefined"!==typeof k?B(k):o(new Error("Data is undefined"))}),Z,void 0,U,C)}))}async function Y(k,Q,i,Z){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",C=arguments.length>5?arguments[5]:void 0,B=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((o=>{c(k,Q,{width:i,height:Z},(()=>{o()}),U,!0,C,B)}))}function y(k,Q,C,B){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",m=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,O=arguments.length>6&&void 0!==arguments[6]&&arguments[6],J=arguments.length>7?arguments[7]:void 0,G=arguments.length>8&&void 0!==arguments[8]&&arguments[8],F=arguments.length>9&&void 0!==arguments[9]&&arguments[9],h=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],c=arguments.length>11?arguments[11]:void 0,f=arguments.length>12?arguments[12]:void 0,Y=arguments.length>13?arguments[13]:void 0;const{height:y,width:L,finalWidth:u,finalHeight:a}=s(k,Q,C),j={width:L,height:y};if(!y||!L)return void e.c.Error("Invalid 'size' parameter !");k.skipFrameRender=!0;const T=k.getRenderWidth,K=k.getRenderHeight;k.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&k._currentRenderTarget?k._currentRenderTarget.width:L},k.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&k._currentRenderTarget?k._currentRenderTarget.height:y},k.onResizeObservable.hasObservers()&&k.onResizeObservable.notifyObservers(k);const v=Q.sk(),N=new U.b("screenShot",j,v,!1,!1,0,!1,Z.c.BILINEAR_SAMPLINGMODE,void 0,F,void 0,void 0,void 0,m);N.renderList=v.meshes.slice(),N.samples=m,N.renderSprites=G,N.activeCamera=Q,N.forceLayerMaskCheck=h,null===f||void 0===f||f(N);const X=Y||z.DumpData,p=()=>{v.incrementRenderId(),v.resetCachedMaterial(),(0,l.f)((()=>N.isReadyForRendering()&&Q.isReady(!0)),(()=>{k.onEndFrameObservable.addOnce((()=>{u===L&&a===y?N.readPixels(void 0,void 0,void 0,!1).then((k=>{X(L,y,k,B,o,J,!0,void 0,c),N.dispose()})):(k.isWebGPU?i.e(51).then(i.bind(i,13845)):i.e(52).then(i.bind(i,13852))).then((async()=>await(0,E.d)("pass",N.getInternalTexture(),v,void 0,void 0,void 0,u,a).then((Q=>{k._readTexturePixels(Q,u,a,-1,0,null,!0,!1,0,0).then((k=>{X(u,a,k,B,o,J,!0,void 0,c),Q.dispose()}))}))))})),v.incrementRenderId(),v.resetCachedMaterial();const Z=v.activeCamera,U=v.activeCameras,C=Q.outputRenderTarget,m=v.spritesEnabled;v.activeCamera=Q,v.activeCameras=null,Q.outputRenderTarget=N,v.spritesEnabled=G;const O=v.meshes;v.meshes=N.renderList||v.meshes;try{v.render()}finally{v.activeCamera=Z,v.activeCameras=U,Q.outputRenderTarget=C,v.spritesEnabled=m,v.meshes=O,k.getRenderWidth=T,k.getRenderHeight=K,k.onResizeObservable.hasObservers()&&k.onResizeObservable.notifyObservers(k),Q.getProjectionMatrix(!0),k.skipFrameRender=!1}}),(()=>{k.skipFrameRender=!1,k.getRenderWidth=T,k.getRenderHeight=K}))};if(O){const k=new H("antialiasing",1,v.activeCamera);N.addPostProcess(k),k.Qo=!0,k.onEffectCreatedObservable.addOnce((k=>{k.isReady()?p():k.onCompiled=()=>{p()}}))}else p()}async function L(k,Q,i){let Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,C=arguments.length>5&&void 0!==arguments[5]&&arguments[5],B=arguments.length>6?arguments[6]:void 0,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],m=arguments.length>8&&void 0!==arguments[8]&&arguments[8],O=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],J=arguments.length>10?arguments[10]:void 0,G=arguments.length>11?arguments[11]:void 0,H=arguments.length>12?arguments[12]:void 0;return await new Promise(((e,F)=>{y(k,Q,i,(k=>{"undefined"!==typeof k?e(k):F(new Error("Data is undefined"))}),Z,U,C,B,o,m,O,J,G,H)}))}function s(k,Q,i){let Z=0,U=0,C=0,B=0;if("object"===typeof i){const o=i.precision?Math.abs(i.precision):1;i.width&&i.height?(Z=i.height*o,U=i.width*o):i.width&&!i.height?(U=i.width*o,Z=Math.round(U/k.getAspectRatio(Q))):i.height&&!i.width?(Z=i.height*o,U=Math.round(Z*k.getAspectRatio(Q))):(U=Math.round(k.getRenderWidth()*o),Z=Math.round(U/k.getAspectRatio(Q))),i.finalWidth&&i.finalHeight?(B=i.finalHeight,C=i.finalWidth):i.finalWidth&&!i.finalHeight?(C=i.finalWidth,B=Math.round(C/k.getAspectRatio(Q))):i.finalHeight&&!i.finalWidth?(B=i.finalHeight,C=Math.round(B*k.getAspectRatio(Q))):(C=U,B=Z)}else isNaN(i)||(Z=i,U=i,C=i,B=i);return U&&(U=Math.floor(U)),Z&&(Z=Math.floor(Z)),C&&(C=Math.floor(C)),B&&(B=Math.floor(B)),{height:0|Z,width:0|U,finalWidth:0|C,finalHeight:0|B}}const u={CreateScreenshot:c,CreateScreenshotAsync:f,CreateScreenshotWithResizeAsync:Y,CreateScreenshotUsingRenderTarget:y,CreateScreenshotUsingRenderTargetAsync:L};F.Tools.CreateScreenshot=c,F.Tools.CreateScreenshotAsync=f,F.Tools.CreateScreenshotUsingRenderTarget=y,F.Tools.CreateScreenshotUsingRenderTargetAsync=L}}]);