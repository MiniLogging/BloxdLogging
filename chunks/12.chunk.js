"use strict";(self.bbj0x35f849=self.bbj0x35f849||[]).push([[12,20],{11354:(N,q,C)=>{C.r(q),C.d(q,{Dispose:()=>V,DumpData:()=>t,DumpDataAsync:()=>n,DumpFramebuffer:()=>A,DumpTools:()=>Z});var d=C(11234),U=C(10945),W=C(11142),a=C(10995);let F,w=null;async function A(N,q,C,d){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",W=arguments.length>5?arguments[5]:void 0,a=arguments.length>6?arguments[6]:void 0;const F=await C.readPixels(0,0,N,q);t(N,q,new Uint8Array(F.buffer),d,U,W,!0,void 0,a)}async function n(N,q,C){let d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",U=arguments.length>4?arguments[4]:void 0,W=arguments.length>5&&void 0!==arguments[5]&&arguments[5],a=arguments.length>6&&void 0!==arguments[6]&&arguments[6],F=arguments.length>7?arguments[7]:void 0;return await new Promise((w=>{t(N,q,C,(N=>w(N)),d,U,W,a,F)}))}function t(N,q,A,n){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Z=arguments.length>5?arguments[5]:void 0,J=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Q=arguments.length>7&&void 0!==arguments[7]&&arguments[7],v=arguments.length>8?arguments[8]:void 0;(async function(){return w||(w=new Promise(((N,q)=>{let U,W=null;const w={o:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(C.bind(C,11266)).then((A=>{let{ThinEngine:n}=A;const t=a.e.Instances.length;try{U=new OffscreenCanvas(100,100),W=new n(U,!1,w)}catch(Q){var Z;t<a.e.Instances.length&&(null===(Z=a.e.Instances.pop())||void 0===Z||Z.dispose()),U=document.createElement("canvas"),W=new n(U,!1,w)}a.e.Instances.pop(),a.e.OnEnginesDisposedObservable.add((N=>{W&&N!==W&&!W.A&&0===a.e.Instances.length&&V()})),W.getCaps().parallelShaderCompile=void 0;const J=new d.c(W);C.e(52).then(C.bind(C,13585)).then((C=>{let{passPixelShader:a}=C;if(!W)return void q("Engine is not defined");const w=new d.d({Zq:W,name:a.name,fragmentShader:a.shader,samplerNames:["textureSampler"]});F={canvas:U,Zq:W,renderer:J,wrapper:w},N(F)}))})).catch(q)}))),await w})().then((C=>{if(C.Zq.setSize(N,q,!0),A instanceof Float32Array){const N=new Uint8Array(A.length);let q=A.length;for(;q--;){const C=A[q];N[q]=Math.round(255*(0,W.Clamp)(C))}A=N}const d=C.Zq.createRawTexture(A,N,q,5,!1,!J,1);C.renderer.setViewport(),C.renderer.applyEffectWrapper(C.wrapper),C.wrapper.effect._bindTexture("textureSampler",d),C.renderer.draw(),Q?U.Tools.ToBlob(C.canvas,(N=>{const q=new FileReader;q.onload=N=>{const q=N.target.result;n&&n(q)},q.readAsArrayBuffer(N)}),t,v):U.Tools.EncodeScreenshotCanvasData(C.canvas,n,t,Z,v),d.dispose()}))}function V(){var N;F?(F.wrapper.dispose(),F.renderer.dispose(),F.Zq.dispose()):null===(N=w)||void 0===N||N.then((N=>{N.wrapper.dispose(),N.renderer.dispose(),N.Zq.dispose()}));w=null,F=null}const Z={DumpData:t,DumpDataAsync:n,DumpFramebuffer:A,Dispose:V};U.Tools.DumpData=t,U.Tools.DumpDataAsync=n,U.Tools.DumpFramebuffer=A},11099:(N,q,C)=>{C.r(q),C.d(q,{CreateScreenshot:()=>K,CreateScreenshotAsync:()=>i,CreateScreenshotUsingRenderTarget:()=>j,CreateScreenshotUsingRenderTargetAsync:()=>l,CreateScreenshotWithResizeAsync:()=>I,ScreenshotTools:()=>z});var d=C(11101),U=C(11183),W=C(11228),a=C(11076),F=C(11155),w=C(11234),A=C(11259),n=C(11122);class t extends w.d{static _GetDefines(N){if(!N)return null;return N.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(N,q){N?(this._webGPUReady=!0,q.push(Promise.all([C.e(54).then(C.bind(C,13594)),C.e(55).then(C.bind(C,13599))]))):q.push(Promise.all([C.e(56).then(C.bind(C,13607)),C.e(57).then(C.bind(C,13614))]))}constructor(N){const q={...arguments.length>2?arguments[2]:void 0,name:N,Zq:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||A.e.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:t.VertexUrl,fragmentShader:t.FragmentUrl,uniforms:t.Uniforms};super({...q,defines:t._GetDefines(q.Zq)}),this.texelSize=new n.Vector2(0,0)}bind(){let N=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(N),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}t.VertexUrl="fxaa",t.FragmentUrl="fxaa",t.Uniforms=["texelSize"];class V extends W.b{getClassName(){return"FxaaPostProcess"}constructor(N,q){let C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,U=arguments.length>3?arguments[3]:void 0,W=arguments.length>4?arguments[4]:void 0,a=arguments.length>5?arguments[5]:void 0,F=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const w={uniforms:t.Uniforms,size:"number"===typeof q?q:void 0,camera:C,samplingMode:U||d.c.BILINEAR_SAMPLINGMODE,Zq:W,reusable:a,textureType:F,...q};super(N,t.FragmentUrl,{effectWrapper:"number"!==typeof q&&q.effectWrapper?void 0:new t(N,W,w),...w}),this.onApplyObservable.add((N=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(N,q,C,d){return F.d.Parse((()=>new V(N.name,N.options,q,N.renderTargetSamplingMode,C.getEngine(),N.reusable)),N,C,d)}}(0,a.h)("BABYLON.FxaaPostProcess",V);var Z=C(10962),J=C(10945),Q=C(11354),v=C(11356),r=C(11029);let O=null;function K(N,q,C,d){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",W=arguments.length>5&&void 0!==arguments[5]&&arguments[5],a=arguments.length>6?arguments[6]:void 0,F=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:w,width:A}=T(N,q,C);if(!w||!A)return void Z.c.Error("Invalid 'size' parameter !");q.lN().activeCamera===q?N.onEndFrameObservable.addOnce((()=>{O||(O=document.createElement("canvas")),O.width=A,O.height=w;const q=O.getContext("2d"),C=N.getRenderingCanvas();if(!q||!C)return void Z.c.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const n=C.width,t=C.height,V=O.width,Q=O.height,v=V/n,r=Q/t,K=F?Math.max(v,r):Math.min(v,r),i=n*K,I=t*K,j=(V-i)/2,l=(Q-I)/2;q.drawImage(C,0,0,n,t,j,l,i,I),W?(J.Tools.EncodeScreenshotCanvasData(O,void 0,U,void 0,a),d&&d("")):J.Tools.EncodeScreenshotCanvasData(O,d,U,void 0,a)})):j(N,q,C,(N=>{if(W){const q=new Blob([N]);J.Tools.DownloadBlob(q),d&&d("")}else d&&d(N)}),U,1,N.getCreationOptions().antialias,void 0,void 0,void 0,void 0,a)}async function i(N,q,C){let d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",U=arguments.length>4?arguments[4]:void 0,W=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((a,F)=>{K(N,q,C,(N=>{"undefined"!==typeof N?a(N):F(new Error("Data is undefined"))}),d,void 0,U,W)}))}async function I(N,q,C,d){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",W=arguments.length>5?arguments[5]:void 0,a=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((F=>{K(N,q,{width:C,height:d},(()=>{F()}),U,!0,W,a)}))}function j(N,q,W,a){let F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",w=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,A=arguments.length>6&&void 0!==arguments[6]&&arguments[6],n=arguments.length>7?arguments[7]:void 0,t=arguments.length>8&&void 0!==arguments[8]&&arguments[8],J=arguments.length>9&&void 0!==arguments[9]&&arguments[9],O=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],K=arguments.length>11?arguments[11]:void 0,i=arguments.length>12?arguments[12]:void 0,I=arguments.length>13?arguments[13]:void 0;const{height:j,width:l,finalWidth:z,finalHeight:p}=T(N,q,W),s={width:l,height:j};if(!j||!l)return void Z.c.Error("Invalid 'size' parameter !");N.skipFrameRender=!0;const X=N.getRenderWidth,P=N.getRenderHeight;N.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&N._currentRenderTarget?N._currentRenderTarget.width:l},N.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&N._currentRenderTarget?N._currentRenderTarget.height:j},N.onResizeObservable.hasObservers()&&N.onResizeObservable.notifyObservers(N);const M=q.lN(),Y=new U.b("screenShot",s,M,!1,!1,0,!1,d.c.BILINEAR_SAMPLINGMODE,void 0,J,void 0,void 0,void 0,w);Y.renderList=M.meshes.slice(),Y.samples=w,Y.renderSprites=t,Y.activeCamera=q,Y.forceLayerMaskCheck=O,null===i||void 0===i||i(Y);const E=I||Q.DumpData,H=()=>{M.incrementRenderId(),M.resetCachedMaterial(),(0,r.f)((()=>Y.isReadyForRendering()&&q.isReady(!0)),(()=>{N.onEndFrameObservable.addOnce((()=>{z===l&&p===j?Y.readPixels(void 0,void 0,void 0,!1).then((N=>{E(l,j,N,a,F,n,!0,void 0,K),Y.dispose()})):(N.isWebGPU?C.e(51).then(C.bind(C,13576)):C.e(52).then(C.bind(C,13585))).then((async()=>await(0,v.b)("pass",Y.getInternalTexture(),M,void 0,void 0,void 0,z,p).then((q=>{N._readTexturePixels(q,z,p,-1,0,null,!0,!1,0,0).then((N=>{E(z,p,N,a,F,n,!0,void 0,K),q.dispose()}))}))))})),M.incrementRenderId(),M.resetCachedMaterial();const d=M.activeCamera,U=M.activeCameras,W=q.outputRenderTarget,w=M.spritesEnabled;M.activeCamera=q,M.activeCameras=null,q.outputRenderTarget=Y,M.spritesEnabled=t;const A=M.meshes;M.meshes=Y.renderList||M.meshes;try{M.render()}finally{M.activeCamera=d,M.activeCameras=U,q.outputRenderTarget=W,M.spritesEnabled=w,M.meshes=A,N.getRenderWidth=X,N.getRenderHeight=P,N.onResizeObservable.hasObservers()&&N.onResizeObservable.notifyObservers(N),q.getProjectionMatrix(!0),N.skipFrameRender=!1}}),(()=>{N.skipFrameRender=!1,N.getRenderWidth=X,N.getRenderHeight=P}))};if(A){const N=new V("antialiasing",1,M.activeCamera);Y.addPostProcess(N),N.Od=!0,N.onEffectCreatedObservable.addOnce((N=>{N.isReady()?H():N.onCompiled=()=>{H()}}))}else H()}async function l(N,q,C){let d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,W=arguments.length>5&&void 0!==arguments[5]&&arguments[5],a=arguments.length>6?arguments[6]:void 0,F=arguments.length>7&&void 0!==arguments[7]&&arguments[7],w=arguments.length>8&&void 0!==arguments[8]&&arguments[8],A=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],n=arguments.length>10?arguments[10]:void 0,t=arguments.length>11?arguments[11]:void 0,V=arguments.length>12?arguments[12]:void 0;return await new Promise(((Z,J)=>{j(N,q,C,(N=>{"undefined"!==typeof N?Z(N):J(new Error("Data is undefined"))}),d,U,W,a,F,w,A,n,t,V)}))}function T(N,q,C){let d=0,U=0,W=0,a=0;if("object"===typeof C){const F=C.precision?Math.abs(C.precision):1;C.width&&C.height?(d=C.height*F,U=C.width*F):C.width&&!C.height?(U=C.width*F,d=Math.round(U/N.getAspectRatio(q))):C.height&&!C.width?(d=C.height*F,U=Math.round(d*N.getAspectRatio(q))):(U=Math.round(N.getRenderWidth()*F),d=Math.round(U/N.getAspectRatio(q))),C.finalWidth&&C.finalHeight?(a=C.finalHeight,W=C.finalWidth):C.finalWidth&&!C.finalHeight?(W=C.finalWidth,a=Math.round(W/N.getAspectRatio(q))):C.finalHeight&&!C.finalWidth?(a=C.finalHeight,W=Math.round(a*N.getAspectRatio(q))):(W=U,a=d)}else isNaN(C)||(d=C,U=C,W=C,a=C);return U&&(U=Math.floor(U)),d&&(d=Math.floor(d)),W&&(W=Math.floor(W)),a&&(a=Math.floor(a)),{height:0|d,width:0|U,finalWidth:0|W,finalHeight:0|a}}const z={CreateScreenshot:K,CreateScreenshotAsync:i,CreateScreenshotWithResizeAsync:I,CreateScreenshotUsingRenderTarget:j,CreateScreenshotUsingRenderTargetAsync:l};J.Tools.CreateScreenshot=K,J.Tools.CreateScreenshotAsync=i,J.Tools.CreateScreenshotUsingRenderTarget=j,J.Tools.CreateScreenshotUsingRenderTargetAsync=l}}]);