"use strict";(self["9d4d30r2sf"]=self["9d4d30r2sf"]||[]).push([[12,20],{12728:(o,v,V)=>{V.r(v),V.d(v,{Dispose:()=>f,DumpData:()=>x,DumpDataAsync:()=>h,DumpFramebuffer:()=>O,DumpTools:()=>l});var g=V(12604),E=V(12291),I=V(12511),Q=V(12339);let U,n=null;async function O(o,v,V,g){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",I=arguments.length>5?arguments[5]:void 0,Q=arguments.length>6?arguments[6]:void 0;const U=await V.readPixels(0,0,o,v);x(o,v,new Uint8Array(U.buffer),g,E,I,!0,void 0,Q)}async function h(o,v,V){let g=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",E=arguments.length>4?arguments[4]:void 0,I=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Q=arguments.length>6&&void 0!==arguments[6]&&arguments[6],U=arguments.length>7?arguments[7]:void 0;return await new Promise((n=>{x(o,v,V,(o=>n(o)),g,E,I,Q,U)}))}function x(o,v,O,h){let x=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",l=arguments.length>5?arguments[5]:void 0,S=arguments.length>6&&void 0!==arguments[6]&&arguments[6],T=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8?arguments[8]:void 0;(async function(){return n||(n=new Promise(((o,v)=>{let E,I=null;const n={o:!0,depth:!1,Rg:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(V.bind(V,12628)).then((O=>{let{ThinEngine:h}=O;const x=Q.d.Instances.length;try{E=new OffscreenCanvas(100,100),I=new h(E,!1,n)}catch(T){var l;x<Q.d.Instances.length&&(null===(l=Q.d.Instances.pop())||void 0===l||l.dispose()),E=document.createElement("canvas"),I=new h(E,!1,n)}Q.d.Instances.pop(),Q.d.OnEnginesDisposedObservable.add((o=>{I&&o!==I&&!I.l&&0===Q.d.Instances.length&&f()})),I.getCaps().parallelShaderCompile=void 0;const S=new g.b(I);V.e(52).then(V.bind(V,15012)).then((V=>{let{passPixelShader:Q}=V;if(!I)return void v("Engine is not defined");const n=new g.e({Tv:I,name:Q.name,fragmentShader:Q.shader,samplerNames:["textureSampler"]});U={canvas:E,Tv:I,renderer:S,wrapper:n},o(U)}))})).catch(v)}))),await n})().then((V=>{if(V.Tv.setSize(o,v,!0),O instanceof Float32Array){const o=new Uint8Array(O.length);let v=O.length;for(;v--;){const V=O[v];o[v]=Math.round(255*(0,I.Clamp)(V))}O=o}const g=V.Tv.createRawTexture(O,o,v,5,!1,!S,1);V.renderer.setViewport(),V.renderer.applyEffectWrapper(V.wrapper),V.wrapper.effect._bindTexture("textureSampler",g),V.renderer.draw(),T?E.Tools.ToBlob(V.canvas,(o=>{const v=new FileReader;v.onload=o=>{const v=o.target.result;h&&h(v)},v.readAsArrayBuffer(o)}),x,c):E.Tools.EncodeScreenshotCanvasData(V.canvas,h,x,l,c),g.dispose()}))}function f(){var o;U?(U.wrapper.dispose(),U.renderer.dispose(),U.Tv.dispose()):null===(o=n)||void 0===o||o.then((o=>{o.wrapper.dispose(),o.renderer.dispose(),o.Tv.dispose()}));n=null,U=null}const l={DumpData:x,DumpDataAsync:h,DumpFramebuffer:O,Dispose:f};E.Tools.DumpData=x,E.Tools.DumpDataAsync=h,E.Tools.DumpFramebuffer=O},12462:(o,v,V)=>{V.r(v),V.d(v,{CreateScreenshot:()=>t,CreateScreenshotAsync:()=>s,CreateScreenshotUsingRenderTarget:()=>b,CreateScreenshotUsingRenderTargetAsync:()=>u,CreateScreenshotWithResizeAsync:()=>L,ScreenshotTools:()=>a});var g=V(12471),E=V(12566),I=V(12597),Q=V(12449),U=V(12535),n=V(12604),O=V(12623),h=V(12488);class x extends n.e{static _GetDefines(o){if(!o)return null;return o.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(o,v){o?(this._webGPUReady=!0,v.push(Promise.all([V.e(54).then(V.bind(V,15020)),V.e(55).then(V.bind(V,15026))]))):v.push(Promise.all([V.e(56).then(V.bind(V,15035)),V.e(57).then(V.bind(V,15043))]))}constructor(o){const v={...arguments.length>2?arguments[2]:void 0,name:o,Tv:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||O.c.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:x.VertexUrl,fragmentShader:x.FragmentUrl,uniforms:x.Uniforms};super({...v,defines:x._GetDefines(v.Tv)}),this.texelSize=new h.Vector2(0,0)}bind(){let o=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(o),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}x.VertexUrl="fxaa",x.FragmentUrl="fxaa",x.Uniforms=["texelSize"];class f extends I.b{getClassName(){return"FxaaPostProcess"}constructor(o,v){let V=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,E=arguments.length>3?arguments[3]:void 0,I=arguments.length>4?arguments[4]:void 0,Q=arguments.length>5?arguments[5]:void 0,U=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const n={uniforms:x.Uniforms,size:"number"===typeof v?v:void 0,camera:V,samplingMode:E||g.e.BILINEAR_SAMPLINGMODE,Tv:I,reusable:Q,textureType:U,...v};super(o,x.FragmentUrl,{effectWrapper:"number"!==typeof v&&v.effectWrapper?void 0:new x(o,I,n),...n}),this.onApplyObservable.add((o=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(o,v,V,g){return U.c.Parse((()=>new f(o.name,o.options,v,o.renderTargetSamplingMode,V.getEngine(),o.reusable)),o,V,g)}}(0,Q.h)("BABYLON.FxaaPostProcess",f);var l=V(12308),S=V(12291),T=V(12728),c=V(12737),R=V(12374);let j=null;function t(o,v,V,g){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",I=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Q=arguments.length>6?arguments[6]:void 0,U=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:n,width:O}=mo(o,v,V);if(!n||!O)return void l.b.Error("Invalid 'size' parameter !");v.Fo().activeCamera===v?o.onEndFrameObservable.addOnce((()=>{j||(j=document.createElement("canvas")),j.width=O,j.height=n;const v=j.getContext("2d"),V=o.getRenderingCanvas();if(!v||!V)return void l.b.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const h=V.width,x=V.height,f=j.width,T=j.height,c=f/h,R=T/x,t=U?Math.max(c,R):Math.min(c,R),s=h*t,L=x*t,b=(f-s)/2,u=(T-L)/2;v.drawImage(V,0,0,h,x,b,u,s,L),I?(S.Tools.EncodeScreenshotCanvasData(j,void 0,E,void 0,Q),g&&g("")):S.Tools.EncodeScreenshotCanvasData(j,g,E,void 0,Q)})):b(o,v,V,(o=>{if(I){const v=new Blob([o]);S.Tools.DownloadBlob(v),g&&g("")}else g&&g(o)}),E,1,o.getCreationOptions().antialias,void 0,void 0,void 0,void 0,Q)}async function s(o,v,V){let g=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",E=arguments.length>4?arguments[4]:void 0,I=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((Q,U)=>{t(o,v,V,(o=>{"undefined"!==typeof o?Q(o):U(new Error("Data is undefined"))}),g,void 0,E,I)}))}async function L(o,v,V,g){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",I=arguments.length>5?arguments[5]:void 0,Q=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((U=>{t(o,v,{width:V,height:g},(()=>{U()}),E,!0,I,Q)}))}function b(o,v,I,Q){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,O=arguments.length>6&&void 0!==arguments[6]&&arguments[6],h=arguments.length>7?arguments[7]:void 0,x=arguments.length>8&&void 0!==arguments[8]&&arguments[8],S=arguments.length>9&&void 0!==arguments[9]&&arguments[9],j=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],t=arguments.length>11?arguments[11]:void 0,s=arguments.length>12?arguments[12]:void 0,L=arguments.length>13?arguments[13]:void 0;const{height:b,width:u,finalWidth:a,finalHeight:F}=mo(o,v,I),i={width:u,height:b};if(!b||!u)return void l.b.Error("Invalid 'size' parameter !");o.skipFrameRender=!0;const J=o.getRenderWidth,d=o.getRenderHeight;o.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&o._currentRenderTarget?o._currentRenderTarget.width:u},o.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&o._currentRenderTarget?o._currentRenderTarget.height:b},o.onResizeObservable.hasObservers()&&o.onResizeObservable.notifyObservers(o);const N=v.Fo(),Y=new E.b("screenShot",i,N,!1,!1,0,!1,g.e.BILINEAR_SAMPLINGMODE,void 0,S,void 0,void 0,void 0,n);Y.renderList=N.meshes.slice(),Y.samples=n,Y.renderSprites=x,Y.activeCamera=v,Y.forceLayerMaskCheck=j,null===s||void 0===s||s(Y);const q=L||T.DumpData,P=()=>{N.incrementRenderId(),N.resetCachedMaterial(),(0,R.d)((()=>Y.isReadyForRendering()&&v.isReady(!0)),(()=>{o.onEndFrameObservable.addOnce((()=>{a===u&&F===b?Y.readPixels(void 0,void 0,void 0,!1).then((o=>{q(u,b,o,Q,U,h,!0,void 0,t),Y.dispose()})):(o.isWebGPU?V.e(51).then(V.bind(V,15010)):V.e(52).then(V.bind(V,15012))).then((async()=>await(0,c.c)("pass",Y.getInternalTexture(),N,void 0,void 0,void 0,a,F).then((v=>{o._readTexturePixels(v,a,F,-1,0,null,!0,!1,0,0).then((o=>{q(a,F,o,Q,U,h,!0,void 0,t),v.dispose()}))}))))})),N.incrementRenderId(),N.resetCachedMaterial();const g=N.activeCamera,E=N.activeCameras,I=v.outputRenderTarget,n=N.spritesEnabled;N.activeCamera=v,N.activeCameras=null,v.outputRenderTarget=Y,N.spritesEnabled=x;const O=N.meshes;N.meshes=Y.renderList||N.meshes;try{N.render()}finally{N.activeCamera=g,N.activeCameras=E,v.outputRenderTarget=I,N.spritesEnabled=n,N.meshes=O,o.getRenderWidth=J,o.getRenderHeight=d,o.onResizeObservable.hasObservers()&&o.onResizeObservable.notifyObservers(o),v.getProjectionMatrix(!0),o.skipFrameRender=!1}}),(()=>{o.skipFrameRender=!1,o.getRenderWidth=J,o.getRenderHeight=d}))};if(O){const o=new f("antialiasing",1,N.activeCamera);Y.addPostProcess(o),o.qg=!0,o.onEffectCreatedObservable.addOnce((o=>{o.isReady()?P():o.onCompiled=()=>{P()}}))}else P()}async function u(o,v,V){let g=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,I=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Q=arguments.length>6?arguments[6]:void 0,U=arguments.length>7&&void 0!==arguments[7]&&arguments[7],n=arguments.length>8&&void 0!==arguments[8]&&arguments[8],O=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],h=arguments.length>10?arguments[10]:void 0,x=arguments.length>11?arguments[11]:void 0,f=arguments.length>12?arguments[12]:void 0;return await new Promise(((l,S)=>{b(o,v,V,(o=>{"undefined"!==typeof o?l(o):S(new Error("Data is undefined"))}),g,E,I,Q,U,n,O,h,x,f)}))}function mo(o,v,V){let g=0,E=0,I=0,Q=0;if("object"===typeof V){const U=V.precision?Math.abs(V.precision):1;V.width&&V.height?(g=V.height*U,E=V.width*U):V.width&&!V.height?(E=V.width*U,g=Math.round(E/o.getAspectRatio(v))):V.height&&!V.width?(g=V.height*U,E=Math.round(g*o.getAspectRatio(v))):(E=Math.round(o.getRenderWidth()*U),g=Math.round(E/o.getAspectRatio(v))),V.finalWidth&&V.finalHeight?(Q=V.finalHeight,I=V.finalWidth):V.finalWidth&&!V.finalHeight?(I=V.finalWidth,Q=Math.round(I/o.getAspectRatio(v))):V.finalHeight&&!V.finalWidth?(Q=V.finalHeight,I=Math.round(Q*o.getAspectRatio(v))):(I=E,Q=g)}else isNaN(V)||(g=V,E=V,I=V,Q=V);return E&&(E=Math.floor(E)),g&&(g=Math.floor(g)),I&&(I=Math.floor(I)),Q&&(Q=Math.floor(Q)),{height:0|g,width:0|E,finalWidth:0|I,finalHeight:0|Q}}const a={CreateScreenshot:t,CreateScreenshotAsync:s,CreateScreenshotWithResizeAsync:L,CreateScreenshotUsingRenderTarget:b,CreateScreenshotUsingRenderTargetAsync:u};S.Tools.CreateScreenshot=t,S.Tools.CreateScreenshotAsync=s,S.Tools.CreateScreenshotUsingRenderTarget=b,S.Tools.CreateScreenshotUsingRenderTargetAsync=u}}]);