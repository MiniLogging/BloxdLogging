"use strict";(self.qcdfysujsyf=self.qcdfysujsyf||[]).push([[12,20],{12915:(K,A,T)=>{T.r(A),T.d(A,{Dispose:()=>x,DumpData:()=>Z,DumpDataAsync:()=>Y,DumpFramebuffer:()=>Q,DumpTools:()=>J});var G=T(12794),B=T(12526),L=T(12716),f=T(12565);let O,C=null;async function Q(K,A,T,G){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",L=arguments.length>5?arguments[5]:void 0,f=arguments.length>6?arguments[6]:void 0;const O=await T.readPixels(0,0,K,A);Z(K,A,new Uint8Array(O.buffer),G,B,L,!0,void 0,f)}async function Y(K,A,T){let G=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",B=arguments.length>4?arguments[4]:void 0,L=arguments.length>5&&void 0!==arguments[5]&&arguments[5],f=arguments.length>6&&void 0!==arguments[6]&&arguments[6],O=arguments.length>7?arguments[7]:void 0;return await new Promise((C=>{Z(K,A,T,(K=>C(K)),G,B,L,f,O)}))}function Z(K,A,Q,Y){let Z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",J=arguments.length>5?arguments[5]:void 0,b=arguments.length>6&&void 0!==arguments[6]&&arguments[6],P=arguments.length>7&&void 0!==arguments[7]&&arguments[7],F=arguments.length>8?arguments[8]:void 0;(async function(){return C||(C=new Promise(((K,A)=>{let B,L=null;const C={cf:!0,depth:!1,df:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(T.bind(T,12832)).then((Q=>{let{ThinEngine:Y}=Q;const Z=f.b.Instances.length;try{B=new OffscreenCanvas(100,100),L=new Y(B,!1,C)}catch(P){var J;Z<f.b.Instances.length&&(null===(J=f.b.Instances.pop())||void 0===J||J.dispose()),B=document.createElement("canvas"),L=new Y(B,!1,C)}f.b.Instances.pop(),f.b.OnEnginesDisposedObservable.add((K=>{L&&K!==L&&!L.O&&0===f.b.Instances.length&&x()})),L.getCaps().parallelShaderCompile=void 0;const b=new G.e(L);T.e(52).then(T.bind(T,15178)).then((T=>{let{passPixelShader:f}=T;if(!L)return void A("Engine is not defined");const C=new G.g({bA:L,name:f.name,fragmentShader:f.shader,samplerNames:["textureSampler"]});O={canvas:B,bA:L,renderer:b,wrapper:C},K(O)}))})).catch(A)}))),await C})().then((T=>{if(T.bA.setSize(K,A,!0),Q instanceof Float32Array){const K=new Uint8Array(Q.length);let A=Q.length;for(;A--;){const T=Q[A];K[A]=Math.round(255*(0,L.Clamp)(T))}Q=K}const G=T.bA.createRawTexture(Q,K,A,5,!1,!b,1);T.renderer.setViewport(),T.renderer.applyEffectWrapper(T.wrapper),T.wrapper.effect._bindTexture("textureSampler",G),T.renderer.draw(),P?B.Tools.ToBlob(T.canvas,(K=>{const A=new FileReader;A.onload=K=>{const A=K.target.result;Y&&Y(A)},A.readAsArrayBuffer(K)}),Z,F):B.Tools.EncodeScreenshotCanvasData(T.canvas,Y,Z,J,F),G.dispose()}))}function x(){var K;O?(O.wrapper.dispose(),O.renderer.dispose(),O.bA.dispose()):null===(K=C)||void 0===K||K.then((K=>{K.wrapper.dispose(),K.renderer.dispose(),K.bA.dispose()}));C=null,O=null}const J={DumpData:Z,DumpDataAsync:Y,DumpFramebuffer:Q,Dispose:x};B.Tools.DumpData=Z,B.Tools.DumpDataAsync=Y,B.Tools.DumpFramebuffer=Q},12670:(K,A,T)=>{T.r(A),T.d(A,{CreateScreenshot:()=>D,CreateScreenshotAsync:()=>mK,CreateScreenshotUsingRenderTarget:()=>z,CreateScreenshotUsingRenderTargetAsync:()=>g,CreateScreenshotWithResizeAsync:()=>U,ScreenshotTools:()=>l});var G=T(12674),B=T(12762),L=T(12788),f=T(12651),O=T(12733),C=T(12794),Q=T(12826),Y=T(12700);class Z extends C.g{static _GetDefines(K){if(!K)return null;return K.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(K,A){K?(this._webGPUReady=!0,A.push(Promise.all([T.e(54).then(T.bind(T,15186)),T.e(55).then(T.bind(T,15192))]))):A.push(Promise.all([T.e(56).then(T.bind(T,15198)),T.e(57).then(T.bind(T,15204))]))}constructor(K){const A={...arguments.length>2?arguments[2]:void 0,name:K,bA:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||Q.c.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:Z.VertexUrl,fragmentShader:Z.FragmentUrl,uniforms:Z.Uniforms};super({...A,defines:Z._GetDefines(A.bA)}),this.texelSize=new Y.Vector2(0,0)}bind(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(K),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}Z.VertexUrl="fxaa",Z.FragmentUrl="fxaa",Z.Uniforms=["texelSize"];class x extends L.d{getClassName(){return"FxaaPostProcess"}constructor(K,A){let T=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,B=arguments.length>3?arguments[3]:void 0,L=arguments.length>4?arguments[4]:void 0,f=arguments.length>5?arguments[5]:void 0,O=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const C={uniforms:Z.Uniforms,size:"number"===typeof A?A:void 0,camera:T,samplingMode:B||G.c.BILINEAR_SAMPLINGMODE,bA:L,reusable:f,textureType:O,...A};super(K,Z.FragmentUrl,{effectWrapper:"number"!==typeof A&&A.effectWrapper?void 0:new Z(K,L,C),...C}),this.onApplyObservable.add((K=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(K,A,T,G){return O.c.Parse((()=>new x(K.name,K.options,A,K.renderTargetSamplingMode,T.getEngine(),K.reusable)),K,T,G)}}(0,f.c)("BABYLON.FxaaPostProcess",x);var J=T(12548),b=T(12526),P=T(12915),F=T(12920),d=T(12596);let N=null;function D(K,A,T,G){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",L=arguments.length>5&&void 0!==arguments[5]&&arguments[5],f=arguments.length>6?arguments[6]:void 0,O=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:C,width:Q}=S(K,A,T);if(!C||!Q)return void J.d.Error("Invalid 'size' parameter !");A.SK().activeCamera===A?K.onEndFrameObservable.addOnce((()=>{N||(N=document.createElement("canvas")),N.width=Q,N.height=C;const A=N.getContext("2d"),T=K.getRenderingCanvas();if(!A||!T)return void J.d.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const Y=T.width,Z=T.height,x=N.width,P=N.height,F=x/Y,d=P/Z,D=O?Math.max(F,d):Math.min(F,d),mK=Y*D,U=Z*D,z=(x-mK)/2,g=(P-U)/2;A.drawImage(T,0,0,Y,Z,z,g,mK,U),L?(b.Tools.EncodeScreenshotCanvasData(N,void 0,B,void 0,f),G&&G("")):b.Tools.EncodeScreenshotCanvasData(N,G,B,void 0,f)})):z(K,A,T,(K=>{if(L){const A=new Blob([K]);b.Tools.DownloadBlob(A),G&&G("")}else G&&G(K)}),B,1,K.getCreationOptions().antialias,void 0,void 0,void 0,void 0,f)}async function mK(K,A,T){let G=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",B=arguments.length>4?arguments[4]:void 0,L=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((f,O)=>{D(K,A,T,(K=>{"undefined"!==typeof K?f(K):O(new Error("Data is undefined"))}),G,void 0,B,L)}))}async function U(K,A,T,G){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",L=arguments.length>5?arguments[5]:void 0,f=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((O=>{D(K,A,{width:T,height:G},(()=>{O()}),B,!0,L,f)}))}function z(K,A,L,f){let O=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",C=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,Q=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Y=arguments.length>7?arguments[7]:void 0,Z=arguments.length>8&&void 0!==arguments[8]&&arguments[8],b=arguments.length>9&&void 0!==arguments[9]&&arguments[9],N=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],D=arguments.length>11?arguments[11]:void 0,mK=arguments.length>12?arguments[12]:void 0,U=arguments.length>13?arguments[13]:void 0;const{height:z,width:g,finalWidth:l,finalHeight:u}=S(K,A,L),c={width:g,height:z};if(!z||!g)return void J.d.Error("Invalid 'size' parameter !");K.skipFrameRender=!0;const n=K.getRenderWidth,H=K.getRenderHeight;K.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&K._currentRenderTarget?K._currentRenderTarget.width:g},K.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&K._currentRenderTarget?K._currentRenderTarget.height:z},K.onResizeObservable.hasObservers()&&K.onResizeObservable.notifyObservers(K);const e=A.SK(),p=new B.d("screenShot",c,e,!1,!1,0,!1,G.c.BILINEAR_SAMPLINGMODE,void 0,b,void 0,void 0,void 0,C);p.renderList=e.meshes.slice(),p.samples=C,p.renderSprites=Z,p.activeCamera=A,p.forceLayerMaskCheck=N,null===mK||void 0===mK||mK(p);const r=U||P.DumpData,h=()=>{e.incrementRenderId(),e.resetCachedMaterial(),(0,d.f)((()=>p.isReadyForRendering()&&A.isReady(!0)),(()=>{K.onEndFrameObservable.addOnce((()=>{l===g&&u===z?p.readPixels(void 0,void 0,void 0,!1).then((K=>{r(g,z,K,f,O,Y,!0,void 0,D),p.dispose()})):(K.isWebGPU?T.e(51).then(T.bind(T,15171)):T.e(52).then(T.bind(T,15178))).then((async()=>await(0,F.d)("pass",p.getInternalTexture(),e,void 0,void 0,void 0,l,u).then((A=>{K._readTexturePixels(A,l,u,-1,0,null,!0,!1,0,0).then((K=>{r(l,u,K,f,O,Y,!0,void 0,D),A.dispose()}))}))))})),e.incrementRenderId(),e.resetCachedMaterial();const G=e.activeCamera,B=e.activeCameras,L=A.outputRenderTarget,C=e.spritesEnabled;e.activeCamera=A,e.activeCameras=null,A.outputRenderTarget=p,e.spritesEnabled=Z;const Q=e.meshes;e.meshes=p.renderList||e.meshes;try{e.render()}finally{e.activeCamera=G,e.activeCameras=B,A.outputRenderTarget=L,e.spritesEnabled=C,e.meshes=Q,K.getRenderWidth=n,K.getRenderHeight=H,K.onResizeObservable.hasObservers()&&K.onResizeObservable.notifyObservers(K),A.getProjectionMatrix(!0),K.skipFrameRender=!1}}),(()=>{K.skipFrameRender=!1,K.getRenderWidth=n,K.getRenderHeight=H}))};if(Q){const K=new x("antialiasing",1,e.activeCamera);p.addPostProcess(K),K.ef=!0,K.onEffectCreatedObservable.addOnce((K=>{K.isReady()?h():K.onCompiled=()=>{h()}}))}else h()}async function g(K,A,T){let G=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,L=arguments.length>5&&void 0!==arguments[5]&&arguments[5],f=arguments.length>6?arguments[6]:void 0,O=arguments.length>7&&void 0!==arguments[7]&&arguments[7],C=arguments.length>8&&void 0!==arguments[8]&&arguments[8],Q=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],Y=arguments.length>10?arguments[10]:void 0,Z=arguments.length>11?arguments[11]:void 0,x=arguments.length>12?arguments[12]:void 0;return await new Promise(((J,b)=>{z(K,A,T,(K=>{"undefined"!==typeof K?J(K):b(new Error("Data is undefined"))}),G,B,L,f,O,C,Q,Y,Z,x)}))}function S(K,A,T){let G=0,B=0,L=0,f=0;if("object"===typeof T){const O=T.precision?Math.abs(T.precision):1;T.width&&T.height?(G=T.height*O,B=T.width*O):T.width&&!T.height?(B=T.width*O,G=Math.round(B/K.getAspectRatio(A))):T.height&&!T.width?(G=T.height*O,B=Math.round(G*K.getAspectRatio(A))):(B=Math.round(K.getRenderWidth()*O),G=Math.round(B/K.getAspectRatio(A))),T.finalWidth&&T.finalHeight?(f=T.finalHeight,L=T.finalWidth):T.finalWidth&&!T.finalHeight?(L=T.finalWidth,f=Math.round(L/K.getAspectRatio(A))):T.finalHeight&&!T.finalWidth?(f=T.finalHeight,L=Math.round(f*K.getAspectRatio(A))):(L=B,f=G)}else isNaN(T)||(G=T,B=T,L=T,f=T);return B&&(B=Math.floor(B)),G&&(G=Math.floor(G)),L&&(L=Math.floor(L)),f&&(f=Math.floor(f)),{height:0|G,width:0|B,finalWidth:0|L,finalHeight:0|f}}const l={CreateScreenshot:D,CreateScreenshotAsync:mK,CreateScreenshotWithResizeAsync:U,CreateScreenshotUsingRenderTarget:z,CreateScreenshotUsingRenderTargetAsync:g};b.Tools.CreateScreenshot=D,b.Tools.CreateScreenshotAsync=mK,b.Tools.CreateScreenshotUsingRenderTarget=z,b.Tools.CreateScreenshotUsingRenderTargetAsync=g}}]);