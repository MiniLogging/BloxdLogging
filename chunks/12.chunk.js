"use strict";(self["2fwzcez286e"]=self["2fwzcez286e"]||[]).push([[12,20],{13206:(B,u,F)=>{F.r(u),F.d(u,{Dispose:()=>t,DumpData:()=>Q,DumpDataAsync:()=>Y,DumpFramebuffer:()=>s,DumpTools:()=>v});var Z=F(13084),V=F(12802),p=F(12994),G=F(12855);let R,e=null;async function s(B,u,F,Z){let V=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",p=arguments.length>5?arguments[5]:void 0,G=arguments.length>6?arguments[6]:void 0;const R=await F.readPixels(0,0,B,u);Q(B,u,new Uint8Array(R.buffer),Z,V,p,!0,void 0,G)}async function Y(B,u,F){let Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",V=arguments.length>4?arguments[4]:void 0,p=arguments.length>5&&void 0!==arguments[5]&&arguments[5],G=arguments.length>6&&void 0!==arguments[6]&&arguments[6],R=arguments.length>7?arguments[7]:void 0;return await new Promise((e=>{Q(B,u,F,(B=>e(B)),Z,V,p,G,R)}))}function Q(B,u,s,Y){let Q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",v=arguments.length>5?arguments[5]:void 0,D=arguments.length>6&&void 0!==arguments[6]&&arguments[6],L=arguments.length>7&&void 0!==arguments[7]&&arguments[7],q=arguments.length>8?arguments[8]:void 0;(async function(){return e||(e=new Promise(((B,u)=>{let V,p=null;const e={QR:!0,depth:!1,RR:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(F.bind(F,13112)).then((s=>{let{ThinEngine:Y}=s;const Q=G.b.Instances.length;try{V=new OffscreenCanvas(100,100),p=new Y(V,!1,e)}catch(L){var v;Q<G.b.Instances.length&&(null===(v=G.b.Instances.pop())||void 0===v||v.dispose()),V=document.createElement("canvas"),p=new Y(V,!1,e)}G.b.Instances.pop(),G.b.OnEnginesDisposedObservable.add((B=>{p&&B!==p&&!p.G&&0===G.b.Instances.length&&t()})),p.getCaps().parallelShaderCompile=void 0;const D=new Z.c(p);F.e(52).then(F.bind(F,15516)).then((F=>{let{passPixelShader:G}=F;if(!p)return void u("Engine is not defined");const e=new Z.g({vu:p,name:G.name,fragmentShader:G.shader,samplerNames:["textureSampler"]});R={canvas:V,vu:p,renderer:D,wrapper:e},B(R)}))})).catch(u)}))),await e})().then((F=>{if(F.vu.setSize(B,u,!0),s instanceof Float32Array){const B=new Uint8Array(s.length);let u=s.length;for(;u--;){const F=s[u];B[u]=Math.round(255*(0,p.Clamp)(F))}s=B}const Z=F.vu.createRawTexture(s,B,u,5,!1,!D,1);F.renderer.setViewport(),F.renderer.applyEffectWrapper(F.wrapper),F.wrapper.effect._bindTexture("textureSampler",Z),F.renderer.draw(),L?V.Tools.ToBlob(F.canvas,(B=>{const u=new FileReader;u.onload=B=>{const u=B.target.result;Y&&Y(u)},u.readAsArrayBuffer(B)}),Q,q):V.Tools.EncodeScreenshotCanvasData(F.canvas,Y,Q,v,q),Z.dispose()}))}function t(){var B;R?(R.wrapper.dispose(),R.renderer.dispose(),R.vu.dispose()):null===(B=e)||void 0===B||B.then((B=>{B.wrapper.dispose(),B.renderer.dispose(),B.vu.dispose()}));e=null,R=null}const v={DumpData:Q,DumpDataAsync:Y,DumpFramebuffer:s,Dispose:t};V.Tools.DumpData=Q,V.Tools.DumpDataAsync=Y,V.Tools.DumpFramebuffer=s},12966:(B,u,F)=>{F.r(u),F.d(u,{CreateScreenshot:()=>f,CreateScreenshotAsync:()=>C,CreateScreenshotUsingRenderTarget:()=>U,CreateScreenshotUsingRenderTargetAsync:()=>y,CreateScreenshotWithResizeAsync:()=>x,ScreenshotTools:()=>g});var Z=F(12969),V=F(13039),p=F(13080),G=F(12949),R=F(13014),e=F(13084),s=F(13108),Y=F(12979);class Q extends e.g{static _GetDefines(B){if(!B)return null;return B.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(B,u){B?(this._webGPUReady=!0,u.push(Promise.all([F.e(54).then(F.bind(F,15527)),F.e(55).then(F.bind(F,15531))]))):u.push(Promise.all([F.e(56).then(F.bind(F,15538)),F.e(57).then(F.bind(F,15545))]))}constructor(B){const u={...arguments.length>2?arguments[2]:void 0,name:B,vu:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||s.b.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:Q.VertexUrl,fragmentShader:Q.FragmentUrl,uniforms:Q.Uniforms};super({...u,defines:Q._GetDefines(u.vu)}),this.texelSize=new Y.Vector2(0,0)}bind(){let B=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(B),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}Q.VertexUrl="fxaa",Q.FragmentUrl="fxaa",Q.Uniforms=["texelSize"];class t extends p.c{getClassName(){return"FxaaPostProcess"}constructor(B,u){let F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,V=arguments.length>3?arguments[3]:void 0,p=arguments.length>4?arguments[4]:void 0,G=arguments.length>5?arguments[5]:void 0,R=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const e={uniforms:Q.Uniforms,size:"number"===typeof u?u:void 0,camera:F,samplingMode:V||Z.d.BILINEAR_SAMPLINGMODE,vu:p,reusable:G,textureType:R,...u};super(B,Q.FragmentUrl,{effectWrapper:"number"!==typeof u&&u.effectWrapper?void 0:new Q(B,p,e),...e}),this.onApplyObservable.add((B=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(B,u,F,Z){return R.c.Parse((()=>new t(B.name,B.options,u,B.renderTargetSamplingMode,F.getEngine(),B.reusable)),B,F,Z)}}(0,G.f)("BABYLON.FxaaPostProcess",t);var v=F(12822),D=F(12802),L=F(13206),q=F(13215),W=F(12882);let X=null;function f(B,u,F,Z){let V=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",p=arguments.length>5&&void 0!==arguments[5]&&arguments[5],G=arguments.length>6?arguments[6]:void 0,R=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:e,width:s}=O(B,u,F);if(!e||!s)return void v.d.Error("Invalid 'size' parameter !");u.yB().activeCamera===u?B.onEndFrameObservable.addOnce((()=>{X||(X=document.createElement("canvas")),X.width=s,X.height=e;const u=X.getContext("2d"),F=B.getRenderingCanvas();if(!u||!F)return void v.d.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const Y=F.width,Q=F.height,t=X.width,L=X.height,q=t/Y,W=L/Q,f=R?Math.max(q,W):Math.min(q,W),C=Y*f,x=Q*f,U=(t-C)/2,y=(L-x)/2;u.drawImage(F,0,0,Y,Q,U,y,C,x),p?(D.Tools.EncodeScreenshotCanvasData(X,void 0,V,void 0,G),Z&&Z("")):D.Tools.EncodeScreenshotCanvasData(X,Z,V,void 0,G)})):U(B,u,F,(B=>{if(p){const u=new Blob([B]);D.Tools.DownloadBlob(u),Z&&Z("")}else Z&&Z(B)}),V,1,B.getCreationOptions().antialias,void 0,void 0,void 0,void 0,G)}async function C(B,u,F){let Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",V=arguments.length>4?arguments[4]:void 0,p=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((G,R)=>{f(B,u,F,(B=>{"undefined"!==typeof B?G(B):R(new Error("Data is undefined"))}),Z,void 0,V,p)}))}async function x(B,u,F,Z){let V=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",p=arguments.length>5?arguments[5]:void 0,G=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((R=>{f(B,u,{width:F,height:Z},(()=>{R()}),V,!0,p,G)}))}function U(B,u,p,G){let R=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",e=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Y=arguments.length>7?arguments[7]:void 0,Q=arguments.length>8&&void 0!==arguments[8]&&arguments[8],D=arguments.length>9&&void 0!==arguments[9]&&arguments[9],X=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],f=arguments.length>11?arguments[11]:void 0,C=arguments.length>12?arguments[12]:void 0,x=arguments.length>13?arguments[13]:void 0;const{height:U,width:y,finalWidth:g,finalHeight:J}=O(B,u,p),a={width:y,height:U};if(!U||!y)return void v.d.Error("Invalid 'size' parameter !");B.skipFrameRender=!0;const T=B.getRenderWidth,z=B.getRenderHeight;B.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&B._currentRenderTarget?B._currentRenderTarget.width:y},B.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&B._currentRenderTarget?B._currentRenderTarget.height:U},B.onResizeObservable.hasObservers()&&B.onResizeObservable.notifyObservers(B);const M=u.yB(),j=new V.c("screenShot",a,M,!1,!1,0,!1,Z.d.BILINEAR_SAMPLINGMODE,void 0,D,void 0,void 0,void 0,e);j.renderList=M.meshes.slice(),j.samples=e,j.renderSprites=Q,j.activeCamera=u,j.forceLayerMaskCheck=X,null===C||void 0===C||C(j);const o=x||L.DumpData,I=()=>{M.incrementRenderId(),M.resetCachedMaterial(),(0,W.d)((()=>j.isReadyForRendering()&&u.isReady(!0)),(()=>{B.onEndFrameObservable.addOnce((()=>{g===y&&J===U?j.readPixels(void 0,void 0,void 0,!1).then((B=>{o(y,U,B,G,R,Y,!0,void 0,f),j.dispose()})):(B.isWebGPU?F.e(51).then(F.bind(F,15508)):F.e(52).then(F.bind(F,15516))).then((async()=>await(0,q.d)("pass",j.getInternalTexture(),M,void 0,void 0,void 0,g,J).then((u=>{B._readTexturePixels(u,g,J,-1,0,null,!0,!1,0,0).then((B=>{o(g,J,B,G,R,Y,!0,void 0,f),u.dispose()}))}))))})),M.incrementRenderId(),M.resetCachedMaterial();const Z=M.activeCamera,V=M.activeCameras,p=u.outputRenderTarget,e=M.spritesEnabled;M.activeCamera=u,M.activeCameras=null,u.outputRenderTarget=j,M.spritesEnabled=Q;const s=M.meshes;M.meshes=j.renderList||M.meshes;try{M.render()}finally{M.activeCamera=Z,M.activeCameras=V,u.outputRenderTarget=p,M.spritesEnabled=e,M.meshes=s,B.getRenderWidth=T,B.getRenderHeight=z,B.onResizeObservable.hasObservers()&&B.onResizeObservable.notifyObservers(B),u.getProjectionMatrix(!0),B.skipFrameRender=!1}}),(()=>{B.skipFrameRender=!1,B.getRenderWidth=T,B.getRenderHeight=z}))};if(s){const B=new t("antialiasing",1,M.activeCamera);j.addPostProcess(B),B.tR=!0,B.onEffectCreatedObservable.addOnce((B=>{B.isReady()?I():B.onCompiled=()=>{I()}}))}else I()}async function y(B,u,F){let Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",V=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,p=arguments.length>5&&void 0!==arguments[5]&&arguments[5],G=arguments.length>6?arguments[6]:void 0,R=arguments.length>7&&void 0!==arguments[7]&&arguments[7],e=arguments.length>8&&void 0!==arguments[8]&&arguments[8],s=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],Y=arguments.length>10?arguments[10]:void 0,Q=arguments.length>11?arguments[11]:void 0,t=arguments.length>12?arguments[12]:void 0;return await new Promise(((v,D)=>{U(B,u,F,(B=>{"undefined"!==typeof B?v(B):D(new Error("Data is undefined"))}),Z,V,p,G,R,e,s,Y,Q,t)}))}function O(B,u,F){let Z=0,V=0,p=0,G=0;if("object"===typeof F){const R=F.precision?Math.abs(F.precision):1;F.width&&F.height?(Z=F.height*R,V=F.width*R):F.width&&!F.height?(V=F.width*R,Z=Math.round(V/B.getAspectRatio(u))):F.height&&!F.width?(Z=F.height*R,V=Math.round(Z*B.getAspectRatio(u))):(V=Math.round(B.getRenderWidth()*R),Z=Math.round(V/B.getAspectRatio(u))),F.finalWidth&&F.finalHeight?(G=F.finalHeight,p=F.finalWidth):F.finalWidth&&!F.finalHeight?(p=F.finalWidth,G=Math.round(p/B.getAspectRatio(u))):F.finalHeight&&!F.finalWidth?(G=F.finalHeight,p=Math.round(G*B.getAspectRatio(u))):(p=V,G=Z)}else isNaN(F)||(Z=F,V=F,p=F,G=F);return V&&(V=Math.floor(V)),Z&&(Z=Math.floor(Z)),p&&(p=Math.floor(p)),G&&(G=Math.floor(G)),{height:0|Z,width:0|V,finalWidth:0|p,finalHeight:0|G}}const g={CreateScreenshot:f,CreateScreenshotAsync:C,CreateScreenshotWithResizeAsync:x,CreateScreenshotUsingRenderTarget:U,CreateScreenshotUsingRenderTargetAsync:y};D.Tools.CreateScreenshot=f,D.Tools.CreateScreenshotAsync=C,D.Tools.CreateScreenshotUsingRenderTarget=U,D.Tools.CreateScreenshotUsingRenderTargetAsync=y}}]);