"use strict";(self.wy695la1oic=self.wy695la1oic||[]).push([[12,20],{11605:(S,v,D)=>{D.r(v),D.d(v,{Dispose:()=>w,DumpData:()=>A,DumpDataAsync:()=>h,DumpFramebuffer:()=>E,DumpTools:()=>n});var z=D(11488),e=D(11175),N=D(11393),m=D(11222);let B,g=null;async function E(S,v,D,z){let e=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",N=arguments.length>5?arguments[5]:void 0,m=arguments.length>6?arguments[6]:void 0;const B=await D.readPixels(0,0,S,v);A(S,v,new Uint8Array(B.buffer),z,e,N,!0,void 0,m)}async function h(S,v,D){let z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",e=arguments.length>4?arguments[4]:void 0,N=arguments.length>5&&void 0!==arguments[5]&&arguments[5],m=arguments.length>6&&void 0!==arguments[6]&&arguments[6],B=arguments.length>7?arguments[7]:void 0;return await new Promise((g=>{A(S,v,D,(S=>g(S)),z,e,N,m,B)}))}function A(S,v,E,h){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",n=arguments.length>5?arguments[5]:void 0,R=arguments.length>6&&void 0!==arguments[6]&&arguments[6],O=arguments.length>7&&void 0!==arguments[7]&&arguments[7],I=arguments.length>8?arguments[8]:void 0;(async function(){return g||(g=new Promise(((S,v)=>{let e,N=null;const g={Be:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(D.bind(D,11510)).then((E=>{let{ThinEngine:h}=E;const A=m.c.Instances.length;try{e=new OffscreenCanvas(100,100),N=new h(e,!1,g)}catch(O){var n;A<m.c.Instances.length&&(null===(n=m.c.Instances.pop())||void 0===n||n.dispose()),e=document.createElement("canvas"),N=new h(e,!1,g)}m.c.Instances.pop(),m.c.OnEnginesDisposedObservable.add((S=>{N&&S!==N&&!N.h&&0===m.c.Instances.length&&w()})),N.getCaps().parallelShaderCompile=void 0;const R=new z.e(N);D.e(52).then(D.bind(D,13893)).then((D=>{let{passPixelShader:m}=D;if(!N)return void v("Engine is not defined");const g=new z.h({nv:N,name:m.name,fragmentShader:m.shader,samplerNames:["textureSampler"]});B={canvas:e,nv:N,renderer:R,wrapper:g},S(B)}))})).catch(v)}))),await g})().then((D=>{if(D.nv.setSize(S,v,!0),E instanceof Float32Array){const S=new Uint8Array(E.length);let v=E.length;for(;v--;){const D=E[v];S[v]=Math.round(255*(0,N.Clamp)(D))}E=S}const z=D.nv.createRawTexture(E,S,v,5,!1,!R,1);D.renderer.setViewport(),D.renderer.applyEffectWrapper(D.wrapper),D.wrapper.effect._bindTexture("textureSampler",z),D.renderer.draw(),O?e.Tools.ToBlob(D.canvas,(S=>{const v=new FileReader;v.onload=S=>{const v=S.target.result;h&&h(v)},v.readAsArrayBuffer(S)}),A,I):e.Tools.EncodeScreenshotCanvasData(D.canvas,h,A,n,I),z.dispose()}))}function w(){var S;B?(B.wrapper.dispose(),B.renderer.dispose(),B.nv.dispose()):null===(S=g)||void 0===S||S.then((S=>{S.wrapper.dispose(),S.renderer.dispose(),S.nv.dispose()}));g=null,B=null}const n={DumpData:A,DumpDataAsync:h,DumpFramebuffer:E,Dispose:w};e.Tools.DumpData=A,e.Tools.DumpDataAsync=h,e.Tools.DumpFramebuffer=E},11347:(S,v,D)=>{D.r(v),D.d(v,{CreateScreenshot:()=>u,CreateScreenshotAsync:()=>s,CreateScreenshotUsingRenderTarget:()=>d,CreateScreenshotUsingRenderTargetAsync:()=>x,CreateScreenshotWithResizeAsync:()=>r,ScreenshotTools:()=>p});var z=D(11350),e=D(11436),N=D(11485),m=D(11329),B=D(11415),g=D(11488),E=D(11505),h=D(11371);class A extends g.h{static _GetDefines(S){if(!S)return null;return S.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(S,v){S?(this._webGPUReady=!0,v.push(Promise.all([D.e(54).then(D.bind(D,13899)),D.e(55).then(D.bind(D,13906))]))):v.push(Promise.all([D.e(56).then(D.bind(D,13910)),D.e(57).then(D.bind(D,13912))]))}constructor(S){const v={...arguments.length>2?arguments[2]:void 0,name:S,nv:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||E.e.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:A.VertexUrl,fragmentShader:A.FragmentUrl,uniforms:A.Uniforms};super({...v,defines:A._GetDefines(v.nv)}),this.texelSize=new h.Vector2(0,0)}bind(){let S=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(S),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}A.VertexUrl="fxaa",A.FragmentUrl="fxaa",A.Uniforms=["texelSize"];class w extends N.e{getClassName(){return"FxaaPostProcess"}constructor(S,v){let D=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,e=arguments.length>3?arguments[3]:void 0,N=arguments.length>4?arguments[4]:void 0,m=arguments.length>5?arguments[5]:void 0,B=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const g={uniforms:A.Uniforms,size:"number"===typeof v?v:void 0,camera:D,samplingMode:e||z.d.BILINEAR_SAMPLINGMODE,nv:N,reusable:m,textureType:B,...v};super(S,A.FragmentUrl,{effectWrapper:"number"!==typeof v&&v.effectWrapper?void 0:new A(S,N,g),...g}),this.onApplyObservable.add((S=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(S,v,D,z){return B.b.Parse((()=>new w(S.name,S.options,v,S.renderTargetSamplingMode,D.getEngine(),S.reusable)),S,D,z)}}(0,m.f)("BABYLON.FxaaPostProcess",w);var n=D(11190),R=D(11175),O=D(11605),I=D(11607),K=D(11262);let q=null;function u(S,v,D,z){let e=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",N=arguments.length>5&&void 0!==arguments[5]&&arguments[5],m=arguments.length>6?arguments[6]:void 0,B=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:g,width:E}=W(S,v,D);if(!g||!E)return void n.b.Error("Invalid 'size' parameter !");v.xS().activeCamera===v?S.onEndFrameObservable.addOnce((()=>{q||(q=document.createElement("canvas")),q.width=E,q.height=g;const v=q.getContext("2d"),D=S.getRenderingCanvas();if(!v||!D)return void n.b.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const h=D.width,A=D.height,w=q.width,O=q.height,I=w/h,K=O/A,u=B?Math.max(I,K):Math.min(I,K),s=h*u,r=A*u,d=(w-s)/2,x=(O-r)/2;v.drawImage(D,0,0,h,A,d,x,s,r),N?(R.Tools.EncodeScreenshotCanvasData(q,void 0,e,void 0,m),z&&z("")):R.Tools.EncodeScreenshotCanvasData(q,z,e,void 0,m)})):d(S,v,D,(S=>{if(N){const v=new Blob([S]);R.Tools.DownloadBlob(v),z&&z("")}else z&&z(S)}),e,1,S.getCreationOptions().antialias,void 0,void 0,void 0,void 0,m)}async function s(S,v,D){let z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",e=arguments.length>4?arguments[4]:void 0,N=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((m,B)=>{u(S,v,D,(S=>{"undefined"!==typeof S?m(S):B(new Error("Data is undefined"))}),z,void 0,e,N)}))}async function r(S,v,D,z){let e=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",N=arguments.length>5?arguments[5]:void 0,m=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((B=>{u(S,v,{width:D,height:z},(()=>{B()}),e,!0,N,m)}))}function d(S,v,N,m){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",g=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,E=arguments.length>6&&void 0!==arguments[6]&&arguments[6],h=arguments.length>7?arguments[7]:void 0,A=arguments.length>8&&void 0!==arguments[8]&&arguments[8],R=arguments.length>9&&void 0!==arguments[9]&&arguments[9],q=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],u=arguments.length>11?arguments[11]:void 0,s=arguments.length>12?arguments[12]:void 0,r=arguments.length>13?arguments[13]:void 0;const{height:d,width:x,finalWidth:p,finalHeight:b}=W(S,v,N),k={width:x,height:d};if(!d||!x)return void n.b.Error("Invalid 'size' parameter !");S.skipFrameRender=!0;const Z=S.getRenderWidth,i=S.getRenderHeight;S.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&S._currentRenderTarget?S._currentRenderTarget.width:x},S.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&S._currentRenderTarget?S._currentRenderTarget.height:d},S.onResizeObservable.hasObservers()&&S.onResizeObservable.notifyObservers(S);const t=v.xS(),X=new e.b("screenShot",k,t,!1,!1,0,!1,z.d.BILINEAR_SAMPLINGMODE,void 0,R,void 0,void 0,void 0,g);X.renderList=t.meshes.slice(),X.samples=g,X.renderSprites=A,X.activeCamera=v,X.forceLayerMaskCheck=q,null===s||void 0===s||s(X);const a=r||O.DumpData,o=()=>{t.incrementRenderId(),t.resetCachedMaterial(),(0,K.e)((()=>X.isReadyForRendering()&&v.isReady(!0)),(()=>{S.onEndFrameObservable.addOnce((()=>{p===x&&b===d?X.readPixels(void 0,void 0,void 0,!1).then((S=>{a(x,d,S,m,B,h,!0,void 0,u),X.dispose()})):(S.isWebGPU?D.e(51).then(D.bind(D,13885)):D.e(52).then(D.bind(D,13893))).then((async()=>await(0,I.e)("pass",X.getInternalTexture(),t,void 0,void 0,void 0,p,b).then((v=>{S._readTexturePixels(v,p,b,-1,0,null,!0,!1,0,0).then((S=>{a(p,b,S,m,B,h,!0,void 0,u),v.dispose()}))}))))})),t.incrementRenderId(),t.resetCachedMaterial();const z=t.activeCamera,e=t.activeCameras,N=v.outputRenderTarget,g=t.spritesEnabled;t.activeCamera=v,t.activeCameras=null,v.outputRenderTarget=X,t.spritesEnabled=A;const E=t.meshes;t.meshes=X.renderList||t.meshes;try{t.render()}finally{t.activeCamera=z,t.activeCameras=e,v.outputRenderTarget=N,t.spritesEnabled=g,t.meshes=E,S.getRenderWidth=Z,S.getRenderHeight=i,S.onResizeObservable.hasObservers()&&S.onResizeObservable.notifyObservers(S),v.getProjectionMatrix(!0),S.skipFrameRender=!1}}),(()=>{S.skipFrameRender=!1,S.getRenderWidth=Z,S.getRenderHeight=i}))};if(E){const S=new w("antialiasing",1,t.activeCamera);X.addPostProcess(S),S.Ee=!0,S.onEffectCreatedObservable.addOnce((S=>{S.isReady()?o():S.onCompiled=()=>{o()}}))}else o()}async function x(S,v,D){let z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",e=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,N=arguments.length>5&&void 0!==arguments[5]&&arguments[5],m=arguments.length>6?arguments[6]:void 0,B=arguments.length>7&&void 0!==arguments[7]&&arguments[7],g=arguments.length>8&&void 0!==arguments[8]&&arguments[8],E=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],h=arguments.length>10?arguments[10]:void 0,A=arguments.length>11?arguments[11]:void 0,w=arguments.length>12?arguments[12]:void 0;return await new Promise(((n,R)=>{d(S,v,D,(S=>{"undefined"!==typeof S?n(S):R(new Error("Data is undefined"))}),z,e,N,m,B,g,E,h,A,w)}))}function W(S,v,D){let z=0,e=0,N=0,m=0;if("object"===typeof D){const B=D.precision?Math.abs(D.precision):1;D.width&&D.height?(z=D.height*B,e=D.width*B):D.width&&!D.height?(e=D.width*B,z=Math.round(e/S.getAspectRatio(v))):D.height&&!D.width?(z=D.height*B,e=Math.round(z*S.getAspectRatio(v))):(e=Math.round(S.getRenderWidth()*B),z=Math.round(e/S.getAspectRatio(v))),D.finalWidth&&D.finalHeight?(m=D.finalHeight,N=D.finalWidth):D.finalWidth&&!D.finalHeight?(N=D.finalWidth,m=Math.round(N/S.getAspectRatio(v))):D.finalHeight&&!D.finalWidth?(m=D.finalHeight,N=Math.round(m*S.getAspectRatio(v))):(N=e,m=z)}else isNaN(D)||(z=D,e=D,N=D,m=D);return e&&(e=Math.floor(e)),z&&(z=Math.floor(z)),N&&(N=Math.floor(N)),m&&(m=Math.floor(m)),{height:0|z,width:0|e,finalWidth:0|N,finalHeight:0|m}}const p={CreateScreenshot:u,CreateScreenshotAsync:s,CreateScreenshotWithResizeAsync:r,CreateScreenshotUsingRenderTarget:d,CreateScreenshotUsingRenderTargetAsync:x};R.Tools.CreateScreenshot=u,R.Tools.CreateScreenshotAsync=s,R.Tools.CreateScreenshotUsingRenderTarget=d,R.Tools.CreateScreenshotUsingRenderTargetAsync=x}}]);