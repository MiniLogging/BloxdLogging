"use strict";(self.v2pspxy442l=self.v2pspxy442l||[]).push([[12,20],{12664:(l,a,N)=>{N.r(a),N.d(a,{Dispose:()=>y,DumpData:()=>n,DumpDataAsync:()=>J,DumpFramebuffer:()=>T,DumpTools:()=>H});var U=N(12538),c=N(12254),K=N(12461),Z=N(12296);let w,S=null;async function T(l,a,N,U){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",K=arguments.length>5?arguments[5]:void 0,Z=arguments.length>6?arguments[6]:void 0;const w=await N.readPixels(0,0,l,a);n(l,a,new Uint8Array(w.buffer),U,c,K,!0,void 0,Z)}async function J(l,a,N){let U=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",c=arguments.length>4?arguments[4]:void 0,K=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Z=arguments.length>6&&void 0!==arguments[6]&&arguments[6],w=arguments.length>7?arguments[7]:void 0;return await new Promise((S=>{n(l,a,N,(l=>S(l)),U,c,K,Z,w)}))}function n(l,a,T,J){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",H=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&void 0!==arguments[6]&&arguments[6],W=arguments.length>7&&void 0!==arguments[7]&&arguments[7],B=arguments.length>8?arguments[8]:void 0;(async function(){return S||(S=new Promise(((l,a)=>{let c,K=null;const S={o:!0,depth:!1,Jc:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(N.bind(N,12566)).then((T=>{let{ThinEngine:J}=T;const n=Z.e.Instances.length;try{c=new OffscreenCanvas(100,100),K=new J(c,!1,S)}catch(W){var H;n<Z.e.Instances.length&&(null===(H=Z.e.Instances.pop())||void 0===H||H.dispose()),c=document.createElement("canvas"),K=new J(c,!1,S)}Z.e.Instances.pop(),Z.e.OnEnginesDisposedObservable.add((l=>{K&&l!==K&&!K.T&&0===Z.e.Instances.length&&y()})),K.getCaps().parallelShaderCompile=void 0;const u=new U.e(K);N.e(52).then(N.bind(N,14917)).then((N=>{let{passPixelShader:Z}=N;if(!K)return void a("Engine is not defined");const S=new U.i({Ha:K,name:Z.name,fragmentShader:Z.shader,samplerNames:["textureSampler"]});w={canvas:c,Ha:K,renderer:u,wrapper:S},l(w)}))})).catch(a)}))),await S})().then((N=>{if(N.Ha.setSize(l,a,!0),T instanceof Float32Array){const l=new Uint8Array(T.length);let a=T.length;for(;a--;){const N=T[a];l[a]=Math.round(255*(0,K.Clamp)(N))}T=l}const U=N.Ha.createRawTexture(T,l,a,5,!1,!u,1);N.renderer.setViewport(),N.renderer.applyEffectWrapper(N.wrapper),N.wrapper.effect._bindTexture("textureSampler",U),N.renderer.draw(),W?c.Tools.ToBlob(N.canvas,(l=>{const a=new FileReader;a.onload=l=>{const a=l.target.result;J&&J(a)},a.readAsArrayBuffer(l)}),n,B):c.Tools.EncodeScreenshotCanvasData(N.canvas,J,n,H,B),U.dispose()}))}function y(){var l;w?(w.wrapper.dispose(),w.renderer.dispose(),w.Ha.dispose()):null===(l=S)||void 0===l||l.then((l=>{l.wrapper.dispose(),l.renderer.dispose(),l.Ha.dispose()}));S=null,w=null}const H={DumpData:n,DumpDataAsync:J,DumpFramebuffer:T,Dispose:y};c.Tools.DumpData=n,c.Tools.DumpDataAsync=J,c.Tools.DumpFramebuffer=T},12417:(l,a,N)=>{N.r(a),N.d(a,{CreateScreenshot:()=>M,CreateScreenshotAsync:()=>A,CreateScreenshotUsingRenderTarget:()=>q,CreateScreenshotUsingRenderTargetAsync:()=>b,CreateScreenshotWithResizeAsync:()=>E,ScreenshotTools:()=>I});var U=N(12422),c=N(12495),K=N(12536),Z=N(12394),w=N(12471),S=N(12538),T=N(12564),J=N(12447);class n extends S.i{static _GetDefines(l){if(!l)return null;return l.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(l,a){l?(this._webGPUReady=!0,a.push(Promise.all([N.e(54).then(N.bind(N,14928)),N.e(55).then(N.bind(N,14936))]))):a.push(Promise.all([N.e(56).then(N.bind(N,14944)),N.e(57).then(N.bind(N,14951))]))}constructor(l){const a={...arguments.length>2?arguments[2]:void 0,name:l,Ha:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||T.d.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:n.VertexUrl,fragmentShader:n.FragmentUrl,uniforms:n.Uniforms};super({...a,defines:n._GetDefines(a.Ha)}),this.texelSize=new J.Vector2(0,0)}bind(){let l=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(l),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}n.VertexUrl="fxaa",n.FragmentUrl="fxaa",n.Uniforms=["texelSize"];class y extends K.c{getClassName(){return"FxaaPostProcess"}constructor(l,a){let N=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,c=arguments.length>3?arguments[3]:void 0,K=arguments.length>4?arguments[4]:void 0,Z=arguments.length>5?arguments[5]:void 0,w=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const S={uniforms:n.Uniforms,size:"number"===typeof a?a:void 0,camera:N,samplingMode:c||U.e.BILINEAR_SAMPLINGMODE,Ha:K,reusable:Z,textureType:w,...a};super(l,n.FragmentUrl,{effectWrapper:"number"!==typeof a&&a.effectWrapper?void 0:new n(l,K,S),...S}),this.onApplyObservable.add((l=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(l,a,N,U){return w.c.Parse((()=>new y(l.name,l.options,a,l.renderTargetSamplingMode,N.getEngine(),l.reusable)),l,N,U)}}(0,Z.g)("BABYLON.FxaaPostProcess",y);var H=N(12268),u=N(12254),W=N(12664),B=N(12668),Y=N(12328);let C=null;function M(l,a,N,U){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",K=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Z=arguments.length>6?arguments[6]:void 0,w=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:S,width:T}=z(l,a,N);if(!S||!T)return void H.b.Error("Invalid 'size' parameter !");a.bl().activeCamera===a?l.onEndFrameObservable.addOnce((()=>{C||(C=document.createElement("canvas")),C.width=T,C.height=S;const a=C.getContext("2d"),N=l.getRenderingCanvas();if(!a||!N)return void H.b.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const J=N.width,n=N.height,y=C.width,W=C.height,B=y/J,Y=W/n,M=w?Math.max(B,Y):Math.min(B,Y),A=J*M,E=n*M,q=(y-A)/2,b=(W-E)/2;a.drawImage(N,0,0,J,n,q,b,A,E),K?(u.Tools.EncodeScreenshotCanvasData(C,void 0,c,void 0,Z),U&&U("")):u.Tools.EncodeScreenshotCanvasData(C,U,c,void 0,Z)})):q(l,a,N,(l=>{if(K){const a=new Blob([l]);u.Tools.DownloadBlob(a),U&&U("")}else U&&U(l)}),c,1,l.getCreationOptions().antialias,void 0,void 0,void 0,void 0,Z)}async function A(l,a,N){let U=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",c=arguments.length>4?arguments[4]:void 0,K=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((Z,w)=>{M(l,a,N,(l=>{"undefined"!==typeof l?Z(l):w(new Error("Data is undefined"))}),U,void 0,c,K)}))}async function E(l,a,N,U){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",K=arguments.length>5?arguments[5]:void 0,Z=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((w=>{M(l,a,{width:N,height:U},(()=>{w()}),c,!0,K,Z)}))}function q(l,a,K,Z){let w=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",S=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,T=arguments.length>6&&void 0!==arguments[6]&&arguments[6],J=arguments.length>7?arguments[7]:void 0,n=arguments.length>8&&void 0!==arguments[8]&&arguments[8],u=arguments.length>9&&void 0!==arguments[9]&&arguments[9],C=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],M=arguments.length>11?arguments[11]:void 0,A=arguments.length>12?arguments[12]:void 0,E=arguments.length>13?arguments[13]:void 0;const{height:q,width:b,finalWidth:I,finalHeight:t}=z(l,a,K),O={width:b,height:q};if(!q||!b)return void H.b.Error("Invalid 'size' parameter !");l.skipFrameRender=!0;const h=l.getRenderWidth,i=l.getRenderHeight;l.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&l._currentRenderTarget?l._currentRenderTarget.width:b},l.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&l._currentRenderTarget?l._currentRenderTarget.height:q},l.onResizeObservable.hasObservers()&&l.onResizeObservable.notifyObservers(l);const k=a.bl(),Q=new c.e("screenShot",O,k,!1,!1,0,!1,U.e.BILINEAR_SAMPLINGMODE,void 0,u,void 0,void 0,void 0,S);Q.renderList=k.meshes.slice(),Q.samples=S,Q.renderSprites=n,Q.activeCamera=a,Q.forceLayerMaskCheck=C,null===A||void 0===A||A(Q);const j=E||W.DumpData,f=()=>{k.incrementRenderId(),k.resetCachedMaterial(),(0,Y.d)((()=>Q.isReadyForRendering()&&a.isReady(!0)),(()=>{l.onEndFrameObservable.addOnce((()=>{I===b&&t===q?Q.readPixels(void 0,void 0,void 0,!1).then((l=>{j(b,q,l,Z,w,J,!0,void 0,M),Q.dispose()})):(l.isWebGPU?N.e(51).then(N.bind(N,14912)):N.e(52).then(N.bind(N,14917))).then((async()=>await(0,B.d)("pass",Q.getInternalTexture(),k,void 0,void 0,void 0,I,t).then((a=>{l._readTexturePixels(a,I,t,-1,0,null,!0,!1,0,0).then((l=>{j(I,t,l,Z,w,J,!0,void 0,M),a.dispose()}))}))))})),k.incrementRenderId(),k.resetCachedMaterial();const U=k.activeCamera,c=k.activeCameras,K=a.outputRenderTarget,S=k.spritesEnabled;k.activeCamera=a,k.activeCameras=null,a.outputRenderTarget=Q,k.spritesEnabled=n;const T=k.meshes;k.meshes=Q.renderList||k.meshes;try{k.render()}finally{k.activeCamera=U,k.activeCameras=c,a.outputRenderTarget=K,k.spritesEnabled=S,k.meshes=T,l.getRenderWidth=h,l.getRenderHeight=i,l.onResizeObservable.hasObservers()&&l.onResizeObservable.notifyObservers(l),a.getProjectionMatrix(!0),l.skipFrameRender=!1}}),(()=>{l.skipFrameRender=!1,l.getRenderWidth=h,l.getRenderHeight=i}))};if(T){const l=new y("antialiasing",1,k.activeCamera);Q.addPostProcess(l),l.uc=!0,l.onEffectCreatedObservable.addOnce((l=>{l.isReady()?f():l.onCompiled=()=>{f()}}))}else f()}async function b(l,a,N){let U=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,K=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Z=arguments.length>6?arguments[6]:void 0,w=arguments.length>7&&void 0!==arguments[7]&&arguments[7],S=arguments.length>8&&void 0!==arguments[8]&&arguments[8],T=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],J=arguments.length>10?arguments[10]:void 0,n=arguments.length>11?arguments[11]:void 0,y=arguments.length>12?arguments[12]:void 0;return await new Promise(((H,u)=>{q(l,a,N,(l=>{"undefined"!==typeof l?H(l):u(new Error("Data is undefined"))}),U,c,K,Z,w,S,T,J,n,y)}))}function z(l,a,N){let U=0,c=0,K=0,Z=0;if("object"===typeof N){const w=N.precision?Math.abs(N.precision):1;N.width&&N.height?(U=N.height*w,c=N.width*w):N.width&&!N.height?(c=N.width*w,U=Math.round(c/l.getAspectRatio(a))):N.height&&!N.width?(U=N.height*w,c=Math.round(U*l.getAspectRatio(a))):(c=Math.round(l.getRenderWidth()*w),U=Math.round(c/l.getAspectRatio(a))),N.finalWidth&&N.finalHeight?(Z=N.finalHeight,K=N.finalWidth):N.finalWidth&&!N.finalHeight?(K=N.finalWidth,Z=Math.round(K/l.getAspectRatio(a))):N.finalHeight&&!N.finalWidth?(Z=N.finalHeight,K=Math.round(Z*l.getAspectRatio(a))):(K=c,Z=U)}else isNaN(N)||(U=N,c=N,K=N,Z=N);return c&&(c=Math.floor(c)),U&&(U=Math.floor(U)),K&&(K=Math.floor(K)),Z&&(Z=Math.floor(Z)),{height:0|U,width:0|c,finalWidth:0|K,finalHeight:0|Z}}const I={CreateScreenshot:M,CreateScreenshotAsync:A,CreateScreenshotWithResizeAsync:E,CreateScreenshotUsingRenderTarget:q,CreateScreenshotUsingRenderTargetAsync:b};u.Tools.CreateScreenshot=M,u.Tools.CreateScreenshotAsync=A,u.Tools.CreateScreenshotUsingRenderTarget=q,u.Tools.CreateScreenshotUsingRenderTargetAsync=b}}]);