"use strict";(self["686i8587bmi"]=self["686i8587bmi"]||[]).push([[12,20],{12972:(h,d,T)=>{T.r(d),T.d(d,{Dispose:()=>r,DumpData:()=>S,DumpDataAsync:()=>Z,DumpFramebuffer:()=>U,DumpTools:()=>c});var Y=T(12867),y=T(12574),C=T(12787),n=T(12625);let X,F=null;async function U(h,d,T,Y){let y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",C=arguments.length>5?arguments[5]:void 0,n=arguments.length>6?arguments[6]:void 0;const X=await T.readPixels(0,0,h,d);S(h,d,new Uint8Array(X.buffer),Y,y,C,!0,void 0,n)}async function Z(h,d,T){let Y=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",y=arguments.length>4?arguments[4]:void 0,C=arguments.length>5&&void 0!==arguments[5]&&arguments[5],n=arguments.length>6&&void 0!==arguments[6]&&arguments[6],X=arguments.length>7?arguments[7]:void 0;return await new Promise((F=>{S(h,d,T,(h=>F(h)),Y,y,C,n,X)}))}function S(h,d,U,Z){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",c=arguments.length>5?arguments[5]:void 0,O=arguments.length>6&&void 0!==arguments[6]&&arguments[6],f=arguments.length>7&&void 0!==arguments[7]&&arguments[7],J=arguments.length>8?arguments[8]:void 0;(async function(){return F||(F=new Promise(((h,d)=>{let y,C=null;const F={o:!0,depth:!1,xd:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(T.bind(T,12890)).then((U=>{let{ThinEngine:Z}=U;const S=n.d.Instances.length;try{y=new OffscreenCanvas(100,100),C=new Z(y,!1,F)}catch(f){var c;S<n.d.Instances.length&&(null===(c=n.d.Instances.pop())||void 0===c||c.dispose()),y=document.createElement("canvas"),C=new Z(y,!1,F)}n.d.Instances.pop(),n.d.OnEnginesDisposedObservable.add((h=>{C&&h!==C&&!C.U&&0===n.d.Instances.length&&r()})),C.getCaps().parallelShaderCompile=void 0;const O=new Y.d(C);T.e(52).then(T.bind(T,15286)).then((T=>{let{passPixelShader:n}=T;if(!C)return void d("Engine is not defined");const F=new Y.h({Hd:C,name:n.name,fragmentShader:n.shader,samplerNames:["textureSampler"]});X={canvas:y,Hd:C,renderer:O,wrapper:F},h(X)}))})).catch(d)}))),await F})().then((T=>{if(T.Hd.setSize(h,d,!0),U instanceof Float32Array){const h=new Uint8Array(U.length);let d=U.length;for(;d--;){const T=U[d];h[d]=Math.round(255*(0,C.Clamp)(T))}U=h}const Y=T.Hd.createRawTexture(U,h,d,5,!1,!O,1);T.renderer.setViewport(),T.renderer.applyEffectWrapper(T.wrapper),T.wrapper.effect._bindTexture("textureSampler",Y),T.renderer.draw(),f?y.Tools.ToBlob(T.canvas,(h=>{const d=new FileReader;d.onload=h=>{const d=h.target.result;Z&&Z(d)},d.readAsArrayBuffer(h)}),S,J):y.Tools.EncodeScreenshotCanvasData(T.canvas,Z,S,c,J),Y.dispose()}))}function r(){var h;X?(X.wrapper.dispose(),X.renderer.dispose(),X.Hd.dispose()):null===(h=F)||void 0===h||h.then((h=>{h.wrapper.dispose(),h.renderer.dispose(),h.Hd.dispose()}));F=null,X=null}const c={DumpData:S,DumpDataAsync:Z,DumpFramebuffer:U,Dispose:r};y.Tools.DumpData=S,y.Tools.DumpDataAsync=Z,y.Tools.DumpFramebuffer=U},12732:(h,d,T)=>{T.r(d),T.d(d,{CreateScreenshot:()=>D,CreateScreenshotAsync:()=>V,CreateScreenshotUsingRenderTarget:()=>w,CreateScreenshotUsingRenderTargetAsync:()=>s,CreateScreenshotWithResizeAsync:()=>i,ScreenshotTools:()=>z});var Y=T(12741),y=T(12826),C=T(12864),n=T(12714),X=T(12801),F=T(12867),U=T(12885),Z=T(12765);class S extends F.h{static _GetDefines(h){if(!h)return null;return h.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(h,d){h?(this._webGPUReady=!0,d.push(Promise.all([T.e(54).then(T.bind(T,15292)),T.e(55).then(T.bind(T,15295))]))):d.push(Promise.all([T.e(56).then(T.bind(T,15301)),T.e(57).then(T.bind(T,15307))]))}constructor(h){const d={...arguments.length>2?arguments[2]:void 0,name:h,Hd:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||U.b.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:S.VertexUrl,fragmentShader:S.FragmentUrl,uniforms:S.Uniforms};super({...d,defines:S._GetDefines(d.Hd)}),this.texelSize=new Z.Vector2(0,0)}bind(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(h),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}S.VertexUrl="fxaa",S.FragmentUrl="fxaa",S.Uniforms=["texelSize"];class r extends C.b{getClassName(){return"FxaaPostProcess"}constructor(h,d){let T=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,y=arguments.length>3?arguments[3]:void 0,C=arguments.length>4?arguments[4]:void 0,n=arguments.length>5?arguments[5]:void 0,X=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const F={uniforms:S.Uniforms,size:"number"===typeof d?d:void 0,camera:T,samplingMode:y||Y.c.BILINEAR_SAMPLINGMODE,Hd:C,reusable:n,textureType:X,...d};super(h,S.FragmentUrl,{effectWrapper:"number"!==typeof d&&d.effectWrapper?void 0:new S(h,C,F),...F}),this.onApplyObservable.add((h=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(h,d,T,Y){return X.e.Parse((()=>new r(h.name,h.options,d,h.renderTargetSamplingMode,T.getEngine(),h.reusable)),h,T,Y)}}(0,n.e)("BABYLON.FxaaPostProcess",r);var c=T(12596),O=T(12574),f=T(12972),J=T(12979),W=T(12651);let L=null;function D(h,d,T,Y){let y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",C=arguments.length>5&&void 0!==arguments[5]&&arguments[5],n=arguments.length>6?arguments[6]:void 0,X=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:F,width:U}=E(h,d,T);if(!F||!U)return void c.c.Error("Invalid 'size' parameter !");d.Eh().activeCamera===d?h.onEndFrameObservable.addOnce((()=>{L||(L=document.createElement("canvas")),L.width=U,L.height=F;const d=L.getContext("2d"),T=h.getRenderingCanvas();if(!d||!T)return void c.c.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const Z=T.width,S=T.height,r=L.width,f=L.height,J=r/Z,W=f/S,D=X?Math.max(J,W):Math.min(J,W),V=Z*D,i=S*D,w=(r-V)/2,s=(f-i)/2;d.drawImage(T,0,0,Z,S,w,s,V,i),C?(O.Tools.EncodeScreenshotCanvasData(L,void 0,y,void 0,n),Y&&Y("")):O.Tools.EncodeScreenshotCanvasData(L,Y,y,void 0,n)})):w(h,d,T,(h=>{if(C){const d=new Blob([h]);O.Tools.DownloadBlob(d),Y&&Y("")}else Y&&Y(h)}),y,1,h.getCreationOptions().antialias,void 0,void 0,void 0,void 0,n)}async function V(h,d,T){let Y=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",y=arguments.length>4?arguments[4]:void 0,C=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((n,X)=>{D(h,d,T,(h=>{"undefined"!==typeof h?n(h):X(new Error("Data is undefined"))}),Y,void 0,y,C)}))}async function i(h,d,T,Y){let y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",C=arguments.length>5?arguments[5]:void 0,n=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((X=>{D(h,d,{width:T,height:Y},(()=>{X()}),y,!0,C,n)}))}function w(h,d,C,n){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",F=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,U=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Z=arguments.length>7?arguments[7]:void 0,S=arguments.length>8&&void 0!==arguments[8]&&arguments[8],O=arguments.length>9&&void 0!==arguments[9]&&arguments[9],L=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],D=arguments.length>11?arguments[11]:void 0,V=arguments.length>12?arguments[12]:void 0,i=arguments.length>13?arguments[13]:void 0;const{height:w,width:s,finalWidth:z,finalHeight:x}=E(h,d,C),g={width:s,height:w};if(!w||!s)return void c.c.Error("Invalid 'size' parameter !");h.skipFrameRender=!0;const H=h.getRenderWidth,p=h.getRenderHeight;h.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&h._currentRenderTarget?h._currentRenderTarget.width:s},h.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&h._currentRenderTarget?h._currentRenderTarget.height:w},h.onResizeObservable.hasObservers()&&h.onResizeObservable.notifyObservers(h);const k=d.Eh(),o=new y.d("screenShot",g,k,!1,!1,0,!1,Y.c.BILINEAR_SAMPLINGMODE,void 0,O,void 0,void 0,void 0,F);o.renderList=k.meshes.slice(),o.samples=F,o.renderSprites=S,o.activeCamera=d,o.forceLayerMaskCheck=L,null===V||void 0===V||V(o);const u=i||f.DumpData,N=()=>{k.incrementRenderId(),k.resetCachedMaterial(),(0,W.d)((()=>o.isReadyForRendering()&&d.isReady(!0)),(()=>{h.onEndFrameObservable.addOnce((()=>{z===s&&x===w?o.readPixels(void 0,void 0,void 0,!1).then((h=>{u(s,w,h,n,X,Z,!0,void 0,D),o.dispose()})):(h.isWebGPU?T.e(51).then(T.bind(T,15280)):T.e(52).then(T.bind(T,15286))).then((async()=>await(0,J.c)("pass",o.getInternalTexture(),k,void 0,void 0,void 0,z,x).then((d=>{h._readTexturePixels(d,z,x,-1,0,null,!0,!1,0,0).then((h=>{u(z,x,h,n,X,Z,!0,void 0,D),d.dispose()}))}))))})),k.incrementRenderId(),k.resetCachedMaterial();const Y=k.activeCamera,y=k.activeCameras,C=d.outputRenderTarget,F=k.spritesEnabled;k.activeCamera=d,k.activeCameras=null,d.outputRenderTarget=o,k.spritesEnabled=S;const U=k.meshes;k.meshes=o.renderList||k.meshes;try{k.render()}finally{k.activeCamera=Y,k.activeCameras=y,d.outputRenderTarget=C,k.spritesEnabled=F,k.meshes=U,h.getRenderWidth=H,h.getRenderHeight=p,h.onResizeObservable.hasObservers()&&h.onResizeObservable.notifyObservers(h),d.getProjectionMatrix(!0),h.skipFrameRender=!1}}),(()=>{h.skipFrameRender=!1,h.getRenderWidth=H,h.getRenderHeight=p}))};if(U){const h=new r("antialiasing",1,k.activeCamera);o.addPostProcess(h),h.Kd=!0,h.onEffectCreatedObservable.addOnce((h=>{h.isReady()?N():h.onCompiled=()=>{N()}}))}else N()}async function s(h,d,T){let Y=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,C=arguments.length>5&&void 0!==arguments[5]&&arguments[5],n=arguments.length>6?arguments[6]:void 0,X=arguments.length>7&&void 0!==arguments[7]&&arguments[7],F=arguments.length>8&&void 0!==arguments[8]&&arguments[8],U=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],Z=arguments.length>10?arguments[10]:void 0,S=arguments.length>11?arguments[11]:void 0,r=arguments.length>12?arguments[12]:void 0;return await new Promise(((c,O)=>{w(h,d,T,(h=>{"undefined"!==typeof h?c(h):O(new Error("Data is undefined"))}),Y,y,C,n,X,F,U,Z,S,r)}))}function E(h,d,T){let Y=0,y=0,C=0,n=0;if("object"===typeof T){const X=T.precision?Math.abs(T.precision):1;T.width&&T.height?(Y=T.height*X,y=T.width*X):T.width&&!T.height?(y=T.width*X,Y=Math.round(y/h.getAspectRatio(d))):T.height&&!T.width?(Y=T.height*X,y=Math.round(Y*h.getAspectRatio(d))):(y=Math.round(h.getRenderWidth()*X),Y=Math.round(y/h.getAspectRatio(d))),T.finalWidth&&T.finalHeight?(n=T.finalHeight,C=T.finalWidth):T.finalWidth&&!T.finalHeight?(C=T.finalWidth,n=Math.round(C/h.getAspectRatio(d))):T.finalHeight&&!T.finalWidth?(n=T.finalHeight,C=Math.round(n*h.getAspectRatio(d))):(C=y,n=Y)}else isNaN(T)||(Y=T,y=T,C=T,n=T);return y&&(y=Math.floor(y)),Y&&(Y=Math.floor(Y)),C&&(C=Math.floor(C)),n&&(n=Math.floor(n)),{height:0|Y,width:0|y,finalWidth:0|C,finalHeight:0|n}}const z={CreateScreenshot:D,CreateScreenshotAsync:V,CreateScreenshotWithResizeAsync:i,CreateScreenshotUsingRenderTarget:w,CreateScreenshotUsingRenderTargetAsync:s};O.Tools.CreateScreenshot=D,O.Tools.CreateScreenshotAsync=V,O.Tools.CreateScreenshotUsingRenderTarget=w,O.Tools.CreateScreenshotUsingRenderTargetAsync=s}}]);