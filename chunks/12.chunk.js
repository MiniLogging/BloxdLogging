"use strict";(self.c2c3ycupenc=self.c2c3ycupenc||[]).push([[12,20],{11905:(c,r,D)=>{D.r(r),D.d(r,{Dispose:()=>m,DumpData:()=>E,DumpDataAsync:()=>M,DumpFramebuffer:()=>x,DumpTools:()=>Y});var W=D(11771),B=D(11487),t=D(11696),u=D(11538);let a,H=null;async function x(c,r,D,W){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",t=arguments.length>5?arguments[5]:void 0,u=arguments.length>6?arguments[6]:void 0;const a=await D.readPixels(0,0,c,r);E(c,r,new Uint8Array(a.buffer),W,B,t,!0,void 0,u)}async function M(c,r,D){let W=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",B=arguments.length>4?arguments[4]:void 0,t=arguments.length>5&&void 0!==arguments[5]&&arguments[5],u=arguments.length>6&&void 0!==arguments[6]&&arguments[6],a=arguments.length>7?arguments[7]:void 0;return await new Promise((H=>{E(c,r,D,(c=>H(c)),W,B,t,u,a)}))}function E(c,r,x,M){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Y=arguments.length>5?arguments[5]:void 0,v=arguments.length>6&&void 0!==arguments[6]&&arguments[6],k=arguments.length>7&&void 0!==arguments[7]&&arguments[7],w=arguments.length>8?arguments[8]:void 0;(async function(){return H||(H=new Promise(((c,r)=>{let B,t=null;const H={aa:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(D.bind(D,11797)).then((x=>{let{ThinEngine:M}=x;const E=u.c.Instances.length;try{B=new OffscreenCanvas(100,100),t=new M(B,!1,H)}catch(k){var Y;E<u.c.Instances.length&&(null===(Y=u.c.Instances.pop())||void 0===Y||Y.dispose()),B=document.createElement("canvas"),t=new M(B,!1,H)}u.c.Instances.pop(),u.c.OnEnginesDisposedObservable.add((c=>{t&&c!==t&&!t.M&&0===u.c.Instances.length&&m()})),t.getCaps().parallelShaderCompile=void 0;const v=new W.d(t);D.e(52).then(D.bind(D,14155)).then((D=>{let{passPixelShader:u}=D;if(!t)return void r("Engine is not defined");const H=new W.e({wr:t,name:u.name,fragmentShader:u.shader,samplerNames:["textureSampler"]});a={canvas:B,wr:t,renderer:v,wrapper:H},c(a)}))})).catch(r)}))),await H})().then((D=>{if(D.wr.setSize(c,r,!0),x instanceof Float32Array){const c=new Uint8Array(x.length);let r=x.length;for(;r--;){const D=x[r];c[r]=Math.round(255*(0,t.Clamp)(D))}x=c}const W=D.wr.createRawTexture(x,c,r,5,!1,!v,1);D.renderer.setViewport(),D.renderer.applyEffectWrapper(D.wrapper),D.wrapper.effect._bindTexture("textureSampler",W),D.renderer.draw(),k?B.Tools.ToBlob(D.canvas,(c=>{const r=new FileReader;r.onload=c=>{const r=c.target.result;M&&M(r)},r.readAsArrayBuffer(c)}),E,w):B.Tools.EncodeScreenshotCanvasData(D.canvas,M,E,Y,w),W.dispose()}))}function m(){var c;a?(a.wrapper.dispose(),a.renderer.dispose(),a.wr.dispose()):null===(c=H)||void 0===c||c.then((c=>{c.wrapper.dispose(),c.renderer.dispose(),c.wr.dispose()}));H=null,a=null}const Y={DumpData:E,DumpDataAsync:M,DumpFramebuffer:x,Dispose:m};B.Tools.DumpData=E,B.Tools.DumpDataAsync=M,B.Tools.DumpFramebuffer=x},11652:(c,r,D)=>{D.r(r),D.d(r,{CreateScreenshot:()=>q,CreateScreenshotAsync:()=>j,CreateScreenshotUsingRenderTarget:()=>e,CreateScreenshotUsingRenderTargetAsync:()=>y,CreateScreenshotWithResizeAsync:()=>X,ScreenshotTools:()=>N});var W=D(11656),B=D(11737),t=D(11768),u=D(11637),a=D(11717),H=D(11771),x=D(11792),M=D(11683);class E extends H.e{static _GetDefines(c){if(!c)return null;return c.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(c,r){c?(this._webGPUReady=!0,r.push(Promise.all([D.e(54).then(D.bind(D,14166)),D.e(55).then(D.bind(D,14174))]))):r.push(Promise.all([D.e(56).then(D.bind(D,14179)),D.e(57).then(D.bind(D,14183))]))}constructor(c){const r={...arguments.length>2?arguments[2]:void 0,name:c,wr:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||x.b.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:E.VertexUrl,fragmentShader:E.FragmentUrl,uniforms:E.Uniforms};super({...r,defines:E._GetDefines(r.wr)}),this.texelSize=new M.Vector2(0,0)}bind(){let c=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(c),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}E.VertexUrl="fxaa",E.FragmentUrl="fxaa",E.Uniforms=["texelSize"];class m extends t.e{getClassName(){return"FxaaPostProcess"}constructor(c,r){let D=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,B=arguments.length>3?arguments[3]:void 0,t=arguments.length>4?arguments[4]:void 0,u=arguments.length>5?arguments[5]:void 0,a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const H={uniforms:E.Uniforms,size:"number"===typeof r?r:void 0,camera:D,samplingMode:B||W.b.BILINEAR_SAMPLINGMODE,wr:t,reusable:u,textureType:a,...r};super(c,E.FragmentUrl,{effectWrapper:"number"!==typeof r&&r.effectWrapper?void 0:new E(c,t,H),...H}),this.onApplyObservable.add((c=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(c,r,D,W){return a.d.Parse((()=>new m(c.name,c.options,r,c.renderTargetSamplingMode,D.getEngine(),c.reusable)),c,D,W)}}(0,u.e)("BABYLON.FxaaPostProcess",m);var Y=D(11509),v=D(11487),k=D(11905),w=D(11907),Z=D(11581);let J=null;function q(c,r,D,W){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",t=arguments.length>5&&void 0!==arguments[5]&&arguments[5],u=arguments.length>6?arguments[6]:void 0,a=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:H,width:x}=U(c,r,D);if(!H||!x)return void Y.e.Error("Invalid 'size' parameter !");r.yc().activeCamera===r?c.onEndFrameObservable.addOnce((()=>{J||(J=document.createElement("canvas")),J.width=x,J.height=H;const r=J.getContext("2d"),D=c.getRenderingCanvas();if(!r||!D)return void Y.e.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const M=D.width,E=D.height,m=J.width,k=J.height,w=m/M,Z=k/E,q=a?Math.max(w,Z):Math.min(w,Z),j=M*q,X=E*q,e=(m-j)/2,y=(k-X)/2;r.drawImage(D,0,0,M,E,e,y,j,X),t?(v.Tools.EncodeScreenshotCanvasData(J,void 0,B,void 0,u),W&&W("")):v.Tools.EncodeScreenshotCanvasData(J,W,B,void 0,u)})):e(c,r,D,(c=>{if(t){const r=new Blob([c]);v.Tools.DownloadBlob(r),W&&W("")}else W&&W(c)}),B,1,c.getCreationOptions().antialias,void 0,void 0,void 0,void 0,u)}async function j(c,r,D){let W=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",B=arguments.length>4?arguments[4]:void 0,t=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((u,a)=>{q(c,r,D,(c=>{"undefined"!==typeof c?u(c):a(new Error("Data is undefined"))}),W,void 0,B,t)}))}async function X(c,r,D,W){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",t=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((a=>{q(c,r,{width:D,height:W},(()=>{a()}),B,!0,t,u)}))}function e(c,r,t,u){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",H=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,x=arguments.length>6&&void 0!==arguments[6]&&arguments[6],M=arguments.length>7?arguments[7]:void 0,E=arguments.length>8&&void 0!==arguments[8]&&arguments[8],v=arguments.length>9&&void 0!==arguments[9]&&arguments[9],J=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],q=arguments.length>11?arguments[11]:void 0,j=arguments.length>12?arguments[12]:void 0,X=arguments.length>13?arguments[13]:void 0;const{height:e,width:y,finalWidth:N,finalHeight:g}=U(c,r,t),z={width:y,height:e};if(!e||!y)return void Y.e.Error("Invalid 'size' parameter !");c.skipFrameRender=!0;const S=c.getRenderWidth,K=c.getRenderHeight;c.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&c._currentRenderTarget?c._currentRenderTarget.width:y},c.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&c._currentRenderTarget?c._currentRenderTarget.height:e},c.onResizeObservable.hasObservers()&&c.onResizeObservable.notifyObservers(c);const f=r.yc(),A=new B.b("screenShot",z,f,!1,!1,0,!1,W.b.BILINEAR_SAMPLINGMODE,void 0,v,void 0,void 0,void 0,H);A.renderList=f.meshes.slice(),A.samples=H,A.renderSprites=E,A.activeCamera=r,A.forceLayerMaskCheck=J,null===j||void 0===j||j(A);const h=X||k.DumpData,L=()=>{f.incrementRenderId(),f.resetCachedMaterial(),(0,Z.f)((()=>A.isReadyForRendering()&&r.isReady(!0)),(()=>{c.onEndFrameObservable.addOnce((()=>{N===y&&g===e?A.readPixels(void 0,void 0,void 0,!1).then((c=>{h(y,e,c,u,a,M,!0,void 0,q),A.dispose()})):(c.isWebGPU?D.e(51).then(D.bind(D,14151)):D.e(52).then(D.bind(D,14155))).then((async()=>await(0,w.e)("pass",A.getInternalTexture(),f,void 0,void 0,void 0,N,g).then((r=>{c._readTexturePixels(r,N,g,-1,0,null,!0,!1,0,0).then((c=>{h(N,g,c,u,a,M,!0,void 0,q),r.dispose()}))}))))})),f.incrementRenderId(),f.resetCachedMaterial();const W=f.activeCamera,B=f.activeCameras,t=r.outputRenderTarget,H=f.spritesEnabled;f.activeCamera=r,f.activeCameras=null,r.outputRenderTarget=A,f.spritesEnabled=E;const x=f.meshes;f.meshes=A.renderList||f.meshes;try{f.render()}finally{f.activeCamera=W,f.activeCameras=B,r.outputRenderTarget=t,f.spritesEnabled=H,f.meshes=x,c.getRenderWidth=S,c.getRenderHeight=K,c.onResizeObservable.hasObservers()&&c.onResizeObservable.notifyObservers(c),r.getProjectionMatrix(!0),c.skipFrameRender=!1}}),(()=>{c.skipFrameRender=!1,c.getRenderWidth=S,c.getRenderHeight=K}))};if(x){const c=new m("antialiasing",1,f.activeCamera);A.addPostProcess(c),c.Ha=!0,c.onEffectCreatedObservable.addOnce((c=>{c.isReady()?L():c.onCompiled=()=>{L()}}))}else L()}async function y(c,r,D){let W=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,t=arguments.length>5&&void 0!==arguments[5]&&arguments[5],u=arguments.length>6?arguments[6]:void 0,a=arguments.length>7&&void 0!==arguments[7]&&arguments[7],H=arguments.length>8&&void 0!==arguments[8]&&arguments[8],x=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],M=arguments.length>10?arguments[10]:void 0,E=arguments.length>11?arguments[11]:void 0,m=arguments.length>12?arguments[12]:void 0;return await new Promise(((Y,v)=>{e(c,r,D,(c=>{"undefined"!==typeof c?Y(c):v(new Error("Data is undefined"))}),W,B,t,u,a,H,x,M,E,m)}))}function U(c,r,D){let W=0,B=0,t=0,u=0;if("object"===typeof D){const a=D.precision?Math.abs(D.precision):1;D.width&&D.height?(W=D.height*a,B=D.width*a):D.width&&!D.height?(B=D.width*a,W=Math.round(B/c.getAspectRatio(r))):D.height&&!D.width?(W=D.height*a,B=Math.round(W*c.getAspectRatio(r))):(B=Math.round(c.getRenderWidth()*a),W=Math.round(B/c.getAspectRatio(r))),D.finalWidth&&D.finalHeight?(u=D.finalHeight,t=D.finalWidth):D.finalWidth&&!D.finalHeight?(t=D.finalWidth,u=Math.round(t/c.getAspectRatio(r))):D.finalHeight&&!D.finalWidth?(u=D.finalHeight,t=Math.round(u*c.getAspectRatio(r))):(t=B,u=W)}else isNaN(D)||(W=D,B=D,t=D,u=D);return B&&(B=Math.floor(B)),W&&(W=Math.floor(W)),t&&(t=Math.floor(t)),u&&(u=Math.floor(u)),{height:0|W,width:0|B,finalWidth:0|t,finalHeight:0|u}}const N={CreateScreenshot:q,CreateScreenshotAsync:j,CreateScreenshotWithResizeAsync:X,CreateScreenshotUsingRenderTarget:e,CreateScreenshotUsingRenderTargetAsync:y};v.Tools.CreateScreenshot=q,v.Tools.CreateScreenshotAsync=j,v.Tools.CreateScreenshotUsingRenderTarget=e,v.Tools.CreateScreenshotUsingRenderTargetAsync=y}}]);