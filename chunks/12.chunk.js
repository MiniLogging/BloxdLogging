"use strict";(self.irtrrknfyfo=self.irtrrknfyfo||[]).push([[12,20],{11589:(B,E,v)=>{v.r(E),v.d(E,{Dispose:()=>Q,DumpData:()=>y,DumpDataAsync:()=>h,DumpFramebuffer:()=>D,DumpTools:()=>P});var z=v(11471),o=v(11193),q=v(11394),c=v(11242);let S,x=null;async function D(B,E,v,z){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",q=arguments.length>5?arguments[5]:void 0,c=arguments.length>6?arguments[6]:void 0;const S=await v.readPixels(0,0,B,E);y(B,E,new Uint8Array(S.buffer),z,o,q,!0,void 0,c)}async function h(B,E,v){let z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",o=arguments.length>4?arguments[4]:void 0,q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],c=arguments.length>6&&void 0!==arguments[6]&&arguments[6],S=arguments.length>7?arguments[7]:void 0;return await new Promise((x=>{y(B,E,v,(B=>x(B)),z,o,q,c,S)}))}function y(B,E,D,h){let y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",P=arguments.length>5?arguments[5]:void 0,G=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Y=arguments.length>7&&void 0!==arguments[7]&&arguments[7],a=arguments.length>8?arguments[8]:void 0;(async function(){return x||(x=new Promise(((B,E)=>{let o,q=null;const x={zc:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(v.bind(v,11494)).then((D=>{let{ThinEngine:h}=D;const y=c.b.Instances.length;try{o=new OffscreenCanvas(100,100),q=new h(o,!1,x)}catch(Y){var P;y<c.b.Instances.length&&(null===(P=c.b.Instances.pop())||void 0===P||P.dispose()),o=document.createElement("canvas"),q=new h(o,!1,x)}c.b.Instances.pop(),c.b.OnEnginesDisposedObservable.add((B=>{q&&B!==q&&!q.P&&0===c.b.Instances.length&&Q()})),q.getCaps().parallelShaderCompile=void 0;const G=new z.e(q);v.e(52).then(v.bind(v,13842)).then((v=>{let{passPixelShader:c}=v;if(!q)return void E("Engine is not defined");const x=new z.f({PE:q,name:c.name,fragmentShader:c.shader,samplerNames:["textureSampler"]});S={canvas:o,PE:q,renderer:G,wrapper:x},B(S)}))})).catch(E)}))),await x})().then((v=>{if(v.PE.setSize(B,E,!0),D instanceof Float32Array){const B=new Uint8Array(D.length);let E=D.length;for(;E--;){const v=D[E];B[E]=Math.round(255*(0,q.Clamp)(v))}D=B}const z=v.PE.createRawTexture(D,B,E,5,!1,!G,1);v.renderer.setViewport(),v.renderer.applyEffectWrapper(v.wrapper),v.wrapper.effect._bindTexture("textureSampler",z),v.renderer.draw(),Y?o.Tools.ToBlob(v.canvas,(B=>{const E=new FileReader;E.onload=B=>{const E=B.target.result;h&&h(E)},E.readAsArrayBuffer(B)}),y,a):o.Tools.EncodeScreenshotCanvasData(v.canvas,h,y,P,a),z.dispose()}))}function Q(){var B;S?(S.wrapper.dispose(),S.renderer.dispose(),S.PE.dispose()):null===(B=x)||void 0===B||B.then((B=>{B.wrapper.dispose(),B.renderer.dispose(),B.PE.dispose()}));x=null,S=null}const P={DumpData:y,DumpDataAsync:h,DumpFramebuffer:D,Dispose:Q};o.Tools.DumpData=y,o.Tools.DumpDataAsync=h,o.Tools.DumpFramebuffer=D},11355:(B,E,v)=>{v.r(E),v.d(E,{CreateScreenshot:()=>V,CreateScreenshotAsync:()=>T,CreateScreenshotUsingRenderTarget:()=>X,CreateScreenshotUsingRenderTargetAsync:()=>r,CreateScreenshotWithResizeAsync:()=>N,ScreenshotTools:()=>u});var z=v(11361),o=v(11434),q=v(11463),c=v(11345),S=v(11409),x=v(11471),D=v(11492),h=v(11380);class y extends x.f{static _GetDefines(B){if(!B)return null;return B.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(B,E){B?(this._webGPUReady=!0,E.push(Promise.all([v.e(54).then(v.bind(v,13852)),v.e(55).then(v.bind(v,13854))]))):E.push(Promise.all([v.e(56).then(v.bind(v,13863)),v.e(57).then(v.bind(v,13866))]))}constructor(B){const E={...arguments.length>2?arguments[2]:void 0,name:B,PE:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||D.c.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:y.VertexUrl,fragmentShader:y.FragmentUrl,uniforms:y.Uniforms};super({...E,defines:y._GetDefines(E.PE)}),this.texelSize=new h.Vector2(0,0)}bind(){let B=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(B),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}y.VertexUrl="fxaa",y.FragmentUrl="fxaa",y.Uniforms=["texelSize"];class Q extends q.c{getClassName(){return"FxaaPostProcess"}constructor(B,E){let v=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3?arguments[3]:void 0,q=arguments.length>4?arguments[4]:void 0,c=arguments.length>5?arguments[5]:void 0,S=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const x={uniforms:y.Uniforms,size:"number"===typeof E?E:void 0,camera:v,samplingMode:o||z.b.BILINEAR_SAMPLINGMODE,PE:q,reusable:c,textureType:S,...E};super(B,y.FragmentUrl,{effectWrapper:"number"!==typeof E&&E.effectWrapper?void 0:new y(B,q,x),...x}),this.onApplyObservable.add((B=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(B,E,v,z){return S.b.Parse((()=>new Q(B.name,B.options,E,B.renderTargetSamplingMode,v.getEngine(),B.reusable)),B,v,z)}}(0,c.f)("BABYLON.FxaaPostProcess",Q);var P=v(11213),G=v(11193),Y=v(11589),a=v(11594),m=v(11278);let g=null;function V(B,E,v,z){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],c=arguments.length>6?arguments[6]:void 0,S=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:x,width:D}=i(B,E,v);if(!x||!D)return void P.c.Error("Invalid 'size' parameter !");E.rB().activeCamera===E?B.onEndFrameObservable.addOnce((()=>{g||(g=document.createElement("canvas")),g.width=D,g.height=x;const E=g.getContext("2d"),v=B.getRenderingCanvas();if(!E||!v)return void P.c.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const h=v.width,y=v.height,Q=g.width,Y=g.height,a=Q/h,m=Y/y,V=S?Math.max(a,m):Math.min(a,m),T=h*V,N=y*V,X=(Q-T)/2,r=(Y-N)/2;E.drawImage(v,0,0,h,y,X,r,T,N),q?(G.Tools.EncodeScreenshotCanvasData(g,void 0,o,void 0,c),z&&z("")):G.Tools.EncodeScreenshotCanvasData(g,z,o,void 0,c)})):X(B,E,v,(B=>{if(q){const E=new Blob([B]);G.Tools.DownloadBlob(E),z&&z("")}else z&&z(B)}),o,1,B.getCreationOptions().antialias,void 0,void 0,void 0,void 0,c)}async function T(B,E,v){let z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",o=arguments.length>4?arguments[4]:void 0,q=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((c,S)=>{V(B,E,v,(B=>{"undefined"!==typeof B?c(B):S(new Error("Data is undefined"))}),z,void 0,o,q)}))}async function N(B,E,v,z){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",q=arguments.length>5?arguments[5]:void 0,c=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((S=>{V(B,E,{width:v,height:z},(()=>{S()}),o,!0,q,c)}))}function X(B,E,q,c){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",x=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,D=arguments.length>6&&void 0!==arguments[6]&&arguments[6],h=arguments.length>7?arguments[7]:void 0,y=arguments.length>8&&void 0!==arguments[8]&&arguments[8],G=arguments.length>9&&void 0!==arguments[9]&&arguments[9],g=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],V=arguments.length>11?arguments[11]:void 0,T=arguments.length>12?arguments[12]:void 0,N=arguments.length>13?arguments[13]:void 0;const{height:X,width:r,finalWidth:u,finalHeight:I}=i(B,E,q),K={width:r,height:X};if(!X||!r)return void P.c.Error("Invalid 'size' parameter !");B.skipFrameRender=!0;const C=B.getRenderWidth,f=B.getRenderHeight;B.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&B._currentRenderTarget?B._currentRenderTarget.width:r},B.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&B._currentRenderTarget?B._currentRenderTarget.height:X},B.onResizeObservable.hasObservers()&&B.onResizeObservable.notifyObservers(B);const A=E.rB(),l=new o.d("screenShot",K,A,!1,!1,0,!1,z.b.BILINEAR_SAMPLINGMODE,void 0,G,void 0,void 0,void 0,x);l.renderList=A.meshes.slice(),l.samples=x,l.renderSprites=y,l.activeCamera=E,l.forceLayerMaskCheck=g,null===T||void 0===T||T(l);const d=N||Y.DumpData,t=()=>{A.incrementRenderId(),A.resetCachedMaterial(),(0,m.f)((()=>l.isReadyForRendering()&&E.isReady(!0)),(()=>{B.onEndFrameObservable.addOnce((()=>{u===r&&I===X?l.readPixels(void 0,void 0,void 0,!1).then((B=>{d(r,X,B,c,S,h,!0,void 0,V),l.dispose()})):(B.isWebGPU?v.e(51).then(v.bind(v,13836)):v.e(52).then(v.bind(v,13842))).then((async()=>await(0,a.d)("pass",l.getInternalTexture(),A,void 0,void 0,void 0,u,I).then((E=>{B._readTexturePixels(E,u,I,-1,0,null,!0,!1,0,0).then((B=>{d(u,I,B,c,S,h,!0,void 0,V),E.dispose()}))}))))})),A.incrementRenderId(),A.resetCachedMaterial();const z=A.activeCamera,o=A.activeCameras,q=E.outputRenderTarget,x=A.spritesEnabled;A.activeCamera=E,A.activeCameras=null,E.outputRenderTarget=l,A.spritesEnabled=y;const D=A.meshes;A.meshes=l.renderList||A.meshes;try{A.render()}finally{A.activeCamera=z,A.activeCameras=o,E.outputRenderTarget=q,A.spritesEnabled=x,A.meshes=D,B.getRenderWidth=C,B.getRenderHeight=f,B.onResizeObservable.hasObservers()&&B.onResizeObservable.notifyObservers(B),E.getProjectionMatrix(!0),B.skipFrameRender=!1}}),(()=>{B.skipFrameRender=!1,B.getRenderWidth=C,B.getRenderHeight=f}))};if(D){const B=new Q("antialiasing",1,A.activeCamera);l.addPostProcess(B),B.oc=!0,B.onEffectCreatedObservable.addOnce((B=>{B.isReady()?t():B.onCompiled=()=>{t()}}))}else t()}async function r(B,E,v){let z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],c=arguments.length>6?arguments[6]:void 0,S=arguments.length>7&&void 0!==arguments[7]&&arguments[7],x=arguments.length>8&&void 0!==arguments[8]&&arguments[8],D=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],h=arguments.length>10?arguments[10]:void 0,y=arguments.length>11?arguments[11]:void 0,Q=arguments.length>12?arguments[12]:void 0;return await new Promise(((P,G)=>{X(B,E,v,(B=>{"undefined"!==typeof B?P(B):G(new Error("Data is undefined"))}),z,o,q,c,S,x,D,h,y,Q)}))}function i(B,E,v){let z=0,o=0,q=0,c=0;if("object"===typeof v){const S=v.precision?Math.abs(v.precision):1;v.width&&v.height?(z=v.height*S,o=v.width*S):v.width&&!v.height?(o=v.width*S,z=Math.round(o/B.getAspectRatio(E))):v.height&&!v.width?(z=v.height*S,o=Math.round(z*B.getAspectRatio(E))):(o=Math.round(B.getRenderWidth()*S),z=Math.round(o/B.getAspectRatio(E))),v.finalWidth&&v.finalHeight?(c=v.finalHeight,q=v.finalWidth):v.finalWidth&&!v.finalHeight?(q=v.finalWidth,c=Math.round(q/B.getAspectRatio(E))):v.finalHeight&&!v.finalWidth?(c=v.finalHeight,q=Math.round(c*B.getAspectRatio(E))):(q=o,c=z)}else isNaN(v)||(z=v,o=v,q=v,c=v);return o&&(o=Math.floor(o)),z&&(z=Math.floor(z)),q&&(q=Math.floor(q)),c&&(c=Math.floor(c)),{height:0|z,width:0|o,finalWidth:0|q,finalHeight:0|c}}const u={CreateScreenshot:V,CreateScreenshotAsync:T,CreateScreenshotWithResizeAsync:N,CreateScreenshotUsingRenderTarget:X,CreateScreenshotUsingRenderTargetAsync:r};G.Tools.CreateScreenshot=V,G.Tools.CreateScreenshotAsync=T,G.Tools.CreateScreenshotUsingRenderTarget=X,G.Tools.CreateScreenshotUsingRenderTargetAsync=r}}]);