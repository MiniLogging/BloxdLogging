"use strict";(self.dwifukwnts=self.dwifukwnts||[]).push([[12,20],{11815:(U,X,b)=>{b.r(X),b.d(X,{Dispose:()=>n,DumpData:()=>R,DumpDataAsync:()=>S,DumpFramebuffer:()=>p,DumpTools:()=>a});var F=b(11697),E=b(11385),w=b(11608),Q=b(11442);let z,q=null;async function p(U,X,b,F){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",w=arguments.length>5?arguments[5]:void 0,Q=arguments.length>6?arguments[6]:void 0;const z=await b.readPixels(0,0,U,X);R(U,X,new Uint8Array(z.buffer),F,E,w,!0,void 0,Q)}async function S(U,X,b){let F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",E=arguments.length>4?arguments[4]:void 0,w=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Q=arguments.length>6&&void 0!==arguments[6]&&arguments[6],z=arguments.length>7?arguments[7]:void 0;return await new Promise((q=>{R(U,X,b,(U=>q(U)),F,E,w,Q,z)}))}function R(U,X,p,S){let R=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",a=arguments.length>5?arguments[5]:void 0,J=arguments.length>6&&void 0!==arguments[6]&&arguments[6],m=arguments.length>7&&void 0!==arguments[7]&&arguments[7],x=arguments.length>8?arguments[8]:void 0;(async function(){return q||(q=new Promise(((U,X)=>{let E,w=null;const q={Rb:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(b.bind(b,11726)).then((p=>{let{ThinEngine:S}=p;const R=Q.c.Instances.length;try{E=new OffscreenCanvas(100,100),w=new S(E,!1,q)}catch(m){var a;R<Q.c.Instances.length&&(null===(a=Q.c.Instances.pop())||void 0===a||a.dispose()),E=document.createElement("canvas"),w=new S(E,!1,q)}Q.c.Instances.pop(),Q.c.OnEnginesDisposedObservable.add((U=>{w&&U!==w&&!w.R&&0===Q.c.Instances.length&&n()})),w.getCaps().parallelShaderCompile=void 0;const J=new F.d(w);b.e(52).then(b.bind(b,14069)).then((b=>{let{passPixelShader:Q}=b;if(!w)return void X("Engine is not defined");const q=new F.f({aX:w,name:Q.name,fragmentShader:Q.shader,samplerNames:["textureSampler"]});z={canvas:E,aX:w,renderer:J,wrapper:q},U(z)}))})).catch(X)}))),await q})().then((b=>{if(b.aX.setSize(U,X,!0),p instanceof Float32Array){const U=new Uint8Array(p.length);let X=p.length;for(;X--;){const b=p[X];U[X]=Math.round(255*(0,w.Clamp)(b))}p=U}const F=b.aX.createRawTexture(p,U,X,5,!1,!J,1);b.renderer.setViewport(),b.renderer.applyEffectWrapper(b.wrapper),b.wrapper.effect._bindTexture("textureSampler",F),b.renderer.draw(),m?E.Tools.ToBlob(b.canvas,(U=>{const X=new FileReader;X.onload=U=>{const X=U.target.result;S&&S(X)},X.readAsArrayBuffer(U)}),R,x):E.Tools.EncodeScreenshotCanvasData(b.canvas,S,R,a,x),F.dispose()}))}function n(){var U;z?(z.wrapper.dispose(),z.renderer.dispose(),z.aX.dispose()):null===(U=q)||void 0===U||U.then((U=>{U.wrapper.dispose(),U.renderer.dispose(),U.aX.dispose()}));q=null,z=null}const a={DumpData:R,DumpDataAsync:S,DumpFramebuffer:p,Dispose:n};E.Tools.DumpData=R,E.Tools.DumpDataAsync=S,E.Tools.DumpFramebuffer=p},11564:(U,X,b)=>{b.r(X),b.d(X,{CreateScreenshot:()=>N,CreateScreenshotAsync:()=>u,CreateScreenshotUsingRenderTarget:()=>P,CreateScreenshotUsingRenderTargetAsync:()=>f,CreateScreenshotWithResizeAsync:()=>i,ScreenshotTools:()=>e});var F=b(11570),E=b(11654),w=b(11688),Q=b(11551),z=b(11623),q=b(11697),p=b(11717),S=b(11593);class R extends q.f{static _GetDefines(U){if(!U)return null;return U.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(U,X){U?(this._webGPUReady=!0,X.push(Promise.all([b.e(54).then(b.bind(b,14076)),b.e(55).then(b.bind(b,14082))]))):X.push(Promise.all([b.e(56).then(b.bind(b,14089)),b.e(57).then(b.bind(b,14097))]))}constructor(U){const X={...arguments.length>2?arguments[2]:void 0,name:U,aX:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||p.e.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:R.VertexUrl,fragmentShader:R.FragmentUrl,uniforms:R.Uniforms};super({...X,defines:R._GetDefines(X.aX)}),this.texelSize=new S.Vector2(0,0)}bind(){let U=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(U),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}R.VertexUrl="fxaa",R.FragmentUrl="fxaa",R.Uniforms=["texelSize"];class n extends w.b{getClassName(){return"FxaaPostProcess"}constructor(U,X){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,E=arguments.length>3?arguments[3]:void 0,w=arguments.length>4?arguments[4]:void 0,Q=arguments.length>5?arguments[5]:void 0,z=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const q={uniforms:R.Uniforms,size:"number"===typeof X?X:void 0,camera:b,samplingMode:E||F.c.BILINEAR_SAMPLINGMODE,aX:w,reusable:Q,textureType:z,...X};super(U,R.FragmentUrl,{effectWrapper:"number"!==typeof X&&X.effectWrapper?void 0:new R(U,w,q),...q}),this.onApplyObservable.add((U=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(U,X,b,F){return z.d.Parse((()=>new n(U.name,U.options,X,U.renderTargetSamplingMode,b.getEngine(),U.reusable)),U,b,F)}}(0,Q.f)("BABYLON.FxaaPostProcess",n);var a=b(11408),J=b(11385),m=b(11815),x=b(11821),I=b(11481);let O=null;function N(U,X,b,F){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",w=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Q=arguments.length>6?arguments[6]:void 0,z=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:q,width:p}=j(U,X,b);if(!q||!p)return void a.e.Error("Invalid 'size' parameter !");X.fU().activeCamera===X?U.onEndFrameObservable.addOnce((()=>{O||(O=document.createElement("canvas")),O.width=p,O.height=q;const X=O.getContext("2d"),b=U.getRenderingCanvas();if(!X||!b)return void a.e.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const S=b.width,R=b.height,n=O.width,m=O.height,x=n/S,I=m/R,N=z?Math.max(x,I):Math.min(x,I),u=S*N,i=R*N,P=(n-u)/2,f=(m-i)/2;X.drawImage(b,0,0,S,R,P,f,u,i),w?(J.Tools.EncodeScreenshotCanvasData(O,void 0,E,void 0,Q),F&&F("")):J.Tools.EncodeScreenshotCanvasData(O,F,E,void 0,Q)})):P(U,X,b,(U=>{if(w){const X=new Blob([U]);J.Tools.DownloadBlob(X),F&&F("")}else F&&F(U)}),E,1,U.getCreationOptions().antialias,void 0,void 0,void 0,void 0,Q)}async function u(U,X,b){let F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",E=arguments.length>4?arguments[4]:void 0,w=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((Q,z)=>{N(U,X,b,(U=>{"undefined"!==typeof U?Q(U):z(new Error("Data is undefined"))}),F,void 0,E,w)}))}async function i(U,X,b,F){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",w=arguments.length>5?arguments[5]:void 0,Q=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((z=>{N(U,X,{width:b,height:F},(()=>{z()}),E,!0,w,Q)}))}function P(U,X,w,Q){let z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",q=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,p=arguments.length>6&&void 0!==arguments[6]&&arguments[6],S=arguments.length>7?arguments[7]:void 0,R=arguments.length>8&&void 0!==arguments[8]&&arguments[8],J=arguments.length>9&&void 0!==arguments[9]&&arguments[9],O=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],N=arguments.length>11?arguments[11]:void 0,u=arguments.length>12?arguments[12]:void 0,i=arguments.length>13?arguments[13]:void 0;const{height:P,width:f,finalWidth:e,finalHeight:l}=j(U,X,w),d={width:f,height:P};if(!P||!f)return void a.e.Error("Invalid 'size' parameter !");U.skipFrameRender=!0;const k=U.getRenderWidth,v=U.getRenderHeight;U.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&U._currentRenderTarget?U._currentRenderTarget.width:f},U.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&U._currentRenderTarget?U._currentRenderTarget.height:P},U.onResizeObservable.hasObservers()&&U.onResizeObservable.notifyObservers(U);const A=X.fU(),s=new E.d("screenShot",d,A,!1,!1,0,!1,F.c.BILINEAR_SAMPLINGMODE,void 0,J,void 0,void 0,void 0,q);s.renderList=A.meshes.slice(),s.samples=q,s.renderSprites=R,s.activeCamera=X,s.forceLayerMaskCheck=O,null===u||void 0===u||u(s);const h=i||m.DumpData,B=()=>{A.incrementRenderId(),A.resetCachedMaterial(),(0,I.g)((()=>s.isReadyForRendering()&&X.isReady(!0)),(()=>{U.onEndFrameObservable.addOnce((()=>{e===f&&l===P?s.readPixels(void 0,void 0,void 0,!1).then((U=>{h(f,P,U,Q,z,S,!0,void 0,N),s.dispose()})):(U.isWebGPU?b.e(51).then(b.bind(b,14064)):b.e(52).then(b.bind(b,14069))).then((async()=>await(0,x.e)("pass",s.getInternalTexture(),A,void 0,void 0,void 0,e,l).then((X=>{U._readTexturePixels(X,e,l,-1,0,null,!0,!1,0,0).then((U=>{h(e,l,U,Q,z,S,!0,void 0,N),X.dispose()}))}))))})),A.incrementRenderId(),A.resetCachedMaterial();const F=A.activeCamera,E=A.activeCameras,w=X.outputRenderTarget,q=A.spritesEnabled;A.activeCamera=X,A.activeCameras=null,X.outputRenderTarget=s,A.spritesEnabled=R;const p=A.meshes;A.meshes=s.renderList||A.meshes;try{A.render()}finally{A.activeCamera=F,A.activeCameras=E,X.outputRenderTarget=w,A.spritesEnabled=q,A.meshes=p,U.getRenderWidth=k,U.getRenderHeight=v,U.onResizeObservable.hasObservers()&&U.onResizeObservable.notifyObservers(U),X.getProjectionMatrix(!0),U.skipFrameRender=!1}}),(()=>{U.skipFrameRender=!1,U.getRenderWidth=k,U.getRenderHeight=v}))};if(p){const U=new n("antialiasing",1,A.activeCamera);s.addPostProcess(U),U.nb=!0,U.onEffectCreatedObservable.addOnce((U=>{U.isReady()?B():U.onCompiled=()=>{B()}}))}else B()}async function f(U,X,b){let F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,w=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Q=arguments.length>6?arguments[6]:void 0,z=arguments.length>7&&void 0!==arguments[7]&&arguments[7],q=arguments.length>8&&void 0!==arguments[8]&&arguments[8],p=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],S=arguments.length>10?arguments[10]:void 0,R=arguments.length>11?arguments[11]:void 0,n=arguments.length>12?arguments[12]:void 0;return await new Promise(((a,J)=>{P(U,X,b,(U=>{"undefined"!==typeof U?a(U):J(new Error("Data is undefined"))}),F,E,w,Q,z,q,p,S,R,n)}))}function j(U,X,b){let F=0,E=0,w=0,Q=0;if("object"===typeof b){const z=b.precision?Math.abs(b.precision):1;b.width&&b.height?(F=b.height*z,E=b.width*z):b.width&&!b.height?(E=b.width*z,F=Math.round(E/U.getAspectRatio(X))):b.height&&!b.width?(F=b.height*z,E=Math.round(F*U.getAspectRatio(X))):(E=Math.round(U.getRenderWidth()*z),F=Math.round(E/U.getAspectRatio(X))),b.finalWidth&&b.finalHeight?(Q=b.finalHeight,w=b.finalWidth):b.finalWidth&&!b.finalHeight?(w=b.finalWidth,Q=Math.round(w/U.getAspectRatio(X))):b.finalHeight&&!b.finalWidth?(Q=b.finalHeight,w=Math.round(Q*U.getAspectRatio(X))):(w=E,Q=F)}else isNaN(b)||(F=b,E=b,w=b,Q=b);return E&&(E=Math.floor(E)),F&&(F=Math.floor(F)),w&&(w=Math.floor(w)),Q&&(Q=Math.floor(Q)),{height:0|F,width:0|E,finalWidth:0|w,finalHeight:0|Q}}const e={CreateScreenshot:N,CreateScreenshotAsync:u,CreateScreenshotWithResizeAsync:i,CreateScreenshotUsingRenderTarget:P,CreateScreenshotUsingRenderTargetAsync:f};J.Tools.CreateScreenshot=N,J.Tools.CreateScreenshotAsync=u,J.Tools.CreateScreenshotUsingRenderTarget=P,J.Tools.CreateScreenshotUsingRenderTargetAsync=f}}]);