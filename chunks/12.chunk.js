"use strict";(self.rvold1i0ywi=self.rvold1i0ywi||[]).push([[12,20],{11526:(F,b,Q)=>{Q.r(b),Q.d(b,{Dispose:()=>e,DumpData:()=>K,DumpDataAsync:()=>G,DumpFramebuffer:()=>q,DumpTools:()=>N});var C=Q(11410),z=Q(11128),t=Q(11329),g=Q(11161);let W,Z=null;async function q(F,b,Q,C){let z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",t=arguments.length>5?arguments[5]:void 0,g=arguments.length>6?arguments[6]:void 0;const W=await Q.readPixels(0,0,F,b);K(F,b,new Uint8Array(W.buffer),C,z,t,!0,void 0,g)}async function G(F,b,Q){let C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",z=arguments.length>4?arguments[4]:void 0,t=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6&&void 0!==arguments[6]&&arguments[6],W=arguments.length>7?arguments[7]:void 0;return await new Promise((Z=>{K(F,b,Q,(F=>Z(F)),C,z,t,g,W)}))}function K(F,b,q,G){let K=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",N=arguments.length>5?arguments[5]:void 0,y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],E=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8?arguments[8]:void 0;(async function(){return Z||(Z=new Promise(((F,b)=>{let z,t=null;const Z={Eb:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(Q.bind(Q,11446)).then((q=>{let{ThinEngine:G}=q;const K=g.d.Instances.length;try{z=new OffscreenCanvas(100,100),t=new G(z,!1,Z)}catch(E){var N;K<g.d.Instances.length&&(null===(N=g.d.Instances.pop())||void 0===N||N.dispose()),z=document.createElement("canvas"),t=new G(z,!1,Z)}g.d.Instances.pop(),g.d.OnEnginesDisposedObservable.add((F=>{t&&F!==t&&!t.G&&0===g.d.Instances.length&&e()})),t.getCaps().parallelShaderCompile=void 0;const y=new C.e(t);Q.e(52).then(Q.bind(Q,13733)).then((Q=>{let{passPixelShader:g}=Q;if(!t)return void b("Engine is not defined");const Z=new C.i({tQ:t,name:g.name,fragmentShader:g.shader,samplerNames:["textureSampler"]});W={canvas:z,tQ:t,renderer:y,wrapper:Z},F(W)}))})).catch(b)}))),await Z})().then((Q=>{if(Q.tQ.setSize(F,b,!0),q instanceof Float32Array){const F=new Uint8Array(q.length);let b=q.length;for(;b--;){const Q=q[b];F[b]=Math.round(255*(0,t.Clamp)(Q))}q=F}const C=Q.tQ.createRawTexture(q,F,b,5,!1,!y,1);Q.renderer.setViewport(),Q.renderer.applyEffectWrapper(Q.wrapper),Q.wrapper.effect._bindTexture("textureSampler",C),Q.renderer.draw(),E?z.Tools.ToBlob(Q.canvas,(F=>{const b=new FileReader;b.onload=F=>{const b=F.target.result;G&&G(b)},b.readAsArrayBuffer(F)}),K,c):z.Tools.EncodeScreenshotCanvasData(Q.canvas,G,K,N,c),C.dispose()}))}function e(){var F;W?(W.wrapper.dispose(),W.renderer.dispose(),W.tQ.dispose()):null===(F=Z)||void 0===F||F.then((F=>{F.wrapper.dispose(),F.renderer.dispose(),F.tQ.dispose()}));Z=null,W=null}const N={DumpData:K,DumpDataAsync:G,DumpFramebuffer:q,Dispose:e};z.Tools.DumpData=K,z.Tools.DumpDataAsync=G,z.Tools.DumpFramebuffer=q},11284:(F,b,Q)=>{Q.r(b),Q.d(b,{CreateScreenshot:()=>i,CreateScreenshotAsync:()=>f,CreateScreenshotUsingRenderTarget:()=>m,CreateScreenshotUsingRenderTargetAsync:()=>R,CreateScreenshotWithResizeAsync:()=>k,ScreenshotTools:()=>D});var C=Q(11287),z=Q(11367),t=Q(11401),g=Q(11265),W=Q(11349),Z=Q(11410),q=Q(11441),G=Q(11309);class K extends Z.i{static _GetDefines(F){if(!F)return null;return F.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(F,b){F?(this._webGPUReady=!0,b.push(Promise.all([Q.e(54).then(Q.bind(Q,13742)),Q.e(55).then(Q.bind(Q,13748))]))):b.push(Promise.all([Q.e(56).then(Q.bind(Q,13756)),Q.e(57).then(Q.bind(Q,13763))]))}constructor(F){const b={...arguments.length>2?arguments[2]:void 0,name:F,tQ:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||q.c.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:K.VertexUrl,fragmentShader:K.FragmentUrl,uniforms:K.Uniforms};super({...b,defines:K._GetDefines(b.tQ)}),this.texelSize=new G.Vector2(0,0)}bind(){let F=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(F),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}K.VertexUrl="fxaa",K.FragmentUrl="fxaa",K.Uniforms=["texelSize"];class e extends t.b{getClassName(){return"FxaaPostProcess"}constructor(F,b){let Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,z=arguments.length>3?arguments[3]:void 0,t=arguments.length>4?arguments[4]:void 0,g=arguments.length>5?arguments[5]:void 0,W=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const Z={uniforms:K.Uniforms,size:"number"===typeof b?b:void 0,camera:Q,samplingMode:z||C.b.BILINEAR_SAMPLINGMODE,tQ:t,reusable:g,textureType:W,...b};super(F,K.FragmentUrl,{effectWrapper:"number"!==typeof b&&b.effectWrapper?void 0:new K(F,t,Z),...Z}),this.onApplyObservable.add((F=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(F,b,Q,C){return W.e.Parse((()=>new e(F.name,F.options,b,F.renderTargetSamplingMode,Q.getEngine(),F.reusable)),F,Q,C)}}(0,g.g)("BABYLON.FxaaPostProcess",e);var N=Q(11146),y=Q(11128),E=Q(11526),c=Q(11529),X=Q(11198);let L=null;function i(F,b,Q,C){let z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",t=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6?arguments[6]:void 0,W=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:Z,width:q}=p(F,b,Q);if(!Z||!q)return void N.e.Error("Invalid 'size' parameter !");b.RF().activeCamera===b?F.onEndFrameObservable.addOnce((()=>{L||(L=document.createElement("canvas")),L.width=q,L.height=Z;const b=L.getContext("2d"),Q=F.getRenderingCanvas();if(!b||!Q)return void N.e.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const G=Q.width,K=Q.height,e=L.width,E=L.height,c=e/G,X=E/K,i=W?Math.max(c,X):Math.min(c,X),f=G*i,k=K*i,m=(e-f)/2,R=(E-k)/2;b.drawImage(Q,0,0,G,K,m,R,f,k),t?(y.Tools.EncodeScreenshotCanvasData(L,void 0,z,void 0,g),C&&C("")):y.Tools.EncodeScreenshotCanvasData(L,C,z,void 0,g)})):m(F,b,Q,(F=>{if(t){const b=new Blob([F]);y.Tools.DownloadBlob(b),C&&C("")}else C&&C(F)}),z,1,F.getCreationOptions().antialias,void 0,void 0,void 0,void 0,g)}async function f(F,b,Q){let C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",z=arguments.length>4?arguments[4]:void 0,t=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((g,W)=>{i(F,b,Q,(F=>{"undefined"!==typeof F?g(F):W(new Error("Data is undefined"))}),C,void 0,z,t)}))}async function k(F,b,Q,C){let z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",t=arguments.length>5?arguments[5]:void 0,g=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((W=>{i(F,b,{width:Q,height:C},(()=>{W()}),z,!0,t,g)}))}function m(F,b,t,g){let W=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,q=arguments.length>6&&void 0!==arguments[6]&&arguments[6],G=arguments.length>7?arguments[7]:void 0,K=arguments.length>8&&void 0!==arguments[8]&&arguments[8],y=arguments.length>9&&void 0!==arguments[9]&&arguments[9],L=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],i=arguments.length>11?arguments[11]:void 0,f=arguments.length>12?arguments[12]:void 0,k=arguments.length>13?arguments[13]:void 0;const{height:m,width:R,finalWidth:D,finalHeight:P}=p(F,b,t),n={width:R,height:m};if(!m||!R)return void N.e.Error("Invalid 'size' parameter !");F.skipFrameRender=!0;const j=F.getRenderWidth,w=F.getRenderHeight;F.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&F._currentRenderTarget?F._currentRenderTarget.width:R},F.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&F._currentRenderTarget?F._currentRenderTarget.height:m},F.onResizeObservable.hasObservers()&&F.onResizeObservable.notifyObservers(F);const Y=b.RF(),s=new z.e("screenShot",n,Y,!1,!1,0,!1,C.b.BILINEAR_SAMPLINGMODE,void 0,y,void 0,void 0,void 0,Z);s.renderList=Y.meshes.slice(),s.samples=Z,s.renderSprites=K,s.activeCamera=b,s.forceLayerMaskCheck=L,null===f||void 0===f||f(s);const V=k||E.DumpData,h=()=>{Y.incrementRenderId(),Y.resetCachedMaterial(),(0,X.f)((()=>s.isReadyForRendering()&&b.isReady(!0)),(()=>{F.onEndFrameObservable.addOnce((()=>{D===R&&P===m?s.readPixels(void 0,void 0,void 0,!1).then((F=>{V(R,m,F,g,W,G,!0,void 0,i),s.dispose()})):(F.isWebGPU?Q.e(51).then(Q.bind(Q,13728)):Q.e(52).then(Q.bind(Q,13733))).then((async()=>await(0,c.c)("pass",s.getInternalTexture(),Y,void 0,void 0,void 0,D,P).then((b=>{F._readTexturePixels(b,D,P,-1,0,null,!0,!1,0,0).then((F=>{V(D,P,F,g,W,G,!0,void 0,i),b.dispose()}))}))))})),Y.incrementRenderId(),Y.resetCachedMaterial();const C=Y.activeCamera,z=Y.activeCameras,t=b.outputRenderTarget,Z=Y.spritesEnabled;Y.activeCamera=b,Y.activeCameras=null,b.outputRenderTarget=s,Y.spritesEnabled=K;const q=Y.meshes;Y.meshes=s.renderList||Y.meshes;try{Y.render()}finally{Y.activeCamera=C,Y.activeCameras=z,b.outputRenderTarget=t,Y.spritesEnabled=Z,Y.meshes=q,F.getRenderWidth=j,F.getRenderHeight=w,F.onResizeObservable.hasObservers()&&F.onResizeObservable.notifyObservers(F),b.getProjectionMatrix(!0),F.skipFrameRender=!1}}),(()=>{F.skipFrameRender=!1,F.getRenderWidth=j,F.getRenderHeight=w}))};if(q){const F=new e("antialiasing",1,Y.activeCamera);s.addPostProcess(F),F.cb=!0,F.onEffectCreatedObservable.addOnce((F=>{F.isReady()?h():F.onCompiled=()=>{h()}}))}else h()}async function R(F,b,Q){let C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,t=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6?arguments[6]:void 0,W=arguments.length>7&&void 0!==arguments[7]&&arguments[7],Z=arguments.length>8&&void 0!==arguments[8]&&arguments[8],q=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],G=arguments.length>10?arguments[10]:void 0,K=arguments.length>11?arguments[11]:void 0,e=arguments.length>12?arguments[12]:void 0;return await new Promise(((N,y)=>{m(F,b,Q,(F=>{"undefined"!==typeof F?N(F):y(new Error("Data is undefined"))}),C,z,t,g,W,Z,q,G,K,e)}))}function p(F,b,Q){let C=0,z=0,t=0,g=0;if("object"===typeof Q){const W=Q.precision?Math.abs(Q.precision):1;Q.width&&Q.height?(C=Q.height*W,z=Q.width*W):Q.width&&!Q.height?(z=Q.width*W,C=Math.round(z/F.getAspectRatio(b))):Q.height&&!Q.width?(C=Q.height*W,z=Math.round(C*F.getAspectRatio(b))):(z=Math.round(F.getRenderWidth()*W),C=Math.round(z/F.getAspectRatio(b))),Q.finalWidth&&Q.finalHeight?(g=Q.finalHeight,t=Q.finalWidth):Q.finalWidth&&!Q.finalHeight?(t=Q.finalWidth,g=Math.round(t/F.getAspectRatio(b))):Q.finalHeight&&!Q.finalWidth?(g=Q.finalHeight,t=Math.round(g*F.getAspectRatio(b))):(t=z,g=C)}else isNaN(Q)||(C=Q,z=Q,t=Q,g=Q);return z&&(z=Math.floor(z)),C&&(C=Math.floor(C)),t&&(t=Math.floor(t)),g&&(g=Math.floor(g)),{height:0|C,width:0|z,finalWidth:0|t,finalHeight:0|g}}const D={CreateScreenshot:i,CreateScreenshotAsync:f,CreateScreenshotWithResizeAsync:k,CreateScreenshotUsingRenderTarget:m,CreateScreenshotUsingRenderTargetAsync:R};y.Tools.CreateScreenshot=i,y.Tools.CreateScreenshotAsync=f,y.Tools.CreateScreenshotUsingRenderTarget=m,y.Tools.CreateScreenshotUsingRenderTargetAsync=R}}]);