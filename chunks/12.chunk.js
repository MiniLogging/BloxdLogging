"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[12],{10480:(U,b,e)=>{e.r(b),e.d(b,{_ExrTextureLoader:()=>k});var K=e(1032),p=e(979);const m=65536,i=14,D=65537,S=16384;var u,r;!function(U){U[U.NO_COMPRESSION=0]="NO_COMPRESSION",U[U.RLE_COMPRESSION=1]="RLE_COMPRESSION",U[U.ZIPS_COMPRESSION=2]="ZIPS_COMPRESSION",U[U.ZIP_COMPRESSION=3]="ZIP_COMPRESSION",U[U.PIZ_COMPRESSION=4]="PIZ_COMPRESSION",U[U.PXR24_COMPRESSION=5]="PXR24_COMPRESSION"}(u||(u={})),function(U){U[U.INCREASING_Y=0]="INCREASING_Y",U[U.DECREASING_Y=1]="DECREASING_Y"}(r||(r={}));const W=function(){const U=new ArrayBuffer(4),b=new Float32Array(U),e=new Uint32Array(U),K=new Uint32Array(512),p=new Uint32Array(512);for(let S=0;S<256;++S){const U=S-127;U<-27?(K[S]=0,K[256|S]=32768,p[S]=24,p[256|S]=24):U<-14?(K[S]=1024>>-U-14,K[256|S]=1024>>-U-14|32768,p[S]=-U-1,p[256|S]=-U-1):U<=15?(K[S]=U+15<<10,K[256|S]=U+15<<10|32768,p[S]=13,p[256|S]=13):U<128?(K[S]=31744,K[256|S]=64512,p[S]=24,p[256|S]=24):(K[S]=31744,K[256|S]=64512,p[S]=13,p[256|S]=13)}const m=new Uint32Array(2048),i=new Uint32Array(64),D=new Uint32Array(64);for(let S=1;S<1024;++S){let U=S<<13,b=0;for(;0===(8388608&U);)U<<=1,b-=8388608;U&=-8388609,b+=947912704,m[S]=U|b}for(let S=1024;S<2048;++S)m[S]=939524096+(S-1024<<13);for(let S=1;S<31;++S)i[S]=S<<23;i[31]=1199570944,i[32]=2147483648;for(let S=33;S<63;++S)i[S]=2147483648+(S-32<<23);i[63]=3347054592;for(let S=1;S<64;++S)32!==S&&(D[S]=1024);return{floatView:b,uint32View:e,baseTable:K,shiftTable:p,mantissaTable:m,exponentTable:i,offsetTable:D}}();function f(U,b){const e=new Uint8Array(U);let K=0;for(;0!=e[b.value+K];)K+=1;const p=(new TextDecoder).decode(e.slice(b.value,b.value+K));return b.value=b.value+K+1,p}function l(U,b){const e=U.getInt32(b.value,!0);return b.value+=4,e}function P(U,b){const e=U.getUint32(b.value,!0);return b.value+=4,e}function G(U,b){const e=U.getUint8(b.value);return b.value+=1,e}function E(U,b){const e=U.getUint16(b.value,!0);return b.value+=2,e}function A(U,b){const e=U[b.value];return b.value+=1,e}function Y(U,b){let e;return e="getBigInt64"in DataView.prototype?Number(U.getBigInt64(b.value,!0)):U.getUint32(b.value+4,!0)+Number(U.getUint32(b.value,!0)<<32),b.value+=8,e}function V(U,b){const e=U.getFloat32(b.value,!0);return b.value+=4,e}function M(U,b){return function(U){const b=(31744&U)>>10,e=1023&U;return(U>>15?-1:1)*(b?31===b?e?NaN:1/0:Math.pow(2,b-15)*(1+e/1024):e/1024*6103515625e-14)}(E(U,b))}function Z(U,b){return function(U){if(Math.abs(U)>65504)throw new Error("Value out of range.Consider using float instead of half-float.");U=(0,p.b)(U,-65504,65504),W.floatView[0]=U;const b=W.uint32View[0],e=b>>23&511;return W.baseTable[e]+((8388607&b)>>W.shiftTable[e])}(V(U,b))}function J(U,b,e,K){switch(e){case"string":case"stringvector":case"iccProfile":return function(U,b,e){const K=(new TextDecoder).decode(new Uint8Array(U).slice(b.value,b.value+e));return b.value=b.value+e,K}(U.buffer,b,K);case"chlist":return function(U,b,e){const K=b.value,p=[];for(;b.value<K+e-1;){const e=f(U.buffer,b),K=l(U,b),m=G(U,b);b.value+=3;const i=l(U,b),D=l(U,b);p.push({name:e,pixelType:K,pLinear:m,xSampling:i,ySampling:D})}return b.value+=1,p}(U,b,K);case"chromaticities":return function(U,b){return{redX:V(U,b),redY:V(U,b),greenX:V(U,b),greenY:V(U,b),blueX:V(U,b),blueY:V(U,b),whiteX:V(U,b),whiteY:V(U,b)}}(U,b);case"compression":return function(U,b){return G(U,b)}(U,b);case"box2i":return function(U,b){return{xMin:l(U,b),yMin:l(U,b),xMax:l(U,b),yMax:l(U,b)}}(U,b);case"lineOrder":return function(U,b){const e=G(U,b);return r[e]}(U,b);case"float":return V(U,b);case"v2f":return function(U,b){return[V(U,b),V(U,b)]}(U,b);case"v3f":return function(U,b){return[V(U,b),V(U,b),V(U,b)]}(U,b);case"int":return l(U,b);case"rational":return function(U,b){return[l(U,b),P(U,b)]}(U,b);case"timecode":return function(U,b){return[P(U,b),P(U,b)]}(U,b);case"preview":return b.value+=K,"skipped";default:return void(b.value+=K)}}function I(U){for(let b=1;b<U.length;b++){const e=U[b-1]+U[b]-128;U[b]=e}}function c(U,b){let e=0,K=Math.floor((U.length+1)/2),p=0;const m=U.length-1;for(;!(p>m)&&(b[p++]=U[e++],!(p>m));)b[p++]=U[K++]}function g(U,b,e,K,p){for(;e<U;)b=b<<8|A(K,p),e+=8;return{l:b>>(e-=U)&(1<<U)-1,c:b,lc:e}}function B(U,b,e,K){return{c:U=U<<8|A(e,K),lc:b+=8}}function t(U,b,e,K,p,m,i,D,S){if(U==b){if(K<8){const U=B(e,K,p,m);e=U.c,K=U.lc}let U=e>>(K-=8);if(U=new Uint8Array([U])[0],D.value+U>S)return null;const b=i[D.value-1];for(;U-- >0;)i[D.value++]=b}else{if(!(D.value<S))return null;i[D.value++]=U}return{c:e,lc:K}}const X=new Array(59);function F(U,b,e,K,p,m){const i=b;let S=0,u=0;for(;K<=p;K++){if(i.value-b.value>e)return;let D=g(6,S,u,U,i);const r=D.l;if(S=D.c,u=D.lc,m[K]=r,63==r){if(i.value-b.value>e)throw new Error("Error in HufUnpackEncTable");D=g(8,S,u,U,i);let r=D.l+6;if(S=D.c,u=D.lc,K+r>p+1)throw new Error("Error in HufUnpackEncTable");for(;r--;)m[K++]=0;K--}else if(r>=59){let U=r-59+2;if(K+U>p+1)throw new Error("Error in HufUnpackEncTable");for(;U--;)m[K++]=0;K--}}!function(U){for(let e=0;e<=58;++e)X[e]=0;for(let e=0;e<D;++e)X[U[e]]+=1;let b=0;for(let e=58;e>0;--e){const U=b+X[e]>>1;X[e]=b,b=U}for(let e=0;e<D;++e){const b=U[e];b>0&&(U[e]=b|X[b]++<<6)}}(m)}function s(U){return 63&U}function H(U){return U>>6}function O(U,b,e,K,p,m){const u=e.value,r=P(b,e),W=P(b,e);e.value+=4;const f=P(b,e);if(e.value+=4,r<0||r>=D||W<0||W>=D)throw new Error("Wrong HUF_ENCSIZE");const l=new Array(D),G=new Array(S);!function(U){for(let b=0;b<S;b++)U[b]={},U[b].len=0,U[b].lit=0,U[b].p=null}(G);if(F(U,e,K-(e.value-u),r,W,l),f>8*(K-(e.value-u)))throw new Error("Wrong hufUncompress");!function(U,b,e,K){for(;b<=e;b++){const e=H(U[b]),p=s(U[b]);if(e>>p)throw new Error("Invalid table entry");if(p>i){const U=K[e>>p-i];if(U.len)throw new Error("Invalid table entry");if(U.lit++,U.p){const b=U.p;U.p=new Array(U.lit);for(let e=0;e<U.lit-1;++e)U.p[e]=b[e]}else U.p=new Array(1);U.p[U.lit-1]=b}else if(p){let U=0;for(let m=1<<i-p;m>0;m--){const m=K[(e<<i-p)+U];if(m.len||m.p)throw new Error("Invalid table entry");m.len=p,m.lit=b,U++}}}}(l,r,W,G),function(U,b,e,K,p,m,D,S,u){let r=0,W=0;const f=D,l=Math.trunc(K.value+(p+7)/8);for(;K.value<l;){let p=B(r,W,e,K);for(r=p.c,W=p.lc;W>=i;){const D=b[r>>W-i&16383];if(D.len){W-=D.len;const U=t(D.lit,m,r,W,e,K,S,u,f);U&&(r=U.c,W=U.lc)}else{if(!D.p)throw new Error("hufDecode issues");let b;for(b=0;b<D.lit;b++){const i=s(U[D.p[b]]);for(;W<i&&K.value<l;)p=B(r,W,e,K),r=p.c,W=p.lc;if(W>=i&&H(U[D.p[b]])==(r>>W-i&(1<<i)-1)){W-=i;const U=t(D.p[b],m,r,W,e,K,S,u,f);U&&(r=U.c,W=U.lc);break}}if(b==D.lit)throw new Error("HufDecode issues")}}}const P=8-p&7;for(r>>=P,W-=P;W>0;){const U=b[r<<i-W&16383];if(!U.len)throw new Error("HufDecode issues");{W-=U.len;const b=t(U.lit,m,r,W,e,K,S,u,f);b&&(r=b.c,W=b.lc)}}}(l,G,U,e,f,W,m,p,{value:0})}function h(U){return 65535&U}function q(U){const b=h(U);return b>32767?b-65536:b}function w(U,b){const e=q(U),K=q(b),p=e+(1&K)+(K>>1);return{a:p,b:p-K}}function T(U,b){const e=h(U),K=h(b),p=e-(K>>1)&65535;return{a:K+p-32768&65535,b:p}}function j(U,b,e,K,p,m,i){const D=i<16384,S=e>p?p:e;let u,r,W=1;for(;W<=S;)W<<=1;for(W>>=1,u=W,W>>=1;W>=1;){r=0;const i=r+m*(p-u),S=m*W,f=m*u,l=K*W,P=K*u;let G,E,A,Y;for(;r<=i;r+=f){let p=r;const m=r+K*(e-u);for(;p<=m;p+=P){const e=p+l,K=p+S,m=K+l;if(D){let i=w(U[p+b],U[K+b]);G=i.a,A=i.b,i=w(U[e+b],U[m+b]),E=i.a,Y=i.b,i=w(G,E),U[p+b]=i.a,U[e+b]=i.b,i=w(A,Y),U[K+b]=i.a,U[m+b]=i.b}else{let i=T(U[p+b],U[K+b]);G=i.a,A=i.b,i=T(U[e+b],U[m+b]),E=i.a,Y=i.b,i=T(G,E),U[p+b]=i.a,U[e+b]=i.b,i=T(A,Y),U[K+b]=i.a,U[m+b]=i.b}}if(e&W){const e=p+S;let K;K=D?w(U[p+b],U[e+b]):T(U[p+b],U[e+b]),G=K.a,U[e+b]=K.b,U[p+b]=G}}if(p&W){let p=r;const m=r+K*(e-u);for(;p<=m;p+=P){const e=p+l;let K;K=D?w(U[p+b],U[e+b]):T(U[p+b],U[e+b]),G=K.a,U[e+b]=K.b,U[p+b]=G}}u=W,W>>=1}return r}function L(U){return new DataView(U.array.buffer,U.offset.value,U.size)}function C(U){const b=U.viewer.buffer.slice(U.offset.value,U.offset.value+U.size),e=new Uint8Array(function(U){let b=U.byteLength;const e=new Array;let K=0;const p=new DataView(U);for(;b>0;){const U=p.getInt8(K++);if(U<0){const m=-U;b-=m+1;for(let U=0;U<m;U++)e.push(p.getUint8(K++))}else{const m=U;b-=2;const i=p.getUint8(K++);for(let U=0;U<m+1;U++)e.push(i)}}return e}(b)),K=new Uint8Array(e.length);return I(e),c(e,K),new DataView(K.buffer)}function y(U){const b=U.array.slice(U.offset.value,U.offset.value+U.size),e=fflate.unzlibSync(b),K=new Uint8Array(e.length);return I(e),c(e,K),new DataView(K.buffer)}function z(U){const b=U.array.slice(U.offset.value,U.offset.value+U.size),e=fflate.unzlibSync(b),K=U.lines*U.channels*U.width,p=1==U.type?new Uint16Array(K):new Uint32Array(K);let m=0,i=0;const D=new Array(4);for(let S=0;S<U.lines;S++)for(let b=0;b<U.channels;b++){let b=0;switch(U.type){case 1:D[0]=m,D[1]=D[0]+U.width,m=D[1]+U.width;for(let K=0;K<U.width;++K){b+=e[D[0]++]<<8|e[D[1]++],p[i]=b,i++}break;case 2:D[0]=m,D[1]=D[0]+U.width,D[2]=D[1]+U.width,m=D[2]+U.width;for(let K=0;K<U.width;++K){b+=e[D[0]++]<<24|e[D[1]++]<<16|e[D[2]++]<<8,p[i]=b,i++}}}return new DataView(p.buffer)}function o(U){const b=U.viewer,e={value:U.offset.value},K=new Uint16Array(U.width*U.scanlineBlockSize*(U.channels*U.type)),p=new Uint8Array(8192);let i=0;const D=new Array(U.channels);for(let m=0;m<U.channels;m++)D[m]={},D[m].start=i,D[m].end=D[m].start,D[m].nx=U.width,D[m].ny=U.lines,D[m].size=U.type,i+=D[m].nx*D[m].ny*D[m].size;const S=E(b,e),u=E(b,e);if(u>=8192)throw new Error("Wrong PIZ_COMPRESSION BITMAP_SIZE");if(S<=u)for(let m=0;m<u-S+1;m++)p[m+S]=G(b,e);const r=new Uint16Array(m),W=function(U,b){let e=0;for(let p=0;p<m;++p)(0==p||U[p>>3]&1<<(7&p))&&(b[e++]=p);const K=e-1;for(;e<m;)b[e++]=0;return K}(p,r),f=P(b,e);O(U.array,b,e,f,K,i);for(let m=0;m<U.channels;++m){const U=D[m];for(let b=0;b<D[m].size;++b)j(K,U.start+b,U.nx,U.size,U.ny,U.nx*U.size,W)}!function(U,b,e){for(let K=0;K<e;++K)b[K]=U[b[K]]}(r,K,i);let l=0;const A=new Uint8Array(K.buffer.byteLength);for(let m=0;m<U.lines;m++)for(let b=0;b<U.channels;b++){const U=D[b],e=U.nx*U.size,p=new Uint8Array(K.buffer,2*U.end,2*e);A.set(p,l),l+=2*e,U.end+=e}return new DataView(A.buffer)}var R,d=e(1147);!function(U){U[U.Float=0]="Float",U[U.HalfFloat=1]="HalfFloat"}(R||(R={}));class a{}a.DefaultOutputType=R.HalfFloat,a.FFLATEUrl="https://unpkg.com/fflate@0.8.2";class k{constructor(){this.supportCascades=!1}loadCubeData(U,b,e,K,p){throw".exr not supported in Cube."}async loadData(U,b,e){const p=new DataView(U.buffer),m={value:0},i=function(U,b){if(20000630!=U.getUint32(0,!0))throw new Error("Incorrect OpenEXR format");const e=U.getUint8(4),p=U.getUint8(5),m={singleTile:!!(2&p),longName:!!(4&p),deepFormat:!!(8&p),multiPart:!!(16&p)};b.value=8;const i={};let D=!0;for(;D;){const e=f(U.buffer,b);if(e){const p=f(U.buffer,b),m=J(U,b,p,P(U,b));void 0===m?K.b.Warn(`Unknown header attribute type ${p}'.`):i[e]=m}else D=!1}if(0!=(-5&p))throw new Error("Unsupported file format");return{version:e,spec:m,...i}}(p,m),D=await async function(U,b,e,K){const p={size:0,viewer:b,array:new Uint8Array(b.buffer),offset:e,width:U.dataWindow.xMax-U.dataWindow.xMin+1,height:U.dataWindow.yMax-U.dataWindow.yMin+1,channels:U.channels.length,channelLineOffsets:{},scanOrder:()=>0,bytesPerLine:0,outLineWidth:0,lines:0,scanlineBlockSize:0,inputSize:null,type:0,uncompress:null,getter:()=>0,format:5,outputChannels:0,decodeChannels:{},blockCount:null,byteArray:null,linearSpace:!1,textureType:0};switch(U.compression){case u.NO_COMPRESSION:p.lines=1,p.uncompress=L;break;case u.RLE_COMPRESSION:p.lines=1,p.uncompress=C;break;case u.ZIPS_COMPRESSION:p.lines=1,p.uncompress=y,await d.g.LoadScriptAsync(a.FFLATEUrl);break;case u.ZIP_COMPRESSION:p.lines=16,p.uncompress=y,await d.g.LoadScriptAsync(a.FFLATEUrl);break;case u.PIZ_COMPRESSION:p.lines=32,p.uncompress=o;break;case u.PXR24_COMPRESSION:p.lines=16,p.uncompress=z,await d.g.LoadScriptAsync(a.FFLATEUrl);break;default:throw new Error(u[U.compression]+" is unsupported")}p.scanlineBlockSize=p.lines;const m={};for(const u of U.channels)switch(u.name){case"Y":case"R":case"G":case"B":case"A":m[u.name]=!0,p.type=u.pixelType}let i=!1;if(m.R&&m.G&&m.B)i=!m.A,p.outputChannels=4,p.decodeChannels={R:0,G:1,B:2,A:3};else{if(!m.Y)throw new Error("EXRLoader.parse: file contains unsupported data channels.");p.outputChannels=1,p.decodeChannels={Y:0}}if(1===p.type)switch(K){case R.Float:p.getter=M,p.inputSize=2;break;case R.HalfFloat:p.getter=E,p.inputSize=2}else{if(2!==p.type)throw new Error("Unsupported pixelType "+p.type+" for "+U.compression);switch(K){case R.Float:p.getter=V,p.inputSize=4;break;case R.HalfFloat:p.getter=Z,p.inputSize=4}}p.blockCount=p.height/p.scanlineBlockSize;for(let u=0;u<p.blockCount;u++)Y(b,e);const D=p.width*p.height*p.outputChannels;switch(K){case R.Float:p.byteArray=new Float32Array(D),p.textureType=1,i&&p.byteArray.fill(1,0,D);break;case R.HalfFloat:p.byteArray=new Uint16Array(D),p.textureType=2,i&&p.byteArray.fill(15360,0,D);break;default:throw new Error("Unsupported type: "+K)}let S=0;for(const u of U.channels)void 0!==p.decodeChannels[u.name]&&(p.channelLineOffsets[u.name]=S*p.width),S+=2*u.pixelType;return p.bytesPerLine=p.width*S,p.outLineWidth=p.width*p.outputChannels,"INCREASING_Y"===U.lineOrder?p.scanOrder=U=>U:p.scanOrder=U=>p.height-1-U,4==p.outputChannels?(p.format=5,p.linearSpace=!0):(p.format=6,p.linearSpace=!1),p}(i,p,m,a.DefaultOutputType);!function(U,b,e,K){const p={value:0};for(let m=0;m<U.height/U.scanlineBlockSize;m++){const i=l(e,K)-b.dataWindow.yMin;U.size=P(e,K),U.lines=i+U.scanlineBlockSize>U.height?U.height-i:U.scanlineBlockSize;const D=U.size<U.lines*U.bytesPerLine&&U.uncompress?U.uncompress(U):L(U);K.value+=U.size;for(let e=0;e<U.scanlineBlockSize;e++){const K=m*U.scanlineBlockSize,i=e+U.scanOrder(K);if(i>=U.height)continue;const S=e*U.bytesPerLine,u=(U.height-1-i)*U.outLineWidth;for(let e=0;e<U.channels;e++){const K=b.channels[e].name,m=U.channelLineOffsets[K],i=U.decodeChannels[K];if(void 0!==i){p.value=S+m;for(let b=0;b<U.width;b++){const e=u+b*U.outputChannels+i;U.byteArray&&(U.byteArray[e]=U.getter(D,p))}}}}}}(D,i,p,m);e(i.dataWindow.xMax-i.dataWindow.xMin+1,i.dataWindow.yMax-i.dataWindow.yMin+1,b.generateMipMaps,!1,(()=>{const U=b.getEngine();b.format=i.format,b.type=D.textureType,b.invertY=!1,b._gammaSpace=!i.linearSpace,D.byteArray&&U._uploadDataToTextureDirectly(b,D.byteArray,0,0,void 0,!0)}))}}}}]);