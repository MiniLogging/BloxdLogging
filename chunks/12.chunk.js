"use strict";(self.wj3aziuz228=self.wj3aziuz228||[]).push([[12,20],{12689:(u,R,I)=>{I.r(R),I.d(R,{Dispose:()=>b,DumpData:()=>S,DumpDataAsync:()=>G,DumpFramebuffer:()=>t,DumpTools:()=>r});var B=I(12581),U=I(12294),K=I(12491),C=I(12346);let D,s=null;async function t(u,R,I,B){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",K=arguments.length>5?arguments[5]:void 0,C=arguments.length>6?arguments[6]:void 0;const D=await I.readPixels(0,0,u,R);S(u,R,new Uint8Array(D.buffer),B,U,K,!0,void 0,C)}async function G(u,R,I){let B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",U=arguments.length>4?arguments[4]:void 0,K=arguments.length>5&&void 0!==arguments[5]&&arguments[5],C=arguments.length>6&&void 0!==arguments[6]&&arguments[6],D=arguments.length>7?arguments[7]:void 0;return await new Promise((s=>{S(u,R,I,(u=>s(u)),B,U,K,C,D)}))}function S(u,R,t,G){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",r=arguments.length>5?arguments[5]:void 0,P=arguments.length>6&&void 0!==arguments[6]&&arguments[6],X=arguments.length>7&&void 0!==arguments[7]&&arguments[7],E=arguments.length>8?arguments[8]:void 0;(async function(){return s||(s=new Promise(((u,R)=>{let U,K=null;const s={KD:!0,depth:!1,RD:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(I.bind(I,12599)).then((t=>{let{ThinEngine:G}=t;const S=C.e.Instances.length;try{U=new OffscreenCanvas(100,100),K=new G(U,!1,s)}catch(X){var r;S<C.e.Instances.length&&(null===(r=C.e.Instances.pop())||void 0===r||r.dispose()),U=document.createElement("canvas"),K=new G(U,!1,s)}C.e.Instances.pop(),C.e.OnEnginesDisposedObservable.add((u=>{K&&u!==K&&!K.C&&0===C.e.Instances.length&&b()})),K.getCaps().parallelShaderCompile=void 0;const P=new B.b(K);I.e(52).then(I.bind(I,14949)).then((I=>{let{passPixelShader:C}=I;if(!K)return void R("Engine is not defined");const s=new B.c({rR:K,name:C.name,fragmentShader:C.shader,samplerNames:["textureSampler"]});D={canvas:U,rR:K,renderer:P,wrapper:s},u(D)}))})).catch(R)}))),await s})().then((I=>{if(I.rR.setSize(u,R,!0),t instanceof Float32Array){const u=new Uint8Array(t.length);let R=t.length;for(;R--;){const I=t[R];u[R]=Math.round(255*(0,K.Clamp)(I))}t=u}const B=I.rR.createRawTexture(t,u,R,5,!1,!P,1);I.renderer.setViewport(),I.renderer.applyEffectWrapper(I.wrapper),I.wrapper.effect._bindTexture("textureSampler",B),I.renderer.draw(),X?U.Tools.ToBlob(I.canvas,(u=>{const R=new FileReader;R.onload=u=>{const R=u.target.result;G&&G(R)},R.readAsArrayBuffer(u)}),S,E):U.Tools.EncodeScreenshotCanvasData(I.canvas,G,S,r,E),B.dispose()}))}function b(){var u;D?(D.wrapper.dispose(),D.renderer.dispose(),D.rR.dispose()):null===(u=s)||void 0===u||u.then((u=>{u.wrapper.dispose(),u.renderer.dispose(),u.rR.dispose()}));s=null,D=null}const r={DumpData:S,DumpDataAsync:G,DumpFramebuffer:t,Dispose:b};U.Tools.DumpData=S,U.Tools.DumpDataAsync=G,U.Tools.DumpFramebuffer=t},12451:(u,R,I)=>{I.r(R),I.d(R,{CreateScreenshot:()=>T,CreateScreenshotAsync:()=>Q,CreateScreenshotUsingRenderTarget:()=>q,CreateScreenshotUsingRenderTargetAsync:()=>e,CreateScreenshotWithResizeAsync:()=>V,ScreenshotTools:()=>M});var B=I(12460),U=I(12533),K=I(12575),C=I(12433),D=I(12507),s=I(12581),t=I(12593),G=I(12481);class S extends s.c{static _GetDefines(u){if(!u)return null;return u.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(u,R){u?(this._webGPUReady=!0,R.push(Promise.all([I.e(54).then(I.bind(I,14963)),I.e(55).then(I.bind(I,14967))]))):R.push(Promise.all([I.e(56).then(I.bind(I,14976)),I.e(57).then(I.bind(I,14979))]))}constructor(u){const R={...arguments.length>2?arguments[2]:void 0,name:u,rR:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||t.c.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:S.VertexUrl,fragmentShader:S.FragmentUrl,uniforms:S.Uniforms};super({...R,defines:S._GetDefines(R.rR)}),this.texelSize=new G.Vector2(0,0)}bind(){let u=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(u),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}S.VertexUrl="fxaa",S.FragmentUrl="fxaa",S.Uniforms=["texelSize"];class b extends K.e{getClassName(){return"FxaaPostProcess"}constructor(u,R){let I=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,U=arguments.length>3?arguments[3]:void 0,K=arguments.length>4?arguments[4]:void 0,C=arguments.length>5?arguments[5]:void 0,D=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const s={uniforms:S.Uniforms,size:"number"===typeof R?R:void 0,camera:I,samplingMode:U||B.b.BILINEAR_SAMPLINGMODE,rR:K,reusable:C,textureType:D,...R};super(u,S.FragmentUrl,{effectWrapper:"number"!==typeof R&&R.effectWrapper?void 0:new S(u,K,s),...s}),this.onApplyObservable.add((u=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(u,R,I,B){return D.e.Parse((()=>new b(u.name,u.options,R,u.renderTargetSamplingMode,I.getEngine(),u.reusable)),u,I,B)}}(0,C.e)("BABYLON.FxaaPostProcess",b);var r=I(12315),P=I(12294),X=I(12689),E=I(12693),z=I(12374);let f=null;function T(u,R,I,B){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",K=arguments.length>5&&void 0!==arguments[5]&&arguments[5],C=arguments.length>6?arguments[6]:void 0,D=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:s,width:t}=Y(u,R,I);if(!s||!t)return void r.b.Error("Invalid 'size' parameter !");R.eu().activeCamera===R?u.onEndFrameObservable.addOnce((()=>{f||(f=document.createElement("canvas")),f.width=t,f.height=s;const R=f.getContext("2d"),I=u.getRenderingCanvas();if(!R||!I)return void r.b.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const G=I.width,S=I.height,b=f.width,X=f.height,E=b/G,z=X/S,T=D?Math.max(E,z):Math.min(E,z),Q=G*T,V=S*T,q=(b-Q)/2,e=(X-V)/2;R.drawImage(I,0,0,G,S,q,e,Q,V),K?(P.Tools.EncodeScreenshotCanvasData(f,void 0,U,void 0,C),B&&B("")):P.Tools.EncodeScreenshotCanvasData(f,B,U,void 0,C)})):q(u,R,I,(u=>{if(K){const R=new Blob([u]);P.Tools.DownloadBlob(R),B&&B("")}else B&&B(u)}),U,1,u.getCreationOptions().antialias,void 0,void 0,void 0,void 0,C)}async function Q(u,R,I){let B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",U=arguments.length>4?arguments[4]:void 0,K=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((C,D)=>{T(u,R,I,(u=>{"undefined"!==typeof u?C(u):D(new Error("Data is undefined"))}),B,void 0,U,K)}))}async function V(u,R,I,B){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",K=arguments.length>5?arguments[5]:void 0,C=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((D=>{T(u,R,{width:I,height:B},(()=>{D()}),U,!0,K,C)}))}function q(u,R,K,C){let D=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,t=arguments.length>6&&void 0!==arguments[6]&&arguments[6],G=arguments.length>7?arguments[7]:void 0,S=arguments.length>8&&void 0!==arguments[8]&&arguments[8],P=arguments.length>9&&void 0!==arguments[9]&&arguments[9],f=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],T=arguments.length>11?arguments[11]:void 0,Q=arguments.length>12?arguments[12]:void 0,V=arguments.length>13?arguments[13]:void 0;const{height:q,width:e,finalWidth:M,finalHeight:o}=Y(u,R,K),j={width:e,height:q};if(!q||!e)return void r.b.Error("Invalid 'size' parameter !");u.skipFrameRender=!0;const h=u.getRenderWidth,x=u.getRenderHeight;u.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&u._currentRenderTarget?u._currentRenderTarget.width:e},u.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&u._currentRenderTarget?u._currentRenderTarget.height:q},u.onResizeObservable.hasObservers()&&u.onResizeObservable.notifyObservers(u);const g=R.eu(),v=new U.c("screenShot",j,g,!1,!1,0,!1,B.b.BILINEAR_SAMPLINGMODE,void 0,P,void 0,void 0,void 0,s);v.renderList=g.meshes.slice(),v.samples=s,v.renderSprites=S,v.activeCamera=R,v.forceLayerMaskCheck=f,null===Q||void 0===Q||Q(v);const p=V||X.DumpData,l=()=>{g.incrementRenderId(),g.resetCachedMaterial(),(0,z.h)((()=>v.isReadyForRendering()&&R.isReady(!0)),(()=>{u.onEndFrameObservable.addOnce((()=>{M===e&&o===q?v.readPixels(void 0,void 0,void 0,!1).then((u=>{p(e,q,u,C,D,G,!0,void 0,T),v.dispose()})):(u.isWebGPU?I.e(51).then(I.bind(I,14940)):I.e(52).then(I.bind(I,14949))).then((async()=>await(0,E.d)("pass",v.getInternalTexture(),g,void 0,void 0,void 0,M,o).then((R=>{u._readTexturePixels(R,M,o,-1,0,null,!0,!1,0,0).then((u=>{p(M,o,u,C,D,G,!0,void 0,T),R.dispose()}))}))))})),g.incrementRenderId(),g.resetCachedMaterial();const B=g.activeCamera,U=g.activeCameras,K=R.outputRenderTarget,s=g.spritesEnabled;g.activeCamera=R,g.activeCameras=null,R.outputRenderTarget=v,g.spritesEnabled=S;const t=g.meshes;g.meshes=v.renderList||g.meshes;try{g.render()}finally{g.activeCamera=B,g.activeCameras=U,R.outputRenderTarget=K,g.spritesEnabled=s,g.meshes=t,u.getRenderWidth=h,u.getRenderHeight=x,u.onResizeObservable.hasObservers()&&u.onResizeObservable.notifyObservers(u),R.getProjectionMatrix(!0),u.skipFrameRender=!1}}),(()=>{u.skipFrameRender=!1,u.getRenderWidth=h,u.getRenderHeight=x}))};if(t){const u=new b("antialiasing",1,g.activeCamera);v.addPostProcess(u),u.CD=!0,u.onEffectCreatedObservable.addOnce((u=>{u.isReady()?l():u.onCompiled=()=>{l()}}))}else l()}async function e(u,R,I){let B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,K=arguments.length>5&&void 0!==arguments[5]&&arguments[5],C=arguments.length>6?arguments[6]:void 0,D=arguments.length>7&&void 0!==arguments[7]&&arguments[7],s=arguments.length>8&&void 0!==arguments[8]&&arguments[8],t=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],G=arguments.length>10?arguments[10]:void 0,S=arguments.length>11?arguments[11]:void 0,b=arguments.length>12?arguments[12]:void 0;return await new Promise(((r,P)=>{q(u,R,I,(u=>{"undefined"!==typeof u?r(u):P(new Error("Data is undefined"))}),B,U,K,C,D,s,t,G,S,b)}))}function Y(u,R,I){let B=0,U=0,K=0,C=0;if("object"===typeof I){const D=I.precision?Math.abs(I.precision):1;I.width&&I.height?(B=I.height*D,U=I.width*D):I.width&&!I.height?(U=I.width*D,B=Math.round(U/u.getAspectRatio(R))):I.height&&!I.width?(B=I.height*D,U=Math.round(B*u.getAspectRatio(R))):(U=Math.round(u.getRenderWidth()*D),B=Math.round(U/u.getAspectRatio(R))),I.finalWidth&&I.finalHeight?(C=I.finalHeight,K=I.finalWidth):I.finalWidth&&!I.finalHeight?(K=I.finalWidth,C=Math.round(K/u.getAspectRatio(R))):I.finalHeight&&!I.finalWidth?(C=I.finalHeight,K=Math.round(C*u.getAspectRatio(R))):(K=U,C=B)}else isNaN(I)||(B=I,U=I,K=I,C=I);return U&&(U=Math.floor(U)),B&&(B=Math.floor(B)),K&&(K=Math.floor(K)),C&&(C=Math.floor(C)),{height:0|B,width:0|U,finalWidth:0|K,finalHeight:0|C}}const M={CreateScreenshot:T,CreateScreenshotAsync:Q,CreateScreenshotWithResizeAsync:V,CreateScreenshotUsingRenderTarget:q,CreateScreenshotUsingRenderTargetAsync:e};P.Tools.CreateScreenshot=T,P.Tools.CreateScreenshotAsync=Q,P.Tools.CreateScreenshotUsingRenderTarget=q,P.Tools.CreateScreenshotUsingRenderTargetAsync=e}}]);