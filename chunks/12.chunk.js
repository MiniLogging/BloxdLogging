"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[12],{2498:(R,x,H)=>{H.r(x),H.d(x,{Dispose:()=>g,DumpData:()=>n,DumpDataAsync:()=>V,DumpFramebuffer:()=>J,DumpTools:()=>I});var k=H(2341),c=H(485),t=H(681),A=H(513);let D,U=null;async function J(R,x,H,k){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",t=arguments.length>5?arguments[5]:void 0,A=arguments.length>6?arguments[6]:void 0;const D=await H.readPixels(0,0,R,x);n(R,x,new Uint8Array(D.buffer),k,c,t,!0,void 0,A)}async function V(R,x,H){let k=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",c=arguments.length>4?arguments[4]:void 0,t=arguments.length>5&&void 0!==arguments[5]&&arguments[5],A=arguments.length>6&&void 0!==arguments[6]&&arguments[6],D=arguments.length>7?arguments[7]:void 0;return await new Promise((U=>{n(R,x,H,(R=>U(R)),k,c,t,A,D)}))}function n(R,x,J,V){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",I=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],q=arguments.length>7&&void 0!==arguments[7]&&arguments[7],S=arguments.length>8?arguments[8]:void 0;(async function(){return U||(U=new Promise(((R,x)=>{let c,t=null;const U={Eg:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(H.bind(H,2355)).then((J=>{let{ThinEngine:V}=J;const n=A.c.Instances.length;try{c=new OffscreenCanvas(100,100),t=new V(c,!1,U)}catch(q){var I;n<A.c.Instances.length&&(null===(I=A.c.Instances.pop())||void 0===I||I.dispose()),c=document.createElement("canvas"),t=new V(c,!1,U)}A.c.Instances.pop(),A.c.OnEnginesDisposedObservable.add((R=>{t&&R!==t&&!t.u&&0===A.c.Instances.length&&g()})),t.getCaps().parallelShaderCompile=void 0;const i=new k.b(t);H.e(46).then(H.bind(H,13804)).then((H=>{let{passPixelShader:A}=H;if(!t)return void x("Engine is not defined");const U=new k.e({Wi:t,name:A.name,fragmentShader:A.shader,samplerNames:["textureSampler"]});D={canvas:c,Wi:t,renderer:i,wrapper:U},R(D)}))})).catch(x)}))),await U})().then((H=>{if(H.Wi.setSize(R,x,!0),J instanceof Float32Array){const R=new Uint8Array(J.length);let x=J.length;for(;x--;){const H=J[x];R[x]=Math.round(255*(0,t.Clamp)(H))}J=R}const k=H.Wi.createRawTexture(J,R,x,5,!1,!i,1);H.renderer.setViewport(),H.renderer.applyEffectWrapper(H.wrapper),H.wrapper.effect._bindTexture("textureSampler",k),H.renderer.draw(),q?c.e.ToBlob(H.canvas,(R=>{const x=new FileReader;x.onload=R=>{const x=R.target.result;V&&V(x)},x.readAsArrayBuffer(R)}),n,S):c.e.EncodeScreenshotCanvasData(H.canvas,V,n,I,S),k.dispose()}))}function g(){var R;D?(D.wrapper.dispose(),D.renderer.dispose(),D.Wi.dispose()):null===(R=U)||void 0===R||R.then((R=>{R.wrapper.dispose(),R.renderer.dispose(),R.Wi.dispose()}));U=null,D=null}const I={DumpData:n,DumpDataAsync:V,DumpFramebuffer:J,Dispose:g};c.e.DumpData=n,c.e.DumpDataAsync=V,c.e.DumpFramebuffer=J}}]);