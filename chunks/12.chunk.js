"use strict";(self.bjbkv7h3qsd=self.bjbkv7h3qsd||[]).push([[12,20],{11441:(G,A,j)=>{j.r(A),j.d(A,{Dispose:()=>F,DumpData:()=>H,DumpDataAsync:()=>h,DumpFramebuffer:()=>d,DumpTools:()=>R});var u=j(11318),k=j(11043),B=j(11237),x=j(11085);let s,O=null;async function d(G,A,j,u){let k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",B=arguments.length>5?arguments[5]:void 0,x=arguments.length>6?arguments[6]:void 0;const s=await j.readPixels(0,0,G,A);H(G,A,new Uint8Array(s.buffer),u,k,B,!0,void 0,x)}async function h(G,A,j){let u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",k=arguments.length>4?arguments[4]:void 0,B=arguments.length>5&&void 0!==arguments[5]&&arguments[5],x=arguments.length>6&&void 0!==arguments[6]&&arguments[6],s=arguments.length>7?arguments[7]:void 0;return await new Promise((O=>{H(G,A,j,(G=>O(G)),u,k,B,x,s)}))}function H(G,A,d,h){let H=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",R=arguments.length>5?arguments[5]:void 0,U=arguments.length>6&&void 0!==arguments[6]&&arguments[6],S=arguments.length>7&&void 0!==arguments[7]&&arguments[7],C=arguments.length>8?arguments[8]:void 0;(async function(){return O||(O=new Promise(((G,A)=>{let k,B=null;const O={o:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(j.bind(j,11352)).then((d=>{let{ThinEngine:h}=d;const H=x.d.Instances.length;try{k=new OffscreenCanvas(100,100),B=new h(k,!1,O)}catch(S){var R;H<x.d.Instances.length&&(null===(R=x.d.Instances.pop())||void 0===R||R.dispose()),k=document.createElement("canvas"),B=new h(k,!1,O)}x.d.Instances.pop(),x.d.OnEnginesDisposedObservable.add((G=>{B&&G!==B&&!B.H&&0===x.d.Instances.length&&F()})),B.getCaps().parallelShaderCompile=void 0;const U=new u.e(B);j.e(52).then(j.bind(j,13681)).then((j=>{let{passPixelShader:x}=j;if(!B)return void A("Engine is not defined");const O=new u.i({UA:B,name:x.name,fragmentShader:x.shader,samplerNames:["textureSampler"]});s={canvas:k,UA:B,renderer:U,wrapper:O},G(s)}))})).catch(A)}))),await O})().then((j=>{if(j.UA.setSize(G,A,!0),d instanceof Float32Array){const G=new Uint8Array(d.length);let A=d.length;for(;A--;){const j=d[A];G[A]=Math.round(255*(0,B.Clamp)(j))}d=G}const u=j.UA.createRawTexture(d,G,A,5,!1,!U,1);j.renderer.setViewport(),j.renderer.applyEffectWrapper(j.wrapper),j.wrapper.effect._bindTexture("textureSampler",u),j.renderer.draw(),S?k.Tools.ToBlob(j.canvas,(G=>{const A=new FileReader;A.onload=G=>{const A=G.target.result;h&&h(A)},A.readAsArrayBuffer(G)}),H,C):k.Tools.EncodeScreenshotCanvasData(j.canvas,h,H,R,C),u.dispose()}))}function F(){var G;s?(s.wrapper.dispose(),s.renderer.dispose(),s.UA.dispose()):null===(G=O)||void 0===G||G.then((G=>{G.wrapper.dispose(),G.renderer.dispose(),G.UA.dispose()}));O=null,s=null}const R={DumpData:H,DumpDataAsync:h,DumpFramebuffer:d,Dispose:F};k.Tools.DumpData=H,k.Tools.DumpDataAsync=h,k.Tools.DumpFramebuffer=d},11193:(G,A,j)=>{j.r(A),j.d(A,{CreateScreenshot:()=>n,CreateScreenshotAsync:()=>Q,CreateScreenshotUsingRenderTarget:()=>I,CreateScreenshotUsingRenderTargetAsync:()=>D,CreateScreenshotWithResizeAsync:()=>X,ScreenshotTools:()=>c});var u=j(11196),k=j(11283),B=j(11313),x=j(11181),s=j(11251),O=j(11318),d=j(11345),h=j(11218);class H extends O.i{static _GetDefines(G){if(!G)return null;return G.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(G,A){G?(this._webGPUReady=!0,A.push(Promise.all([j.e(54).then(j.bind(j,13685)),j.e(55).then(j.bind(j,13692))]))):A.push(Promise.all([j.e(56).then(j.bind(j,13696)),j.e(57).then(j.bind(j,13700))]))}constructor(G){const A={...arguments.length>2?arguments[2]:void 0,name:G,UA:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||d.b.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:H.VertexUrl,fragmentShader:H.FragmentUrl,uniforms:H.Uniforms};super({...A,defines:H._GetDefines(A.UA)}),this.texelSize=new h.Vector2(0,0)}bind(){let G=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(G),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}H.VertexUrl="fxaa",H.FragmentUrl="fxaa",H.Uniforms=["texelSize"];class F extends B.e{getClassName(){return"FxaaPostProcess"}constructor(G,A){let j=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,k=arguments.length>3?arguments[3]:void 0,B=arguments.length>4?arguments[4]:void 0,x=arguments.length>5?arguments[5]:void 0,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const O={uniforms:H.Uniforms,size:"number"===typeof A?A:void 0,camera:j,samplingMode:k||u.e.BILINEAR_SAMPLINGMODE,UA:B,reusable:x,textureType:s,...A};super(G,H.FragmentUrl,{effectWrapper:"number"!==typeof A&&A.effectWrapper?void 0:new H(G,B,O),...O}),this.onApplyObservable.add((G=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(G,A,j,u){return s.c.Parse((()=>new F(G.name,G.options,A,G.renderTargetSamplingMode,j.getEngine(),G.reusable)),G,j,u)}}(0,x.h)("BABYLON.FxaaPostProcess",F);var R=j(11065),U=j(11043),S=j(11441),C=j(11447),t=j(11114);let Y=null;function n(G,A,j,u){let k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",B=arguments.length>5&&void 0!==arguments[5]&&arguments[5],x=arguments.length>6?arguments[6]:void 0,s=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:O,width:d}=g(G,A,j);if(!O||!d)return void R.e.Error("Invalid 'size' parameter !");A.gG().activeCamera===A?G.onEndFrameObservable.addOnce((()=>{Y||(Y=document.createElement("canvas")),Y.width=d,Y.height=O;const A=Y.getContext("2d"),j=G.getRenderingCanvas();if(!A||!j)return void R.e.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const h=j.width,H=j.height,F=Y.width,S=Y.height,C=F/h,t=S/H,n=s?Math.max(C,t):Math.min(C,t),Q=h*n,X=H*n,I=(F-Q)/2,D=(S-X)/2;A.drawImage(j,0,0,h,H,I,D,Q,X),B?(U.Tools.EncodeScreenshotCanvasData(Y,void 0,k,void 0,x),u&&u("")):U.Tools.EncodeScreenshotCanvasData(Y,u,k,void 0,x)})):I(G,A,j,(G=>{if(B){const A=new Blob([G]);U.Tools.DownloadBlob(A),u&&u("")}else u&&u(G)}),k,1,G.getCreationOptions().antialias,void 0,void 0,void 0,void 0,x)}async function Q(G,A,j){let u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",k=arguments.length>4?arguments[4]:void 0,B=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((x,s)=>{n(G,A,j,(G=>{"undefined"!==typeof G?x(G):s(new Error("Data is undefined"))}),u,void 0,k,B)}))}async function X(G,A,j,u){let k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",B=arguments.length>5?arguments[5]:void 0,x=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((s=>{n(G,A,{width:j,height:u},(()=>{s()}),k,!0,B,x)}))}function I(G,A,B,x){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",O=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,d=arguments.length>6&&void 0!==arguments[6]&&arguments[6],h=arguments.length>7?arguments[7]:void 0,H=arguments.length>8&&void 0!==arguments[8]&&arguments[8],U=arguments.length>9&&void 0!==arguments[9]&&arguments[9],Y=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],n=arguments.length>11?arguments[11]:void 0,Q=arguments.length>12?arguments[12]:void 0,X=arguments.length>13?arguments[13]:void 0;const{height:I,width:D,finalWidth:c,finalHeight:E}=g(G,A,B),r={width:D,height:I};if(!I||!D)return void R.e.Error("Invalid 'size' parameter !");G.skipFrameRender=!0;const b=G.getRenderWidth,M=G.getRenderHeight;G.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&G._currentRenderTarget?G._currentRenderTarget.width:D},G.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&G._currentRenderTarget?G._currentRenderTarget.height:I},G.onResizeObservable.hasObservers()&&G.onResizeObservable.notifyObservers(G);const o=A.gG(),W=new k.d("screenShot",r,o,!1,!1,0,!1,u.e.BILINEAR_SAMPLINGMODE,void 0,U,void 0,void 0,void 0,O);W.renderList=o.meshes.slice(),W.samples=O,W.renderSprites=H,W.activeCamera=A,W.forceLayerMaskCheck=Y,null===Q||void 0===Q||Q(W);const J=X||S.DumpData,p=()=>{o.incrementRenderId(),o.resetCachedMaterial(),(0,t.e)((()=>W.isReadyForRendering()&&A.isReady(!0)),(()=>{G.onEndFrameObservable.addOnce((()=>{c===D&&E===I?W.readPixels(void 0,void 0,void 0,!1).then((G=>{J(D,I,G,x,s,h,!0,void 0,n),W.dispose()})):(G.isWebGPU?j.e(51).then(j.bind(j,13675)):j.e(52).then(j.bind(j,13681))).then((async()=>await(0,C.c)("pass",W.getInternalTexture(),o,void 0,void 0,void 0,c,E).then((A=>{G._readTexturePixels(A,c,E,-1,0,null,!0,!1,0,0).then((G=>{J(c,E,G,x,s,h,!0,void 0,n),A.dispose()}))}))))})),o.incrementRenderId(),o.resetCachedMaterial();const u=o.activeCamera,k=o.activeCameras,B=A.outputRenderTarget,O=o.spritesEnabled;o.activeCamera=A,o.activeCameras=null,A.outputRenderTarget=W,o.spritesEnabled=H;const d=o.meshes;o.meshes=W.renderList||o.meshes;try{o.render()}finally{o.activeCamera=u,o.activeCameras=k,A.outputRenderTarget=B,o.spritesEnabled=O,o.meshes=d,G.getRenderWidth=b,G.getRenderHeight=M,G.onResizeObservable.hasObservers()&&G.onResizeObservable.notifyObservers(G),A.getProjectionMatrix(!0),G.skipFrameRender=!1}}),(()=>{G.skipFrameRender=!1,G.getRenderWidth=b,G.getRenderHeight=M}))};if(d){const G=new F("antialiasing",1,o.activeCamera);W.addPostProcess(G),G.Os=!0,G.onEffectCreatedObservable.addOnce((G=>{G.isReady()?p():G.onCompiled=()=>{p()}}))}else p()}async function D(G,A,j){let u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,B=arguments.length>5&&void 0!==arguments[5]&&arguments[5],x=arguments.length>6?arguments[6]:void 0,s=arguments.length>7&&void 0!==arguments[7]&&arguments[7],O=arguments.length>8&&void 0!==arguments[8]&&arguments[8],d=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],h=arguments.length>10?arguments[10]:void 0,H=arguments.length>11?arguments[11]:void 0,F=arguments.length>12?arguments[12]:void 0;return await new Promise(((R,U)=>{I(G,A,j,(G=>{"undefined"!==typeof G?R(G):U(new Error("Data is undefined"))}),u,k,B,x,s,O,d,h,H,F)}))}function g(G,A,j){let u=0,k=0,B=0,x=0;if("object"===typeof j){const s=j.precision?Math.abs(j.precision):1;j.width&&j.height?(u=j.height*s,k=j.width*s):j.width&&!j.height?(k=j.width*s,u=Math.round(k/G.getAspectRatio(A))):j.height&&!j.width?(u=j.height*s,k=Math.round(u*G.getAspectRatio(A))):(k=Math.round(G.getRenderWidth()*s),u=Math.round(k/G.getAspectRatio(A))),j.finalWidth&&j.finalHeight?(x=j.finalHeight,B=j.finalWidth):j.finalWidth&&!j.finalHeight?(B=j.finalWidth,x=Math.round(B/G.getAspectRatio(A))):j.finalHeight&&!j.finalWidth?(x=j.finalHeight,B=Math.round(x*G.getAspectRatio(A))):(B=k,x=u)}else isNaN(j)||(u=j,k=j,B=j,x=j);return k&&(k=Math.floor(k)),u&&(u=Math.floor(u)),B&&(B=Math.floor(B)),x&&(x=Math.floor(x)),{height:0|u,width:0|k,finalWidth:0|B,finalHeight:0|x}}const c={CreateScreenshot:n,CreateScreenshotAsync:Q,CreateScreenshotWithResizeAsync:X,CreateScreenshotUsingRenderTarget:I,CreateScreenshotUsingRenderTargetAsync:D};U.Tools.CreateScreenshot=n,U.Tools.CreateScreenshotAsync=Q,U.Tools.CreateScreenshotUsingRenderTarget=I,U.Tools.CreateScreenshotUsingRenderTargetAsync=D}}]);