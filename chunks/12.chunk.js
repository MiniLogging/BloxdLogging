"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[12],{2488:(t,q,S)=>{S.r(q),S.d(q,{Dispose:()=>O,DumpData:()=>b,DumpDataAsync:()=>Z,DumpFramebuffer:()=>C,DumpTools:()=>i});var o=S(2343),B=S(490),z=S(689),L=S(523);let r,e=null;async function C(t,q,S,o){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",z=arguments.length>5?arguments[5]:void 0,L=arguments.length>6?arguments[6]:void 0;const r=await S.readPixels(0,0,t,q);b(t,q,new Uint8Array(r.buffer),o,B,z,!0,void 0,L)}async function Z(t,q,S){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",B=arguments.length>4?arguments[4]:void 0,z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],L=arguments.length>6&&void 0!==arguments[6]&&arguments[6],r=arguments.length>7?arguments[7]:void 0;return await new Promise((e=>{b(t,q,S,(t=>e(t)),o,B,z,L,r)}))}function b(t,q,C,Z){let b=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",i=arguments.length>5?arguments[5]:void 0,h=arguments.length>6&&void 0!==arguments[6]&&arguments[6],l=arguments.length>7&&void 0!==arguments[7]&&arguments[7],I=arguments.length>8?arguments[8]:void 0;(async function(){return e||(e=new Promise(((t,q)=>{let B,z=null;const e={Wk:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(S.bind(S,2356)).then((C=>{let{ThinEngine:Z}=C;const b=L.b.Instances.length;try{B=new OffscreenCanvas(100,100),z=new Z(B,!1,e)}catch(l){var i;b<L.b.Instances.length&&(null===(i=L.b.Instances.pop())||void 0===i||i.dispose()),B=document.createElement("canvas"),z=new Z(B,!1,e)}L.b.Instances.pop(),L.b.OnEnginesDisposedObservable.add((t=>{z&&t!==z&&!z.u&&0===L.b.Instances.length&&O()})),z.getCaps().parallelShaderCompile=void 0;const h=new o.d(z);S.e(46).then(S.bind(S,13473)).then((S=>{let{passPixelShader:L}=S;if(!z)return void q("Engine is not defined");const e=new o.h({Ri:z,name:L.name,fragmentShader:L.shader,samplerNames:["textureSampler"]});r={canvas:B,Ri:z,renderer:h,wrapper:e},t(r)}))})).catch(q)}))),await e})().then((S=>{if(S.Ri.setSize(t,q,!0),C instanceof Float32Array){const t=new Uint8Array(C.length);let q=C.length;for(;q--;){const S=C[q];t[q]=Math.round(255*(0,z.Clamp)(S))}C=t}const o=S.Ri.createRawTexture(C,t,q,5,!1,!h,1);S.renderer.setViewport(),S.renderer.applyEffectWrapper(S.wrapper),S.wrapper.effect._bindTexture("textureSampler",o),S.renderer.draw(),l?B.f.ToBlob(S.canvas,(t=>{const q=new FileReader;q.onload=t=>{const q=t.target.result;Z&&Z(q)},q.readAsArrayBuffer(t)}),b,I):B.f.EncodeScreenshotCanvasData(S.canvas,Z,b,i,I),o.dispose()}))}function O(){var t;r?(r.wrapper.dispose(),r.renderer.dispose(),r.Ri.dispose()):null===(t=e)||void 0===t||t.then((t=>{t.wrapper.dispose(),t.renderer.dispose(),t.Ri.dispose()}));e=null,r=null}const i={DumpData:b,DumpDataAsync:Z,DumpFramebuffer:C,Dispose:O};B.f.DumpData=b,B.f.DumpDataAsync=Z,B.f.DumpFramebuffer=C}}]);