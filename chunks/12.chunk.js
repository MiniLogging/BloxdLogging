"use strict";(self.b15p7b72fr8=self.b15p7b72fr8||[]).push([[12,20],{12817:(s,k,h)=>{h.r(k),h.d(k,{Dispose:()=>a,DumpData:()=>S,DumpDataAsync:()=>c,DumpFramebuffer:()=>O,DumpTools:()=>r});var A=h(12703),g=h(12402),ms=h(12607),i=h(12445);let K,H=null;async function O(s,k,h,A){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",ms=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;const K=await h.readPixels(0,0,s,k);S(s,k,new Uint8Array(K.buffer),A,g,ms,!0,void 0,i)}async function c(s,k,h){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",g=arguments.length>4?arguments[4]:void 0,ms=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],K=arguments.length>7?arguments[7]:void 0;return await new Promise((H=>{S(s,k,h,(s=>H(s)),A,g,ms,i,K)}))}function S(s,k,O,c){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",r=arguments.length>5?arguments[5]:void 0,d=arguments.length>6&&void 0!==arguments[6]&&arguments[6],E=arguments.length>7&&void 0!==arguments[7]&&arguments[7],j=arguments.length>8?arguments[8]:void 0;(async function(){return H||(H=new Promise(((s,k)=>{let g,ms=null;const H={qh:!0,depth:!1,Bh:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(h.bind(h,12727)).then((O=>{let{ThinEngine:c}=O;const S=i.b.Instances.length;try{g=new OffscreenCanvas(100,100),ms=new c(g,!1,H)}catch(E){var r;S<i.b.Instances.length&&(null===(r=i.b.Instances.pop())||void 0===r||r.dispose()),g=document.createElement("canvas"),ms=new c(g,!1,H)}i.b.Instances.pop(),i.b.OnEnginesDisposedObservable.add((s=>{ms&&s!==ms&&!ms.P&&0===i.b.Instances.length&&a()})),ms.getCaps().parallelShaderCompile=void 0;const d=new A.b(ms);h.e(52).then(h.bind(h,15084)).then((h=>{let{passPixelShader:i}=h;if(!ms)return void k("Engine is not defined");const H=new A.f({jk:ms,name:i.name,fragmentShader:i.shader,samplerNames:["textureSampler"]});K={canvas:g,jk:ms,renderer:d,wrapper:H},s(K)}))})).catch(k)}))),await H})().then((h=>{if(h.jk.setSize(s,k,!0),O instanceof Float32Array){const s=new Uint8Array(O.length);let k=O.length;for(;k--;){const h=O[k];s[k]=Math.round(255*(0,ms.Clamp)(h))}O=s}const A=h.jk.createRawTexture(O,s,k,5,!1,!d,1);h.renderer.setViewport(),h.renderer.applyEffectWrapper(h.wrapper),h.wrapper.effect._bindTexture("textureSampler",A),h.renderer.draw(),E?g.Tools.ToBlob(h.canvas,(s=>{const k=new FileReader;k.onload=s=>{const k=s.target.result;c&&c(k)},k.readAsArrayBuffer(s)}),S,j):g.Tools.EncodeScreenshotCanvasData(h.canvas,c,S,r,j),A.dispose()}))}function a(){var s;K?(K.wrapper.dispose(),K.renderer.dispose(),K.jk.dispose()):null===(s=H)||void 0===s||s.then((s=>{s.wrapper.dispose(),s.renderer.dispose(),s.jk.dispose()}));H=null,K=null}const r={DumpData:S,DumpDataAsync:c,DumpFramebuffer:O,Dispose:a};g.Tools.DumpData=S,g.Tools.DumpDataAsync=c,g.Tools.DumpFramebuffer=O},12564:(s,k,h)=>{h.r(k),h.d(k,{CreateScreenshot:()=>D,CreateScreenshotAsync:()=>w,CreateScreenshotUsingRenderTarget:()=>u,CreateScreenshotUsingRenderTargetAsync:()=>G,CreateScreenshotWithResizeAsync:()=>B,ScreenshotTools:()=>p});var A=h(12567),g=h(12656),ms=h(12697),i=h(12543),K=h(12623),H=h(12703),O=h(12722),c=h(12590);class S extends H.f{static _GetDefines(s){if(!s)return null;return s.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(s,k){s?(this._webGPUReady=!0,k.push(Promise.all([h.e(54).then(h.bind(h,15098)),h.e(55).then(h.bind(h,15107))]))):k.push(Promise.all([h.e(56).then(h.bind(h,15115)),h.e(57).then(h.bind(h,15120))]))}constructor(s){const k={...arguments.length>2?arguments[2]:void 0,name:s,jk:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||O.b.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:S.VertexUrl,fragmentShader:S.FragmentUrl,uniforms:S.Uniforms};super({...k,defines:S._GetDefines(k.jk)}),this.texelSize=new c.Vector2(0,0)}bind(){let s=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(s),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}S.VertexUrl="fxaa",S.FragmentUrl="fxaa",S.Uniforms=["texelSize"];class a extends ms.e{getClassName(){return"FxaaPostProcess"}constructor(s,k){let h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,g=arguments.length>3?arguments[3]:void 0,ms=arguments.length>4?arguments[4]:void 0,i=arguments.length>5?arguments[5]:void 0,K=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const H={uniforms:S.Uniforms,size:"number"===typeof k?k:void 0,camera:h,samplingMode:g||A.b.BILINEAR_SAMPLINGMODE,jk:ms,reusable:i,textureType:K,...k};super(s,S.FragmentUrl,{effectWrapper:"number"!==typeof k&&k.effectWrapper?void 0:new S(s,ms,H),...H}),this.onApplyObservable.add((s=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(s,k,h,A){return K.e.Parse((()=>new a(s.name,s.options,k,s.renderTargetSamplingMode,h.getEngine(),s.reusable)),s,h,A)}}(0,i.f)("BABYLON.FxaaPostProcess",a);var r=h(12422),d=h(12402),E=h(12817),j=h(12823),P=h(12476);let R=null;function D(s,k,h,A){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",ms=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6?arguments[6]:void 0,K=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:H,width:O}=Q(s,k,h);if(!H||!O)return void r.c.Error("Invalid 'size' parameter !");k.Is().activeCamera===k?s.onEndFrameObservable.addOnce((()=>{R||(R=document.createElement("canvas")),R.width=O,R.height=H;const k=R.getContext("2d"),h=s.getRenderingCanvas();if(!k||!h)return void r.c.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const c=h.width,S=h.height,a=R.width,E=R.height,j=a/c,P=E/S,D=K?Math.max(j,P):Math.min(j,P),w=c*D,B=S*D,u=(a-w)/2,G=(E-B)/2;k.drawImage(h,0,0,c,S,u,G,w,B),ms?(d.Tools.EncodeScreenshotCanvasData(R,void 0,g,void 0,i),A&&A("")):d.Tools.EncodeScreenshotCanvasData(R,A,g,void 0,i)})):u(s,k,h,(s=>{if(ms){const k=new Blob([s]);d.Tools.DownloadBlob(k),A&&A("")}else A&&A(s)}),g,1,s.getCreationOptions().antialias,void 0,void 0,void 0,void 0,i)}async function w(s,k,h){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",g=arguments.length>4?arguments[4]:void 0,ms=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((i,K)=>{D(s,k,h,(s=>{"undefined"!==typeof s?i(s):K(new Error("Data is undefined"))}),A,void 0,g,ms)}))}async function B(s,k,h,A){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",ms=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((K=>{D(s,k,{width:h,height:A},(()=>{K()}),g,!0,ms,i)}))}function u(s,k,ms,i){let K=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",H=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,O=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7?arguments[7]:void 0,S=arguments.length>8&&void 0!==arguments[8]&&arguments[8],d=arguments.length>9&&void 0!==arguments[9]&&arguments[9],R=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],D=arguments.length>11?arguments[11]:void 0,w=arguments.length>12?arguments[12]:void 0,B=arguments.length>13?arguments[13]:void 0;const{height:u,width:G,finalWidth:p,finalHeight:I}=Q(s,k,ms),N={width:G,height:u};if(!u||!G)return void r.c.Error("Invalid 'size' parameter !");s.skipFrameRender=!0;const b=s.getRenderWidth,t=s.getRenderHeight;s.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&s._currentRenderTarget?s._currentRenderTarget.width:G},s.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&s._currentRenderTarget?s._currentRenderTarget.height:u},s.onResizeObservable.hasObservers()&&s.onResizeObservable.notifyObservers(s);const z=k.Is(),C=new g.b("screenShot",N,z,!1,!1,0,!1,A.b.BILINEAR_SAMPLINGMODE,void 0,d,void 0,void 0,void 0,H);C.renderList=z.meshes.slice(),C.samples=H,C.renderSprites=S,C.activeCamera=k,C.forceLayerMaskCheck=R,null===w||void 0===w||w(C);const v=B||E.DumpData,Y=()=>{z.incrementRenderId(),z.resetCachedMaterial(),(0,P.e)((()=>C.isReadyForRendering()&&k.isReady(!0)),(()=>{s.onEndFrameObservable.addOnce((()=>{p===G&&I===u?C.readPixels(void 0,void 0,void 0,!1).then((s=>{v(G,u,s,i,K,c,!0,void 0,D),C.dispose()})):(s.isWebGPU?h.e(51).then(h.bind(h,15075)):h.e(52).then(h.bind(h,15084))).then((async()=>await(0,j.e)("pass",C.getInternalTexture(),z,void 0,void 0,void 0,p,I).then((k=>{s._readTexturePixels(k,p,I,-1,0,null,!0,!1,0,0).then((s=>{v(p,I,s,i,K,c,!0,void 0,D),k.dispose()}))}))))})),z.incrementRenderId(),z.resetCachedMaterial();const A=z.activeCamera,g=z.activeCameras,ms=k.outputRenderTarget,H=z.spritesEnabled;z.activeCamera=k,z.activeCameras=null,k.outputRenderTarget=C,z.spritesEnabled=S;const O=z.meshes;z.meshes=C.renderList||z.meshes;try{z.render()}finally{z.activeCamera=A,z.activeCameras=g,k.outputRenderTarget=ms,z.spritesEnabled=H,z.meshes=O,s.getRenderWidth=b,s.getRenderHeight=t,s.onResizeObservable.hasObservers()&&s.onResizeObservable.notifyObservers(s),k.getProjectionMatrix(!0),s.skipFrameRender=!1}}),(()=>{s.skipFrameRender=!1,s.getRenderWidth=b,s.getRenderHeight=t}))};if(O){const s=new a("antialiasing",1,z.activeCamera);C.addPostProcess(s),s.Xh=!0,s.onEffectCreatedObservable.addOnce((s=>{s.isReady()?Y():s.onCompiled=()=>{Y()}}))}else Y()}async function G(s,k,h){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,ms=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6?arguments[6]:void 0,K=arguments.length>7&&void 0!==arguments[7]&&arguments[7],H=arguments.length>8&&void 0!==arguments[8]&&arguments[8],O=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],c=arguments.length>10?arguments[10]:void 0,S=arguments.length>11?arguments[11]:void 0,a=arguments.length>12?arguments[12]:void 0;return await new Promise(((r,d)=>{u(s,k,h,(s=>{"undefined"!==typeof s?r(s):d(new Error("Data is undefined"))}),A,g,ms,i,K,H,O,c,S,a)}))}function Q(s,k,h){let A=0,g=0,ms=0,i=0;if("object"===typeof h){const K=h.precision?Math.abs(h.precision):1;h.width&&h.height?(A=h.height*K,g=h.width*K):h.width&&!h.height?(g=h.width*K,A=Math.round(g/s.getAspectRatio(k))):h.height&&!h.width?(A=h.height*K,g=Math.round(A*s.getAspectRatio(k))):(g=Math.round(s.getRenderWidth()*K),A=Math.round(g/s.getAspectRatio(k))),h.finalWidth&&h.finalHeight?(i=h.finalHeight,ms=h.finalWidth):h.finalWidth&&!h.finalHeight?(ms=h.finalWidth,i=Math.round(ms/s.getAspectRatio(k))):h.finalHeight&&!h.finalWidth?(i=h.finalHeight,ms=Math.round(i*s.getAspectRatio(k))):(ms=g,i=A)}else isNaN(h)||(A=h,g=h,ms=h,i=h);return g&&(g=Math.floor(g)),A&&(A=Math.floor(A)),ms&&(ms=Math.floor(ms)),i&&(i=Math.floor(i)),{height:0|A,width:0|g,finalWidth:0|ms,finalHeight:0|i}}const p={CreateScreenshot:D,CreateScreenshotAsync:w,CreateScreenshotWithResizeAsync:B,CreateScreenshotUsingRenderTarget:u,CreateScreenshotUsingRenderTargetAsync:G};d.Tools.CreateScreenshot=D,d.Tools.CreateScreenshotAsync=w,d.Tools.CreateScreenshotUsingRenderTarget=u,d.Tools.CreateScreenshotUsingRenderTargetAsync=G}}]);