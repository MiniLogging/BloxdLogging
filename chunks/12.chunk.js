"use strict";(self.h6ljd275xwr=self.h6ljd275xwr||[]).push([[12,20],{11542:(n,y,H)=>{H.r(y),H.d(y,{Dispose:()=>A,DumpData:()=>b,DumpDataAsync:()=>q,DumpFramebuffer:()=>V,DumpTools:()=>U});var o=H(11408),G=H(11094),h=H(11303),k=H(11149);let i,B=null;async function V(n,y,H,o){let G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",h=arguments.length>5?arguments[5]:void 0,k=arguments.length>6?arguments[6]:void 0;const i=await H.readPixels(0,0,n,y);b(n,y,new Uint8Array(i.buffer),o,G,h,!0,void 0,k)}async function q(n,y,H){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",G=arguments.length>4?arguments[4]:void 0,h=arguments.length>5&&void 0!==arguments[5]&&arguments[5],k=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7?arguments[7]:void 0;return await new Promise((B=>{b(n,y,H,(n=>B(n)),o,G,h,k,i)}))}function b(n,y,V,q){let b=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",U=arguments.length>5?arguments[5]:void 0,T=arguments.length>6&&void 0!==arguments[6]&&arguments[6],W=arguments.length>7&&void 0!==arguments[7]&&arguments[7],z=arguments.length>8?arguments[8]:void 0;(async function(){return B||(B=new Promise(((n,y)=>{let G,h=null;const B={o:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(H.bind(H,11446)).then((V=>{let{ThinEngine:q}=V;const b=k.c.Instances.length;try{G=new OffscreenCanvas(100,100),h=new q(G,!1,B)}catch(W){var U;b<k.c.Instances.length&&(null===(U=k.c.Instances.pop())||void 0===U||U.dispose()),G=document.createElement("canvas"),h=new q(G,!1,B)}k.c.Instances.pop(),k.c.OnEnginesDisposedObservable.add((n=>{h&&n!==h&&!h.A&&0===k.c.Instances.length&&A()})),h.getCaps().parallelShaderCompile=void 0;const T=new o.e(h);H.e(52).then(H.bind(H,13884)).then((H=>{let{passPixelShader:k}=H;if(!h)return void y("Engine is not defined");const B=new o.g({Wy:h,name:k.name,fragmentShader:k.shader,samplerNames:["textureSampler"]});i={canvas:G,Wy:h,renderer:T,wrapper:B},n(i)}))})).catch(y)}))),await B})().then((H=>{if(H.Wy.setSize(n,y,!0),V instanceof Float32Array){const n=new Uint8Array(V.length);let y=V.length;for(;y--;){const H=V[y];n[y]=Math.round(255*(0,h.Clamp)(H))}V=n}const o=H.Wy.createRawTexture(V,n,y,5,!1,!T,1);H.renderer.setViewport(),H.renderer.applyEffectWrapper(H.wrapper),H.wrapper.effect._bindTexture("textureSampler",o),H.renderer.draw(),W?G.Tools.ToBlob(H.canvas,(n=>{const y=new FileReader;y.onload=n=>{const y=n.target.result;q&&q(y)},y.readAsArrayBuffer(n)}),b,z):G.Tools.EncodeScreenshotCanvasData(H.canvas,q,b,U,z),o.dispose()}))}function A(){var n;i?(i.wrapper.dispose(),i.renderer.dispose(),i.Wy.dispose()):null===(n=B)||void 0===n||n.then((n=>{n.wrapper.dispose(),n.renderer.dispose(),n.Wy.dispose()}));B=null,i=null}const U={DumpData:b,DumpDataAsync:q,DumpFramebuffer:V,Dispose:A};G.Tools.DumpData=b,G.Tools.DumpDataAsync=q,G.Tools.DumpFramebuffer=V},11260:(n,y,H)=>{H.r(y),H.d(y,{CreateScreenshot:()=>v,CreateScreenshotAsync:()=>F,CreateScreenshotUsingRenderTarget:()=>M,CreateScreenshotUsingRenderTargetAsync:()=>f,CreateScreenshotWithResizeAsync:()=>g,ScreenshotTools:()=>p});var o=H(11269),G=H(11349),h=H(11399),k=H(11248),i=H(11325),B=H(11408),V=H(11440),q=H(11288);class b extends B.g{static _GetDefines(n){if(!n)return null;return n.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(n,y){n?(this._webGPUReady=!0,y.push(Promise.all([H.e(54).then(H.bind(H,13894)),H.e(55).then(H.bind(H,13899))]))):y.push(Promise.all([H.e(56).then(H.bind(H,13907)),H.e(57).then(H.bind(H,13916))]))}constructor(n){const y={...arguments.length>2?arguments[2]:void 0,name:n,Wy:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||V.d.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:b.VertexUrl,fragmentShader:b.FragmentUrl,uniforms:b.Uniforms};super({...y,defines:b._GetDefines(y.Wy)}),this.texelSize=new q.Vector2(0,0)}bind(){let n=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(n),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}b.VertexUrl="fxaa",b.FragmentUrl="fxaa",b.Uniforms=["texelSize"];class A extends h.e{getClassName(){return"FxaaPostProcess"}constructor(n,y){let H=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,G=arguments.length>3?arguments[3]:void 0,h=arguments.length>4?arguments[4]:void 0,k=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const B={uniforms:b.Uniforms,size:"number"===typeof y?y:void 0,camera:H,samplingMode:G||o.b.BILINEAR_SAMPLINGMODE,Wy:h,reusable:k,textureType:i,...y};super(n,b.FragmentUrl,{effectWrapper:"number"!==typeof y&&y.effectWrapper?void 0:new b(n,h,B),...B}),this.onApplyObservable.add((n=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(n,y,H,o){return i.c.Parse((()=>new A(n.name,n.options,y,n.renderTargetSamplingMode,H.getEngine(),n.reusable)),n,H,o)}}(0,k.h)("BABYLON.FxaaPostProcess",A);var U=H(11114),T=H(11094),W=H(11542),z=H(11547),Q=H(11185);let l=null;function v(n,y,H,o){let G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",h=arguments.length>5&&void 0!==arguments[5]&&arguments[5],k=arguments.length>6?arguments[6]:void 0,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:B,width:V}=c(n,y,H);if(!B||!V)return void U.d.Error("Invalid 'size' parameter !");y.pn().activeCamera===y?n.onEndFrameObservable.addOnce((()=>{l||(l=document.createElement("canvas")),l.width=V,l.height=B;const y=l.getContext("2d"),H=n.getRenderingCanvas();if(!y||!H)return void U.d.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const q=H.width,b=H.height,A=l.width,W=l.height,z=A/q,Q=W/b,v=i?Math.max(z,Q):Math.min(z,Q),F=q*v,g=b*v,M=(A-F)/2,f=(W-g)/2;y.drawImage(H,0,0,q,b,M,f,F,g),h?(T.Tools.EncodeScreenshotCanvasData(l,void 0,G,void 0,k),o&&o("")):T.Tools.EncodeScreenshotCanvasData(l,o,G,void 0,k)})):M(n,y,H,(n=>{if(h){const y=new Blob([n]);T.Tools.DownloadBlob(y),o&&o("")}else o&&o(n)}),G,1,n.getCreationOptions().antialias,void 0,void 0,void 0,void 0,k)}async function F(n,y,H){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",G=arguments.length>4?arguments[4]:void 0,h=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((k,i)=>{v(n,y,H,(n=>{"undefined"!==typeof n?k(n):i(new Error("Data is undefined"))}),o,void 0,G,h)}))}async function g(n,y,H,o){let G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",h=arguments.length>5?arguments[5]:void 0,k=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((i=>{v(n,y,{width:H,height:o},(()=>{i()}),G,!0,h,k)}))}function M(n,y,h,k){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",B=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,V=arguments.length>6&&void 0!==arguments[6]&&arguments[6],q=arguments.length>7?arguments[7]:void 0,b=arguments.length>8&&void 0!==arguments[8]&&arguments[8],T=arguments.length>9&&void 0!==arguments[9]&&arguments[9],l=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],v=arguments.length>11?arguments[11]:void 0,F=arguments.length>12?arguments[12]:void 0,g=arguments.length>13?arguments[13]:void 0;const{height:M,width:f,finalWidth:p,finalHeight:E}=c(n,y,h),X={width:f,height:M};if(!M||!f)return void U.d.Error("Invalid 'size' parameter !");n.skipFrameRender=!0;const d=n.getRenderWidth,a=n.getRenderHeight;n.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&n._currentRenderTarget?n._currentRenderTarget.width:f},n.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&n._currentRenderTarget?n._currentRenderTarget.height:M},n.onResizeObservable.hasObservers()&&n.onResizeObservable.notifyObservers(n);const O=y.pn(),e=new G.e("screenShot",X,O,!1,!1,0,!1,o.b.BILINEAR_SAMPLINGMODE,void 0,T,void 0,void 0,void 0,B);e.renderList=O.meshes.slice(),e.samples=B,e.renderSprites=b,e.activeCamera=y,e.forceLayerMaskCheck=l,null===F||void 0===F||F(e);const w=g||W.DumpData,j=()=>{O.incrementRenderId(),O.resetCachedMaterial(),(0,Q.e)((()=>e.isReadyForRendering()&&y.isReady(!0)),(()=>{n.onEndFrameObservable.addOnce((()=>{p===f&&E===M?e.readPixels(void 0,void 0,void 0,!1).then((n=>{w(f,M,n,k,i,q,!0,void 0,v),e.dispose()})):(n.isWebGPU?H.e(51).then(H.bind(H,13876)):H.e(52).then(H.bind(H,13884))).then((async()=>await(0,z.d)("pass",e.getInternalTexture(),O,void 0,void 0,void 0,p,E).then((y=>{n._readTexturePixels(y,p,E,-1,0,null,!0,!1,0,0).then((n=>{w(p,E,n,k,i,q,!0,void 0,v),y.dispose()}))}))))})),O.incrementRenderId(),O.resetCachedMaterial();const o=O.activeCamera,G=O.activeCameras,h=y.outputRenderTarget,B=O.spritesEnabled;O.activeCamera=y,O.activeCameras=null,y.outputRenderTarget=e,O.spritesEnabled=b;const V=O.meshes;O.meshes=e.renderList||O.meshes;try{O.render()}finally{O.activeCamera=o,O.activeCameras=G,y.outputRenderTarget=h,O.spritesEnabled=B,O.meshes=V,n.getRenderWidth=d,n.getRenderHeight=a,n.onResizeObservable.hasObservers()&&n.onResizeObservable.notifyObservers(n),y.getProjectionMatrix(!0),n.skipFrameRender=!1}}),(()=>{n.skipFrameRender=!1,n.getRenderWidth=d,n.getRenderHeight=a}))};if(V){const n=new A("antialiasing",1,O.activeCamera);e.addPostProcess(n),n.Dh=!0,n.onEffectCreatedObservable.addOnce((n=>{n.isReady()?j():n.onCompiled=()=>{j()}}))}else j()}async function f(n,y,H){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,h=arguments.length>5&&void 0!==arguments[5]&&arguments[5],k=arguments.length>6?arguments[6]:void 0,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],B=arguments.length>8&&void 0!==arguments[8]&&arguments[8],V=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],q=arguments.length>10?arguments[10]:void 0,b=arguments.length>11?arguments[11]:void 0,A=arguments.length>12?arguments[12]:void 0;return await new Promise(((U,T)=>{M(n,y,H,(n=>{"undefined"!==typeof n?U(n):T(new Error("Data is undefined"))}),o,G,h,k,i,B,V,q,b,A)}))}function c(n,y,H){let o=0,G=0,h=0,k=0;if("object"===typeof H){const i=H.precision?Math.abs(H.precision):1;H.width&&H.height?(o=H.height*i,G=H.width*i):H.width&&!H.height?(G=H.width*i,o=Math.round(G/n.getAspectRatio(y))):H.height&&!H.width?(o=H.height*i,G=Math.round(o*n.getAspectRatio(y))):(G=Math.round(n.getRenderWidth()*i),o=Math.round(G/n.getAspectRatio(y))),H.finalWidth&&H.finalHeight?(k=H.finalHeight,h=H.finalWidth):H.finalWidth&&!H.finalHeight?(h=H.finalWidth,k=Math.round(h/n.getAspectRatio(y))):H.finalHeight&&!H.finalWidth?(k=H.finalHeight,h=Math.round(k*n.getAspectRatio(y))):(h=G,k=o)}else isNaN(H)||(o=H,G=H,h=H,k=H);return G&&(G=Math.floor(G)),o&&(o=Math.floor(o)),h&&(h=Math.floor(h)),k&&(k=Math.floor(k)),{height:0|o,width:0|G,finalWidth:0|h,finalHeight:0|k}}const p={CreateScreenshot:v,CreateScreenshotAsync:F,CreateScreenshotWithResizeAsync:g,CreateScreenshotUsingRenderTarget:M,CreateScreenshotUsingRenderTargetAsync:f};T.Tools.CreateScreenshot=v,T.Tools.CreateScreenshotAsync=F,T.Tools.CreateScreenshotUsingRenderTarget=M,T.Tools.CreateScreenshotUsingRenderTargetAsync=f}}]);