"use strict";(self.uw9p3pwwsje=self.uw9p3pwwsje||[]).push([[12,20],{13046:(D,h,o)=>{o.r(h),o.d(h,{Dispose:()=>Q,DumpData:()=>K,DumpDataAsync:()=>k,DumpFramebuffer:()=>S,DumpTools:()=>v});var H=o(12930),g=o(12642),j=o(12842),M=o(12683);let R,t=null;async function S(D,h,o,H){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",j=arguments.length>5?arguments[5]:void 0,M=arguments.length>6?arguments[6]:void 0;const R=await o.readPixels(0,0,D,h);K(D,h,new Uint8Array(R.buffer),H,g,j,!0,void 0,M)}async function k(D,h,o){let H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",g=arguments.length>4?arguments[4]:void 0,j=arguments.length>5&&void 0!==arguments[5]&&arguments[5],M=arguments.length>6&&void 0!==arguments[6]&&arguments[6],R=arguments.length>7?arguments[7]:void 0;return await new Promise((t=>{K(D,h,o,(D=>t(D)),H,g,j,M,R)}))}function K(D,h,S,k){let K=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",v=arguments.length>5?arguments[5]:void 0,r=arguments.length>6&&void 0!==arguments[6]&&arguments[6],B=arguments.length>7&&void 0!==arguments[7]&&arguments[7],s=arguments.length>8?arguments[8]:void 0;(async function(){return t||(t=new Promise(((D,h)=>{let g,j=null;const t={ph:!0,depth:!1,Oh:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(o.bind(o,12962)).then((S=>{let{ThinEngine:k}=S;const K=M.d.Instances.length;try{g=new OffscreenCanvas(100,100),j=new k(g,!1,t)}catch(B){var v;K<M.d.Instances.length&&(null===(v=M.d.Instances.pop())||void 0===v||v.dispose()),g=document.createElement("canvas"),j=new k(g,!1,t)}M.d.Instances.pop(),M.d.OnEnginesDisposedObservable.add((D=>{j&&D!==j&&!j.S&&0===M.d.Instances.length&&Q()})),j.getCaps().parallelShaderCompile=void 0;const r=new H.b(j);o.e(52).then(o.bind(o,15193)).then((o=>{let{passPixelShader:M}=o;if(!j)return void h("Engine is not defined");const t=new H.c({bh:j,name:M.name,fragmentShader:M.shader,samplerNames:["textureSampler"]});R={canvas:g,bh:j,renderer:r,wrapper:t},D(R)}))})).catch(h)}))),await t})().then((o=>{if(o.bh.setSize(D,h,!0),S instanceof Float32Array){const D=new Uint8Array(S.length);let h=S.length;for(;h--;){const o=S[h];D[h]=Math.round(255*(0,j.Clamp)(o))}S=D}const H=o.bh.createRawTexture(S,D,h,5,!1,!r,1);o.renderer.setViewport(),o.renderer.applyEffectWrapper(o.wrapper),o.wrapper.effect._bindTexture("textureSampler",H),o.renderer.draw(),B?g.Tools.ToBlob(o.canvas,(D=>{const h=new FileReader;h.onload=D=>{const h=D.target.result;k&&k(h)},h.readAsArrayBuffer(D)}),K,s):g.Tools.EncodeScreenshotCanvasData(o.canvas,k,K,v,s),H.dispose()}))}function Q(){var D;R?(R.wrapper.dispose(),R.renderer.dispose(),R.bh.dispose()):null===(D=t)||void 0===D||D.then((D=>{D.wrapper.dispose(),D.renderer.dispose(),D.bh.dispose()}));t=null,R=null}const v={DumpData:K,DumpDataAsync:k,DumpFramebuffer:S,Dispose:Q};g.Tools.DumpData=K,g.Tools.DumpDataAsync=k,g.Tools.DumpFramebuffer=S},12804:(D,h,o)=>{o.r(h),o.d(h,{CreateScreenshot:()=>c,CreateScreenshotAsync:()=>y,CreateScreenshotUsingRenderTarget:()=>i,CreateScreenshotUsingRenderTargetAsync:()=>G,CreateScreenshotWithResizeAsync:()=>b,ScreenshotTools:()=>J});var H=o(12807),g=o(12885),j=o(12923),M=o(12793),R=o(12860),t=o(12930),S=o(12954),k=o(12831);class K extends t.c{static _GetDefines(D){if(!D)return null;return D.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(D,h){D?(this._webGPUReady=!0,h.push(Promise.all([o.e(54).then(o.bind(o,15200)),o.e(55).then(o.bind(o,15209))]))):h.push(Promise.all([o.e(56).then(o.bind(o,15218)),o.e(57).then(o.bind(o,15221))]))}constructor(D){const h={...arguments.length>2?arguments[2]:void 0,name:D,bh:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||S.d.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:K.VertexUrl,fragmentShader:K.FragmentUrl,uniforms:K.Uniforms};super({...h,defines:K._GetDefines(h.bh)}),this.texelSize=new k.Vector2(0,0)}bind(){let D=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(D),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}K.VertexUrl="fxaa",K.FragmentUrl="fxaa",K.Uniforms=["texelSize"];class Q extends j.e{getClassName(){return"FxaaPostProcess"}constructor(D,h){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,g=arguments.length>3?arguments[3]:void 0,j=arguments.length>4?arguments[4]:void 0,M=arguments.length>5?arguments[5]:void 0,R=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const t={uniforms:K.Uniforms,size:"number"===typeof h?h:void 0,camera:o,samplingMode:g||H.b.BILINEAR_SAMPLINGMODE,bh:j,reusable:M,textureType:R,...h};super(D,K.FragmentUrl,{effectWrapper:"number"!==typeof h&&h.effectWrapper?void 0:new K(D,j,t),...t}),this.onApplyObservable.add((D=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(D,h,o,H){return R.d.Parse((()=>new Q(D.name,D.options,h,D.renderTargetSamplingMode,o.getEngine(),D.reusable)),D,o,H)}}(0,M.g)("BABYLON.FxaaPostProcess",Q);var v=o(12658),r=o(12642),B=o(13046),s=o(13053),U=o(12722);let q=null;function c(D,h,o,H){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",j=arguments.length>5&&void 0!==arguments[5]&&arguments[5],M=arguments.length>6?arguments[6]:void 0,R=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:t,width:S}=N(D,h,o);if(!t||!S)return void v.d.Error("Invalid 'size' parameter !");h.GD().activeCamera===h?D.onEndFrameObservable.addOnce((()=>{q||(q=document.createElement("canvas")),q.width=S,q.height=t;const h=q.getContext("2d"),o=D.getRenderingCanvas();if(!h||!o)return void v.d.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const k=o.width,K=o.height,Q=q.width,B=q.height,s=Q/k,U=B/K,c=R?Math.max(s,U):Math.min(s,U),y=k*c,b=K*c,i=(Q-y)/2,G=(B-b)/2;h.drawImage(o,0,0,k,K,i,G,y,b),j?(r.Tools.EncodeScreenshotCanvasData(q,void 0,g,void 0,M),H&&H("")):r.Tools.EncodeScreenshotCanvasData(q,H,g,void 0,M)})):i(D,h,o,(D=>{if(j){const h=new Blob([D]);r.Tools.DownloadBlob(h),H&&H("")}else H&&H(D)}),g,1,D.getCreationOptions().antialias,void 0,void 0,void 0,void 0,M)}async function y(D,h,o){let H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",g=arguments.length>4?arguments[4]:void 0,j=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((M,R)=>{c(D,h,o,(D=>{"undefined"!==typeof D?M(D):R(new Error("Data is undefined"))}),H,void 0,g,j)}))}async function b(D,h,o,H){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",j=arguments.length>5?arguments[5]:void 0,M=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((R=>{c(D,h,{width:o,height:H},(()=>{R()}),g,!0,j,M)}))}function i(D,h,j,M){let R=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",t=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,S=arguments.length>6&&void 0!==arguments[6]&&arguments[6],k=arguments.length>7?arguments[7]:void 0,K=arguments.length>8&&void 0!==arguments[8]&&arguments[8],r=arguments.length>9&&void 0!==arguments[9]&&arguments[9],q=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],c=arguments.length>11?arguments[11]:void 0,y=arguments.length>12?arguments[12]:void 0,b=arguments.length>13?arguments[13]:void 0;const{height:i,width:G,finalWidth:J,finalHeight:O}=N(D,h,j),E={width:G,height:i};if(!i||!G)return void v.d.Error("Invalid 'size' parameter !");D.skipFrameRender=!0;const L=D.getRenderWidth,T=D.getRenderHeight;D.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&D._currentRenderTarget?D._currentRenderTarget.width:G},D.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&D._currentRenderTarget?D._currentRenderTarget.height:i},D.onResizeObservable.hasObservers()&&D.onResizeObservable.notifyObservers(D);const Z=h.GD(),e=new g.c("screenShot",E,Z,!1,!1,0,!1,H.b.BILINEAR_SAMPLINGMODE,void 0,r,void 0,void 0,void 0,t);e.renderList=Z.meshes.slice(),e.samples=t,e.renderSprites=K,e.activeCamera=h,e.forceLayerMaskCheck=q,null===y||void 0===y||y(e);const p=b||B.DumpData,mD=()=>{Z.incrementRenderId(),Z.resetCachedMaterial(),(0,U.f)((()=>e.isReadyForRendering()&&h.isReady(!0)),(()=>{D.onEndFrameObservable.addOnce((()=>{J===G&&O===i?e.readPixels(void 0,void 0,void 0,!1).then((D=>{p(G,i,D,M,R,k,!0,void 0,c),e.dispose()})):(D.isWebGPU?o.e(51).then(o.bind(o,15188)):o.e(52).then(o.bind(o,15193))).then((async()=>await(0,s.d)("pass",e.getInternalTexture(),Z,void 0,void 0,void 0,J,O).then((h=>{D._readTexturePixels(h,J,O,-1,0,null,!0,!1,0,0).then((D=>{p(J,O,D,M,R,k,!0,void 0,c),h.dispose()}))}))))})),Z.incrementRenderId(),Z.resetCachedMaterial();const H=Z.activeCamera,g=Z.activeCameras,j=h.outputRenderTarget,t=Z.spritesEnabled;Z.activeCamera=h,Z.activeCameras=null,h.outputRenderTarget=e,Z.spritesEnabled=K;const S=Z.meshes;Z.meshes=e.renderList||Z.meshes;try{Z.render()}finally{Z.activeCamera=H,Z.activeCameras=g,h.outputRenderTarget=j,Z.spritesEnabled=t,Z.meshes=S,D.getRenderWidth=L,D.getRenderHeight=T,D.onResizeObservable.hasObservers()&&D.onResizeObservable.notifyObservers(D),h.getProjectionMatrix(!0),D.skipFrameRender=!1}}),(()=>{D.skipFrameRender=!1,D.getRenderWidth=L,D.getRenderHeight=T}))};if(S){const D=new Q("antialiasing",1,Z.activeCamera);e.addPostProcess(D),D.ah=!0,D.onEffectCreatedObservable.addOnce((D=>{D.isReady()?mD():D.onCompiled=()=>{mD()}}))}else mD()}async function G(D,h,o){let H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,j=arguments.length>5&&void 0!==arguments[5]&&arguments[5],M=arguments.length>6?arguments[6]:void 0,R=arguments.length>7&&void 0!==arguments[7]&&arguments[7],t=arguments.length>8&&void 0!==arguments[8]&&arguments[8],S=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],k=arguments.length>10?arguments[10]:void 0,K=arguments.length>11?arguments[11]:void 0,Q=arguments.length>12?arguments[12]:void 0;return await new Promise(((v,r)=>{i(D,h,o,(D=>{"undefined"!==typeof D?v(D):r(new Error("Data is undefined"))}),H,g,j,M,R,t,S,k,K,Q)}))}function N(D,h,o){let H=0,g=0,j=0,M=0;if("object"===typeof o){const R=o.precision?Math.abs(o.precision):1;o.width&&o.height?(H=o.height*R,g=o.width*R):o.width&&!o.height?(g=o.width*R,H=Math.round(g/D.getAspectRatio(h))):o.height&&!o.width?(H=o.height*R,g=Math.round(H*D.getAspectRatio(h))):(g=Math.round(D.getRenderWidth()*R),H=Math.round(g/D.getAspectRatio(h))),o.finalWidth&&o.finalHeight?(M=o.finalHeight,j=o.finalWidth):o.finalWidth&&!o.finalHeight?(j=o.finalWidth,M=Math.round(j/D.getAspectRatio(h))):o.finalHeight&&!o.finalWidth?(M=o.finalHeight,j=Math.round(M*D.getAspectRatio(h))):(j=g,M=H)}else isNaN(o)||(H=o,g=o,j=o,M=o);return g&&(g=Math.floor(g)),H&&(H=Math.floor(H)),j&&(j=Math.floor(j)),M&&(M=Math.floor(M)),{height:0|H,width:0|g,finalWidth:0|j,finalHeight:0|M}}const J={CreateScreenshot:c,CreateScreenshotAsync:y,CreateScreenshotWithResizeAsync:b,CreateScreenshotUsingRenderTarget:i,CreateScreenshotUsingRenderTargetAsync:G};r.Tools.CreateScreenshot=c,r.Tools.CreateScreenshotAsync=y,r.Tools.CreateScreenshotUsingRenderTarget=i,r.Tools.CreateScreenshotUsingRenderTargetAsync=G}}]);