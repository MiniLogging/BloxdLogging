"use strict";(self.zcqpiao938m=self.zcqpiao938m||[]).push([[12,20],{12061:(C,U,K)=>{K.r(U),K.d(U,{Dispose:()=>E,DumpData:()=>p,DumpDataAsync:()=>j,DumpFramebuffer:()=>z,DumpTools:()=>u});var m=K(11941),O=K(11660),X=K(11846),A=K(11703);let e,t=null;async function z(C,U,K,m){let O=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",X=arguments.length>5?arguments[5]:void 0,A=arguments.length>6?arguments[6]:void 0;const e=await K.readPixels(0,0,C,U);p(C,U,new Uint8Array(e.buffer),m,O,X,!0,void 0,A)}async function j(C,U,K){let m=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",O=arguments.length>4?arguments[4]:void 0,X=arguments.length>5&&void 0!==arguments[5]&&arguments[5],A=arguments.length>6&&void 0!==arguments[6]&&arguments[6],e=arguments.length>7?arguments[7]:void 0;return await new Promise((t=>{p(C,U,K,(C=>t(C)),m,O,X,A,e)}))}function p(C,U,z,j){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",u=arguments.length>5?arguments[5]:void 0,b=arguments.length>6&&void 0!==arguments[6]&&arguments[6],v=arguments.length>7&&void 0!==arguments[7]&&arguments[7],Q=arguments.length>8?arguments[8]:void 0;(async function(){return t||(t=new Promise(((C,U)=>{let O,X=null;const t={Ue:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(K.bind(K,11962)).then((z=>{let{ThinEngine:j}=z;const p=A.c.Instances.length;try{O=new OffscreenCanvas(100,100),X=new j(O,!1,t)}catch(v){var u;p<A.c.Instances.length&&(null===(u=A.c.Instances.pop())||void 0===u||u.dispose()),O=document.createElement("canvas"),X=new j(O,!1,t)}A.c.Instances.pop(),A.c.OnEnginesDisposedObservable.add((C=>{X&&C!==X&&!X.A&&0===A.c.Instances.length&&E()})),X.getCaps().parallelShaderCompile=void 0;const b=new m.c(X);K.e(52).then(K.bind(K,14289)).then((K=>{let{passPixelShader:A}=K;if(!X)return void U("Engine is not defined");const t=new m.e({uU:X,name:A.name,fragmentShader:A.shader,samplerNames:["textureSampler"]});e={canvas:O,uU:X,renderer:b,wrapper:t},C(e)}))})).catch(U)}))),await t})().then((K=>{if(K.uU.setSize(C,U,!0),z instanceof Float32Array){const C=new Uint8Array(z.length);let U=z.length;for(;U--;){const K=z[U];C[U]=Math.round(255*(0,X.Clamp)(K))}z=C}const m=K.uU.createRawTexture(z,C,U,5,!1,!b,1);K.renderer.setViewport(),K.renderer.applyEffectWrapper(K.wrapper),K.wrapper.effect._bindTexture("textureSampler",m),K.renderer.draw(),v?O.Tools.ToBlob(K.canvas,(C=>{const U=new FileReader;U.onload=C=>{const U=C.target.result;j&&j(U)},U.readAsArrayBuffer(C)}),p,Q):O.Tools.EncodeScreenshotCanvasData(K.canvas,j,p,u,Q),m.dispose()}))}function E(){var C;e?(e.wrapper.dispose(),e.renderer.dispose(),e.uU.dispose()):null===(C=t)||void 0===C||C.then((C=>{C.wrapper.dispose(),C.renderer.dispose(),C.uU.dispose()}));t=null,e=null}const u={DumpData:p,DumpDataAsync:j,DumpFramebuffer:z,Dispose:E};O.Tools.DumpData=p,O.Tools.DumpDataAsync=j,O.Tools.DumpFramebuffer=z},11804:(C,U,K)=>{K.r(U),K.d(U,{CreateScreenshot:()=>F,CreateScreenshotAsync:()=>Z,CreateScreenshotUsingRenderTarget:()=>H,CreateScreenshotUsingRenderTargetAsync:()=>d,CreateScreenshotWithResizeAsync:()=>P,ScreenshotTools:()=>y});var m=K(11808),O=K(11898),X=K(11932),A=K(11789),e=K(11863),t=K(11941),z=K(11958),j=K(11827);class p extends t.e{static _GetDefines(C){if(!C)return null;return C.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(C,U){C?(this._webGPUReady=!0,U.push(Promise.all([K.e(54).then(K.bind(K,14295)),K.e(55).then(K.bind(K,14298))]))):U.push(Promise.all([K.e(56).then(K.bind(K,14300)),K.e(57).then(K.bind(K,14305))]))}constructor(C){const U={...arguments.length>2?arguments[2]:void 0,name:C,uU:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||z.c.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:p.VertexUrl,fragmentShader:p.FragmentUrl,uniforms:p.Uniforms};super({...U,defines:p._GetDefines(U.uU)}),this.texelSize=new j.Vector2(0,0)}bind(){let C=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(C),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}p.VertexUrl="fxaa",p.FragmentUrl="fxaa",p.Uniforms=["texelSize"];class E extends X.b{getClassName(){return"FxaaPostProcess"}constructor(C,U){let K=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,O=arguments.length>3?arguments[3]:void 0,X=arguments.length>4?arguments[4]:void 0,A=arguments.length>5?arguments[5]:void 0,e=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const t={uniforms:p.Uniforms,size:"number"===typeof U?U:void 0,camera:K,samplingMode:O||m.b.BILINEAR_SAMPLINGMODE,uU:X,reusable:A,textureType:e,...U};super(C,p.FragmentUrl,{effectWrapper:"number"!==typeof U&&U.effectWrapper?void 0:new p(C,X,t),...t}),this.onApplyObservable.add((C=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(C,U,K,m){return e.c.Parse((()=>new E(C.name,C.options,U,C.renderTargetSamplingMode,K.getEngine(),C.reusable)),C,K,m)}}(0,A.h)("BABYLON.FxaaPostProcess",E);var u=K(11679),b=K(11660),v=K(12061),Q=K(12067),V=K(11733);let f=null;function F(C,U,K,m){let O=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",X=arguments.length>5&&void 0!==arguments[5]&&arguments[5],A=arguments.length>6?arguments[6]:void 0,e=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:t,width:z}=T(C,U,K);if(!t||!z)return void u.d.Error("Invalid 'size' parameter !");U.dC().activeCamera===U?C.onEndFrameObservable.addOnce((()=>{f||(f=document.createElement("canvas")),f.width=z,f.height=t;const U=f.getContext("2d"),K=C.getRenderingCanvas();if(!U||!K)return void u.d.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const j=K.width,p=K.height,E=f.width,v=f.height,Q=E/j,V=v/p,F=e?Math.max(Q,V):Math.min(Q,V),Z=j*F,P=p*F,H=(E-Z)/2,d=(v-P)/2;U.drawImage(K,0,0,j,p,H,d,Z,P),X?(b.Tools.EncodeScreenshotCanvasData(f,void 0,O,void 0,A),m&&m("")):b.Tools.EncodeScreenshotCanvasData(f,m,O,void 0,A)})):H(C,U,K,(C=>{if(X){const U=new Blob([C]);b.Tools.DownloadBlob(U),m&&m("")}else m&&m(C)}),O,1,C.getCreationOptions().antialias,void 0,void 0,void 0,void 0,A)}async function Z(C,U,K){let m=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",O=arguments.length>4?arguments[4]:void 0,X=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((A,e)=>{F(C,U,K,(C=>{"undefined"!==typeof C?A(C):e(new Error("Data is undefined"))}),m,void 0,O,X)}))}async function P(C,U,K,m){let O=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",X=arguments.length>5?arguments[5]:void 0,A=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((e=>{F(C,U,{width:K,height:m},(()=>{e()}),O,!0,X,A)}))}function H(C,U,X,A){let e=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",t=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,z=arguments.length>6&&void 0!==arguments[6]&&arguments[6],j=arguments.length>7?arguments[7]:void 0,p=arguments.length>8&&void 0!==arguments[8]&&arguments[8],b=arguments.length>9&&void 0!==arguments[9]&&arguments[9],f=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],F=arguments.length>11?arguments[11]:void 0,Z=arguments.length>12?arguments[12]:void 0,P=arguments.length>13?arguments[13]:void 0;const{height:H,width:d,finalWidth:y,finalHeight:a}=T(C,U,X),r={width:d,height:H};if(!H||!d)return void u.d.Error("Invalid 'size' parameter !");C.skipFrameRender=!0;const i=C.getRenderWidth,D=C.getRenderHeight;C.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&C._currentRenderTarget?C._currentRenderTarget.width:d},C.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&C._currentRenderTarget?C._currentRenderTarget.height:H},C.onResizeObservable.hasObservers()&&C.onResizeObservable.notifyObservers(C);const l=U.dC(),G=new O.e("screenShot",r,l,!1,!1,0,!1,m.b.BILINEAR_SAMPLINGMODE,void 0,b,void 0,void 0,void 0,t);G.renderList=l.meshes.slice(),G.samples=t,G.renderSprites=p,G.activeCamera=U,G.forceLayerMaskCheck=f,null===Z||void 0===Z||Z(G);const J=P||v.DumpData,o=()=>{l.incrementRenderId(),l.resetCachedMaterial(),(0,V.c)((()=>G.isReadyForRendering()&&U.isReady(!0)),(()=>{C.onEndFrameObservable.addOnce((()=>{y===d&&a===H?G.readPixels(void 0,void 0,void 0,!1).then((C=>{J(d,H,C,A,e,j,!0,void 0,F),G.dispose()})):(C.isWebGPU?K.e(51).then(K.bind(K,14281)):K.e(52).then(K.bind(K,14289))).then((async()=>await(0,Q.c)("pass",G.getInternalTexture(),l,void 0,void 0,void 0,y,a).then((U=>{C._readTexturePixels(U,y,a,-1,0,null,!0,!1,0,0).then((C=>{J(y,a,C,A,e,j,!0,void 0,F),U.dispose()}))}))))})),l.incrementRenderId(),l.resetCachedMaterial();const m=l.activeCamera,O=l.activeCameras,X=U.outputRenderTarget,t=l.spritesEnabled;l.activeCamera=U,l.activeCameras=null,U.outputRenderTarget=G,l.spritesEnabled=p;const z=l.meshes;l.meshes=G.renderList||l.meshes;try{l.render()}finally{l.activeCamera=m,l.activeCameras=O,U.outputRenderTarget=X,l.spritesEnabled=t,l.meshes=z,C.getRenderWidth=i,C.getRenderHeight=D,C.onResizeObservable.hasObservers()&&C.onResizeObservable.notifyObservers(C),U.getProjectionMatrix(!0),C.skipFrameRender=!1}}),(()=>{C.skipFrameRender=!1,C.getRenderWidth=i,C.getRenderHeight=D}))};if(z){const C=new E("antialiasing",1,l.activeCamera);G.addPostProcess(C),C.Ke=!0,C.onEffectCreatedObservable.addOnce((C=>{C.isReady()?o():C.onCompiled=()=>{o()}}))}else o()}async function d(C,U,K){let m=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",O=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,X=arguments.length>5&&void 0!==arguments[5]&&arguments[5],A=arguments.length>6?arguments[6]:void 0,e=arguments.length>7&&void 0!==arguments[7]&&arguments[7],t=arguments.length>8&&void 0!==arguments[8]&&arguments[8],z=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],j=arguments.length>10?arguments[10]:void 0,p=arguments.length>11?arguments[11]:void 0,E=arguments.length>12?arguments[12]:void 0;return await new Promise(((u,b)=>{H(C,U,K,(C=>{"undefined"!==typeof C?u(C):b(new Error("Data is undefined"))}),m,O,X,A,e,t,z,j,p,E)}))}function T(C,U,K){let m=0,O=0,X=0,A=0;if("object"===typeof K){const e=K.precision?Math.abs(K.precision):1;K.width&&K.height?(m=K.height*e,O=K.width*e):K.width&&!K.height?(O=K.width*e,m=Math.round(O/C.getAspectRatio(U))):K.height&&!K.width?(m=K.height*e,O=Math.round(m*C.getAspectRatio(U))):(O=Math.round(C.getRenderWidth()*e),m=Math.round(O/C.getAspectRatio(U))),K.finalWidth&&K.finalHeight?(A=K.finalHeight,X=K.finalWidth):K.finalWidth&&!K.finalHeight?(X=K.finalWidth,A=Math.round(X/C.getAspectRatio(U))):K.finalHeight&&!K.finalWidth?(A=K.finalHeight,X=Math.round(A*C.getAspectRatio(U))):(X=O,A=m)}else isNaN(K)||(m=K,O=K,X=K,A=K);return O&&(O=Math.floor(O)),m&&(m=Math.floor(m)),X&&(X=Math.floor(X)),A&&(A=Math.floor(A)),{height:0|m,width:0|O,finalWidth:0|X,finalHeight:0|A}}const y={CreateScreenshot:F,CreateScreenshotAsync:Z,CreateScreenshotWithResizeAsync:P,CreateScreenshotUsingRenderTarget:H,CreateScreenshotUsingRenderTargetAsync:d};b.Tools.CreateScreenshot=F,b.Tools.CreateScreenshotAsync=Z,b.Tools.CreateScreenshotUsingRenderTarget=H,b.Tools.CreateScreenshotUsingRenderTargetAsync=d}}]);