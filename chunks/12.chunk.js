"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[12],{11051:(b,o,l)=>{l.r(o),l.d(o,{_ExrTextureLoader:()=>z});var g=l(1137),I=l(1089);const v=65536,W=14,n=65537,T=16384;var t,A;!function(b){b[b.NO_COMPRESSION=0]="NO_COMPRESSION",b[b.RLE_COMPRESSION=1]="RLE_COMPRESSION",b[b.ZIPS_COMPRESSION=2]="ZIPS_COMPRESSION",b[b.ZIP_COMPRESSION=3]="ZIP_COMPRESSION",b[b.PIZ_COMPRESSION=4]="PIZ_COMPRESSION",b[b.PXR24_COMPRESSION=5]="PXR24_COMPRESSION"}(t||(t={})),function(b){b[b.INCREASING_Y=0]="INCREASING_Y",b[b.DECREASING_Y=1]="DECREASING_Y"}(A||(A={}));const w=function(){const b=new ArrayBuffer(4),o=new Float32Array(b),l=new Uint32Array(b),g=new Uint32Array(512),I=new Uint32Array(512);for(let T=0;T<256;++T){const b=T-127;b<-27?(g[T]=0,g[256|T]=32768,I[T]=24,I[256|T]=24):b<-14?(g[T]=1024>>-b-14,g[256|T]=1024>>-b-14|32768,I[T]=-b-1,I[256|T]=-b-1):b<=15?(g[T]=b+15<<10,g[256|T]=b+15<<10|32768,I[T]=13,I[256|T]=13):b<128?(g[T]=31744,g[256|T]=64512,I[T]=24,I[256|T]=24):(g[T]=31744,g[256|T]=64512,I[T]=13,I[256|T]=13)}const v=new Uint32Array(2048),W=new Uint32Array(64),n=new Uint32Array(64);for(let T=1;T<1024;++T){let b=T<<13,o=0;for(;0===(8388608&b);)b<<=1,o-=8388608;b&=-8388609,o+=947912704,v[T]=b|o}for(let T=1024;T<2048;++T)v[T]=939524096+(T-1024<<13);for(let T=1;T<31;++T)W[T]=T<<23;W[31]=1199570944,W[32]=2147483648;for(let T=33;T<63;++T)W[T]=2147483648+(T-32<<23);W[63]=3347054592;for(let T=1;T<64;++T)32!==T&&(n[T]=1024);return{floatView:o,uint32View:l,baseTable:g,shiftTable:I,mantissaTable:v,exponentTable:W,offsetTable:n}}();function C(b,o){const l=new Uint8Array(b);let g=0;for(;0!=l[o.value+g];)g+=1;const I=(new TextDecoder).decode(l.slice(o.value,o.value+g));return o.value=o.value+g+1,I}function U(b,o){const l=b.getInt32(o.value,!0);return o.value+=4,l}function m(b,o){const l=b.getUint32(o.value,!0);return o.value+=4,l}function N(b,o){const l=b.getUint8(o.value);return o.value+=1,l}function x(b,o){const l=b.getUint16(o.value,!0);return o.value+=2,l}function k(b,o){const l=b[o.value];return o.value+=1,l}function D(b,o){let l;return l="getBigInt64"in DataView.prototype?Number(b.getBigInt64(o.value,!0)):b.getUint32(o.value+4,!0)+Number(b.getUint32(o.value,!0)<<32),o.value+=8,l}function a(b,o){const l=b.getFloat32(o.value,!0);return o.value+=4,l}function c(b,o){return function(b){const o=(31744&b)>>10,l=1023&b;return(b>>15?-1:1)*(o?31===o?l?NaN:1/0:Math.pow(2,o-15)*(1+l/1024):l/1024*6103515625e-14)}(x(b,o))}function G(b,o){return function(b){if(Math.abs(b)>65504)throw new Error("Value out of range.Consider using float instead of half-float.");b=(0,I.b)(b,-65504,65504),w.floatView[0]=b;const o=w.uint32View[0],l=o>>23&511;return w.baseTable[l]+((8388607&o)>>w.shiftTable[l])}(a(b,o))}function E(b,o,l,g){switch(l){case"string":case"stringvector":case"iccProfile":return function(b,o,l){const g=(new TextDecoder).decode(new Uint8Array(b).slice(o.value,o.value+l));return o.value=o.value+l,g}(b.buffer,o,g);case"chlist":return function(b,o,l){const g=o.value,I=[];for(;o.value<g+l-1;){const l=C(b.buffer,o),g=U(b,o),v=N(b,o);o.value+=3;const W=U(b,o),n=U(b,o);I.push({name:l,pixelType:g,pLinear:v,xSampling:W,ySampling:n})}return o.value+=1,I}(b,o,g);case"chromaticities":return function(b,o){return{redX:a(b,o),redY:a(b,o),greenX:a(b,o),greenY:a(b,o),blueX:a(b,o),blueY:a(b,o),whiteX:a(b,o),whiteY:a(b,o)}}(b,o);case"compression":return function(b,o){return N(b,o)}(b,o);case"box2i":return function(b,o){return{xMin:U(b,o),yMin:U(b,o),xMax:U(b,o),yMax:U(b,o)}}(b,o);case"lineOrder":return function(b,o){const l=N(b,o);return A[l]}(b,o);case"float":return a(b,o);case"v2f":return function(b,o){return[a(b,o),a(b,o)]}(b,o);case"v3f":return function(b,o){return[a(b,o),a(b,o),a(b,o)]}(b,o);case"int":return U(b,o);case"rational":return function(b,o){return[U(b,o),m(b,o)]}(b,o);case"timecode":return function(b,o){return[m(b,o),m(b,o)]}(b,o);case"preview":return o.value+=g,"skipped";default:return void(o.value+=g)}}function d(b){for(let o=1;o<b.length;o++){const l=b[o-1]+b[o]-128;b[o]=l}}function F(b,o){let l=0,g=Math.floor((b.length+1)/2),I=0;const v=b.length-1;for(;!(I>v)&&(o[I++]=b[l++],!(I>v));)o[I++]=b[g++]}function J(b,o,l,g,I){for(;l<b;)o=o<<8|k(g,I),l+=8;return{l:o>>(l-=b)&(1<<b)-1,c:o,lc:l}}function R(b,o,l,g){return{c:b=b<<8|k(l,g),lc:o+=8}}function j(b,o,l,g,I,v,W,n,T){if(b==o){if(g<8){const b=R(l,g,I,v);l=b.c,g=b.lc}let b=l>>(g-=8);if(b=new Uint8Array([b])[0],n.value+b>T)return null;const o=W[n.value-1];for(;b-- >0;)W[n.value++]=o}else{if(!(n.value<T))return null;W[n.value++]=b}return{c:l,lc:g}}const S=new Array(59);function r(b,o,l,g,I,v){const W=o;let T=0,t=0;for(;g<=I;g++){if(W.value-o.value>l)return;let n=J(6,T,t,b,W);const A=n.l;if(T=n.c,t=n.lc,v[g]=A,63==A){if(W.value-o.value>l)throw new Error("Error in HufUnpackEncTable");n=J(8,T,t,b,W);let A=n.l+6;if(T=n.c,t=n.lc,g+A>I+1)throw new Error("Error in HufUnpackEncTable");for(;A--;)v[g++]=0;g--}else if(A>=59){let b=A-59+2;if(g+b>I+1)throw new Error("Error in HufUnpackEncTable");for(;b--;)v[g++]=0;g--}}!function(b){for(let l=0;l<=58;++l)S[l]=0;for(let l=0;l<n;++l)S[b[l]]+=1;let o=0;for(let l=58;l>0;--l){const b=o+S[l]>>1;S[l]=o,o=b}for(let l=0;l<n;++l){const o=b[l];o>0&&(b[l]=o|S[o]++<<6)}}(v)}function u(b){return 63&b}function X(b){return b>>6}function e(b,o,l,g,I,v){const t=l.value,A=m(o,l),w=m(o,l);l.value+=4;const C=m(o,l);if(l.value+=4,A<0||A>=n||w<0||w>=n)throw new Error("Wrong HUF_ENCSIZE");const U=new Array(n),N=new Array(T);!function(b){for(let o=0;o<T;o++)b[o]={},b[o].len=0,b[o].lit=0,b[o].p=null}(N);if(r(b,l,g-(l.value-t),A,w,U),C>8*(g-(l.value-t)))throw new Error("Wrong hufUncompress");!function(b,o,l,g){for(;o<=l;o++){const l=X(b[o]),I=u(b[o]);if(l>>I)throw new Error("Invalid table entry");if(I>W){const b=g[l>>I-W];if(b.len)throw new Error("Invalid table entry");if(b.lit++,b.p){const o=b.p;b.p=new Array(b.lit);for(let l=0;l<b.lit-1;++l)b.p[l]=o[l]}else b.p=new Array(1);b.p[b.lit-1]=o}else if(I){let b=0;for(let v=1<<W-I;v>0;v--){const v=g[(l<<W-I)+b];if(v.len||v.p)throw new Error("Invalid table entry");v.len=I,v.lit=o,b++}}}}(U,A,w,N),function(b,o,l,g,I,v,n,T,t){let A=0,w=0;const C=n,U=Math.trunc(g.value+(I+7)/8);for(;g.value<U;){let I=R(A,w,l,g);for(A=I.c,w=I.lc;w>=W;){const n=o[A>>w-W&16383];if(n.len){w-=n.len;const b=j(n.lit,v,A,w,l,g,T,t,C);b&&(A=b.c,w=b.lc)}else{if(!n.p)throw new Error("hufDecode issues");let o;for(o=0;o<n.lit;o++){const W=u(b[n.p[o]]);for(;w<W&&g.value<U;)I=R(A,w,l,g),A=I.c,w=I.lc;if(w>=W&&X(b[n.p[o]])==(A>>w-W&(1<<W)-1)){w-=W;const b=j(n.p[o],v,A,w,l,g,T,t,C);b&&(A=b.c,w=b.lc);break}}if(o==n.lit)throw new Error("HufDecode issues")}}}const m=8-I&7;for(A>>=m,w-=m;w>0;){const b=o[A<<W-w&16383];if(!b.len)throw new Error("HufDecode issues");{w-=b.len;const o=j(b.lit,v,A,w,l,g,T,t,C);o&&(A=o.c,w=o.lc)}}}(U,N,b,l,C,w,v,I,{value:0})}function q(b){return 65535&b}function Z(b){const o=q(b);return o>32767?o-65536:o}function f(b,o){const l=Z(b),g=Z(o),I=l+(1&g)+(g>>1);return{a:I,b:I-g}}function h(b,o){const l=q(b),g=q(o),I=l-(g>>1)&65535;return{a:g+I-32768&65535,b:I}}function y(b,o,l,g,I,v,W){const n=W<16384,T=l>I?I:l;let t,A,w=1;for(;w<=T;)w<<=1;for(w>>=1,t=w,w>>=1;w>=1;){A=0;const W=A+v*(I-t),T=v*w,C=v*t,U=g*w,m=g*t;let N,x,k,D;for(;A<=W;A+=C){let I=A;const v=A+g*(l-t);for(;I<=v;I+=m){const l=I+U,g=I+T,v=g+U;if(n){let W=f(b[I+o],b[g+o]);N=W.a,k=W.b,W=f(b[l+o],b[v+o]),x=W.a,D=W.b,W=f(N,x),b[I+o]=W.a,b[l+o]=W.b,W=f(k,D),b[g+o]=W.a,b[v+o]=W.b}else{let W=h(b[I+o],b[g+o]);N=W.a,k=W.b,W=h(b[l+o],b[v+o]),x=W.a,D=W.b,W=h(N,x),b[I+o]=W.a,b[l+o]=W.b,W=h(k,D),b[g+o]=W.a,b[v+o]=W.b}}if(l&w){const l=I+T;let g;g=n?f(b[I+o],b[l+o]):h(b[I+o],b[l+o]),N=g.a,b[l+o]=g.b,b[I+o]=N}}if(I&w){let I=A;const v=A+g*(l-t);for(;I<=v;I+=m){const l=I+U;let g;g=n?f(b[I+o],b[l+o]):h(b[I+o],b[l+o]),N=g.a,b[l+o]=g.b,b[I+o]=N}}t=w,w>>=1}return A}function i(b){return new DataView(b.array.buffer,b.offset.value,b.size)}function L(b){const o=b.viewer.buffer.slice(b.offset.value,b.offset.value+b.size),l=new Uint8Array(function(b){let o=b.byteLength;const l=new Array;let g=0;const I=new DataView(b);for(;o>0;){const b=I.getInt8(g++);if(b<0){const v=-b;o-=v+1;for(let b=0;b<v;b++)l.push(I.getUint8(g++))}else{const v=b;o-=2;const W=I.getUint8(g++);for(let b=0;b<v+1;b++)l.push(W)}}return l}(o)),g=new Uint8Array(l.length);return d(l),F(l,g),new DataView(g.buffer)}function s(b){const o=b.array.slice(b.offset.value,b.offset.value+b.size),l=fflate.unzlibSync(o),g=new Uint8Array(l.length);return d(l),F(l,g),new DataView(g.buffer)}function M(b){const o=b.array.slice(b.offset.value,b.offset.value+b.size),l=fflate.unzlibSync(o),g=b.lines*b.channels*b.width,I=1==b.type?new Uint16Array(g):new Uint32Array(g);let v=0,W=0;const n=new Array(4);for(let T=0;T<b.lines;T++)for(let o=0;o<b.channels;o++){let o=0;switch(b.type){case 1:n[0]=v,n[1]=n[0]+b.width,v=n[1]+b.width;for(let g=0;g<b.width;++g){o+=l[n[0]++]<<8|l[n[1]++],I[W]=o,W++}break;case 2:n[0]=v,n[1]=n[0]+b.width,n[2]=n[1]+b.width,v=n[2]+b.width;for(let g=0;g<b.width;++g){o+=l[n[0]++]<<24|l[n[1]++]<<16|l[n[2]++]<<8,I[W]=o,W++}}}return new DataView(I.buffer)}function P(b){const o=b.viewer,l={value:b.offset.value},g=new Uint16Array(b.width*b.scanlineBlockSize*(b.channels*b.type)),I=new Uint8Array(8192);let W=0;const n=new Array(b.channels);for(let v=0;v<b.channels;v++)n[v]={},n[v].start=W,n[v].end=n[v].start,n[v].nx=b.width,n[v].ny=b.lines,n[v].size=b.type,W+=n[v].nx*n[v].ny*n[v].size;const T=x(o,l),t=x(o,l);if(t>=8192)throw new Error("Wrong PIZ_COMPRESSION BITMAP_SIZE");if(T<=t)for(let v=0;v<t-T+1;v++)I[v+T]=N(o,l);const A=new Uint16Array(v),w=function(b,o){let l=0;for(let I=0;I<v;++I)(0==I||b[I>>3]&1<<(7&I))&&(o[l++]=I);const g=l-1;for(;l<v;)o[l++]=0;return g}(I,A),C=m(o,l);e(b.array,o,l,C,g,W);for(let v=0;v<b.channels;++v){const b=n[v];for(let o=0;o<n[v].size;++o)y(g,b.start+o,b.nx,b.size,b.ny,b.nx*b.size,w)}!function(b,o,l){for(let g=0;g<l;++g)o[g]=b[o[g]]}(A,g,W);let U=0;const k=new Uint8Array(g.buffer.byteLength);for(let v=0;v<b.lines;v++)for(let o=0;o<b.channels;o++){const b=n[o],l=b.nx*b.size,I=new Uint8Array(g.buffer,2*b.end,2*l);k.set(I,U),U+=2*l,b.end+=l}return new DataView(k.buffer)}var Y,Q=l(1262);!function(b){b[b.Float=0]="Float",b[b.HalfFloat=1]="HalfFloat"}(Y||(Y={}));class V{}V.DefaultOutputType=Y.HalfFloat,V.FFLATEUrl="https://unpkg.com/fflate@0.8.2";class z{constructor(){this.supportCascades=!1}loadCubeData(b,o,l,g,I){throw".exr not supported in Cube."}async loadData(b,o,l){const I=new DataView(b.buffer),v={value:0},W=function(b,o){if(20000630!=b.getUint32(0,!0))throw new Error("Incorrect OpenEXR format");const l=b.getUint8(4),I=b.getUint8(5),v={singleTile:!!(2&I),longName:!!(4&I),deepFormat:!!(8&I),multiPart:!!(16&I)};o.value=8;const W={};let n=!0;for(;n;){const l=C(b.buffer,o);if(l){const I=C(b.buffer,o),v=E(b,o,I,m(b,o));void 0===v?g.d.Warn(`Unknown header attribute type ${I}'.`):W[l]=v}else n=!1}if(0!=(-5&I))throw new Error("Unsupported file format");return{version:l,spec:v,...W}}(I,v),n=await async function(b,o,l,g){const I={size:0,viewer:o,array:new Uint8Array(o.buffer),offset:l,width:b.dataWindow.xMax-b.dataWindow.xMin+1,height:b.dataWindow.yMax-b.dataWindow.yMin+1,channels:b.channels.length,channelLineOffsets:{},scanOrder:()=>0,bytesPerLine:0,outLineWidth:0,lines:0,scanlineBlockSize:0,inputSize:null,type:0,uncompress:null,getter:()=>0,format:5,outputChannels:0,decodeChannels:{},blockCount:null,byteArray:null,linearSpace:!1,textureType:0};switch(b.compression){case t.NO_COMPRESSION:I.lines=1,I.uncompress=i;break;case t.RLE_COMPRESSION:I.lines=1,I.uncompress=L;break;case t.ZIPS_COMPRESSION:I.lines=1,I.uncompress=s,await Q.c.LoadScriptAsync(V.FFLATEUrl);break;case t.ZIP_COMPRESSION:I.lines=16,I.uncompress=s,await Q.c.LoadScriptAsync(V.FFLATEUrl);break;case t.PIZ_COMPRESSION:I.lines=32,I.uncompress=P;break;case t.PXR24_COMPRESSION:I.lines=16,I.uncompress=M,await Q.c.LoadScriptAsync(V.FFLATEUrl);break;default:throw new Error(t[b.compression]+" is unsupported")}I.scanlineBlockSize=I.lines;const v={};for(const t of b.channels)switch(t.name){case"Y":case"R":case"G":case"B":case"A":v[t.name]=!0,I.type=t.pixelType}let W=!1;if(v.R&&v.G&&v.B)W=!v.A,I.outputChannels=4,I.decodeChannels={R:0,G:1,B:2,A:3};else{if(!v.Y)throw new Error("EXRLoader.parse: file contains unsupported data channels.");I.outputChannels=1,I.decodeChannels={Y:0}}if(1===I.type)switch(g){case Y.Float:I.getter=c,I.inputSize=2;break;case Y.HalfFloat:I.getter=x,I.inputSize=2}else{if(2!==I.type)throw new Error("Unsupported pixelType "+I.type+" for "+b.compression);switch(g){case Y.Float:I.getter=a,I.inputSize=4;break;case Y.HalfFloat:I.getter=G,I.inputSize=4}}I.blockCount=I.height/I.scanlineBlockSize;for(let t=0;t<I.blockCount;t++)D(o,l);const n=I.width*I.height*I.outputChannels;switch(g){case Y.Float:I.byteArray=new Float32Array(n),I.textureType=1,W&&I.byteArray.fill(1,0,n);break;case Y.HalfFloat:I.byteArray=new Uint16Array(n),I.textureType=2,W&&I.byteArray.fill(15360,0,n);break;default:throw new Error("Unsupported type: "+g)}let T=0;for(const t of b.channels)void 0!==I.decodeChannels[t.name]&&(I.channelLineOffsets[t.name]=T*I.width),T+=2*t.pixelType;return I.bytesPerLine=I.width*T,I.outLineWidth=I.width*I.outputChannels,"INCREASING_Y"===b.lineOrder?I.scanOrder=b=>b:I.scanOrder=b=>I.height-1-b,4==I.outputChannels?(I.format=5,I.linearSpace=!0):(I.format=6,I.linearSpace=!1),I}(W,I,v,V.DefaultOutputType);!function(b,o,l,g){const I={value:0};for(let v=0;v<b.height/b.scanlineBlockSize;v++){const W=U(l,g)-o.dataWindow.yMin;b.size=m(l,g),b.lines=W+b.scanlineBlockSize>b.height?b.height-W:b.scanlineBlockSize;const n=b.size<b.lines*b.bytesPerLine&&b.uncompress?b.uncompress(b):i(b);g.value+=b.size;for(let l=0;l<b.scanlineBlockSize;l++){const g=v*b.scanlineBlockSize,W=l+b.scanOrder(g);if(W>=b.height)continue;const T=l*b.bytesPerLine,t=(b.height-1-W)*b.outLineWidth;for(let l=0;l<b.channels;l++){const g=o.channels[l].name,v=b.channelLineOffsets[g],W=b.decodeChannels[g];if(void 0!==W){I.value=T+v;for(let o=0;o<b.width;o++){const l=t+o*b.outputChannels+W;b.byteArray&&(b.byteArray[l]=b.getter(n,I))}}}}}}(n,W,I,v);l(W.dataWindow.xMax-W.dataWindow.xMin+1,W.dataWindow.yMax-W.dataWindow.yMin+1,o.generateMipMaps,!1,(()=>{const b=o.getEngine();o.format=W.format,o.type=n.textureType,o.invertY=!1,o._gammaSpace=!W.linearSpace,n.byteArray&&b._uploadDataToTextureDirectly(o,n.byteArray,0,0,void 0,!0)}))}}}}]);