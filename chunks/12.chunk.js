"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[12,20],{11413:(P,f,Y)=>{Y.r(f),Y.d(f,{Dispose:()=>r,DumpData:()=>y,DumpDataAsync:()=>R,DumpFramebuffer:()=>d,DumpTools:()=>i});var C=Y(11286),q=Y(11014),m=Y(11198),L=Y(11052);let o,w=null;async function d(P,f,Y,C){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",m=arguments.length>5?arguments[5]:void 0,L=arguments.length>6?arguments[6]:void 0;const o=await Y.readPixels(0,0,P,f);y(P,f,new Uint8Array(o.buffer),C,q,m,!0,void 0,L)}async function R(P,f,Y){let C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",q=arguments.length>4?arguments[4]:void 0,m=arguments.length>5&&void 0!==arguments[5]&&arguments[5],L=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7?arguments[7]:void 0;return await new Promise((w=>{y(P,f,Y,(P=>w(P)),C,q,m,L,o)}))}function y(P,f,d,R){let y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",i=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&void 0!==arguments[6]&&arguments[6],g=arguments.length>7&&void 0!==arguments[7]&&arguments[7],S=arguments.length>8?arguments[8]:void 0;(async function(){return w||(w=new Promise(((P,f)=>{let q,m=null;const w={o:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(Y.bind(Y,11322)).then((d=>{let{ThinEngine:R}=d;const y=L.e.Instances.length;try{q=new OffscreenCanvas(100,100),m=new R(q,!1,w)}catch(g){var i;y<L.e.Instances.length&&(null===(i=L.e.Instances.pop())||void 0===i||i.dispose()),q=document.createElement("canvas"),m=new R(q,!1,w)}L.e.Instances.pop(),L.e.OnEnginesDisposedObservable.add((P=>{m&&P!==m&&!m.R&&0===L.e.Instances.length&&r()})),m.getCaps().parallelShaderCompile=void 0;const u=new C.e(m);Y.e(52).then(Y.bind(Y,13705)).then((Y=>{let{passPixelShader:L}=Y;if(!m)return void f("Engine is not defined");const w=new C.i({Kf:m,name:L.name,fragmentShader:L.shader,samplerNames:["textureSampler"]});o={canvas:q,Kf:m,renderer:u,wrapper:w},P(o)}))})).catch(f)}))),await w})().then((Y=>{if(Y.Kf.setSize(P,f,!0),d instanceof Float32Array){const P=new Uint8Array(d.length);let f=d.length;for(;f--;){const Y=d[f];P[f]=Math.round(255*(0,m.Clamp)(Y))}d=P}const C=Y.Kf.createRawTexture(d,P,f,5,!1,!u,1);Y.renderer.setViewport(),Y.renderer.applyEffectWrapper(Y.wrapper),Y.wrapper.effect._bindTexture("textureSampler",C),Y.renderer.draw(),g?q.Tools.ToBlob(Y.canvas,(P=>{const f=new FileReader;f.onload=P=>{const f=P.target.result;R&&R(f)},f.readAsArrayBuffer(P)}),y,S):q.Tools.EncodeScreenshotCanvasData(Y.canvas,R,y,i,S),C.dispose()}))}function r(){var P;o?(o.wrapper.dispose(),o.renderer.dispose(),o.Kf.dispose()):null===(P=w)||void 0===P||P.then((P=>{P.wrapper.dispose(),P.renderer.dispose(),P.Kf.dispose()}));w=null,o=null}const i={DumpData:y,DumpDataAsync:R,DumpFramebuffer:d,Dispose:r};q.Tools.DumpData=y,q.Tools.DumpDataAsync=R,q.Tools.DumpFramebuffer=d},11153:(P,f,Y)=>{Y.r(f),Y.d(f,{CreateScreenshot:()=>V,CreateScreenshotAsync:()=>O,CreateScreenshotUsingRenderTarget:()=>l,CreateScreenshotUsingRenderTargetAsync:()=>v,CreateScreenshotWithResizeAsync:()=>n,ScreenshotTools:()=>T});var C=Y(11160),q=Y(11243),m=Y(11283),L=Y(11134),o=Y(11216),w=Y(11286),d=Y(11319),R=Y(11179);class y extends w.i{static _GetDefines(P){if(!P)return null;return P.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(P,f){P?(this._webGPUReady=!0,f.push(Promise.all([Y.e(54).then(Y.bind(Y,13719)),Y.e(55).then(Y.bind(Y,13726))]))):f.push(Promise.all([Y.e(56).then(Y.bind(Y,13730)),Y.e(57).then(Y.bind(Y,13732))]))}constructor(P){const f={...arguments.length>2?arguments[2]:void 0,name:P,Kf:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||d.c.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:y.VertexUrl,fragmentShader:y.FragmentUrl,uniforms:y.Uniforms};super({...f,defines:y._GetDefines(f.Kf)}),this.texelSize=new R.Vector2(0,0)}bind(){let P=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(P),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}y.VertexUrl="fxaa",y.FragmentUrl="fxaa",y.Uniforms=["texelSize"];class r extends m.c{getClassName(){return"FxaaPostProcess"}constructor(P,f){let Y=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,q=arguments.length>3?arguments[3]:void 0,m=arguments.length>4?arguments[4]:void 0,L=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const w={uniforms:y.Uniforms,size:"number"===typeof f?f:void 0,camera:Y,samplingMode:q||C.c.BILINEAR_SAMPLINGMODE,Kf:m,reusable:L,textureType:o,...f};super(P,y.FragmentUrl,{effectWrapper:"number"!==typeof f&&f.effectWrapper?void 0:new y(P,m,w),...w}),this.onApplyObservable.add((P=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(P,f,Y,C){return o.e.Parse((()=>new r(P.name,P.options,f,P.renderTargetSamplingMode,Y.getEngine(),P.reusable)),P,Y,C)}}(0,L.d)("BABYLON.FxaaPostProcess",r);var i=Y(11025),u=Y(11014),g=Y(11413),S=Y(11421),K=Y(11087);let M=null;function V(P,f,Y,C){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",m=arguments.length>5&&void 0!==arguments[5]&&arguments[5],L=arguments.length>6?arguments[6]:void 0,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:w,width:d}=c(P,f,Y);if(!w||!d)return void i.e.Error("Invalid 'size' parameter !");f.vP().activeCamera===f?P.onEndFrameObservable.addOnce((()=>{M||(M=document.createElement("canvas")),M.width=d,M.height=w;const f=M.getContext("2d"),Y=P.getRenderingCanvas();if(!f||!Y)return void i.e.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const R=Y.width,y=Y.height,r=M.width,g=M.height,S=r/R,K=g/y,V=o?Math.max(S,K):Math.min(S,K),O=R*V,n=y*V,l=(r-O)/2,v=(g-n)/2;f.drawImage(Y,0,0,R,y,l,v,O,n),m?(u.Tools.EncodeScreenshotCanvasData(M,void 0,q,void 0,L),C&&C("")):u.Tools.EncodeScreenshotCanvasData(M,C,q,void 0,L)})):l(P,f,Y,(P=>{if(m){const f=new Blob([P]);u.Tools.DownloadBlob(f),C&&C("")}else C&&C(P)}),q,1,P.getCreationOptions().antialias,void 0,void 0,void 0,void 0,L)}async function O(P,f,Y){let C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",q=arguments.length>4?arguments[4]:void 0,m=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((L,o)=>{V(P,f,Y,(P=>{"undefined"!==typeof P?L(P):o(new Error("Data is undefined"))}),C,void 0,q,m)}))}async function n(P,f,Y,C){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",m=arguments.length>5?arguments[5]:void 0,L=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((o=>{V(P,f,{width:Y,height:C},(()=>{o()}),q,!0,m,L)}))}function l(P,f,m,L){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",w=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,d=arguments.length>6&&void 0!==arguments[6]&&arguments[6],R=arguments.length>7?arguments[7]:void 0,y=arguments.length>8&&void 0!==arguments[8]&&arguments[8],u=arguments.length>9&&void 0!==arguments[9]&&arguments[9],M=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],V=arguments.length>11?arguments[11]:void 0,O=arguments.length>12?arguments[12]:void 0,n=arguments.length>13?arguments[13]:void 0;const{height:l,width:v,finalWidth:T,finalHeight:U}=c(P,f,m),D={width:v,height:l};if(!l||!v)return void i.e.Error("Invalid 'size' parameter !");P.skipFrameRender=!0;const j=P.getRenderWidth,e=P.getRenderHeight;P.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&P._currentRenderTarget?P._currentRenderTarget.width:v},P.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&P._currentRenderTarget?P._currentRenderTarget.height:l},P.onResizeObservable.hasObservers()&&P.onResizeObservable.notifyObservers(P);const s=f.vP(),a=new q.d("screenShot",D,s,!1,!1,0,!1,C.c.BILINEAR_SAMPLINGMODE,void 0,u,void 0,void 0,void 0,w);a.renderList=s.meshes.slice(),a.samples=w,a.renderSprites=y,a.activeCamera=f,a.forceLayerMaskCheck=M,null===O||void 0===O||O(a);const Q=n||g.DumpData,J=()=>{s.incrementRenderId(),s.resetCachedMaterial(),(0,K.e)((()=>a.isReadyForRendering()&&f.isReady(!0)),(()=>{P.onEndFrameObservable.addOnce((()=>{T===v&&U===l?a.readPixels(void 0,void 0,void 0,!1).then((P=>{Q(v,l,P,L,o,R,!0,void 0,V),a.dispose()})):(P.isWebGPU?Y.e(51).then(Y.bind(Y,13699)):Y.e(52).then(Y.bind(Y,13705))).then((async()=>await(0,S.b)("pass",a.getInternalTexture(),s,void 0,void 0,void 0,T,U).then((f=>{P._readTexturePixels(f,T,U,-1,0,null,!0,!1,0,0).then((P=>{Q(T,U,P,L,o,R,!0,void 0,V),f.dispose()}))}))))})),s.incrementRenderId(),s.resetCachedMaterial();const C=s.activeCamera,q=s.activeCameras,m=f.outputRenderTarget,w=s.spritesEnabled;s.activeCamera=f,s.activeCameras=null,f.outputRenderTarget=a,s.spritesEnabled=y;const d=s.meshes;s.meshes=a.renderList||s.meshes;try{s.render()}finally{s.activeCamera=C,s.activeCameras=q,f.outputRenderTarget=m,s.spritesEnabled=w,s.meshes=d,P.getRenderWidth=j,P.getRenderHeight=e,P.onResizeObservable.hasObservers()&&P.onResizeObservable.notifyObservers(P),f.getProjectionMatrix(!0),P.skipFrameRender=!1}}),(()=>{P.skipFrameRender=!1,P.getRenderWidth=j,P.getRenderHeight=e}))};if(d){const P=new r("antialiasing",1,s.activeCamera);a.addPostProcess(P),P.Qf=!0,P.onEffectCreatedObservable.addOnce((P=>{P.isReady()?J():P.onCompiled=()=>{J()}}))}else J()}async function v(P,f,Y){let C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,m=arguments.length>5&&void 0!==arguments[5]&&arguments[5],L=arguments.length>6?arguments[6]:void 0,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],w=arguments.length>8&&void 0!==arguments[8]&&arguments[8],d=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],R=arguments.length>10?arguments[10]:void 0,y=arguments.length>11?arguments[11]:void 0,r=arguments.length>12?arguments[12]:void 0;return await new Promise(((i,u)=>{l(P,f,Y,(P=>{"undefined"!==typeof P?i(P):u(new Error("Data is undefined"))}),C,q,m,L,o,w,d,R,y,r)}))}function c(P,f,Y){let C=0,q=0,m=0,L=0;if("object"===typeof Y){const o=Y.precision?Math.abs(Y.precision):1;Y.width&&Y.height?(C=Y.height*o,q=Y.width*o):Y.width&&!Y.height?(q=Y.width*o,C=Math.round(q/P.getAspectRatio(f))):Y.height&&!Y.width?(C=Y.height*o,q=Math.round(C*P.getAspectRatio(f))):(q=Math.round(P.getRenderWidth()*o),C=Math.round(q/P.getAspectRatio(f))),Y.finalWidth&&Y.finalHeight?(L=Y.finalHeight,m=Y.finalWidth):Y.finalWidth&&!Y.finalHeight?(m=Y.finalWidth,L=Math.round(m/P.getAspectRatio(f))):Y.finalHeight&&!Y.finalWidth?(L=Y.finalHeight,m=Math.round(L*P.getAspectRatio(f))):(m=q,L=C)}else isNaN(Y)||(C=Y,q=Y,m=Y,L=Y);return q&&(q=Math.floor(q)),C&&(C=Math.floor(C)),m&&(m=Math.floor(m)),L&&(L=Math.floor(L)),{height:0|C,width:0|q,finalWidth:0|m,finalHeight:0|L}}const T={CreateScreenshot:V,CreateScreenshotAsync:O,CreateScreenshotWithResizeAsync:n,CreateScreenshotUsingRenderTarget:l,CreateScreenshotUsingRenderTargetAsync:v};u.Tools.CreateScreenshot=V,u.Tools.CreateScreenshotAsync=O,u.Tools.CreateScreenshotUsingRenderTarget=l,u.Tools.CreateScreenshotUsingRenderTargetAsync=v}}]);