"use strict";(self.ynu1yiqvs98=self.ynu1yiqvs98||[]).push([[12,20],{11345:(I,E,j)=>{j.r(E),j.d(E,{Dispose:()=>Z,DumpData:()=>o,DumpDataAsync:()=>P,DumpFramebuffer:()=>R,DumpTools:()=>c});var e=j(11230),w=j(10953),z=j(11136),h=j(10993);let t,U=null;async function R(I,E,j,e){let w=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",z=arguments.length>5?arguments[5]:void 0,h=arguments.length>6?arguments[6]:void 0;const t=await j.readPixels(0,0,I,E);o(I,E,new Uint8Array(t.buffer),e,w,z,!0,void 0,h)}async function P(I,E,j){let e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",w=arguments.length>4?arguments[4]:void 0,z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],h=arguments.length>6&&void 0!==arguments[6]&&arguments[6],t=arguments.length>7?arguments[7]:void 0;return await new Promise((U=>{o(I,E,j,(I=>U(I)),e,w,z,h,t)}))}function o(I,E,R,P){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",c=arguments.length>5?arguments[5]:void 0,K=arguments.length>6&&void 0!==arguments[6]&&arguments[6],L=arguments.length>7&&void 0!==arguments[7]&&arguments[7],F=arguments.length>8?arguments[8]:void 0;(async function(){return U||(U=new Promise(((I,E)=>{let w,z=null;const U={ae:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(j.bind(j,11257)).then((R=>{let{ThinEngine:P}=R;const o=h.d.Instances.length;try{w=new OffscreenCanvas(100,100),z=new P(w,!1,U)}catch(L){var c;o<h.d.Instances.length&&(null===(c=h.d.Instances.pop())||void 0===c||c.dispose()),w=document.createElement("canvas"),z=new P(w,!1,U)}h.d.Instances.pop(),h.d.OnEnginesDisposedObservable.add((I=>{z&&I!==z&&!z.Z&&0===h.d.Instances.length&&Z()})),z.getCaps().parallelShaderCompile=void 0;const K=new e.b(z);j.e(52).then(j.bind(j,13603)).then((j=>{let{passPixelShader:h}=j;if(!z)return void E("Engine is not defined");const U=new e.e({KE:z,name:h.name,fragmentShader:h.shader,samplerNames:["textureSampler"]});t={canvas:w,KE:z,renderer:K,wrapper:U},I(t)}))})).catch(E)}))),await U})().then((j=>{if(j.KE.setSize(I,E,!0),R instanceof Float32Array){const I=new Uint8Array(R.length);let E=R.length;for(;E--;){const j=R[E];I[E]=Math.round(255*(0,z.Clamp)(j))}R=I}const e=j.KE.createRawTexture(R,I,E,5,!1,!K,1);j.renderer.setViewport(),j.renderer.applyEffectWrapper(j.wrapper),j.wrapper.effect._bindTexture("textureSampler",e),j.renderer.draw(),L?w.Tools.ToBlob(j.canvas,(I=>{const E=new FileReader;E.onload=I=>{const E=I.target.result;P&&P(E)},E.readAsArrayBuffer(I)}),o,F):w.Tools.EncodeScreenshotCanvasData(j.canvas,P,o,c,F),e.dispose()}))}function Z(){var I;t?(t.wrapper.dispose(),t.renderer.dispose(),t.KE.dispose()):null===(I=U)||void 0===I||I.then((I=>{I.wrapper.dispose(),I.renderer.dispose(),I.KE.dispose()}));U=null,t=null}const c={DumpData:o,DumpDataAsync:P,DumpFramebuffer:R,Dispose:Z};w.Tools.DumpData=o,w.Tools.DumpDataAsync=P,w.Tools.DumpFramebuffer=R},11093:(I,E,j)=>{j.r(E),j.d(E,{CreateScreenshot:()=>q,CreateScreenshotAsync:()=>x,CreateScreenshotUsingRenderTarget:()=>b,CreateScreenshotUsingRenderTargetAsync:()=>Q,CreateScreenshotWithResizeAsync:()=>u,ScreenshotTools:()=>y});var e=j(11097),w=j(11183),z=j(11227),h=j(11073),t=j(11149),U=j(11230),R=j(11252),P=j(11117);class o extends U.e{static _GetDefines(I){if(!I)return null;return I.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(I,E){I?(this._webGPUReady=!0,E.push(Promise.all([j.e(54).then(j.bind(j,13612)),j.e(55).then(j.bind(j,13619))]))):E.push(Promise.all([j.e(56).then(j.bind(j,13622)),j.e(57).then(j.bind(j,13627))]))}constructor(I){const E={...arguments.length>2?arguments[2]:void 0,name:I,KE:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||R.d.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:o.VertexUrl,fragmentShader:o.FragmentUrl,uniforms:o.Uniforms};super({...E,defines:o._GetDefines(E.KE)}),this.texelSize=new P.Vector2(0,0)}bind(){let I=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(I),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}o.VertexUrl="fxaa",o.FragmentUrl="fxaa",o.Uniforms=["texelSize"];class Z extends z.c{getClassName(){return"FxaaPostProcess"}constructor(I,E){let j=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,w=arguments.length>3?arguments[3]:void 0,z=arguments.length>4?arguments[4]:void 0,h=arguments.length>5?arguments[5]:void 0,t=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const U={uniforms:o.Uniforms,size:"number"===typeof E?E:void 0,camera:j,samplingMode:w||e.d.BILINEAR_SAMPLINGMODE,KE:z,reusable:h,textureType:t,...E};super(I,o.FragmentUrl,{effectWrapper:"number"!==typeof E&&E.effectWrapper?void 0:new o(I,z,U),...U}),this.onApplyObservable.add((I=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(I,E,j,e){return t.e.Parse((()=>new Z(I.name,I.options,E,I.renderTargetSamplingMode,j.getEngine(),I.reusable)),I,j,e)}}(0,h.h)("BABYLON.FxaaPostProcess",Z);var c=j(10974),K=j(10953),L=j(11345),F=j(11348),C=j(11031);let X=null;function q(I,E,j,e){let w=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],h=arguments.length>6?arguments[6]:void 0,t=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:U,width:R}=G(I,E,j);if(!U||!R)return void c.b.Error("Invalid 'size' parameter !");E.GI().activeCamera===E?I.onEndFrameObservable.addOnce((()=>{X||(X=document.createElement("canvas")),X.width=R,X.height=U;const E=X.getContext("2d"),j=I.getRenderingCanvas();if(!E||!j)return void c.b.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const P=j.width,o=j.height,Z=X.width,L=X.height,F=Z/P,C=L/o,q=t?Math.max(F,C):Math.min(F,C),x=P*q,u=o*q,b=(Z-x)/2,Q=(L-u)/2;E.drawImage(j,0,0,P,o,b,Q,x,u),z?(K.Tools.EncodeScreenshotCanvasData(X,void 0,w,void 0,h),e&&e("")):K.Tools.EncodeScreenshotCanvasData(X,e,w,void 0,h)})):b(I,E,j,(I=>{if(z){const E=new Blob([I]);K.Tools.DownloadBlob(E),e&&e("")}else e&&e(I)}),w,1,I.getCreationOptions().antialias,void 0,void 0,void 0,void 0,h)}async function x(I,E,j){let e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",w=arguments.length>4?arguments[4]:void 0,z=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((h,t)=>{q(I,E,j,(I=>{"undefined"!==typeof I?h(I):t(new Error("Data is undefined"))}),e,void 0,w,z)}))}async function u(I,E,j,e){let w=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",z=arguments.length>5?arguments[5]:void 0,h=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((t=>{q(I,E,{width:j,height:e},(()=>{t()}),w,!0,z,h)}))}function b(I,E,z,h){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",U=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,R=arguments.length>6&&void 0!==arguments[6]&&arguments[6],P=arguments.length>7?arguments[7]:void 0,o=arguments.length>8&&void 0!==arguments[8]&&arguments[8],K=arguments.length>9&&void 0!==arguments[9]&&arguments[9],X=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],q=arguments.length>11?arguments[11]:void 0,x=arguments.length>12?arguments[12]:void 0,u=arguments.length>13?arguments[13]:void 0;const{height:b,width:Q,finalWidth:y,finalHeight:d}=G(I,E,z),a={width:Q,height:b};if(!b||!Q)return void c.b.Error("Invalid 'size' parameter !");I.skipFrameRender=!0;const l=I.getRenderWidth,i=I.getRenderHeight;I.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&I._currentRenderTarget?I._currentRenderTarget.width:Q},I.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&I._currentRenderTarget?I._currentRenderTarget.height:b},I.onResizeObservable.hasObservers()&&I.onResizeObservable.notifyObservers(I);const r=E.GI(),n=new w.b("screenShot",a,r,!1,!1,0,!1,e.d.BILINEAR_SAMPLINGMODE,void 0,K,void 0,void 0,void 0,U);n.renderList=r.meshes.slice(),n.samples=U,n.renderSprites=o,n.activeCamera=E,n.forceLayerMaskCheck=X,null===x||void 0===x||x(n);const H=u||L.DumpData,g=()=>{r.incrementRenderId(),r.resetCachedMaterial(),(0,C.c)((()=>n.isReadyForRendering()&&E.isReady(!0)),(()=>{I.onEndFrameObservable.addOnce((()=>{y===Q&&d===b?n.readPixels(void 0,void 0,void 0,!1).then((I=>{H(Q,b,I,h,t,P,!0,void 0,q),n.dispose()})):(I.isWebGPU?j.e(51).then(j.bind(j,13597)):j.e(52).then(j.bind(j,13603))).then((async()=>await(0,F.c)("pass",n.getInternalTexture(),r,void 0,void 0,void 0,y,d).then((E=>{I._readTexturePixels(E,y,d,-1,0,null,!0,!1,0,0).then((I=>{H(y,d,I,h,t,P,!0,void 0,q),E.dispose()}))}))))})),r.incrementRenderId(),r.resetCachedMaterial();const e=r.activeCamera,w=r.activeCameras,z=E.outputRenderTarget,U=r.spritesEnabled;r.activeCamera=E,r.activeCameras=null,E.outputRenderTarget=n,r.spritesEnabled=o;const R=r.meshes;r.meshes=n.renderList||r.meshes;try{r.render()}finally{r.activeCamera=e,r.activeCameras=w,E.outputRenderTarget=z,r.spritesEnabled=U,r.meshes=R,I.getRenderWidth=l,I.getRenderHeight=i,I.onResizeObservable.hasObservers()&&I.onResizeObservable.notifyObservers(I),E.getProjectionMatrix(!0),I.skipFrameRender=!1}}),(()=>{I.skipFrameRender=!1,I.getRenderWidth=l,I.getRenderHeight=i}))};if(R){const I=new Z("antialiasing",1,r.activeCamera);n.addPostProcess(I),I.le=!0,I.onEffectCreatedObservable.addOnce((I=>{I.isReady()?g():I.onCompiled=()=>{g()}}))}else g()}async function Q(I,E,j){let e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",w=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],h=arguments.length>6?arguments[6]:void 0,t=arguments.length>7&&void 0!==arguments[7]&&arguments[7],U=arguments.length>8&&void 0!==arguments[8]&&arguments[8],R=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],P=arguments.length>10?arguments[10]:void 0,o=arguments.length>11?arguments[11]:void 0,Z=arguments.length>12?arguments[12]:void 0;return await new Promise(((c,K)=>{b(I,E,j,(I=>{"undefined"!==typeof I?c(I):K(new Error("Data is undefined"))}),e,w,z,h,t,U,R,P,o,Z)}))}function G(I,E,j){let e=0,w=0,z=0,h=0;if("object"===typeof j){const t=j.precision?Math.abs(j.precision):1;j.width&&j.height?(e=j.height*t,w=j.width*t):j.width&&!j.height?(w=j.width*t,e=Math.round(w/I.getAspectRatio(E))):j.height&&!j.width?(e=j.height*t,w=Math.round(e*I.getAspectRatio(E))):(w=Math.round(I.getRenderWidth()*t),e=Math.round(w/I.getAspectRatio(E))),j.finalWidth&&j.finalHeight?(h=j.finalHeight,z=j.finalWidth):j.finalWidth&&!j.finalHeight?(z=j.finalWidth,h=Math.round(z/I.getAspectRatio(E))):j.finalHeight&&!j.finalWidth?(h=j.finalHeight,z=Math.round(h*I.getAspectRatio(E))):(z=w,h=e)}else isNaN(j)||(e=j,w=j,z=j,h=j);return w&&(w=Math.floor(w)),e&&(e=Math.floor(e)),z&&(z=Math.floor(z)),h&&(h=Math.floor(h)),{height:0|e,width:0|w,finalWidth:0|z,finalHeight:0|h}}const y={CreateScreenshot:q,CreateScreenshotAsync:x,CreateScreenshotWithResizeAsync:u,CreateScreenshotUsingRenderTarget:b,CreateScreenshotUsingRenderTargetAsync:Q};K.Tools.CreateScreenshot=q,K.Tools.CreateScreenshotAsync=x,K.Tools.CreateScreenshotUsingRenderTarget=b,K.Tools.CreateScreenshotUsingRenderTargetAsync=Q}}]);