"use strict";(self.a14qw1h7fq=self.a14qw1h7fq||[]).push([[12,20],{11402:(R,J,B)=>{B.r(J),B.d(J,{Dispose:()=>E,DumpData:()=>l,DumpDataAsync:()=>D,DumpFramebuffer:()=>e,DumpTools:()=>O});var Q=B(11294),h=B(11030),y=B(11201),N=B(11065);let r,q=null;async function e(R,J,B,Q){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",y=arguments.length>5?arguments[5]:void 0,N=arguments.length>6?arguments[6]:void 0;const r=await B.readPixels(0,0,R,J);l(R,J,new Uint8Array(r.buffer),Q,h,y,!0,void 0,N)}async function D(R,J,B){let Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",h=arguments.length>4?arguments[4]:void 0,y=arguments.length>5&&void 0!==arguments[5]&&arguments[5],N=arguments.length>6&&void 0!==arguments[6]&&arguments[6],r=arguments.length>7?arguments[7]:void 0;return await new Promise((q=>{l(R,J,B,(R=>q(R)),Q,h,y,N,r)}))}function l(R,J,e,D){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",O=arguments.length>5?arguments[5]:void 0,n=arguments.length>6&&void 0!==arguments[6]&&arguments[6],P=arguments.length>7&&void 0!==arguments[7]&&arguments[7],A=arguments.length>8?arguments[8]:void 0;(async function(){return q||(q=new Promise(((R,J)=>{let h,y=null;const q={kh:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(B.bind(B,11317)).then((e=>{let{ThinEngine:D}=e;const l=N.e.Instances.length;try{h=new OffscreenCanvas(100,100),y=new D(h,!1,q)}catch(P){var O;l<N.e.Instances.length&&(null===(O=N.e.Instances.pop())||void 0===O||O.dispose()),h=document.createElement("canvas"),y=new D(h,!1,q)}N.e.Instances.pop(),N.e.OnEnginesDisposedObservable.add((R=>{y&&R!==y&&!y.D&&0===N.e.Instances.length&&E()})),y.getCaps().parallelShaderCompile=void 0;const n=new Q.e(y);B.e(52).then(B.bind(B,13677)).then((B=>{let{passPixelShader:N}=B;if(!y)return void J("Engine is not defined");const q=new Q.f({OJ:y,name:N.name,fragmentShader:N.shader,samplerNames:["textureSampler"]});r={canvas:h,OJ:y,renderer:n,wrapper:q},R(r)}))})).catch(J)}))),await q})().then((B=>{if(B.OJ.setSize(R,J,!0),e instanceof Float32Array){const R=new Uint8Array(e.length);let J=e.length;for(;J--;){const B=e[J];R[J]=Math.round(255*(0,y.Clamp)(B))}e=R}const Q=B.OJ.createRawTexture(e,R,J,5,!1,!n,1);B.renderer.setViewport(),B.renderer.applyEffectWrapper(B.wrapper),B.wrapper.effect._bindTexture("textureSampler",Q),B.renderer.draw(),P?h.Tools.ToBlob(B.canvas,(R=>{const J=new FileReader;J.onload=R=>{const J=R.target.result;D&&D(J)},J.readAsArrayBuffer(R)}),l,A):h.Tools.EncodeScreenshotCanvasData(B.canvas,D,l,O,A),Q.dispose()}))}function E(){var R;r?(r.wrapper.dispose(),r.renderer.dispose(),r.OJ.dispose()):null===(R=q)||void 0===R||R.then((R=>{R.wrapper.dispose(),R.renderer.dispose(),R.OJ.dispose()}));q=null,r=null}const O={DumpData:l,DumpDataAsync:D,DumpFramebuffer:e,Dispose:E};h.Tools.DumpData=l,h.Tools.DumpDataAsync=D,h.Tools.DumpFramebuffer=e},11152:(R,J,B)=>{B.r(J),B.d(J,{CreateScreenshot:()=>f,CreateScreenshotAsync:()=>a,CreateScreenshotUsingRenderTarget:()=>x,CreateScreenshotUsingRenderTargetAsync:()=>I,CreateScreenshotWithResizeAsync:()=>s,ScreenshotTools:()=>M});var Q=B(11161),h=B(11247),y=B(11291),N=B(11142),r=B(11217),q=B(11294),e=B(11310),D=B(11186);class l extends q.f{static _GetDefines(R){if(!R)return null;return R.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(R,J){R?(this._webGPUReady=!0,J.push(Promise.all([B.e(54).then(B.bind(B,13688)),B.e(55).then(B.bind(B,13692))]))):J.push(Promise.all([B.e(56).then(B.bind(B,13698)),B.e(57).then(B.bind(B,13702))]))}constructor(R){const J={...arguments.length>2?arguments[2]:void 0,name:R,OJ:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||e.d.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:l.VertexUrl,fragmentShader:l.FragmentUrl,uniforms:l.Uniforms};super({...J,defines:l._GetDefines(J.OJ)}),this.texelSize=new D.Vector2(0,0)}bind(){let R=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(R),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}l.VertexUrl="fxaa",l.FragmentUrl="fxaa",l.Uniforms=["texelSize"];class E extends y.d{getClassName(){return"FxaaPostProcess"}constructor(R,J){let B=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,h=arguments.length>3?arguments[3]:void 0,y=arguments.length>4?arguments[4]:void 0,N=arguments.length>5?arguments[5]:void 0,r=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const q={uniforms:l.Uniforms,size:"number"===typeof J?J:void 0,camera:B,samplingMode:h||Q.d.BILINEAR_SAMPLINGMODE,OJ:y,reusable:N,textureType:r,...J};super(R,l.FragmentUrl,{effectWrapper:"number"!==typeof J&&J.effectWrapper?void 0:new l(R,y,q),...q}),this.onApplyObservable.add((R=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(R,J,B,Q){return r.c.Parse((()=>new E(R.name,R.options,J,R.renderTargetSamplingMode,B.getEngine(),R.reusable)),R,B,Q)}}(0,N.h)("BABYLON.FxaaPostProcess",E);var O=B(11043),n=B(11030),P=B(11402),A=B(11408),u=B(11090);let S=null;function f(R,J,B,Q){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",y=arguments.length>5&&void 0!==arguments[5]&&arguments[5],N=arguments.length>6?arguments[6]:void 0,r=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:q,width:e}=V(R,J,B);if(!q||!e)return void O.d.Error("Invalid 'size' parameter !");J.IR().activeCamera===J?R.onEndFrameObservable.addOnce((()=>{S||(S=document.createElement("canvas")),S.width=e,S.height=q;const J=S.getContext("2d"),B=R.getRenderingCanvas();if(!J||!B)return void O.d.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const D=B.width,l=B.height,E=S.width,P=S.height,A=E/D,u=P/l,f=r?Math.max(A,u):Math.min(A,u),a=D*f,s=l*f,x=(E-a)/2,I=(P-s)/2;J.drawImage(B,0,0,D,l,x,I,a,s),y?(n.Tools.EncodeScreenshotCanvasData(S,void 0,h,void 0,N),Q&&Q("")):n.Tools.EncodeScreenshotCanvasData(S,Q,h,void 0,N)})):x(R,J,B,(R=>{if(y){const J=new Blob([R]);n.Tools.DownloadBlob(J),Q&&Q("")}else Q&&Q(R)}),h,1,R.getCreationOptions().antialias,void 0,void 0,void 0,void 0,N)}async function a(R,J,B){let Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",h=arguments.length>4?arguments[4]:void 0,y=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((N,r)=>{f(R,J,B,(R=>{"undefined"!==typeof R?N(R):r(new Error("Data is undefined"))}),Q,void 0,h,y)}))}async function s(R,J,B,Q){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",y=arguments.length>5?arguments[5]:void 0,N=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((r=>{f(R,J,{width:B,height:Q},(()=>{r()}),h,!0,y,N)}))}function x(R,J,y,N){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",q=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,e=arguments.length>6&&void 0!==arguments[6]&&arguments[6],D=arguments.length>7?arguments[7]:void 0,l=arguments.length>8&&void 0!==arguments[8]&&arguments[8],n=arguments.length>9&&void 0!==arguments[9]&&arguments[9],S=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],f=arguments.length>11?arguments[11]:void 0,a=arguments.length>12?arguments[12]:void 0,s=arguments.length>13?arguments[13]:void 0;const{height:x,width:I,finalWidth:M,finalHeight:H}=V(R,J,y),d={width:I,height:x};if(!x||!I)return void O.d.Error("Invalid 'size' parameter !");R.skipFrameRender=!0;const X=R.getRenderWidth,c=R.getRenderHeight;R.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&R._currentRenderTarget?R._currentRenderTarget.width:I},R.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&R._currentRenderTarget?R._currentRenderTarget.height:x},R.onResizeObservable.hasObservers()&&R.onResizeObservable.notifyObservers(R);const z=J.IR(),p=new h.d("screenShot",d,z,!1,!1,0,!1,Q.d.BILINEAR_SAMPLINGMODE,void 0,n,void 0,void 0,void 0,q);p.renderList=z.meshes.slice(),p.samples=q,p.renderSprites=l,p.activeCamera=J,p.forceLayerMaskCheck=S,null===a||void 0===a||a(p);const i=s||P.DumpData,W=()=>{z.incrementRenderId(),z.resetCachedMaterial(),(0,u.f)((()=>p.isReadyForRendering()&&J.isReady(!0)),(()=>{R.onEndFrameObservable.addOnce((()=>{M===I&&H===x?p.readPixels(void 0,void 0,void 0,!1).then((R=>{i(I,x,R,N,r,D,!0,void 0,f),p.dispose()})):(R.isWebGPU?B.e(51).then(B.bind(B,13671)):B.e(52).then(B.bind(B,13677))).then((async()=>await(0,A.e)("pass",p.getInternalTexture(),z,void 0,void 0,void 0,M,H).then((J=>{R._readTexturePixels(J,M,H,-1,0,null,!0,!1,0,0).then((R=>{i(M,H,R,N,r,D,!0,void 0,f),J.dispose()}))}))))})),z.incrementRenderId(),z.resetCachedMaterial();const Q=z.activeCamera,h=z.activeCameras,y=J.outputRenderTarget,q=z.spritesEnabled;z.activeCamera=J,z.activeCameras=null,J.outputRenderTarget=p,z.spritesEnabled=l;const e=z.meshes;z.meshes=p.renderList||z.meshes;try{z.render()}finally{z.activeCamera=Q,z.activeCameras=h,J.outputRenderTarget=y,z.spritesEnabled=q,z.meshes=e,R.getRenderWidth=X,R.getRenderHeight=c,R.onResizeObservable.hasObservers()&&R.onResizeObservable.notifyObservers(R),J.getProjectionMatrix(!0),R.skipFrameRender=!1}}),(()=>{R.skipFrameRender=!1,R.getRenderWidth=X,R.getRenderHeight=c}))};if(e){const R=new E("antialiasing",1,z.activeCamera);p.addPostProcess(R),R.gh=!0,R.onEffectCreatedObservable.addOnce((R=>{R.isReady()?W():R.onCompiled=()=>{W()}}))}else W()}async function I(R,J,B){let Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,y=arguments.length>5&&void 0!==arguments[5]&&arguments[5],N=arguments.length>6?arguments[6]:void 0,r=arguments.length>7&&void 0!==arguments[7]&&arguments[7],q=arguments.length>8&&void 0!==arguments[8]&&arguments[8],e=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],D=arguments.length>10?arguments[10]:void 0,l=arguments.length>11?arguments[11]:void 0,E=arguments.length>12?arguments[12]:void 0;return await new Promise(((O,n)=>{x(R,J,B,(R=>{"undefined"!==typeof R?O(R):n(new Error("Data is undefined"))}),Q,h,y,N,r,q,e,D,l,E)}))}function V(R,J,B){let Q=0,h=0,y=0,N=0;if("object"===typeof B){const r=B.precision?Math.abs(B.precision):1;B.width&&B.height?(Q=B.height*r,h=B.width*r):B.width&&!B.height?(h=B.width*r,Q=Math.round(h/R.getAspectRatio(J))):B.height&&!B.width?(Q=B.height*r,h=Math.round(Q*R.getAspectRatio(J))):(h=Math.round(R.getRenderWidth()*r),Q=Math.round(h/R.getAspectRatio(J))),B.finalWidth&&B.finalHeight?(N=B.finalHeight,y=B.finalWidth):B.finalWidth&&!B.finalHeight?(y=B.finalWidth,N=Math.round(y/R.getAspectRatio(J))):B.finalHeight&&!B.finalWidth?(N=B.finalHeight,y=Math.round(N*R.getAspectRatio(J))):(y=h,N=Q)}else isNaN(B)||(Q=B,h=B,y=B,N=B);return h&&(h=Math.floor(h)),Q&&(Q=Math.floor(Q)),y&&(y=Math.floor(y)),N&&(N=Math.floor(N)),{height:0|Q,width:0|h,finalWidth:0|y,finalHeight:0|N}}const M={CreateScreenshot:f,CreateScreenshotAsync:a,CreateScreenshotWithResizeAsync:s,CreateScreenshotUsingRenderTarget:x,CreateScreenshotUsingRenderTargetAsync:I};n.Tools.CreateScreenshot=f,n.Tools.CreateScreenshotAsync=a,n.Tools.CreateScreenshotUsingRenderTarget=x,n.Tools.CreateScreenshotUsingRenderTargetAsync=I}}]);