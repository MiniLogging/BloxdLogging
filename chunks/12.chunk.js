"use strict";(self.ufnpnb83drd=self.ufnpnb83drd||[]).push([[12,20],{12554:(E,U,g)=>{g.r(U),g.d(U,{Dispose:()=>F,DumpData:()=>P,DumpDataAsync:()=>B,DumpFramebuffer:()=>C,DumpTools:()=>f});var N=g(12433),L=g(12165),D=g(12353),S=g(12205);let u,s=null;async function C(E,U,g,N){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",D=arguments.length>5?arguments[5]:void 0,S=arguments.length>6?arguments[6]:void 0;const u=await g.readPixels(0,0,E,U);P(E,U,new Uint8Array(u.buffer),N,L,D,!0,void 0,S)}async function B(E,U,g){let N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",L=arguments.length>4?arguments[4]:void 0,D=arguments.length>5&&void 0!==arguments[5]&&arguments[5],S=arguments.length>6&&void 0!==arguments[6]&&arguments[6],u=arguments.length>7?arguments[7]:void 0;return await new Promise((s=>{P(E,U,g,(E=>s(E)),N,L,D,S,u)}))}function P(E,U,C,B){let P=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",f=arguments.length>5?arguments[5]:void 0,d=arguments.length>6&&void 0!==arguments[6]&&arguments[6],I=arguments.length>7&&void 0!==arguments[7]&&arguments[7],y=arguments.length>8?arguments[8]:void 0;(async function(){return s||(s=new Promise(((E,U)=>{let L,D=null;const s={ag:!0,depth:!1,Vg:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(g.bind(g,12471)).then((C=>{let{ThinEngine:B}=C;const P=S.b.Instances.length;try{L=new OffscreenCanvas(100,100),D=new B(L,!1,s)}catch(I){var f;P<S.b.Instances.length&&(null===(f=S.b.Instances.pop())||void 0===f||f.dispose()),L=document.createElement("canvas"),D=new B(L,!1,s)}S.b.Instances.pop(),S.b.OnEnginesDisposedObservable.add((E=>{D&&E!==D&&!D.C&&0===S.b.Instances.length&&F()})),D.getCaps().parallelShaderCompile=void 0;const d=new N.c(D);g.e(52).then(g.bind(g,14865)).then((g=>{let{passPixelShader:S}=g;if(!D)return void U("Engine is not defined");const s=new N.e({fU:D,name:S.name,fragmentShader:S.shader,samplerNames:["textureSampler"]});u={canvas:L,fU:D,renderer:d,wrapper:s},E(u)}))})).catch(U)}))),await s})().then((g=>{if(g.fU.setSize(E,U,!0),C instanceof Float32Array){const E=new Uint8Array(C.length);let U=C.length;for(;U--;){const g=C[U];E[U]=Math.round(255*(0,D.Clamp)(g))}C=E}const N=g.fU.createRawTexture(C,E,U,5,!1,!d,1);g.renderer.setViewport(),g.renderer.applyEffectWrapper(g.wrapper),g.wrapper.effect._bindTexture("textureSampler",N),g.renderer.draw(),I?L.Tools.ToBlob(g.canvas,(E=>{const U=new FileReader;U.onload=E=>{const U=E.target.result;B&&B(U)},U.readAsArrayBuffer(E)}),P,y):L.Tools.EncodeScreenshotCanvasData(g.canvas,B,P,f,y),N.dispose()}))}function F(){var E;u?(u.wrapper.dispose(),u.renderer.dispose(),u.fU.dispose()):null===(E=s)||void 0===E||E.then((E=>{E.wrapper.dispose(),E.renderer.dispose(),E.fU.dispose()}));s=null,u=null}const f={DumpData:P,DumpDataAsync:B,DumpFramebuffer:C,Dispose:F};L.Tools.DumpData=P,L.Tools.DumpDataAsync=B,L.Tools.DumpFramebuffer=C},12308:(E,U,g)=>{g.r(U),g.d(U,{CreateScreenshot:()=>e,CreateScreenshotAsync:()=>x,CreateScreenshotUsingRenderTarget:()=>Y,CreateScreenshotUsingRenderTargetAsync:()=>t,CreateScreenshotWithResizeAsync:()=>l,ScreenshotTools:()=>b});var N=g(12311),L=g(12396),D=g(12430),S=g(12292),u=g(12367),s=g(12433),C=g(12462),B=g(12334);class P extends s.e{static _GetDefines(E){if(!E)return null;return E.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(E,U){E?(this._webGPUReady=!0,U.push(Promise.all([g.e(54).then(g.bind(g,14879)),g.e(55).then(g.bind(g,14886))]))):U.push(Promise.all([g.e(56).then(g.bind(g,14890)),g.e(57).then(g.bind(g,14892))]))}constructor(E){const U={...arguments.length>2?arguments[2]:void 0,name:E,fU:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||C.c.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:P.VertexUrl,fragmentShader:P.FragmentUrl,uniforms:P.Uniforms};super({...U,defines:P._GetDefines(U.fU)}),this.texelSize=new B.Vector2(0,0)}bind(){let E=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(E),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}P.VertexUrl="fxaa",P.FragmentUrl="fxaa",P.Uniforms=["texelSize"];class F extends D.e{getClassName(){return"FxaaPostProcess"}constructor(E,U){let g=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,L=arguments.length>3?arguments[3]:void 0,D=arguments.length>4?arguments[4]:void 0,S=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const s={uniforms:P.Uniforms,size:"number"===typeof U?U:void 0,camera:g,samplingMode:L||N.c.BILINEAR_SAMPLINGMODE,fU:D,reusable:S,textureType:u,...U};super(E,P.FragmentUrl,{effectWrapper:"number"!==typeof U&&U.effectWrapper?void 0:new P(E,D,s),...s}),this.onApplyObservable.add((E=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(E,U,g,N){return u.b.Parse((()=>new F(E.name,E.options,U,E.renderTargetSamplingMode,g.getEngine(),E.reusable)),E,g,N)}}(0,S.f)("BABYLON.FxaaPostProcess",F);var f=g(12186),d=g(12165),I=g(12554),y=g(12557),h=g(12234);let V=null;function e(E,U,g,N){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",D=arguments.length>5&&void 0!==arguments[5]&&arguments[5],S=arguments.length>6?arguments[6]:void 0,u=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:s,width:C}=G(E,U,g);if(!s||!C)return void f.d.Error("Invalid 'size' parameter !");U.tE().activeCamera===U?E.onEndFrameObservable.addOnce((()=>{V||(V=document.createElement("canvas")),V.width=C,V.height=s;const U=V.getContext("2d"),g=E.getRenderingCanvas();if(!U||!g)return void f.d.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const B=g.width,P=g.height,F=V.width,I=V.height,y=F/B,h=I/P,e=u?Math.max(y,h):Math.min(y,h),x=B*e,l=P*e,Y=(F-x)/2,t=(I-l)/2;U.drawImage(g,0,0,B,P,Y,t,x,l),D?(d.Tools.EncodeScreenshotCanvasData(V,void 0,L,void 0,S),N&&N("")):d.Tools.EncodeScreenshotCanvasData(V,N,L,void 0,S)})):Y(E,U,g,(E=>{if(D){const U=new Blob([E]);d.Tools.DownloadBlob(U),N&&N("")}else N&&N(E)}),L,1,E.getCreationOptions().antialias,void 0,void 0,void 0,void 0,S)}async function x(E,U,g){let N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",L=arguments.length>4?arguments[4]:void 0,D=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((S,u)=>{e(E,U,g,(E=>{"undefined"!==typeof E?S(E):u(new Error("Data is undefined"))}),N,void 0,L,D)}))}async function l(E,U,g,N){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",D=arguments.length>5?arguments[5]:void 0,S=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((u=>{e(E,U,{width:g,height:N},(()=>{u()}),L,!0,D,S)}))}function Y(E,U,D,S){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,C=arguments.length>6&&void 0!==arguments[6]&&arguments[6],B=arguments.length>7?arguments[7]:void 0,P=arguments.length>8&&void 0!==arguments[8]&&arguments[8],d=arguments.length>9&&void 0!==arguments[9]&&arguments[9],V=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],e=arguments.length>11?arguments[11]:void 0,x=arguments.length>12?arguments[12]:void 0,l=arguments.length>13?arguments[13]:void 0;const{height:Y,width:t,finalWidth:b,finalHeight:T}=G(E,U,D),v={width:t,height:Y};if(!Y||!t)return void f.d.Error("Invalid 'size' parameter !");E.skipFrameRender=!0;const o=E.getRenderWidth,c=E.getRenderHeight;E.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&E._currentRenderTarget?E._currentRenderTarget.width:t},E.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&E._currentRenderTarget?E._currentRenderTarget.height:Y},E.onResizeObservable.hasObservers()&&E.onResizeObservable.notifyObservers(E);const r=U.tE(),j=new L.c("screenShot",v,r,!1,!1,0,!1,N.c.BILINEAR_SAMPLINGMODE,void 0,d,void 0,void 0,void 0,s);j.renderList=r.meshes.slice(),j.samples=s,j.renderSprites=P,j.activeCamera=U,j.forceLayerMaskCheck=V,null===x||void 0===x||x(j);const Z=l||I.DumpData,A=()=>{r.incrementRenderId(),r.resetCachedMaterial(),(0,h.f)((()=>j.isReadyForRendering()&&U.isReady(!0)),(()=>{E.onEndFrameObservable.addOnce((()=>{b===t&&T===Y?j.readPixels(void 0,void 0,void 0,!1).then((E=>{Z(t,Y,E,S,u,B,!0,void 0,e),j.dispose()})):(E.isWebGPU?g.e(51).then(g.bind(g,14858)):g.e(52).then(g.bind(g,14865))).then((async()=>await(0,y.b)("pass",j.getInternalTexture(),r,void 0,void 0,void 0,b,T).then((U=>{E._readTexturePixels(U,b,T,-1,0,null,!0,!1,0,0).then((E=>{Z(b,T,E,S,u,B,!0,void 0,e),U.dispose()}))}))))})),r.incrementRenderId(),r.resetCachedMaterial();const N=r.activeCamera,L=r.activeCameras,D=U.outputRenderTarget,s=r.spritesEnabled;r.activeCamera=U,r.activeCameras=null,U.outputRenderTarget=j,r.spritesEnabled=P;const C=r.meshes;r.meshes=j.renderList||r.meshes;try{r.render()}finally{r.activeCamera=N,r.activeCameras=L,U.outputRenderTarget=D,r.spritesEnabled=s,r.meshes=C,E.getRenderWidth=o,E.getRenderHeight=c,E.onResizeObservable.hasObservers()&&E.onResizeObservable.notifyObservers(E),U.getProjectionMatrix(!0),E.skipFrameRender=!1}}),(()=>{E.skipFrameRender=!1,E.getRenderWidth=o,E.getRenderHeight=c}))};if(C){const E=new F("antialiasing",1,r.activeCamera);j.addPostProcess(E),E.Mg=!0,E.onEffectCreatedObservable.addOnce((E=>{E.isReady()?A():E.onCompiled=()=>{A()}}))}else A()}async function t(E,U,g){let N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,D=arguments.length>5&&void 0!==arguments[5]&&arguments[5],S=arguments.length>6?arguments[6]:void 0,u=arguments.length>7&&void 0!==arguments[7]&&arguments[7],s=arguments.length>8&&void 0!==arguments[8]&&arguments[8],C=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],B=arguments.length>10?arguments[10]:void 0,P=arguments.length>11?arguments[11]:void 0,F=arguments.length>12?arguments[12]:void 0;return await new Promise(((f,d)=>{Y(E,U,g,(E=>{"undefined"!==typeof E?f(E):d(new Error("Data is undefined"))}),N,L,D,S,u,s,C,B,P,F)}))}function G(E,U,g){let N=0,L=0,D=0,S=0;if("object"===typeof g){const u=g.precision?Math.abs(g.precision):1;g.width&&g.height?(N=g.height*u,L=g.width*u):g.width&&!g.height?(L=g.width*u,N=Math.round(L/E.getAspectRatio(U))):g.height&&!g.width?(N=g.height*u,L=Math.round(N*E.getAspectRatio(U))):(L=Math.round(E.getRenderWidth()*u),N=Math.round(L/E.getAspectRatio(U))),g.finalWidth&&g.finalHeight?(S=g.finalHeight,D=g.finalWidth):g.finalWidth&&!g.finalHeight?(D=g.finalWidth,S=Math.round(D/E.getAspectRatio(U))):g.finalHeight&&!g.finalWidth?(S=g.finalHeight,D=Math.round(S*E.getAspectRatio(U))):(D=L,S=N)}else isNaN(g)||(N=g,L=g,D=g,S=g);return L&&(L=Math.floor(L)),N&&(N=Math.floor(N)),D&&(D=Math.floor(D)),S&&(S=Math.floor(S)),{height:0|N,width:0|L,finalWidth:0|D,finalHeight:0|S}}const b={CreateScreenshot:e,CreateScreenshotAsync:x,CreateScreenshotWithResizeAsync:l,CreateScreenshotUsingRenderTarget:Y,CreateScreenshotUsingRenderTargetAsync:t};d.Tools.CreateScreenshot=e,d.Tools.CreateScreenshotAsync=x,d.Tools.CreateScreenshotUsingRenderTarget=Y,d.Tools.CreateScreenshotUsingRenderTargetAsync=t}}]);