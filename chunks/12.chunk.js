"use strict";(self.pp3k1ov3ibi=self.pp3k1ov3ibi||[]).push([[12,20],{12579:(M,Z,P)=>{P.r(Z),P.d(Z,{Dispose:()=>H,DumpData:()=>O,DumpDataAsync:()=>d,DumpFramebuffer:()=>K,DumpTools:()=>j});var x=P(12464),c=P(12175),w=P(12387),v=P(12225);let G,mM=null;async function K(M,Z,P,x){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",w=arguments.length>5?arguments[5]:void 0,v=arguments.length>6?arguments[6]:void 0;const G=await P.readPixels(0,0,M,Z);O(M,Z,new Uint8Array(G.buffer),x,c,w,!0,void 0,v)}async function d(M,Z,P){let x=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",c=arguments.length>4?arguments[4]:void 0,w=arguments.length>5&&void 0!==arguments[5]&&arguments[5],v=arguments.length>6&&void 0!==arguments[6]&&arguments[6],G=arguments.length>7?arguments[7]:void 0;return await new Promise((mM=>{O(M,Z,P,(M=>mM(M)),x,c,w,v,G)}))}function O(M,Z,K,d){let O=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",j=arguments.length>5?arguments[5]:void 0,B=arguments.length>6&&void 0!==arguments[6]&&arguments[6],U=arguments.length>7&&void 0!==arguments[7]&&arguments[7],n=arguments.length>8?arguments[8]:void 0;(async function(){return mM||(mM=new Promise(((M,Z)=>{let c,w=null;const mM={o:!0,depth:!1,Kc:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(P.bind(P,12490)).then((K=>{let{ThinEngine:d}=K;const O=v.b.Instances.length;try{c=new OffscreenCanvas(100,100),w=new d(c,!1,mM)}catch(U){var j;O<v.b.Instances.length&&(null===(j=v.b.Instances.pop())||void 0===j||j.dispose()),c=document.createElement("canvas"),w=new d(c,!1,mM)}v.b.Instances.pop(),v.b.OnEnginesDisposedObservable.add((M=>{w&&M!==w&&!w.K&&0===v.b.Instances.length&&H()})),w.getCaps().parallelShaderCompile=void 0;const B=new x.d(w);P.e(52).then(P.bind(P,14881)).then((P=>{let{passPixelShader:v}=P;if(!w)return void Z("Engine is not defined");const mM=new x.f({jZ:w,name:v.name,fragmentShader:v.shader,samplerNames:["textureSampler"]});G={canvas:c,jZ:w,renderer:B,wrapper:mM},M(G)}))})).catch(Z)}))),await mM})().then((P=>{if(P.jZ.setSize(M,Z,!0),K instanceof Float32Array){const M=new Uint8Array(K.length);let Z=K.length;for(;Z--;){const P=K[Z];M[Z]=Math.round(255*(0,w.Clamp)(P))}K=M}const x=P.jZ.createRawTexture(K,M,Z,5,!1,!B,1);P.renderer.setViewport(),P.renderer.applyEffectWrapper(P.wrapper),P.wrapper.effect._bindTexture("textureSampler",x),P.renderer.draw(),U?c.Tools.ToBlob(P.canvas,(M=>{const Z=new FileReader;Z.onload=M=>{const Z=M.target.result;d&&d(Z)},Z.readAsArrayBuffer(M)}),O,n):c.Tools.EncodeScreenshotCanvasData(P.canvas,d,O,j,n),x.dispose()}))}function H(){var M;G?(G.wrapper.dispose(),G.renderer.dispose(),G.jZ.dispose()):null===(M=mM)||void 0===M||M.then((M=>{M.wrapper.dispose(),M.renderer.dispose(),M.jZ.dispose()}));mM=null,G=null}const j={DumpData:O,DumpDataAsync:d,DumpFramebuffer:K,Dispose:H};c.Tools.DumpData=O,c.Tools.DumpDataAsync=d,c.Tools.DumpFramebuffer=K},12339:(M,Z,P)=>{P.r(Z),P.d(Z,{CreateScreenshot:()=>N,CreateScreenshotAsync:()=>J,CreateScreenshotUsingRenderTarget:()=>F,CreateScreenshotUsingRenderTargetAsync:()=>D,CreateScreenshotWithResizeAsync:()=>t,ScreenshotTools:()=>h});var x=P(12344),c=P(12418),w=P(12462),v=P(12317),G=P(12394),mM=P(12464),K=P(12482),d=P(12373);class O extends mM.f{static _GetDefines(M){if(!M)return null;return M.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(M,Z){M?(this._webGPUReady=!0,Z.push(Promise.all([P.e(54).then(P.bind(P,14893)),P.e(55).then(P.bind(P,14902))]))):Z.push(Promise.all([P.e(56).then(P.bind(P,14909)),P.e(57).then(P.bind(P,14912))]))}constructor(M){const Z={...arguments.length>2?arguments[2]:void 0,name:M,jZ:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||K.d.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:O.VertexUrl,fragmentShader:O.FragmentUrl,uniforms:O.Uniforms};super({...Z,defines:O._GetDefines(Z.jZ)}),this.texelSize=new d.Vector2(0,0)}bind(){let M=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(M),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}O.VertexUrl="fxaa",O.FragmentUrl="fxaa",O.Uniforms=["texelSize"];class H extends w.e{getClassName(){return"FxaaPostProcess"}constructor(M,Z){let P=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,c=arguments.length>3?arguments[3]:void 0,w=arguments.length>4?arguments[4]:void 0,v=arguments.length>5?arguments[5]:void 0,G=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const mM={uniforms:O.Uniforms,size:"number"===typeof Z?Z:void 0,camera:P,samplingMode:c||x.e.BILINEAR_SAMPLINGMODE,jZ:w,reusable:v,textureType:G,...Z};super(M,O.FragmentUrl,{effectWrapper:"number"!==typeof Z&&Z.effectWrapper?void 0:new O(M,w,mM),...mM}),this.onApplyObservable.add((M=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(M,Z,P,x){return G.b.Parse((()=>new H(M.name,M.options,Z,M.renderTargetSamplingMode,P.getEngine(),M.reusable)),M,P,x)}}(0,v.g)("BABYLON.FxaaPostProcess",H);var j=P(12199),B=P(12175),U=P(12579),n=P(12581),L=P(12258);let u=null;function N(M,Z,P,x){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",w=arguments.length>5&&void 0!==arguments[5]&&arguments[5],v=arguments.length>6?arguments[6]:void 0,G=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:mM,width:K}=l(M,Z,P);if(!mM||!K)return void j.d.Error("Invalid 'size' parameter !");Z.DM().activeCamera===Z?M.onEndFrameObservable.addOnce((()=>{u||(u=document.createElement("canvas")),u.width=K,u.height=mM;const Z=u.getContext("2d"),P=M.getRenderingCanvas();if(!Z||!P)return void j.d.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const d=P.width,O=P.height,H=u.width,U=u.height,n=H/d,L=U/O,N=G?Math.max(n,L):Math.min(n,L),J=d*N,t=O*N,F=(H-J)/2,D=(U-t)/2;Z.drawImage(P,0,0,d,O,F,D,J,t),w?(B.Tools.EncodeScreenshotCanvasData(u,void 0,c,void 0,v),x&&x("")):B.Tools.EncodeScreenshotCanvasData(u,x,c,void 0,v)})):F(M,Z,P,(M=>{if(w){const Z=new Blob([M]);B.Tools.DownloadBlob(Z),x&&x("")}else x&&x(M)}),c,1,M.getCreationOptions().antialias,void 0,void 0,void 0,void 0,v)}async function J(M,Z,P){let x=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",c=arguments.length>4?arguments[4]:void 0,w=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((v,G)=>{N(M,Z,P,(M=>{"undefined"!==typeof M?v(M):G(new Error("Data is undefined"))}),x,void 0,c,w)}))}async function t(M,Z,P,x){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",w=arguments.length>5?arguments[5]:void 0,v=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((G=>{N(M,Z,{width:P,height:x},(()=>{G()}),c,!0,w,v)}))}function F(M,Z,w,v){let G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",mM=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,K=arguments.length>6&&void 0!==arguments[6]&&arguments[6],d=arguments.length>7?arguments[7]:void 0,O=arguments.length>8&&void 0!==arguments[8]&&arguments[8],B=arguments.length>9&&void 0!==arguments[9]&&arguments[9],u=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],N=arguments.length>11?arguments[11]:void 0,J=arguments.length>12?arguments[12]:void 0,t=arguments.length>13?arguments[13]:void 0;const{height:F,width:D,finalWidth:h,finalHeight:Q}=l(M,Z,w),I={width:D,height:F};if(!F||!D)return void j.d.Error("Invalid 'size' parameter !");M.skipFrameRender=!0;const s=M.getRenderWidth,C=M.getRenderHeight;M.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&M._currentRenderTarget?M._currentRenderTarget.width:D},M.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&M._currentRenderTarget?M._currentRenderTarget.height:F},M.onResizeObservable.hasObservers()&&M.onResizeObservable.notifyObservers(M);const R=Z.DM(),W=new c.d("screenShot",I,R,!1,!1,0,!1,x.e.BILINEAR_SAMPLINGMODE,void 0,B,void 0,void 0,void 0,mM);W.renderList=R.meshes.slice(),W.samples=mM,W.renderSprites=O,W.activeCamera=Z,W.forceLayerMaskCheck=u,null===J||void 0===J||J(W);const k=t||U.DumpData,A=()=>{R.incrementRenderId(),R.resetCachedMaterial(),(0,L.d)((()=>W.isReadyForRendering()&&Z.isReady(!0)),(()=>{M.onEndFrameObservable.addOnce((()=>{h===D&&Q===F?W.readPixels(void 0,void 0,void 0,!1).then((M=>{k(D,F,M,v,G,d,!0,void 0,N),W.dispose()})):(M.isWebGPU?P.e(51).then(P.bind(P,14873)):P.e(52).then(P.bind(P,14881))).then((async()=>await(0,n.c)("pass",W.getInternalTexture(),R,void 0,void 0,void 0,h,Q).then((Z=>{M._readTexturePixels(Z,h,Q,-1,0,null,!0,!1,0,0).then((M=>{k(h,Q,M,v,G,d,!0,void 0,N),Z.dispose()}))}))))})),R.incrementRenderId(),R.resetCachedMaterial();const x=R.activeCamera,c=R.activeCameras,w=Z.outputRenderTarget,mM=R.spritesEnabled;R.activeCamera=Z,R.activeCameras=null,Z.outputRenderTarget=W,R.spritesEnabled=O;const K=R.meshes;R.meshes=W.renderList||R.meshes;try{R.render()}finally{R.activeCamera=x,R.activeCameras=c,Z.outputRenderTarget=w,R.spritesEnabled=mM,R.meshes=K,M.getRenderWidth=s,M.getRenderHeight=C,M.onResizeObservable.hasObservers()&&M.onResizeObservable.notifyObservers(M),Z.getProjectionMatrix(!0),M.skipFrameRender=!1}}),(()=>{M.skipFrameRender=!1,M.getRenderWidth=s,M.getRenderHeight=C}))};if(K){const M=new H("antialiasing",1,R.activeCamera);W.addPostProcess(M),M.Bc=!0,M.onEffectCreatedObservable.addOnce((M=>{M.isReady()?A():M.onCompiled=()=>{A()}}))}else A()}async function D(M,Z,P){let x=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,w=arguments.length>5&&void 0!==arguments[5]&&arguments[5],v=arguments.length>6?arguments[6]:void 0,G=arguments.length>7&&void 0!==arguments[7]&&arguments[7],mM=arguments.length>8&&void 0!==arguments[8]&&arguments[8],K=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],d=arguments.length>10?arguments[10]:void 0,O=arguments.length>11?arguments[11]:void 0,H=arguments.length>12?arguments[12]:void 0;return await new Promise(((j,B)=>{F(M,Z,P,(M=>{"undefined"!==typeof M?j(M):B(new Error("Data is undefined"))}),x,c,w,v,G,mM,K,d,O,H)}))}function l(M,Z,P){let x=0,c=0,w=0,v=0;if("object"===typeof P){const G=P.precision?Math.abs(P.precision):1;P.width&&P.height?(x=P.height*G,c=P.width*G):P.width&&!P.height?(c=P.width*G,x=Math.round(c/M.getAspectRatio(Z))):P.height&&!P.width?(x=P.height*G,c=Math.round(x*M.getAspectRatio(Z))):(c=Math.round(M.getRenderWidth()*G),x=Math.round(c/M.getAspectRatio(Z))),P.finalWidth&&P.finalHeight?(v=P.finalHeight,w=P.finalWidth):P.finalWidth&&!P.finalHeight?(w=P.finalWidth,v=Math.round(w/M.getAspectRatio(Z))):P.finalHeight&&!P.finalWidth?(v=P.finalHeight,w=Math.round(v*M.getAspectRatio(Z))):(w=c,v=x)}else isNaN(P)||(x=P,c=P,w=P,v=P);return c&&(c=Math.floor(c)),x&&(x=Math.floor(x)),w&&(w=Math.floor(w)),v&&(v=Math.floor(v)),{height:0|x,width:0|c,finalWidth:0|w,finalHeight:0|v}}const h={CreateScreenshot:N,CreateScreenshotAsync:J,CreateScreenshotWithResizeAsync:t,CreateScreenshotUsingRenderTarget:F,CreateScreenshotUsingRenderTargetAsync:D};B.Tools.CreateScreenshot=N,B.Tools.CreateScreenshotAsync=J,B.Tools.CreateScreenshotUsingRenderTarget=F,B.Tools.CreateScreenshotUsingRenderTargetAsync=D}}]);