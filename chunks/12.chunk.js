"use strict";(self.fwuvyyymhp8=self.fwuvyyymhp8||[]).push([[12,20],{12584:(N,U,V)=>{V.r(U),V.d(U,{Dispose:()=>k,DumpData:()=>p,DumpDataAsync:()=>E,DumpFramebuffer:()=>S,DumpTools:()=>B});var A=V(12491),t=V(12179),n=V(12395),q=V(12223);let i,z=null;async function S(N,U,V,A){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",n=arguments.length>5?arguments[5]:void 0,q=arguments.length>6?arguments[6]:void 0;const i=await V.readPixels(0,0,N,U);p(N,U,new Uint8Array(i.buffer),A,t,n,!0,void 0,q)}async function E(N,U,V){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",t=arguments.length>4?arguments[4]:void 0,n=arguments.length>5&&void 0!==arguments[5]&&arguments[5],q=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7?arguments[7]:void 0;return await new Promise((z=>{p(N,U,V,(N=>z(N)),A,t,n,q,i)}))}function p(N,U,S,E){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",B=arguments.length>5?arguments[5]:void 0,C=arguments.length>6&&void 0!==arguments[6]&&arguments[6],x=arguments.length>7&&void 0!==arguments[7]&&arguments[7],J=arguments.length>8?arguments[8]:void 0;(async function(){return z||(z=new Promise(((N,U)=>{let t,n=null;const z={zi:!0,depth:!1,ti:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(V.bind(V,12514)).then((S=>{let{ThinEngine:E}=S;const p=q.e.Instances.length;try{t=new OffscreenCanvas(100,100),n=new E(t,!1,z)}catch(x){var B;p<q.e.Instances.length&&(null===(B=q.e.Instances.pop())||void 0===B||B.dispose()),t=document.createElement("canvas"),n=new E(t,!1,z)}q.e.Instances.pop(),q.e.OnEnginesDisposedObservable.add((N=>{n&&N!==n&&!n.S&&0===q.e.Instances.length&&k()})),n.getCaps().parallelShaderCompile=void 0;const C=new A.d(n);V.e(52).then(V.bind(V,14841)).then((V=>{let{passPixelShader:q}=V;if(!n)return void U("Engine is not defined");const z=new A.f({BU:n,name:q.name,fragmentShader:q.shader,samplerNames:["textureSampler"]});i={canvas:t,BU:n,renderer:C,wrapper:z},N(i)}))})).catch(U)}))),await z})().then((V=>{if(V.BU.setSize(N,U,!0),S instanceof Float32Array){const N=new Uint8Array(S.length);let U=S.length;for(;U--;){const V=S[U];N[U]=Math.round(255*(0,n.Clamp)(V))}S=N}const A=V.BU.createRawTexture(S,N,U,5,!1,!C,1);V.renderer.setViewport(),V.renderer.applyEffectWrapper(V.wrapper),V.wrapper.effect._bindTexture("textureSampler",A),V.renderer.draw(),x?t.Tools.ToBlob(V.canvas,(N=>{const U=new FileReader;U.onload=N=>{const U=N.target.result;E&&E(U)},U.readAsArrayBuffer(N)}),p,J):t.Tools.EncodeScreenshotCanvasData(V.canvas,E,p,B,J),A.dispose()}))}function k(){var N;i?(i.wrapper.dispose(),i.renderer.dispose(),i.BU.dispose()):null===(N=z)||void 0===N||N.then((N=>{N.wrapper.dispose(),N.renderer.dispose(),N.BU.dispose()}));z=null,i=null}const B={DumpData:p,DumpDataAsync:E,DumpFramebuffer:S,Dispose:k};t.Tools.DumpData=p,t.Tools.DumpDataAsync=E,t.Tools.DumpFramebuffer=S},12361:(N,U,V)=>{V.r(U),V.d(U,{CreateScreenshot:()=>v,CreateScreenshotAsync:()=>h,CreateScreenshotUsingRenderTarget:()=>H,CreateScreenshotUsingRenderTargetAsync:()=>Y,CreateScreenshotWithResizeAsync:()=>c,ScreenshotTools:()=>s});var A=V(12364),t=V(12445),n=V(12485),q=V(12344),i=V(12413),z=V(12491),S=V(12512),E=V(12383);class p extends z.f{static _GetDefines(N){if(!N)return null;return N.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(N,U){N?(this._webGPUReady=!0,U.push(Promise.all([V.e(54).then(V.bind(V,14853)),V.e(55).then(V.bind(V,14862))]))):U.push(Promise.all([V.e(56).then(V.bind(V,14865)),V.e(57).then(V.bind(V,14871))]))}constructor(N){const U={...arguments.length>2?arguments[2]:void 0,name:N,BU:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||S.e.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:p.VertexUrl,fragmentShader:p.FragmentUrl,uniforms:p.Uniforms};super({...U,defines:p._GetDefines(U.BU)}),this.texelSize=new E.Vector2(0,0)}bind(){let N=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(N),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}p.VertexUrl="fxaa",p.FragmentUrl="fxaa",p.Uniforms=["texelSize"];class k extends n.c{getClassName(){return"FxaaPostProcess"}constructor(N,U){let V=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,t=arguments.length>3?arguments[3]:void 0,n=arguments.length>4?arguments[4]:void 0,q=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const z={uniforms:p.Uniforms,size:"number"===typeof U?U:void 0,camera:V,samplingMode:t||A.e.BILINEAR_SAMPLINGMODE,BU:n,reusable:q,textureType:i,...U};super(N,p.FragmentUrl,{effectWrapper:"number"!==typeof U&&U.effectWrapper?void 0:new p(N,n,z),...z}),this.onApplyObservable.add((N=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(N,U,V,A){return i.d.Parse((()=>new k(N.name,N.options,U,N.renderTargetSamplingMode,V.getEngine(),N.reusable)),N,V,A)}}(0,q.e)("BABYLON.FxaaPostProcess",k);var B=V(12193),C=V(12179),x=V(12584),J=V(12593),d=V(12264);let r=null;function v(N,U,V,A){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",n=arguments.length>5&&void 0!==arguments[5]&&arguments[5],q=arguments.length>6?arguments[6]:void 0,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:z,width:S}=W(N,U,V);if(!z||!S)return void B.b.Error("Invalid 'size' parameter !");U.YN().activeCamera===U?N.onEndFrameObservable.addOnce((()=>{r||(r=document.createElement("canvas")),r.width=S,r.height=z;const U=r.getContext("2d"),V=N.getRenderingCanvas();if(!U||!V)return void B.b.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const E=V.width,p=V.height,k=r.width,x=r.height,J=k/E,d=x/p,v=i?Math.max(J,d):Math.min(J,d),h=E*v,c=p*v,H=(k-h)/2,Y=(x-c)/2;U.drawImage(V,0,0,E,p,H,Y,h,c),n?(C.Tools.EncodeScreenshotCanvasData(r,void 0,t,void 0,q),A&&A("")):C.Tools.EncodeScreenshotCanvasData(r,A,t,void 0,q)})):H(N,U,V,(N=>{if(n){const U=new Blob([N]);C.Tools.DownloadBlob(U),A&&A("")}else A&&A(N)}),t,1,N.getCreationOptions().antialias,void 0,void 0,void 0,void 0,q)}async function h(N,U,V){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",t=arguments.length>4?arguments[4]:void 0,n=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((q,i)=>{v(N,U,V,(N=>{"undefined"!==typeof N?q(N):i(new Error("Data is undefined"))}),A,void 0,t,n)}))}async function c(N,U,V,A){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",n=arguments.length>5?arguments[5]:void 0,q=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((i=>{v(N,U,{width:V,height:A},(()=>{i()}),t,!0,n,q)}))}function H(N,U,n,q){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,S=arguments.length>6&&void 0!==arguments[6]&&arguments[6],E=arguments.length>7?arguments[7]:void 0,p=arguments.length>8&&void 0!==arguments[8]&&arguments[8],C=arguments.length>9&&void 0!==arguments[9]&&arguments[9],r=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],v=arguments.length>11?arguments[11]:void 0,h=arguments.length>12?arguments[12]:void 0,c=arguments.length>13?arguments[13]:void 0;const{height:H,width:Y,finalWidth:s,finalHeight:M}=W(N,U,n),a={width:Y,height:H};if(!H||!Y)return void B.b.Error("Invalid 'size' parameter !");N.skipFrameRender=!0;const mN=N.getRenderWidth,w=N.getRenderHeight;N.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&N._currentRenderTarget?N._currentRenderTarget.width:Y},N.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&N._currentRenderTarget?N._currentRenderTarget.height:H},N.onResizeObservable.hasObservers()&&N.onResizeObservable.notifyObservers(N);const X=U.YN(),e=new t.d("screenShot",a,X,!1,!1,0,!1,A.e.BILINEAR_SAMPLINGMODE,void 0,C,void 0,void 0,void 0,z);e.renderList=X.meshes.slice(),e.samples=z,e.renderSprites=p,e.activeCamera=U,e.forceLayerMaskCheck=r,null===h||void 0===h||h(e);const Q=c||x.DumpData,u=()=>{X.incrementRenderId(),X.resetCachedMaterial(),(0,d.f)((()=>e.isReadyForRendering()&&U.isReady(!0)),(()=>{N.onEndFrameObservable.addOnce((()=>{s===Y&&M===H?e.readPixels(void 0,void 0,void 0,!1).then((N=>{Q(Y,H,N,q,i,E,!0,void 0,v),e.dispose()})):(N.isWebGPU?V.e(51).then(V.bind(V,14833)):V.e(52).then(V.bind(V,14841))).then((async()=>await(0,J.b)("pass",e.getInternalTexture(),X,void 0,void 0,void 0,s,M).then((U=>{N._readTexturePixels(U,s,M,-1,0,null,!0,!1,0,0).then((N=>{Q(s,M,N,q,i,E,!0,void 0,v),U.dispose()}))}))))})),X.incrementRenderId(),X.resetCachedMaterial();const A=X.activeCamera,t=X.activeCameras,n=U.outputRenderTarget,z=X.spritesEnabled;X.activeCamera=U,X.activeCameras=null,U.outputRenderTarget=e,X.spritesEnabled=p;const S=X.meshes;X.meshes=e.renderList||X.meshes;try{X.render()}finally{X.activeCamera=A,X.activeCameras=t,U.outputRenderTarget=n,X.spritesEnabled=z,X.meshes=S,N.getRenderWidth=mN,N.getRenderHeight=w,N.onResizeObservable.hasObservers()&&N.onResizeObservable.notifyObservers(N),U.getProjectionMatrix(!0),N.skipFrameRender=!1}}),(()=>{N.skipFrameRender=!1,N.getRenderWidth=mN,N.getRenderHeight=w}))};if(S){const N=new k("antialiasing",1,X.activeCamera);e.addPostProcess(N),N.Si=!0,N.onEffectCreatedObservable.addOnce((N=>{N.isReady()?u():N.onCompiled=()=>{u()}}))}else u()}async function Y(N,U,V){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,n=arguments.length>5&&void 0!==arguments[5]&&arguments[5],q=arguments.length>6?arguments[6]:void 0,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],z=arguments.length>8&&void 0!==arguments[8]&&arguments[8],S=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],E=arguments.length>10?arguments[10]:void 0,p=arguments.length>11?arguments[11]:void 0,k=arguments.length>12?arguments[12]:void 0;return await new Promise(((B,C)=>{H(N,U,V,(N=>{"undefined"!==typeof N?B(N):C(new Error("Data is undefined"))}),A,t,n,q,i,z,S,E,p,k)}))}function W(N,U,V){let A=0,t=0,n=0,q=0;if("object"===typeof V){const i=V.precision?Math.abs(V.precision):1;V.width&&V.height?(A=V.height*i,t=V.width*i):V.width&&!V.height?(t=V.width*i,A=Math.round(t/N.getAspectRatio(U))):V.height&&!V.width?(A=V.height*i,t=Math.round(A*N.getAspectRatio(U))):(t=Math.round(N.getRenderWidth()*i),A=Math.round(t/N.getAspectRatio(U))),V.finalWidth&&V.finalHeight?(q=V.finalHeight,n=V.finalWidth):V.finalWidth&&!V.finalHeight?(n=V.finalWidth,q=Math.round(n/N.getAspectRatio(U))):V.finalHeight&&!V.finalWidth?(q=V.finalHeight,n=Math.round(q*N.getAspectRatio(U))):(n=t,q=A)}else isNaN(V)||(A=V,t=V,n=V,q=V);return t&&(t=Math.floor(t)),A&&(A=Math.floor(A)),n&&(n=Math.floor(n)),q&&(q=Math.floor(q)),{height:0|A,width:0|t,finalWidth:0|n,finalHeight:0|q}}const s={CreateScreenshot:v,CreateScreenshotAsync:h,CreateScreenshotWithResizeAsync:c,CreateScreenshotUsingRenderTarget:H,CreateScreenshotUsingRenderTargetAsync:Y};C.Tools.CreateScreenshot=v,C.Tools.CreateScreenshotAsync=h,C.Tools.CreateScreenshotUsingRenderTarget=H,C.Tools.CreateScreenshotUsingRenderTargetAsync=Y}}]);