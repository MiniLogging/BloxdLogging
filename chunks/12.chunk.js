"use strict";(self.ozi0exxand9=self.ozi0exxand9||[]).push([[12,20],{11621:(f,v,Z)=>{Z.r(v),Z.d(v,{Dispose:()=>W,DumpData:()=>u,DumpDataAsync:()=>O,DumpFramebuffer:()=>H,DumpTools:()=>a});var V=Z(11525),h=Z(11230),J=Z(11440),l=Z(11281);let e,C=null;async function H(f,v,Z,V){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",J=arguments.length>5?arguments[5]:void 0,l=arguments.length>6?arguments[6]:void 0;const e=await Z.readPixels(0,0,f,v);u(f,v,new Uint8Array(e.buffer),V,h,J,!0,void 0,l)}async function O(f,v,Z){let V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",h=arguments.length>4?arguments[4]:void 0,J=arguments.length>5&&void 0!==arguments[5]&&arguments[5],l=arguments.length>6&&void 0!==arguments[6]&&arguments[6],e=arguments.length>7?arguments[7]:void 0;return await new Promise((C=>{u(f,v,Z,(f=>C(f)),V,h,J,l,e)}))}function u(f,v,H,O){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",a=arguments.length>5?arguments[5]:void 0,b=arguments.length>6&&void 0!==arguments[6]&&arguments[6],X=arguments.length>7&&void 0!==arguments[7]&&arguments[7],F=arguments.length>8?arguments[8]:void 0;(async function(){return C||(C=new Promise(((f,v)=>{let h,J=null;const C={o:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(Z.bind(Z,11551)).then((H=>{let{ThinEngine:O}=H;const u=l.c.Instances.length;try{h=new OffscreenCanvas(100,100),J=new O(h,!1,C)}catch(X){var a;u<l.c.Instances.length&&(null===(a=l.c.Instances.pop())||void 0===a||a.dispose()),h=document.createElement("canvas"),J=new O(h,!1,C)}l.c.Instances.pop(),l.c.OnEnginesDisposedObservable.add((f=>{J&&f!==J&&!J.C&&0===l.c.Instances.length&&W()})),J.getCaps().parallelShaderCompile=void 0;const b=new V.e(J);Z.e(52).then(Z.bind(Z,13866)).then((Z=>{let{passPixelShader:l}=Z;if(!J)return void v("Engine is not defined");const C=new V.h({bv:J,name:l.name,fragmentShader:l.shader,samplerNames:["textureSampler"]});e={canvas:h,bv:J,renderer:b,wrapper:C},f(e)}))})).catch(v)}))),await C})().then((Z=>{if(Z.bv.setSize(f,v,!0),H instanceof Float32Array){const f=new Uint8Array(H.length);let v=H.length;for(;v--;){const Z=H[v];f[v]=Math.round(255*(0,J.Clamp)(Z))}H=f}const V=Z.bv.createRawTexture(H,f,v,5,!1,!b,1);Z.renderer.setViewport(),Z.renderer.applyEffectWrapper(Z.wrapper),Z.wrapper.effect._bindTexture("textureSampler",V),Z.renderer.draw(),X?h.Tools.ToBlob(Z.canvas,(f=>{const v=new FileReader;v.onload=f=>{const v=f.target.result;O&&O(v)},v.readAsArrayBuffer(f)}),u,F):h.Tools.EncodeScreenshotCanvasData(Z.canvas,O,u,a,F),V.dispose()}))}function W(){var f;e?(e.wrapper.dispose(),e.renderer.dispose(),e.bv.dispose()):null===(f=C)||void 0===f||f.then((f=>{f.wrapper.dispose(),f.renderer.dispose(),f.bv.dispose()}));C=null,e=null}const a={DumpData:u,DumpDataAsync:O,DumpFramebuffer:H,Dispose:W};h.Tools.DumpData=u,h.Tools.DumpDataAsync=O,h.Tools.DumpFramebuffer=H},11394:(f,v,Z)=>{Z.r(v),Z.d(v,{CreateScreenshot:()=>M,CreateScreenshotAsync:()=>A,CreateScreenshotUsingRenderTarget:()=>z,CreateScreenshotUsingRenderTargetAsync:()=>Y,CreateScreenshotWithResizeAsync:()=>s,ScreenshotTools:()=>N});var V=Z(11401),h=Z(11489),J=Z(11516),l=Z(11372),e=Z(11462),C=Z(11525),H=Z(11543),O=Z(11421);class u extends C.h{static _GetDefines(f){if(!f)return null;return f.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(f,v){f?(this._webGPUReady=!0,v.push(Promise.all([Z.e(54).then(Z.bind(Z,13884)),Z.e(55).then(Z.bind(Z,13889))]))):v.push(Promise.all([Z.e(56).then(Z.bind(Z,13898)),Z.e(57).then(Z.bind(Z,13906))]))}constructor(f){const v={...arguments.length>2?arguments[2]:void 0,name:f,bv:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||H.d.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:u.VertexUrl,fragmentShader:u.FragmentUrl,uniforms:u.Uniforms};super({...v,defines:u._GetDefines(v.bv)}),this.texelSize=new O.Vector2(0,0)}bind(){let f=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(f),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}u.VertexUrl="fxaa",u.FragmentUrl="fxaa",u.Uniforms=["texelSize"];class W extends J.d{getClassName(){return"FxaaPostProcess"}constructor(f,v){let Z=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,h=arguments.length>3?arguments[3]:void 0,J=arguments.length>4?arguments[4]:void 0,l=arguments.length>5?arguments[5]:void 0,e=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const C={uniforms:u.Uniforms,size:"number"===typeof v?v:void 0,camera:Z,samplingMode:h||V.e.BILINEAR_SAMPLINGMODE,bv:J,reusable:l,textureType:e,...v};super(f,u.FragmentUrl,{effectWrapper:"number"!==typeof v&&v.effectWrapper?void 0:new u(f,J,C),...C}),this.onApplyObservable.add((f=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(f,v,Z,V){return e.b.Parse((()=>new W(f.name,f.options,v,f.renderTargetSamplingMode,Z.getEngine(),f.reusable)),f,Z,V)}}(0,l.h)("BABYLON.FxaaPostProcess",W);var a=Z(11247),b=Z(11230),X=Z(11621),F=Z(11628),U=Z(11316);let K=null;function M(f,v,Z,V){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",J=arguments.length>5&&void 0!==arguments[5]&&arguments[5],l=arguments.length>6?arguments[6]:void 0,e=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:C,width:H}=y(f,v,Z);if(!C||!H)return void a.e.Error("Invalid 'size' parameter !");v.Yf().activeCamera===v?f.onEndFrameObservable.addOnce((()=>{K||(K=document.createElement("canvas")),K.width=H,K.height=C;const v=K.getContext("2d"),Z=f.getRenderingCanvas();if(!v||!Z)return void a.e.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const O=Z.width,u=Z.height,W=K.width,X=K.height,F=W/O,U=X/u,M=e?Math.max(F,U):Math.min(F,U),A=O*M,s=u*M,z=(W-A)/2,Y=(X-s)/2;v.drawImage(Z,0,0,O,u,z,Y,A,s),J?(b.Tools.EncodeScreenshotCanvasData(K,void 0,h,void 0,l),V&&V("")):b.Tools.EncodeScreenshotCanvasData(K,V,h,void 0,l)})):z(f,v,Z,(f=>{if(J){const v=new Blob([f]);b.Tools.DownloadBlob(v),V&&V("")}else V&&V(f)}),h,1,f.getCreationOptions().antialias,void 0,void 0,void 0,void 0,l)}async function A(f,v,Z){let V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",h=arguments.length>4?arguments[4]:void 0,J=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((l,e)=>{M(f,v,Z,(f=>{"undefined"!==typeof f?l(f):e(new Error("Data is undefined"))}),V,void 0,h,J)}))}async function s(f,v,Z,V){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",J=arguments.length>5?arguments[5]:void 0,l=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((e=>{M(f,v,{width:Z,height:V},(()=>{e()}),h,!0,J,l)}))}function z(f,v,J,l){let e=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",C=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,H=arguments.length>6&&void 0!==arguments[6]&&arguments[6],O=arguments.length>7?arguments[7]:void 0,u=arguments.length>8&&void 0!==arguments[8]&&arguments[8],b=arguments.length>9&&void 0!==arguments[9]&&arguments[9],K=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],M=arguments.length>11?arguments[11]:void 0,A=arguments.length>12?arguments[12]:void 0,s=arguments.length>13?arguments[13]:void 0;const{height:z,width:Y,finalWidth:N,finalHeight:i}=y(f,v,J),I={width:Y,height:z};if(!z||!Y)return void a.e.Error("Invalid 'size' parameter !");f.skipFrameRender=!0;const T=f.getRenderWidth,B=f.getRenderHeight;f.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&f._currentRenderTarget?f._currentRenderTarget.width:Y},f.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&f._currentRenderTarget?f._currentRenderTarget.height:z},f.onResizeObservable.hasObservers()&&f.onResizeObservable.notifyObservers(f);const P=v.Yf(),g=new h.c("screenShot",I,P,!1,!1,0,!1,V.e.BILINEAR_SAMPLINGMODE,void 0,b,void 0,void 0,void 0,C);g.renderList=P.meshes.slice(),g.samples=C,g.renderSprites=u,g.activeCamera=v,g.forceLayerMaskCheck=K,null===A||void 0===A||A(g);const w=s||X.DumpData,t=()=>{P.incrementRenderId(),P.resetCachedMaterial(),(0,U.f)((()=>g.isReadyForRendering()&&v.isReady(!0)),(()=>{f.onEndFrameObservable.addOnce((()=>{N===Y&&i===z?g.readPixels(void 0,void 0,void 0,!1).then((f=>{w(Y,z,f,l,e,O,!0,void 0,M),g.dispose()})):(f.isWebGPU?Z.e(51).then(Z.bind(Z,13861)):Z.e(52).then(Z.bind(Z,13866))).then((async()=>await(0,F.e)("pass",g.getInternalTexture(),P,void 0,void 0,void 0,N,i).then((v=>{f._readTexturePixels(v,N,i,-1,0,null,!0,!1,0,0).then((f=>{w(N,i,f,l,e,O,!0,void 0,M),v.dispose()}))}))))})),P.incrementRenderId(),P.resetCachedMaterial();const V=P.activeCamera,h=P.activeCameras,J=v.outputRenderTarget,C=P.spritesEnabled;P.activeCamera=v,P.activeCameras=null,v.outputRenderTarget=g,P.spritesEnabled=u;const H=P.meshes;P.meshes=g.renderList||P.meshes;try{P.render()}finally{P.activeCamera=V,P.activeCameras=h,v.outputRenderTarget=J,P.spritesEnabled=C,P.meshes=H,f.getRenderWidth=T,f.getRenderHeight=B,f.onResizeObservable.hasObservers()&&f.onResizeObservable.notifyObservers(f),v.getProjectionMatrix(!0),f.skipFrameRender=!1}}),(()=>{f.skipFrameRender=!1,f.getRenderWidth=T,f.getRenderHeight=B}))};if(H){const f=new W("antialiasing",1,P.activeCamera);g.addPostProcess(f),f.Th=!0,f.onEffectCreatedObservable.addOnce((f=>{f.isReady()?t():f.onCompiled=()=>{t()}}))}else t()}async function Y(f,v,Z){let V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,J=arguments.length>5&&void 0!==arguments[5]&&arguments[5],l=arguments.length>6?arguments[6]:void 0,e=arguments.length>7&&void 0!==arguments[7]&&arguments[7],C=arguments.length>8&&void 0!==arguments[8]&&arguments[8],H=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],O=arguments.length>10?arguments[10]:void 0,u=arguments.length>11?arguments[11]:void 0,W=arguments.length>12?arguments[12]:void 0;return await new Promise(((a,b)=>{z(f,v,Z,(f=>{"undefined"!==typeof f?a(f):b(new Error("Data is undefined"))}),V,h,J,l,e,C,H,O,u,W)}))}function y(f,v,Z){let V=0,h=0,J=0,l=0;if("object"===typeof Z){const e=Z.precision?Math.abs(Z.precision):1;Z.width&&Z.height?(V=Z.height*e,h=Z.width*e):Z.width&&!Z.height?(h=Z.width*e,V=Math.round(h/f.getAspectRatio(v))):Z.height&&!Z.width?(V=Z.height*e,h=Math.round(V*f.getAspectRatio(v))):(h=Math.round(f.getRenderWidth()*e),V=Math.round(h/f.getAspectRatio(v))),Z.finalWidth&&Z.finalHeight?(l=Z.finalHeight,J=Z.finalWidth):Z.finalWidth&&!Z.finalHeight?(J=Z.finalWidth,l=Math.round(J/f.getAspectRatio(v))):Z.finalHeight&&!Z.finalWidth?(l=Z.finalHeight,J=Math.round(l*f.getAspectRatio(v))):(J=h,l=V)}else isNaN(Z)||(V=Z,h=Z,J=Z,l=Z);return h&&(h=Math.floor(h)),V&&(V=Math.floor(V)),J&&(J=Math.floor(J)),l&&(l=Math.floor(l)),{height:0|V,width:0|h,finalWidth:0|J,finalHeight:0|l}}const N={CreateScreenshot:M,CreateScreenshotAsync:A,CreateScreenshotWithResizeAsync:s,CreateScreenshotUsingRenderTarget:z,CreateScreenshotUsingRenderTargetAsync:Y};b.Tools.CreateScreenshot=M,b.Tools.CreateScreenshotAsync=A,b.Tools.CreateScreenshotUsingRenderTarget=z,b.Tools.CreateScreenshotUsingRenderTargetAsync=Y}}]);