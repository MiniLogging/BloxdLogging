"use strict";(self["6xhfpmwgjr5"]=self["6xhfpmwgjr5"]||[]).push([[12,20],{12621:(P,a,R)=>{R.r(a),R.d(a,{Dispose:()=>V,DumpData:()=>l,DumpDataAsync:()=>h,DumpFramebuffer:()=>Q,DumpTools:()=>f});var S=R(12525),A=R(12225),Z=R(12430),p=R(12277);let j,U=null;async function Q(P,a,R,S){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Z=arguments.length>5?arguments[5]:void 0,p=arguments.length>6?arguments[6]:void 0;const j=await R.readPixels(0,0,P,a);l(P,a,new Uint8Array(j.buffer),S,A,Z,!0,void 0,p)}async function h(P,a,R){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",A=arguments.length>4?arguments[4]:void 0,Z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],p=arguments.length>6&&void 0!==arguments[6]&&arguments[6],j=arguments.length>7?arguments[7]:void 0;return await new Promise((U=>{l(P,a,R,(P=>U(P)),S,A,Z,p,j)}))}function l(P,a,Q,h){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",f=arguments.length>5?arguments[5]:void 0,O=arguments.length>6&&void 0!==arguments[6]&&arguments[6],q=arguments.length>7&&void 0!==arguments[7]&&arguments[7],y=arguments.length>8?arguments[8]:void 0;(async function(){return U||(U=new Promise(((P,a)=>{let A,Z=null;const U={Sj:!0,depth:!1,gp:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(R.bind(R,12559)).then((Q=>{let{ThinEngine:h}=Q;const l=p.e.Instances.length;try{A=new OffscreenCanvas(100,100),Z=new h(A,!1,U)}catch(q){var f;l<p.e.Instances.length&&(null===(f=p.e.Instances.pop())||void 0===f||f.dispose()),A=document.createElement("canvas"),Z=new h(A,!1,U)}p.e.Instances.pop(),p.e.OnEnginesDisposedObservable.add((P=>{Z&&P!==Z&&!Z.U&&0===p.e.Instances.length&&V()})),Z.getCaps().parallelShaderCompile=void 0;const O=new S.b(Z);R.e(52).then(R.bind(R,15748)).then((R=>{let{passPixelShader:p}=R;if(!Z)return void a("Engine is not defined");const U=new S.e({fa:Z,name:p.name,fragmentShader:p.shader,samplerNames:["textureSampler"]});j={canvas:A,fa:Z,renderer:O,wrapper:U},P(j)}))})).catch(a)}))),await U})().then((R=>{if(R.fa.setSize(P,a,!0),Q instanceof Float32Array){const P=new Uint8Array(Q.length);let a=Q.length;for(;a--;){const R=Q[a];P[a]=Math.round(255*(0,Z.Clamp)(R))}Q=P}const S=R.fa.createRawTexture(Q,P,a,5,!1,!O,1);R.renderer.setViewport(),R.renderer.applyEffectWrapper(R.wrapper),R.wrapper.effect._bindTexture("textureSampler",S),R.renderer.draw(),q?A.Tools.ToBlob(R.canvas,(P=>{const a=new FileReader;a.onload=P=>{const a=P.target.result;h&&h(a)},a.readAsArrayBuffer(P)}),l,y):A.Tools.EncodeScreenshotCanvasData(R.canvas,h,l,f,y),S.dispose()}))}function V(){var P;j?(j.wrapper.dispose(),j.renderer.dispose(),j.fa.dispose()):null===(P=U)||void 0===P||P.then((P=>{P.wrapper.dispose(),P.renderer.dispose(),P.fa.dispose()}));U=null,j=null}const f={DumpData:l,DumpDataAsync:h,DumpFramebuffer:Q,Dispose:V};A.Tools.DumpData=l,A.Tools.DumpDataAsync=h,A.Tools.DumpFramebuffer=Q},12393:(P,a,R)=>{R.r(a),R.d(a,{CreateScreenshot:()=>k,CreateScreenshotAsync:()=>x,CreateScreenshotUsingRenderTarget:()=>d,CreateScreenshotUsingRenderTargetAsync:()=>G,CreateScreenshotWithResizeAsync:()=>s,ScreenshotTools:()=>mP});var S=R(12399),A=R(12474),Z=R(12519),p=R(12376),j=R(12447),U=R(12525),Q=R(12551),h=R(12415);class l extends U.e{static _GetDefines(P){if(!P)return null;return P.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(P,a){P?(this._webGPUReady=!0,a.push(Promise.all([R.e(54).then(R.bind(R,15752)),R.e(55).then(R.bind(R,15759))]))):a.push(Promise.all([R.e(56).then(R.bind(R,15764)),R.e(57).then(R.bind(R,15766))]))}constructor(P){const a={...arguments.length>2?arguments[2]:void 0,name:P,fa:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||Q.d.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:l.VertexUrl,fragmentShader:l.FragmentUrl,uniforms:l.Uniforms};super({...a,defines:l._GetDefines(a.fa)}),this.texelSize=new h.Vector2(0,0)}bind(){let P=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(P),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}l.VertexUrl="fxaa",l.FragmentUrl="fxaa",l.Uniforms=["texelSize"];class V extends Z.d{getClassName(){return"FxaaPostProcess"}constructor(P,a){let R=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,A=arguments.length>3?arguments[3]:void 0,Z=arguments.length>4?arguments[4]:void 0,p=arguments.length>5?arguments[5]:void 0,j=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const U={uniforms:l.Uniforms,size:"number"===typeof a?a:void 0,camera:R,samplingMode:A||S.e.BILINEAR_SAMPLINGMODE,fa:Z,reusable:p,textureType:j,...a};super(P,l.FragmentUrl,{effectWrapper:"number"!==typeof a&&a.effectWrapper?void 0:new l(P,Z,U),...U}),this.onApplyObservable.add((P=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(P,a,R,S){return j.e.Parse((()=>new V(P.name,P.options,a,P.renderTargetSamplingMode,R.getEngine(),P.reusable)),P,R,S)}}(0,p.d)("BABYLON.FxaaPostProcess",V);var f=R(12248),O=R(12225),q=R(12621),y=R(12626),t=R(12318);let W=null;function k(P,a,R,S){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],p=arguments.length>6?arguments[6]:void 0,j=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:U,width:Q}=H(P,a,R);if(!U||!Q)return void f.c.Error("Invalid 'size' parameter !");a.GP().activeCamera===a?P.onEndFrameObservable.addOnce((()=>{W||(W=document.createElement("canvas")),W.width=Q,W.height=U;const a=W.getContext("2d"),R=P.getRenderingCanvas();if(!a||!R)return void f.c.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const h=R.width,l=R.height,V=W.width,q=W.height,y=V/h,t=q/l,k=j?Math.max(y,t):Math.min(y,t),x=h*k,s=l*k,d=(V-x)/2,G=(q-s)/2;a.drawImage(R,0,0,h,l,d,G,x,s),Z?(O.Tools.EncodeScreenshotCanvasData(W,void 0,A,void 0,p),S&&S("")):O.Tools.EncodeScreenshotCanvasData(W,S,A,void 0,p)})):d(P,a,R,(P=>{if(Z){const a=new Blob([P]);O.Tools.DownloadBlob(a),S&&S("")}else S&&S(P)}),A,1,P.getCreationOptions().antialias,void 0,void 0,void 0,void 0,p)}async function x(P,a,R){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",A=arguments.length>4?arguments[4]:void 0,Z=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((p,j)=>{k(P,a,R,(P=>{"undefined"!==typeof P?p(P):j(new Error("Data is undefined"))}),S,void 0,A,Z)}))}async function s(P,a,R,S){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Z=arguments.length>5?arguments[5]:void 0,p=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((j=>{k(P,a,{width:R,height:S},(()=>{j()}),A,!0,Z,p)}))}function d(P,a,Z,p){let j=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",U=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,Q=arguments.length>6&&void 0!==arguments[6]&&arguments[6],h=arguments.length>7?arguments[7]:void 0,l=arguments.length>8&&void 0!==arguments[8]&&arguments[8],O=arguments.length>9&&void 0!==arguments[9]&&arguments[9],W=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],k=arguments.length>11?arguments[11]:void 0,x=arguments.length>12?arguments[12]:void 0,s=arguments.length>13?arguments[13]:void 0;const{height:d,width:G,finalWidth:mP,finalHeight:N}=H(P,a,Z),D={width:G,height:d};if(!d||!G)return void f.c.Error("Invalid 'size' parameter !");P.skipFrameRender=!0;const L=P.getRenderWidth,c=P.getRenderHeight;P.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&P._currentRenderTarget?P._currentRenderTarget.width:G},P.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&P._currentRenderTarget?P._currentRenderTarget.height:d},P.onResizeObservable.hasObservers()&&P.onResizeObservable.notifyObservers(P);const u=a.GP(),Y=new A.e("screenShot",D,u,!1,!1,0,!1,S.e.BILINEAR_SAMPLINGMODE,void 0,O,void 0,void 0,void 0,U);Y.renderList=u.meshes.slice(),Y.samples=U,Y.renderSprites=l,Y.activeCamera=a,Y.forceLayerMaskCheck=W,null===x||void 0===x||x(Y);const J=s||q.DumpData,n=()=>{u.incrementRenderId(),u.resetCachedMaterial(),(0,t.f)((()=>Y.isReadyForRendering()&&a.isReady(!0)),(()=>{P.onEndFrameObservable.addOnce((()=>{mP===G&&N===d?Y.readPixels(void 0,void 0,void 0,!1).then((P=>{J(G,d,P,p,j,h,!0,void 0,k),Y.dispose()})):(P.isWebGPU?R.e(51).then(R.bind(R,15746)):R.e(52).then(R.bind(R,15748))).then((async()=>await(0,y.c)("pass",Y.getInternalTexture(),u,void 0,void 0,void 0,mP,N).then((a=>{P._readTexturePixels(a,mP,N,-1,0,null,!0,!1,0,0).then((P=>{J(mP,N,P,p,j,h,!0,void 0,k),a.dispose()}))}))))})),u.incrementRenderId(),u.resetCachedMaterial();const S=u.activeCamera,A=u.activeCameras,Z=a.outputRenderTarget,U=u.spritesEnabled;u.activeCamera=a,u.activeCameras=null,a.outputRenderTarget=Y,u.spritesEnabled=l;const Q=u.meshes;u.meshes=Y.renderList||u.meshes;try{u.render()}finally{u.activeCamera=S,u.activeCameras=A,a.outputRenderTarget=Z,u.spritesEnabled=U,u.meshes=Q,P.getRenderWidth=L,P.getRenderHeight=c,P.onResizeObservable.hasObservers()&&P.onResizeObservable.notifyObservers(P),a.getProjectionMatrix(!0),P.skipFrameRender=!1}}),(()=>{P.skipFrameRender=!1,P.getRenderWidth=L,P.getRenderHeight=c}))};if(Q){const P=new V("antialiasing",1,u.activeCamera);Y.addPostProcess(P),P.Aj=!0,P.onEffectCreatedObservable.addOnce((P=>{P.isReady()?n():P.onCompiled=()=>{n()}}))}else n()}async function G(P,a,R){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,Z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],p=arguments.length>6?arguments[6]:void 0,j=arguments.length>7&&void 0!==arguments[7]&&arguments[7],U=arguments.length>8&&void 0!==arguments[8]&&arguments[8],Q=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],h=arguments.length>10?arguments[10]:void 0,l=arguments.length>11?arguments[11]:void 0,V=arguments.length>12?arguments[12]:void 0;return await new Promise(((f,O)=>{d(P,a,R,(P=>{"undefined"!==typeof P?f(P):O(new Error("Data is undefined"))}),S,A,Z,p,j,U,Q,h,l,V)}))}function H(P,a,R){let S=0,A=0,Z=0,p=0;if("object"===typeof R){const j=R.precision?Math.abs(R.precision):1;R.width&&R.height?(S=R.height*j,A=R.width*j):R.width&&!R.height?(A=R.width*j,S=Math.round(A/P.getAspectRatio(a))):R.height&&!R.width?(S=R.height*j,A=Math.round(S*P.getAspectRatio(a))):(A=Math.round(P.getRenderWidth()*j),S=Math.round(A/P.getAspectRatio(a))),R.finalWidth&&R.finalHeight?(p=R.finalHeight,Z=R.finalWidth):R.finalWidth&&!R.finalHeight?(Z=R.finalWidth,p=Math.round(Z/P.getAspectRatio(a))):R.finalHeight&&!R.finalWidth?(p=R.finalHeight,Z=Math.round(p*P.getAspectRatio(a))):(Z=A,p=S)}else isNaN(R)||(S=R,A=R,Z=R,p=R);return A&&(A=Math.floor(A)),S&&(S=Math.floor(S)),Z&&(Z=Math.floor(Z)),p&&(p=Math.floor(p)),{height:0|S,width:0|A,finalWidth:0|Z,finalHeight:0|p}}const mP={CreateScreenshot:k,CreateScreenshotAsync:x,CreateScreenshotWithResizeAsync:s,CreateScreenshotUsingRenderTarget:d,CreateScreenshotUsingRenderTargetAsync:G};O.Tools.CreateScreenshot=k,O.Tools.CreateScreenshotAsync=x,O.Tools.CreateScreenshotUsingRenderTarget=d,O.Tools.CreateScreenshotUsingRenderTargetAsync=G}}]);