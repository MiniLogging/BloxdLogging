"use strict";(self.r00gjvkwa6=self.r00gjvkwa6||[]).push([[12,20],{11532:(H,O,S)=>{S.r(O),S.d(O,{Dispose:()=>a,DumpData:()=>h,DumpDataAsync:()=>o,DumpFramebuffer:()=>w,DumpTools:()=>j});var t=S(11416),q=S(11131),p=S(11317),G=S(11180);let U,V=null;async function w(H,O,S,t){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",p=arguments.length>5?arguments[5]:void 0,G=arguments.length>6?arguments[6]:void 0;const U=await S.readPixels(0,0,H,O);h(H,O,new Uint8Array(U.buffer),t,q,p,!0,void 0,G)}async function o(H,O,S){let t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",q=arguments.length>4?arguments[4]:void 0,p=arguments.length>5&&void 0!==arguments[5]&&arguments[5],G=arguments.length>6&&void 0!==arguments[6]&&arguments[6],U=arguments.length>7?arguments[7]:void 0;return await new Promise((V=>{h(H,O,S,(H=>V(H)),t,q,p,G,U)}))}function h(H,O,w,o){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",j=arguments.length>5?arguments[5]:void 0,e=arguments.length>6&&void 0!==arguments[6]&&arguments[6],X=arguments.length>7&&void 0!==arguments[7]&&arguments[7],E=arguments.length>8?arguments[8]:void 0;(async function(){return V||(V=new Promise(((H,O)=>{let q,p=null;const V={SU:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(S.bind(S,11442)).then((w=>{let{ThinEngine:o}=w;const h=G.c.Instances.length;try{q=new OffscreenCanvas(100,100),p=new o(q,!1,V)}catch(X){var j;h<G.c.Instances.length&&(null===(j=G.c.Instances.pop())||void 0===j||j.dispose()),q=document.createElement("canvas"),p=new o(q,!1,V)}G.c.Instances.pop(),G.c.OnEnginesDisposedObservable.add((H=>{p&&H!==p&&!p.G&&0===G.c.Instances.length&&a()})),p.getCaps().parallelShaderCompile=void 0;const e=new t.e(p);S.e(52).then(S.bind(S,13786)).then((S=>{let{passPixelShader:G}=S;if(!p)return void O("Engine is not defined");const V=new t.h({jO:p,name:G.name,fragmentShader:G.shader,samplerNames:["textureSampler"]});U={canvas:q,jO:p,renderer:e,wrapper:V},H(U)}))})).catch(O)}))),await V})().then((S=>{if(S.jO.setSize(H,O,!0),w instanceof Float32Array){const H=new Uint8Array(w.length);let O=w.length;for(;O--;){const S=w[O];H[O]=Math.round(255*(0,p.Clamp)(S))}w=H}const t=S.jO.createRawTexture(w,H,O,5,!1,!e,1);S.renderer.setViewport(),S.renderer.applyEffectWrapper(S.wrapper),S.wrapper.effect._bindTexture("textureSampler",t),S.renderer.draw(),X?q.Tools.ToBlob(S.canvas,(H=>{const O=new FileReader;O.onload=H=>{const O=H.target.result;o&&o(O)},O.readAsArrayBuffer(H)}),h,E):q.Tools.EncodeScreenshotCanvasData(S.canvas,o,h,j,E),t.dispose()}))}function a(){var H;U?(U.wrapper.dispose(),U.renderer.dispose(),U.jO.dispose()):null===(H=V)||void 0===H||H.then((H=>{H.wrapper.dispose(),H.renderer.dispose(),H.jO.dispose()}));V=null,U=null}const j={DumpData:h,DumpDataAsync:o,DumpFramebuffer:w,Dispose:a};q.Tools.DumpData=h,q.Tools.DumpDataAsync=o,q.Tools.DumpFramebuffer=w},11273:(H,O,S)=>{S.r(O),S.d(O,{CreateScreenshot:()=>K,CreateScreenshotAsync:()=>b,CreateScreenshotUsingRenderTarget:()=>F,CreateScreenshotUsingRenderTargetAsync:()=>Y,CreateScreenshotWithResizeAsync:()=>D,ScreenshotTools:()=>d});var t=S(11279),q=S(11370),p=S(11407),G=S(11262),U=S(11338),V=S(11416),w=S(11436),o=S(11301);class h extends V.h{static _GetDefines(H){if(!H)return null;return H.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(H,O){H?(this._webGPUReady=!0,O.push(Promise.all([S.e(54).then(S.bind(S,13802)),S.e(55).then(S.bind(S,13811))]))):O.push(Promise.all([S.e(56).then(S.bind(S,13817)),S.e(57).then(S.bind(S,13820))]))}constructor(H){const O={...arguments.length>2?arguments[2]:void 0,name:H,jO:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||w.c.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:h.VertexUrl,fragmentShader:h.FragmentUrl,uniforms:h.Uniforms};super({...O,defines:h._GetDefines(O.jO)}),this.texelSize=new o.Vector2(0,0)}bind(){let H=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(H),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}h.VertexUrl="fxaa",h.FragmentUrl="fxaa",h.Uniforms=["texelSize"];class a extends p.e{getClassName(){return"FxaaPostProcess"}constructor(H,O){let S=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,q=arguments.length>3?arguments[3]:void 0,p=arguments.length>4?arguments[4]:void 0,G=arguments.length>5?arguments[5]:void 0,U=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const V={uniforms:h.Uniforms,size:"number"===typeof O?O:void 0,camera:S,samplingMode:q||t.b.BILINEAR_SAMPLINGMODE,jO:p,reusable:G,textureType:U,...O};super(H,h.FragmentUrl,{effectWrapper:"number"!==typeof O&&O.effectWrapper?void 0:new h(H,p,V),...V}),this.onApplyObservable.add((H=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(H,O,S,t){return U.e.Parse((()=>new a(H.name,H.options,O,H.renderTargetSamplingMode,S.getEngine(),H.reusable)),H,S,t)}}(0,G.g)("BABYLON.FxaaPostProcess",a);var j=S(11151),e=S(11131),X=S(11532),E=S(11534),y=S(11205);let T=null;function K(H,O,S,t){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",p=arguments.length>5&&void 0!==arguments[5]&&arguments[5],G=arguments.length>6?arguments[6]:void 0,U=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:V,width:w}=l(H,O,S);if(!V||!w)return void j.b.Error("Invalid 'size' parameter !");O.YH().activeCamera===O?H.onEndFrameObservable.addOnce((()=>{T||(T=document.createElement("canvas")),T.width=w,T.height=V;const O=T.getContext("2d"),S=H.getRenderingCanvas();if(!O||!S)return void j.b.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const o=S.width,h=S.height,a=T.width,X=T.height,E=a/o,y=X/h,K=U?Math.max(E,y):Math.min(E,y),b=o*K,D=h*K,F=(a-b)/2,Y=(X-D)/2;O.drawImage(S,0,0,o,h,F,Y,b,D),p?(e.Tools.EncodeScreenshotCanvasData(T,void 0,q,void 0,G),t&&t("")):e.Tools.EncodeScreenshotCanvasData(T,t,q,void 0,G)})):F(H,O,S,(H=>{if(p){const O=new Blob([H]);e.Tools.DownloadBlob(O),t&&t("")}else t&&t(H)}),q,1,H.getCreationOptions().antialias,void 0,void 0,void 0,void 0,G)}async function b(H,O,S){let t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",q=arguments.length>4?arguments[4]:void 0,p=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((G,U)=>{K(H,O,S,(H=>{"undefined"!==typeof H?G(H):U(new Error("Data is undefined"))}),t,void 0,q,p)}))}async function D(H,O,S,t){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",p=arguments.length>5?arguments[5]:void 0,G=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((U=>{K(H,O,{width:S,height:t},(()=>{U()}),q,!0,p,G)}))}function F(H,O,p,G){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",V=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,w=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7?arguments[7]:void 0,h=arguments.length>8&&void 0!==arguments[8]&&arguments[8],e=arguments.length>9&&void 0!==arguments[9]&&arguments[9],T=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],K=arguments.length>11?arguments[11]:void 0,b=arguments.length>12?arguments[12]:void 0,D=arguments.length>13?arguments[13]:void 0;const{height:F,width:Y,finalWidth:d,finalHeight:v}=l(H,O,p),z={width:Y,height:F};if(!F||!Y)return void j.b.Error("Invalid 'size' parameter !");H.skipFrameRender=!0;const m=H.getRenderWidth,r=H.getRenderHeight;H.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&H._currentRenderTarget?H._currentRenderTarget.width:Y},H.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&H._currentRenderTarget?H._currentRenderTarget.height:F},H.onResizeObservable.hasObservers()&&H.onResizeObservable.notifyObservers(H);const W=O.YH(),g=new q.d("screenShot",z,W,!1,!1,0,!1,t.b.BILINEAR_SAMPLINGMODE,void 0,e,void 0,void 0,void 0,V);g.renderList=W.meshes.slice(),g.samples=V,g.renderSprites=h,g.activeCamera=O,g.forceLayerMaskCheck=T,null===b||void 0===b||b(g);const N=D||X.DumpData,x=()=>{W.incrementRenderId(),W.resetCachedMaterial(),(0,y.f)((()=>g.isReadyForRendering()&&O.isReady(!0)),(()=>{H.onEndFrameObservable.addOnce((()=>{d===Y&&v===F?g.readPixels(void 0,void 0,void 0,!1).then((H=>{N(Y,F,H,G,U,o,!0,void 0,K),g.dispose()})):(H.isWebGPU?S.e(51).then(S.bind(S,13782)):S.e(52).then(S.bind(S,13786))).then((async()=>await(0,E.d)("pass",g.getInternalTexture(),W,void 0,void 0,void 0,d,v).then((O=>{H._readTexturePixels(O,d,v,-1,0,null,!0,!1,0,0).then((H=>{N(d,v,H,G,U,o,!0,void 0,K),O.dispose()}))}))))})),W.incrementRenderId(),W.resetCachedMaterial();const t=W.activeCamera,q=W.activeCameras,p=O.outputRenderTarget,V=W.spritesEnabled;W.activeCamera=O,W.activeCameras=null,O.outputRenderTarget=g,W.spritesEnabled=h;const w=W.meshes;W.meshes=g.renderList||W.meshes;try{W.render()}finally{W.activeCamera=t,W.activeCameras=q,O.outputRenderTarget=p,W.spritesEnabled=V,W.meshes=w,H.getRenderWidth=m,H.getRenderHeight=r,H.onResizeObservable.hasObservers()&&H.onResizeObservable.notifyObservers(H),O.getProjectionMatrix(!0),H.skipFrameRender=!1}}),(()=>{H.skipFrameRender=!1,H.getRenderWidth=m,H.getRenderHeight=r}))};if(w){const H=new a("antialiasing",1,W.activeCamera);g.addPostProcess(H),H.tU=!0,H.onEffectCreatedObservable.addOnce((H=>{H.isReady()?x():H.onCompiled=()=>{x()}}))}else x()}async function Y(H,O,S){let t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,p=arguments.length>5&&void 0!==arguments[5]&&arguments[5],G=arguments.length>6?arguments[6]:void 0,U=arguments.length>7&&void 0!==arguments[7]&&arguments[7],V=arguments.length>8&&void 0!==arguments[8]&&arguments[8],w=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],o=arguments.length>10?arguments[10]:void 0,h=arguments.length>11?arguments[11]:void 0,a=arguments.length>12?arguments[12]:void 0;return await new Promise(((j,e)=>{F(H,O,S,(H=>{"undefined"!==typeof H?j(H):e(new Error("Data is undefined"))}),t,q,p,G,U,V,w,o,h,a)}))}function l(H,O,S){let t=0,q=0,p=0,G=0;if("object"===typeof S){const U=S.precision?Math.abs(S.precision):1;S.width&&S.height?(t=S.height*U,q=S.width*U):S.width&&!S.height?(q=S.width*U,t=Math.round(q/H.getAspectRatio(O))):S.height&&!S.width?(t=S.height*U,q=Math.round(t*H.getAspectRatio(O))):(q=Math.round(H.getRenderWidth()*U),t=Math.round(q/H.getAspectRatio(O))),S.finalWidth&&S.finalHeight?(G=S.finalHeight,p=S.finalWidth):S.finalWidth&&!S.finalHeight?(p=S.finalWidth,G=Math.round(p/H.getAspectRatio(O))):S.finalHeight&&!S.finalWidth?(G=S.finalHeight,p=Math.round(G*H.getAspectRatio(O))):(p=q,G=t)}else isNaN(S)||(t=S,q=S,p=S,G=S);return q&&(q=Math.floor(q)),t&&(t=Math.floor(t)),p&&(p=Math.floor(p)),G&&(G=Math.floor(G)),{height:0|t,width:0|q,finalWidth:0|p,finalHeight:0|G}}const d={CreateScreenshot:K,CreateScreenshotAsync:b,CreateScreenshotWithResizeAsync:D,CreateScreenshotUsingRenderTarget:F,CreateScreenshotUsingRenderTargetAsync:Y};e.Tools.CreateScreenshot=K,e.Tools.CreateScreenshotAsync=b,e.Tools.CreateScreenshotUsingRenderTarget=F,e.Tools.CreateScreenshotUsingRenderTargetAsync=Y}}]);