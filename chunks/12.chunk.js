"use strict";(self["3nlrbof8msu"]=self["3nlrbof8msu"]||[]).push([[12,20],{12955:(t,b,Z)=>{Z.r(b),Z.d(b,{Dispose:()=>r,DumpData:()=>I,DumpDataAsync:()=>g,DumpFramebuffer:()=>Y,DumpTools:()=>M});var J=Z(12838),S=Z(12549),P=Z(12745),v=Z(12585);let h,C=null;async function Y(t,b,Z,J){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",P=arguments.length>5?arguments[5]:void 0,v=arguments.length>6?arguments[6]:void 0;const h=await Z.readPixels(0,0,t,b);I(t,b,new Uint8Array(h.buffer),J,S,P,!0,void 0,v)}async function g(t,b,Z){let J=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",S=arguments.length>4?arguments[4]:void 0,P=arguments.length>5&&void 0!==arguments[5]&&arguments[5],v=arguments.length>6&&void 0!==arguments[6]&&arguments[6],h=arguments.length>7?arguments[7]:void 0;return await new Promise((C=>{I(t,b,Z,(t=>C(t)),J,S,P,v,h)}))}function I(t,b,Y,g){let I=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",M=arguments.length>5?arguments[5]:void 0,T=arguments.length>6&&void 0!==arguments[6]&&arguments[6],a=arguments.length>7&&void 0!==arguments[7]&&arguments[7],k=arguments.length>8?arguments[8]:void 0;(async function(){return C||(C=new Promise(((t,b)=>{let S,P=null;const C={o:!0,depth:!1,Ub:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(Z.bind(Z,12866)).then((Y=>{let{ThinEngine:g}=Y;const I=v.e.Instances.length;try{S=new OffscreenCanvas(100,100),P=new g(S,!1,C)}catch(a){var M;I<v.e.Instances.length&&(null===(M=v.e.Instances.pop())||void 0===M||M.dispose()),S=document.createElement("canvas"),P=new g(S,!1,C)}v.e.Instances.pop(),v.e.OnEnginesDisposedObservable.add((t=>{P&&t!==P&&!P.h&&0===v.e.Instances.length&&r()})),P.getCaps().parallelShaderCompile=void 0;const T=new J.b(P);Z.e(52).then(Z.bind(Z,15205)).then((Z=>{let{passPixelShader:v}=Z;if(!P)return void b("Engine is not defined");const C=new J.d({ZZ:P,name:v.name,fragmentShader:v.shader,samplerNames:["textureSampler"]});h={canvas:S,ZZ:P,renderer:T,wrapper:C},t(h)}))})).catch(b)}))),await C})().then((Z=>{if(Z.ZZ.setSize(t,b,!0),Y instanceof Float32Array){const t=new Uint8Array(Y.length);let b=Y.length;for(;b--;){const Z=Y[b];t[b]=Math.round(255*(0,P.Clamp)(Z))}Y=t}const J=Z.ZZ.createRawTexture(Y,t,b,5,!1,!T,1);Z.renderer.setViewport(),Z.renderer.applyEffectWrapper(Z.wrapper),Z.wrapper.effect._bindTexture("textureSampler",J),Z.renderer.draw(),a?S.Tools.ToBlob(Z.canvas,(t=>{const b=new FileReader;b.onload=t=>{const b=t.target.result;g&&g(b)},b.readAsArrayBuffer(t)}),I,k):S.Tools.EncodeScreenshotCanvasData(Z.canvas,g,I,M,k),J.dispose()}))}function r(){var t;h?(h.wrapper.dispose(),h.renderer.dispose(),h.ZZ.dispose()):null===(t=C)||void 0===t||t.then((t=>{t.wrapper.dispose(),t.renderer.dispose(),t.ZZ.dispose()}));C=null,h=null}const M={DumpData:I,DumpDataAsync:g,DumpFramebuffer:Y,Dispose:r};S.Tools.DumpData=I,S.Tools.DumpDataAsync=g,S.Tools.DumpFramebuffer=Y},12707:(t,b,Z)=>{Z.r(b),Z.d(b,{CreateScreenshot:()=>U,CreateScreenshotAsync:()=>E,CreateScreenshotUsingRenderTarget:()=>H,CreateScreenshotUsingRenderTargetAsync:()=>o,CreateScreenshotWithResizeAsync:()=>c,ScreenshotTools:()=>p});var J=Z(12716),S=Z(12784),P=Z(12829),v=Z(12688),h=Z(12760),C=Z(12838),Y=Z(12860),g=Z(12735);class I extends C.d{static _GetDefines(t){if(!t)return null;return t.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(t,b){t?(this._webGPUReady=!0,b.push(Promise.all([Z.e(54).then(Z.bind(Z,15221)),Z.e(55).then(Z.bind(Z,15228))]))):b.push(Promise.all([Z.e(56).then(Z.bind(Z,15233)),Z.e(57).then(Z.bind(Z,15236))]))}constructor(t){const b={...arguments.length>2?arguments[2]:void 0,name:t,ZZ:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||Y.b.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:I.VertexUrl,fragmentShader:I.FragmentUrl,uniforms:I.Uniforms};super({...b,defines:I._GetDefines(b.ZZ)}),this.texelSize=new g.Vector2(0,0)}bind(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(t),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}I.VertexUrl="fxaa",I.FragmentUrl="fxaa",I.Uniforms=["texelSize"];class r extends P.c{getClassName(){return"FxaaPostProcess"}constructor(t,b){let Z=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,S=arguments.length>3?arguments[3]:void 0,P=arguments.length>4?arguments[4]:void 0,v=arguments.length>5?arguments[5]:void 0,h=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const C={uniforms:I.Uniforms,size:"number"===typeof b?b:void 0,camera:Z,samplingMode:S||J.c.BILINEAR_SAMPLINGMODE,ZZ:P,reusable:v,textureType:h,...b};super(t,I.FragmentUrl,{effectWrapper:"number"!==typeof b&&b.effectWrapper?void 0:new I(t,P,C),...C}),this.onApplyObservable.add((t=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(t,b,Z,J){return h.d.Parse((()=>new r(t.name,t.options,b,t.renderTargetSamplingMode,Z.getEngine(),t.reusable)),t,Z,J)}}(0,v.f)("BABYLON.FxaaPostProcess",r);var M=Z(12557),T=Z(12549),a=Z(12955),k=Z(12964),u=Z(12621);let l=null;function U(t,b,Z,J){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",P=arguments.length>5&&void 0!==arguments[5]&&arguments[5],v=arguments.length>6?arguments[6]:void 0,h=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:C,width:Y}=O(t,b,Z);if(!C||!Y)return void M.c.Error("Invalid 'size' parameter !");b.et().activeCamera===b?t.onEndFrameObservable.addOnce((()=>{l||(l=document.createElement("canvas")),l.width=Y,l.height=C;const b=l.getContext("2d"),Z=t.getRenderingCanvas();if(!b||!Z)return void M.c.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const g=Z.width,I=Z.height,r=l.width,a=l.height,k=r/g,u=a/I,U=h?Math.max(k,u):Math.min(k,u),E=g*U,c=I*U,H=(r-E)/2,o=(a-c)/2;b.drawImage(Z,0,0,g,I,H,o,E,c),P?(T.Tools.EncodeScreenshotCanvasData(l,void 0,S,void 0,v),J&&J("")):T.Tools.EncodeScreenshotCanvasData(l,J,S,void 0,v)})):H(t,b,Z,(t=>{if(P){const b=new Blob([t]);T.Tools.DownloadBlob(b),J&&J("")}else J&&J(t)}),S,1,t.getCreationOptions().antialias,void 0,void 0,void 0,void 0,v)}async function E(t,b,Z){let J=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",S=arguments.length>4?arguments[4]:void 0,P=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((v,h)=>{U(t,b,Z,(t=>{"undefined"!==typeof t?v(t):h(new Error("Data is undefined"))}),J,void 0,S,P)}))}async function c(t,b,Z,J){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",P=arguments.length>5?arguments[5]:void 0,v=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((h=>{U(t,b,{width:Z,height:J},(()=>{h()}),S,!0,P,v)}))}function H(t,b,P,v){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",C=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],g=arguments.length>7?arguments[7]:void 0,I=arguments.length>8&&void 0!==arguments[8]&&arguments[8],T=arguments.length>9&&void 0!==arguments[9]&&arguments[9],l=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],U=arguments.length>11?arguments[11]:void 0,E=arguments.length>12?arguments[12]:void 0,c=arguments.length>13?arguments[13]:void 0;const{height:H,width:o,finalWidth:p,finalHeight:e}=O(t,b,P),W={width:o,height:H};if(!H||!o)return void M.c.Error("Invalid 'size' parameter !");t.skipFrameRender=!0;const j=t.getRenderWidth,V=t.getRenderHeight;t.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&t._currentRenderTarget?t._currentRenderTarget.width:o},t.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&t._currentRenderTarget?t._currentRenderTarget.height:H},t.onResizeObservable.hasObservers()&&t.onResizeObservable.notifyObservers(t);const n=b.et(),y=new S.b("screenShot",W,n,!1,!1,0,!1,J.c.BILINEAR_SAMPLINGMODE,void 0,T,void 0,void 0,void 0,C);y.renderList=n.meshes.slice(),y.samples=C,y.renderSprites=I,y.activeCamera=b,y.forceLayerMaskCheck=l,null===E||void 0===E||E(y);const d=c||a.DumpData,s=()=>{n.incrementRenderId(),n.resetCachedMaterial(),(0,u.f)((()=>y.isReadyForRendering()&&b.isReady(!0)),(()=>{t.onEndFrameObservable.addOnce((()=>{p===o&&e===H?y.readPixels(void 0,void 0,void 0,!1).then((t=>{d(o,H,t,v,h,g,!0,void 0,U),y.dispose()})):(t.isWebGPU?Z.e(51).then(Z.bind(Z,15203)):Z.e(52).then(Z.bind(Z,15205))).then((async()=>await(0,k.c)("pass",y.getInternalTexture(),n,void 0,void 0,void 0,p,e).then((b=>{t._readTexturePixels(b,p,e,-1,0,null,!0,!1,0,0).then((t=>{d(p,e,t,v,h,g,!0,void 0,U),b.dispose()}))}))))})),n.incrementRenderId(),n.resetCachedMaterial();const J=n.activeCamera,S=n.activeCameras,P=b.outputRenderTarget,C=n.spritesEnabled;n.activeCamera=b,n.activeCameras=null,b.outputRenderTarget=y,n.spritesEnabled=I;const Y=n.meshes;n.meshes=y.renderList||n.meshes;try{n.render()}finally{n.activeCamera=J,n.activeCameras=S,b.outputRenderTarget=P,n.spritesEnabled=C,n.meshes=Y,t.getRenderWidth=j,t.getRenderHeight=V,t.onResizeObservable.hasObservers()&&t.onResizeObservable.notifyObservers(t),b.getProjectionMatrix(!0),t.skipFrameRender=!1}}),(()=>{t.skipFrameRender=!1,t.getRenderWidth=j,t.getRenderHeight=V}))};if(Y){const t=new r("antialiasing",1,n.activeCamera);y.addPostProcess(t),t.eb=!0,t.onEffectCreatedObservable.addOnce((t=>{t.isReady()?s():t.onCompiled=()=>{s()}}))}else s()}async function o(t,b,Z){let J=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,P=arguments.length>5&&void 0!==arguments[5]&&arguments[5],v=arguments.length>6?arguments[6]:void 0,h=arguments.length>7&&void 0!==arguments[7]&&arguments[7],C=arguments.length>8&&void 0!==arguments[8]&&arguments[8],Y=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],g=arguments.length>10?arguments[10]:void 0,I=arguments.length>11?arguments[11]:void 0,r=arguments.length>12?arguments[12]:void 0;return await new Promise(((M,T)=>{H(t,b,Z,(t=>{"undefined"!==typeof t?M(t):T(new Error("Data is undefined"))}),J,S,P,v,h,C,Y,g,I,r)}))}function O(t,b,Z){let J=0,S=0,P=0,v=0;if("object"===typeof Z){const h=Z.precision?Math.abs(Z.precision):1;Z.width&&Z.height?(J=Z.height*h,S=Z.width*h):Z.width&&!Z.height?(S=Z.width*h,J=Math.round(S/t.getAspectRatio(b))):Z.height&&!Z.width?(J=Z.height*h,S=Math.round(J*t.getAspectRatio(b))):(S=Math.round(t.getRenderWidth()*h),J=Math.round(S/t.getAspectRatio(b))),Z.finalWidth&&Z.finalHeight?(v=Z.finalHeight,P=Z.finalWidth):Z.finalWidth&&!Z.finalHeight?(P=Z.finalWidth,v=Math.round(P/t.getAspectRatio(b))):Z.finalHeight&&!Z.finalWidth?(v=Z.finalHeight,P=Math.round(v*t.getAspectRatio(b))):(P=S,v=J)}else isNaN(Z)||(J=Z,S=Z,P=Z,v=Z);return S&&(S=Math.floor(S)),J&&(J=Math.floor(J)),P&&(P=Math.floor(P)),v&&(v=Math.floor(v)),{height:0|J,width:0|S,finalWidth:0|P,finalHeight:0|v}}const p={CreateScreenshot:U,CreateScreenshotAsync:E,CreateScreenshotWithResizeAsync:c,CreateScreenshotUsingRenderTarget:H,CreateScreenshotUsingRenderTargetAsync:o};T.Tools.CreateScreenshot=U,T.Tools.CreateScreenshotAsync=E,T.Tools.CreateScreenshotUsingRenderTarget=H,T.Tools.CreateScreenshotUsingRenderTargetAsync=o}}]);