"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[12],{2231:(c,b,A)=>{A.r(b),A.d(b,{Dispose:()=>R,DumpData:()=>X,DumpDataAsync:()=>J,DumpFramebuffer:()=>C,DumpTools:()=>N});var o=A(2096),t=A(525),n=A(702),h=A(550);let s,L=null;async function C(c,b,A,o){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",n=arguments.length>5?arguments[5]:void 0,h=arguments.length>6?arguments[6]:void 0;const s=await A.readPixels(0,0,c,b);X(c,b,new Uint8Array(s.buffer),o,t,n,!0,void 0,h)}async function J(c,b,A){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",t=arguments.length>4?arguments[4]:void 0,n=arguments.length>5&&void 0!==arguments[5]&&arguments[5],h=arguments.length>6&&void 0!==arguments[6]&&arguments[6],s=arguments.length>7?arguments[7]:void 0;return await new Promise((L=>{X(c,b,A,(c=>L(c)),o,t,n,h,s)}))}function X(c,b,C,J){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",N=arguments.length>5?arguments[5]:void 0,k=arguments.length>6&&void 0!==arguments[6]&&arguments[6],E=arguments.length>7&&void 0!==arguments[7]&&arguments[7],V=arguments.length>8?arguments[8]:void 0;(async function(){return L||(L=new Promise(((c,b)=>{let t,n=null;const L={Pk:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(A.bind(A,2110)).then((C=>{let{ThinEngine:J}=C;const X=h.c.Instances.length;try{t=new OffscreenCanvas(100,100),n=new J(t,!1,L)}catch(E){var N;X<h.c.Instances.length&&(null===(N=h.c.Instances.pop())||void 0===N||N.dispose()),t=document.createElement("canvas"),n=new J(t,!1,L)}h.c.Instances.pop(),h.c.OnEnginesDisposedObservable.add((c=>{n&&c!==n&&!n.u&&0===h.c.Instances.length&&R()})),n.getCaps().parallelShaderCompile=void 0;const k=new o.b(n);A.e(46).then(A.bind(A,13326)).then((A=>{let{passPixelShader:h}=A;if(!n)return void b("Engine is not defined");const L=new o.c({Rj:n,name:h.name,fragmentShader:h.shader,samplerNames:["textureSampler"]});s={canvas:t,Rj:n,renderer:k,wrapper:L},c(s)}))})).catch(b)}))),await L})().then((A=>{if(A.Rj.setSize(c,b,!0),C instanceof Float32Array){const c=new Uint8Array(C.length);let b=C.length;for(;b--;){const A=C[b];c[b]=Math.round(255*(0,n.Clamp)(A))}C=c}const o=A.Rj.createRawTexture(C,c,b,5,!1,!k,1);A.renderer.setViewport(),A.renderer.applyEffectWrapper(A.wrapper),A.wrapper.effect._bindTexture("textureSampler",o),A.renderer.draw(),E?t.d.ToBlob(A.canvas,(c=>{const b=new FileReader;b.onload=c=>{const b=c.target.result;J&&J(b)},b.readAsArrayBuffer(c)}),X,V):t.d.EncodeScreenshotCanvasData(A.canvas,J,X,N,V),o.dispose()}))}function R(){var c;s?(s.wrapper.dispose(),s.renderer.dispose(),s.Rj.dispose()):null===(c=L)||void 0===c||c.then((c=>{c.wrapper.dispose(),c.renderer.dispose(),c.Rj.dispose()}));L=null,s=null}const N={DumpData:X,DumpDataAsync:J,DumpFramebuffer:C,Dispose:R};t.d.DumpData=X,t.d.DumpDataAsync=J,t.d.DumpFramebuffer=C}}]);