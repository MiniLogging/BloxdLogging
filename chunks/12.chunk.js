"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[12],{2466:(Z,U,n)=>{n.r(U),n.d(U,{Dispose:()=>y,DumpData:()=>F,DumpDataAsync:()=>d,DumpFramebuffer:()=>R,DumpTools:()=>S});var i=n(2334),B=n(498),l=n(718),H=n(547);let V,G=null;async function R(Z,U,n,i){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",l=arguments.length>5?arguments[5]:void 0,H=arguments.length>6?arguments[6]:void 0;const V=await n.readPixels(0,0,Z,U);F(Z,U,new Uint8Array(V.buffer),i,B,l,!0,void 0,H)}async function d(Z,U,n){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",B=arguments.length>4?arguments[4]:void 0,l=arguments.length>5&&void 0!==arguments[5]&&arguments[5],H=arguments.length>6&&void 0!==arguments[6]&&arguments[6],V=arguments.length>7?arguments[7]:void 0;return await new Promise((G=>{F(Z,U,n,(Z=>G(Z)),i,B,l,H,V)}))}function F(Z,U,R,d){let F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",S=arguments.length>5?arguments[5]:void 0,q=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7],s=arguments.length>8?arguments[8]:void 0;(async function(){return G||(G=new Promise(((Z,U)=>{let B,l=null;const G={Fg:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(n.bind(n,2346)).then((R=>{let{ThinEngine:d}=R;const F=H.b.Instances.length;try{B=new OffscreenCanvas(100,100),l=new d(B,!1,G)}catch(c){var S;F<H.b.Instances.length&&(null===(S=H.b.Instances.pop())||void 0===S||S.dispose()),B=document.createElement("canvas"),l=new d(B,!1,G)}H.b.Instances.pop(),H.b.OnEnginesDisposedObservable.add((Z=>{l&&Z!==l&&!l.u&&0===H.b.Instances.length&&y()})),l.getCaps().parallelShaderCompile=void 0;const q=new i.c(l);n.e(46).then(n.bind(n,13377)).then((n=>{let{passPixelShader:H}=n;if(!l)return void U("Engine is not defined");const G=new i.e({Pi:l,name:H.name,fragmentShader:H.shader,samplerNames:["textureSampler"]});V={canvas:B,Pi:l,renderer:q,wrapper:G},Z(V)}))})).catch(U)}))),await G})().then((n=>{if(n.Pi.setSize(Z,U,!0),R instanceof Float32Array){const Z=new Uint8Array(R.length);let U=R.length;for(;U--;){const n=R[U];Z[U]=Math.round(255*(0,l.Clamp)(n))}R=Z}const i=n.Pi.createRawTexture(R,Z,U,5,!1,!q,1);n.renderer.setViewport(),n.renderer.applyEffectWrapper(n.wrapper),n.wrapper.effect._bindTexture("textureSampler",i),n.renderer.draw(),c?B.e.ToBlob(n.canvas,(Z=>{const U=new FileReader;U.onload=Z=>{const U=Z.target.result;d&&d(U)},U.readAsArrayBuffer(Z)}),F,s):B.e.EncodeScreenshotCanvasData(n.canvas,d,F,S,s),i.dispose()}))}function y(){var Z;V?(V.wrapper.dispose(),V.renderer.dispose(),V.Pi.dispose()):null===(Z=G)||void 0===Z||Z.then((Z=>{Z.wrapper.dispose(),Z.renderer.dispose(),Z.Pi.dispose()}));G=null,V=null}const S={DumpData:F,DumpDataAsync:d,DumpFramebuffer:R,Dispose:y};B.e.DumpData=F,B.e.DumpDataAsync=d,B.e.DumpFramebuffer=R}}]);