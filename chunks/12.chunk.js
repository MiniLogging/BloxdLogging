"use strict";(self.h66iwo8dvgq=self.h66iwo8dvgq||[]).push([[12,20],{12072:(b,X,P)=>{P.r(X),P.d(X,{Dispose:()=>e,DumpData:()=>O,DumpDataAsync:()=>f,DumpFramebuffer:()=>w,DumpTools:()=>Y});var Q=P(11944),S=P(11689),d=P(11844),N=P(11732);let a,u=null;async function w(b,X,P,Q){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",d=arguments.length>5?arguments[5]:void 0,N=arguments.length>6?arguments[6]:void 0;const a=await P.readPixels(0,0,b,X);O(b,X,new Uint8Array(a.buffer),Q,S,d,!0,void 0,N)}async function f(b,X,P){let Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",S=arguments.length>4?arguments[4]:void 0,d=arguments.length>5&&void 0!==arguments[5]&&arguments[5],N=arguments.length>6&&void 0!==arguments[6]&&arguments[6],a=arguments.length>7?arguments[7]:void 0;return await new Promise((u=>{O(b,X,P,(b=>u(b)),Q,S,d,N,a)}))}function O(b,X,w,f){let O=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Y=arguments.length>5?arguments[5]:void 0,D=arguments.length>6&&void 0!==arguments[6]&&arguments[6],E=arguments.length>7&&void 0!==arguments[7]&&arguments[7],t=arguments.length>8?arguments[8]:void 0;(async function(){return u||(u=new Promise(((b,X)=>{let S,d=null;const u={Dd:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(P.bind(P,11976)).then((w=>{let{ThinEngine:f}=w;const O=N.e.Instances.length;try{S=new OffscreenCanvas(100,100),d=new f(S,!1,u)}catch(E){var Y;O<N.e.Instances.length&&(null===(Y=N.e.Instances.pop())||void 0===Y||Y.dispose()),S=document.createElement("canvas"),d=new f(S,!1,u)}N.e.Instances.pop(),N.e.OnEnginesDisposedObservable.add((b=>{d&&b!==d&&!d.Y&&0===N.e.Instances.length&&e()})),d.getCaps().parallelShaderCompile=void 0;const D=new Q.d(d);P.e(52).then(P.bind(P,14404)).then((P=>{let{passPixelShader:N}=P;if(!d)return void X("Engine is not defined");const u=new Q.h({EX:d,name:N.name,fragmentShader:N.shader,samplerNames:["textureSampler"]});a={canvas:S,EX:d,renderer:D,wrapper:u},b(a)}))})).catch(X)}))),await u})().then((P=>{if(P.EX.setSize(b,X,!0),w instanceof Float32Array){const b=new Uint8Array(w.length);let X=w.length;for(;X--;){const P=w[X];b[X]=Math.round(255*(0,d.Clamp)(P))}w=b}const Q=P.EX.createRawTexture(w,b,X,5,!1,!D,1);P.renderer.setViewport(),P.renderer.applyEffectWrapper(P.wrapper),P.wrapper.effect._bindTexture("textureSampler",Q),P.renderer.draw(),E?S.Tools.ToBlob(P.canvas,(b=>{const X=new FileReader;X.onload=b=>{const X=b.target.result;f&&f(X)},X.readAsArrayBuffer(b)}),O,t):S.Tools.EncodeScreenshotCanvasData(P.canvas,f,O,Y,t),Q.dispose()}))}function e(){var b;a?(a.wrapper.dispose(),a.renderer.dispose(),a.EX.dispose()):null===(b=u)||void 0===b||b.then((b=>{b.wrapper.dispose(),b.renderer.dispose(),b.EX.dispose()}));u=null,a=null}const Y={DumpData:O,DumpDataAsync:f,DumpFramebuffer:w,Dispose:e};S.Tools.DumpData=O,S.Tools.DumpDataAsync=f,S.Tools.DumpFramebuffer=w},11812:(b,X,P)=>{P.r(X),P.d(X,{CreateScreenshot:()=>n,CreateScreenshotAsync:()=>y,CreateScreenshotUsingRenderTarget:()=>L,CreateScreenshotUsingRenderTargetAsync:()=>Z,CreateScreenshotWithResizeAsync:()=>h,ScreenshotTools:()=>A});var Q=P(11814),S=P(11902),d=P(11936),N=P(11802),a=P(11862),u=P(11944),w=P(11973),f=P(11834);class O extends u.h{static _GetDefines(b){if(!b)return null;return b.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(b,X){b?(this._webGPUReady=!0,X.push(Promise.all([P.e(54).then(P.bind(P,14421)),P.e(55).then(P.bind(P,14430))]))):X.push(Promise.all([P.e(56).then(P.bind(P,14435)),P.e(57).then(P.bind(P,14437))]))}constructor(b){const X={...arguments.length>2?arguments[2]:void 0,name:b,EX:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||w.b.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:O.VertexUrl,fragmentShader:O.FragmentUrl,uniforms:O.Uniforms};super({...X,defines:O._GetDefines(X.EX)}),this.texelSize=new f.Vector2(0,0)}bind(){let b=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(b),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}O.VertexUrl="fxaa",O.FragmentUrl="fxaa",O.Uniforms=["texelSize"];class e extends d.b{getClassName(){return"FxaaPostProcess"}constructor(b,X){let P=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,S=arguments.length>3?arguments[3]:void 0,d=arguments.length>4?arguments[4]:void 0,N=arguments.length>5?arguments[5]:void 0,a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const u={uniforms:O.Uniforms,size:"number"===typeof X?X:void 0,camera:P,samplingMode:S||Q.d.BILINEAR_SAMPLINGMODE,EX:d,reusable:N,textureType:a,...X};super(b,O.FragmentUrl,{effectWrapper:"number"!==typeof X&&X.effectWrapper?void 0:new O(b,d,u),...u}),this.onApplyObservable.add((b=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(b,X,P,Q){return a.b.Parse((()=>new e(b.name,b.options,X,b.renderTargetSamplingMode,P.getEngine(),b.reusable)),b,P,Q)}}(0,N.h)("BABYLON.FxaaPostProcess",e);var Y=P(11700),D=P(11689),E=P(12072),t=P(12081),B=P(11755);let W=null;function n(b,X,P,Q){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",d=arguments.length>5&&void 0!==arguments[5]&&arguments[5],N=arguments.length>6?arguments[6]:void 0,a=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:u,width:w}=v(b,X,P);if(!u||!w)return void Y.b.Error("Invalid 'size' parameter !");X.Ab().activeCamera===X?b.onEndFrameObservable.addOnce((()=>{W||(W=document.createElement("canvas")),W.width=w,W.height=u;const X=W.getContext("2d"),P=b.getRenderingCanvas();if(!X||!P)return void Y.b.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const f=P.width,O=P.height,e=W.width,E=W.height,t=e/f,B=E/O,n=a?Math.max(t,B):Math.min(t,B),y=f*n,h=O*n,L=(e-y)/2,Z=(E-h)/2;X.drawImage(P,0,0,f,O,L,Z,y,h),d?(D.Tools.EncodeScreenshotCanvasData(W,void 0,S,void 0,N),Q&&Q("")):D.Tools.EncodeScreenshotCanvasData(W,Q,S,void 0,N)})):L(b,X,P,(b=>{if(d){const X=new Blob([b]);D.Tools.DownloadBlob(X),Q&&Q("")}else Q&&Q(b)}),S,1,b.getCreationOptions().antialias,void 0,void 0,void 0,void 0,N)}async function y(b,X,P){let Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",S=arguments.length>4?arguments[4]:void 0,d=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((N,a)=>{n(b,X,P,(b=>{"undefined"!==typeof b?N(b):a(new Error("Data is undefined"))}),Q,void 0,S,d)}))}async function h(b,X,P,Q){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",d=arguments.length>5?arguments[5]:void 0,N=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((a=>{n(b,X,{width:P,height:Q},(()=>{a()}),S,!0,d,N)}))}function L(b,X,d,N){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,w=arguments.length>6&&void 0!==arguments[6]&&arguments[6],f=arguments.length>7?arguments[7]:void 0,O=arguments.length>8&&void 0!==arguments[8]&&arguments[8],D=arguments.length>9&&void 0!==arguments[9]&&arguments[9],W=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],n=arguments.length>11?arguments[11]:void 0,y=arguments.length>12?arguments[12]:void 0,h=arguments.length>13?arguments[13]:void 0;const{height:L,width:Z,finalWidth:A,finalHeight:o}=v(b,X,d),K={width:Z,height:L};if(!L||!Z)return void Y.b.Error("Invalid 'size' parameter !");b.skipFrameRender=!0;const T=b.getRenderWidth,q=b.getRenderHeight;b.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&b._currentRenderTarget?b._currentRenderTarget.width:Z},b.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&b._currentRenderTarget?b._currentRenderTarget.height:L},b.onResizeObservable.hasObservers()&&b.onResizeObservable.notifyObservers(b);const V=X.Ab(),i=new S.d("screenShot",K,V,!1,!1,0,!1,Q.d.BILINEAR_SAMPLINGMODE,void 0,D,void 0,void 0,void 0,u);i.renderList=V.meshes.slice(),i.samples=u,i.renderSprites=O,i.activeCamera=X,i.forceLayerMaskCheck=W,null===y||void 0===y||y(i);const x=h||E.DumpData,H=()=>{V.incrementRenderId(),V.resetCachedMaterial(),(0,B.c)((()=>i.isReadyForRendering()&&X.isReady(!0)),(()=>{b.onEndFrameObservable.addOnce((()=>{A===Z&&o===L?i.readPixels(void 0,void 0,void 0,!1).then((b=>{x(Z,L,b,N,a,f,!0,void 0,n),i.dispose()})):(b.isWebGPU?P.e(51).then(P.bind(P,14400)):P.e(52).then(P.bind(P,14404))).then((async()=>await(0,t.e)("pass",i.getInternalTexture(),V,void 0,void 0,void 0,A,o).then((X=>{b._readTexturePixels(X,A,o,-1,0,null,!0,!1,0,0).then((b=>{x(A,o,b,N,a,f,!0,void 0,n),X.dispose()}))}))))})),V.incrementRenderId(),V.resetCachedMaterial();const Q=V.activeCamera,S=V.activeCameras,d=X.outputRenderTarget,u=V.spritesEnabled;V.activeCamera=X,V.activeCameras=null,X.outputRenderTarget=i,V.spritesEnabled=O;const w=V.meshes;V.meshes=i.renderList||V.meshes;try{V.render()}finally{V.activeCamera=Q,V.activeCameras=S,X.outputRenderTarget=d,V.spritesEnabled=u,V.meshes=w,b.getRenderWidth=T,b.getRenderHeight=q,b.onResizeObservable.hasObservers()&&b.onResizeObservable.notifyObservers(b),X.getProjectionMatrix(!0),b.skipFrameRender=!1}}),(()=>{b.skipFrameRender=!1,b.getRenderWidth=T,b.getRenderHeight=q}))};if(w){const b=new e("antialiasing",1,V.activeCamera);i.addPostProcess(b),b.nd=!0,b.onEffectCreatedObservable.addOnce((b=>{b.isReady()?H():b.onCompiled=()=>{H()}}))}else H()}async function Z(b,X,P){let Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,d=arguments.length>5&&void 0!==arguments[5]&&arguments[5],N=arguments.length>6?arguments[6]:void 0,a=arguments.length>7&&void 0!==arguments[7]&&arguments[7],u=arguments.length>8&&void 0!==arguments[8]&&arguments[8],w=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],f=arguments.length>10?arguments[10]:void 0,O=arguments.length>11?arguments[11]:void 0,e=arguments.length>12?arguments[12]:void 0;return await new Promise(((Y,D)=>{L(b,X,P,(b=>{"undefined"!==typeof b?Y(b):D(new Error("Data is undefined"))}),Q,S,d,N,a,u,w,f,O,e)}))}function v(b,X,P){let Q=0,S=0,d=0,N=0;if("object"===typeof P){const a=P.precision?Math.abs(P.precision):1;P.width&&P.height?(Q=P.height*a,S=P.width*a):P.width&&!P.height?(S=P.width*a,Q=Math.round(S/b.getAspectRatio(X))):P.height&&!P.width?(Q=P.height*a,S=Math.round(Q*b.getAspectRatio(X))):(S=Math.round(b.getRenderWidth()*a),Q=Math.round(S/b.getAspectRatio(X))),P.finalWidth&&P.finalHeight?(N=P.finalHeight,d=P.finalWidth):P.finalWidth&&!P.finalHeight?(d=P.finalWidth,N=Math.round(d/b.getAspectRatio(X))):P.finalHeight&&!P.finalWidth?(N=P.finalHeight,d=Math.round(N*b.getAspectRatio(X))):(d=S,N=Q)}else isNaN(P)||(Q=P,S=P,d=P,N=P);return S&&(S=Math.floor(S)),Q&&(Q=Math.floor(Q)),d&&(d=Math.floor(d)),N&&(N=Math.floor(N)),{height:0|Q,width:0|S,finalWidth:0|d,finalHeight:0|N}}const A={CreateScreenshot:n,CreateScreenshotAsync:y,CreateScreenshotWithResizeAsync:h,CreateScreenshotUsingRenderTarget:L,CreateScreenshotUsingRenderTargetAsync:Z};D.Tools.CreateScreenshot=n,D.Tools.CreateScreenshotAsync=y,D.Tools.CreateScreenshotUsingRenderTarget=L,D.Tools.CreateScreenshotUsingRenderTargetAsync=Z}}]);