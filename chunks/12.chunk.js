"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[12,20],{11420:(o,H,n)=>{n.r(H),n.d(H,{Dispose:()=>A,DumpData:()=>c,DumpDataAsync:()=>G,DumpFramebuffer:()=>S,DumpTools:()=>l});var E=n(11297),k=n(11024),g=n(11205),O=n(11060);let Y,y=null;async function S(o,H,n,E){let k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",g=arguments.length>5?arguments[5]:void 0,O=arguments.length>6?arguments[6]:void 0;const Y=await n.readPixels(0,0,o,H);c(o,H,new Uint8Array(Y.buffer),E,k,g,!0,void 0,O)}async function G(o,H,n){let E=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",k=arguments.length>4?arguments[4]:void 0,g=arguments.length>5&&void 0!==arguments[5]&&arguments[5],O=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Y=arguments.length>7?arguments[7]:void 0;return await new Promise((y=>{c(o,H,n,(o=>y(o)),E,k,g,O,Y)}))}function c(o,H,S,G){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",l=arguments.length>5?arguments[5]:void 0,x=arguments.length>6&&void 0!==arguments[6]&&arguments[6],z=arguments.length>7&&void 0!==arguments[7]&&arguments[7],V=arguments.length>8?arguments[8]:void 0;(async function(){return y||(y=new Promise(((o,H)=>{let k,g=null;const y={Ng:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(n.bind(n,11330)).then((S=>{let{ThinEngine:G}=S;const c=O.e.Instances.length;try{k=new OffscreenCanvas(100,100),g=new G(k,!1,y)}catch(z){var l;c<O.e.Instances.length&&(null===(l=O.e.Instances.pop())||void 0===l||l.dispose()),k=document.createElement("canvas"),g=new G(k,!1,y)}O.e.Instances.pop(),O.e.OnEnginesDisposedObservable.add((o=>{g&&o!==g&&!g.l&&0===O.e.Instances.length&&A()})),g.getCaps().parallelShaderCompile=void 0;const x=new E.d(g);n.e(52).then(n.bind(n,13724)).then((n=>{let{passPixelShader:O}=n;if(!g)return void H("Engine is not defined");const y=new E.f({lH:g,name:O.name,fragmentShader:O.shader,samplerNames:["textureSampler"]});Y={canvas:k,lH:g,renderer:x,wrapper:y},o(Y)}))})).catch(H)}))),await y})().then((n=>{if(n.lH.setSize(o,H,!0),S instanceof Float32Array){const o=new Uint8Array(S.length);let H=S.length;for(;H--;){const n=S[H];o[H]=Math.round(255*(0,g.Clamp)(n))}S=o}const E=n.lH.createRawTexture(S,o,H,5,!1,!x,1);n.renderer.setViewport(),n.renderer.applyEffectWrapper(n.wrapper),n.wrapper.effect._bindTexture("textureSampler",E),n.renderer.draw(),z?k.Tools.ToBlob(n.canvas,(o=>{const H=new FileReader;H.onload=o=>{const H=o.target.result;G&&G(H)},H.readAsArrayBuffer(o)}),c,V):k.Tools.EncodeScreenshotCanvasData(n.canvas,G,c,l,V),E.dispose()}))}function A(){var o;Y?(Y.wrapper.dispose(),Y.renderer.dispose(),Y.lH.dispose()):null===(o=y)||void 0===o||o.then((o=>{o.wrapper.dispose(),o.renderer.dispose(),o.lH.dispose()}));y=null,Y=null}const l={DumpData:c,DumpDataAsync:G,DumpFramebuffer:S,Dispose:A};k.Tools.DumpData=c,k.Tools.DumpDataAsync=G,k.Tools.DumpFramebuffer=S},11165:(o,H,n)=>{n.r(H),n.d(H,{CreateScreenshot:()=>h,CreateScreenshotAsync:()=>Q,CreateScreenshotUsingRenderTarget:()=>j,CreateScreenshotUsingRenderTargetAsync:()=>m,CreateScreenshotWithResizeAsync:()=>p,ScreenshotTools:()=>b});var E=n(11168),k=n(11252),g=n(11292),O=n(11140),Y=n(11224),y=n(11297),S=n(11321),G=n(11189);class c extends y.f{static _GetDefines(o){if(!o)return null;return o.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(o,H){o?(this._webGPUReady=!0,H.push(Promise.all([n.e(54).then(n.bind(n,13739)),n.e(55).then(n.bind(n,13743))]))):H.push(Promise.all([n.e(56).then(n.bind(n,13748)),n.e(57).then(n.bind(n,13754))]))}constructor(o){const H={...arguments.length>2?arguments[2]:void 0,name:o,lH:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||S.e.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:c.VertexUrl,fragmentShader:c.FragmentUrl,uniforms:c.Uniforms};super({...H,defines:c._GetDefines(H.lH)}),this.texelSize=new G.Vector2(0,0)}bind(){let o=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(o),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}c.VertexUrl="fxaa",c.FragmentUrl="fxaa",c.Uniforms=["texelSize"];class A extends g.e{getClassName(){return"FxaaPostProcess"}constructor(o,H){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,k=arguments.length>3?arguments[3]:void 0,g=arguments.length>4?arguments[4]:void 0,O=arguments.length>5?arguments[5]:void 0,Y=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const y={uniforms:c.Uniforms,size:"number"===typeof H?H:void 0,camera:n,samplingMode:k||E.c.BILINEAR_SAMPLINGMODE,lH:g,reusable:O,textureType:Y,...H};super(o,c.FragmentUrl,{effectWrapper:"number"!==typeof H&&H.effectWrapper?void 0:new c(o,g,y),...y}),this.onApplyObservable.add((o=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(o,H,n,E){return Y.e.Parse((()=>new A(o.name,o.options,H,o.renderTargetSamplingMode,n.getEngine(),o.reusable)),o,n,E)}}(0,O.e)("BABYLON.FxaaPostProcess",A);var l=n(11038),x=n(11024),z=n(11420),V=n(11422),J=n(11088);let N=null;function h(o,H,n,E){let k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",g=arguments.length>5&&void 0!==arguments[5]&&arguments[5],O=arguments.length>6?arguments[6]:void 0,Y=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:y,width:S}=P(o,H,n);if(!y||!S)return void l.d.Error("Invalid 'size' parameter !");H.bo().activeCamera===H?o.onEndFrameObservable.addOnce((()=>{N||(N=document.createElement("canvas")),N.width=S,N.height=y;const H=N.getContext("2d"),n=o.getRenderingCanvas();if(!H||!n)return void l.d.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const G=n.width,c=n.height,A=N.width,z=N.height,V=A/G,J=z/c,h=Y?Math.max(V,J):Math.min(V,J),Q=G*h,p=c*h,j=(A-Q)/2,m=(z-p)/2;H.drawImage(n,0,0,G,c,j,m,Q,p),g?(x.Tools.EncodeScreenshotCanvasData(N,void 0,k,void 0,O),E&&E("")):x.Tools.EncodeScreenshotCanvasData(N,E,k,void 0,O)})):j(o,H,n,(o=>{if(g){const H=new Blob([o]);x.Tools.DownloadBlob(H),E&&E("")}else E&&E(o)}),k,1,o.getCreationOptions().antialias,void 0,void 0,void 0,void 0,O)}async function Q(o,H,n){let E=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",k=arguments.length>4?arguments[4]:void 0,g=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((O,Y)=>{h(o,H,n,(o=>{"undefined"!==typeof o?O(o):Y(new Error("Data is undefined"))}),E,void 0,k,g)}))}async function p(o,H,n,E){let k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",g=arguments.length>5?arguments[5]:void 0,O=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((Y=>{h(o,H,{width:n,height:E},(()=>{Y()}),k,!0,g,O)}))}function j(o,H,g,O){let Y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",y=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,S=arguments.length>6&&void 0!==arguments[6]&&arguments[6],G=arguments.length>7?arguments[7]:void 0,c=arguments.length>8&&void 0!==arguments[8]&&arguments[8],x=arguments.length>9&&void 0!==arguments[9]&&arguments[9],N=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],h=arguments.length>11?arguments[11]:void 0,Q=arguments.length>12?arguments[12]:void 0,p=arguments.length>13?arguments[13]:void 0;const{height:j,width:m,finalWidth:b,finalHeight:e}=P(o,H,g),Z={width:m,height:j};if(!j||!m)return void l.d.Error("Invalid 'size' parameter !");o.skipFrameRender=!0;const M=o.getRenderWidth,K=o.getRenderHeight;o.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&o._currentRenderTarget?o._currentRenderTarget.width:m},o.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&o._currentRenderTarget?o._currentRenderTarget.height:j},o.onResizeObservable.hasObservers()&&o.onResizeObservable.notifyObservers(o);const f=H.bo(),B=new k.c("screenShot",Z,f,!1,!1,0,!1,E.c.BILINEAR_SAMPLINGMODE,void 0,x,void 0,void 0,void 0,y);B.renderList=f.meshes.slice(),B.samples=y,B.renderSprites=c,B.activeCamera=H,B.forceLayerMaskCheck=N,null===Q||void 0===Q||Q(B);const q=p||z.DumpData,D=()=>{f.incrementRenderId(),f.resetCachedMaterial(),(0,J.d)((()=>B.isReadyForRendering()&&H.isReady(!0)),(()=>{o.onEndFrameObservable.addOnce((()=>{b===m&&e===j?B.readPixels(void 0,void 0,void 0,!1).then((o=>{q(m,j,o,O,Y,G,!0,void 0,h),B.dispose()})):(o.isWebGPU?n.e(51).then(n.bind(n,13717)):n.e(52).then(n.bind(n,13724))).then((async()=>await(0,V.d)("pass",B.getInternalTexture(),f,void 0,void 0,void 0,b,e).then((H=>{o._readTexturePixels(H,b,e,-1,0,null,!0,!1,0,0).then((o=>{q(b,e,o,O,Y,G,!0,void 0,h),H.dispose()}))}))))})),f.incrementRenderId(),f.resetCachedMaterial();const E=f.activeCamera,k=f.activeCameras,g=H.outputRenderTarget,y=f.spritesEnabled;f.activeCamera=H,f.activeCameras=null,H.outputRenderTarget=B,f.spritesEnabled=c;const S=f.meshes;f.meshes=B.renderList||f.meshes;try{f.render()}finally{f.activeCamera=E,f.activeCameras=k,H.outputRenderTarget=g,f.spritesEnabled=y,f.meshes=S,o.getRenderWidth=M,o.getRenderHeight=K,o.onResizeObservable.hasObservers()&&o.onResizeObservable.notifyObservers(o),H.getProjectionMatrix(!0),o.skipFrameRender=!1}}),(()=>{o.skipFrameRender=!1,o.getRenderWidth=M,o.getRenderHeight=K}))};if(S){const o=new A("antialiasing",1,f.activeCamera);B.addPostProcess(o),o.Qg=!0,o.onEffectCreatedObservable.addOnce((o=>{o.isReady()?D():o.onCompiled=()=>{D()}}))}else D()}async function m(o,H,n){let E=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,g=arguments.length>5&&void 0!==arguments[5]&&arguments[5],O=arguments.length>6?arguments[6]:void 0,Y=arguments.length>7&&void 0!==arguments[7]&&arguments[7],y=arguments.length>8&&void 0!==arguments[8]&&arguments[8],S=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],G=arguments.length>10?arguments[10]:void 0,c=arguments.length>11?arguments[11]:void 0,A=arguments.length>12?arguments[12]:void 0;return await new Promise(((l,x)=>{j(o,H,n,(o=>{"undefined"!==typeof o?l(o):x(new Error("Data is undefined"))}),E,k,g,O,Y,y,S,G,c,A)}))}function P(o,H,n){let E=0,k=0,g=0,O=0;if("object"===typeof n){const Y=n.precision?Math.abs(n.precision):1;n.width&&n.height?(E=n.height*Y,k=n.width*Y):n.width&&!n.height?(k=n.width*Y,E=Math.round(k/o.getAspectRatio(H))):n.height&&!n.width?(E=n.height*Y,k=Math.round(E*o.getAspectRatio(H))):(k=Math.round(o.getRenderWidth()*Y),E=Math.round(k/o.getAspectRatio(H))),n.finalWidth&&n.finalHeight?(O=n.finalHeight,g=n.finalWidth):n.finalWidth&&!n.finalHeight?(g=n.finalWidth,O=Math.round(g/o.getAspectRatio(H))):n.finalHeight&&!n.finalWidth?(O=n.finalHeight,g=Math.round(O*o.getAspectRatio(H))):(g=k,O=E)}else isNaN(n)||(E=n,k=n,g=n,O=n);return k&&(k=Math.floor(k)),E&&(E=Math.floor(E)),g&&(g=Math.floor(g)),O&&(O=Math.floor(O)),{height:0|E,width:0|k,finalWidth:0|g,finalHeight:0|O}}const b={CreateScreenshot:h,CreateScreenshotAsync:Q,CreateScreenshotWithResizeAsync:p,CreateScreenshotUsingRenderTarget:j,CreateScreenshotUsingRenderTargetAsync:m};x.Tools.CreateScreenshot=h,x.Tools.CreateScreenshotAsync=Q,x.Tools.CreateScreenshotUsingRenderTarget=j,x.Tools.CreateScreenshotUsingRenderTargetAsync=m}}]);