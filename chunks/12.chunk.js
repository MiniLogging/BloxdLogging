"use strict";(self.yg1iw12lizp=self.yg1iw12lizp||[]).push([[12,20],{12803:(L,U,x)=>{x.r(U),x.d(U,{Dispose:()=>b,DumpData:()=>h,DumpDataAsync:()=>r,DumpFramebuffer:()=>A,DumpTools:()=>E});var mL=x(12695),p=x(12382),G=x(12610),F=x(12440);let a,o=null;async function A(L,U,x,mL){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",G=arguments.length>5?arguments[5]:void 0,F=arguments.length>6?arguments[6]:void 0;const a=await x.readPixels(0,0,L,U);h(L,U,new Uint8Array(a.buffer),mL,p,G,!0,void 0,F)}async function r(L,U,x){let mL=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",p=arguments.length>4?arguments[4]:void 0,G=arguments.length>5&&void 0!==arguments[5]&&arguments[5],F=arguments.length>6&&void 0!==arguments[6]&&arguments[6],a=arguments.length>7?arguments[7]:void 0;return await new Promise((o=>{h(L,U,x,(L=>o(L)),mL,p,G,F,a)}))}function h(L,U,A,r){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",E=arguments.length>5?arguments[5]:void 0,Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],S=arguments.length>7&&void 0!==arguments[7]&&arguments[7],V=arguments.length>8?arguments[8]:void 0;(async function(){return o||(o=new Promise(((L,U)=>{let p,G=null;const o={Ea:!0,depth:!1,Aa:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(x.bind(x,12723)).then((A=>{let{ThinEngine:r}=A;const h=F.c.Instances.length;try{p=new OffscreenCanvas(100,100),G=new r(p,!1,o)}catch(S){var E;h<F.c.Instances.length&&(null===(E=F.c.Instances.pop())||void 0===E||E.dispose()),p=document.createElement("canvas"),G=new r(p,!1,o)}F.c.Instances.pop(),F.c.OnEnginesDisposedObservable.add((L=>{G&&L!==G&&!G.A&&0===F.c.Instances.length&&b()})),G.getCaps().parallelShaderCompile=void 0;const Y=new mL.b(G);x.e(52).then(x.bind(x,15108)).then((x=>{let{passPixelShader:F}=x;if(!G)return void U("Engine is not defined");const o=new mL.e({EU:G,name:F.name,fragmentShader:F.shader,samplerNames:["textureSampler"]});a={canvas:p,EU:G,renderer:Y,wrapper:o},L(a)}))})).catch(U)}))),await o})().then((x=>{if(x.EU.setSize(L,U,!0),A instanceof Float32Array){const L=new Uint8Array(A.length);let U=A.length;for(;U--;){const x=A[U];L[U]=Math.round(255*(0,G.Clamp)(x))}A=L}const mL=x.EU.createRawTexture(A,L,U,5,!1,!Y,1);x.renderer.setViewport(),x.renderer.applyEffectWrapper(x.wrapper),x.wrapper.effect._bindTexture("textureSampler",mL),x.renderer.draw(),S?p.Tools.ToBlob(x.canvas,(L=>{const U=new FileReader;U.onload=L=>{const U=L.target.result;r&&r(U)},U.readAsArrayBuffer(L)}),h,V):p.Tools.EncodeScreenshotCanvasData(x.canvas,r,h,E,V),mL.dispose()}))}function b(){var L;a?(a.wrapper.dispose(),a.renderer.dispose(),a.EU.dispose()):null===(L=o)||void 0===L||L.then((L=>{L.wrapper.dispose(),L.renderer.dispose(),L.EU.dispose()}));o=null,a=null}const E={DumpData:h,DumpDataAsync:r,DumpFramebuffer:A,Dispose:b};p.Tools.DumpData=h,p.Tools.DumpDataAsync=r,p.Tools.DumpFramebuffer=A},12563:(L,U,x)=>{x.r(U),x.d(U,{CreateScreenshot:()=>q,CreateScreenshotAsync:()=>f,CreateScreenshotUsingRenderTarget:()=>D,CreateScreenshotUsingRenderTargetAsync:()=>P,CreateScreenshotWithResizeAsync:()=>v,ScreenshotTools:()=>K});var mL=x(12565),p=x(12653),G=x(12686),F=x(12547),a=x(12625),o=x(12695),A=x(12719),r=x(12589);class h extends o.e{static _GetDefines(L){if(!L)return null;return L.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(L,U){L?(this._webGPUReady=!0,U.push(Promise.all([x.e(54).then(x.bind(x,15115)),x.e(55).then(x.bind(x,15118))]))):U.push(Promise.all([x.e(56).then(x.bind(x,15126)),x.e(57).then(x.bind(x,15129))]))}constructor(L){const U={...arguments.length>2?arguments[2]:void 0,name:L,EU:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||A.b.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:h.VertexUrl,fragmentShader:h.FragmentUrl,uniforms:h.Uniforms};super({...U,defines:h._GetDefines(U.EU)}),this.texelSize=new r.Vector2(0,0)}bind(){let L=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(L),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}h.VertexUrl="fxaa",h.FragmentUrl="fxaa",h.Uniforms=["texelSize"];class b extends G.e{getClassName(){return"FxaaPostProcess"}constructor(L,U){let x=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,p=arguments.length>3?arguments[3]:void 0,G=arguments.length>4?arguments[4]:void 0,F=arguments.length>5?arguments[5]:void 0,a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const o={uniforms:h.Uniforms,size:"number"===typeof U?U:void 0,camera:x,samplingMode:p||mL.e.BILINEAR_SAMPLINGMODE,EU:G,reusable:F,textureType:a,...U};super(L,h.FragmentUrl,{effectWrapper:"number"!==typeof U&&U.effectWrapper?void 0:new h(L,G,o),...o}),this.onApplyObservable.add((L=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(L,U,x,mL){return a.e.Parse((()=>new b(L.name,L.options,U,L.renderTargetSamplingMode,x.getEngine(),L.reusable)),L,x,mL)}}(0,F.d)("BABYLON.FxaaPostProcess",b);var E=x(12406),Y=x(12382),S=x(12803),V=x(12810),H=x(12475);let Q=null;function q(L,U,x,mL){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",G=arguments.length>5&&void 0!==arguments[5]&&arguments[5],F=arguments.length>6?arguments[6]:void 0,a=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:o,width:A}=d(L,U,x);if(!o||!A)return void E.c.Error("Invalid 'size' parameter !");U.PL().activeCamera===U?L.onEndFrameObservable.addOnce((()=>{Q||(Q=document.createElement("canvas")),Q.width=A,Q.height=o;const U=Q.getContext("2d"),x=L.getRenderingCanvas();if(!U||!x)return void E.c.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const r=x.width,h=x.height,b=Q.width,S=Q.height,V=b/r,H=S/h,q=a?Math.max(V,H):Math.min(V,H),f=r*q,v=h*q,D=(b-f)/2,P=(S-v)/2;U.drawImage(x,0,0,r,h,D,P,f,v),G?(Y.Tools.EncodeScreenshotCanvasData(Q,void 0,p,void 0,F),mL&&mL("")):Y.Tools.EncodeScreenshotCanvasData(Q,mL,p,void 0,F)})):D(L,U,x,(L=>{if(G){const U=new Blob([L]);Y.Tools.DownloadBlob(U),mL&&mL("")}else mL&&mL(L)}),p,1,L.getCreationOptions().antialias,void 0,void 0,void 0,void 0,F)}async function f(L,U,x){let mL=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",p=arguments.length>4?arguments[4]:void 0,G=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((F,a)=>{q(L,U,x,(L=>{"undefined"!==typeof L?F(L):a(new Error("Data is undefined"))}),mL,void 0,p,G)}))}async function v(L,U,x,mL){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",G=arguments.length>5?arguments[5]:void 0,F=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((a=>{q(L,U,{width:x,height:mL},(()=>{a()}),p,!0,G,F)}))}function D(L,U,G,F){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,A=arguments.length>6&&void 0!==arguments[6]&&arguments[6],r=arguments.length>7?arguments[7]:void 0,h=arguments.length>8&&void 0!==arguments[8]&&arguments[8],Y=arguments.length>9&&void 0!==arguments[9]&&arguments[9],Q=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],q=arguments.length>11?arguments[11]:void 0,f=arguments.length>12?arguments[12]:void 0,v=arguments.length>13?arguments[13]:void 0;const{height:D,width:P,finalWidth:K,finalHeight:l}=d(L,U,G),i={width:P,height:D};if(!D||!P)return void E.c.Error("Invalid 'size' parameter !");L.skipFrameRender=!0;const X=L.getRenderWidth,t=L.getRenderHeight;L.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&L._currentRenderTarget?L._currentRenderTarget.width:P},L.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&L._currentRenderTarget?L._currentRenderTarget.height:D},L.onResizeObservable.hasObservers()&&L.onResizeObservable.notifyObservers(L);const y=U.PL(),n=new p.e("screenShot",i,y,!1,!1,0,!1,mL.e.BILINEAR_SAMPLINGMODE,void 0,Y,void 0,void 0,void 0,o);n.renderList=y.meshes.slice(),n.samples=o,n.renderSprites=h,n.activeCamera=U,n.forceLayerMaskCheck=Q,null===f||void 0===f||f(n);const N=v||S.DumpData,e=()=>{y.incrementRenderId(),y.resetCachedMaterial(),(0,H.h)((()=>n.isReadyForRendering()&&U.isReady(!0)),(()=>{L.onEndFrameObservable.addOnce((()=>{K===P&&l===D?n.readPixels(void 0,void 0,void 0,!1).then((L=>{N(P,D,L,F,a,r,!0,void 0,q),n.dispose()})):(L.isWebGPU?x.e(51).then(x.bind(x,15102)):x.e(52).then(x.bind(x,15108))).then((async()=>await(0,V.e)("pass",n.getInternalTexture(),y,void 0,void 0,void 0,K,l).then((U=>{L._readTexturePixels(U,K,l,-1,0,null,!0,!1,0,0).then((L=>{N(K,l,L,F,a,r,!0,void 0,q),U.dispose()}))}))))})),y.incrementRenderId(),y.resetCachedMaterial();const mL=y.activeCamera,p=y.activeCameras,G=U.outputRenderTarget,o=y.spritesEnabled;y.activeCamera=U,y.activeCameras=null,U.outputRenderTarget=n,y.spritesEnabled=h;const A=y.meshes;y.meshes=n.renderList||y.meshes;try{y.render()}finally{y.activeCamera=mL,y.activeCameras=p,U.outputRenderTarget=G,y.spritesEnabled=o,y.meshes=A,L.getRenderWidth=X,L.getRenderHeight=t,L.onResizeObservable.hasObservers()&&L.onResizeObservable.notifyObservers(L),U.getProjectionMatrix(!0),L.skipFrameRender=!1}}),(()=>{L.skipFrameRender=!1,L.getRenderWidth=X,L.getRenderHeight=t}))};if(A){const L=new b("antialiasing",1,y.activeCamera);n.addPostProcess(L),L.Ya=!0,L.onEffectCreatedObservable.addOnce((L=>{L.isReady()?e():L.onCompiled=()=>{e()}}))}else e()}async function P(L,U,x){let mL=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,G=arguments.length>5&&void 0!==arguments[5]&&arguments[5],F=arguments.length>6?arguments[6]:void 0,a=arguments.length>7&&void 0!==arguments[7]&&arguments[7],o=arguments.length>8&&void 0!==arguments[8]&&arguments[8],A=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],r=arguments.length>10?arguments[10]:void 0,h=arguments.length>11?arguments[11]:void 0,b=arguments.length>12?arguments[12]:void 0;return await new Promise(((E,Y)=>{D(L,U,x,(L=>{"undefined"!==typeof L?E(L):Y(new Error("Data is undefined"))}),mL,p,G,F,a,o,A,r,h,b)}))}function d(L,U,x){let mL=0,p=0,G=0,F=0;if("object"===typeof x){const a=x.precision?Math.abs(x.precision):1;x.width&&x.height?(mL=x.height*a,p=x.width*a):x.width&&!x.height?(p=x.width*a,mL=Math.round(p/L.getAspectRatio(U))):x.height&&!x.width?(mL=x.height*a,p=Math.round(mL*L.getAspectRatio(U))):(p=Math.round(L.getRenderWidth()*a),mL=Math.round(p/L.getAspectRatio(U))),x.finalWidth&&x.finalHeight?(F=x.finalHeight,G=x.finalWidth):x.finalWidth&&!x.finalHeight?(G=x.finalWidth,F=Math.round(G/L.getAspectRatio(U))):x.finalHeight&&!x.finalWidth?(F=x.finalHeight,G=Math.round(F*L.getAspectRatio(U))):(G=p,F=mL)}else isNaN(x)||(mL=x,p=x,G=x,F=x);return p&&(p=Math.floor(p)),mL&&(mL=Math.floor(mL)),G&&(G=Math.floor(G)),F&&(F=Math.floor(F)),{height:0|mL,width:0|p,finalWidth:0|G,finalHeight:0|F}}const K={CreateScreenshot:q,CreateScreenshotAsync:f,CreateScreenshotWithResizeAsync:v,CreateScreenshotUsingRenderTarget:D,CreateScreenshotUsingRenderTargetAsync:P};Y.Tools.CreateScreenshot=q,Y.Tools.CreateScreenshotAsync=f,Y.Tools.CreateScreenshotUsingRenderTarget=D,Y.Tools.CreateScreenshotUsingRenderTargetAsync=P}}]);