"use strict";(self["9x1utqq1axc"]=self["9x1utqq1axc"]||[]).push([[12,20],{12545:(y,c,A)=>{A.r(c),A.d(c,{Dispose:()=>O,DumpData:()=>o,DumpDataAsync:()=>q,DumpFramebuffer:()=>I,DumpTools:()=>L});var l=A(12433),w=A(12144),N=A(12340),p=A(12184);let W,h=null;async function I(y,c,A,l){let w=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",N=arguments.length>5?arguments[5]:void 0,p=arguments.length>6?arguments[6]:void 0;const W=await A.readPixels(0,0,y,c);o(y,c,new Uint8Array(W.buffer),l,w,N,!0,void 0,p)}async function q(y,c,A){let l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",w=arguments.length>4?arguments[4]:void 0,N=arguments.length>5&&void 0!==arguments[5]&&arguments[5],p=arguments.length>6&&void 0!==arguments[6]&&arguments[6],W=arguments.length>7?arguments[7]:void 0;return await new Promise((h=>{o(y,c,A,(y=>h(y)),l,w,N,p,W)}))}function o(y,c,I,q){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",L=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],H=arguments.length>7&&void 0!==arguments[7]&&arguments[7],P=arguments.length>8?arguments[8]:void 0;(async function(){return h||(h=new Promise(((y,c)=>{let w,N=null;const h={o:!0,depth:!1,Sc:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(A.bind(A,12458)).then((I=>{let{ThinEngine:q}=I;const o=p.c.Instances.length;try{w=new OffscreenCanvas(100,100),N=new q(w,!1,h)}catch(H){var L;o<p.c.Instances.length&&(null===(L=p.c.Instances.pop())||void 0===L||L.dispose()),w=document.createElement("canvas"),N=new q(w,!1,h)}p.c.Instances.pop(),p.c.OnEnginesDisposedObservable.add((y=>{N&&y!==N&&!N.I&&0===p.c.Instances.length&&O()})),N.getCaps().parallelShaderCompile=void 0;const i=new l.d(N);A.e(52).then(A.bind(A,14801)).then((A=>{let{passPixelShader:p}=A;if(!N)return void c("Engine is not defined");const h=new l.h({Uc:N,name:p.name,fragmentShader:p.shader,samplerNames:["textureSampler"]});W={canvas:w,Uc:N,renderer:i,wrapper:h},y(W)}))})).catch(c)}))),await h})().then((A=>{if(A.Uc.setSize(y,c,!0),I instanceof Float32Array){const y=new Uint8Array(I.length);let c=I.length;for(;c--;){const A=I[c];y[c]=Math.round(255*(0,N.Clamp)(A))}I=y}const l=A.Uc.createRawTexture(I,y,c,5,!1,!i,1);A.renderer.setViewport(),A.renderer.applyEffectWrapper(A.wrapper),A.wrapper.effect._bindTexture("textureSampler",l),A.renderer.draw(),H?w.Tools.ToBlob(A.canvas,(y=>{const c=new FileReader;c.onload=y=>{const c=y.target.result;q&&q(c)},c.readAsArrayBuffer(y)}),o,P):w.Tools.EncodeScreenshotCanvasData(A.canvas,q,o,L,P),l.dispose()}))}function O(){var y;W?(W.wrapper.dispose(),W.renderer.dispose(),W.Uc.dispose()):null===(y=h)||void 0===y||y.then((y=>{y.wrapper.dispose(),y.renderer.dispose(),y.Uc.dispose()}));h=null,W=null}const L={DumpData:o,DumpDataAsync:q,DumpFramebuffer:I,Dispose:O};w.Tools.DumpData=o,w.Tools.DumpDataAsync=q,w.Tools.DumpFramebuffer=I},12299:(y,c,A)=>{A.r(c),A.d(c,{CreateScreenshot:()=>s,CreateScreenshotAsync:()=>B,CreateScreenshotUsingRenderTarget:()=>C,CreateScreenshotUsingRenderTargetAsync:()=>K,CreateScreenshotWithResizeAsync:()=>X,ScreenshotTools:()=>T});var l=A(12303),w=A(12392),N=A(12427),p=A(12283),W=A(12363),h=A(12433),I=A(12454),q=A(12325);class o extends h.h{static _GetDefines(y){if(!y)return null;return y.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(y,c){y?(this._webGPUReady=!0,c.push(Promise.all([A.e(54).then(A.bind(A,14814)),A.e(55).then(A.bind(A,14821))]))):c.push(Promise.all([A.e(56).then(A.bind(A,14823)),A.e(57).then(A.bind(A,14830))]))}constructor(y){const c={...arguments.length>2?arguments[2]:void 0,name:y,Uc:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||I.c.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:o.VertexUrl,fragmentShader:o.FragmentUrl,uniforms:o.Uniforms};super({...c,defines:o._GetDefines(c.Uc)}),this.texelSize=new q.Vector2(0,0)}bind(){let y=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(y),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}o.VertexUrl="fxaa",o.FragmentUrl="fxaa",o.Uniforms=["texelSize"];class O extends N.c{getClassName(){return"FxaaPostProcess"}constructor(y,c){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,w=arguments.length>3?arguments[3]:void 0,N=arguments.length>4?arguments[4]:void 0,p=arguments.length>5?arguments[5]:void 0,W=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const h={uniforms:o.Uniforms,size:"number"===typeof c?c:void 0,camera:A,samplingMode:w||l.d.BILINEAR_SAMPLINGMODE,Uc:N,reusable:p,textureType:W,...c};super(y,o.FragmentUrl,{effectWrapper:"number"!==typeof c&&c.effectWrapper?void 0:new o(y,N,h),...h}),this.onApplyObservable.add((y=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(y,c,A,l){return W.d.Parse((()=>new O(y.name,y.options,c,y.renderTargetSamplingMode,A.getEngine(),y.reusable)),y,A,l)}}(0,p.f)("BABYLON.FxaaPostProcess",O);var L=A(12161),i=A(12144),H=A(12545),P=A(12547),D=A(12212);let t=null;function s(y,c,A,l){let w=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",N=arguments.length>5&&void 0!==arguments[5]&&arguments[5],p=arguments.length>6?arguments[6]:void 0,W=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:h,width:I}=my(y,c,A);if(!h||!I)return void L.c.Error("Invalid 'size' parameter !");c.mc().activeCamera===c?y.onEndFrameObservable.addOnce((()=>{t||(t=document.createElement("canvas")),t.width=I,t.height=h;const c=t.getContext("2d"),A=y.getRenderingCanvas();if(!c||!A)return void L.c.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const q=A.width,o=A.height,O=t.width,H=t.height,P=O/q,D=H/o,s=W?Math.max(P,D):Math.min(P,D),B=q*s,X=o*s,C=(O-B)/2,K=(H-X)/2;c.drawImage(A,0,0,q,o,C,K,B,X),N?(i.Tools.EncodeScreenshotCanvasData(t,void 0,w,void 0,p),l&&l("")):i.Tools.EncodeScreenshotCanvasData(t,l,w,void 0,p)})):C(y,c,A,(y=>{if(N){const c=new Blob([y]);i.Tools.DownloadBlob(c),l&&l("")}else l&&l(y)}),w,1,y.getCreationOptions().antialias,void 0,void 0,void 0,void 0,p)}async function B(y,c,A){let l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",w=arguments.length>4?arguments[4]:void 0,N=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((p,W)=>{s(y,c,A,(y=>{"undefined"!==typeof y?p(y):W(new Error("Data is undefined"))}),l,void 0,w,N)}))}async function X(y,c,A,l){let w=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",N=arguments.length>5?arguments[5]:void 0,p=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((W=>{s(y,c,{width:A,height:l},(()=>{W()}),w,!0,N,p)}))}function C(y,c,N,p){let W=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,I=arguments.length>6&&void 0!==arguments[6]&&arguments[6],q=arguments.length>7?arguments[7]:void 0,o=arguments.length>8&&void 0!==arguments[8]&&arguments[8],i=arguments.length>9&&void 0!==arguments[9]&&arguments[9],t=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],s=arguments.length>11?arguments[11]:void 0,B=arguments.length>12?arguments[12]:void 0,X=arguments.length>13?arguments[13]:void 0;const{height:C,width:K,finalWidth:T,finalHeight:z}=my(y,c,N),S={width:K,height:C};if(!C||!K)return void L.c.Error("Invalid 'size' parameter !");y.skipFrameRender=!0;const M=y.getRenderWidth,k=y.getRenderHeight;y.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&y._currentRenderTarget?y._currentRenderTarget.width:K},y.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&y._currentRenderTarget?y._currentRenderTarget.height:C},y.onResizeObservable.hasObservers()&&y.onResizeObservable.notifyObservers(y);const a=c.mc(),u=new w.e("screenShot",S,a,!1,!1,0,!1,l.d.BILINEAR_SAMPLINGMODE,void 0,i,void 0,void 0,void 0,h);u.renderList=a.meshes.slice(),u.samples=h,u.renderSprites=o,u.activeCamera=c,u.forceLayerMaskCheck=t,null===B||void 0===B||B(u);const G=X||H.DumpData,j=()=>{a.incrementRenderId(),a.resetCachedMaterial(),(0,D.e)((()=>u.isReadyForRendering()&&c.isReady(!0)),(()=>{y.onEndFrameObservable.addOnce((()=>{T===K&&z===C?u.readPixels(void 0,void 0,void 0,!1).then((y=>{G(K,C,y,p,W,q,!0,void 0,s),u.dispose()})):(y.isWebGPU?A.e(51).then(A.bind(A,14799)):A.e(52).then(A.bind(A,14801))).then((async()=>await(0,P.d)("pass",u.getInternalTexture(),a,void 0,void 0,void 0,T,z).then((c=>{y._readTexturePixels(c,T,z,-1,0,null,!0,!1,0,0).then((y=>{G(T,z,y,p,W,q,!0,void 0,s),c.dispose()}))}))))})),a.incrementRenderId(),a.resetCachedMaterial();const l=a.activeCamera,w=a.activeCameras,N=c.outputRenderTarget,h=a.spritesEnabled;a.activeCamera=c,a.activeCameras=null,c.outputRenderTarget=u,a.spritesEnabled=o;const I=a.meshes;a.meshes=u.renderList||a.meshes;try{a.render()}finally{a.activeCamera=l,a.activeCameras=w,c.outputRenderTarget=N,a.spritesEnabled=h,a.meshes=I,y.getRenderWidth=M,y.getRenderHeight=k,y.onResizeObservable.hasObservers()&&y.onResizeObservable.notifyObservers(y),c.getProjectionMatrix(!0),y.skipFrameRender=!1}}),(()=>{y.skipFrameRender=!1,y.getRenderWidth=M,y.getRenderHeight=k}))};if(I){const y=new O("antialiasing",1,a.activeCamera);u.addPostProcess(y),y.Gc=!0,y.onEffectCreatedObservable.addOnce((y=>{y.isReady()?j():y.onCompiled=()=>{j()}}))}else j()}async function K(y,c,A){let l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",w=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,N=arguments.length>5&&void 0!==arguments[5]&&arguments[5],p=arguments.length>6?arguments[6]:void 0,W=arguments.length>7&&void 0!==arguments[7]&&arguments[7],h=arguments.length>8&&void 0!==arguments[8]&&arguments[8],I=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],q=arguments.length>10?arguments[10]:void 0,o=arguments.length>11?arguments[11]:void 0,O=arguments.length>12?arguments[12]:void 0;return await new Promise(((L,i)=>{C(y,c,A,(y=>{"undefined"!==typeof y?L(y):i(new Error("Data is undefined"))}),l,w,N,p,W,h,I,q,o,O)}))}function my(y,c,A){let l=0,w=0,N=0,p=0;if("object"===typeof A){const W=A.precision?Math.abs(A.precision):1;A.width&&A.height?(l=A.height*W,w=A.width*W):A.width&&!A.height?(w=A.width*W,l=Math.round(w/y.getAspectRatio(c))):A.height&&!A.width?(l=A.height*W,w=Math.round(l*y.getAspectRatio(c))):(w=Math.round(y.getRenderWidth()*W),l=Math.round(w/y.getAspectRatio(c))),A.finalWidth&&A.finalHeight?(p=A.finalHeight,N=A.finalWidth):A.finalWidth&&!A.finalHeight?(N=A.finalWidth,p=Math.round(N/y.getAspectRatio(c))):A.finalHeight&&!A.finalWidth?(p=A.finalHeight,N=Math.round(p*y.getAspectRatio(c))):(N=w,p=l)}else isNaN(A)||(l=A,w=A,N=A,p=A);return w&&(w=Math.floor(w)),l&&(l=Math.floor(l)),N&&(N=Math.floor(N)),p&&(p=Math.floor(p)),{height:0|l,width:0|w,finalWidth:0|N,finalHeight:0|p}}const T={CreateScreenshot:s,CreateScreenshotAsync:B,CreateScreenshotWithResizeAsync:X,CreateScreenshotUsingRenderTarget:C,CreateScreenshotUsingRenderTargetAsync:K};i.Tools.CreateScreenshot=s,i.Tools.CreateScreenshotAsync=B,i.Tools.CreateScreenshotUsingRenderTarget=C,i.Tools.CreateScreenshotUsingRenderTargetAsync=K}}]);