"use strict";(self.zjjkhojdx1=self.zjjkhojdx1||[]).push([[12,20],{11456:(k,h,o)=>{o.r(h),o.d(h,{Dispose:()=>a,DumpData:()=>K,DumpDataAsync:()=>A,DumpFramebuffer:()=>l,DumpTools:()=>N});var x=o(11339),I=o(11078),q=o(11260),Y=o(11120);let J,G=null;async function l(k,h,o,x){let I=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",q=arguments.length>5?arguments[5]:void 0,Y=arguments.length>6?arguments[6]:void 0;const J=await o.readPixels(0,0,k,h);K(k,h,new Uint8Array(J.buffer),x,I,q,!0,void 0,Y)}async function A(k,h,o){let x=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",I=arguments.length>4?arguments[4]:void 0,q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],J=arguments.length>7?arguments[7]:void 0;return await new Promise((G=>{K(k,h,o,(k=>G(k)),x,I,q,Y,J)}))}function K(k,h,l,A){let K=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",N=arguments.length>5?arguments[5]:void 0,X=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7],W=arguments.length>8?arguments[8]:void 0;(async function(){return G||(G=new Promise(((k,h)=>{let I,q=null;const G={nh:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(o.bind(o,11372)).then((l=>{let{ThinEngine:A}=l;const K=Y.b.Instances.length;try{I=new OffscreenCanvas(100,100),q=new A(I,!1,G)}catch(c){var N;K<Y.b.Instances.length&&(null===(N=Y.b.Instances.pop())||void 0===N||N.dispose()),I=document.createElement("canvas"),q=new A(I,!1,G)}Y.b.Instances.pop(),Y.b.OnEnginesDisposedObservable.add((k=>{q&&k!==q&&!q.l&&0===Y.b.Instances.length&&a()})),q.getCaps().parallelShaderCompile=void 0;const X=new x.c(q);o.e(52).then(o.bind(o,13693)).then((o=>{let{passPixelShader:Y}=o;if(!q)return void h("Engine is not defined");const G=new x.e({bh:q,name:Y.name,fragmentShader:Y.shader,samplerNames:["textureSampler"]});J={canvas:I,bh:q,renderer:X,wrapper:G},k(J)}))})).catch(h)}))),await G})().then((o=>{if(o.bh.setSize(k,h,!0),l instanceof Float32Array){const k=new Uint8Array(l.length);let h=l.length;for(;h--;){const o=l[h];k[h]=Math.round(255*(0,q.Clamp)(o))}l=k}const x=o.bh.createRawTexture(l,k,h,5,!1,!X,1);o.renderer.setViewport(),o.renderer.applyEffectWrapper(o.wrapper),o.wrapper.effect._bindTexture("textureSampler",x),o.renderer.draw(),c?I.Tools.ToBlob(o.canvas,(k=>{const h=new FileReader;h.onload=k=>{const h=k.target.result;A&&A(h)},h.readAsArrayBuffer(k)}),K,W):I.Tools.EncodeScreenshotCanvasData(o.canvas,A,K,N,W),x.dispose()}))}function a(){var k;J?(J.wrapper.dispose(),J.renderer.dispose(),J.bh.dispose()):null===(k=G)||void 0===k||k.then((k=>{k.wrapper.dispose(),k.renderer.dispose(),k.bh.dispose()}));G=null,J=null}const N={DumpData:K,DumpDataAsync:A,DumpFramebuffer:l,Dispose:a};I.Tools.DumpData=K,I.Tools.DumpDataAsync=A,I.Tools.DumpFramebuffer=l},11221:(k,h,o)=>{o.r(h),o.d(h,{CreateScreenshot:()=>T,CreateScreenshotAsync:()=>j,CreateScreenshotUsingRenderTarget:()=>b,CreateScreenshotUsingRenderTargetAsync:()=>V,CreateScreenshotWithResizeAsync:()=>d,ScreenshotTools:()=>F});var x=o(11223),I=o(11299),q=o(11335),Y=o(11199),J=o(11271),G=o(11339),l=o(11369),A=o(11239);class K extends G.e{static _GetDefines(k){if(!k)return null;return k.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(k,h){k?(this._webGPUReady=!0,h.push(Promise.all([o.e(54).then(o.bind(o,13703)),o.e(55).then(o.bind(o,13711))]))):h.push(Promise.all([o.e(56).then(o.bind(o,13720)),o.e(57).then(o.bind(o,13729))]))}constructor(k){const h={...arguments.length>2?arguments[2]:void 0,name:k,bh:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||l.c.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:K.VertexUrl,fragmentShader:K.FragmentUrl,uniforms:K.Uniforms};super({...h,defines:K._GetDefines(h.bh)}),this.texelSize=new A.Vector2(0,0)}bind(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(k),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}K.VertexUrl="fxaa",K.FragmentUrl="fxaa",K.Uniforms=["texelSize"];class a extends q.b{getClassName(){return"FxaaPostProcess"}constructor(k,h){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,I=arguments.length>3?arguments[3]:void 0,q=arguments.length>4?arguments[4]:void 0,Y=arguments.length>5?arguments[5]:void 0,J=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const G={uniforms:K.Uniforms,size:"number"===typeof h?h:void 0,camera:o,samplingMode:I||x.b.BILINEAR_SAMPLINGMODE,bh:q,reusable:Y,textureType:J,...h};super(k,K.FragmentUrl,{effectWrapper:"number"!==typeof h&&h.effectWrapper?void 0:new K(k,q,G),...G}),this.onApplyObservable.add((k=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(k,h,o,x){return J.c.Parse((()=>new a(k.name,k.options,h,k.renderTargetSamplingMode,o.getEngine(),k.reusable)),k,o,x)}}(0,Y.g)("BABYLON.FxaaPostProcess",a);var N=o(11098),X=o(11078),c=o(11456),W=o(11461),f=o(11145);let M=null;function T(k,h,o,x){let I=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6?arguments[6]:void 0,J=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:G,width:l}=i(k,h,o);if(!G||!l)return void N.c.Error("Invalid 'size' parameter !");h.ik().activeCamera===h?k.onEndFrameObservable.addOnce((()=>{M||(M=document.createElement("canvas")),M.width=l,M.height=G;const h=M.getContext("2d"),o=k.getRenderingCanvas();if(!h||!o)return void N.c.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const A=o.width,K=o.height,a=M.width,c=M.height,W=a/A,f=c/K,T=J?Math.max(W,f):Math.min(W,f),j=A*T,d=K*T,b=(a-j)/2,V=(c-d)/2;h.drawImage(o,0,0,A,K,b,V,j,d),q?(X.Tools.EncodeScreenshotCanvasData(M,void 0,I,void 0,Y),x&&x("")):X.Tools.EncodeScreenshotCanvasData(M,x,I,void 0,Y)})):b(k,h,o,(k=>{if(q){const h=new Blob([k]);X.Tools.DownloadBlob(h),x&&x("")}else x&&x(k)}),I,1,k.getCreationOptions().antialias,void 0,void 0,void 0,void 0,Y)}async function j(k,h,o){let x=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",I=arguments.length>4?arguments[4]:void 0,q=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((Y,J)=>{T(k,h,o,(k=>{"undefined"!==typeof k?Y(k):J(new Error("Data is undefined"))}),x,void 0,I,q)}))}async function d(k,h,o,x){let I=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",q=arguments.length>5?arguments[5]:void 0,Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((J=>{T(k,h,{width:o,height:x},(()=>{J()}),I,!0,q,Y)}))}function b(k,h,q,Y){let J=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",G=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,l=arguments.length>6&&void 0!==arguments[6]&&arguments[6],A=arguments.length>7?arguments[7]:void 0,K=arguments.length>8&&void 0!==arguments[8]&&arguments[8],X=arguments.length>9&&void 0!==arguments[9]&&arguments[9],M=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],T=arguments.length>11?arguments[11]:void 0,j=arguments.length>12?arguments[12]:void 0,d=arguments.length>13?arguments[13]:void 0;const{height:b,width:V,finalWidth:F,finalHeight:R}=i(k,h,q),s={width:V,height:b};if(!b||!V)return void N.c.Error("Invalid 'size' parameter !");k.skipFrameRender=!0;const Z=k.getRenderWidth,w=k.getRenderHeight;k.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&k._currentRenderTarget?k._currentRenderTarget.width:V},k.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&k._currentRenderTarget?k._currentRenderTarget.height:b},k.onResizeObservable.hasObservers()&&k.onResizeObservable.notifyObservers(k);const D=h.ik(),U=new I.d("screenShot",s,D,!1,!1,0,!1,x.b.BILINEAR_SAMPLINGMODE,void 0,X,void 0,void 0,void 0,G);U.renderList=D.meshes.slice(),U.samples=G,U.renderSprites=K,U.activeCamera=h,U.forceLayerMaskCheck=M,null===j||void 0===j||j(U);const Q=d||c.DumpData,B=()=>{D.incrementRenderId(),D.resetCachedMaterial(),(0,f.e)((()=>U.isReadyForRendering()&&h.isReady(!0)),(()=>{k.onEndFrameObservable.addOnce((()=>{F===V&&R===b?U.readPixels(void 0,void 0,void 0,!1).then((k=>{Q(V,b,k,Y,J,A,!0,void 0,T),U.dispose()})):(k.isWebGPU?o.e(51).then(o.bind(o,13688)):o.e(52).then(o.bind(o,13693))).then((async()=>await(0,W.d)("pass",U.getInternalTexture(),D,void 0,void 0,void 0,F,R).then((h=>{k._readTexturePixels(h,F,R,-1,0,null,!0,!1,0,0).then((k=>{Q(F,R,k,Y,J,A,!0,void 0,T),h.dispose()}))}))))})),D.incrementRenderId(),D.resetCachedMaterial();const x=D.activeCamera,I=D.activeCameras,q=h.outputRenderTarget,G=D.spritesEnabled;D.activeCamera=h,D.activeCameras=null,h.outputRenderTarget=U,D.spritesEnabled=K;const l=D.meshes;D.meshes=U.renderList||D.meshes;try{D.render()}finally{D.activeCamera=x,D.activeCameras=I,h.outputRenderTarget=q,D.spritesEnabled=G,D.meshes=l,k.getRenderWidth=Z,k.getRenderHeight=w,k.onResizeObservable.hasObservers()&&k.onResizeObservable.notifyObservers(k),h.getProjectionMatrix(!0),k.skipFrameRender=!1}}),(()=>{k.skipFrameRender=!1,k.getRenderWidth=Z,k.getRenderHeight=w}))};if(l){const k=new a("antialiasing",1,D.activeCamera);U.addPostProcess(k),k.Hh=!0,k.onEffectCreatedObservable.addOnce((k=>{k.isReady()?B():k.onCompiled=()=>{B()}}))}else B()}async function V(k,h,o){let x=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",I=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6?arguments[6]:void 0,J=arguments.length>7&&void 0!==arguments[7]&&arguments[7],G=arguments.length>8&&void 0!==arguments[8]&&arguments[8],l=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],A=arguments.length>10?arguments[10]:void 0,K=arguments.length>11?arguments[11]:void 0,a=arguments.length>12?arguments[12]:void 0;return await new Promise(((N,X)=>{b(k,h,o,(k=>{"undefined"!==typeof k?N(k):X(new Error("Data is undefined"))}),x,I,q,Y,J,G,l,A,K,a)}))}function i(k,h,o){let x=0,I=0,q=0,Y=0;if("object"===typeof o){const J=o.precision?Math.abs(o.precision):1;o.width&&o.height?(x=o.height*J,I=o.width*J):o.width&&!o.height?(I=o.width*J,x=Math.round(I/k.getAspectRatio(h))):o.height&&!o.width?(x=o.height*J,I=Math.round(x*k.getAspectRatio(h))):(I=Math.round(k.getRenderWidth()*J),x=Math.round(I/k.getAspectRatio(h))),o.finalWidth&&o.finalHeight?(Y=o.finalHeight,q=o.finalWidth):o.finalWidth&&!o.finalHeight?(q=o.finalWidth,Y=Math.round(q/k.getAspectRatio(h))):o.finalHeight&&!o.finalWidth?(Y=o.finalHeight,q=Math.round(Y*k.getAspectRatio(h))):(q=I,Y=x)}else isNaN(o)||(x=o,I=o,q=o,Y=o);return I&&(I=Math.floor(I)),x&&(x=Math.floor(x)),q&&(q=Math.floor(q)),Y&&(Y=Math.floor(Y)),{height:0|x,width:0|I,finalWidth:0|q,finalHeight:0|Y}}const F={CreateScreenshot:T,CreateScreenshotAsync:j,CreateScreenshotWithResizeAsync:d,CreateScreenshotUsingRenderTarget:b,CreateScreenshotUsingRenderTargetAsync:V};X.Tools.CreateScreenshot=T,X.Tools.CreateScreenshotAsync=j,X.Tools.CreateScreenshotUsingRenderTarget=b,X.Tools.CreateScreenshotUsingRenderTargetAsync=V}}]);