"use strict";(self.i6szn8jgzh=self.i6szn8jgzh||[]).push([[12,20],{11989:(b,n,i)=>{i.r(n),i.d(n,{Dispose:()=>Z,DumpData:()=>N,DumpDataAsync:()=>mb,DumpFramebuffer:()=>B,DumpTools:()=>T});var e=i(11872),V=i(11605),Q=i(11796),U=i(11646);let Y,L=null;async function B(b,n,i,e){let V=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Q=arguments.length>5?arguments[5]:void 0,U=arguments.length>6?arguments[6]:void 0;const Y=await i.readPixels(0,0,b,n);N(b,n,new Uint8Array(Y.buffer),e,V,Q,!0,void 0,U)}async function mb(b,n,i){let e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",V=arguments.length>4?arguments[4]:void 0,Q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],U=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Y=arguments.length>7?arguments[7]:void 0;return await new Promise((L=>{N(b,n,i,(b=>L(b)),e,V,Q,U,Y)}))}function N(b,n,B,mb){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",T=arguments.length>5?arguments[5]:void 0,z=arguments.length>6&&void 0!==arguments[6]&&arguments[6],K=arguments.length>7&&void 0!==arguments[7]&&arguments[7],I=arguments.length>8?arguments[8]:void 0;(async function(){return L||(L=new Promise(((b,n)=>{let V,Q=null;const L={de:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(i.bind(i,11898)).then((B=>{let{ThinEngine:mb}=B;const N=U.d.Instances.length;try{V=new OffscreenCanvas(100,100),Q=new mb(V,!1,L)}catch(K){var T;N<U.d.Instances.length&&(null===(T=U.d.Instances.pop())||void 0===T||T.dispose()),V=document.createElement("canvas"),Q=new mb(V,!1,L)}U.d.Instances.pop(),U.d.OnEnginesDisposedObservable.add((b=>{Q&&b!==Q&&!Q.N&&0===U.d.Instances.length&&Z()})),Q.getCaps().parallelShaderCompile=void 0;const z=new e.c(Q);i.e(52).then(i.bind(i,14339)).then((i=>{let{passPixelShader:U}=i;if(!Q)return void n("Engine is not defined");const L=new e.f({In:Q,name:U.name,fragmentShader:U.shader,samplerNames:["textureSampler"]});Y={canvas:V,In:Q,renderer:z,wrapper:L},b(Y)}))})).catch(n)}))),await L})().then((i=>{if(i.In.setSize(b,n,!0),B instanceof Float32Array){const b=new Uint8Array(B.length);let n=B.length;for(;n--;){const i=B[n];b[n]=Math.round(255*(0,Q.Clamp)(i))}B=b}const e=i.In.createRawTexture(B,b,n,5,!1,!z,1);i.renderer.setViewport(),i.renderer.applyEffectWrapper(i.wrapper),i.wrapper.effect._bindTexture("textureSampler",e),i.renderer.draw(),K?V.Tools.ToBlob(i.canvas,(b=>{const n=new FileReader;n.onload=b=>{const n=b.target.result;mb&&mb(n)},n.readAsArrayBuffer(b)}),N,I):V.Tools.EncodeScreenshotCanvasData(i.canvas,mb,N,T,I),e.dispose()}))}function Z(){var b;Y?(Y.wrapper.dispose(),Y.renderer.dispose(),Y.In.dispose()):null===(b=L)||void 0===b||b.then((b=>{b.wrapper.dispose(),b.renderer.dispose(),b.In.dispose()}));L=null,Y=null}const T={DumpData:N,DumpDataAsync:mb,DumpFramebuffer:B,Dispose:Z};V.Tools.DumpData=N,V.Tools.DumpDataAsync=mb,V.Tools.DumpFramebuffer=B},11743:(b,n,i)=>{i.r(n),i.d(n,{CreateScreenshot:()=>d,CreateScreenshotAsync:()=>G,CreateScreenshotUsingRenderTarget:()=>M,CreateScreenshotUsingRenderTargetAsync:()=>j,CreateScreenshotWithResizeAsync:()=>o,ScreenshotTools:()=>D});var e=i(11748),V=i(11832),Q=i(11868),U=i(11734),Y=i(11811),L=i(11872),B=i(11894),mb=i(11778);class N extends L.f{static _GetDefines(b){if(!b)return null;return b.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(b,n){b?(this._webGPUReady=!0,n.push(Promise.all([i.e(54).then(i.bind(i,14351)),i.e(55).then(i.bind(i,14357))]))):n.push(Promise.all([i.e(56).then(i.bind(i,14366)),i.e(57).then(i.bind(i,14375))]))}constructor(b){const n={...arguments.length>2?arguments[2]:void 0,name:b,In:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||B.c.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:N.VertexUrl,fragmentShader:N.FragmentUrl,uniforms:N.Uniforms};super({...n,defines:N._GetDefines(n.In)}),this.texelSize=new mb.Vector2(0,0)}bind(){let b=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(b),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}N.VertexUrl="fxaa",N.FragmentUrl="fxaa",N.Uniforms=["texelSize"];class Z extends Q.d{getClassName(){return"FxaaPostProcess"}constructor(b,n){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,V=arguments.length>3?arguments[3]:void 0,Q=arguments.length>4?arguments[4]:void 0,U=arguments.length>5?arguments[5]:void 0,Y=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const L={uniforms:N.Uniforms,size:"number"===typeof n?n:void 0,camera:i,samplingMode:V||e.e.BILINEAR_SAMPLINGMODE,In:Q,reusable:U,textureType:Y,...n};super(b,N.FragmentUrl,{effectWrapper:"number"!==typeof n&&n.effectWrapper?void 0:new N(b,Q,L),...L}),this.onApplyObservable.add((b=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(b,n,i,e){return Y.c.Parse((()=>new Z(b.name,b.options,n,b.renderTargetSamplingMode,i.getEngine(),b.reusable)),b,i,e)}}(0,U.i)("BABYLON.FxaaPostProcess",Z);var T=i(11621),z=i(11605),K=i(11989),I=i(11994),O=i(11674);let u=null;function d(b,n,i,e){let V=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],U=arguments.length>6?arguments[6]:void 0,Y=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:L,width:B}=a(b,n,i);if(!L||!B)return void T.b.Error("Invalid 'size' parameter !");n.ab().activeCamera===n?b.onEndFrameObservable.addOnce((()=>{u||(u=document.createElement("canvas")),u.width=B,u.height=L;const n=u.getContext("2d"),i=b.getRenderingCanvas();if(!n||!i)return void T.b.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const mb=i.width,N=i.height,Z=u.width,K=u.height,I=Z/mb,O=K/N,d=Y?Math.max(I,O):Math.min(I,O),G=mb*d,o=N*d,M=(Z-G)/2,j=(K-o)/2;n.drawImage(i,0,0,mb,N,M,j,G,o),Q?(z.Tools.EncodeScreenshotCanvasData(u,void 0,V,void 0,U),e&&e("")):z.Tools.EncodeScreenshotCanvasData(u,e,V,void 0,U)})):M(b,n,i,(b=>{if(Q){const n=new Blob([b]);z.Tools.DownloadBlob(n),e&&e("")}else e&&e(b)}),V,1,b.getCreationOptions().antialias,void 0,void 0,void 0,void 0,U)}async function G(b,n,i){let e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",V=arguments.length>4?arguments[4]:void 0,Q=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((U,Y)=>{d(b,n,i,(b=>{"undefined"!==typeof b?U(b):Y(new Error("Data is undefined"))}),e,void 0,V,Q)}))}async function o(b,n,i,e){let V=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Q=arguments.length>5?arguments[5]:void 0,U=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((Y=>{d(b,n,{width:i,height:e},(()=>{Y()}),V,!0,Q,U)}))}function M(b,n,Q,U){let Y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",L=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,B=arguments.length>6&&void 0!==arguments[6]&&arguments[6],mb=arguments.length>7?arguments[7]:void 0,N=arguments.length>8&&void 0!==arguments[8]&&arguments[8],z=arguments.length>9&&void 0!==arguments[9]&&arguments[9],u=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],d=arguments.length>11?arguments[11]:void 0,G=arguments.length>12?arguments[12]:void 0,o=arguments.length>13?arguments[13]:void 0;const{height:M,width:j,finalWidth:D,finalHeight:x}=a(b,n,Q),y={width:j,height:M};if(!M||!j)return void T.b.Error("Invalid 'size' parameter !");b.skipFrameRender=!0;const s=b.getRenderWidth,A=b.getRenderHeight;b.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&b._currentRenderTarget?b._currentRenderTarget.width:j},b.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&b._currentRenderTarget?b._currentRenderTarget.height:M},b.onResizeObservable.hasObservers()&&b.onResizeObservable.notifyObservers(b);const E=n.ab(),C=new V.b("screenShot",y,E,!1,!1,0,!1,e.e.BILINEAR_SAMPLINGMODE,void 0,z,void 0,void 0,void 0,L);C.renderList=E.meshes.slice(),C.samples=L,C.renderSprites=N,C.activeCamera=n,C.forceLayerMaskCheck=u,null===G||void 0===G||G(C);const t=o||K.DumpData,w=()=>{E.incrementRenderId(),E.resetCachedMaterial(),(0,O.f)((()=>C.isReadyForRendering()&&n.isReady(!0)),(()=>{b.onEndFrameObservable.addOnce((()=>{D===j&&x===M?C.readPixels(void 0,void 0,void 0,!1).then((b=>{t(j,M,b,U,Y,mb,!0,void 0,d),C.dispose()})):(b.isWebGPU?i.e(51).then(i.bind(i,14334)):i.e(52).then(i.bind(i,14339))).then((async()=>await(0,I.c)("pass",C.getInternalTexture(),E,void 0,void 0,void 0,D,x).then((n=>{b._readTexturePixels(n,D,x,-1,0,null,!0,!1,0,0).then((b=>{t(D,x,b,U,Y,mb,!0,void 0,d),n.dispose()}))}))))})),E.incrementRenderId(),E.resetCachedMaterial();const e=E.activeCamera,V=E.activeCameras,Q=n.outputRenderTarget,L=E.spritesEnabled;E.activeCamera=n,E.activeCameras=null,n.outputRenderTarget=C,E.spritesEnabled=N;const B=E.meshes;E.meshes=C.renderList||E.meshes;try{E.render()}finally{E.activeCamera=e,E.activeCameras=V,n.outputRenderTarget=Q,E.spritesEnabled=L,E.meshes=B,b.getRenderWidth=s,b.getRenderHeight=A,b.onResizeObservable.hasObservers()&&b.onResizeObservable.notifyObservers(b),n.getProjectionMatrix(!0),b.skipFrameRender=!1}}),(()=>{b.skipFrameRender=!1,b.getRenderWidth=s,b.getRenderHeight=A}))};if(B){const b=new Z("antialiasing",1,E.activeCamera);C.addPostProcess(b),b.je=!0,b.onEffectCreatedObservable.addOnce((b=>{b.isReady()?w():b.onCompiled=()=>{w()}}))}else w()}async function j(b,n,i){let e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",V=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,Q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],U=arguments.length>6?arguments[6]:void 0,Y=arguments.length>7&&void 0!==arguments[7]&&arguments[7],L=arguments.length>8&&void 0!==arguments[8]&&arguments[8],B=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],mb=arguments.length>10?arguments[10]:void 0,N=arguments.length>11?arguments[11]:void 0,Z=arguments.length>12?arguments[12]:void 0;return await new Promise(((T,z)=>{M(b,n,i,(b=>{"undefined"!==typeof b?T(b):z(new Error("Data is undefined"))}),e,V,Q,U,Y,L,B,mb,N,Z)}))}function a(b,n,i){let e=0,V=0,Q=0,U=0;if("object"===typeof i){const Y=i.precision?Math.abs(i.precision):1;i.width&&i.height?(e=i.height*Y,V=i.width*Y):i.width&&!i.height?(V=i.width*Y,e=Math.round(V/b.getAspectRatio(n))):i.height&&!i.width?(e=i.height*Y,V=Math.round(e*b.getAspectRatio(n))):(V=Math.round(b.getRenderWidth()*Y),e=Math.round(V/b.getAspectRatio(n))),i.finalWidth&&i.finalHeight?(U=i.finalHeight,Q=i.finalWidth):i.finalWidth&&!i.finalHeight?(Q=i.finalWidth,U=Math.round(Q/b.getAspectRatio(n))):i.finalHeight&&!i.finalWidth?(U=i.finalHeight,Q=Math.round(U*b.getAspectRatio(n))):(Q=V,U=e)}else isNaN(i)||(e=i,V=i,Q=i,U=i);return V&&(V=Math.floor(V)),e&&(e=Math.floor(e)),Q&&(Q=Math.floor(Q)),U&&(U=Math.floor(U)),{height:0|e,width:0|V,finalWidth:0|Q,finalHeight:0|U}}const D={CreateScreenshot:d,CreateScreenshotAsync:G,CreateScreenshotWithResizeAsync:o,CreateScreenshotUsingRenderTarget:M,CreateScreenshotUsingRenderTargetAsync:j};z.Tools.CreateScreenshot=d,z.Tools.CreateScreenshotAsync=G,z.Tools.CreateScreenshotUsingRenderTarget=M,z.Tools.CreateScreenshotUsingRenderTargetAsync=j}}]);