"use strict";(self["3gghkoft8x"]=self["3gghkoft8x"]||[]).push([[12,20],{12544:(y,S,I)=>{I.r(S),I.d(S,{Dispose:()=>G,DumpData:()=>K,DumpDataAsync:()=>u,DumpFramebuffer:()=>J,DumpTools:()=>p});var V=I(12425),i=I(12128),A=I(12338),B=I(12185);let d,F=null;async function J(y,S,I,V){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",A=arguments.length>5?arguments[5]:void 0,B=arguments.length>6?arguments[6]:void 0;const d=await I.readPixels(0,0,y,S);K(y,S,new Uint8Array(d.buffer),V,i,A,!0,void 0,B)}async function u(y,S,I){let V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",i=arguments.length>4?arguments[4]:void 0,A=arguments.length>5&&void 0!==arguments[5]&&arguments[5],B=arguments.length>6&&void 0!==arguments[6]&&arguments[6],d=arguments.length>7?arguments[7]:void 0;return await new Promise((F=>{K(y,S,I,(y=>F(y)),V,i,A,B,d)}))}function K(y,S,J,u){let K=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",p=arguments.length>5?arguments[5]:void 0,L=arguments.length>6&&void 0!==arguments[6]&&arguments[6],T=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8?arguments[8]:void 0;(async function(){return F||(F=new Promise(((y,S)=>{let i,A=null;const F={ei:!0,depth:!1,gi:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(I.bind(I,12459)).then((J=>{let{ThinEngine:u}=J;const K=B.e.Instances.length;try{i=new OffscreenCanvas(100,100),A=new u(i,!1,F)}catch(T){var p;K<B.e.Instances.length&&(null===(p=B.e.Instances.pop())||void 0===p||p.dispose()),i=document.createElement("canvas"),A=new u(i,!1,F)}B.e.Instances.pop(),B.e.OnEnginesDisposedObservable.add((y=>{A&&y!==A&&!A.J&&0===B.e.Instances.length&&G()})),A.getCaps().parallelShaderCompile=void 0;const L=new V.e(A);I.e(52).then(I.bind(I,14815)).then((I=>{let{passPixelShader:B}=I;if(!A)return void S("Engine is not defined");const F=new V.i({sS:A,name:B.name,fragmentShader:B.shader,samplerNames:["textureSampler"]});d={canvas:i,sS:A,renderer:L,wrapper:F},y(d)}))})).catch(S)}))),await F})().then((I=>{if(I.sS.setSize(y,S,!0),J instanceof Float32Array){const y=new Uint8Array(J.length);let S=J.length;for(;S--;){const I=J[S];y[S]=Math.round(255*(0,A.Clamp)(I))}J=y}const V=I.sS.createRawTexture(J,y,S,5,!1,!L,1);I.renderer.setViewport(),I.renderer.applyEffectWrapper(I.wrapper),I.wrapper.effect._bindTexture("textureSampler",V),I.renderer.draw(),T?i.Tools.ToBlob(I.canvas,(y=>{const S=new FileReader;S.onload=y=>{const S=y.target.result;u&&u(S)},S.readAsArrayBuffer(y)}),K,l):i.Tools.EncodeScreenshotCanvasData(I.canvas,u,K,p,l),V.dispose()}))}function G(){var y;d?(d.wrapper.dispose(),d.renderer.dispose(),d.sS.dispose()):null===(y=F)||void 0===y||y.then((y=>{y.wrapper.dispose(),y.renderer.dispose(),y.sS.dispose()}));F=null,d=null}const p={DumpData:K,DumpDataAsync:u,DumpFramebuffer:J,Dispose:G};i.Tools.DumpData=K,i.Tools.DumpDataAsync=u,i.Tools.DumpFramebuffer=J},12295:(y,S,I)=>{I.r(S),I.d(S,{CreateScreenshot:()=>O,CreateScreenshotAsync:()=>f,CreateScreenshotUsingRenderTarget:()=>C,CreateScreenshotUsingRenderTargetAsync:()=>D,CreateScreenshotWithResizeAsync:()=>my,ScreenshotTools:()=>E});var V=I(12304),i=I(12382),A=I(12421),B=I(12282),d=I(12352),F=I(12425),J=I(12455),u=I(12321);class K extends F.i{static _GetDefines(y){if(!y)return null;return y.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(y,S){y?(this._webGPUReady=!0,S.push(Promise.all([I.e(54).then(I.bind(I,14829)),I.e(55).then(I.bind(I,14833))]))):S.push(Promise.all([I.e(56).then(I.bind(I,14838)),I.e(57).then(I.bind(I,14842))]))}constructor(y){const S={...arguments.length>2?arguments[2]:void 0,name:y,sS:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||J.c.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:K.VertexUrl,fragmentShader:K.FragmentUrl,uniforms:K.Uniforms};super({...S,defines:K._GetDefines(S.sS)}),this.texelSize=new u.Vector2(0,0)}bind(){let y=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(y),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}K.VertexUrl="fxaa",K.FragmentUrl="fxaa",K.Uniforms=["texelSize"];class G extends A.c{getClassName(){return"FxaaPostProcess"}constructor(y,S){let I=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3?arguments[3]:void 0,A=arguments.length>4?arguments[4]:void 0,B=arguments.length>5?arguments[5]:void 0,d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const F={uniforms:K.Uniforms,size:"number"===typeof S?S:void 0,camera:I,samplingMode:i||V.e.BILINEAR_SAMPLINGMODE,sS:A,reusable:B,textureType:d,...S};super(y,K.FragmentUrl,{effectWrapper:"number"!==typeof S&&S.effectWrapper?void 0:new K(y,A,F),...F}),this.onApplyObservable.add((y=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(y,S,I,V){return d.d.Parse((()=>new G(y.name,y.options,S,y.renderTargetSamplingMode,I.getEngine(),y.reusable)),y,I,V)}}(0,B.e)("BABYLON.FxaaPostProcess",G);var p=I(12151),L=I(12128),T=I(12544),l=I(12550),j=I(12216);let s=null;function O(y,S,I,V){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",A=arguments.length>5&&void 0!==arguments[5]&&arguments[5],B=arguments.length>6?arguments[6]:void 0,d=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:F,width:J}=o(y,S,I);if(!F||!J)return void p.b.Error("Invalid 'size' parameter !");S.Ey().activeCamera===S?y.onEndFrameObservable.addOnce((()=>{s||(s=document.createElement("canvas")),s.width=J,s.height=F;const S=s.getContext("2d"),I=y.getRenderingCanvas();if(!S||!I)return void p.b.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const u=I.width,K=I.height,G=s.width,T=s.height,l=G/u,j=T/K,O=d?Math.max(l,j):Math.min(l,j),f=u*O,my=K*O,C=(G-f)/2,D=(T-my)/2;S.drawImage(I,0,0,u,K,C,D,f,my),A?(L.Tools.EncodeScreenshotCanvasData(s,void 0,i,void 0,B),V&&V("")):L.Tools.EncodeScreenshotCanvasData(s,V,i,void 0,B)})):C(y,S,I,(y=>{if(A){const S=new Blob([y]);L.Tools.DownloadBlob(S),V&&V("")}else V&&V(y)}),i,1,y.getCreationOptions().antialias,void 0,void 0,void 0,void 0,B)}async function f(y,S,I){let V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",i=arguments.length>4?arguments[4]:void 0,A=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((B,d)=>{O(y,S,I,(y=>{"undefined"!==typeof y?B(y):d(new Error("Data is undefined"))}),V,void 0,i,A)}))}async function my(y,S,I,V){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",A=arguments.length>5?arguments[5]:void 0,B=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((d=>{O(y,S,{width:I,height:V},(()=>{d()}),i,!0,A,B)}))}function C(y,S,A,B){let d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",F=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,J=arguments.length>6&&void 0!==arguments[6]&&arguments[6],u=arguments.length>7?arguments[7]:void 0,K=arguments.length>8&&void 0!==arguments[8]&&arguments[8],L=arguments.length>9&&void 0!==arguments[9]&&arguments[9],s=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],O=arguments.length>11?arguments[11]:void 0,f=arguments.length>12?arguments[12]:void 0,my=arguments.length>13?arguments[13]:void 0;const{height:C,width:D,finalWidth:E,finalHeight:z}=o(y,S,A),r={width:D,height:C};if(!C||!D)return void p.b.Error("Invalid 'size' parameter !");y.skipFrameRender=!0;const h=y.getRenderWidth,n=y.getRenderHeight;y.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&y._currentRenderTarget?y._currentRenderTarget.width:D},y.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&y._currentRenderTarget?y._currentRenderTarget.height:C},y.onResizeObservable.hasObservers()&&y.onResizeObservable.notifyObservers(y);const v=S.Ey(),P=new i.b("screenShot",r,v,!1,!1,0,!1,V.e.BILINEAR_SAMPLINGMODE,void 0,L,void 0,void 0,void 0,F);P.renderList=v.meshes.slice(),P.samples=F,P.renderSprites=K,P.activeCamera=S,P.forceLayerMaskCheck=s,null===f||void 0===f||f(P);const q=my||T.DumpData,g=()=>{v.incrementRenderId(),v.resetCachedMaterial(),(0,j.d)((()=>P.isReadyForRendering()&&S.isReady(!0)),(()=>{y.onEndFrameObservable.addOnce((()=>{E===D&&z===C?P.readPixels(void 0,void 0,void 0,!1).then((y=>{q(D,C,y,B,d,u,!0,void 0,O),P.dispose()})):(y.isWebGPU?I.e(51).then(I.bind(I,14808)):I.e(52).then(I.bind(I,14815))).then((async()=>await(0,l.d)("pass",P.getInternalTexture(),v,void 0,void 0,void 0,E,z).then((S=>{y._readTexturePixels(S,E,z,-1,0,null,!0,!1,0,0).then((y=>{q(E,z,y,B,d,u,!0,void 0,O),S.dispose()}))}))))})),v.incrementRenderId(),v.resetCachedMaterial();const V=v.activeCamera,i=v.activeCameras,A=S.outputRenderTarget,F=v.spritesEnabled;v.activeCamera=S,v.activeCameras=null,S.outputRenderTarget=P,v.spritesEnabled=K;const J=v.meshes;v.meshes=P.renderList||v.meshes;try{v.render()}finally{v.activeCamera=V,v.activeCameras=i,S.outputRenderTarget=A,v.spritesEnabled=F,v.meshes=J,y.getRenderWidth=h,y.getRenderHeight=n,y.onResizeObservable.hasObservers()&&y.onResizeObservable.notifyObservers(y),S.getProjectionMatrix(!0),y.skipFrameRender=!1}}),(()=>{y.skipFrameRender=!1,y.getRenderWidth=h,y.getRenderHeight=n}))};if(J){const y=new G("antialiasing",1,v.activeCamera);P.addPostProcess(y),y.Hi=!0,y.onEffectCreatedObservable.addOnce((y=>{y.isReady()?g():y.onCompiled=()=>{g()}}))}else g()}async function D(y,S,I){let V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,A=arguments.length>5&&void 0!==arguments[5]&&arguments[5],B=arguments.length>6?arguments[6]:void 0,d=arguments.length>7&&void 0!==arguments[7]&&arguments[7],F=arguments.length>8&&void 0!==arguments[8]&&arguments[8],J=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],u=arguments.length>10?arguments[10]:void 0,K=arguments.length>11?arguments[11]:void 0,G=arguments.length>12?arguments[12]:void 0;return await new Promise(((p,L)=>{C(y,S,I,(y=>{"undefined"!==typeof y?p(y):L(new Error("Data is undefined"))}),V,i,A,B,d,F,J,u,K,G)}))}function o(y,S,I){let V=0,i=0,A=0,B=0;if("object"===typeof I){const d=I.precision?Math.abs(I.precision):1;I.width&&I.height?(V=I.height*d,i=I.width*d):I.width&&!I.height?(i=I.width*d,V=Math.round(i/y.getAspectRatio(S))):I.height&&!I.width?(V=I.height*d,i=Math.round(V*y.getAspectRatio(S))):(i=Math.round(y.getRenderWidth()*d),V=Math.round(i/y.getAspectRatio(S))),I.finalWidth&&I.finalHeight?(B=I.finalHeight,A=I.finalWidth):I.finalWidth&&!I.finalHeight?(A=I.finalWidth,B=Math.round(A/y.getAspectRatio(S))):I.finalHeight&&!I.finalWidth?(B=I.finalHeight,A=Math.round(B*y.getAspectRatio(S))):(A=i,B=V)}else isNaN(I)||(V=I,i=I,A=I,B=I);return i&&(i=Math.floor(i)),V&&(V=Math.floor(V)),A&&(A=Math.floor(A)),B&&(B=Math.floor(B)),{height:0|V,width:0|i,finalWidth:0|A,finalHeight:0|B}}const E={CreateScreenshot:O,CreateScreenshotAsync:f,CreateScreenshotWithResizeAsync:my,CreateScreenshotUsingRenderTarget:C,CreateScreenshotUsingRenderTargetAsync:D};L.Tools.CreateScreenshot=O,L.Tools.CreateScreenshotAsync=f,L.Tools.CreateScreenshotUsingRenderTarget=C,L.Tools.CreateScreenshotUsingRenderTargetAsync=D}}]);