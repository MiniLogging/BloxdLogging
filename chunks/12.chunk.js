"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[12],{10346:(r,L,M)=>{M.r(L),M.d(L,{_ExrTextureLoader:()=>D});var S=M(1027),T=M(977);const C=65536,y=14,s=65537,v=16384;var u,J;!function(r){r[r.NO_COMPRESSION=0]="NO_COMPRESSION",r[r.RLE_COMPRESSION=1]="RLE_COMPRESSION",r[r.ZIPS_COMPRESSION=2]="ZIPS_COMPRESSION",r[r.ZIP_COMPRESSION=3]="ZIP_COMPRESSION",r[r.PIZ_COMPRESSION=4]="PIZ_COMPRESSION",r[r.PXR24_COMPRESSION=5]="PXR24_COMPRESSION"}(u||(u={})),function(r){r[r.INCREASING_Y=0]="INCREASING_Y",r[r.DECREASING_Y=1]="DECREASING_Y"}(J||(J={}));const f=function(){const r=new ArrayBuffer(4),L=new Float32Array(r),M=new Uint32Array(r),S=new Uint32Array(512),T=new Uint32Array(512);for(let v=0;v<256;++v){const r=v-127;r<-27?(S[v]=0,S[256|v]=32768,T[v]=24,T[256|v]=24):r<-14?(S[v]=1024>>-r-14,S[256|v]=1024>>-r-14|32768,T[v]=-r-1,T[256|v]=-r-1):r<=15?(S[v]=r+15<<10,S[256|v]=r+15<<10|32768,T[v]=13,T[256|v]=13):r<128?(S[v]=31744,S[256|v]=64512,T[v]=24,T[256|v]=24):(S[v]=31744,S[256|v]=64512,T[v]=13,T[256|v]=13)}const C=new Uint32Array(2048),y=new Uint32Array(64),s=new Uint32Array(64);for(let v=1;v<1024;++v){let r=v<<13,L=0;for(;0===(8388608&r);)r<<=1,L-=8388608;r&=-8388609,L+=947912704,C[v]=r|L}for(let v=1024;v<2048;++v)C[v]=939524096+(v-1024<<13);for(let v=1;v<31;++v)y[v]=v<<23;y[31]=1199570944,y[32]=2147483648;for(let v=33;v<63;++v)y[v]=2147483648+(v-32<<23);y[63]=3347054592;for(let v=1;v<64;++v)32!==v&&(s[v]=1024);return{floatView:L,uint32View:M,baseTable:S,shiftTable:T,mantissaTable:C,exponentTable:y,offsetTable:s}}();function t(r,L){const M=new Uint8Array(r);let S=0;for(;0!=M[L.value+S];)S+=1;const T=(new TextDecoder).decode(M.slice(L.value,L.value+S));return L.value=L.value+S+1,T}function o(r,L){const M=r.getInt32(L.value,!0);return L.value+=4,M}function h(r,L){const M=r.getUint32(L.value,!0);return L.value+=4,M}function U(r,L){const M=r.getUint8(L.value);return L.value+=1,M}function G(r,L){const M=r.getUint16(L.value,!0);return L.value+=2,M}function W(r,L){const M=r[L.value];return L.value+=1,M}function l(r,L){let M;return M="getBigInt64"in DataView.prototype?Number(r.getBigInt64(L.value,!0)):r.getUint32(L.value+4,!0)+Number(r.getUint32(L.value,!0)<<32),L.value+=8,M}function e(r,L){const M=r.getFloat32(L.value,!0);return L.value+=4,M}function w(r,L){return function(r){const L=(31744&r)>>10,M=1023&r;return(r>>15?-1:1)*(L?31===L?M?NaN:1/0:Math.pow(2,L-15)*(1+M/1024):M/1024*6103515625e-14)}(G(r,L))}function j(r,L){return function(r){if(Math.abs(r)>65504)throw new Error("Value out of range.Consider using float instead of half-float.");r=(0,T.d)(r,-65504,65504),f.floatView[0]=r;const L=f.uint32View[0],M=L>>23&511;return f.baseTable[M]+((8388607&L)>>f.shiftTable[M])}(e(r,L))}function I(r,L,M,S){switch(M){case"string":case"stringvector":case"iccProfile":return function(r,L,M){const S=(new TextDecoder).decode(new Uint8Array(r).slice(L.value,L.value+M));return L.value=L.value+M,S}(r.buffer,L,S);case"chlist":return function(r,L,M){const S=L.value,T=[];for(;L.value<S+M-1;){const M=t(r.buffer,L),S=o(r,L),C=U(r,L);L.value+=3;const y=o(r,L),s=o(r,L);T.push({name:M,pixelType:S,pLinear:C,xSampling:y,ySampling:s})}return L.value+=1,T}(r,L,S);case"chromaticities":return function(r,L){return{redX:e(r,L),redY:e(r,L),greenX:e(r,L),greenY:e(r,L),blueX:e(r,L),blueY:e(r,L),whiteX:e(r,L),whiteY:e(r,L)}}(r,L);case"compression":return function(r,L){return U(r,L)}(r,L);case"box2i":return function(r,L){return{xMin:o(r,L),yMin:o(r,L),xMax:o(r,L),yMax:o(r,L)}}(r,L);case"lineOrder":return function(r,L){const M=U(r,L);return J[M]}(r,L);case"float":return e(r,L);case"v2f":return function(r,L){return[e(r,L),e(r,L)]}(r,L);case"v3f":return function(r,L){return[e(r,L),e(r,L),e(r,L)]}(r,L);case"int":return o(r,L);case"rational":return function(r,L){return[o(r,L),h(r,L)]}(r,L);case"timecode":return function(r,L){return[h(r,L),h(r,L)]}(r,L);case"preview":return L.value+=S,"skipped";default:return void(L.value+=S)}}function F(r){for(let L=1;L<r.length;L++){const M=r[L-1]+r[L]-128;r[L]=M}}function n(r,L){let M=0,S=Math.floor((r.length+1)/2),T=0;const C=r.length-1;for(;!(T>C)&&(L[T++]=r[M++],!(T>C));)L[T++]=r[S++]}function a(r,L,M,S,T){for(;M<r;)L=L<<8|W(S,T),M+=8;return{l:L>>(M-=r)&(1<<r)-1,c:L,lc:M}}function c(r,L,M,S){return{c:r=r<<8|W(M,S),lc:L+=8}}function P(r,L,M,S,T,C,y,s,v){if(r==L){if(S<8){const r=c(M,S,T,C);M=r.c,S=r.lc}let r=M>>(S-=8);if(r=new Uint8Array([r])[0],s.value+r>v)return null;const L=y[s.value-1];for(;r-- >0;)y[s.value++]=L}else{if(!(s.value<v))return null;y[s.value++]=r}return{c:M,lc:S}}const Z=new Array(59);function X(r,L,M,S,T,C){const y=L;let v=0,u=0;for(;S<=T;S++){if(y.value-L.value>M)return;let s=a(6,v,u,r,y);const J=s.l;if(v=s.c,u=s.lc,C[S]=J,63==J){if(y.value-L.value>M)throw new Error("Error in HufUnpackEncTable");s=a(8,v,u,r,y);let J=s.l+6;if(v=s.c,u=s.lc,S+J>T+1)throw new Error("Error in HufUnpackEncTable");for(;J--;)C[S++]=0;S--}else if(J>=59){let r=J-59+2;if(S+r>T+1)throw new Error("Error in HufUnpackEncTable");for(;r--;)C[S++]=0;S--}}!function(r){for(let M=0;M<=58;++M)Z[M]=0;for(let M=0;M<s;++M)Z[r[M]]+=1;let L=0;for(let M=58;M>0;--M){const r=L+Z[M]>>1;Z[M]=L,L=r}for(let M=0;M<s;++M){const L=r[M];L>0&&(r[M]=L|Z[L]++<<6)}}(C)}function p(r){return 63&r}function m(r){return r>>6}function d(r,L,M,S,T,C){const u=M.value,J=h(L,M),f=h(L,M);M.value+=4;const t=h(L,M);if(M.value+=4,J<0||J>=s||f<0||f>=s)throw new Error("Wrong HUF_ENCSIZE");const o=new Array(s),U=new Array(v);!function(r){for(let L=0;L<v;L++)r[L]={},r[L].len=0,r[L].lit=0,r[L].p=null}(U);if(X(r,M,S-(M.value-u),J,f,o),t>8*(S-(M.value-u)))throw new Error("Wrong hufUncompress");!function(r,L,M,S){for(;L<=M;L++){const M=m(r[L]),T=p(r[L]);if(M>>T)throw new Error("Invalid table entry");if(T>y){const r=S[M>>T-y];if(r.len)throw new Error("Invalid table entry");if(r.lit++,r.p){const L=r.p;r.p=new Array(r.lit);for(let M=0;M<r.lit-1;++M)r.p[M]=L[M]}else r.p=new Array(1);r.p[r.lit-1]=L}else if(T){let r=0;for(let C=1<<y-T;C>0;C--){const C=S[(M<<y-T)+r];if(C.len||C.p)throw new Error("Invalid table entry");C.len=T,C.lit=L,r++}}}}(o,J,f,U),function(r,L,M,S,T,C,s,v,u){let J=0,f=0;const t=s,o=Math.trunc(S.value+(T+7)/8);for(;S.value<o;){let T=c(J,f,M,S);for(J=T.c,f=T.lc;f>=y;){const s=L[J>>f-y&16383];if(s.len){f-=s.len;const r=P(s.lit,C,J,f,M,S,v,u,t);r&&(J=r.c,f=r.lc)}else{if(!s.p)throw new Error("hufDecode issues");let L;for(L=0;L<s.lit;L++){const y=p(r[s.p[L]]);for(;f<y&&S.value<o;)T=c(J,f,M,S),J=T.c,f=T.lc;if(f>=y&&m(r[s.p[L]])==(J>>f-y&(1<<y)-1)){f-=y;const r=P(s.p[L],C,J,f,M,S,v,u,t);r&&(J=r.c,f=r.lc);break}}if(L==s.lit)throw new Error("HufDecode issues")}}}const h=8-T&7;for(J>>=h,f-=h;f>0;){const r=L[J<<y-f&16383];if(!r.len)throw new Error("HufDecode issues");{f-=r.len;const L=P(r.lit,C,J,f,M,S,v,u,t);L&&(J=L.c,f=L.lc)}}}(o,U,r,M,t,f,C,T,{value:0})}function q(r){return 65535&r}function x(r){const L=q(r);return L>32767?L-65536:L}function N(r,L){const M=x(r),S=x(L),T=M+(1&S)+(S>>1);return{a:T,b:T-S}}function K(r,L){const M=q(r),S=q(L),T=M-(S>>1)&65535;return{a:S+T-32768&65535,b:T}}function V(r,L,M,S,T,C,y){const s=y<16384,v=M>T?T:M;let u,J,f=1;for(;f<=v;)f<<=1;for(f>>=1,u=f,f>>=1;f>=1;){J=0;const y=J+C*(T-u),v=C*f,t=C*u,o=S*f,h=S*u;let U,G,W,l;for(;J<=y;J+=t){let T=J;const C=J+S*(M-u);for(;T<=C;T+=h){const M=T+o,S=T+v,C=S+o;if(s){let y=N(r[T+L],r[S+L]);U=y.a,W=y.b,y=N(r[M+L],r[C+L]),G=y.a,l=y.b,y=N(U,G),r[T+L]=y.a,r[M+L]=y.b,y=N(W,l),r[S+L]=y.a,r[C+L]=y.b}else{let y=K(r[T+L],r[S+L]);U=y.a,W=y.b,y=K(r[M+L],r[C+L]),G=y.a,l=y.b,y=K(U,G),r[T+L]=y.a,r[M+L]=y.b,y=K(W,l),r[S+L]=y.a,r[C+L]=y.b}}if(M&f){const M=T+v;let S;S=s?N(r[T+L],r[M+L]):K(r[T+L],r[M+L]),U=S.a,r[M+L]=S.b,r[T+L]=U}}if(T&f){let T=J;const C=J+S*(M-u);for(;T<=C;T+=h){const M=T+o;let S;S=s?N(r[T+L],r[M+L]):K(r[T+L],r[M+L]),U=S.a,r[M+L]=S.b,r[T+L]=U}}u=f,f>>=1}return J}function Q(r){return new DataView(r.array.buffer,r.offset.value,r.size)}function A(r){const L=r.viewer.buffer.slice(r.offset.value,r.offset.value+r.size),M=new Uint8Array(function(r){let L=r.byteLength;const M=new Array;let S=0;const T=new DataView(r);for(;L>0;){const r=T.getInt8(S++);if(r<0){const C=-r;L-=C+1;for(let r=0;r<C;r++)M.push(T.getUint8(S++))}else{const C=r;L-=2;const y=T.getUint8(S++);for(let r=0;r<C+1;r++)M.push(y)}}return M}(L)),S=new Uint8Array(M.length);return F(M),n(M,S),new DataView(S.buffer)}function H(r){const L=r.array.slice(r.offset.value,r.offset.value+r.size),M=fflate.unzlibSync(L),S=new Uint8Array(M.length);return F(M),n(M,S),new DataView(S.buffer)}function O(r){const L=r.array.slice(r.offset.value,r.offset.value+r.size),M=fflate.unzlibSync(L),S=r.lines*r.channels*r.width,T=1==r.type?new Uint16Array(S):new Uint32Array(S);let C=0,y=0;const s=new Array(4);for(let v=0;v<r.lines;v++)for(let L=0;L<r.channels;L++){let L=0;switch(r.type){case 1:s[0]=C,s[1]=s[0]+r.width,C=s[1]+r.width;for(let S=0;S<r.width;++S){L+=M[s[0]++]<<8|M[s[1]++],T[y]=L,y++}break;case 2:s[0]=C,s[1]=s[0]+r.width,s[2]=s[1]+r.width,C=s[2]+r.width;for(let S=0;S<r.width;++S){L+=M[s[0]++]<<24|M[s[1]++]<<16|M[s[2]++]<<8,T[y]=L,y++}}}return new DataView(T.buffer)}function R(r){const L=r.viewer,M={value:r.offset.value},S=new Uint16Array(r.width*r.scanlineBlockSize*(r.channels*r.type)),T=new Uint8Array(8192);let y=0;const s=new Array(r.channels);for(let C=0;C<r.channels;C++)s[C]={},s[C].start=y,s[C].end=s[C].start,s[C].nx=r.width,s[C].ny=r.lines,s[C].size=r.type,y+=s[C].nx*s[C].ny*s[C].size;const v=G(L,M),u=G(L,M);if(u>=8192)throw new Error("Wrong PIZ_COMPRESSION BITMAP_SIZE");if(v<=u)for(let C=0;C<u-v+1;C++)T[C+v]=U(L,M);const J=new Uint16Array(C),f=function(r,L){let M=0;for(let T=0;T<C;++T)(0==T||r[T>>3]&1<<(7&T))&&(L[M++]=T);const S=M-1;for(;M<C;)L[M++]=0;return S}(T,J),t=h(L,M);d(r.array,L,M,t,S,y);for(let C=0;C<r.channels;++C){const r=s[C];for(let L=0;L<s[C].size;++L)V(S,r.start+L,r.nx,r.size,r.ny,r.nx*r.size,f)}!function(r,L,M){for(let S=0;S<M;++S)L[S]=r[L[S]]}(J,S,y);let o=0;const W=new Uint8Array(S.buffer.byteLength);for(let C=0;C<r.lines;C++)for(let L=0;L<r.channels;L++){const r=s[L],M=r.nx*r.size,T=new Uint8Array(S.buffer,2*r.end,2*M);W.set(T,o),o+=2*M,r.end+=M}return new DataView(W.buffer)}var z,g=M(1120);!function(r){r[r.Float=0]="Float",r[r.HalfFloat=1]="HalfFloat"}(z||(z={}));class E{}E.DefaultOutputType=z.HalfFloat,E.FFLATEUrl="https://unpkg.com/fflate@0.8.2";class D{constructor(){this.supportCascades=!1}loadCubeData(r,L,M,S,T){throw".exr not supported in Cube."}async loadData(r,L,M){const T=new DataView(r.buffer),C={value:0},y=function(r,L){if(20000630!=r.getUint32(0,!0))throw new Error("Incorrect OpenEXR format");const M=r.getUint8(4),T=r.getUint8(5),C={singleTile:!!(2&T),longName:!!(4&T),deepFormat:!!(8&T),multiPart:!!(16&T)};L.value=8;const y={};let s=!0;for(;s;){const M=t(r.buffer,L);if(M){const T=t(r.buffer,L),C=I(r,L,T,h(r,L));void 0===C?S.c.Warn(`Unknown header attribute type ${T}'.`):y[M]=C}else s=!1}if(0!=(-5&T))throw new Error("Unsupported file format");return{version:M,spec:C,...y}}(T,C),s=await async function(r,L,M,S){const T={size:0,viewer:L,array:new Uint8Array(L.buffer),offset:M,width:r.dataWindow.xMax-r.dataWindow.xMin+1,height:r.dataWindow.yMax-r.dataWindow.yMin+1,channels:r.channels.length,channelLineOffsets:{},scanOrder:()=>0,bytesPerLine:0,outLineWidth:0,lines:0,scanlineBlockSize:0,inputSize:null,type:0,uncompress:null,getter:()=>0,format:5,outputChannels:0,decodeChannels:{},blockCount:null,byteArray:null,linearSpace:!1,textureType:0};switch(r.compression){case u.NO_COMPRESSION:T.lines=1,T.uncompress=Q;break;case u.RLE_COMPRESSION:T.lines=1,T.uncompress=A;break;case u.ZIPS_COMPRESSION:T.lines=1,T.uncompress=H,await g.g.LoadScriptAsync(E.FFLATEUrl);break;case u.ZIP_COMPRESSION:T.lines=16,T.uncompress=H,await g.g.LoadScriptAsync(E.FFLATEUrl);break;case u.PIZ_COMPRESSION:T.lines=32,T.uncompress=R;break;case u.PXR24_COMPRESSION:T.lines=16,T.uncompress=O,await g.g.LoadScriptAsync(E.FFLATEUrl);break;default:throw new Error(u[r.compression]+" is unsupported")}T.scanlineBlockSize=T.lines;const C={};for(const u of r.channels)switch(u.name){case"Y":case"R":case"G":case"B":case"A":C[u.name]=!0,T.type=u.pixelType}let y=!1;if(C.R&&C.G&&C.B)y=!C.A,T.outputChannels=4,T.decodeChannels={R:0,G:1,B:2,A:3};else{if(!C.Y)throw new Error("EXRLoader.parse: file contains unsupported data channels.");T.outputChannels=1,T.decodeChannels={Y:0}}if(1===T.type)switch(S){case z.Float:T.getter=w,T.inputSize=2;break;case z.HalfFloat:T.getter=G,T.inputSize=2}else{if(2!==T.type)throw new Error("Unsupported pixelType "+T.type+" for "+r.compression);switch(S){case z.Float:T.getter=e,T.inputSize=4;break;case z.HalfFloat:T.getter=j,T.inputSize=4}}T.blockCount=T.height/T.scanlineBlockSize;for(let u=0;u<T.blockCount;u++)l(L,M);const s=T.width*T.height*T.outputChannels;switch(S){case z.Float:T.byteArray=new Float32Array(s),T.textureType=1,y&&T.byteArray.fill(1,0,s);break;case z.HalfFloat:T.byteArray=new Uint16Array(s),T.textureType=2,y&&T.byteArray.fill(15360,0,s);break;default:throw new Error("Unsupported type: "+S)}let v=0;for(const u of r.channels)void 0!==T.decodeChannels[u.name]&&(T.channelLineOffsets[u.name]=v*T.width),v+=2*u.pixelType;return T.bytesPerLine=T.width*v,T.outLineWidth=T.width*T.outputChannels,"INCREASING_Y"===r.lineOrder?T.scanOrder=r=>r:T.scanOrder=r=>T.height-1-r,4==T.outputChannels?(T.format=5,T.linearSpace=!0):(T.format=6,T.linearSpace=!1),T}(y,T,C,E.DefaultOutputType);!function(r,L,M,S){const T={value:0};for(let C=0;C<r.height/r.scanlineBlockSize;C++){const y=o(M,S)-L.dataWindow.yMin;r.size=h(M,S),r.lines=y+r.scanlineBlockSize>r.height?r.height-y:r.scanlineBlockSize;const s=r.size<r.lines*r.bytesPerLine&&r.uncompress?r.uncompress(r):Q(r);S.value+=r.size;for(let M=0;M<r.scanlineBlockSize;M++){const S=C*r.scanlineBlockSize,y=M+r.scanOrder(S);if(y>=r.height)continue;const v=M*r.bytesPerLine,u=(r.height-1-y)*r.outLineWidth;for(let M=0;M<r.channels;M++){const S=L.channels[M].name,C=r.channelLineOffsets[S],y=r.decodeChannels[S];if(void 0!==y){T.value=v+C;for(let L=0;L<r.width;L++){const M=u+L*r.outputChannels+y;r.byteArray&&(r.byteArray[M]=r.getter(s,T))}}}}}}(s,y,T,C);M(y.dataWindow.xMax-y.dataWindow.xMin+1,y.dataWindow.yMax-y.dataWindow.yMin+1,L.generateMipMaps,!1,(()=>{const r=L.getEngine();L.format=y.format,L.type=s.textureType,L.invertY=!1,L._gammaSpace=!y.linearSpace,s.byteArray&&r._uploadDataToTextureDirectly(L,s.byteArray,0,0,void 0,!0)}))}}}}]);