"use strict";(self.fkqm0epoq5=self.fkqm0epoq5||[]).push([[12,20],{11940:(D,l,G)=>{G.r(l),G.d(l,{Dispose:()=>j,DumpData:()=>g,DumpDataAsync:()=>n,DumpFramebuffer:()=>R,DumpTools:()=>e});var V=G(11822),N=G(11530),M=G(11728),b=G(11571);let X,t=null;async function R(D,l,G,V){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",M=arguments.length>5?arguments[5]:void 0,b=arguments.length>6?arguments[6]:void 0;const X=await G.readPixels(0,0,D,l);g(D,l,new Uint8Array(X.buffer),V,N,M,!0,void 0,b)}async function n(D,l,G){let V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",N=arguments.length>4?arguments[4]:void 0,M=arguments.length>5&&void 0!==arguments[5]&&arguments[5],b=arguments.length>6&&void 0!==arguments[6]&&arguments[6],X=arguments.length>7?arguments[7]:void 0;return await new Promise((t=>{g(D,l,G,(D=>t(D)),V,N,M,b,X)}))}function g(D,l,R,n){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",e=arguments.length>5?arguments[5]:void 0,K=arguments.length>6&&void 0!==arguments[6]&&arguments[6],F=arguments.length>7&&void 0!==arguments[7]&&arguments[7],d=arguments.length>8?arguments[8]:void 0;(async function(){return t||(t=new Promise(((D,l)=>{let N,M=null;const t={Xb:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(G.bind(G,11851)).then((R=>{let{ThinEngine:n}=R;const g=b.d.Instances.length;try{N=new OffscreenCanvas(100,100),M=new n(N,!1,t)}catch(F){var e;g<b.d.Instances.length&&(null===(e=b.d.Instances.pop())||void 0===e||e.dispose()),N=document.createElement("canvas"),M=new n(N,!1,t)}b.d.Instances.pop(),b.d.OnEnginesDisposedObservable.add((D=>{M&&D!==M&&!M.X&&0===b.d.Instances.length&&j()})),M.getCaps().parallelShaderCompile=void 0;const K=new V.b(M);G.e(52).then(G.bind(G,14169)).then((G=>{let{passPixelShader:b}=G;if(!M)return void l("Engine is not defined");const t=new V.e({el:M,name:b.name,fragmentShader:b.shader,samplerNames:["textureSampler"]});X={canvas:N,el:M,renderer:K,wrapper:t},D(X)}))})).catch(l)}))),await t})().then((G=>{if(G.el.setSize(D,l,!0),R instanceof Float32Array){const D=new Uint8Array(R.length);let l=R.length;for(;l--;){const G=R[l];D[l]=Math.round(255*(0,M.Clamp)(G))}R=D}const V=G.el.createRawTexture(R,D,l,5,!1,!K,1);G.renderer.setViewport(),G.renderer.applyEffectWrapper(G.wrapper),G.wrapper.effect._bindTexture("textureSampler",V),G.renderer.draw(),F?N.Tools.ToBlob(G.canvas,(D=>{const l=new FileReader;l.onload=D=>{const l=D.target.result;n&&n(l)},l.readAsArrayBuffer(D)}),g,d):N.Tools.EncodeScreenshotCanvasData(G.canvas,n,g,e,d),V.dispose()}))}function j(){var D;X?(X.wrapper.dispose(),X.renderer.dispose(),X.el.dispose()):null===(D=t)||void 0===D||D.then((D=>{D.wrapper.dispose(),D.renderer.dispose(),D.el.dispose()}));t=null,X=null}const e={DumpData:g,DumpDataAsync:n,DumpFramebuffer:R,Dispose:j};N.Tools.DumpData=g,N.Tools.DumpDataAsync=n,N.Tools.DumpFramebuffer=R},11682:(D,l,G)=>{G.r(l),G.d(l,{CreateScreenshot:()=>x,CreateScreenshotAsync:()=>r,CreateScreenshotUsingRenderTarget:()=>L,CreateScreenshotUsingRenderTargetAsync:()=>u,CreateScreenshotWithResizeAsync:()=>o,ScreenshotTools:()=>I});var V=G(11686),N=G(11776),M=G(11820),b=G(11667),X=G(11739),t=G(11822),R=G(11843),n=G(11710);class g extends t.e{static _GetDefines(D){if(!D)return null;return D.extractDriverInfo().toLowerCase().indexOf("mali")>-1?"#define MALI 1\n":null}_gatherImports(D,l){D?(this._webGPUReady=!0,l.push(Promise.all([G.e(54).then(G.bind(G,14179)),G.e(55).then(G.bind(G,14187))]))):l.push(Promise.all([G.e(56).then(G.bind(G,14191)),G.e(57).then(G.bind(G,14200))]))}constructor(D){const l={...arguments.length>2?arguments[2]:void 0,name:D,el:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null)||R.e.LastCreatedEngine,useShaderStore:!0,useAsPostProcess:!0,vertexShader:g.VertexUrl,fragmentShader:g.FragmentUrl,uniforms:g.Uniforms};super({...l,defines:g._GetDefines(l.el)}),this.texelSize=new n.Vector2(0,0)}bind(){let D=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super.bind(D),this._drawWrapper.effect.setFloat2("texelSize",this.texelSize.x,this.texelSize.y)}}g.VertexUrl="fxaa",g.FragmentUrl="fxaa",g.Uniforms=["texelSize"];class j extends M.c{getClassName(){return"FxaaPostProcess"}constructor(D,l){let G=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,N=arguments.length>3?arguments[3]:void 0,M=arguments.length>4?arguments[4]:void 0,b=arguments.length>5?arguments[5]:void 0,X=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const t={uniforms:g.Uniforms,size:"number"===typeof l?l:void 0,camera:G,samplingMode:N||V.b.BILINEAR_SAMPLINGMODE,el:M,reusable:b,textureType:X,...l};super(D,g.FragmentUrl,{effectWrapper:"number"!==typeof l&&l.effectWrapper?void 0:new g(D,M,t),...t}),this.onApplyObservable.add((D=>{this._effectWrapper.texelSize=this.texelSize}))}static _Parse(D,l,G,V){return X.c.Parse((()=>new j(D.name,D.options,l,D.renderTargetSamplingMode,G.getEngine(),D.reusable)),D,G,V)}}(0,b.c)("BABYLON.FxaaPostProcess",j);var e=G(11546),K=G(11530),F=G(11940),d=G(11948),H=G(11609);let h=null;function x(D,l,G,V){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",M=arguments.length>5&&void 0!==arguments[5]&&arguments[5],b=arguments.length>6?arguments[6]:void 0,X=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const{height:t,width:R}=B(D,l,G);if(!t||!R)return void e.d.Error("Invalid 'size' parameter !");l.uD().activeCamera===l?D.onEndFrameObservable.addOnce((()=>{h||(h=document.createElement("canvas")),h.width=R,h.height=t;const l=h.getContext("2d"),G=D.getRenderingCanvas();if(!l||!G)return void e.d.Error("Failed to create screenshot. Rendering context or rendering canvas is not available.");const n=G.width,g=G.height,j=h.width,F=h.height,d=j/n,H=F/g,x=X?Math.max(d,H):Math.min(d,H),r=n*x,o=g*x,L=(j-r)/2,u=(F-o)/2;l.drawImage(G,0,0,n,g,L,u,r,o),M?(K.Tools.EncodeScreenshotCanvasData(h,void 0,N,void 0,b),V&&V("")):K.Tools.EncodeScreenshotCanvasData(h,V,N,void 0,b)})):L(D,l,G,(D=>{if(M){const l=new Blob([D]);K.Tools.DownloadBlob(l),V&&V("")}else V&&V(D)}),N,1,D.getCreationOptions().antialias,void 0,void 0,void 0,void 0,b)}async function r(D,l,G){let V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",N=arguments.length>4?arguments[4]:void 0,M=arguments.length>5&&void 0!==arguments[5]&&arguments[5];return await new Promise(((b,X)=>{x(D,l,G,(D=>{"undefined"!==typeof D?b(D):X(new Error("Data is undefined"))}),V,void 0,N,M)}))}async function o(D,l,G,V){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",M=arguments.length>5?arguments[5]:void 0,b=arguments.length>6&&void 0!==arguments[6]&&arguments[6];return await new Promise((X=>{x(D,l,{width:G,height:V},(()=>{X()}),N,!0,M,b)}))}function L(D,l,M,b){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",t=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,R=arguments.length>6&&void 0!==arguments[6]&&arguments[6],n=arguments.length>7?arguments[7]:void 0,g=arguments.length>8&&void 0!==arguments[8]&&arguments[8],K=arguments.length>9&&void 0!==arguments[9]&&arguments[9],h=!(arguments.length>10&&void 0!==arguments[10])||arguments[10],x=arguments.length>11?arguments[11]:void 0,r=arguments.length>12?arguments[12]:void 0,o=arguments.length>13?arguments[13]:void 0;const{height:L,width:u,finalWidth:I,finalHeight:W}=B(D,l,M),i={width:u,height:L};if(!L||!u)return void e.d.Error("Invalid 'size' parameter !");D.skipFrameRender=!0;const y=D.getRenderWidth,S=D.getRenderHeight;D.getRenderWidth=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&D._currentRenderTarget?D._currentRenderTarget.width:u},D.getRenderHeight=function(){return!(arguments.length>0&&void 0!==arguments[0]&&arguments[0])&&D._currentRenderTarget?D._currentRenderTarget.height:L},D.onResizeObservable.hasObservers()&&D.onResizeObservable.notifyObservers(D);const O=l.uD(),s=new N.d("screenShot",i,O,!1,!1,0,!1,V.b.BILINEAR_SAMPLINGMODE,void 0,K,void 0,void 0,void 0,t);s.renderList=O.meshes.slice(),s.samples=t,s.renderSprites=g,s.activeCamera=l,s.forceLayerMaskCheck=h,null===r||void 0===r||r(s);const U=o||F.DumpData,f=()=>{O.incrementRenderId(),O.resetCachedMaterial(),(0,H.g)((()=>s.isReadyForRendering()&&l.isReady(!0)),(()=>{D.onEndFrameObservable.addOnce((()=>{I===u&&W===L?s.readPixels(void 0,void 0,void 0,!1).then((D=>{U(u,L,D,b,X,n,!0,void 0,x),s.dispose()})):(D.isWebGPU?G.e(51).then(G.bind(G,14160)):G.e(52).then(G.bind(G,14169))).then((async()=>await(0,d.e)("pass",s.getInternalTexture(),O,void 0,void 0,void 0,I,W).then((l=>{D._readTexturePixels(l,I,W,-1,0,null,!0,!1,0,0).then((D=>{U(I,W,D,b,X,n,!0,void 0,x),l.dispose()}))}))))})),O.incrementRenderId(),O.resetCachedMaterial();const V=O.activeCamera,N=O.activeCameras,M=l.outputRenderTarget,t=O.spritesEnabled;O.activeCamera=l,O.activeCameras=null,l.outputRenderTarget=s,O.spritesEnabled=g;const R=O.meshes;O.meshes=s.renderList||O.meshes;try{O.render()}finally{O.activeCamera=V,O.activeCameras=N,l.outputRenderTarget=M,O.spritesEnabled=t,O.meshes=R,D.getRenderWidth=y,D.getRenderHeight=S,D.onResizeObservable.hasObservers()&&D.onResizeObservable.notifyObservers(D),l.getProjectionMatrix(!0),D.skipFrameRender=!1}}),(()=>{D.skipFrameRender=!1,D.getRenderWidth=y,D.getRenderHeight=S}))};if(R){const D=new j("antialiasing",1,O.activeCamera);s.addPostProcess(D),D.Rb=!0,D.onEffectCreatedObservable.addOnce((D=>{D.isReady()?f():D.onCompiled=()=>{f()}}))}else f()}async function u(D,l,G){let V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,M=arguments.length>5&&void 0!==arguments[5]&&arguments[5],b=arguments.length>6?arguments[6]:void 0,X=arguments.length>7&&void 0!==arguments[7]&&arguments[7],t=arguments.length>8&&void 0!==arguments[8]&&arguments[8],R=!(arguments.length>9&&void 0!==arguments[9])||arguments[9],n=arguments.length>10?arguments[10]:void 0,g=arguments.length>11?arguments[11]:void 0,j=arguments.length>12?arguments[12]:void 0;return await new Promise(((e,K)=>{L(D,l,G,(D=>{"undefined"!==typeof D?e(D):K(new Error("Data is undefined"))}),V,N,M,b,X,t,R,n,g,j)}))}function B(D,l,G){let V=0,N=0,M=0,b=0;if("object"===typeof G){const X=G.precision?Math.abs(G.precision):1;G.width&&G.height?(V=G.height*X,N=G.width*X):G.width&&!G.height?(N=G.width*X,V=Math.round(N/D.getAspectRatio(l))):G.height&&!G.width?(V=G.height*X,N=Math.round(V*D.getAspectRatio(l))):(N=Math.round(D.getRenderWidth()*X),V=Math.round(N/D.getAspectRatio(l))),G.finalWidth&&G.finalHeight?(b=G.finalHeight,M=G.finalWidth):G.finalWidth&&!G.finalHeight?(M=G.finalWidth,b=Math.round(M/D.getAspectRatio(l))):G.finalHeight&&!G.finalWidth?(b=G.finalHeight,M=Math.round(b*D.getAspectRatio(l))):(M=N,b=V)}else isNaN(G)||(V=G,N=G,M=G,b=G);return N&&(N=Math.floor(N)),V&&(V=Math.floor(V)),M&&(M=Math.floor(M)),b&&(b=Math.floor(b)),{height:0|V,width:0|N,finalWidth:0|M,finalHeight:0|b}}const I={CreateScreenshot:x,CreateScreenshotAsync:r,CreateScreenshotWithResizeAsync:o,CreateScreenshotUsingRenderTarget:L,CreateScreenshotUsingRenderTargetAsync:u};K.Tools.CreateScreenshot=x,K.Tools.CreateScreenshotAsync=r,K.Tools.CreateScreenshotUsingRenderTarget=L,K.Tools.CreateScreenshotUsingRenderTargetAsync=u}}]);