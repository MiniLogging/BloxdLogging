"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[12],{2237:(v,d,Q)=>{Q.r(d),Q.d(d,{Dispose:()=>z,DumpData:()=>y,DumpDataAsync:()=>u,DumpFramebuffer:()=>C,DumpTools:()=>B});var n=Q(2061),T=Q(475),L=Q(664),e=Q(508);let F,r=null;async function C(v,d,Q,n){let T=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",L=arguments.length>5?arguments[5]:void 0,e=arguments.length>6?arguments[6]:void 0;const F=await Q.readPixels(0,0,v,d);y(v,d,new Uint8Array(F.buffer),n,T,L,!0,void 0,e)}async function u(v,d,Q){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",T=arguments.length>4?arguments[4]:void 0,L=arguments.length>5&&void 0!==arguments[5]&&arguments[5],e=arguments.length>6&&void 0!==arguments[6]&&arguments[6],F=arguments.length>7?arguments[7]:void 0;return await new Promise((r=>{y(v,d,Q,(v=>r(v)),n,T,L,e,F)}))}function y(v,d,C,u){let y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",B=arguments.length>5?arguments[5]:void 0,X=arguments.length>6&&void 0!==arguments[6]&&arguments[6],m=arguments.length>7&&void 0!==arguments[7]&&arguments[7],V=arguments.length>8?arguments[8]:void 0;(async function(){return r||(r=new Promise(((v,d)=>{let T,L=null;const r={Tk:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(Q.bind(Q,2079)).then((C=>{let{ThinEngine:u}=C;const y=e.c.Instances.length;try{T=new OffscreenCanvas(100,100),L=new u(T,!1,r)}catch(m){var B;y<e.c.Instances.length&&(null===(B=e.c.Instances.pop())||void 0===B||B.dispose()),T=document.createElement("canvas"),L=new u(T,!1,r)}e.c.Instances.pop(),e.c.OnEnginesDisposedObservable.add((v=>{L&&v!==L&&!L.u&&0===e.c.Instances.length&&z()})),L.getCaps().parallelShaderCompile=void 0;const X=new n.c(L);Q.e(46).then(Q.bind(Q,13497)).then((Q=>{let{passPixelShader:e}=Q;if(!L)return void d("Engine is not defined");const r=new n.g({Wj:L,name:e.name,fragmentShader:e.shader,samplerNames:["textureSampler"]});F={canvas:T,Wj:L,renderer:X,wrapper:r},v(F)}))})).catch(d)}))),await r})().then((Q=>{if(Q.Wj.setSize(v,d,!0),C instanceof Float32Array){const v=new Uint8Array(C.length);let d=C.length;for(;d--;){const Q=C[d];v[d]=Math.round(255*(0,L.Clamp)(Q))}C=v}const n=Q.Wj.createRawTexture(C,v,d,5,!1,!X,1);Q.renderer.setViewport(),Q.renderer.applyEffectWrapper(Q.wrapper),Q.wrapper.effect._bindTexture("textureSampler",n),Q.renderer.draw(),m?T.e.ToBlob(Q.canvas,(v=>{const d=new FileReader;d.onload=v=>{const d=v.target.result;u&&u(d)},d.readAsArrayBuffer(v)}),y,V):T.e.EncodeScreenshotCanvasData(Q.canvas,u,y,B,V),n.dispose()}))}function z(){var v;F?(F.wrapper.dispose(),F.renderer.dispose(),F.Wj.dispose()):null===(v=r)||void 0===v||v.then((v=>{v.wrapper.dispose(),v.renderer.dispose(),v.Wj.dispose()}));r=null,F=null}const B={DumpData:y,DumpDataAsync:u,DumpFramebuffer:C,Dispose:z};T.e.DumpData=y,T.e.DumpDataAsync=u,T.e.DumpFramebuffer=C}}]);