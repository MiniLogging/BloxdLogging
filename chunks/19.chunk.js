"use strict";(self["9jl1vn4ei5r"]=self["9jl1vn4ei5r"]||[]).push([[19],{11857:(M,p,b)=>{b.d(p,{d:()=>k,f:()=>u});var Q=b(11861),q=b(11637),B=b(11863);class k{get O(){return this._isDisposed}constructor(M,p,b){let q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,B=arguments.length>4&&void 0!==arguments[4]&&arguments[4],k=arguments.length>5&&void 0!==arguments[5]&&arguments[5],u=arguments.length>6&&void 0!==arguments[6]&&arguments[6],T=arguments.length>7?arguments[7]:void 0,O=arguments.length>8?arguments[8]:void 0;this._isAlreadyOwned=!1,this._isDisposed=!1,M&&M.RM?this._engine=M.RM().getEngine():this._engine=M,this._updatable=b,this._instanced=k,this._divisor=T||1,this._label=O,p instanceof Q.c?(this._data=null,this._buffer=p):(this._data=p,this._buffer=null),this.byteStride=u?q:q*Float32Array.BYTES_PER_ELEMENT,B||this.create()}createVertexBuffer(M,p,b,Q,q){let B=arguments.length>5&&void 0!==arguments[5]&&arguments[5],k=arguments.length>6?arguments[6]:void 0;const T=B?p:p*Float32Array.BYTES_PER_ELEMENT,O=Q?B?Q:Q*Float32Array.BYTES_PER_ELEMENT:this.byteStride;return new u(this._engine,this,M,this._updatable,!0,O,void 0===q?this._instanced:q,T,b,void 0,void 0,!0,this._divisor||k)}isUpdatable(){return this._updatable}getData(){return this._data}getBuffer(){return this._buffer}getStrideSize(){return this.byteStride/Float32Array.BYTES_PER_ELEMENT}create(){let M=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;!M&&this._buffer||(M=M||this._data,M&&(this._buffer?this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,M),this._data=M):this._updatable?(this._buffer=this._engine.createDynamicVertexBuffer(M,this._label),this._data=M):this._buffer=this._engine.createVertexBuffer(M,void 0,this._label)))}_rebuild(){if(this._data)this._buffer=null,this.create(this._data);else{if(!this._buffer)return;if(this._buffer.fp>0)return void(this._updatable?this._buffer=this._engine.createDynamicVertexBuffer(this._buffer.fp,this._label):this._buffer=this._engine.createVertexBuffer(this._buffer.fp,void 0,this._label));q.c.Warn(`Missing data for buffer "${this._label}" ${this._buffer?"(uniqueId: "+this._buffer.uniqueId+")":""}. Buffer reconstruction failed.`),this._buffer=null}}update(M){this.create(M)}updateDirectly(M,p,b){let Q=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this._buffer&&this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,M,Q?p:p*Float32Array.BYTES_PER_ELEMENT,b?b*this.byteStride:void 0),this._data=0===p&&void 0===b?M:null)}_increaseReferences(){this._buffer&&(this._isAlreadyOwned?this._buffer.references++:this._isAlreadyOwned=!0)}dispose(){this._buffer&&this._engine._releaseBuffer(this._buffer)&&(this._isDisposed=!0,this._data=null,this._buffer=null)}}class u{get O(){return this._isDisposed}get instanceDivisor(){return this._instanceDivisor}set instanceDivisor(M){const p=0!=M;this._instanceDivisor=M,p!==this._instanced&&(this._instanced=p,this._computeHashCode())}get _maxVerticesCount(){const M=this.getData();return M?Array.isArray(M)?M.length/(this.byteStride/4)-this.byteOffset/4:(M.byteLength-this.byteOffset)/this.byteStride:0}constructor(M,p,b,Q,q,T,O,H,F,o){let W=arguments.length>10&&void 0!==arguments[10]&&arguments[10],i=arguments.length>11&&void 0!==arguments[11]&&arguments[11],A=arguments.length>12&&void 0!==arguments[12]?arguments[12]:1,j=arguments.length>13&&void 0!==arguments[13]&&arguments[13];this._isDisposed=!1;let K=!1;if(this.Wp=M,"object"===typeof Q&&null!==Q?(K=Q.updatable??!1,q=Q.postponeInternalCreation,T=Q.stride,O=Q.instanced,H=Q.offset,F=Q.size,o=Q.type,W=Q.normalized??!1,i=Q.useBytes??!1,A=Q.divisor??1,j=Q.takeBufferOwnership??!1,this._label=Q.label):K=!!Q,p instanceof k?(this._buffer=p,this._ownsBuffer=j):(this._buffer=new k(M,p,K,T,q,O,i,A,this._label),this._ownsBuffer=!0),this.uniqueId=u._Counter++,this._kind=b,void 0===o){const M=this.getData();this.type=M?u.GetDataType(M):u.FLOAT}else this.type=o;const D=(0,B.j)(this.type);i?(this._size=F||(T?T/D:u.DeduceStride(b)),this.byteStride=T||this._buffer.byteStride||this._size*D,this.byteOffset=H||0):(this._size=F||T||u.DeduceStride(b),this.byteStride=T?T*D:this._buffer.byteStride||this._size*D,this.byteOffset=(H||0)*D),this.normalized=W,this._instanced=void 0!==O&&O,this._instanceDivisor=O?A:0,this._alignBuffer(),this._computeHashCode()}_computeHashCode(){this.hashCode=(this.type-5120|0)+((this.normalized?1:0)<<3)+(this._size<<4)+((this._instanced?1:0)<<6)+(this.byteStride<<12)}_rebuild(){var M;null===(M=this._buffer)||void 0===M||M._rebuild()}getKind(){return this._kind}isUpdatable(){return this._buffer.isUpdatable()}getData(){return this._buffer.getData()}getFloatData(M,p){const b=this.getData();return b?(0,B.h)(b,this._size,this.type,this.byteOffset,this.byteStride,this.normalized,M,p):null}getBuffer(){return this._buffer.getBuffer()}getWrapperBuffer(){return this._buffer}getStrideSize(){return this.byteStride/(0,B.j)(this.type)}getOffset(){return this.byteOffset/(0,B.j)(this.type)}getSize(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this._size*(0,B.j)(this.type):this._size}getIsInstanced(){return this._instanced}getInstanceDivisor(){return this._instanceDivisor}create(M){this._buffer.create(M),this._alignBuffer()}update(M){this._buffer.update(M),this._alignBuffer()}updateDirectly(M,p){let b=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._buffer.updateDirectly(M,p,void 0,b),this._alignBuffer()}dispose(){this._ownsBuffer&&this._buffer.dispose(),this._isDisposed=!0}forEach(M,p){(0,B.g)(this._buffer.getData(),this.byteOffset,this.byteStride,this._size,this.type,M,this.normalized,((M,b)=>{for(let Q=0;Q<this._size;Q++)p(M[Q],b+Q)}))}_alignBuffer(){}static DeduceStride(M){switch(M){case u.UVKind:case u.UV2Kind:case u.UV3Kind:case u.UV4Kind:case u.UV5Kind:case u.UV6Kind:return 2;case u.NormalKind:case u.PositionKind:return 3;case u.ColorKind:case u.ColorInstanceKind:case u.MatricesIndicesKind:case u.MatricesIndicesExtraKind:case u.MatricesWeightsKind:case u.MatricesWeightsExtraKind:case u.TangentKind:return 4;default:throw new Error("Invalid kind '"+M+"'")}}static GetDataType(M){return M instanceof Int8Array?u.BYTE:M instanceof Uint8Array?u.UNSIGNED_BYTE:M instanceof Int16Array?u.SHORT:M instanceof Uint16Array?u.UNSIGNED_SHORT:M instanceof Int32Array?u.INT:M instanceof Uint32Array?u.UNSIGNED_INT:u.FLOAT}static GetTypeByteLength(M){return(0,B.j)(M)}static ForEach(M,p,b,Q,q,k,u,T){(0,B.g)(M,p,b,Q,q,k,u,((M,p)=>{for(let b=0;b<Q;b++)T(M[b],p+b)}))}static GetFloatData(M,p,b,Q,q,k,u,T){return(0,B.h)(M,p,b,Q,q,k,u,T)}}u._Counter=0,u.BYTE=5120,u.UNSIGNED_BYTE=5121,u.SHORT=5122,u.UNSIGNED_SHORT=5123,u.INT=5124,u.UNSIGNED_INT=5125,u.FLOAT=5126,u.PositionKind="position",u.NormalKind="normal",u.TangentKind="tangent",u.UVKind="uv",u.UV2Kind="uv2",u.UV3Kind="uv3",u.UV4Kind="uv4",u.UV5Kind="uv5",u.UV6Kind="uv6",u.ColorKind="color",u.ColorInstanceKind="instanceColor",u.MatricesIndicesKind="matricesIndices",u.MatricesWeightsKind="matricesWeights",u.MatricesIndicesExtraKind="matricesIndicesExtra",u.MatricesWeightsExtraKind="matricesWeightsExtra"},11863:(M,p,b)=>{b.d(p,{b:()=>o,f:()=>F,g:()=>T,h:()=>O,j:()=>k,k:()=>u,m:()=>H});var Q=b(11637);function q(M,p,b,Q){switch(p){case 5120:{let p=M.getInt8(b);return Q&&(p=Math.max(p/127,-1)),p}case 5121:{let p=M.getUint8(b);return Q&&(p/=255),p}case 5122:{let p=M.getInt16(b,!0);return Q&&(p=Math.max(p/32767,-1)),p}case 5123:{let p=M.getUint16(b,!0);return Q&&(p/=65535),p}case 5124:return M.getInt32(b,!0);case 5125:return M.getUint32(b,!0);case 5126:return M.getFloat32(b,!0);default:throw new Error(`Invalid component type ${p}`)}}function B(M,p,b,Q,q){switch(p){case 5120:Q&&(q=Math.round(127*q)),M.setInt8(b,q);break;case 5121:Q&&(q=Math.round(255*q)),M.setUint8(b,q);break;case 5122:Q&&(q=Math.round(32767*q)),M.setInt16(b,q,!0);break;case 5123:Q&&(q=Math.round(65535*q)),M.setUint16(b,q,!0);break;case 5124:M.setInt32(b,q,!0);break;case 5125:M.setUint32(b,q,!0);break;case 5126:M.setFloat32(b,q,!0);break;default:throw new Error(`Invalid component type ${p}`)}}function k(M){switch(M){case 5120:case 5121:return 1;case 5122:case 5123:return 2;case 5124:case 5125:case 5126:return 4;default:throw new Error(`Invalid type '${M}'`)}}function u(M){switch(M){case 5120:return Int8Array;case 5121:return Uint8Array;case 5122:return Int16Array;case 5123:return Uint16Array;case 5124:return Int32Array;case 5125:return Uint32Array;case 5126:return Float32Array;default:throw new Error(`Invalid component type '${M}'`)}}function T(M,p,b,Q,u,T,O,H){const F=new Array(Q),o=new Array(Q);if(M instanceof Array){let q=p/4;const B=b/4;for(let p=0;p<T;p+=Q){for(let p=0;p<Q;p++)F[p]=o[p]=M[q+p];H(o,p);for(let p=0;p<Q;p++)F[p]!==o[p]&&(M[q+p]=o[p]);q+=B}}else{const W=ArrayBuffer.isView(M)?new DataView(M.buffer,M.byteOffset,M.byteLength):new DataView(M),i=k(u);for(let M=0;M<T;M+=Q){for(let M=0,b=p;M<Q;M++,b+=i)F[M]=o[M]=q(W,u,b,O);H(o,M);for(let M=0,b=p;M<Q;M++,b+=i)F[M]!==o[M]&&B(W,u,b,O,o[M]);p+=b}}}function O(M,p,b,q,B,u,O,H){const F=p*k(b),o=O*p;if(5126!==b||B!==F){const Q=new Float32Array(o);return T(M,q,B,p,b,o,u,((M,b)=>{for(let q=0;q<p;q++)Q[b+q]=M[q]})),Q}if(!(M instanceof Array||M instanceof Float32Array)||0!==q||M.length!==o){if(M instanceof Array){const p=q/4;return M.slice(p,p+o)}if(M instanceof ArrayBuffer)return new Float32Array(M,q,o);{const p=M.byteOffset+q;return 0!==(3&p)&&(Q.c.Warn("Float array must be aligned to 4-bytes border"),H=!0),H?new Float32Array(M.buffer.slice(p,p+o*Float32Array.BYTES_PER_ELEMENT)):new Float32Array(M.buffer,p,o)}}return H?M.slice():M}function H(M,p,b,q,B,O,H,F){const o=k(b),W=u(b),i=H*p;if(Array.isArray(M)){if(0!==(3&q)||0!==(3&B))throw new Error("byteOffset and byteStride must be a multiple of 4 for number[] data.");const Q=q/4,k=B/4;if(Q+(H-1)*k+p>M.length)throw new Error("Last accessed index is out of bounds.");if(k<p)throw new Error("Data stride cannot be smaller than the component size.");if(k!==p){const Q=new W(i);return T(M,q,B,p,b,i,O,((M,b)=>{for(let q=0;q<p;q++)Q[b+q]=M[q]})),Q}return new W(M.slice(Q,Q+i))}let A,j=q;M instanceof ArrayBuffer?A=M:(A=M.buffer,j+=M.byteOffset);if(j+(H-1)*B+p*o>A.byteLength)throw new Error("Last accessed byte is out of bounds.");const K=p*o;if(B<K)throw new Error("Byte stride cannot be smaller than the component's byte size.");if(B!==K){const M=new W(i);return T(A,j,B,p,b,i,O,((b,Q)=>{for(let q=0;q<p;q++)M[Q+q]=b[q]})),M}return 1!==o&&0!==(j&o-1)&&(Q.c.Warn("Array must be aligned to border of element size. Data will be copied."),F=!0),F?new W(A.slice(j,j+i*o)):new W(A,j,i)}function F(M,p,b,q,B,u,O,H){const F=p*k(b),o=O*p;if(H.length!==o)throw new Error("Output length is not valid");if(5126===b&&B===F)if(M instanceof Array){const p=q/4;H.set(M,p)}else if(M instanceof ArrayBuffer){const p=new Float32Array(M,q,o);H.set(p)}else{const p=M.byteOffset+q;if(0!==(3&p))return Q.c.Warn("Float array must be aligned to 4-bytes border"),void H.set(new Float32Array(M.buffer.slice(p,p+o*Float32Array.BYTES_PER_ELEMENT)));const b=new Float32Array(M.buffer,p,o);H.set(b)}else T(M,q,B,p,b,o,u,((M,b)=>{for(let Q=0;Q<p;Q++)H[b+Q]=M[Q]}))}function o(M,p){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(Array.isArray(M)){for(let q=0;q<p;q++)if(M[b+q]-Q>65535)return!0;return!1}return 4===M.BYTES_PER_ELEMENT}},11861:(M,p,b)=>{b.d(p,{c:()=>Q});class Q{get underlyingResource(){return null}constructor(){this.references=0,this.fp=0,this.is32Bits=!1,this.uniqueId=Q._Counter++}}Q._Counter=0},11898:(M,p,b)=>{b.d(p,{e:()=>q});var Q=b(11693);class q{static GetEffect(M){return void 0===M.getPipelineContext?M.effect:M}constructor(M){let p=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._wasPreviouslyReady=!1,this._forceRebindOnNextCall=!0,this._wasPreviouslyUsingInstances=null,this.effect=null,this.defines=null,this.drawContext=M.createDrawContext(),p&&(this.materialContext=M.createMaterialContext())}setEffect(M,p){let b=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];var Q;(this.effect=M,void 0!==p&&(this.defines=p),b)&&(null===(Q=this.drawContext)||void 0===Q||Q.reset())}dispose(){var M;let p=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.effect){const M=this.effect;p?M.dispose():Q.e.SetImmediate((()=>{M.getEngine().onEndFrameObservable.addOnce((()=>{M.dispose()}))})),this.effect=null}null===(M=this.drawContext)||void 0===M||M.dispose()}}},11994:(M,p,b)=>{b.d(p,{c:()=>q});var Q=b(11842);class q{static GetPlanes(M){const p=[];for(let b=0;b<6;b++)p.push(new Q.e(0,0,0,0));return q.GetPlanesToRef(M,p),p}static GetNearPlaneToRef(M,p){const b=M.m;p.normal.x=b[3]+b[2],p.normal.y=b[7]+b[6],p.normal.z=b[11]+b[10],p.d=b[15]+b[14],p.normalize()}static GetFarPlaneToRef(M,p){const b=M.m;p.normal.x=b[3]-b[2],p.normal.y=b[7]-b[6],p.normal.z=b[11]-b[10],p.d=b[15]-b[14],p.normalize()}static GetLeftPlaneToRef(M,p){const b=M.m;p.normal.x=b[3]+b[0],p.normal.y=b[7]+b[4],p.normal.z=b[11]+b[8],p.d=b[15]+b[12],p.normalize()}static GetRightPlaneToRef(M,p){const b=M.m;p.normal.x=b[3]-b[0],p.normal.y=b[7]-b[4],p.normal.z=b[11]-b[8],p.d=b[15]-b[12],p.normalize()}static GetTopPlaneToRef(M,p){const b=M.m;p.normal.x=b[3]-b[1],p.normal.y=b[7]-b[5],p.normal.z=b[11]-b[9],p.d=b[15]-b[13],p.normalize()}static GetBottomPlaneToRef(M,p){const b=M.m;p.normal.x=b[3]+b[1],p.normal.y=b[7]+b[5],p.normal.z=b[11]+b[9],p.d=b[15]+b[13],p.normalize()}static GetPlanesToRef(M,p){q.GetNearPlaneToRef(M,p[0]),q.GetFarPlaneToRef(M,p[1]),q.GetLeftPlaneToRef(M,p[2]),q.GetRightPlaneToRef(M,p[3]),q.GetTopPlaneToRef(M,p[4]),q.GetBottomPlaneToRef(M,p[5])}static IsPointInFrustum(M,p){for(let b=0;b<6;b++)if(p[b].dotCoordinate(M)<0)return!1;return!0}}},12007:(M,p,b)=>{b.d(p,{b:()=>q});var Q=b(11647);class q{get min(){return this._min}get max(){return this._max}get average(){return this._average}get lastSecAverage(){return this._lastSecAverage}get current(){return this._current}get total(){return this._totalAccumulated}get count(){return this._totalValueCount}constructor(){this._startMonitoringTime=0,this._min=0,this._max=0,this._average=0,this._lastSecAverage=0,this._current=0,this._totalValueCount=0,this._totalAccumulated=0,this._lastSecAccumulated=0,this._lastSecTime=0,this._lastSecValueCount=0}fetchNewFrame(){this._totalValueCount++,this._current=0,this._lastSecValueCount++}addCount(M,p){q.Enabled&&(this._current+=M,p&&this._fetchResult())}beginMonitoring(){q.Enabled&&(this._startMonitoringTime=Q.b.Now)}endMonitoring(){let M=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(!q.Enabled)return;M&&this.fetchNewFrame();const p=Q.b.Now;this._current=p-this._startMonitoringTime,M&&this._fetchResult()}pb(){this._fetchResult()}_fetchResult(){this._totalAccumulated+=this._current,this._lastSecAccumulated+=this._current,this._min=Math.min(this._min,this._current),this._max=Math.max(this._max,this._current),this._average=this._totalAccumulated/this._totalValueCount;const M=Q.b.Now;M-this._lastSecTime>1e3&&(this._lastSecAverage=this._lastSecAccumulated/this._lastSecValueCount,this._lastSecTime=M,this._lastSecAccumulated=0,this._lastSecValueCount=0)}}q.Enabled=!0},11874:(M,p,b)=>{b.d(p,{b:()=>q,f:()=>Q});class Q{constructor(M){this.length=0,this.data=new Array(M),this._id=Q._GlobalId++}push(M){this.data[this.length++]=M,this.length>this.data.length&&(this.data.length*=2)}forEach(M){for(let p=0;p<this.length;p++)M(this.data[p])}sort(M){this.data.sort(M)}reset(){this.length=0}dispose(){this.reset(),this.data&&(this.data.length=0)}concat(M){if(0!==M.length){this.length+M.length>this.data.length&&(this.data.length=2*(this.length+M.length));for(let p=0;p<M.length;p++)this.data[this.length++]=(M.data||M)[p]}}indexOf(M){const p=this.data.indexOf(M);return p>=this.length?-1:p}contains(M){return-1!==this.indexOf(M)}}Q._GlobalId=0;class q extends Q{constructor(){super(...arguments),this._duplicateId=0}push(M){super.push(M),M.__smartArrayFlags||(M.__smartArrayFlags={}),M.__smartArrayFlags[this._id]=this._duplicateId}pushNoDuplicate(M){return(!M.__smartArrayFlags||M.__smartArrayFlags[this._id]!==this._duplicateId)&&(this.push(M),!0)}reset(){super.reset(),this._duplicateId++}concatWithNoDuplicate(M){if(0!==M.length){this.length+M.length>this.data.length&&(this.data.length=2*(this.length+M.length));for(let p=0;p<M.length;p++){const b=(M.data||M)[p];this.pushNoDuplicate(b)}}}}},11854:(M,p,b)=>{b.d(p,{c:()=>B});var Q=b(11857),q=b(11624);class B{constructor(M){this._vertexBuffers={},this.onBeforeRenderObservable=new q.b,this._scene=M}_prepareBuffers(){if(this._vertexBuffers[Q.f.PositionKind])return;const M=[];M.push(1,1),M.push(-1,1),M.push(-1,-1),M.push(1,-1),this._vertexBuffers[Q.f.PositionKind]=new Q.f(this._scene.getEngine(),M,Q.f.PositionKind,!1,!1,2),this._buildIndexBuffer()}_buildIndexBuffer(){const M=[];M.push(0),M.push(1),M.push(2),M.push(0),M.push(2),M.push(3),this._indexBuffer=this._scene.getEngine().createIndexBuffer(M)}_rebuild(){const M=this._vertexBuffers[Q.f.PositionKind];M&&(M._rebuild(),this._buildIndexBuffer())}_prepareFrame(){let M=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const b=this._scene.activeCamera;return!!b&&(p=p||b._postProcesses.filter((M=>null!=M)),!(!p||0===p.length||!this._scene.postProcessesEnabled)&&(p[0].activate(b,M,null!==p&&void 0!==p),!0))}directRender(M){let p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,b=arguments.length>2&&void 0!==arguments[2]&&arguments[2],Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,B=arguments.length>5&&void 0!==arguments[5]&&arguments[5],k=arguments.length>6&&void 0!==arguments[6]?arguments[6]:M.length;const u=this._scene.getEngine();for(let O=0;O<k;O++){var T;if(O<M.length-1)M[O+1].activate(this._scene.activeCamera||this._scene,null===p||void 0===p?void 0:p.texture);else p?u.bindFramebuffer(p,Q,void 0,void 0,b,q):B||u.restoreDefaultFramebuffer(),null===(T=u._debugInsertMarker)||void 0===T||T.call(u,`post process ${M[O].name} output`);const k=M[O],H=k.apply();H&&(k.onBeforeRenderObservable.notifyObservers(H),this._prepareBuffers(),u.bindBuffers(this._vertexBuffers,this._indexBuffer,H),u.drawElementsType(0,0,6),k.onAfterRenderObservable.notifyObservers(H))}u.setDepthBuffer(!0),u.setDepthWrite(!0)}_finalizeFrame(M,p,b,Q){let q=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const B=this._scene.activeCamera;if(!B)return;if(this.onBeforeRenderObservable.notifyObservers(this),0===(Q=Q||B._postProcesses.filter((M=>null!=M))).length||!this._scene.postProcessesEnabled)return;const k=this._scene.getEngine();for(let T=0,O=Q.length;T<O;T++){const H=Q[T];var u;if(T<O-1)H._outputTexture=Q[T+1].activate(B,null===p||void 0===p?void 0:p.texture);else p?(k.bindFramebuffer(p,b,void 0,void 0,q),H._outputTexture=p):(k.restoreDefaultFramebuffer(),H._outputTexture=null),null===(u=k._debugInsertMarker)||void 0===u||u.call(k,`post process ${Q[T].name} output`);if(M)break;const F=H.apply();F&&(H.onBeforeRenderObservable.notifyObservers(F),this._prepareBuffers(),k.bindBuffers(this._vertexBuffers,this._indexBuffer,F),k.drawElementsType(0,0,6),H.onAfterRenderObservable.notifyObservers(F))}k.setDepthBuffer(!0),k.setDepthWrite(!0),k.setAlphaMode(0)}dispose(){const M=this._vertexBuffers[Q.f.PositionKind];M&&(M.dispose(),this._vertexBuffers[Q.f.PositionKind]=null),this._indexBuffer&&(this._scene.getEngine()._releaseBuffer(this._indexBuffer),this._indexBuffer=null)}}},11872:(M,p,b)=>{b.d(p,{c:()=>u});var Q=b(11874),q=b(11796);class B{set opaqueSortCompareFn(M){this._opaqueSortCompareFn=M||B.PainterSortCompare,this._renderOpaque=this._renderOpaqueSorted}set alphaTestSortCompareFn(M){this._alphaTestSortCompareFn=M||B.PainterSortCompare,this._renderAlphaTest=this._renderAlphaTestSorted}set transparentSortCompareFn(M){this._transparentSortCompareFn=M||B.defaultTransparentSortCompare,this._renderTransparent=this._renderTransparentSorted}constructor(M,p){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.index=M,this._opaqueSubMeshes=new Q.f(256),this._transparentSubMeshes=new Q.f(256),this._alphaTestSubMeshes=new Q.f(256),this._depthOnlySubMeshes=new Q.f(256),this._particleSystems=new Q.f(256),this._spriteManagers=new Q.f(256),this._empty=!0,this._edgesRenderers=new Q.b(16),this._scene=p,this.opaqueSortCompareFn=b,this.alphaTestSortCompareFn=q,this.transparentSortCompareFn=B}render(M,p,b,Q){if(M)return void M(this._opaqueSubMeshes,this._alphaTestSubMeshes,this._transparentSubMeshes,this._depthOnlySubMeshes);const q=this._scene.getEngine();0!==this._depthOnlySubMeshes.length&&(q.setColorWrite(!1),this._renderAlphaTest(this._depthOnlySubMeshes),q.setColorWrite(!0)),0!==this._opaqueSubMeshes.length&&this._renderOpaque(this._opaqueSubMeshes),0!==this._alphaTestSubMeshes.length&&this._renderAlphaTest(this._alphaTestSubMeshes);const B=q.getStencilBuffer();if(q.setStencilBuffer(!1),p&&this._renderSprites(),b&&this._renderParticles(Q),this.onBeforeTransparentRendering&&this.onBeforeTransparentRendering(),0!==this._transparentSubMeshes.length||this._scene.useOrderIndependentTransparency){if(q.setStencilBuffer(B),this._scene.useOrderIndependentTransparency){const M=this._scene.depthPeelingRenderer.render(this._transparentSubMeshes);M.length&&this._renderTransparent(M)}else this._renderTransparent(this._transparentSubMeshes);q.setAlphaMode(0)}if(q.setStencilBuffer(!1),this._edgesRenderers.length){for(let M=0;M<this._edgesRenderers.length;M++)this._edgesRenderers.data[M].render();q.setAlphaMode(0)}q.setStencilBuffer(B)}_renderOpaqueSorted(M){B._RenderSorted(M,this._opaqueSortCompareFn,this._scene.activeCamera,!1)}_renderAlphaTestSorted(M){B._RenderSorted(M,this._alphaTestSortCompareFn,this._scene.activeCamera,!1)}_renderTransparentSorted(M){B._RenderSorted(M,this._transparentSortCompareFn,this._scene.activeCamera,!0)}static _RenderSorted(M,p,b,Q){let k,u=0;const T=b?b.globalPosition:B._ZeroVector;if(Q)for(;u<M.length;u++)k=M.data[u],k._alphaIndex=k.getMesh().alphaIndex,k._distanceToCamera=q.Ap.Distance(k.getBoundingInfo().boundingSphere.centerWorld,T);const O=M.length===M.data.length?M.data:M.data.slice(0,M.length);p&&O.sort(p);const H=O[0].getMesh().RM();for(u=0;u<O.length;u++)if(k=O[u],!H._activeMeshesFrozenButKeepClipping||k.isInFrustum(H._frustumPlanes)){if(Q){const M=k.UM();if(M&&M.needDepthPrePass){const p=M.RM().getEngine();p.setColorWrite(!1),p.setAlphaMode(0),k.render(!1),p.setColorWrite(!0)}}k.render(Q)}}static defaultTransparentSortCompare(M,p){return M._alphaIndex>p._alphaIndex?1:M._alphaIndex<p._alphaIndex?-1:B.backToFrontSortCompare(M,p)}static backToFrontSortCompare(M,p){return M._distanceToCamera<p._distanceToCamera?1:M._distanceToCamera>p._distanceToCamera?-1:0}static frontToBackSortCompare(M,p){return M._distanceToCamera<p._distanceToCamera?-1:M._distanceToCamera>p._distanceToCamera?1:0}static PainterSortCompare(M,p){const b=M.getMesh(),Q=p.getMesh();return b.material&&Q.material?b.material.uniqueId-Q.material.uniqueId:b.uniqueId-Q.uniqueId}prepare(){this._opaqueSubMeshes.reset(),this._transparentSubMeshes.reset(),this._alphaTestSubMeshes.reset(),this._depthOnlySubMeshes.reset(),this._particleSystems.reset(),this.prepareSprites(),this._edgesRenderers.reset(),this._empty=!0}prepareSprites(){this._spriteManagers.reset()}dispose(){this._opaqueSubMeshes.dispose(),this._transparentSubMeshes.dispose(),this._alphaTestSubMeshes.dispose(),this._depthOnlySubMeshes.dispose(),this._particleSystems.dispose(),this._spriteManagers.dispose(),this._edgesRenderers.dispose()}dispatch(M,p,b){void 0===p&&(p=M.getMesh()),void 0===b&&(b=M.UM()),null!==b&&void 0!==b&&(b.needAlphaBlendingForMesh(p)?this._transparentSubMeshes.push(M):b.needAlphaTestingForMesh(p)?(b.needDepthPrePass&&this._depthOnlySubMeshes.push(M),this._alphaTestSubMeshes.push(M)):(b.needDepthPrePass&&this._depthOnlySubMeshes.push(M),this._opaqueSubMeshes.push(M)),p._renderingGroup=this,p._edgesRenderer&&p.isEnabled()&&p.isVisible&&p._edgesRenderer.isEnabled&&this._edgesRenderers.pushNoDuplicate(p._edgesRenderer),this._empty=!1)}dispatchSprites(M){this._spriteManagers.push(M),this._empty=!1}dispatchParticles(M){this._particleSystems.push(M),this._empty=!1}_renderParticles(M){if(0===this._particleSystems.length)return;const p=this._scene.activeCamera;this._scene.onBeforeParticlesRenderingObservable.notifyObservers(this._scene);for(let b=0;b<this._particleSystems.length;b++){const Q=this._particleSystems.data[b];if(0===(p&&p.layerMask&Q.layerMask))continue;const q=Q.Qp;q.position&&M&&-1===M.indexOf(q)||this._scene._activeParticles.addCount(Q.render(),!1)}this._scene.onAfterParticlesRenderingObservable.notifyObservers(this._scene)}_renderSprites(){if(!this._scene.spritesEnabled||0===this._spriteManagers.length)return;const M=this._scene.activeCamera;this._scene.onBeforeSpritesRenderingObservable.notifyObservers(this._scene);for(let p=0;p<this._spriteManagers.length;p++){const b=this._spriteManagers.data[p];0!==(M&&M.layerMask&b.layerMask)&&b.render()}this._scene.onAfterSpritesRenderingObservable.notifyObservers(this._scene)}}B._ZeroVector=q.Ap.Zero();class k{}class u{get maintainStateBetweenFrames(){return this._maintainStateBetweenFrames}set maintainStateBetweenFrames(M){M!==this._maintainStateBetweenFrames&&(this._maintainStateBetweenFrames=M,this._maintainStateBetweenFrames||this.restoreDispachedFlags())}restoreDispachedFlags(){for(const M of this._scene.meshes)if(M.Tb)for(const p of M.Tb)p._wasDispatched=!1;if(this._scene.spriteManagers)for(const M of this._scene.spriteManagers)M._wasDispatched=!1;for(const M of this._scene.qo)M._wasDispatched=!1}constructor(M){this._useSceneAutoClearSetup=!1,this._renderingGroups=new Array,this._autoClearDepthStencil={},this._customOpaqueSortCompareFn={},this._customAlphaTestSortCompareFn={},this._customTransparentSortCompareFn={},this._renderingGroupInfo=new k,this._maintainStateBetweenFrames=!1,this._scene=M;for(let p=u.MIN_RENDERINGGROUPS;p<u.MAX_RENDERINGGROUPS;p++)this._autoClearDepthStencil[p]={ub:!0,depth:!0,stencil:!0}}getRenderingGroup(M){const p=M||0;return this._prepareRenderingGroup(p),this._renderingGroups[p]}_clearDepthStencilBuffer(){let M=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],p=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._depthStencilBufferAlreadyCleaned||(this._scene.getEngine().clear(null,!1,M,p),this._depthStencilBufferAlreadyCleaned=!0)}render(M,p,b,Q){const q=this._renderingGroupInfo;if(q.Kp=this._scene,q.camera=this._scene.activeCamera,q.renderingManager=this,this._scene.spriteManagers&&Q)for(let B=0;B<this._scene.spriteManagers.length;B++){const M=this._scene.spriteManagers[B];this.dispatchSprites(M)}for(let B=u.MIN_RENDERINGGROUPS;B<u.MAX_RENDERINGGROUPS;B++){this._depthStencilBufferAlreadyCleaned=B===u.MIN_RENDERINGGROUPS;const k=this._renderingGroups[B];if(!k||k._empty)continue;const T=1<<B;if(q.renderingGroupId=B,this._scene.onBeforeRenderingGroupObservable.notifyObservers(q,T),u.AUTOCLEAR){const M=this._useSceneAutoClearSetup?this._scene.getAutoClearDepthStencilSetup(B):this._autoClearDepthStencil[B];M&&M.ub&&this._clearDepthStencilBuffer(M.depth,M.stencil)}for(const M of this._scene._beforeRenderingGroupDrawStage)M.action(B);k.render(M,Q,b,p);for(const M of this._scene._afterRenderingGroupDrawStage)M.action(B);this._scene.onAfterRenderingGroupObservable.notifyObservers(q,T)}}reset(){if(!this.maintainStateBetweenFrames)for(let M=u.MIN_RENDERINGGROUPS;M<u.MAX_RENDERINGGROUPS;M++){const p=this._renderingGroups[M];p&&p.prepare()}}resetSprites(){if(!this.maintainStateBetweenFrames)for(let M=u.MIN_RENDERINGGROUPS;M<u.MAX_RENDERINGGROUPS;M++){const p=this._renderingGroups[M];p&&p.prepareSprites()}}dispose(){this.freeRenderingGroups(),this._renderingGroups.length=0,this._renderingGroupInfo=null}freeRenderingGroups(){for(let M=u.MIN_RENDERINGGROUPS;M<u.MAX_RENDERINGGROUPS;M++){const p=this._renderingGroups[M];p&&p.dispose()}}_prepareRenderingGroup(M){void 0===this._renderingGroups[M]&&(this._renderingGroups[M]=new B(M,this._scene,this._customOpaqueSortCompareFn[M],this._customAlphaTestSortCompareFn[M],this._customTransparentSortCompareFn[M]))}dispatchSprites(M){this.maintainStateBetweenFrames&&M._wasDispatched||(M._wasDispatched=!0,this.getRenderingGroup(M.renderingGroupId).dispatchSprites(M))}dispatchParticles(M){this.maintainStateBetweenFrames&&M._wasDispatched||(M._wasDispatched=!0,this.getRenderingGroup(M.renderingGroupId).dispatchParticles(M))}dispatch(M,p,b){void 0===p&&(p=M.getMesh()),this.maintainStateBetweenFrames&&M._wasDispatched||(M._wasDispatched=!0,this.getRenderingGroup(p.renderingGroupId).dispatch(M,p,b))}setRenderingOrder(M){let p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(this._customOpaqueSortCompareFn[M]=p,this._customAlphaTestSortCompareFn[M]=b,this._customTransparentSortCompareFn[M]=Q,this._renderingGroups[M]){const p=this._renderingGroups[M];p.opaqueSortCompareFn=this._customOpaqueSortCompareFn[M],p.alphaTestSortCompareFn=this._customAlphaTestSortCompareFn[M],p.transparentSortCompareFn=this._customTransparentSortCompareFn[M]}}setRenderingAutoClearDepthStencil(M,p){let b=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],Q=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._autoClearDepthStencil[M]={ub:p,depth:b,stencil:Q}}getAutoClearDepthStencilSetup(M){return this._autoClearDepthStencil[M]}}u.MAX_RENDERINGGROUPS=4,u.MIN_RENDERINGGROUPS=0,u.AUTOCLEAR=!0}}]);