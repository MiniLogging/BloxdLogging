"use strict";(self.bbj0x35f849=self.bbj0x35f849||[]).push([[19],{11199:(N,q,C)=>{C.d(q,{c:()=>a,g:()=>F});var d=C(11204),U=C(10962),W=C(11210);class a{get A(){return this._isDisposed}constructor(N,q,C){let U=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,W=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=arguments.length>5&&void 0!==arguments[5]&&arguments[5],F=arguments.length>6&&void 0!==arguments[6]&&arguments[6],w=arguments.length>7?arguments[7]:void 0,A=arguments.length>8?arguments[8]:void 0;this._isAlreadyOwned=!1,this._isDisposed=!1,N&&N.lN?this._engine=N.lN().getEngine():this._engine=N,this._updatable=C,this._instanced=a,this._divisor=w||1,this._label=A,q instanceof d.c?(this._data=null,this._buffer=q):(this._data=q,this._buffer=null),this.byteStride=F?U:U*Float32Array.BYTES_PER_ELEMENT,W||this.create()}createVertexBuffer(N,q,C,d,U){let W=arguments.length>5&&void 0!==arguments[5]&&arguments[5],a=arguments.length>6?arguments[6]:void 0;const w=W?q:q*Float32Array.BYTES_PER_ELEMENT,A=d?W?d:d*Float32Array.BYTES_PER_ELEMENT:this.byteStride;return new F(this._engine,this,N,this._updatable,!0,A,void 0===U?this._instanced:U,w,C,void 0,void 0,!0,this._divisor||a)}isUpdatable(){return this._updatable}getData(){return this._data}getBuffer(){return this._buffer}getStrideSize(){return this.byteStride/Float32Array.BYTES_PER_ELEMENT}create(){let N=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;!N&&this._buffer||(N=N||this._data,N&&(this._buffer?this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,N),this._data=N):this._updatable?(this._buffer=this._engine.createDynamicVertexBuffer(N,this._label),this._data=N):this._buffer=this._engine.createVertexBuffer(N,void 0,this._label)))}_rebuild(){if(this._data)this._buffer=null,this.create(this._data);else{if(!this._buffer)return;if(this._buffer.oq>0)return void(this._updatable?this._buffer=this._engine.createDynamicVertexBuffer(this._buffer.oq,this._label):this._buffer=this._engine.createVertexBuffer(this._buffer.oq,void 0,this._label));U.c.Warn(`Missing data for buffer "${this._label}" ${this._buffer?"(uniqueId: "+this._buffer.uniqueId+")":""}. Buffer reconstruction failed.`),this._buffer=null}}update(N){this.create(N)}updateDirectly(N,q,C){let d=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this._buffer&&this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,N,d?q:q*Float32Array.BYTES_PER_ELEMENT,C?C*this.byteStride:void 0),this._data=0===q&&void 0===C?N:null)}_increaseReferences(){this._buffer&&(this._isAlreadyOwned?this._buffer.references++:this._isAlreadyOwned=!0)}dispose(){this._buffer&&this._engine._releaseBuffer(this._buffer)&&(this._isDisposed=!0,this._data=null,this._buffer=null)}}class F{get A(){return this._isDisposed}get instanceDivisor(){return this._instanceDivisor}set instanceDivisor(N){const q=0!=N;this._instanceDivisor=N,q!==this._instanced&&(this._instanced=q,this._computeHashCode())}get _maxVerticesCount(){const N=this.getData();return N?Array.isArray(N)?N.length/(this.byteStride/4)-this.byteOffset/4:(N.byteLength-this.byteOffset)/this.byteStride:0}constructor(N,q,C,d,U,w,A,n,t,V){let Z=arguments.length>10&&void 0!==arguments[10]&&arguments[10],J=arguments.length>11&&void 0!==arguments[11]&&arguments[11],Q=arguments.length>12&&void 0!==arguments[12]?arguments[12]:1,v=arguments.length>13&&void 0!==arguments[13]&&arguments[13];this._isDisposed=!1;let r=!1;if(this.Zq=N,"object"===typeof d&&null!==d?(r=d.updatable??!1,U=d.postponeInternalCreation,w=d.stride,A=d.instanced,n=d.offset,t=d.size,V=d.type,Z=d.normalized??!1,J=d.useBytes??!1,Q=d.divisor??1,v=d.takeBufferOwnership??!1,this._label=d.label):r=!!d,q instanceof a?(this._buffer=q,this._ownsBuffer=v):(this._buffer=new a(N,q,r,w,U,A,J,Q,this._label),this._ownsBuffer=!0),this.uniqueId=F._Counter++,this._kind=C,void 0===V){const N=this.getData();this.type=N?F.GetDataType(N):F.FLOAT}else this.type=V;const O=(0,W.o)(this.type);J?(this._size=t||(w?w/O:F.DeduceStride(C)),this.byteStride=w||this._buffer.byteStride||this._size*O,this.byteOffset=n||0):(this._size=t||w||F.DeduceStride(C),this.byteStride=w?w*O:this._buffer.byteStride||this._size*O,this.byteOffset=(n||0)*O),this.normalized=Z,this._instanced=void 0!==A&&A,this._instanceDivisor=A?Q:0,this._alignBuffer(),this._computeHashCode()}_computeHashCode(){this.hashCode=(this.type-5120|0)+((this.normalized?1:0)<<3)+(this._size<<4)+((this._instanced?1:0)<<6)+(this.byteStride<<12)}_rebuild(){var N;null===(N=this._buffer)||void 0===N||N._rebuild()}getKind(){return this._kind}isUpdatable(){return this._buffer.isUpdatable()}getData(){return this._buffer.getData()}getFloatData(N,q){const C=this.getData();return C?(0,W.k)(C,this._size,this.type,this.byteOffset,this.byteStride,this.normalized,N,q):null}getBuffer(){return this._buffer.getBuffer()}getWrapperBuffer(){return this._buffer}getStrideSize(){return this.byteStride/(0,W.o)(this.type)}getOffset(){return this.byteOffset/(0,W.o)(this.type)}getSize(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this._size*(0,W.o)(this.type):this._size}getIsInstanced(){return this._instanced}getInstanceDivisor(){return this._instanceDivisor}create(N){this._buffer.create(N),this._alignBuffer()}update(N){this._buffer.update(N),this._alignBuffer()}updateDirectly(N,q){let C=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._buffer.updateDirectly(N,q,void 0,C),this._alignBuffer()}dispose(){this._ownsBuffer&&this._buffer.dispose(),this._isDisposed=!0}forEach(N,q){(0,W.i)(this._buffer.getData(),this.byteOffset,this.byteStride,this._size,this.type,N,this.normalized,((N,C)=>{for(let d=0;d<this._size;d++)q(N[d],C+d)}))}_alignBuffer(){}static DeduceStride(N){switch(N){case F.UVKind:case F.UV2Kind:case F.UV3Kind:case F.UV4Kind:case F.UV5Kind:case F.UV6Kind:return 2;case F.NormalKind:case F.PositionKind:return 3;case F.ColorKind:case F.ColorInstanceKind:case F.MatricesIndicesKind:case F.MatricesIndicesExtraKind:case F.MatricesWeightsKind:case F.MatricesWeightsExtraKind:case F.TangentKind:return 4;default:throw new Error("Invalid kind '"+N+"'")}}static GetDataType(N){return N instanceof Int8Array?F.BYTE:N instanceof Uint8Array?F.UNSIGNED_BYTE:N instanceof Int16Array?F.SHORT:N instanceof Uint16Array?F.UNSIGNED_SHORT:N instanceof Int32Array?F.INT:N instanceof Uint32Array?F.UNSIGNED_INT:F.FLOAT}static GetTypeByteLength(N){return(0,W.o)(N)}static ForEach(N,q,C,d,U,a,F,w){(0,W.i)(N,q,C,d,U,a,F,((N,q)=>{for(let C=0;C<d;C++)w(N[C],q+C)}))}static GetFloatData(N,q,C,d,U,a,F,w){return(0,W.k)(N,q,C,d,U,a,F,w)}}F._Counter=0,F.BYTE=5120,F.UNSIGNED_BYTE=5121,F.SHORT=5122,F.UNSIGNED_SHORT=5123,F.INT=5124,F.UNSIGNED_INT=5125,F.FLOAT=5126,F.PositionKind="position",F.NormalKind="normal",F.TangentKind="tangent",F.UVKind="uv",F.UV2Kind="uv2",F.UV3Kind="uv3",F.UV4Kind="uv4",F.UV5Kind="uv5",F.UV6Kind="uv6",F.ColorKind="color",F.ColorInstanceKind="instanceColor",F.MatricesIndicesKind="matricesIndices",F.MatricesWeightsKind="matricesWeights",F.MatricesIndicesExtraKind="matricesIndicesExtra",F.MatricesWeightsExtraKind="matricesWeightsExtra"},11210:(N,q,C)=>{C.d(q,{c:()=>V,e:()=>t,i:()=>w,k:()=>A,o:()=>a,r:()=>F,s:()=>n});var d=C(10962);function U(N,q,C,d){switch(q){case 5120:{let q=N.getInt8(C);return d&&(q=Math.max(q/127,-1)),q}case 5121:{let q=N.getUint8(C);return d&&(q/=255),q}case 5122:{let q=N.getInt16(C,!0);return d&&(q=Math.max(q/32767,-1)),q}case 5123:{let q=N.getUint16(C,!0);return d&&(q/=65535),q}case 5124:return N.getInt32(C,!0);case 5125:return N.getUint32(C,!0);case 5126:return N.getFloat32(C,!0);default:throw new Error(`Invalid component type ${q}`)}}function W(N,q,C,d,U){switch(q){case 5120:d&&(U=Math.round(127*U)),N.setInt8(C,U);break;case 5121:d&&(U=Math.round(255*U)),N.setUint8(C,U);break;case 5122:d&&(U=Math.round(32767*U)),N.setInt16(C,U,!0);break;case 5123:d&&(U=Math.round(65535*U)),N.setUint16(C,U,!0);break;case 5124:N.setInt32(C,U,!0);break;case 5125:N.setUint32(C,U,!0);break;case 5126:N.setFloat32(C,U,!0);break;default:throw new Error(`Invalid component type ${q}`)}}function a(N){switch(N){case 5120:case 5121:return 1;case 5122:case 5123:return 2;case 5124:case 5125:case 5126:return 4;default:throw new Error(`Invalid type '${N}'`)}}function F(N){switch(N){case 5120:return Int8Array;case 5121:return Uint8Array;case 5122:return Int16Array;case 5123:return Uint16Array;case 5124:return Int32Array;case 5125:return Uint32Array;case 5126:return Float32Array;default:throw new Error(`Invalid component type '${N}'`)}}function w(N,q,C,d,F,w,A,n){const t=new Array(d),V=new Array(d);if(N instanceof Array){let U=q/4;const W=C/4;for(let q=0;q<w;q+=d){for(let q=0;q<d;q++)t[q]=V[q]=N[U+q];n(V,q);for(let q=0;q<d;q++)t[q]!==V[q]&&(N[U+q]=V[q]);U+=W}}else{const Z=ArrayBuffer.isView(N)?new DataView(N.buffer,N.byteOffset,N.byteLength):new DataView(N),J=a(F);for(let N=0;N<w;N+=d){for(let N=0,C=q;N<d;N++,C+=J)t[N]=V[N]=U(Z,F,C,A);n(V,N);for(let N=0,C=q;N<d;N++,C+=J)t[N]!==V[N]&&W(Z,F,C,A,V[N]);q+=C}}}function A(N,q,C,U,W,F,A,n){const t=q*a(C),V=A*q;if(5126!==C||W!==t){const d=new Float32Array(V);return w(N,U,W,q,C,V,F,((N,C)=>{for(let U=0;U<q;U++)d[C+U]=N[U]})),d}if(!(N instanceof Array||N instanceof Float32Array)||0!==U||N.length!==V){if(N instanceof Array){const q=U/4;return N.slice(q,q+V)}if(N instanceof ArrayBuffer)return new Float32Array(N,U,V);{const q=N.byteOffset+U;return 0!==(3&q)&&(d.c.Warn("Float array must be aligned to 4-bytes border"),n=!0),n?new Float32Array(N.buffer.slice(q,q+V*Float32Array.BYTES_PER_ELEMENT)):new Float32Array(N.buffer,q,V)}}return n?N.slice():N}function n(N,q,C,U,W,A,n,t){const V=a(C),Z=F(C),J=n*q;if(Array.isArray(N)){if(0!==(3&U)||0!==(3&W))throw new Error("byteOffset and byteStride must be a multiple of 4 for number[] data.");const d=U/4,a=W/4;if(d+(n-1)*a+q>N.length)throw new Error("Last accessed index is out of bounds.");if(a<q)throw new Error("Data stride cannot be smaller than the component size.");if(a!==q){const d=new Z(J);return w(N,U,W,q,C,J,A,((N,C)=>{for(let U=0;U<q;U++)d[C+U]=N[U]})),d}return new Z(N.slice(d,d+J))}let Q,v=U;N instanceof ArrayBuffer?Q=N:(Q=N.buffer,v+=N.byteOffset);if(v+(n-1)*W+q*V>Q.byteLength)throw new Error("Last accessed byte is out of bounds.");const r=q*V;if(W<r)throw new Error("Byte stride cannot be smaller than the component's byte size.");if(W!==r){const N=new Z(J);return w(Q,v,W,q,C,J,A,((C,d)=>{for(let U=0;U<q;U++)N[d+U]=C[U]})),N}return 1!==V&&0!==(v&V-1)&&(d.c.Warn("Array must be aligned to border of element size. Data will be copied."),t=!0),t?new Z(Q.slice(v,v+J*V)):new Z(Q,v,J)}function t(N,q,C,U,W,F,A,n){const t=q*a(C),V=A*q;if(n.length!==V)throw new Error("Output length is not valid");if(5126===C&&W===t)if(N instanceof Array){const q=U/4;n.set(N,q)}else if(N instanceof ArrayBuffer){const q=new Float32Array(N,U,V);n.set(q)}else{const q=N.byteOffset+U;if(0!==(3&q))return d.c.Warn("Float array must be aligned to 4-bytes border"),void n.set(new Float32Array(N.buffer.slice(q,q+V*Float32Array.BYTES_PER_ELEMENT)));const C=new Float32Array(N.buffer,q,V);n.set(C)}else w(N,U,W,q,C,V,F,((N,C)=>{for(let d=0;d<q;d++)n[C+d]=N[d]}))}function V(N,q){let C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(Array.isArray(N)){for(let U=0;U<q;U++)if(N[C+U]-d>65535)return!0;return!1}return 4===N.BYTES_PER_ELEMENT}},11204:(N,q,C)=>{C.d(q,{c:()=>d});class d{get underlyingResource(){return null}constructor(){this.references=0,this.oq=0,this.is32Bits=!1,this.uniqueId=d._Counter++}}d._Counter=0},11247:(N,q,C)=>{C.d(q,{e:()=>U});var d=C(11029);class U{static GetEffect(N){return void 0===N.getPipelineContext?N.effect:N}constructor(N){let q=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._wasPreviouslyReady=!1,this._forceRebindOnNextCall=!0,this._wasPreviouslyUsingInstances=null,this.effect=null,this.defines=null,this.drawContext=N.createDrawContext(),q&&(this.materialContext=N.createMaterialContext())}setEffect(N,q){let C=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];var d;(this.effect=N,void 0!==q&&(this.defines=q),C)&&(null===(d=this.drawContext)||void 0===d||d.reset())}dispose(){var N;let q=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.effect){const N=this.effect;q?N.dispose():d.b.SetImmediate((()=>{N.getEngine().onEndFrameObservable.addOnce((()=>{N.dispose()}))})),this.effect=null}null===(N=this.drawContext)||void 0===N||N.dispose()}}},11338:(N,q,C)=>{C.d(q,{c:()=>U});var d=C(11169);class U{static GetPlanes(N){const q=[];for(let C=0;C<6;C++)q.push(new d.b(0,0,0,0));return U.GetPlanesToRef(N,q),q}static GetNearPlaneToRef(N,q){const C=N.m;q.normal.x=C[3]+C[2],q.normal.y=C[7]+C[6],q.normal.z=C[11]+C[10],q.d=C[15]+C[14],q.normalize()}static GetFarPlaneToRef(N,q){const C=N.m;q.normal.x=C[3]-C[2],q.normal.y=C[7]-C[6],q.normal.z=C[11]-C[10],q.d=C[15]-C[14],q.normalize()}static GetLeftPlaneToRef(N,q){const C=N.m;q.normal.x=C[3]+C[0],q.normal.y=C[7]+C[4],q.normal.z=C[11]+C[8],q.d=C[15]+C[12],q.normalize()}static GetRightPlaneToRef(N,q){const C=N.m;q.normal.x=C[3]-C[0],q.normal.y=C[7]-C[4],q.normal.z=C[11]-C[8],q.d=C[15]-C[12],q.normalize()}static GetTopPlaneToRef(N,q){const C=N.m;q.normal.x=C[3]-C[1],q.normal.y=C[7]-C[5],q.normal.z=C[11]-C[9],q.d=C[15]-C[13],q.normalize()}static GetBottomPlaneToRef(N,q){const C=N.m;q.normal.x=C[3]+C[1],q.normal.y=C[7]+C[5],q.normal.z=C[11]+C[9],q.d=C[15]+C[13],q.normalize()}static GetPlanesToRef(N,q){U.GetNearPlaneToRef(N,q[0]),U.GetFarPlaneToRef(N,q[1]),U.GetLeftPlaneToRef(N,q[2]),U.GetRightPlaneToRef(N,q[3]),U.GetTopPlaneToRef(N,q[4]),U.GetBottomPlaneToRef(N,q[5])}static IsPointInFrustum(N,q){for(let C=0;C<6;C++)if(q[C].dotCoordinate(N)<0)return!1;return!0}}},11346:(N,q,C)=>{C.d(q,{b:()=>U});var d=C(10980);class U{get min(){return this._min}get max(){return this._max}get average(){return this._average}get lastSecAverage(){return this._lastSecAverage}get current(){return this._current}get total(){return this._totalAccumulated}get count(){return this._totalValueCount}constructor(){this._startMonitoringTime=0,this._min=0,this._max=0,this._average=0,this._lastSecAverage=0,this._current=0,this._totalValueCount=0,this._totalAccumulated=0,this._lastSecAccumulated=0,this._lastSecTime=0,this._lastSecValueCount=0}fetchNewFrame(){this._totalValueCount++,this._current=0,this._lastSecValueCount++}addCount(N,q){U.Enabled&&(this._current+=N,q&&this._fetchResult())}beginMonitoring(){U.Enabled&&(this._startMonitoringTime=d.c.Now)}endMonitoring(){let N=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(!U.Enabled)return;N&&this.fetchNewFrame();const q=d.c.Now;this._current=q-this._startMonitoringTime,N&&this._fetchResult()}nd(){this._fetchResult()}_fetchResult(){this._totalAccumulated+=this._current,this._lastSecAccumulated+=this._current,this._min=Math.min(this._min,this._current),this._max=Math.max(this._max,this._current),this._average=this._totalAccumulated/this._totalValueCount;const N=d.c.Now;N-this._lastSecTime>1e3&&(this._lastSecAverage=this._lastSecAccumulated/this._lastSecValueCount,this._lastSecTime=N,this._lastSecAccumulated=0,this._lastSecValueCount=0)}}U.Enabled=!0},11219:(N,q,C)=>{C.d(q,{b:()=>U,d:()=>d});class d{constructor(N){this.length=0,this.data=new Array(N),this._id=d._GlobalId++}push(N){this.data[this.length++]=N,this.length>this.data.length&&(this.data.length*=2)}forEach(N){for(let q=0;q<this.length;q++)N(this.data[q])}sort(N){this.data.sort(N)}reset(){this.length=0}dispose(){this.reset(),this.data&&(this.data.length=0)}concat(N){if(0!==N.length){this.length+N.length>this.data.length&&(this.data.length=2*(this.length+N.length));for(let q=0;q<N.length;q++)this.data[this.length++]=(N.data||N)[q]}}indexOf(N){const q=this.data.indexOf(N);return q>=this.length?-1:q}contains(N){return-1!==this.indexOf(N)}}d._GlobalId=0;class U extends d{constructor(){super(...arguments),this._duplicateId=0}push(N){super.push(N),N.__smartArrayFlags||(N.__smartArrayFlags={}),N.__smartArrayFlags[this._id]=this._duplicateId}pushNoDuplicate(N){return(!N.__smartArrayFlags||N.__smartArrayFlags[this._id]!==this._duplicateId)&&(this.push(N),!0)}reset(){super.reset(),this._duplicateId++}concatWithNoDuplicate(N){if(0!==N.length){this.length+N.length>this.data.length&&(this.data.length=2*(this.length+N.length));for(let q=0;q<N.length;q++){const C=(N.data||N)[q];this.pushNoDuplicate(C)}}}}},11192:(N,q,C)=>{C.d(q,{b:()=>W});var d=C(11199),U=C(10949);class W{constructor(N){this._vertexBuffers={},this.onBeforeRenderObservable=new U.b,this._scene=N}_prepareBuffers(){if(this._vertexBuffers[d.g.PositionKind])return;const N=[];N.push(1,1),N.push(-1,1),N.push(-1,-1),N.push(1,-1),this._vertexBuffers[d.g.PositionKind]=new d.g(this._scene.getEngine(),N,d.g.PositionKind,!1,!1,2),this._buildIndexBuffer()}_buildIndexBuffer(){const N=[];N.push(0),N.push(1),N.push(2),N.push(0),N.push(2),N.push(3),this._indexBuffer=this._scene.getEngine().createIndexBuffer(N)}_rebuild(){const N=this._vertexBuffers[d.g.PositionKind];N&&(N._rebuild(),this._buildIndexBuffer())}_prepareFrame(){let N=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const C=this._scene.activeCamera;return!!C&&(q=q||C._postProcesses.filter((N=>null!=N)),!(!q||0===q.length||!this._scene.postProcessesEnabled)&&(q[0].activate(C,N,null!==q&&void 0!==q),!0))}directRender(N){let q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,C=arguments.length>2&&void 0!==arguments[2]&&arguments[2],d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,W=arguments.length>5&&void 0!==arguments[5]&&arguments[5],a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:N.length;const F=this._scene.getEngine();for(let A=0;A<a;A++){var w;if(A<N.length-1)N[A+1].activate(this._scene.activeCamera||this._scene,null===q||void 0===q?void 0:q.texture);else q?F.bindFramebuffer(q,d,void 0,void 0,C,U):W||F.restoreDefaultFramebuffer(),null===(w=F._debugInsertMarker)||void 0===w||w.call(F,`post process ${N[A].name} output`);const a=N[A],n=a.apply();n&&(a.onBeforeRenderObservable.notifyObservers(n),this._prepareBuffers(),F.bindBuffers(this._vertexBuffers,this._indexBuffer,n),F.drawElementsType(0,0,6),a.onAfterRenderObservable.notifyObservers(n))}F.setDepthBuffer(!0),F.setDepthWrite(!0)}_finalizeFrame(N,q,C,d){let U=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const W=this._scene.activeCamera;if(!W)return;if(this.onBeforeRenderObservable.notifyObservers(this),0===(d=d||W._postProcesses.filter((N=>null!=N))).length||!this._scene.postProcessesEnabled)return;const a=this._scene.getEngine();for(let w=0,A=d.length;w<A;w++){const n=d[w];var F;if(w<A-1)n._outputTexture=d[w+1].activate(W,null===q||void 0===q?void 0:q.texture);else q?(a.bindFramebuffer(q,C,void 0,void 0,U),n._outputTexture=q):(a.restoreDefaultFramebuffer(),n._outputTexture=null),null===(F=a._debugInsertMarker)||void 0===F||F.call(a,`post process ${d[w].name} output`);if(N)break;const t=n.apply();t&&(n.onBeforeRenderObservable.notifyObservers(t),this._prepareBuffers(),a.bindBuffers(this._vertexBuffers,this._indexBuffer,t),a.drawElementsType(0,0,6),n.onAfterRenderObservable.notifyObservers(t))}a.setDepthBuffer(!0),a.setDepthWrite(!0),a.setAlphaMode(0)}dispose(){const N=this._vertexBuffers[d.g.PositionKind];N&&(N.dispose(),this._vertexBuffers[d.g.PositionKind]=null),this._indexBuffer&&(this._scene.getEngine()._releaseBuffer(this._indexBuffer),this._indexBuffer=null)}}},11212:(N,q,C)=>{C.d(q,{d:()=>F});var d=C(11219),U=C(11122);class W{set opaqueSortCompareFn(N){this._opaqueSortCompareFn=N||W.PainterSortCompare,this._renderOpaque=this._renderOpaqueSorted}set alphaTestSortCompareFn(N){this._alphaTestSortCompareFn=N||W.PainterSortCompare,this._renderAlphaTest=this._renderAlphaTestSorted}set transparentSortCompareFn(N){this._transparentSortCompareFn=N||W.defaultTransparentSortCompare,this._renderTransparent=this._renderTransparentSorted}constructor(N,q){let C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,U=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,W=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.index=N,this._opaqueSubMeshes=new d.d(256),this._transparentSubMeshes=new d.d(256),this._alphaTestSubMeshes=new d.d(256),this._depthOnlySubMeshes=new d.d(256),this._particleSystems=new d.d(256),this._spriteManagers=new d.d(256),this._empty=!0,this._edgesRenderers=new d.b(16),this._scene=q,this.opaqueSortCompareFn=C,this.alphaTestSortCompareFn=U,this.transparentSortCompareFn=W}render(N,q,C,d){if(N)return void N(this._opaqueSubMeshes,this._alphaTestSubMeshes,this._transparentSubMeshes,this._depthOnlySubMeshes);const U=this._scene.getEngine();0!==this._depthOnlySubMeshes.length&&(U.setColorWrite(!1),this._renderAlphaTest(this._depthOnlySubMeshes),U.setColorWrite(!0)),0!==this._opaqueSubMeshes.length&&this._renderOpaque(this._opaqueSubMeshes),0!==this._alphaTestSubMeshes.length&&this._renderAlphaTest(this._alphaTestSubMeshes);const W=U.getStencilBuffer();if(U.setStencilBuffer(!1),q&&this._renderSprites(),C&&this._renderParticles(d),this.onBeforeTransparentRendering&&this.onBeforeTransparentRendering(),0!==this._transparentSubMeshes.length||this._scene.useOrderIndependentTransparency){if(U.setStencilBuffer(W),this._scene.useOrderIndependentTransparency){const N=this._scene.depthPeelingRenderer.render(this._transparentSubMeshes);N.length&&this._renderTransparent(N)}else this._renderTransparent(this._transparentSubMeshes);U.setAlphaMode(0)}if(U.setStencilBuffer(!1),this._edgesRenderers.length){for(let N=0;N<this._edgesRenderers.length;N++)this._edgesRenderers.data[N].render();U.setAlphaMode(0)}U.setStencilBuffer(W)}_renderOpaqueSorted(N){W._RenderSorted(N,this._opaqueSortCompareFn,this._scene.activeCamera,!1)}_renderAlphaTestSorted(N){W._RenderSorted(N,this._alphaTestSortCompareFn,this._scene.activeCamera,!1)}_renderTransparentSorted(N){W._RenderSorted(N,this._transparentSortCompareFn,this._scene.activeCamera,!0)}static _RenderSorted(N,q,C,d){let a,F=0;const w=C?C.globalPosition:W._ZeroVector;if(d)for(;F<N.length;F++)a=N.data[F],a._alphaIndex=a.getMesh().alphaIndex,a._distanceToCamera=U.Jq.Distance(a.getBoundingInfo().boundingSphere.centerWorld,w);const A=N.length===N.data.length?N.data:N.data.slice(0,N.length);q&&A.sort(q);const n=A[0].getMesh().lN();for(F=0;F<A.length;F++)if(a=A[F],!n._activeMeshesFrozenButKeepClipping||a.isInFrustum(n._frustumPlanes)){if(d){const N=a.bN();if(N&&N.needDepthPrePass){const q=N.lN().getEngine();q.setColorWrite(!1),q.setAlphaMode(0),a.render(!1),q.setColorWrite(!0)}}a.render(d)}}static defaultTransparentSortCompare(N,q){return N._alphaIndex>q._alphaIndex?1:N._alphaIndex<q._alphaIndex?-1:W.backToFrontSortCompare(N,q)}static backToFrontSortCompare(N,q){return N._distanceToCamera<q._distanceToCamera?1:N._distanceToCamera>q._distanceToCamera?-1:0}static frontToBackSortCompare(N,q){return N._distanceToCamera<q._distanceToCamera?-1:N._distanceToCamera>q._distanceToCamera?1:0}static PainterSortCompare(N,q){const C=N.getMesh(),d=q.getMesh();return C.material&&d.material?C.material.uniqueId-d.material.uniqueId:C.uniqueId-d.uniqueId}prepare(){this._opaqueSubMeshes.reset(),this._transparentSubMeshes.reset(),this._alphaTestSubMeshes.reset(),this._depthOnlySubMeshes.reset(),this._particleSystems.reset(),this.prepareSprites(),this._edgesRenderers.reset(),this._empty=!0}prepareSprites(){this._spriteManagers.reset()}dispose(){this._opaqueSubMeshes.dispose(),this._transparentSubMeshes.dispose(),this._alphaTestSubMeshes.dispose(),this._depthOnlySubMeshes.dispose(),this._particleSystems.dispose(),this._spriteManagers.dispose(),this._edgesRenderers.dispose()}dispatch(N,q,C){void 0===q&&(q=N.getMesh()),void 0===C&&(C=N.bN()),null!==C&&void 0!==C&&(C.needAlphaBlendingForMesh(q)?this._transparentSubMeshes.push(N):C.needAlphaTestingForMesh(q)?(C.needDepthPrePass&&this._depthOnlySubMeshes.push(N),this._alphaTestSubMeshes.push(N)):(C.needDepthPrePass&&this._depthOnlySubMeshes.push(N),this._opaqueSubMeshes.push(N)),q._renderingGroup=this,q._edgesRenderer&&q.isEnabled()&&q.isVisible&&q._edgesRenderer.isEnabled&&this._edgesRenderers.pushNoDuplicate(q._edgesRenderer),this._empty=!1)}dispatchSprites(N){this._spriteManagers.push(N),this._empty=!1}dispatchParticles(N){this._particleSystems.push(N),this._empty=!1}_renderParticles(N){if(0===this._particleSystems.length)return;const q=this._scene.activeCamera;this._scene.onBeforeParticlesRenderingObservable.notifyObservers(this._scene);for(let C=0;C<this._particleSystems.length;C++){const d=this._particleSystems.data[C];if(0===(q&&q.layerMask&d.layerMask))continue;const U=d.dq;U.position&&N&&-1===N.indexOf(U)||this._scene._activeParticles.addCount(d.render(),!1)}this._scene.onAfterParticlesRenderingObservable.notifyObservers(this._scene)}_renderSprites(){if(!this._scene.spritesEnabled||0===this._spriteManagers.length)return;const N=this._scene.activeCamera;this._scene.onBeforeSpritesRenderingObservable.notifyObservers(this._scene);for(let q=0;q<this._spriteManagers.length;q++){const C=this._spriteManagers.data[q];0!==(N&&N.layerMask&C.layerMask)&&C.render()}this._scene.onAfterSpritesRenderingObservable.notifyObservers(this._scene)}}W._ZeroVector=U.Jq.Zero();class a{}class F{get maintainStateBetweenFrames(){return this._maintainStateBetweenFrames}set maintainStateBetweenFrames(N){N!==this._maintainStateBetweenFrames&&(this._maintainStateBetweenFrames=N,this._maintainStateBetweenFrames||this.restoreDispachedFlags())}restoreDispachedFlags(){for(const N of this._scene.meshes)if(N.jd)for(const q of N.jd)q._wasDispatched=!1;if(this._scene.spriteManagers)for(const N of this._scene.spriteManagers)N._wasDispatched=!1;for(const N of this._scene.Bt)N._wasDispatched=!1}constructor(N){this._useSceneAutoClearSetup=!1,this._renderingGroups=new Array,this._autoClearDepthStencil={},this._customOpaqueSortCompareFn={},this._customAlphaTestSortCompareFn={},this._customTransparentSortCompareFn={},this._renderingGroupInfo=new a,this._maintainStateBetweenFrames=!1,this._scene=N;for(let q=F.MIN_RENDERINGGROUPS;q<F.MAX_RENDERINGGROUPS;q++)this._autoClearDepthStencil[q]={Od:!0,depth:!0,stencil:!0}}getRenderingGroup(N){const q=N||0;return this._prepareRenderingGroup(q),this._renderingGroups[q]}_clearDepthStencilBuffer(){let N=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],q=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._depthStencilBufferAlreadyCleaned||(this._scene.getEngine().clear(null,!1,N,q),this._depthStencilBufferAlreadyCleaned=!0)}render(N,q,C,d){const U=this._renderingGroupInfo;if(U.vq=this._scene,U.camera=this._scene.activeCamera,U.renderingManager=this,this._scene.spriteManagers&&d)for(let W=0;W<this._scene.spriteManagers.length;W++){const N=this._scene.spriteManagers[W];this.dispatchSprites(N)}for(let W=F.MIN_RENDERINGGROUPS;W<F.MAX_RENDERINGGROUPS;W++){this._depthStencilBufferAlreadyCleaned=W===F.MIN_RENDERINGGROUPS;const a=this._renderingGroups[W];if(!a||a._empty)continue;const w=1<<W;if(U.renderingGroupId=W,this._scene.onBeforeRenderingGroupObservable.notifyObservers(U,w),F.AUTOCLEAR){const N=this._useSceneAutoClearSetup?this._scene.getAutoClearDepthStencilSetup(W):this._autoClearDepthStencil[W];N&&N.Od&&this._clearDepthStencilBuffer(N.depth,N.stencil)}for(const N of this._scene._beforeRenderingGroupDrawStage)N.action(W);a.render(N,d,C,q);for(const N of this._scene._afterRenderingGroupDrawStage)N.action(W);this._scene.onAfterRenderingGroupObservable.notifyObservers(U,w)}}reset(){if(!this.maintainStateBetweenFrames)for(let N=F.MIN_RENDERINGGROUPS;N<F.MAX_RENDERINGGROUPS;N++){const q=this._renderingGroups[N];q&&q.prepare()}}resetSprites(){if(!this.maintainStateBetweenFrames)for(let N=F.MIN_RENDERINGGROUPS;N<F.MAX_RENDERINGGROUPS;N++){const q=this._renderingGroups[N];q&&q.prepareSprites()}}dispose(){this.freeRenderingGroups(),this._renderingGroups.length=0,this._renderingGroupInfo=null}freeRenderingGroups(){for(let N=F.MIN_RENDERINGGROUPS;N<F.MAX_RENDERINGGROUPS;N++){const q=this._renderingGroups[N];q&&q.dispose()}}_prepareRenderingGroup(N){void 0===this._renderingGroups[N]&&(this._renderingGroups[N]=new W(N,this._scene,this._customOpaqueSortCompareFn[N],this._customAlphaTestSortCompareFn[N],this._customTransparentSortCompareFn[N]))}dispatchSprites(N){this.maintainStateBetweenFrames&&N._wasDispatched||(N._wasDispatched=!0,this.getRenderingGroup(N.renderingGroupId).dispatchSprites(N))}dispatchParticles(N){this.maintainStateBetweenFrames&&N._wasDispatched||(N._wasDispatched=!0,this.getRenderingGroup(N.renderingGroupId).dispatchParticles(N))}dispatch(N,q,C){void 0===q&&(q=N.getMesh()),this.maintainStateBetweenFrames&&N._wasDispatched||(N._wasDispatched=!0,this.getRenderingGroup(q.renderingGroupId).dispatch(N,q,C))}setRenderingOrder(N){let q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(this._customOpaqueSortCompareFn[N]=q,this._customAlphaTestSortCompareFn[N]=C,this._customTransparentSortCompareFn[N]=d,this._renderingGroups[N]){const q=this._renderingGroups[N];q.opaqueSortCompareFn=this._customOpaqueSortCompareFn[N],q.alphaTestSortCompareFn=this._customAlphaTestSortCompareFn[N],q.transparentSortCompareFn=this._customTransparentSortCompareFn[N]}}setRenderingAutoClearDepthStencil(N,q){let C=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],d=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._autoClearDepthStencil[N]={Od:q,depth:C,stencil:d}}getAutoClearDepthStencilSetup(N){return this._autoClearDepthStencil[N]}}F.MAX_RENDERINGGROUPS=4,F.MIN_RENDERINGGROUPS=0,F.AUTOCLEAR=!0}}]);