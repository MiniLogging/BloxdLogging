"use strict";(self.fkqm0epoq5=self.fkqm0epoq5||[]).push([[19],{11788:(D,l,G)=>{G.d(l,{d:()=>b,e:()=>X});var V=G(11793),N=G(11546),M=G(11798);class b{get X(){return this._isDisposed}constructor(D,l,G){let N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,M=arguments.length>4&&void 0!==arguments[4]&&arguments[4],b=arguments.length>5&&void 0!==arguments[5]&&arguments[5],X=arguments.length>6&&void 0!==arguments[6]&&arguments[6],t=arguments.length>7?arguments[7]:void 0,R=arguments.length>8?arguments[8]:void 0;this._isAlreadyOwned=!1,this._isDisposed=!1,D&&D.uD?this._engine=D.uD().getEngine():this._engine=D,this._updatable=G,this._instanced=b,this._divisor=t||1,this._label=R,l instanceof V.b?(this._data=null,this._buffer=l):(this._data=l,this._buffer=null),this.byteStride=X?N:N*Float32Array.BYTES_PER_ELEMENT,M||this.create()}createVertexBuffer(D,l,G,V,N){let M=arguments.length>5&&void 0!==arguments[5]&&arguments[5],b=arguments.length>6?arguments[6]:void 0;const t=M?l:l*Float32Array.BYTES_PER_ELEMENT,R=V?M?V:V*Float32Array.BYTES_PER_ELEMENT:this.byteStride;return new X(this._engine,this,D,this._updatable,!0,R,void 0===N?this._instanced:N,t,G,void 0,void 0,!0,this._divisor||b)}isUpdatable(){return this._updatable}getData(){return this._data}getBuffer(){return this._buffer}getStrideSize(){return this.byteStride/Float32Array.BYTES_PER_ELEMENT}create(){let D=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;!D&&this._buffer||(D=D||this._data,D&&(this._buffer?this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,D),this._data=D):this._updatable?(this._buffer=this._engine.createDynamicVertexBuffer(D,this._label),this._data=D):this._buffer=this._engine.createVertexBuffer(D,void 0,this._label)))}_rebuild(){if(this._data)this._buffer=null,this.create(this._data);else{if(!this._buffer)return;if(this._buffer.nG>0)return void(this._updatable?this._buffer=this._engine.createDynamicVertexBuffer(this._buffer.nG,this._label):this._buffer=this._engine.createVertexBuffer(this._buffer.nG,void 0,this._label));N.d.Warn(`Missing data for buffer "${this._label}" ${this._buffer?"(uniqueId: "+this._buffer.uniqueId+")":""}. Buffer reconstruction failed.`),this._buffer=null}}update(D){this.create(D)}updateDirectly(D,l,G){let V=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this._buffer&&this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,D,V?l:l*Float32Array.BYTES_PER_ELEMENT,G?G*this.byteStride:void 0),this._data=0===l&&void 0===G?D:null)}_increaseReferences(){this._buffer&&(this._isAlreadyOwned?this._buffer.references++:this._isAlreadyOwned=!0)}dispose(){this._buffer&&this._engine._releaseBuffer(this._buffer)&&(this._isDisposed=!0,this._data=null,this._buffer=null)}}class X{get X(){return this._isDisposed}get instanceDivisor(){return this._instanceDivisor}set instanceDivisor(D){const l=0!=D;this._instanceDivisor=D,l!==this._instanced&&(this._instanced=l,this._computeHashCode())}get _maxVerticesCount(){const D=this.getData();return D?Array.isArray(D)?D.length/(this.byteStride/4)-this.byteOffset/4:(D.byteLength-this.byteOffset)/this.byteStride:0}constructor(D,l,G,V,N,t,R,n,g,j){let e=arguments.length>10&&void 0!==arguments[10]&&arguments[10],K=arguments.length>11&&void 0!==arguments[11]&&arguments[11],F=arguments.length>12&&void 0!==arguments[12]?arguments[12]:1,d=arguments.length>13&&void 0!==arguments[13]&&arguments[13];this._isDisposed=!1;let H=!1;if(this.el=D,"object"===typeof V&&null!==V?(H=V.updatable??!1,N=V.postponeInternalCreation,t=V.stride,R=V.instanced,n=V.offset,g=V.size,j=V.type,e=V.normalized??!1,K=V.useBytes??!1,F=V.divisor??1,d=V.takeBufferOwnership??!1,this._label=V.label):H=!!V,l instanceof b?(this._buffer=l,this._ownsBuffer=d):(this._buffer=new b(D,l,H,t,N,R,K,F,this._label),this._ownsBuffer=!0),this.uniqueId=X._Counter++,this._kind=G,void 0===j){const D=this.getData();this.type=D?X.GetDataType(D):X.FLOAT}else this.type=j;const h=(0,M.l)(this.type);K?(this._size=g||(t?t/h:X.DeduceStride(G)),this.byteStride=t||this._buffer.byteStride||this._size*h,this.byteOffset=n||0):(this._size=g||t||X.DeduceStride(G),this.byteStride=t?t*h:this._buffer.byteStride||this._size*h,this.byteOffset=(n||0)*h),this.normalized=e,this._instanced=void 0!==R&&R,this._instanceDivisor=R?F:0,this._alignBuffer(),this._computeHashCode()}_computeHashCode(){this.hashCode=(this.type-5120|0)+((this.normalized?1:0)<<3)+(this._size<<4)+((this._instanced?1:0)<<6)+(this.byteStride<<12)}_rebuild(){var D;null===(D=this._buffer)||void 0===D||D._rebuild()}getKind(){return this._kind}isUpdatable(){return this._buffer.isUpdatable()}getData(){return this._buffer.getData()}getFloatData(D,l){const G=this.getData();return G?(0,M.k)(G,this._size,this.type,this.byteOffset,this.byteStride,this.normalized,D,l):null}getBuffer(){return this._buffer.getBuffer()}getWrapperBuffer(){return this._buffer}getStrideSize(){return this.byteStride/(0,M.l)(this.type)}getOffset(){return this.byteOffset/(0,M.l)(this.type)}getSize(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this._size*(0,M.l)(this.type):this._size}getIsInstanced(){return this._instanced}getInstanceDivisor(){return this._instanceDivisor}create(D){this._buffer.create(D),this._alignBuffer()}update(D){this._buffer.update(D),this._alignBuffer()}updateDirectly(D,l){let G=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._buffer.updateDirectly(D,l,void 0,G),this._alignBuffer()}dispose(){this._ownsBuffer&&this._buffer.dispose(),this._isDisposed=!0}forEach(D,l){(0,M.i)(this._buffer.getData(),this.byteOffset,this.byteStride,this._size,this.type,D,this.normalized,((D,G)=>{for(let V=0;V<this._size;V++)l(D[V],G+V)}))}_alignBuffer(){}static DeduceStride(D){switch(D){case X.UVKind:case X.UV2Kind:case X.UV3Kind:case X.UV4Kind:case X.UV5Kind:case X.UV6Kind:return 2;case X.NormalKind:case X.PositionKind:return 3;case X.ColorKind:case X.ColorInstanceKind:case X.MatricesIndicesKind:case X.MatricesIndicesExtraKind:case X.MatricesWeightsKind:case X.MatricesWeightsExtraKind:case X.TangentKind:return 4;default:throw new Error("Invalid kind '"+D+"'")}}static GetDataType(D){return D instanceof Int8Array?X.BYTE:D instanceof Uint8Array?X.UNSIGNED_BYTE:D instanceof Int16Array?X.SHORT:D instanceof Uint16Array?X.UNSIGNED_SHORT:D instanceof Int32Array?X.INT:D instanceof Uint32Array?X.UNSIGNED_INT:X.FLOAT}static GetTypeByteLength(D){return(0,M.l)(D)}static ForEach(D,l,G,V,N,b,X,t){(0,M.i)(D,l,G,V,N,b,X,((D,l)=>{for(let G=0;G<V;G++)t(D[G],l+G)}))}static GetFloatData(D,l,G,V,N,b,X,t){return(0,M.k)(D,l,G,V,N,b,X,t)}}X._Counter=0,X.BYTE=5120,X.UNSIGNED_BYTE=5121,X.SHORT=5122,X.UNSIGNED_SHORT=5123,X.INT=5124,X.UNSIGNED_INT=5125,X.FLOAT=5126,X.PositionKind="position",X.NormalKind="normal",X.TangentKind="tangent",X.UVKind="uv",X.UV2Kind="uv2",X.UV3Kind="uv3",X.UV4Kind="uv4",X.UV5Kind="uv5",X.UV6Kind="uv6",X.ColorKind="color",X.ColorInstanceKind="instanceColor",X.MatricesIndicesKind="matricesIndices",X.MatricesWeightsKind="matricesWeights",X.MatricesIndicesExtraKind="matricesIndicesExtra",X.MatricesWeightsExtraKind="matricesWeightsExtra"},11798:(D,l,G)=>{G.d(l,{e:()=>j,h:()=>g,i:()=>t,k:()=>R,l:()=>b,n:()=>X,o:()=>n});var V=G(11546);function N(D,l,G,V){switch(l){case 5120:{let l=D.getInt8(G);return V&&(l=Math.max(l/127,-1)),l}case 5121:{let l=D.getUint8(G);return V&&(l/=255),l}case 5122:{let l=D.getInt16(G,!0);return V&&(l=Math.max(l/32767,-1)),l}case 5123:{let l=D.getUint16(G,!0);return V&&(l/=65535),l}case 5124:return D.getInt32(G,!0);case 5125:return D.getUint32(G,!0);case 5126:return D.getFloat32(G,!0);default:throw new Error(`Invalid component type ${l}`)}}function M(D,l,G,V,N){switch(l){case 5120:V&&(N=Math.round(127*N)),D.setInt8(G,N);break;case 5121:V&&(N=Math.round(255*N)),D.setUint8(G,N);break;case 5122:V&&(N=Math.round(32767*N)),D.setInt16(G,N,!0);break;case 5123:V&&(N=Math.round(65535*N)),D.setUint16(G,N,!0);break;case 5124:D.setInt32(G,N,!0);break;case 5125:D.setUint32(G,N,!0);break;case 5126:D.setFloat32(G,N,!0);break;default:throw new Error(`Invalid component type ${l}`)}}function b(D){switch(D){case 5120:case 5121:return 1;case 5122:case 5123:return 2;case 5124:case 5125:case 5126:return 4;default:throw new Error(`Invalid type '${D}'`)}}function X(D){switch(D){case 5120:return Int8Array;case 5121:return Uint8Array;case 5122:return Int16Array;case 5123:return Uint16Array;case 5124:return Int32Array;case 5125:return Uint32Array;case 5126:return Float32Array;default:throw new Error(`Invalid component type '${D}'`)}}function t(D,l,G,V,X,t,R,n){const g=new Array(V),j=new Array(V);if(D instanceof Array){let N=l/4;const M=G/4;for(let l=0;l<t;l+=V){for(let l=0;l<V;l++)g[l]=j[l]=D[N+l];n(j,l);for(let l=0;l<V;l++)g[l]!==j[l]&&(D[N+l]=j[l]);N+=M}}else{const e=ArrayBuffer.isView(D)?new DataView(D.buffer,D.byteOffset,D.byteLength):new DataView(D),K=b(X);for(let D=0;D<t;D+=V){for(let D=0,G=l;D<V;D++,G+=K)g[D]=j[D]=N(e,X,G,R);n(j,D);for(let D=0,G=l;D<V;D++,G+=K)g[D]!==j[D]&&M(e,X,G,R,j[D]);l+=G}}}function R(D,l,G,N,M,X,R,n){const g=l*b(G),j=R*l;if(5126!==G||M!==g){const V=new Float32Array(j);return t(D,N,M,l,G,j,X,((D,G)=>{for(let N=0;N<l;N++)V[G+N]=D[N]})),V}if(!(D instanceof Array||D instanceof Float32Array)||0!==N||D.length!==j){if(D instanceof Array){const l=N/4;return D.slice(l,l+j)}if(D instanceof ArrayBuffer)return new Float32Array(D,N,j);{const l=D.byteOffset+N;return 0!==(3&l)&&(V.d.Warn("Float array must be aligned to 4-bytes border"),n=!0),n?new Float32Array(D.buffer.slice(l,l+j*Float32Array.BYTES_PER_ELEMENT)):new Float32Array(D.buffer,l,j)}}return n?D.slice():D}function n(D,l,G,N,M,R,n,g){const j=b(G),e=X(G),K=n*l;if(Array.isArray(D)){if(0!==(3&N)||0!==(3&M))throw new Error("byteOffset and byteStride must be a multiple of 4 for number[] data.");const V=N/4,b=M/4;if(V+(n-1)*b+l>D.length)throw new Error("Last accessed index is out of bounds.");if(b<l)throw new Error("Data stride cannot be smaller than the component size.");if(b!==l){const V=new e(K);return t(D,N,M,l,G,K,R,((D,G)=>{for(let N=0;N<l;N++)V[G+N]=D[N]})),V}return new e(D.slice(V,V+K))}let F,d=N;D instanceof ArrayBuffer?F=D:(F=D.buffer,d+=D.byteOffset);if(d+(n-1)*M+l*j>F.byteLength)throw new Error("Last accessed byte is out of bounds.");const H=l*j;if(M<H)throw new Error("Byte stride cannot be smaller than the component's byte size.");if(M!==H){const D=new e(K);return t(F,d,M,l,G,K,R,((G,V)=>{for(let N=0;N<l;N++)D[V+N]=G[N]})),D}return 1!==j&&0!==(d&j-1)&&(V.d.Warn("Array must be aligned to border of element size. Data will be copied."),g=!0),g?new e(F.slice(d,d+K*j)):new e(F,d,K)}function g(D,l,G,N,M,X,R,n){const g=l*b(G),j=R*l;if(n.length!==j)throw new Error("Output length is not valid");if(5126===G&&M===g)if(D instanceof Array){const l=N/4;n.set(D,l)}else if(D instanceof ArrayBuffer){const l=new Float32Array(D,N,j);n.set(l)}else{const l=D.byteOffset+N;if(0!==(3&l))return V.d.Warn("Float array must be aligned to 4-bytes border"),void n.set(new Float32Array(D.buffer.slice(l,l+j*Float32Array.BYTES_PER_ELEMENT)));const G=new Float32Array(D.buffer,l,j);n.set(G)}else t(D,N,M,l,G,j,X,((D,G)=>{for(let V=0;V<l;V++)n[G+V]=D[V]}))}function j(D,l){let G=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(Array.isArray(D)){for(let N=0;N<l;N++)if(D[G+N]-V>65535)return!0;return!1}return 4===D.BYTES_PER_ELEMENT}},11793:(D,l,G)=>{G.d(l,{b:()=>V});class V{get underlyingResource(){return null}constructor(){this.references=0,this.nG=0,this.is32Bits=!1,this.uniqueId=V._Counter++}}V._Counter=0},11833:(D,l,G)=>{G.d(l,{c:()=>N});var V=G(11609);class N{static GetEffect(D){return void 0===D.getPipelineContext?D.effect:D}constructor(D){let l=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._wasPreviouslyReady=!1,this._forceRebindOnNextCall=!0,this._wasPreviouslyUsingInstances=null,this.effect=null,this.defines=null,this.drawContext=D.createDrawContext(),l&&(this.materialContext=D.createMaterialContext())}setEffect(D,l){let G=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];var V;(this.effect=D,void 0!==l&&(this.defines=l),G)&&(null===(V=this.drawContext)||void 0===V||V.reset())}dispose(){var D;let l=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.effect){const D=this.effect;l?D.dispose():V.d.SetImmediate((()=>{D.getEngine().onEndFrameObservable.addOnce((()=>{D.dispose()}))})),this.effect=null}null===(D=this.drawContext)||void 0===D||D.dispose()}}},11923:(D,l,G)=>{G.d(l,{b:()=>N});var V=G(11759);class N{static GetPlanes(D){const l=[];for(let G=0;G<6;G++)l.push(new V.d(0,0,0,0));return N.GetPlanesToRef(D,l),l}static GetNearPlaneToRef(D,l){const G=D.m;l.normal.x=G[3]+G[2],l.normal.y=G[7]+G[6],l.normal.z=G[11]+G[10],l.d=G[15]+G[14],l.normalize()}static GetFarPlaneToRef(D,l){const G=D.m;l.normal.x=G[3]-G[2],l.normal.y=G[7]-G[6],l.normal.z=G[11]-G[10],l.d=G[15]-G[14],l.normalize()}static GetLeftPlaneToRef(D,l){const G=D.m;l.normal.x=G[3]+G[0],l.normal.y=G[7]+G[4],l.normal.z=G[11]+G[8],l.d=G[15]+G[12],l.normalize()}static GetRightPlaneToRef(D,l){const G=D.m;l.normal.x=G[3]-G[0],l.normal.y=G[7]-G[4],l.normal.z=G[11]-G[8],l.d=G[15]-G[12],l.normalize()}static GetTopPlaneToRef(D,l){const G=D.m;l.normal.x=G[3]-G[1],l.normal.y=G[7]-G[5],l.normal.z=G[11]-G[9],l.d=G[15]-G[13],l.normalize()}static GetBottomPlaneToRef(D,l){const G=D.m;l.normal.x=G[3]+G[1],l.normal.y=G[7]+G[5],l.normal.z=G[11]+G[9],l.d=G[15]+G[13],l.normalize()}static GetPlanesToRef(D,l){N.GetNearPlaneToRef(D,l[0]),N.GetFarPlaneToRef(D,l[1]),N.GetLeftPlaneToRef(D,l[2]),N.GetRightPlaneToRef(D,l[3]),N.GetTopPlaneToRef(D,l[4]),N.GetBottomPlaneToRef(D,l[5])}static IsPointInFrustum(D,l){for(let G=0;G<6;G++)if(l[G].dotCoordinate(D)<0)return!1;return!0}}},11934:(D,l,G)=>{G.d(l,{c:()=>N});var V=G(11554);class N{get min(){return this._min}get max(){return this._max}get average(){return this._average}get lastSecAverage(){return this._lastSecAverage}get current(){return this._current}get total(){return this._totalAccumulated}get count(){return this._totalValueCount}constructor(){this._startMonitoringTime=0,this._min=0,this._max=0,this._average=0,this._lastSecAverage=0,this._current=0,this._totalValueCount=0,this._totalAccumulated=0,this._lastSecAccumulated=0,this._lastSecTime=0,this._lastSecValueCount=0}fetchNewFrame(){this._totalValueCount++,this._current=0,this._lastSecValueCount++}addCount(D,l){N.Enabled&&(this._current+=D,l&&this._fetchResult())}beginMonitoring(){N.Enabled&&(this._startMonitoringTime=V.c.Now)}endMonitoring(){let D=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(!N.Enabled)return;D&&this.fetchNewFrame();const l=V.c.Now;this._current=l-this._startMonitoringTime,D&&this._fetchResult()}Gb(){this._fetchResult()}_fetchResult(){this._totalAccumulated+=this._current,this._lastSecAccumulated+=this._current,this._min=Math.min(this._min,this._current),this._max=Math.max(this._max,this._current),this._average=this._totalAccumulated/this._totalValueCount;const D=V.c.Now;D-this._lastSecTime>1e3&&(this._lastSecAverage=this._lastSecAccumulated/this._lastSecValueCount,this._lastSecTime=D,this._lastSecAccumulated=0,this._lastSecValueCount=0)}}N.Enabled=!0},11811:(D,l,G)=>{G.d(l,{c:()=>N,f:()=>V});class V{constructor(D){this.length=0,this.data=new Array(D),this._id=V._GlobalId++}push(D){this.data[this.length++]=D,this.length>this.data.length&&(this.data.length*=2)}forEach(D){for(let l=0;l<this.length;l++)D(this.data[l])}sort(D){this.data.sort(D)}reset(){this.length=0}dispose(){this.reset(),this.data&&(this.data.length=0)}concat(D){if(0!==D.length){this.length+D.length>this.data.length&&(this.data.length=2*(this.length+D.length));for(let l=0;l<D.length;l++)this.data[this.length++]=(D.data||D)[l]}}indexOf(D){const l=this.data.indexOf(D);return l>=this.length?-1:l}contains(D){return-1!==this.indexOf(D)}}V._GlobalId=0;class N extends V{constructor(){super(...arguments),this._duplicateId=0}push(D){super.push(D),D.__smartArrayFlags||(D.__smartArrayFlags={}),D.__smartArrayFlags[this._id]=this._duplicateId}pushNoDuplicate(D){return(!D.__smartArrayFlags||D.__smartArrayFlags[this._id]!==this._duplicateId)&&(this.push(D),!0)}reset(){super.reset(),this._duplicateId++}concatWithNoDuplicate(D){if(0!==D.length){this.length+D.length>this.data.length&&(this.data.length=2*(this.length+D.length));for(let l=0;l<D.length;l++){const G=(D.data||D)[l];this.pushNoDuplicate(G)}}}}},11784:(D,l,G)=>{G.d(l,{c:()=>M});var V=G(11788),N=G(11532);class M{constructor(D){this._vertexBuffers={},this.onBeforeRenderObservable=new N.e,this._scene=D}_prepareBuffers(){if(this._vertexBuffers[V.e.PositionKind])return;const D=[];D.push(1,1),D.push(-1,1),D.push(-1,-1),D.push(1,-1),this._vertexBuffers[V.e.PositionKind]=new V.e(this._scene.getEngine(),D,V.e.PositionKind,!1,!1,2),this._buildIndexBuffer()}_buildIndexBuffer(){const D=[];D.push(0),D.push(1),D.push(2),D.push(0),D.push(2),D.push(3),this._indexBuffer=this._scene.getEngine().createIndexBuffer(D)}_rebuild(){const D=this._vertexBuffers[V.e.PositionKind];D&&(D._rebuild(),this._buildIndexBuffer())}_prepareFrame(){let D=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const G=this._scene.activeCamera;return!!G&&(l=l||G._postProcesses.filter((D=>null!=D)),!(!l||0===l.length||!this._scene.postProcessesEnabled)&&(l[0].activate(G,D,null!==l&&void 0!==l),!0))}directRender(D){let l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,G=arguments.length>2&&void 0!==arguments[2]&&arguments[2],V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,M=arguments.length>5&&void 0!==arguments[5]&&arguments[5],b=arguments.length>6&&void 0!==arguments[6]?arguments[6]:D.length;const X=this._scene.getEngine();for(let R=0;R<b;R++){var t;if(R<D.length-1)D[R+1].activate(this._scene.activeCamera||this._scene,null===l||void 0===l?void 0:l.texture);else l?X.bindFramebuffer(l,V,void 0,void 0,G,N):M||X.restoreDefaultFramebuffer(),null===(t=X._debugInsertMarker)||void 0===t||t.call(X,`post process ${D[R].name} output`);const b=D[R],n=b.apply();n&&(b.onBeforeRenderObservable.notifyObservers(n),this._prepareBuffers(),X.bindBuffers(this._vertexBuffers,this._indexBuffer,n),X.drawElementsType(0,0,6),b.onAfterRenderObservable.notifyObservers(n))}X.setDepthBuffer(!0),X.setDepthWrite(!0)}_finalizeFrame(D,l,G,V){let N=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const M=this._scene.activeCamera;if(!M)return;if(this.onBeforeRenderObservable.notifyObservers(this),0===(V=V||M._postProcesses.filter((D=>null!=D))).length||!this._scene.postProcessesEnabled)return;const b=this._scene.getEngine();for(let t=0,R=V.length;t<R;t++){const n=V[t];var X;if(t<R-1)n._outputTexture=V[t+1].activate(M,null===l||void 0===l?void 0:l.texture);else l?(b.bindFramebuffer(l,G,void 0,void 0,N),n._outputTexture=l):(b.restoreDefaultFramebuffer(),n._outputTexture=null),null===(X=b._debugInsertMarker)||void 0===X||X.call(b,`post process ${V[t].name} output`);if(D)break;const g=n.apply();g&&(n.onBeforeRenderObservable.notifyObservers(g),this._prepareBuffers(),b.bindBuffers(this._vertexBuffers,this._indexBuffer,g),b.drawElementsType(0,0,6),n.onAfterRenderObservable.notifyObservers(g))}b.setDepthBuffer(!0),b.setDepthWrite(!0),b.setAlphaMode(0)}dispose(){const D=this._vertexBuffers[V.e.PositionKind];D&&(D.dispose(),this._vertexBuffers[V.e.PositionKind]=null),this._indexBuffer&&(this._scene.getEngine()._releaseBuffer(this._indexBuffer),this._indexBuffer=null)}}},11805:(D,l,G)=>{G.d(l,{d:()=>X});var V=G(11811),N=G(11710);class M{set opaqueSortCompareFn(D){this._opaqueSortCompareFn=D||M.PainterSortCompare,this._renderOpaque=this._renderOpaqueSorted}set alphaTestSortCompareFn(D){this._alphaTestSortCompareFn=D||M.PainterSortCompare,this._renderAlphaTest=this._renderAlphaTestSorted}set transparentSortCompareFn(D){this._transparentSortCompareFn=D||M.defaultTransparentSortCompare,this._renderTransparent=this._renderTransparentSorted}constructor(D,l){let G=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,M=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.index=D,this._opaqueSubMeshes=new V.f(256),this._transparentSubMeshes=new V.f(256),this._alphaTestSubMeshes=new V.f(256),this._depthOnlySubMeshes=new V.f(256),this._particleSystems=new V.f(256),this._spriteManagers=new V.f(256),this._empty=!0,this._edgesRenderers=new V.c(16),this._scene=l,this.opaqueSortCompareFn=G,this.alphaTestSortCompareFn=N,this.transparentSortCompareFn=M}render(D,l,G,V){if(D)return void D(this._opaqueSubMeshes,this._alphaTestSubMeshes,this._transparentSubMeshes,this._depthOnlySubMeshes);const N=this._scene.getEngine();0!==this._depthOnlySubMeshes.length&&(N.setColorWrite(!1),this._renderAlphaTest(this._depthOnlySubMeshes),N.setColorWrite(!0)),0!==this._opaqueSubMeshes.length&&this._renderOpaque(this._opaqueSubMeshes),0!==this._alphaTestSubMeshes.length&&this._renderAlphaTest(this._alphaTestSubMeshes);const M=N.getStencilBuffer();if(N.setStencilBuffer(!1),l&&this._renderSprites(),G&&this._renderParticles(V),this.onBeforeTransparentRendering&&this.onBeforeTransparentRendering(),0!==this._transparentSubMeshes.length||this._scene.useOrderIndependentTransparency){if(N.setStencilBuffer(M),this._scene.useOrderIndependentTransparency){const D=this._scene.depthPeelingRenderer.render(this._transparentSubMeshes);D.length&&this._renderTransparent(D)}else this._renderTransparent(this._transparentSubMeshes);N.setAlphaMode(0)}if(N.setStencilBuffer(!1),this._edgesRenderers.length){for(let D=0;D<this._edgesRenderers.length;D++)this._edgesRenderers.data[D].render();N.setAlphaMode(0)}N.setStencilBuffer(M)}_renderOpaqueSorted(D){M._RenderSorted(D,this._opaqueSortCompareFn,this._scene.activeCamera,!1)}_renderAlphaTestSorted(D){M._RenderSorted(D,this._alphaTestSortCompareFn,this._scene.activeCamera,!1)}_renderTransparentSorted(D){M._RenderSorted(D,this._transparentSortCompareFn,this._scene.activeCamera,!0)}static _RenderSorted(D,l,G,V){let b,X=0;const t=G?G.globalPosition:M._ZeroVector;if(V)for(;X<D.length;X++)b=D.data[X],b._alphaIndex=b.getMesh().alphaIndex,b._distanceToCamera=N.Kl.Distance(b.getBoundingInfo().boundingSphere.centerWorld,t);const R=D.length===D.data.length?D.data:D.data.slice(0,D.length);l&&R.sort(l);const n=R[0].getMesh().uD();for(X=0;X<R.length;X++)if(b=R[X],!n._activeMeshesFrozenButKeepClipping||b.isInFrustum(n._frustumPlanes)){if(V){const D=b.cD();if(D&&D.needDepthPrePass){const l=D.uD().getEngine();l.setColorWrite(!1),l.setAlphaMode(0),b.render(!1),l.setColorWrite(!0)}}b.render(V)}}static defaultTransparentSortCompare(D,l){return D._alphaIndex>l._alphaIndex?1:D._alphaIndex<l._alphaIndex?-1:M.backToFrontSortCompare(D,l)}static backToFrontSortCompare(D,l){return D._distanceToCamera<l._distanceToCamera?1:D._distanceToCamera>l._distanceToCamera?-1:0}static frontToBackSortCompare(D,l){return D._distanceToCamera<l._distanceToCamera?-1:D._distanceToCamera>l._distanceToCamera?1:0}static PainterSortCompare(D,l){const G=D.getMesh(),V=l.getMesh();return G.material&&V.material?G.material.uniqueId-V.material.uniqueId:G.uniqueId-V.uniqueId}prepare(){this._opaqueSubMeshes.reset(),this._transparentSubMeshes.reset(),this._alphaTestSubMeshes.reset(),this._depthOnlySubMeshes.reset(),this._particleSystems.reset(),this.prepareSprites(),this._edgesRenderers.reset(),this._empty=!0}prepareSprites(){this._spriteManagers.reset()}dispose(){this._opaqueSubMeshes.dispose(),this._transparentSubMeshes.dispose(),this._alphaTestSubMeshes.dispose(),this._depthOnlySubMeshes.dispose(),this._particleSystems.dispose(),this._spriteManagers.dispose(),this._edgesRenderers.dispose()}dispatch(D,l,G){void 0===l&&(l=D.getMesh()),void 0===G&&(G=D.cD()),null!==G&&void 0!==G&&(G.needAlphaBlendingForMesh(l)?this._transparentSubMeshes.push(D):G.needAlphaTestingForMesh(l)?(G.needDepthPrePass&&this._depthOnlySubMeshes.push(D),this._alphaTestSubMeshes.push(D)):(G.needDepthPrePass&&this._depthOnlySubMeshes.push(D),this._opaqueSubMeshes.push(D)),l._renderingGroup=this,l._edgesRenderer&&l.isEnabled()&&l.isVisible&&l._edgesRenderer.isEnabled&&this._edgesRenderers.pushNoDuplicate(l._edgesRenderer),this._empty=!1)}dispatchSprites(D){this._spriteManagers.push(D),this._empty=!1}dispatchParticles(D){this._particleSystems.push(D),this._empty=!1}_renderParticles(D){if(0===this._particleSystems.length)return;const l=this._scene.activeCamera;this._scene.onBeforeParticlesRenderingObservable.notifyObservers(this._scene);for(let G=0;G<this._particleSystems.length;G++){const V=this._particleSystems.data[G];if(0===(l&&l.layerMask&V.layerMask))continue;const N=V.Vl;N.position&&D&&-1===D.indexOf(N)||this._scene._activeParticles.addCount(V.render(),!1)}this._scene.onAfterParticlesRenderingObservable.notifyObservers(this._scene)}_renderSprites(){if(!this._scene.spritesEnabled||0===this._spriteManagers.length)return;const D=this._scene.activeCamera;this._scene.onBeforeSpritesRenderingObservable.notifyObservers(this._scene);for(let l=0;l<this._spriteManagers.length;l++){const G=this._spriteManagers.data[l];0!==(D&&D.layerMask&G.layerMask)&&G.render()}this._scene.onAfterSpritesRenderingObservable.notifyObservers(this._scene)}}M._ZeroVector=N.Kl.Zero();class b{}class X{get maintainStateBetweenFrames(){return this._maintainStateBetweenFrames}set maintainStateBetweenFrames(D){D!==this._maintainStateBetweenFrames&&(this._maintainStateBetweenFrames=D,this._maintainStateBetweenFrames||this.restoreDispachedFlags())}restoreDispachedFlags(){for(const D of this._scene.meshes)if(D.nb)for(const l of D.nb)l._wasDispatched=!1;if(this._scene.spriteManagers)for(const D of this._scene.spriteManagers)D._wasDispatched=!1;for(const D of this._scene.xj)D._wasDispatched=!1}constructor(D){this._useSceneAutoClearSetup=!1,this._renderingGroups=new Array,this._autoClearDepthStencil={},this._customOpaqueSortCompareFn={},this._customAlphaTestSortCompareFn={},this._customTransparentSortCompareFn={},this._renderingGroupInfo=new b,this._maintainStateBetweenFrames=!1,this._scene=D;for(let l=X.MIN_RENDERINGGROUPS;l<X.MAX_RENDERINGGROUPS;l++)this._autoClearDepthStencil[l]={Rb:!0,depth:!0,stencil:!0}}getRenderingGroup(D){const l=D||0;return this._prepareRenderingGroup(l),this._renderingGroups[l]}_clearDepthStencilBuffer(){let D=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],l=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._depthStencilBufferAlreadyCleaned||(this._scene.getEngine().clear(null,!1,D,l),this._depthStencilBufferAlreadyCleaned=!0)}render(D,l,G,V){const N=this._renderingGroupInfo;if(N.dl=this._scene,N.camera=this._scene.activeCamera,N.renderingManager=this,this._scene.spriteManagers&&V)for(let M=0;M<this._scene.spriteManagers.length;M++){const D=this._scene.spriteManagers[M];this.dispatchSprites(D)}for(let M=X.MIN_RENDERINGGROUPS;M<X.MAX_RENDERINGGROUPS;M++){this._depthStencilBufferAlreadyCleaned=M===X.MIN_RENDERINGGROUPS;const b=this._renderingGroups[M];if(!b||b._empty)continue;const t=1<<M;if(N.renderingGroupId=M,this._scene.onBeforeRenderingGroupObservable.notifyObservers(N,t),X.AUTOCLEAR){const D=this._useSceneAutoClearSetup?this._scene.getAutoClearDepthStencilSetup(M):this._autoClearDepthStencil[M];D&&D.Rb&&this._clearDepthStencilBuffer(D.depth,D.stencil)}for(const D of this._scene._beforeRenderingGroupDrawStage)D.action(M);b.render(D,V,G,l);for(const D of this._scene._afterRenderingGroupDrawStage)D.action(M);this._scene.onAfterRenderingGroupObservable.notifyObservers(N,t)}}reset(){if(!this.maintainStateBetweenFrames)for(let D=X.MIN_RENDERINGGROUPS;D<X.MAX_RENDERINGGROUPS;D++){const l=this._renderingGroups[D];l&&l.prepare()}}resetSprites(){if(!this.maintainStateBetweenFrames)for(let D=X.MIN_RENDERINGGROUPS;D<X.MAX_RENDERINGGROUPS;D++){const l=this._renderingGroups[D];l&&l.prepareSprites()}}dispose(){this.freeRenderingGroups(),this._renderingGroups.length=0,this._renderingGroupInfo=null}freeRenderingGroups(){for(let D=X.MIN_RENDERINGGROUPS;D<X.MAX_RENDERINGGROUPS;D++){const l=this._renderingGroups[D];l&&l.dispose()}}_prepareRenderingGroup(D){void 0===this._renderingGroups[D]&&(this._renderingGroups[D]=new M(D,this._scene,this._customOpaqueSortCompareFn[D],this._customAlphaTestSortCompareFn[D],this._customTransparentSortCompareFn[D]))}dispatchSprites(D){this.maintainStateBetweenFrames&&D._wasDispatched||(D._wasDispatched=!0,this.getRenderingGroup(D.renderingGroupId).dispatchSprites(D))}dispatchParticles(D){this.maintainStateBetweenFrames&&D._wasDispatched||(D._wasDispatched=!0,this.getRenderingGroup(D.renderingGroupId).dispatchParticles(D))}dispatch(D,l,G){void 0===l&&(l=D.getMesh()),this.maintainStateBetweenFrames&&D._wasDispatched||(D._wasDispatched=!0,this.getRenderingGroup(l.renderingGroupId).dispatch(D,l,G))}setRenderingOrder(D){let l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,G=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(this._customOpaqueSortCompareFn[D]=l,this._customAlphaTestSortCompareFn[D]=G,this._customTransparentSortCompareFn[D]=V,this._renderingGroups[D]){const l=this._renderingGroups[D];l.opaqueSortCompareFn=this._customOpaqueSortCompareFn[D],l.alphaTestSortCompareFn=this._customAlphaTestSortCompareFn[D],l.transparentSortCompareFn=this._customTransparentSortCompareFn[D]}}setRenderingAutoClearDepthStencil(D,l){let G=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],V=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._autoClearDepthStencil[D]={Rb:l,depth:G,stencil:V}}getAutoClearDepthStencilSetup(D){return this._autoClearDepthStencil[D]}}X.MAX_RENDERINGGROUPS=4,X.MIN_RENDERINGGROUPS=0,X.AUTOCLEAR=!0}}]);