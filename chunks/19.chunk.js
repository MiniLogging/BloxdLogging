"use strict";(self.qcdfysujsyf=self.qcdfysujsyf||[]).push([[19],{12768:(K,A,T)=>{T.d(A,{b:()=>f,d:()=>O});var G=T(12774),B=T(12548),L=T(12779);class f{get O(){return this._isDisposed}constructor(K,A,T){let B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,L=arguments.length>4&&void 0!==arguments[4]&&arguments[4],f=arguments.length>5&&void 0!==arguments[5]&&arguments[5],O=arguments.length>6&&void 0!==arguments[6]&&arguments[6],C=arguments.length>7?arguments[7]:void 0,Q=arguments.length>8?arguments[8]:void 0;this._isAlreadyOwned=!1,this._isDisposed=!1,K&&K.SK?this._engine=K.SK().getEngine():this._engine=K,this._updatable=T,this._instanced=f,this._divisor=C||1,this._label=Q,A instanceof G.d?(this._data=null,this._buffer=A):(this._data=A,this._buffer=null),this.byteStride=O?B:B*Float32Array.BYTES_PER_ELEMENT,L||this.create()}createVertexBuffer(K,A,T,G,B){let L=arguments.length>5&&void 0!==arguments[5]&&arguments[5],f=arguments.length>6?arguments[6]:void 0;const C=L?A:A*Float32Array.BYTES_PER_ELEMENT,Q=G?L?G:G*Float32Array.BYTES_PER_ELEMENT:this.byteStride;return new O(this._engine,this,K,this._updatable,!0,Q,void 0===B?this._instanced:B,C,T,void 0,void 0,!0,this._divisor||f)}isUpdatable(){return this._updatable}getData(){return this._data}getBuffer(){return this._buffer}getStrideSize(){return this.byteStride/Float32Array.BYTES_PER_ELEMENT}create(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;!K&&this._buffer||(K=K||this._data,K&&(this._buffer?this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,K),this._data=K):this._updatable?(this._buffer=this._engine.createDynamicVertexBuffer(K,this._label),this._data=K):this._buffer=this._engine.createVertexBuffer(K,void 0,this._label)))}_rebuild(){if(this._data)this._buffer=null,this.create(this._data);else{if(!this._buffer)return;if(this._buffer.aO>0)return void(this._updatable?this._buffer=this._engine.createDynamicVertexBuffer(this._buffer.aO,this._label):this._buffer=this._engine.createVertexBuffer(this._buffer.aO,void 0,this._label));B.d.Warn(`Missing data for buffer "${this._label}" ${this._buffer?"(uniqueId: "+this._buffer.uniqueId+")":""}. Buffer reconstruction failed.`),this._buffer=null}}update(K){this.create(K)}updateDirectly(K,A,T){let G=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this._buffer&&this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,K,G?A:A*Float32Array.BYTES_PER_ELEMENT,T?T*this.byteStride:void 0),this._data=0===A&&void 0===T?K:null)}_increaseReferences(){this._buffer&&(this._isAlreadyOwned?this._buffer.references++:this._isAlreadyOwned=!0)}dispose(){this._buffer&&this._engine._releaseBuffer(this._buffer)&&(this._isDisposed=!0,this._data=null,this._buffer=null)}}class O{get O(){return this._isDisposed}get instanceDivisor(){return this._instanceDivisor}set instanceDivisor(K){const A=0!=K;this._instanceDivisor=K,A!==this._instanced&&(this._instanced=A,this._computeHashCode())}get _maxVerticesCount(){const K=this.getData();return K?Array.isArray(K)?K.length/(this.byteStride/4)-this.byteOffset/4:(K.byteLength-this.byteOffset)/this.byteStride:0}constructor(K,A,T,G,B,C,Q,Y,Z,x){let J=arguments.length>10&&void 0!==arguments[10]&&arguments[10],b=arguments.length>11&&void 0!==arguments[11]&&arguments[11],P=arguments.length>12&&void 0!==arguments[12]?arguments[12]:1,F=arguments.length>13&&void 0!==arguments[13]&&arguments[13];this._isDisposed=!1;let d=!1;if(this.bA=K,"object"===typeof G&&null!==G?(d=G.updatable??!1,B=G.postponeInternalCreation,C=G.stride,Q=G.instanced,Y=G.offset,Z=G.size,x=G.type,J=G.normalized??!1,b=G.useBytes??!1,P=G.divisor??1,F=G.takeBufferOwnership??!1,this._label=G.label):d=!!G,A instanceof f?(this._buffer=A,this._ownsBuffer=F):(this._buffer=new f(K,A,d,C,B,Q,b,P,this._label),this._ownsBuffer=!0),this.uniqueId=O._Counter++,this._kind=T,void 0===x){const K=this.getData();this.type=K?O.GetDataType(K):O.FLOAT}else this.type=x;const N=(0,L.p)(this.type);b?(this._size=Z||(C?C/N:O.DeduceStride(T)),this.byteStride=C||this._buffer.byteStride||this._size*N,this.byteOffset=Y||0):(this._size=Z||C||O.DeduceStride(T),this.byteStride=C?C*N:this._buffer.byteStride||this._size*N,this.byteOffset=(Y||0)*N),this.normalized=J,this._instanced=void 0!==Q&&Q,this._instanceDivisor=Q?P:0,this._alignBuffer(),this._computeHashCode()}_computeHashCode(){this.hashCode=(this.type-5120|0)+((this.normalized?1:0)<<3)+(this._size<<4)+((this._instanced?1:0)<<6)+(this.byteStride<<12)}_rebuild(){var K;null===(K=this._buffer)||void 0===K||K._rebuild()}getKind(){return this._kind}isUpdatable(){return this._buffer.isUpdatable()}getData(){return this._buffer.getData()}getFloatData(K,A){const T=this.getData();return T?(0,L.l)(T,this._size,this.type,this.byteOffset,this.byteStride,this.normalized,K,A):null}getBuffer(){return this._buffer.getBuffer()}getWrapperBuffer(){return this._buffer}getStrideSize(){return this.byteStride/(0,L.p)(this.type)}getOffset(){return this.byteOffset/(0,L.p)(this.type)}getSize(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this._size*(0,L.p)(this.type):this._size}getIsInstanced(){return this._instanced}getInstanceDivisor(){return this._instanceDivisor}create(K){this._buffer.create(K),this._alignBuffer()}update(K){this._buffer.update(K),this._alignBuffer()}updateDirectly(K,A){let T=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._buffer.updateDirectly(K,A,void 0,T),this._alignBuffer()}dispose(){this._ownsBuffer&&this._buffer.dispose(),this._isDisposed=!0}forEach(K,A){(0,L.k)(this._buffer.getData(),this.byteOffset,this.byteStride,this._size,this.type,K,this.normalized,((K,T)=>{for(let G=0;G<this._size;G++)A(K[G],T+G)}))}_alignBuffer(){}static DeduceStride(K){switch(K){case O.UVKind:case O.UV2Kind:case O.UV3Kind:case O.UV4Kind:case O.UV5Kind:case O.UV6Kind:return 2;case O.NormalKind:case O.PositionKind:return 3;case O.ColorKind:case O.ColorInstanceKind:case O.MatricesIndicesKind:case O.MatricesIndicesExtraKind:case O.MatricesWeightsKind:case O.MatricesWeightsExtraKind:case O.TangentKind:return 4;default:throw new Error("Invalid kind '"+K+"'")}}static GetDataType(K){return K instanceof Int8Array?O.BYTE:K instanceof Uint8Array?O.UNSIGNED_BYTE:K instanceof Int16Array?O.SHORT:K instanceof Uint16Array?O.UNSIGNED_SHORT:K instanceof Int32Array?O.INT:K instanceof Uint32Array?O.UNSIGNED_INT:O.FLOAT}static GetTypeByteLength(K){return(0,L.p)(K)}static ForEach(K,A,T,G,B,f,O,C){(0,L.k)(K,A,T,G,B,f,O,((K,A)=>{for(let T=0;T<G;T++)C(K[T],A+T)}))}static GetFloatData(K,A,T,G,B,f,O,C){return(0,L.l)(K,A,T,G,B,f,O,C)}}O._Counter=0,O.BYTE=5120,O.UNSIGNED_BYTE=5121,O.SHORT=5122,O.UNSIGNED_SHORT=5123,O.INT=5124,O.UNSIGNED_INT=5125,O.FLOAT=5126,O.PositionKind="position",O.NormalKind="normal",O.TangentKind="tangent",O.UVKind="uv",O.UV2Kind="uv2",O.UV3Kind="uv3",O.UV4Kind="uv4",O.UV5Kind="uv5",O.UV6Kind="uv6",O.ColorKind="color",O.ColorInstanceKind="instanceColor",O.MatricesIndicesKind="matricesIndices",O.MatricesWeightsKind="matricesWeights",O.MatricesIndicesExtraKind="matricesIndicesExtra",O.MatricesWeightsExtraKind="matricesWeightsExtra"},12779:(K,A,T)=>{T.d(A,{d:()=>x,g:()=>Z,k:()=>C,l:()=>Q,p:()=>f,q:()=>O,s:()=>Y});var G=T(12548);function B(K,A,T,G){switch(A){case 5120:{let A=K.getInt8(T);return G&&(A=Math.max(A/127,-1)),A}case 5121:{let A=K.getUint8(T);return G&&(A/=255),A}case 5122:{let A=K.getInt16(T,!0);return G&&(A=Math.max(A/32767,-1)),A}case 5123:{let A=K.getUint16(T,!0);return G&&(A/=65535),A}case 5124:return K.getInt32(T,!0);case 5125:return K.getUint32(T,!0);case 5126:return K.getFloat32(T,!0);default:throw new Error(`Invalid component type ${A}`)}}function L(K,A,T,G,B){switch(A){case 5120:G&&(B=Math.round(127*B)),K.setInt8(T,B);break;case 5121:G&&(B=Math.round(255*B)),K.setUint8(T,B);break;case 5122:G&&(B=Math.round(32767*B)),K.setInt16(T,B,!0);break;case 5123:G&&(B=Math.round(65535*B)),K.setUint16(T,B,!0);break;case 5124:K.setInt32(T,B,!0);break;case 5125:K.setUint32(T,B,!0);break;case 5126:K.setFloat32(T,B,!0);break;default:throw new Error(`Invalid component type ${A}`)}}function f(K){switch(K){case 5120:case 5121:return 1;case 5122:case 5123:return 2;case 5124:case 5125:case 5126:return 4;default:throw new Error(`Invalid type '${K}'`)}}function O(K){switch(K){case 5120:return Int8Array;case 5121:return Uint8Array;case 5122:return Int16Array;case 5123:return Uint16Array;case 5124:return Int32Array;case 5125:return Uint32Array;case 5126:return Float32Array;default:throw new Error(`Invalid component type '${K}'`)}}function C(K,A,T,G,O,C,Q,Y){const Z=new Array(G),x=new Array(G);if(K instanceof Array){let B=A/4;const L=T/4;for(let A=0;A<C;A+=G){for(let A=0;A<G;A++)Z[A]=x[A]=K[B+A];Y(x,A);for(let A=0;A<G;A++)Z[A]!==x[A]&&(K[B+A]=x[A]);B+=L}}else{const J=ArrayBuffer.isView(K)?new DataView(K.buffer,K.byteOffset,K.byteLength):new DataView(K),b=f(O);for(let K=0;K<C;K+=G){for(let K=0,T=A;K<G;K++,T+=b)Z[K]=x[K]=B(J,O,T,Q);Y(x,K);for(let K=0,T=A;K<G;K++,T+=b)Z[K]!==x[K]&&L(J,O,T,Q,x[K]);A+=T}}}function Q(K,A,T,B,L,O,Q,Y){const Z=A*f(T),x=Q*A;if(5126!==T||L!==Z){const G=new Float32Array(x);return C(K,B,L,A,T,x,O,((K,T)=>{for(let B=0;B<A;B++)G[T+B]=K[B]})),G}if(!(K instanceof Array||K instanceof Float32Array)||0!==B||K.length!==x){if(K instanceof Array){const A=B/4;return K.slice(A,A+x)}if(K instanceof ArrayBuffer)return new Float32Array(K,B,x);{const A=K.byteOffset+B;return 0!==(3&A)&&(G.d.Warn("Float array must be aligned to 4-bytes border"),Y=!0),Y?new Float32Array(K.buffer.slice(A,A+x*Float32Array.BYTES_PER_ELEMENT)):new Float32Array(K.buffer,A,x)}}return Y?K.slice():K}function Y(K,A,T,B,L,Q,Y,Z){const x=f(T),J=O(T),b=Y*A;if(Array.isArray(K)){if(0!==(3&B)||0!==(3&L))throw new Error("byteOffset and byteStride must be a multiple of 4 for number[] data.");const G=B/4,f=L/4;if(G+(Y-1)*f+A>K.length)throw new Error("Last accessed index is out of bounds.");if(f<A)throw new Error("Data stride cannot be smaller than the component size.");if(f!==A){const G=new J(b);return C(K,B,L,A,T,b,Q,((K,T)=>{for(let B=0;B<A;B++)G[T+B]=K[B]})),G}return new J(K.slice(G,G+b))}let P,F=B;K instanceof ArrayBuffer?P=K:(P=K.buffer,F+=K.byteOffset);if(F+(Y-1)*L+A*x>P.byteLength)throw new Error("Last accessed byte is out of bounds.");const d=A*x;if(L<d)throw new Error("Byte stride cannot be smaller than the component's byte size.");if(L!==d){const K=new J(b);return C(P,F,L,A,T,b,Q,((T,G)=>{for(let B=0;B<A;B++)K[G+B]=T[B]})),K}return 1!==x&&0!==(F&x-1)&&(G.d.Warn("Array must be aligned to border of element size. Data will be copied."),Z=!0),Z?new J(P.slice(F,F+b*x)):new J(P,F,b)}function Z(K,A,T,B,L,O,Q,Y){const Z=A*f(T),x=Q*A;if(Y.length!==x)throw new Error("Output length is not valid");if(5126===T&&L===Z)if(K instanceof Array){const A=B/4;Y.set(K,A)}else if(K instanceof ArrayBuffer){const A=new Float32Array(K,B,x);Y.set(A)}else{const A=K.byteOffset+B;if(0!==(3&A))return G.d.Warn("Float array must be aligned to 4-bytes border"),void Y.set(new Float32Array(K.buffer.slice(A,A+x*Float32Array.BYTES_PER_ELEMENT)));const T=new Float32Array(K.buffer,A,x);Y.set(T)}else C(K,B,L,A,T,x,O,((K,T)=>{for(let G=0;G<A;G++)Y[T+G]=K[G]}))}function x(K,A){let T=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,G=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(Array.isArray(K)){for(let B=0;B<A;B++)if(K[T+B]-G>65535)return!0;return!1}return 4===K.BYTES_PER_ELEMENT}},12774:(K,A,T)=>{T.d(A,{d:()=>G});class G{get underlyingResource(){return null}constructor(){this.references=0,this.aO=0,this.is32Bits=!1,this.uniqueId=G._Counter++}}G._Counter=0},12812:(K,A,T)=>{T.d(A,{b:()=>B});var G=T(12596);class B{static GetEffect(K){return void 0===K.getPipelineContext?K.effect:K}constructor(K){let A=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._wasPreviouslyReady=!1,this._forceRebindOnNextCall=!0,this._wasPreviouslyUsingInstances=null,this.effect=null,this.defines=null,this.drawContext=K.createDrawContext(),A&&(this.materialContext=K.createMaterialContext())}setEffect(K,A){let T=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];var G;(this.effect=K,void 0!==A&&(this.defines=A),T)&&(null===(G=this.drawContext)||void 0===G||G.reset())}dispose(){var K;let A=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.effect){const K=this.effect;A?K.dispose():G.d.SetImmediate((()=>{K.getEngine().onEndFrameObservable.addOnce((()=>{K.dispose()}))})),this.effect=null}null===(K=this.drawContext)||void 0===K||K.dispose()}}},12901:(K,A,T)=>{T.d(A,{d:()=>B});var G=T(12747);class B{static GetPlanes(K){const A=[];for(let T=0;T<6;T++)A.push(new G.e(0,0,0,0));return B.GetPlanesToRef(K,A),A}static GetNearPlaneToRef(K,A){const T=K.m;A.normal.x=T[3]+T[2],A.normal.y=T[7]+T[6],A.normal.z=T[11]+T[10],A.d=T[15]+T[14],A.normalize()}static GetFarPlaneToRef(K,A){const T=K.m;A.normal.x=T[3]-T[2],A.normal.y=T[7]-T[6],A.normal.z=T[11]-T[10],A.d=T[15]-T[14],A.normalize()}static GetLeftPlaneToRef(K,A){const T=K.m;A.normal.x=T[3]+T[0],A.normal.y=T[7]+T[4],A.normal.z=T[11]+T[8],A.d=T[15]+T[12],A.normalize()}static GetRightPlaneToRef(K,A){const T=K.m;A.normal.x=T[3]-T[0],A.normal.y=T[7]-T[4],A.normal.z=T[11]-T[8],A.d=T[15]-T[12],A.normalize()}static GetTopPlaneToRef(K,A){const T=K.m;A.normal.x=T[3]-T[1],A.normal.y=T[7]-T[5],A.normal.z=T[11]-T[9],A.d=T[15]-T[13],A.normalize()}static GetBottomPlaneToRef(K,A){const T=K.m;A.normal.x=T[3]+T[1],A.normal.y=T[7]+T[5],A.normal.z=T[11]+T[9],A.d=T[15]+T[13],A.normalize()}static GetPlanesToRef(K,A){B.GetNearPlaneToRef(K,A[0]),B.GetFarPlaneToRef(K,A[1]),B.GetLeftPlaneToRef(K,A[2]),B.GetRightPlaneToRef(K,A[3]),B.GetTopPlaneToRef(K,A[4]),B.GetBottomPlaneToRef(K,A[5])}static IsPointInFrustum(K,A){for(let T=0;T<6;T++)if(A[T].dotCoordinate(K)<0)return!1;return!0}}},12912:(K,A,T)=>{T.d(A,{b:()=>B});var G=T(12553);class B{get min(){return this._min}get max(){return this._max}get average(){return this._average}get lastSecAverage(){return this._lastSecAverage}get current(){return this._current}get total(){return this._totalAccumulated}get count(){return this._totalValueCount}constructor(){this._startMonitoringTime=0,this._min=0,this._max=0,this._average=0,this._lastSecAverage=0,this._current=0,this._totalValueCount=0,this._totalAccumulated=0,this._lastSecAccumulated=0,this._lastSecTime=0,this._lastSecValueCount=0}fetchNewFrame(){this._totalValueCount++,this._current=0,this._lastSecValueCount++}addCount(K,A){B.Enabled&&(this._current+=K,A&&this._fetchResult())}beginMonitoring(){B.Enabled&&(this._startMonitoringTime=G.d.Now)}endMonitoring(){let K=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(!B.Enabled)return;K&&this.fetchNewFrame();const A=G.d.Now;this._current=A-this._startMonitoringTime,K&&this._fetchResult()}Pf(){this._fetchResult()}_fetchResult(){this._totalAccumulated+=this._current,this._lastSecAccumulated+=this._current,this._min=Math.min(this._min,this._current),this._max=Math.max(this._max,this._current),this._average=this._totalAccumulated/this._totalValueCount;const K=G.d.Now;K-this._lastSecTime>1e3&&(this._lastSecAverage=this._lastSecAccumulated/this._lastSecValueCount,this._lastSecTime=K,this._lastSecAccumulated=0,this._lastSecValueCount=0)}}B.Enabled=!0},12786:(K,A,T)=>{T.d(A,{b:()=>B,d:()=>G});class G{constructor(K){this.length=0,this.data=new Array(K),this._id=G._GlobalId++}push(K){this.data[this.length++]=K,this.length>this.data.length&&(this.data.length*=2)}forEach(K){for(let A=0;A<this.length;A++)K(this.data[A])}sort(K){this.data.sort(K)}reset(){this.length=0}dispose(){this.reset(),this.data&&(this.data.length=0)}concat(K){if(0!==K.length){this.length+K.length>this.data.length&&(this.data.length=2*(this.length+K.length));for(let A=0;A<K.length;A++)this.data[this.length++]=(K.data||K)[A]}}indexOf(K){const A=this.data.indexOf(K);return A>=this.length?-1:A}contains(K){return-1!==this.indexOf(K)}}G._GlobalId=0;class B extends G{constructor(){super(...arguments),this._duplicateId=0}push(K){super.push(K),K.__smartArrayFlags||(K.__smartArrayFlags={}),K.__smartArrayFlags[this._id]=this._duplicateId}pushNoDuplicate(K){return(!K.__smartArrayFlags||K.__smartArrayFlags[this._id]!==this._duplicateId)&&(this.push(K),!0)}reset(){super.reset(),this._duplicateId++}concatWithNoDuplicate(K){if(0!==K.length){this.length+K.length>this.data.length&&(this.data.length=2*(this.length+K.length));for(let A=0;A<K.length;A++){const T=(K.data||K)[A];this.pushNoDuplicate(T)}}}}},12766:(K,A,T)=>{T.d(A,{b:()=>L});var G=T(12768),B=T(12534);class L{constructor(K){this._vertexBuffers={},this.onBeforeRenderObservable=new B.e,this._scene=K}_prepareBuffers(){if(this._vertexBuffers[G.d.PositionKind])return;const K=[];K.push(1,1),K.push(-1,1),K.push(-1,-1),K.push(1,-1),this._vertexBuffers[G.d.PositionKind]=new G.d(this._scene.getEngine(),K,G.d.PositionKind,!1,!1,2),this._buildIndexBuffer()}_buildIndexBuffer(){const K=[];K.push(0),K.push(1),K.push(2),K.push(0),K.push(2),K.push(3),this._indexBuffer=this._scene.getEngine().createIndexBuffer(K)}_rebuild(){const K=this._vertexBuffers[G.d.PositionKind];K&&(K._rebuild(),this._buildIndexBuffer())}_prepareFrame(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,A=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const T=this._scene.activeCamera;return!!T&&(A=A||T._postProcesses.filter((K=>null!=K)),!(!A||0===A.length||!this._scene.postProcessesEnabled)&&(A[0].activate(T,K,null!==A&&void 0!==A),!0))}directRender(K){let A=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,T=arguments.length>2&&void 0!==arguments[2]&&arguments[2],G=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,L=arguments.length>5&&void 0!==arguments[5]&&arguments[5],f=arguments.length>6&&void 0!==arguments[6]?arguments[6]:K.length;const O=this._scene.getEngine();for(let Q=0;Q<f;Q++){var C;if(Q<K.length-1)K[Q+1].activate(this._scene.activeCamera||this._scene,null===A||void 0===A?void 0:A.texture);else A?O.bindFramebuffer(A,G,void 0,void 0,T,B):L||O.restoreDefaultFramebuffer(),null===(C=O._debugInsertMarker)||void 0===C||C.call(O,`post process ${K[Q].name} output`);const f=K[Q],Y=f.apply();Y&&(f.onBeforeRenderObservable.notifyObservers(Y),this._prepareBuffers(),O.bindBuffers(this._vertexBuffers,this._indexBuffer,Y),O.drawElementsType(0,0,6),f.onAfterRenderObservable.notifyObservers(Y))}O.setDepthBuffer(!0),O.setDepthWrite(!0)}_finalizeFrame(K,A,T,G){let B=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const L=this._scene.activeCamera;if(!L)return;if(this.onBeforeRenderObservable.notifyObservers(this),0===(G=G||L._postProcesses.filter((K=>null!=K))).length||!this._scene.postProcessesEnabled)return;const f=this._scene.getEngine();for(let C=0,Q=G.length;C<Q;C++){const Y=G[C];var O;if(C<Q-1)Y._outputTexture=G[C+1].activate(L,null===A||void 0===A?void 0:A.texture);else A?(f.bindFramebuffer(A,T,void 0,void 0,B),Y._outputTexture=A):(f.restoreDefaultFramebuffer(),Y._outputTexture=null),null===(O=f._debugInsertMarker)||void 0===O||O.call(f,`post process ${G[C].name} output`);if(K)break;const Z=Y.apply();Z&&(Y.onBeforeRenderObservable.notifyObservers(Z),this._prepareBuffers(),f.bindBuffers(this._vertexBuffers,this._indexBuffer,Z),f.drawElementsType(0,0,6),Y.onAfterRenderObservable.notifyObservers(Z))}f.setDepthBuffer(!0),f.setDepthWrite(!0),f.setAlphaMode(0)}dispose(){const K=this._vertexBuffers[G.d.PositionKind];K&&(K.dispose(),this._vertexBuffers[G.d.PositionKind]=null),this._indexBuffer&&(this._scene.getEngine()._releaseBuffer(this._indexBuffer),this._indexBuffer=null)}}},12782:(K,A,T)=>{T.d(A,{b:()=>O});var G=T(12786),B=T(12700);class L{set opaqueSortCompareFn(K){this._opaqueSortCompareFn=K||L.PainterSortCompare,this._renderOpaque=this._renderOpaqueSorted}set alphaTestSortCompareFn(K){this._alphaTestSortCompareFn=K||L.PainterSortCompare,this._renderAlphaTest=this._renderAlphaTestSorted}set transparentSortCompareFn(K){this._transparentSortCompareFn=K||L.defaultTransparentSortCompare,this._renderTransparent=this._renderTransparentSorted}constructor(K,A){let T=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.index=K,this._opaqueSubMeshes=new G.d(256),this._transparentSubMeshes=new G.d(256),this._alphaTestSubMeshes=new G.d(256),this._depthOnlySubMeshes=new G.d(256),this._particleSystems=new G.d(256),this._spriteManagers=new G.d(256),this._empty=!0,this._edgesRenderers=new G.b(16),this._scene=A,this.opaqueSortCompareFn=T,this.alphaTestSortCompareFn=B,this.transparentSortCompareFn=L}render(K,A,T,G){if(K)return void K(this._opaqueSubMeshes,this._alphaTestSubMeshes,this._transparentSubMeshes,this._depthOnlySubMeshes);const B=this._scene.getEngine();0!==this._depthOnlySubMeshes.length&&(B.setColorWrite(!1),this._renderAlphaTest(this._depthOnlySubMeshes),B.setColorWrite(!0)),0!==this._opaqueSubMeshes.length&&this._renderOpaque(this._opaqueSubMeshes),0!==this._alphaTestSubMeshes.length&&this._renderAlphaTest(this._alphaTestSubMeshes);const L=B.getStencilBuffer();if(B.setStencilBuffer(!1),A&&this._renderSprites(),T&&this._renderParticles(G),this.onBeforeTransparentRendering&&this.onBeforeTransparentRendering(),0!==this._transparentSubMeshes.length||this._scene.useOrderIndependentTransparency){if(B.setStencilBuffer(L),this._scene.useOrderIndependentTransparency){const K=this._scene.depthPeelingRenderer.render(this._transparentSubMeshes);K.length&&this._renderTransparent(K)}else this._renderTransparent(this._transparentSubMeshes);B.setAlphaMode(0)}if(B.setStencilBuffer(!1),this._edgesRenderers.length){for(let K=0;K<this._edgesRenderers.length;K++)this._edgesRenderers.data[K].render();B.setAlphaMode(0)}B.setStencilBuffer(L)}_renderOpaqueSorted(K){L._RenderSorted(K,this._opaqueSortCompareFn,this._scene.activeCamera,!1)}_renderAlphaTestSorted(K){L._RenderSorted(K,this._alphaTestSortCompareFn,this._scene.activeCamera,!1)}_renderTransparentSorted(K){L._RenderSorted(K,this._transparentSortCompareFn,this._scene.activeCamera,!0)}static _RenderSorted(K,A,T,G){let f,O=0;const C=T?T.globalPosition:L._ZeroVector;if(G)for(;O<K.length;O++)f=K.data[O],f._alphaIndex=f.getMesh().alphaIndex,f._distanceToCamera=B.PA.Distance(f.getBoundingInfo().boundingSphere.centerWorld,C);const Q=K.length===K.data.length?K.data:K.data.slice(0,K.length);A&&Q.sort(A);const Y=Q[0].getMesh().SK();for(O=0;O<Q.length;O++)if(f=Q[O],!Y._activeMeshesFrozenButKeepClipping||f.isInFrustum(Y._frustumPlanes)){if(G){const K=f.jK();if(K&&K.needDepthPrePass){const A=K.SK().getEngine();A.setColorWrite(!1),A.setAlphaMode(0),f.render(!1),A.setColorWrite(!0)}}f.render(G)}}static defaultTransparentSortCompare(K,A){return K._alphaIndex>A._alphaIndex?1:K._alphaIndex<A._alphaIndex?-1:L.backToFrontSortCompare(K,A)}static backToFrontSortCompare(K,A){return K._distanceToCamera<A._distanceToCamera?1:K._distanceToCamera>A._distanceToCamera?-1:0}static frontToBackSortCompare(K,A){return K._distanceToCamera<A._distanceToCamera?-1:K._distanceToCamera>A._distanceToCamera?1:0}static PainterSortCompare(K,A){const T=K.getMesh(),G=A.getMesh();return T.material&&G.material?T.material.uniqueId-G.material.uniqueId:T.uniqueId-G.uniqueId}prepare(){this._opaqueSubMeshes.reset(),this._transparentSubMeshes.reset(),this._alphaTestSubMeshes.reset(),this._depthOnlySubMeshes.reset(),this._particleSystems.reset(),this.prepareSprites(),this._edgesRenderers.reset(),this._empty=!0}prepareSprites(){this._spriteManagers.reset()}dispose(){this._opaqueSubMeshes.dispose(),this._transparentSubMeshes.dispose(),this._alphaTestSubMeshes.dispose(),this._depthOnlySubMeshes.dispose(),this._particleSystems.dispose(),this._spriteManagers.dispose(),this._edgesRenderers.dispose()}dispatch(K,A,T){void 0===A&&(A=K.getMesh()),void 0===T&&(T=K.jK()),null!==T&&void 0!==T&&(T.needAlphaBlendingForMesh(A)?this._transparentSubMeshes.push(K):T.needAlphaTestingForMesh(A)?(T.needDepthPrePass&&this._depthOnlySubMeshes.push(K),this._alphaTestSubMeshes.push(K)):(T.needDepthPrePass&&this._depthOnlySubMeshes.push(K),this._opaqueSubMeshes.push(K)),A._renderingGroup=this,A._edgesRenderer&&A.isEnabled()&&A.isVisible&&A._edgesRenderer.isEnabled&&this._edgesRenderers.pushNoDuplicate(A._edgesRenderer),this._empty=!1)}dispatchSprites(K){this._spriteManagers.push(K),this._empty=!1}dispatchParticles(K){this._particleSystems.push(K),this._empty=!1}_renderParticles(K){if(0===this._particleSystems.length)return;const A=this._scene.activeCamera;this._scene.onBeforeParticlesRenderingObservable.notifyObservers(this._scene);for(let T=0;T<this._particleSystems.length;T++){const G=this._particleSystems.data[T];if(0===(A&&A.layerMask&G.layerMask))continue;const B=G.BA;B.position&&K&&-1===K.indexOf(B)||this._scene._activeParticles.addCount(G.render(),!1)}this._scene.onAfterParticlesRenderingObservable.notifyObservers(this._scene)}_renderSprites(){if(!this._scene.spritesEnabled||0===this._spriteManagers.length)return;const K=this._scene.activeCamera;this._scene.onBeforeSpritesRenderingObservable.notifyObservers(this._scene);for(let A=0;A<this._spriteManagers.length;A++){const T=this._spriteManagers.data[A];0!==(K&&K.layerMask&T.layerMask)&&T.render()}this._scene.onAfterSpritesRenderingObservable.notifyObservers(this._scene)}}L._ZeroVector=B.PA.Zero();class f{}class O{get maintainStateBetweenFrames(){return this._maintainStateBetweenFrames}set maintainStateBetweenFrames(K){K!==this._maintainStateBetweenFrames&&(this._maintainStateBetweenFrames=K,this._maintainStateBetweenFrames||this.restoreDispachedFlags())}restoreDispachedFlags(){for(const K of this._scene.meshes)if(K.hf)for(const A of K.hf)A._wasDispatched=!1;if(this._scene.spriteManagers)for(const K of this._scene.spriteManagers)K._wasDispatched=!1;for(const K of this._scene.Nx)K._wasDispatched=!1}constructor(K){this._useSceneAutoClearSetup=!1,this._renderingGroups=new Array,this._autoClearDepthStencil={},this._customOpaqueSortCompareFn={},this._customAlphaTestSortCompareFn={},this._customTransparentSortCompareFn={},this._renderingGroupInfo=new f,this._maintainStateBetweenFrames=!1,this._scene=K;for(let A=O.MIN_RENDERINGGROUPS;A<O.MAX_RENDERINGGROUPS;A++)this._autoClearDepthStencil[A]={ef:!0,depth:!0,df:!0}}getRenderingGroup(K){const A=K||0;return this._prepareRenderingGroup(A),this._renderingGroups[A]}_clearDepthStencilBuffer(){let K=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],A=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._depthStencilBufferAlreadyCleaned||(this._scene.getEngine().clear(null,!1,K,A),this._depthStencilBufferAlreadyCleaned=!0)}render(K,A,T,G){const B=this._renderingGroupInfo;if(B.dA=this._scene,B.camera=this._scene.activeCamera,B.renderingManager=this,this._scene.spriteManagers&&G)for(let L=0;L<this._scene.spriteManagers.length;L++){const K=this._scene.spriteManagers[L];this.dispatchSprites(K)}for(let L=O.MIN_RENDERINGGROUPS;L<O.MAX_RENDERINGGROUPS;L++){this._depthStencilBufferAlreadyCleaned=L===O.MIN_RENDERINGGROUPS;const f=this._renderingGroups[L];if(!f||f._empty)continue;const C=1<<L;if(B.renderingGroupId=L,this._scene.onBeforeRenderingGroupObservable.notifyObservers(B,C),O.AUTOCLEAR){const K=this._useSceneAutoClearSetup?this._scene.getAutoClearDepthStencilSetup(L):this._autoClearDepthStencil[L];K&&K.ef&&this._clearDepthStencilBuffer(K.depth,K.df)}for(const K of this._scene._beforeRenderingGroupDrawStage)K.action(L);f.render(K,G,T,A);for(const K of this._scene._afterRenderingGroupDrawStage)K.action(L);this._scene.onAfterRenderingGroupObservable.notifyObservers(B,C)}}reset(){if(!this.maintainStateBetweenFrames)for(let K=O.MIN_RENDERINGGROUPS;K<O.MAX_RENDERINGGROUPS;K++){const A=this._renderingGroups[K];A&&A.prepare()}}resetSprites(){if(!this.maintainStateBetweenFrames)for(let K=O.MIN_RENDERINGGROUPS;K<O.MAX_RENDERINGGROUPS;K++){const A=this._renderingGroups[K];A&&A.prepareSprites()}}dispose(){this.freeRenderingGroups(),this._renderingGroups.length=0,this._renderingGroupInfo=null}freeRenderingGroups(){for(let K=O.MIN_RENDERINGGROUPS;K<O.MAX_RENDERINGGROUPS;K++){const A=this._renderingGroups[K];A&&A.dispose()}}_prepareRenderingGroup(K){void 0===this._renderingGroups[K]&&(this._renderingGroups[K]=new L(K,this._scene,this._customOpaqueSortCompareFn[K],this._customAlphaTestSortCompareFn[K],this._customTransparentSortCompareFn[K]))}dispatchSprites(K){this.maintainStateBetweenFrames&&K._wasDispatched||(K._wasDispatched=!0,this.getRenderingGroup(K.renderingGroupId).dispatchSprites(K))}dispatchParticles(K){this.maintainStateBetweenFrames&&K._wasDispatched||(K._wasDispatched=!0,this.getRenderingGroup(K.renderingGroupId).dispatchParticles(K))}dispatch(K,A,T){void 0===A&&(A=K.getMesh()),this.maintainStateBetweenFrames&&K._wasDispatched||(K._wasDispatched=!0,this.getRenderingGroup(A.renderingGroupId).dispatch(K,A,T))}setRenderingOrder(K){let A=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,T=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,G=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(this._customOpaqueSortCompareFn[K]=A,this._customAlphaTestSortCompareFn[K]=T,this._customTransparentSortCompareFn[K]=G,this._renderingGroups[K]){const A=this._renderingGroups[K];A.opaqueSortCompareFn=this._customOpaqueSortCompareFn[K],A.alphaTestSortCompareFn=this._customAlphaTestSortCompareFn[K],A.transparentSortCompareFn=this._customTransparentSortCompareFn[K]}}setRenderingAutoClearDepthStencil(K,A){let T=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],G=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._autoClearDepthStencil[K]={ef:A,depth:T,df:G}}getAutoClearDepthStencilSetup(K){return this._autoClearDepthStencil[K]}}O.MAX_RENDERINGGROUPS=4,O.MIN_RENDERINGGROUPS=0,O.AUTOCLEAR=!0}}]);