"use strict";(self.wy695la1oic=self.wy695la1oic||[]).push([[19],{11452:(S,v,D)=>{D.d(v,{b:()=>m,d:()=>B});var z=D(11461),e=D(11190),N=D(11469);class m{get h(){return this._isDisposed}constructor(S,v,D){let e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,N=arguments.length>4&&void 0!==arguments[4]&&arguments[4],m=arguments.length>5&&void 0!==arguments[5]&&arguments[5],B=arguments.length>6&&void 0!==arguments[6]&&arguments[6],g=arguments.length>7?arguments[7]:void 0,E=arguments.length>8?arguments[8]:void 0;this._isAlreadyOwned=!1,this._isDisposed=!1,S&&S.xS?this._engine=S.xS().getEngine():this._engine=S,this._updatable=D,this._instanced=m,this._divisor=g||1,this._label=E,v instanceof z.d?(this._data=null,this._buffer=v):(this._data=v,this._buffer=null),this.byteStride=B?e:e*Float32Array.BYTES_PER_ELEMENT,N||this.create()}createVertexBuffer(S,v,D,z,e){let N=arguments.length>5&&void 0!==arguments[5]&&arguments[5],m=arguments.length>6?arguments[6]:void 0;const g=N?v:v*Float32Array.BYTES_PER_ELEMENT,E=z?N?z:z*Float32Array.BYTES_PER_ELEMENT:this.byteStride;return new B(this._engine,this,S,this._updatable,!0,E,void 0===e?this._instanced:e,g,D,void 0,void 0,!0,this._divisor||m)}isUpdatable(){return this._updatable}getData(){return this._data}getBuffer(){return this._buffer}getStrideSize(){return this.byteStride/Float32Array.BYTES_PER_ELEMENT}create(){let S=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;!S&&this._buffer||(S=S||this._data,S&&(this._buffer?this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,S),this._data=S):this._updatable?(this._buffer=this._engine.createDynamicVertexBuffer(S,this._label),this._data=S):this._buffer=this._engine.createVertexBuffer(S,void 0,this._label)))}_rebuild(){if(this._data)this._buffer=null,this.create(this._data);else{if(!this._buffer)return;if(this._buffer.Jv>0)return void(this._updatable?this._buffer=this._engine.createDynamicVertexBuffer(this._buffer.Jv,this._label):this._buffer=this._engine.createVertexBuffer(this._buffer.Jv,void 0,this._label));e.b.Warn(`Missing data for buffer "${this._label}" ${this._buffer?"(uniqueId: "+this._buffer.uniqueId+")":""}. Buffer reconstruction failed.`),this._buffer=null}}update(S){this.create(S)}updateDirectly(S,v,D){let z=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this._buffer&&this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,S,z?v:v*Float32Array.BYTES_PER_ELEMENT,D?D*this.byteStride:void 0),this._data=0===v&&void 0===D?S:null)}_increaseReferences(){this._buffer&&(this._isAlreadyOwned?this._buffer.references++:this._isAlreadyOwned=!0)}dispose(){this._buffer&&this._engine._releaseBuffer(this._buffer)&&(this._isDisposed=!0,this._data=null,this._buffer=null)}}class B{get h(){return this._isDisposed}get instanceDivisor(){return this._instanceDivisor}set instanceDivisor(S){const v=0!=S;this._instanceDivisor=S,v!==this._instanced&&(this._instanced=v,this._computeHashCode())}get _maxVerticesCount(){const S=this.getData();return S?Array.isArray(S)?S.length/(this.byteStride/4)-this.byteOffset/4:(S.byteLength-this.byteOffset)/this.byteStride:0}constructor(S,v,D,z,e,g,E,h,A,w){let n=arguments.length>10&&void 0!==arguments[10]&&arguments[10],R=arguments.length>11&&void 0!==arguments[11]&&arguments[11],O=arguments.length>12&&void 0!==arguments[12]?arguments[12]:1,I=arguments.length>13&&void 0!==arguments[13]&&arguments[13];this._isDisposed=!1;let K=!1;if(this.nv=S,"object"===typeof z&&null!==z?(K=z.updatable??!1,e=z.postponeInternalCreation,g=z.stride,E=z.instanced,h=z.offset,A=z.size,w=z.type,n=z.normalized??!1,R=z.useBytes??!1,O=z.divisor??1,I=z.takeBufferOwnership??!1,this._label=z.label):K=!!z,v instanceof m?(this._buffer=v,this._ownsBuffer=I):(this._buffer=new m(S,v,K,g,e,E,R,O,this._label),this._ownsBuffer=!0),this.uniqueId=B._Counter++,this._kind=D,void 0===w){const S=this.getData();this.type=S?B.GetDataType(S):B.FLOAT}else this.type=w;const q=(0,N.m)(this.type);R?(this._size=A||(g?g/q:B.DeduceStride(D)),this.byteStride=g||this._buffer.byteStride||this._size*q,this.byteOffset=h||0):(this._size=A||g||B.DeduceStride(D),this.byteStride=g?g*q:this._buffer.byteStride||this._size*q,this.byteOffset=(h||0)*q),this.normalized=n,this._instanced=void 0!==E&&E,this._instanceDivisor=E?O:0,this._alignBuffer(),this._computeHashCode()}_computeHashCode(){this.hashCode=(this.type-5120|0)+((this.normalized?1:0)<<3)+(this._size<<4)+((this._instanced?1:0)<<6)+(this.byteStride<<12)}_rebuild(){var S;null===(S=this._buffer)||void 0===S||S._rebuild()}getKind(){return this._kind}isUpdatable(){return this._buffer.isUpdatable()}getData(){return this._buffer.getData()}getFloatData(S,v){const D=this.getData();return D?(0,N.j)(D,this._size,this.type,this.byteOffset,this.byteStride,this.normalized,S,v):null}getBuffer(){return this._buffer.getBuffer()}getWrapperBuffer(){return this._buffer}getStrideSize(){return this.byteStride/(0,N.m)(this.type)}getOffset(){return this.byteOffset/(0,N.m)(this.type)}getSize(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this._size*(0,N.m)(this.type):this._size}getIsInstanced(){return this._instanced}getInstanceDivisor(){return this._instanceDivisor}create(S){this._buffer.create(S),this._alignBuffer()}update(S){this._buffer.update(S),this._alignBuffer()}updateDirectly(S,v){let D=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._buffer.updateDirectly(S,v,void 0,D),this._alignBuffer()}dispose(){this._ownsBuffer&&this._buffer.dispose(),this._isDisposed=!0}forEach(S,v){(0,N.h)(this._buffer.getData(),this.byteOffset,this.byteStride,this._size,this.type,S,this.normalized,((S,D)=>{for(let z=0;z<this._size;z++)v(S[z],D+z)}))}_alignBuffer(){}static DeduceStride(S){switch(S){case B.UVKind:case B.UV2Kind:case B.UV3Kind:case B.UV4Kind:case B.UV5Kind:case B.UV6Kind:return 2;case B.NormalKind:case B.PositionKind:return 3;case B.ColorKind:case B.ColorInstanceKind:case B.MatricesIndicesKind:case B.MatricesIndicesExtraKind:case B.MatricesWeightsKind:case B.MatricesWeightsExtraKind:case B.TangentKind:return 4;default:throw new Error("Invalid kind '"+S+"'")}}static GetDataType(S){return S instanceof Int8Array?B.BYTE:S instanceof Uint8Array?B.UNSIGNED_BYTE:S instanceof Int16Array?B.SHORT:S instanceof Uint16Array?B.UNSIGNED_SHORT:S instanceof Int32Array?B.INT:S instanceof Uint32Array?B.UNSIGNED_INT:B.FLOAT}static GetTypeByteLength(S){return(0,N.m)(S)}static ForEach(S,v,D,z,e,m,B,g){(0,N.h)(S,v,D,z,e,m,B,((S,v)=>{for(let D=0;D<z;D++)g(S[D],v+D)}))}static GetFloatData(S,v,D,z,e,m,B,g){return(0,N.j)(S,v,D,z,e,m,B,g)}}B._Counter=0,B.BYTE=5120,B.UNSIGNED_BYTE=5121,B.SHORT=5122,B.UNSIGNED_SHORT=5123,B.INT=5124,B.UNSIGNED_INT=5125,B.FLOAT=5126,B.PositionKind="position",B.NormalKind="normal",B.TangentKind="tangent",B.UVKind="uv",B.UV2Kind="uv2",B.UV3Kind="uv3",B.UV4Kind="uv4",B.UV5Kind="uv5",B.UV6Kind="uv6",B.ColorKind="color",B.ColorInstanceKind="instanceColor",B.MatricesIndicesKind="matricesIndices",B.MatricesWeightsKind="matricesWeights",B.MatricesIndicesExtraKind="matricesIndicesExtra",B.MatricesWeightsExtraKind="matricesWeightsExtra"},11469:(S,v,D)=>{D.d(v,{b:()=>w,e:()=>A,h:()=>g,j:()=>E,m:()=>m,o:()=>B,r:()=>h});var z=D(11190);function e(S,v,D,z){switch(v){case 5120:{let v=S.getInt8(D);return z&&(v=Math.max(v/127,-1)),v}case 5121:{let v=S.getUint8(D);return z&&(v/=255),v}case 5122:{let v=S.getInt16(D,!0);return z&&(v=Math.max(v/32767,-1)),v}case 5123:{let v=S.getUint16(D,!0);return z&&(v/=65535),v}case 5124:return S.getInt32(D,!0);case 5125:return S.getUint32(D,!0);case 5126:return S.getFloat32(D,!0);default:throw new Error(`Invalid component type ${v}`)}}function N(S,v,D,z,e){switch(v){case 5120:z&&(e=Math.round(127*e)),S.setInt8(D,e);break;case 5121:z&&(e=Math.round(255*e)),S.setUint8(D,e);break;case 5122:z&&(e=Math.round(32767*e)),S.setInt16(D,e,!0);break;case 5123:z&&(e=Math.round(65535*e)),S.setUint16(D,e,!0);break;case 5124:S.setInt32(D,e,!0);break;case 5125:S.setUint32(D,e,!0);break;case 5126:S.setFloat32(D,e,!0);break;default:throw new Error(`Invalid component type ${v}`)}}function m(S){switch(S){case 5120:case 5121:return 1;case 5122:case 5123:return 2;case 5124:case 5125:case 5126:return 4;default:throw new Error(`Invalid type '${S}'`)}}function B(S){switch(S){case 5120:return Int8Array;case 5121:return Uint8Array;case 5122:return Int16Array;case 5123:return Uint16Array;case 5124:return Int32Array;case 5125:return Uint32Array;case 5126:return Float32Array;default:throw new Error(`Invalid component type '${S}'`)}}function g(S,v,D,z,B,g,E,h){const A=new Array(z),w=new Array(z);if(S instanceof Array){let e=v/4;const N=D/4;for(let v=0;v<g;v+=z){for(let v=0;v<z;v++)A[v]=w[v]=S[e+v];h(w,v);for(let v=0;v<z;v++)A[v]!==w[v]&&(S[e+v]=w[v]);e+=N}}else{const n=ArrayBuffer.isView(S)?new DataView(S.buffer,S.byteOffset,S.byteLength):new DataView(S),R=m(B);for(let S=0;S<g;S+=z){for(let S=0,D=v;S<z;S++,D+=R)A[S]=w[S]=e(n,B,D,E);h(w,S);for(let S=0,D=v;S<z;S++,D+=R)A[S]!==w[S]&&N(n,B,D,E,w[S]);v+=D}}}function E(S,v,D,e,N,B,E,h){const A=v*m(D),w=E*v;if(5126!==D||N!==A){const z=new Float32Array(w);return g(S,e,N,v,D,w,B,((S,D)=>{for(let e=0;e<v;e++)z[D+e]=S[e]})),z}if(!(S instanceof Array||S instanceof Float32Array)||0!==e||S.length!==w){if(S instanceof Array){const v=e/4;return S.slice(v,v+w)}if(S instanceof ArrayBuffer)return new Float32Array(S,e,w);{const v=S.byteOffset+e;return 0!==(3&v)&&(z.b.Warn("Float array must be aligned to 4-bytes border"),h=!0),h?new Float32Array(S.buffer.slice(v,v+w*Float32Array.BYTES_PER_ELEMENT)):new Float32Array(S.buffer,v,w)}}return h?S.slice():S}function h(S,v,D,e,N,E,h,A){const w=m(D),n=B(D),R=h*v;if(Array.isArray(S)){if(0!==(3&e)||0!==(3&N))throw new Error("byteOffset and byteStride must be a multiple of 4 for number[] data.");const z=e/4,m=N/4;if(z+(h-1)*m+v>S.length)throw new Error("Last accessed index is out of bounds.");if(m<v)throw new Error("Data stride cannot be smaller than the component size.");if(m!==v){const z=new n(R);return g(S,e,N,v,D,R,E,((S,D)=>{for(let e=0;e<v;e++)z[D+e]=S[e]})),z}return new n(S.slice(z,z+R))}let O,I=e;S instanceof ArrayBuffer?O=S:(O=S.buffer,I+=S.byteOffset);if(I+(h-1)*N+v*w>O.byteLength)throw new Error("Last accessed byte is out of bounds.");const K=v*w;if(N<K)throw new Error("Byte stride cannot be smaller than the component's byte size.");if(N!==K){const S=new n(R);return g(O,I,N,v,D,R,E,((D,z)=>{for(let e=0;e<v;e++)S[z+e]=D[e]})),S}return 1!==w&&0!==(I&w-1)&&(z.b.Warn("Array must be aligned to border of element size. Data will be copied."),A=!0),A?new n(O.slice(I,I+R*w)):new n(O,I,R)}function A(S,v,D,e,N,B,E,h){const A=v*m(D),w=E*v;if(h.length!==w)throw new Error("Output length is not valid");if(5126===D&&N===A)if(S instanceof Array){const v=e/4;h.set(S,v)}else if(S instanceof ArrayBuffer){const v=new Float32Array(S,e,w);h.set(v)}else{const v=S.byteOffset+e;if(0!==(3&v))return z.b.Warn("Float array must be aligned to 4-bytes border"),void h.set(new Float32Array(S.buffer.slice(v,v+w*Float32Array.BYTES_PER_ELEMENT)));const D=new Float32Array(S.buffer,v,w);h.set(D)}else g(S,e,N,v,D,w,B,((S,D)=>{for(let z=0;z<v;z++)h[D+z]=S[z]}))}function w(S,v){let D=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(Array.isArray(S)){for(let e=0;e<v;e++)if(S[D+e]-z>65535)return!0;return!1}return 4===S.BYTES_PER_ELEMENT}},11461:(S,v,D)=>{D.d(v,{d:()=>z});class z{get underlyingResource(){return null}constructor(){this.references=0,this.Jv=0,this.is32Bits=!1,this.uniqueId=z._Counter++}}z._Counter=0},11494:(S,v,D)=>{D.d(v,{b:()=>e});var z=D(11262);class e{static GetEffect(S){return void 0===S.getPipelineContext?S.effect:S}constructor(S){let v=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._wasPreviouslyReady=!1,this._forceRebindOnNextCall=!0,this._wasPreviouslyUsingInstances=null,this.effect=null,this.defines=null,this.drawContext=S.createDrawContext(),v&&(this.materialContext=S.createMaterialContext())}setEffect(S,v){let D=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];var z;(this.effect=S,void 0!==v&&(this.defines=v),D)&&(null===(z=this.drawContext)||void 0===z||z.reset())}dispose(){var S;let v=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.effect){const S=this.effect;v?S.dispose():z.b.SetImmediate((()=>{S.getEngine().onEndFrameObservable.addOnce((()=>{S.dispose()}))})),this.effect=null}null===(S=this.drawContext)||void 0===S||S.dispose()}}},11591:(S,v,D)=>{D.d(v,{d:()=>e});var z=D(11431);class e{static GetPlanes(S){const v=[];for(let D=0;D<6;D++)v.push(new z.c(0,0,0,0));return e.GetPlanesToRef(S,v),v}static GetNearPlaneToRef(S,v){const D=S.m;v.normal.x=D[3]+D[2],v.normal.y=D[7]+D[6],v.normal.z=D[11]+D[10],v.d=D[15]+D[14],v.normalize()}static GetFarPlaneToRef(S,v){const D=S.m;v.normal.x=D[3]-D[2],v.normal.y=D[7]-D[6],v.normal.z=D[11]-D[10],v.d=D[15]-D[14],v.normalize()}static GetLeftPlaneToRef(S,v){const D=S.m;v.normal.x=D[3]+D[0],v.normal.y=D[7]+D[4],v.normal.z=D[11]+D[8],v.d=D[15]+D[12],v.normalize()}static GetRightPlaneToRef(S,v){const D=S.m;v.normal.x=D[3]-D[0],v.normal.y=D[7]-D[4],v.normal.z=D[11]-D[8],v.d=D[15]-D[12],v.normalize()}static GetTopPlaneToRef(S,v){const D=S.m;v.normal.x=D[3]-D[1],v.normal.y=D[7]-D[5],v.normal.z=D[11]-D[9],v.d=D[15]-D[13],v.normalize()}static GetBottomPlaneToRef(S,v){const D=S.m;v.normal.x=D[3]+D[1],v.normal.y=D[7]+D[5],v.normal.z=D[11]+D[9],v.d=D[15]+D[13],v.normalize()}static GetPlanesToRef(S,v){e.GetNearPlaneToRef(S,v[0]),e.GetFarPlaneToRef(S,v[1]),e.GetLeftPlaneToRef(S,v[2]),e.GetRightPlaneToRef(S,v[3]),e.GetTopPlaneToRef(S,v[4]),e.GetBottomPlaneToRef(S,v[5])}static IsPointInFrustum(S,v){for(let D=0;D<6;D++)if(v[D].dotCoordinate(S)<0)return!1;return!0}}},11601:(S,v,D)=>{D.d(v,{b:()=>e});var z=D(11199);class e{get min(){return this._min}get max(){return this._max}get average(){return this._average}get lastSecAverage(){return this._lastSecAverage}get current(){return this._current}get total(){return this._totalAccumulated}get count(){return this._totalValueCount}constructor(){this._startMonitoringTime=0,this._min=0,this._max=0,this._average=0,this._lastSecAverage=0,this._current=0,this._totalValueCount=0,this._totalAccumulated=0,this._lastSecAccumulated=0,this._lastSecTime=0,this._lastSecValueCount=0}fetchNewFrame(){this._totalValueCount++,this._current=0,this._lastSecValueCount++}addCount(S,v){e.Enabled&&(this._current+=S,v&&this._fetchResult())}beginMonitoring(){e.Enabled&&(this._startMonitoringTime=z.c.Now)}endMonitoring(){let S=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(!e.Enabled)return;S&&this.fetchNewFrame();const v=z.c.Now;this._current=v-this._startMonitoringTime,S&&this._fetchResult()}tz(){this._fetchResult()}_fetchResult(){this._totalAccumulated+=this._current,this._lastSecAccumulated+=this._current,this._min=Math.min(this._min,this._current),this._max=Math.max(this._max,this._current),this._average=this._totalAccumulated/this._totalValueCount;const S=z.c.Now;S-this._lastSecTime>1e3&&(this._lastSecAverage=this._lastSecAccumulated/this._lastSecValueCount,this._lastSecTime=S,this._lastSecAccumulated=0,this._lastSecValueCount=0)}}e.Enabled=!0},11483:(S,v,D)=>{D.d(v,{e:()=>e,f:()=>z});class z{constructor(S){this.length=0,this.data=new Array(S),this._id=z._GlobalId++}push(S){this.data[this.length++]=S,this.length>this.data.length&&(this.data.length*=2)}forEach(S){for(let v=0;v<this.length;v++)S(this.data[v])}sort(S){this.data.sort(S)}reset(){this.length=0}dispose(){this.reset(),this.data&&(this.data.length=0)}concat(S){if(0!==S.length){this.length+S.length>this.data.length&&(this.data.length=2*(this.length+S.length));for(let v=0;v<S.length;v++)this.data[this.length++]=(S.data||S)[v]}}indexOf(S){const v=this.data.indexOf(S);return v>=this.length?-1:v}contains(S){return-1!==this.indexOf(S)}}z._GlobalId=0;class e extends z{constructor(){super(...arguments),this._duplicateId=0}push(S){super.push(S),S.__smartArrayFlags||(S.__smartArrayFlags={}),S.__smartArrayFlags[this._id]=this._duplicateId}pushNoDuplicate(S){return(!S.__smartArrayFlags||S.__smartArrayFlags[this._id]!==this._duplicateId)&&(this.push(S),!0)}reset(){super.reset(),this._duplicateId++}concatWithNoDuplicate(S){if(0!==S.length){this.length+S.length>this.data.length&&(this.data.length=2*(this.length+S.length));for(let v=0;v<S.length;v++){const D=(S.data||S)[v];this.pushNoDuplicate(D)}}}}},11445:(S,v,D)=>{D.d(v,{b:()=>N});var z=D(11452),e=D(11179);class N{constructor(S){this._vertexBuffers={},this.onBeforeRenderObservable=new e.d,this._scene=S}_prepareBuffers(){if(this._vertexBuffers[z.d.PositionKind])return;const S=[];S.push(1,1),S.push(-1,1),S.push(-1,-1),S.push(1,-1),this._vertexBuffers[z.d.PositionKind]=new z.d(this._scene.getEngine(),S,z.d.PositionKind,!1,!1,2),this._buildIndexBuffer()}_buildIndexBuffer(){const S=[];S.push(0),S.push(1),S.push(2),S.push(0),S.push(2),S.push(3),this._indexBuffer=this._scene.getEngine().createIndexBuffer(S)}_rebuild(){const S=this._vertexBuffers[z.d.PositionKind];S&&(S._rebuild(),this._buildIndexBuffer())}_prepareFrame(){let S=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const D=this._scene.activeCamera;return!!D&&(v=v||D._postProcesses.filter((S=>null!=S)),!(!v||0===v.length||!this._scene.postProcessesEnabled)&&(v[0].activate(D,S,null!==v&&void 0!==v),!0))}directRender(S){let v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,D=arguments.length>2&&void 0!==arguments[2]&&arguments[2],z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,e=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,N=arguments.length>5&&void 0!==arguments[5]&&arguments[5],m=arguments.length>6&&void 0!==arguments[6]?arguments[6]:S.length;const B=this._scene.getEngine();for(let E=0;E<m;E++){var g;if(E<S.length-1)S[E+1].activate(this._scene.activeCamera||this._scene,null===v||void 0===v?void 0:v.texture);else v?B.bindFramebuffer(v,z,void 0,void 0,D,e):N||B.restoreDefaultFramebuffer(),null===(g=B._debugInsertMarker)||void 0===g||g.call(B,`post process ${S[E].name} output`);const m=S[E],h=m.apply();h&&(m.onBeforeRenderObservable.notifyObservers(h),this._prepareBuffers(),B.bindBuffers(this._vertexBuffers,this._indexBuffer,h),B.drawElementsType(0,0,6),m.onAfterRenderObservable.notifyObservers(h))}B.setDepthBuffer(!0),B.setDepthWrite(!0)}_finalizeFrame(S,v,D,z){let e=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const N=this._scene.activeCamera;if(!N)return;if(this.onBeforeRenderObservable.notifyObservers(this),0===(z=z||N._postProcesses.filter((S=>null!=S))).length||!this._scene.postProcessesEnabled)return;const m=this._scene.getEngine();for(let g=0,E=z.length;g<E;g++){const h=z[g];var B;if(g<E-1)h._outputTexture=z[g+1].activate(N,null===v||void 0===v?void 0:v.texture);else v?(m.bindFramebuffer(v,D,void 0,void 0,e),h._outputTexture=v):(m.restoreDefaultFramebuffer(),h._outputTexture=null),null===(B=m._debugInsertMarker)||void 0===B||B.call(m,`post process ${z[g].name} output`);if(S)break;const A=h.apply();A&&(h.onBeforeRenderObservable.notifyObservers(A),this._prepareBuffers(),m.bindBuffers(this._vertexBuffers,this._indexBuffer,A),m.drawElementsType(0,0,6),h.onAfterRenderObservable.notifyObservers(A))}m.setDepthBuffer(!0),m.setDepthWrite(!0),m.setAlphaMode(0)}dispose(){const S=this._vertexBuffers[z.d.PositionKind];S&&(S.dispose(),this._vertexBuffers[z.d.PositionKind]=null),this._indexBuffer&&(this._scene.getEngine()._releaseBuffer(this._indexBuffer),this._indexBuffer=null)}}},11474:(S,v,D)=>{D.d(v,{d:()=>B});var z=D(11483),e=D(11371);class N{set opaqueSortCompareFn(S){this._opaqueSortCompareFn=S||N.PainterSortCompare,this._renderOpaque=this._renderOpaqueSorted}set alphaTestSortCompareFn(S){this._alphaTestSortCompareFn=S||N.PainterSortCompare,this._renderAlphaTest=this._renderAlphaTestSorted}set transparentSortCompareFn(S){this._transparentSortCompareFn=S||N.defaultTransparentSortCompare,this._renderTransparent=this._renderTransparentSorted}constructor(S,v){let D=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.index=S,this._opaqueSubMeshes=new z.f(256),this._transparentSubMeshes=new z.f(256),this._alphaTestSubMeshes=new z.f(256),this._depthOnlySubMeshes=new z.f(256),this._particleSystems=new z.f(256),this._spriteManagers=new z.f(256),this._empty=!0,this._edgesRenderers=new z.e(16),this._scene=v,this.opaqueSortCompareFn=D,this.alphaTestSortCompareFn=e,this.transparentSortCompareFn=N}render(S,v,D,z){if(S)return void S(this._opaqueSubMeshes,this._alphaTestSubMeshes,this._transparentSubMeshes,this._depthOnlySubMeshes);const e=this._scene.getEngine();0!==this._depthOnlySubMeshes.length&&(e.setColorWrite(!1),this._renderAlphaTest(this._depthOnlySubMeshes),e.setColorWrite(!0)),0!==this._opaqueSubMeshes.length&&this._renderOpaque(this._opaqueSubMeshes),0!==this._alphaTestSubMeshes.length&&this._renderAlphaTest(this._alphaTestSubMeshes);const N=e.getStencilBuffer();if(e.setStencilBuffer(!1),v&&this._renderSprites(),D&&this._renderParticles(z),this.onBeforeTransparentRendering&&this.onBeforeTransparentRendering(),0!==this._transparentSubMeshes.length||this._scene.useOrderIndependentTransparency){if(e.setStencilBuffer(N),this._scene.useOrderIndependentTransparency){const S=this._scene.depthPeelingRenderer.render(this._transparentSubMeshes);S.length&&this._renderTransparent(S)}else this._renderTransparent(this._transparentSubMeshes);e.setAlphaMode(0)}if(e.setStencilBuffer(!1),this._edgesRenderers.length){for(let S=0;S<this._edgesRenderers.length;S++)this._edgesRenderers.data[S].render();e.setAlphaMode(0)}e.setStencilBuffer(N)}_renderOpaqueSorted(S){N._RenderSorted(S,this._opaqueSortCompareFn,this._scene.activeCamera,!1)}_renderAlphaTestSorted(S){N._RenderSorted(S,this._alphaTestSortCompareFn,this._scene.activeCamera,!1)}_renderTransparentSorted(S){N._RenderSorted(S,this._transparentSortCompareFn,this._scene.activeCamera,!0)}static _RenderSorted(S,v,D,z){let m,B=0;const g=D?D.globalPosition:N._ZeroVector;if(z)for(;B<S.length;B++)m=S.data[B],m._alphaIndex=m.getMesh().alphaIndex,m._distanceToCamera=e.Rv.Distance(m.getBoundingInfo().boundingSphere.centerWorld,g);const E=S.length===S.data.length?S.data:S.data.slice(0,S.length);v&&E.sort(v);const h=E[0].getMesh().xS();for(B=0;B<E.length;B++)if(m=E[B],!h._activeMeshesFrozenButKeepClipping||m.isInFrustum(h._frustumPlanes)){if(z){const S=m.cS();if(S&&S.needDepthPrePass){const v=S.xS().getEngine();v.setColorWrite(!1),v.setAlphaMode(0),m.render(!1),v.setColorWrite(!0)}}m.render(z)}}static defaultTransparentSortCompare(S,v){return S._alphaIndex>v._alphaIndex?1:S._alphaIndex<v._alphaIndex?-1:N.backToFrontSortCompare(S,v)}static backToFrontSortCompare(S,v){return S._distanceToCamera<v._distanceToCamera?1:S._distanceToCamera>v._distanceToCamera?-1:0}static frontToBackSortCompare(S,v){return S._distanceToCamera<v._distanceToCamera?-1:S._distanceToCamera>v._distanceToCamera?1:0}static PainterSortCompare(S,v){const D=S.getMesh(),z=v.getMesh();return D.material&&z.material?D.material.uniqueId-z.material.uniqueId:D.uniqueId-z.uniqueId}prepare(){this._opaqueSubMeshes.reset(),this._transparentSubMeshes.reset(),this._alphaTestSubMeshes.reset(),this._depthOnlySubMeshes.reset(),this._particleSystems.reset(),this.prepareSprites(),this._edgesRenderers.reset(),this._empty=!0}prepareSprites(){this._spriteManagers.reset()}dispose(){this._opaqueSubMeshes.dispose(),this._transparentSubMeshes.dispose(),this._alphaTestSubMeshes.dispose(),this._depthOnlySubMeshes.dispose(),this._particleSystems.dispose(),this._spriteManagers.dispose(),this._edgesRenderers.dispose()}dispatch(S,v,D){void 0===v&&(v=S.getMesh()),void 0===D&&(D=S.cS()),null!==D&&void 0!==D&&(D.needAlphaBlendingForMesh(v)?this._transparentSubMeshes.push(S):D.needAlphaTestingForMesh(v)?(D.needDepthPrePass&&this._depthOnlySubMeshes.push(S),this._alphaTestSubMeshes.push(S)):(D.needDepthPrePass&&this._depthOnlySubMeshes.push(S),this._opaqueSubMeshes.push(S)),v._renderingGroup=this,v._edgesRenderer&&v.isEnabled()&&v.isVisible&&v._edgesRenderer.isEnabled&&this._edgesRenderers.pushNoDuplicate(v._edgesRenderer),this._empty=!1)}dispatchSprites(S){this._spriteManagers.push(S),this._empty=!1}dispatchParticles(S){this._particleSystems.push(S),this._empty=!1}_renderParticles(S){if(0===this._particleSystems.length)return;const v=this._scene.activeCamera;this._scene.onBeforeParticlesRenderingObservable.notifyObservers(this._scene);for(let D=0;D<this._particleSystems.length;D++){const z=this._particleSystems.data[D];if(0===(v&&v.layerMask&z.layerMask))continue;const e=z.zv;e.position&&S&&-1===S.indexOf(e)||this._scene._activeParticles.addCount(z.render(),!1)}this._scene.onAfterParticlesRenderingObservable.notifyObservers(this._scene)}_renderSprites(){if(!this._scene.spritesEnabled||0===this._spriteManagers.length)return;const S=this._scene.activeCamera;this._scene.onBeforeSpritesRenderingObservable.notifyObservers(this._scene);for(let v=0;v<this._spriteManagers.length;v++){const D=this._spriteManagers.data[v];0!==(S&&S.layerMask&D.layerMask)&&D.render()}this._scene.onAfterSpritesRenderingObservable.notifyObservers(this._scene)}}N._ZeroVector=e.Rv.Zero();class m{}class B{get maintainStateBetweenFrames(){return this._maintainStateBetweenFrames}set maintainStateBetweenFrames(S){S!==this._maintainStateBetweenFrames&&(this._maintainStateBetweenFrames=S,this._maintainStateBetweenFrames||this.restoreDispachedFlags())}restoreDispachedFlags(){for(const S of this._scene.meshes)if(S.he)for(const v of S.he)v._wasDispatched=!1;if(this._scene.spriteManagers)for(const S of this._scene.spriteManagers)S._wasDispatched=!1;for(const S of this._scene.Zw)S._wasDispatched=!1}constructor(S){this._useSceneAutoClearSetup=!1,this._renderingGroups=new Array,this._autoClearDepthStencil={},this._customOpaqueSortCompareFn={},this._customAlphaTestSortCompareFn={},this._customTransparentSortCompareFn={},this._renderingGroupInfo=new m,this._maintainStateBetweenFrames=!1,this._scene=S;for(let v=B.MIN_RENDERINGGROUPS;v<B.MAX_RENDERINGGROUPS;v++)this._autoClearDepthStencil[v]={Ee:!0,depth:!0,stencil:!0}}getRenderingGroup(S){const v=S||0;return this._prepareRenderingGroup(v),this._renderingGroups[v]}_clearDepthStencilBuffer(){let S=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],v=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._depthStencilBufferAlreadyCleaned||(this._scene.getEngine().clear(null,!1,S,v),this._depthStencilBufferAlreadyCleaned=!0)}render(S,v,D,z){const e=this._renderingGroupInfo;if(e.Iv=this._scene,e.camera=this._scene.activeCamera,e.renderingManager=this,this._scene.spriteManagers&&z)for(let N=0;N<this._scene.spriteManagers.length;N++){const S=this._scene.spriteManagers[N];this.dispatchSprites(S)}for(let N=B.MIN_RENDERINGGROUPS;N<B.MAX_RENDERINGGROUPS;N++){this._depthStencilBufferAlreadyCleaned=N===B.MIN_RENDERINGGROUPS;const m=this._renderingGroups[N];if(!m||m._empty)continue;const g=1<<N;if(e.renderingGroupId=N,this._scene.onBeforeRenderingGroupObservable.notifyObservers(e,g),B.AUTOCLEAR){const S=this._useSceneAutoClearSetup?this._scene.getAutoClearDepthStencilSetup(N):this._autoClearDepthStencil[N];S&&S.Ee&&this._clearDepthStencilBuffer(S.depth,S.stencil)}for(const S of this._scene._beforeRenderingGroupDrawStage)S.action(N);m.render(S,z,D,v);for(const S of this._scene._afterRenderingGroupDrawStage)S.action(N);this._scene.onAfterRenderingGroupObservable.notifyObservers(e,g)}}reset(){if(!this.maintainStateBetweenFrames)for(let S=B.MIN_RENDERINGGROUPS;S<B.MAX_RENDERINGGROUPS;S++){const v=this._renderingGroups[S];v&&v.prepare()}}resetSprites(){if(!this.maintainStateBetweenFrames)for(let S=B.MIN_RENDERINGGROUPS;S<B.MAX_RENDERINGGROUPS;S++){const v=this._renderingGroups[S];v&&v.prepareSprites()}}dispose(){this.freeRenderingGroups(),this._renderingGroups.length=0,this._renderingGroupInfo=null}freeRenderingGroups(){for(let S=B.MIN_RENDERINGGROUPS;S<B.MAX_RENDERINGGROUPS;S++){const v=this._renderingGroups[S];v&&v.dispose()}}_prepareRenderingGroup(S){void 0===this._renderingGroups[S]&&(this._renderingGroups[S]=new N(S,this._scene,this._customOpaqueSortCompareFn[S],this._customAlphaTestSortCompareFn[S],this._customTransparentSortCompareFn[S]))}dispatchSprites(S){this.maintainStateBetweenFrames&&S._wasDispatched||(S._wasDispatched=!0,this.getRenderingGroup(S.renderingGroupId).dispatchSprites(S))}dispatchParticles(S){this.maintainStateBetweenFrames&&S._wasDispatched||(S._wasDispatched=!0,this.getRenderingGroup(S.renderingGroupId).dispatchParticles(S))}dispatch(S,v,D){void 0===v&&(v=S.getMesh()),this.maintainStateBetweenFrames&&S._wasDispatched||(S._wasDispatched=!0,this.getRenderingGroup(v.renderingGroupId).dispatch(S,v,D))}setRenderingOrder(S){let v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,D=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(this._customOpaqueSortCompareFn[S]=v,this._customAlphaTestSortCompareFn[S]=D,this._customTransparentSortCompareFn[S]=z,this._renderingGroups[S]){const v=this._renderingGroups[S];v.opaqueSortCompareFn=this._customOpaqueSortCompareFn[S],v.alphaTestSortCompareFn=this._customAlphaTestSortCompareFn[S],v.transparentSortCompareFn=this._customTransparentSortCompareFn[S]}}setRenderingAutoClearDepthStencil(S,v){let D=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],z=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._autoClearDepthStencil[S]={Ee:v,depth:D,stencil:z}}getAutoClearDepthStencilSetup(S){return this._autoClearDepthStencil[S]}}B.MAX_RENDERINGGROUPS=4,B.MIN_RENDERINGGROUPS=0,B.AUTOCLEAR=!0}}]);