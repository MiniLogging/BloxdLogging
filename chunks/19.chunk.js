"use strict";(self.rvold1i0ywi=self.rvold1i0ywi||[]).push([[19],{11372:(F,b,Q)=>{Q.d(b,{d:()=>g,e:()=>W});var C=Q(11378),z=Q(11146),t=Q(11384);class g{get G(){return this._isDisposed}constructor(F,b,Q){let z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,t=arguments.length>4&&void 0!==arguments[4]&&arguments[4],g=arguments.length>5&&void 0!==arguments[5]&&arguments[5],W=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Z=arguments.length>7?arguments[7]:void 0,q=arguments.length>8?arguments[8]:void 0;this._isAlreadyOwned=!1,this._isDisposed=!1,F&&F.RF?this._engine=F.RF().getEngine():this._engine=F,this._updatable=Q,this._instanced=g,this._divisor=Z||1,this._label=q,b instanceof C.d?(this._data=null,this._buffer=b):(this._data=b,this._buffer=null),this.byteStride=W?z:z*Float32Array.BYTES_PER_ELEMENT,t||this.create()}createVertexBuffer(F,b,Q,C,z){let t=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6?arguments[6]:void 0;const Z=t?b:b*Float32Array.BYTES_PER_ELEMENT,q=C?t?C:C*Float32Array.BYTES_PER_ELEMENT:this.byteStride;return new W(this._engine,this,F,this._updatable,!0,q,void 0===z?this._instanced:z,Z,Q,void 0,void 0,!0,this._divisor||g)}isUpdatable(){return this._updatable}getData(){return this._data}getBuffer(){return this._buffer}getStrideSize(){return this.byteStride/Float32Array.BYTES_PER_ELEMENT}create(){let F=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;!F&&this._buffer||(F=F||this._data,F&&(this._buffer?this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,F),this._data=F):this._updatable?(this._buffer=this._engine.createDynamicVertexBuffer(F,this._label),this._data=F):this._buffer=this._engine.createVertexBuffer(F,void 0,this._label)))}_rebuild(){if(this._data)this._buffer=null,this.create(this._data);else{if(!this._buffer)return;if(this._buffer.NQ>0)return void(this._updatable?this._buffer=this._engine.createDynamicVertexBuffer(this._buffer.NQ,this._label):this._buffer=this._engine.createVertexBuffer(this._buffer.NQ,void 0,this._label));z.e.Warn(`Missing data for buffer "${this._label}" ${this._buffer?"(uniqueId: "+this._buffer.uniqueId+")":""}. Buffer reconstruction failed.`),this._buffer=null}}update(F){this.create(F)}updateDirectly(F,b,Q){let C=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this._buffer&&this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,F,C?b:b*Float32Array.BYTES_PER_ELEMENT,Q?Q*this.byteStride:void 0),this._data=0===b&&void 0===Q?F:null)}_increaseReferences(){this._buffer&&(this._isAlreadyOwned?this._buffer.references++:this._isAlreadyOwned=!0)}dispose(){this._buffer&&this._engine._releaseBuffer(this._buffer)&&(this._isDisposed=!0,this._data=null,this._buffer=null)}}class W{get G(){return this._isDisposed}get instanceDivisor(){return this._instanceDivisor}set instanceDivisor(F){const b=0!=F;this._instanceDivisor=F,b!==this._instanced&&(this._instanced=b,this._computeHashCode())}get _maxVerticesCount(){const F=this.getData();return F?Array.isArray(F)?F.length/(this.byteStride/4)-this.byteOffset/4:(F.byteLength-this.byteOffset)/this.byteStride:0}constructor(F,b,Q,C,z,Z,q,G,K,e){let N=arguments.length>10&&void 0!==arguments[10]&&arguments[10],y=arguments.length>11&&void 0!==arguments[11]&&arguments[11],E=arguments.length>12&&void 0!==arguments[12]?arguments[12]:1,c=arguments.length>13&&void 0!==arguments[13]&&arguments[13];this._isDisposed=!1;let X=!1;if(this.tQ=F,"object"===typeof C&&null!==C?(X=C.updatable??!1,z=C.postponeInternalCreation,Z=C.stride,q=C.instanced,G=C.offset,K=C.size,e=C.type,N=C.normalized??!1,y=C.useBytes??!1,E=C.divisor??1,c=C.takeBufferOwnership??!1,this._label=C.label):X=!!C,b instanceof g?(this._buffer=b,this._ownsBuffer=c):(this._buffer=new g(F,b,X,Z,z,q,y,E,this._label),this._ownsBuffer=!0),this.uniqueId=W._Counter++,this._kind=Q,void 0===e){const F=this.getData();this.type=F?W.GetDataType(F):W.FLOAT}else this.type=e;const L=(0,t.t)(this.type);y?(this._size=K||(Z?Z/L:W.DeduceStride(Q)),this.byteStride=Z||this._buffer.byteStride||this._size*L,this.byteOffset=G||0):(this._size=K||Z||W.DeduceStride(Q),this.byteStride=Z?Z*L:this._buffer.byteStride||this._size*L,this.byteOffset=(G||0)*L),this.normalized=N,this._instanced=void 0!==q&&q,this._instanceDivisor=q?E:0,this._alignBuffer(),this._computeHashCode()}_computeHashCode(){this.hashCode=(this.type-5120|0)+((this.normalized?1:0)<<3)+(this._size<<4)+((this._instanced?1:0)<<6)+(this.byteStride<<12)}_rebuild(){var F;null===(F=this._buffer)||void 0===F||F._rebuild()}getKind(){return this._kind}isUpdatable(){return this._buffer.isUpdatable()}getData(){return this._buffer.getData()}getFloatData(F,b){const Q=this.getData();return Q?(0,t.p)(Q,this._size,this.type,this.byteOffset,this.byteStride,this.normalized,F,b):null}getBuffer(){return this._buffer.getBuffer()}getWrapperBuffer(){return this._buffer}getStrideSize(){return this.byteStride/(0,t.t)(this.type)}getOffset(){return this.byteOffset/(0,t.t)(this.type)}getSize(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this._size*(0,t.t)(this.type):this._size}getIsInstanced(){return this._instanced}getInstanceDivisor(){return this._instanceDivisor}create(F){this._buffer.create(F),this._alignBuffer()}update(F){this._buffer.update(F),this._alignBuffer()}updateDirectly(F,b){let Q=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._buffer.updateDirectly(F,b,void 0,Q),this._alignBuffer()}dispose(){this._ownsBuffer&&this._buffer.dispose(),this._isDisposed=!0}forEach(F,b){(0,t.l)(this._buffer.getData(),this.byteOffset,this.byteStride,this._size,this.type,F,this.normalized,((F,Q)=>{for(let C=0;C<this._size;C++)b(F[C],Q+C)}))}_alignBuffer(){}static DeduceStride(F){switch(F){case W.UVKind:case W.UV2Kind:case W.UV3Kind:case W.UV4Kind:case W.UV5Kind:case W.UV6Kind:return 2;case W.NormalKind:case W.PositionKind:return 3;case W.ColorKind:case W.ColorInstanceKind:case W.MatricesIndicesKind:case W.MatricesIndicesExtraKind:case W.MatricesWeightsKind:case W.MatricesWeightsExtraKind:case W.TangentKind:return 4;default:throw new Error("Invalid kind '"+F+"'")}}static GetDataType(F){return F instanceof Int8Array?W.BYTE:F instanceof Uint8Array?W.UNSIGNED_BYTE:F instanceof Int16Array?W.SHORT:F instanceof Uint16Array?W.UNSIGNED_SHORT:F instanceof Int32Array?W.INT:F instanceof Uint32Array?W.UNSIGNED_INT:W.FLOAT}static GetTypeByteLength(F){return(0,t.t)(F)}static ForEach(F,b,Q,C,z,g,W,Z){(0,t.l)(F,b,Q,C,z,g,W,((F,b)=>{for(let Q=0;Q<C;Q++)Z(F[Q],b+Q)}))}static GetFloatData(F,b,Q,C,z,g,W,Z){return(0,t.p)(F,b,Q,C,z,g,W,Z)}}W._Counter=0,W.BYTE=5120,W.UNSIGNED_BYTE=5121,W.SHORT=5122,W.UNSIGNED_SHORT=5123,W.INT=5124,W.UNSIGNED_INT=5125,W.FLOAT=5126,W.PositionKind="position",W.NormalKind="normal",W.TangentKind="tangent",W.UVKind="uv",W.UV2Kind="uv2",W.UV3Kind="uv3",W.UV4Kind="uv4",W.UV5Kind="uv5",W.UV6Kind="uv6",W.ColorKind="color",W.ColorInstanceKind="instanceColor",W.MatricesIndicesKind="matricesIndices",W.MatricesWeightsKind="matricesWeights",W.MatricesIndicesExtraKind="matricesIndicesExtra",W.MatricesWeightsExtraKind="matricesWeightsExtra"},11384:(F,b,Q)=>{Q.d(b,{e:()=>e,h:()=>K,l:()=>Z,p:()=>q,t:()=>g,v:()=>W,y:()=>G});var C=Q(11146);function z(F,b,Q,C){switch(b){case 5120:{let b=F.getInt8(Q);return C&&(b=Math.max(b/127,-1)),b}case 5121:{let b=F.getUint8(Q);return C&&(b/=255),b}case 5122:{let b=F.getInt16(Q,!0);return C&&(b=Math.max(b/32767,-1)),b}case 5123:{let b=F.getUint16(Q,!0);return C&&(b/=65535),b}case 5124:return F.getInt32(Q,!0);case 5125:return F.getUint32(Q,!0);case 5126:return F.getFloat32(Q,!0);default:throw new Error(`Invalid component type ${b}`)}}function t(F,b,Q,C,z){switch(b){case 5120:C&&(z=Math.round(127*z)),F.setInt8(Q,z);break;case 5121:C&&(z=Math.round(255*z)),F.setUint8(Q,z);break;case 5122:C&&(z=Math.round(32767*z)),F.setInt16(Q,z,!0);break;case 5123:C&&(z=Math.round(65535*z)),F.setUint16(Q,z,!0);break;case 5124:F.setInt32(Q,z,!0);break;case 5125:F.setUint32(Q,z,!0);break;case 5126:F.setFloat32(Q,z,!0);break;default:throw new Error(`Invalid component type ${b}`)}}function g(F){switch(F){case 5120:case 5121:return 1;case 5122:case 5123:return 2;case 5124:case 5125:case 5126:return 4;default:throw new Error(`Invalid type '${F}'`)}}function W(F){switch(F){case 5120:return Int8Array;case 5121:return Uint8Array;case 5122:return Int16Array;case 5123:return Uint16Array;case 5124:return Int32Array;case 5125:return Uint32Array;case 5126:return Float32Array;default:throw new Error(`Invalid component type '${F}'`)}}function Z(F,b,Q,C,W,Z,q,G){const K=new Array(C),e=new Array(C);if(F instanceof Array){let z=b/4;const t=Q/4;for(let b=0;b<Z;b+=C){for(let b=0;b<C;b++)K[b]=e[b]=F[z+b];G(e,b);for(let b=0;b<C;b++)K[b]!==e[b]&&(F[z+b]=e[b]);z+=t}}else{const N=ArrayBuffer.isView(F)?new DataView(F.buffer,F.byteOffset,F.byteLength):new DataView(F),y=g(W);for(let F=0;F<Z;F+=C){for(let F=0,Q=b;F<C;F++,Q+=y)K[F]=e[F]=z(N,W,Q,q);G(e,F);for(let F=0,Q=b;F<C;F++,Q+=y)K[F]!==e[F]&&t(N,W,Q,q,e[F]);b+=Q}}}function q(F,b,Q,z,t,W,q,G){const K=b*g(Q),e=q*b;if(5126!==Q||t!==K){const C=new Float32Array(e);return Z(F,z,t,b,Q,e,W,((F,Q)=>{for(let z=0;z<b;z++)C[Q+z]=F[z]})),C}if(!(F instanceof Array||F instanceof Float32Array)||0!==z||F.length!==e){if(F instanceof Array){const b=z/4;return F.slice(b,b+e)}if(F instanceof ArrayBuffer)return new Float32Array(F,z,e);{const b=F.byteOffset+z;return 0!==(3&b)&&(C.e.Warn("Float array must be aligned to 4-bytes border"),G=!0),G?new Float32Array(F.buffer.slice(b,b+e*Float32Array.BYTES_PER_ELEMENT)):new Float32Array(F.buffer,b,e)}}return G?F.slice():F}function G(F,b,Q,z,t,q,G,K){const e=g(Q),N=W(Q),y=G*b;if(Array.isArray(F)){if(0!==(3&z)||0!==(3&t))throw new Error("byteOffset and byteStride must be a multiple of 4 for number[] data.");const C=z/4,g=t/4;if(C+(G-1)*g+b>F.length)throw new Error("Last accessed index is out of bounds.");if(g<b)throw new Error("Data stride cannot be smaller than the component size.");if(g!==b){const C=new N(y);return Z(F,z,t,b,Q,y,q,((F,Q)=>{for(let z=0;z<b;z++)C[Q+z]=F[z]})),C}return new N(F.slice(C,C+y))}let E,c=z;F instanceof ArrayBuffer?E=F:(E=F.buffer,c+=F.byteOffset);if(c+(G-1)*t+b*e>E.byteLength)throw new Error("Last accessed byte is out of bounds.");const X=b*e;if(t<X)throw new Error("Byte stride cannot be smaller than the component's byte size.");if(t!==X){const F=new N(y);return Z(E,c,t,b,Q,y,q,((Q,C)=>{for(let z=0;z<b;z++)F[C+z]=Q[z]})),F}return 1!==e&&0!==(c&e-1)&&(C.e.Warn("Array must be aligned to border of element size. Data will be copied."),K=!0),K?new N(E.slice(c,c+y*e)):new N(E,c,y)}function K(F,b,Q,z,t,W,q,G){const K=b*g(Q),e=q*b;if(G.length!==e)throw new Error("Output length is not valid");if(5126===Q&&t===K)if(F instanceof Array){const b=z/4;G.set(F,b)}else if(F instanceof ArrayBuffer){const b=new Float32Array(F,z,e);G.set(b)}else{const b=F.byteOffset+z;if(0!==(3&b))return C.e.Warn("Float array must be aligned to 4-bytes border"),void G.set(new Float32Array(F.buffer.slice(b,b+e*Float32Array.BYTES_PER_ELEMENT)));const Q=new Float32Array(F.buffer,b,e);G.set(Q)}else Z(F,z,t,b,Q,e,W,((F,Q)=>{for(let C=0;C<b;C++)G[Q+C]=F[C]}))}function e(F,b){let Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(Array.isArray(F)){for(let z=0;z<b;z++)if(F[Q+z]-C>65535)return!0;return!1}return 4===F.BYTES_PER_ELEMENT}},11378:(F,b,Q)=>{Q.d(b,{d:()=>C});class C{get underlyingResource(){return null}constructor(){this.references=0,this.NQ=0,this.is32Bits=!1,this.uniqueId=C._Counter++}}C._Counter=0},11423:(F,b,Q)=>{Q.d(b,{c:()=>z});var C=Q(11198);class z{static GetEffect(F){return void 0===F.getPipelineContext?F.effect:F}constructor(F){let b=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._wasPreviouslyReady=!1,this._forceRebindOnNextCall=!0,this._wasPreviouslyUsingInstances=null,this.effect=null,this.defines=null,this.drawContext=F.createDrawContext(),b&&(this.materialContext=F.createMaterialContext())}setEffect(F,b){let Q=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];var C;(this.effect=F,void 0!==b&&(this.defines=b),Q)&&(null===(C=this.drawContext)||void 0===C||C.reset())}dispose(){var F;let b=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.effect){const F=this.effect;b?F.dispose():C.c.SetImmediate((()=>{F.getEngine().onEndFrameObservable.addOnce((()=>{F.dispose()}))})),this.effect=null}null===(F=this.drawContext)||void 0===F||F.dispose()}}},11512:(F,b,Q)=>{Q.d(b,{c:()=>z});var C=Q(11362);class z{static GetPlanes(F){const b=[];for(let Q=0;Q<6;Q++)b.push(new C.d(0,0,0,0));return z.GetPlanesToRef(F,b),b}static GetNearPlaneToRef(F,b){const Q=F.m;b.normal.x=Q[3]+Q[2],b.normal.y=Q[7]+Q[6],b.normal.z=Q[11]+Q[10],b.d=Q[15]+Q[14],b.normalize()}static GetFarPlaneToRef(F,b){const Q=F.m;b.normal.x=Q[3]-Q[2],b.normal.y=Q[7]-Q[6],b.normal.z=Q[11]-Q[10],b.d=Q[15]-Q[14],b.normalize()}static GetLeftPlaneToRef(F,b){const Q=F.m;b.normal.x=Q[3]+Q[0],b.normal.y=Q[7]+Q[4],b.normal.z=Q[11]+Q[8],b.d=Q[15]+Q[12],b.normalize()}static GetRightPlaneToRef(F,b){const Q=F.m;b.normal.x=Q[3]-Q[0],b.normal.y=Q[7]-Q[4],b.normal.z=Q[11]-Q[8],b.d=Q[15]-Q[12],b.normalize()}static GetTopPlaneToRef(F,b){const Q=F.m;b.normal.x=Q[3]-Q[1],b.normal.y=Q[7]-Q[5],b.normal.z=Q[11]-Q[9],b.d=Q[15]-Q[13],b.normalize()}static GetBottomPlaneToRef(F,b){const Q=F.m;b.normal.x=Q[3]+Q[1],b.normal.y=Q[7]+Q[5],b.normal.z=Q[11]+Q[9],b.d=Q[15]+Q[13],b.normalize()}static GetPlanesToRef(F,b){z.GetNearPlaneToRef(F,b[0]),z.GetFarPlaneToRef(F,b[1]),z.GetLeftPlaneToRef(F,b[2]),z.GetRightPlaneToRef(F,b[3]),z.GetTopPlaneToRef(F,b[4]),z.GetBottomPlaneToRef(F,b[5])}static IsPointInFrustum(F,b){for(let Q=0;Q<6;Q++)if(b[Q].dotCoordinate(F)<0)return!1;return!0}}},11520:(F,b,Q)=>{Q.d(b,{e:()=>z});var C=Q(11153);class z{get min(){return this._min}get max(){return this._max}get average(){return this._average}get lastSecAverage(){return this._lastSecAverage}get current(){return this._current}get total(){return this._totalAccumulated}get count(){return this._totalValueCount}constructor(){this._startMonitoringTime=0,this._min=0,this._max=0,this._average=0,this._lastSecAverage=0,this._current=0,this._totalValueCount=0,this._totalAccumulated=0,this._lastSecAccumulated=0,this._lastSecTime=0,this._lastSecValueCount=0}fetchNewFrame(){this._totalValueCount++,this._current=0,this._lastSecValueCount++}addCount(F,b){z.Enabled&&(this._current+=F,b&&this._fetchResult())}beginMonitoring(){z.Enabled&&(this._startMonitoringTime=C.d.Now)}endMonitoring(){let F=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(!z.Enabled)return;F&&this.fetchNewFrame();const b=C.d.Now;this._current=b-this._startMonitoringTime,F&&this._fetchResult()}Gb(){this._fetchResult()}_fetchResult(){this._totalAccumulated+=this._current,this._lastSecAccumulated+=this._current,this._min=Math.min(this._min,this._current),this._max=Math.max(this._max,this._current),this._average=this._totalAccumulated/this._totalValueCount;const F=C.d.Now;F-this._lastSecTime>1e3&&(this._lastSecAverage=this._lastSecAccumulated/this._lastSecValueCount,this._lastSecTime=F,this._lastSecAccumulated=0,this._lastSecValueCount=0)}}z.Enabled=!0},11395:(F,b,Q)=>{Q.d(b,{b:()=>z,d:()=>C});class C{constructor(F){this.length=0,this.data=new Array(F),this._id=C._GlobalId++}push(F){this.data[this.length++]=F,this.length>this.data.length&&(this.data.length*=2)}forEach(F){for(let b=0;b<this.length;b++)F(this.data[b])}sort(F){this.data.sort(F)}reset(){this.length=0}dispose(){this.reset(),this.data&&(this.data.length=0)}concat(F){if(0!==F.length){this.length+F.length>this.data.length&&(this.data.length=2*(this.length+F.length));for(let b=0;b<F.length;b++)this.data[this.length++]=(F.data||F)[b]}}indexOf(F){const b=this.data.indexOf(F);return b>=this.length?-1:b}contains(F){return-1!==this.indexOf(F)}}C._GlobalId=0;class z extends C{constructor(){super(...arguments),this._duplicateId=0}push(F){super.push(F),F.__smartArrayFlags||(F.__smartArrayFlags={}),F.__smartArrayFlags[this._id]=this._duplicateId}pushNoDuplicate(F){return(!F.__smartArrayFlags||F.__smartArrayFlags[this._id]!==this._duplicateId)&&(this.push(F),!0)}reset(){super.reset(),this._duplicateId++}concatWithNoDuplicate(F){if(0!==F.length){this.length+F.length>this.data.length&&(this.data.length=2*(this.length+F.length));for(let b=0;b<F.length;b++){const Q=(F.data||F)[b];this.pushNoDuplicate(Q)}}}}},11369:(F,b,Q)=>{Q.d(b,{d:()=>t});var C=Q(11372),z=Q(11133);class t{constructor(F){this._vertexBuffers={},this.onBeforeRenderObservable=new z.c,this._scene=F}_prepareBuffers(){if(this._vertexBuffers[C.e.PositionKind])return;const F=[];F.push(1,1),F.push(-1,1),F.push(-1,-1),F.push(1,-1),this._vertexBuffers[C.e.PositionKind]=new C.e(this._scene.getEngine(),F,C.e.PositionKind,!1,!1,2),this._buildIndexBuffer()}_buildIndexBuffer(){const F=[];F.push(0),F.push(1),F.push(2),F.push(0),F.push(2),F.push(3),this._indexBuffer=this._scene.getEngine().createIndexBuffer(F)}_rebuild(){const F=this._vertexBuffers[C.e.PositionKind];F&&(F._rebuild(),this._buildIndexBuffer())}_prepareFrame(){let F=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const Q=this._scene.activeCamera;return!!Q&&(b=b||Q._postProcesses.filter((F=>null!=F)),!(!b||0===b.length||!this._scene.postProcessesEnabled)&&(b[0].activate(Q,F,null!==b&&void 0!==b),!0))}directRender(F){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Q=arguments.length>2&&void 0!==arguments[2]&&arguments[2],C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,t=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6&&void 0!==arguments[6]?arguments[6]:F.length;const W=this._scene.getEngine();for(let q=0;q<g;q++){var Z;if(q<F.length-1)F[q+1].activate(this._scene.activeCamera||this._scene,null===b||void 0===b?void 0:b.texture);else b?W.bindFramebuffer(b,C,void 0,void 0,Q,z):t||W.restoreDefaultFramebuffer(),null===(Z=W._debugInsertMarker)||void 0===Z||Z.call(W,`post process ${F[q].name} output`);const g=F[q],G=g.apply();G&&(g.onBeforeRenderObservable.notifyObservers(G),this._prepareBuffers(),W.bindBuffers(this._vertexBuffers,this._indexBuffer,G),W.drawElementsType(0,0,6),g.onAfterRenderObservable.notifyObservers(G))}W.setDepthBuffer(!0),W.setDepthWrite(!0)}_finalizeFrame(F,b,Q,C){let z=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const t=this._scene.activeCamera;if(!t)return;if(this.onBeforeRenderObservable.notifyObservers(this),0===(C=C||t._postProcesses.filter((F=>null!=F))).length||!this._scene.postProcessesEnabled)return;const g=this._scene.getEngine();for(let Z=0,q=C.length;Z<q;Z++){const G=C[Z];var W;if(Z<q-1)G._outputTexture=C[Z+1].activate(t,null===b||void 0===b?void 0:b.texture);else b?(g.bindFramebuffer(b,Q,void 0,void 0,z),G._outputTexture=b):(g.restoreDefaultFramebuffer(),G._outputTexture=null),null===(W=g._debugInsertMarker)||void 0===W||W.call(g,`post process ${C[Z].name} output`);if(F)break;const K=G.apply();K&&(G.onBeforeRenderObservable.notifyObservers(K),this._prepareBuffers(),g.bindBuffers(this._vertexBuffers,this._indexBuffer,K),g.drawElementsType(0,0,6),G.onAfterRenderObservable.notifyObservers(K))}g.setDepthBuffer(!0),g.setDepthWrite(!0),g.setAlphaMode(0)}dispose(){const F=this._vertexBuffers[C.e.PositionKind];F&&(F.dispose(),this._vertexBuffers[C.e.PositionKind]=null),this._indexBuffer&&(this._scene.getEngine()._releaseBuffer(this._indexBuffer),this._indexBuffer=null)}}},11386:(F,b,Q)=>{Q.d(b,{c:()=>W});var C=Q(11395),z=Q(11309);class t{set opaqueSortCompareFn(F){this._opaqueSortCompareFn=F||t.PainterSortCompare,this._renderOpaque=this._renderOpaqueSorted}set alphaTestSortCompareFn(F){this._alphaTestSortCompareFn=F||t.PainterSortCompare,this._renderAlphaTest=this._renderAlphaTestSorted}set transparentSortCompareFn(F){this._transparentSortCompareFn=F||t.defaultTransparentSortCompare,this._renderTransparent=this._renderTransparentSorted}constructor(F,b){let Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.index=F,this._opaqueSubMeshes=new C.d(256),this._transparentSubMeshes=new C.d(256),this._alphaTestSubMeshes=new C.d(256),this._depthOnlySubMeshes=new C.d(256),this._particleSystems=new C.d(256),this._spriteManagers=new C.d(256),this._empty=!0,this._edgesRenderers=new C.b(16),this._scene=b,this.opaqueSortCompareFn=Q,this.alphaTestSortCompareFn=z,this.transparentSortCompareFn=t}render(F,b,Q,C){if(F)return void F(this._opaqueSubMeshes,this._alphaTestSubMeshes,this._transparentSubMeshes,this._depthOnlySubMeshes);const z=this._scene.getEngine();0!==this._depthOnlySubMeshes.length&&(z.setColorWrite(!1),this._renderAlphaTest(this._depthOnlySubMeshes),z.setColorWrite(!0)),0!==this._opaqueSubMeshes.length&&this._renderOpaque(this._opaqueSubMeshes),0!==this._alphaTestSubMeshes.length&&this._renderAlphaTest(this._alphaTestSubMeshes);const t=z.getStencilBuffer();if(z.setStencilBuffer(!1),b&&this._renderSprites(),Q&&this._renderParticles(C),this.onBeforeTransparentRendering&&this.onBeforeTransparentRendering(),0!==this._transparentSubMeshes.length||this._scene.useOrderIndependentTransparency){if(z.setStencilBuffer(t),this._scene.useOrderIndependentTransparency){const F=this._scene.depthPeelingRenderer.render(this._transparentSubMeshes);F.length&&this._renderTransparent(F)}else this._renderTransparent(this._transparentSubMeshes);z.setAlphaMode(0)}if(z.setStencilBuffer(!1),this._edgesRenderers.length){for(let F=0;F<this._edgesRenderers.length;F++)this._edgesRenderers.data[F].render();z.setAlphaMode(0)}z.setStencilBuffer(t)}_renderOpaqueSorted(F){t._RenderSorted(F,this._opaqueSortCompareFn,this._scene.activeCamera,!1)}_renderAlphaTestSorted(F){t._RenderSorted(F,this._alphaTestSortCompareFn,this._scene.activeCamera,!1)}_renderTransparentSorted(F){t._RenderSorted(F,this._transparentSortCompareFn,this._scene.activeCamera,!0)}static _RenderSorted(F,b,Q,C){let g,W=0;const Z=Q?Q.globalPosition:t._ZeroVector;if(C)for(;W<F.length;W++)g=F.data[W],g._alphaIndex=g.getMesh().alphaIndex,g._distanceToCamera=z.gQ.Distance(g.getBoundingInfo().boundingSphere.centerWorld,Z);const q=F.length===F.data.length?F.data:F.data.slice(0,F.length);b&&q.sort(b);const G=q[0].getMesh().RF();for(W=0;W<q.length;W++)if(g=q[W],!G._activeMeshesFrozenButKeepClipping||g.isInFrustum(G._frustumPlanes)){if(C){const F=g.TF();if(F&&F.needDepthPrePass){const b=F.RF().getEngine();b.setColorWrite(!1),b.setAlphaMode(0),g.render(!1),b.setColorWrite(!0)}}g.render(C)}}static defaultTransparentSortCompare(F,b){return F._alphaIndex>b._alphaIndex?1:F._alphaIndex<b._alphaIndex?-1:t.backToFrontSortCompare(F,b)}static backToFrontSortCompare(F,b){return F._distanceToCamera<b._distanceToCamera?1:F._distanceToCamera>b._distanceToCamera?-1:0}static frontToBackSortCompare(F,b){return F._distanceToCamera<b._distanceToCamera?-1:F._distanceToCamera>b._distanceToCamera?1:0}static PainterSortCompare(F,b){const Q=F.getMesh(),C=b.getMesh();return Q.material&&C.material?Q.material.uniqueId-C.material.uniqueId:Q.uniqueId-C.uniqueId}prepare(){this._opaqueSubMeshes.reset(),this._transparentSubMeshes.reset(),this._alphaTestSubMeshes.reset(),this._depthOnlySubMeshes.reset(),this._particleSystems.reset(),this.prepareSprites(),this._edgesRenderers.reset(),this._empty=!0}prepareSprites(){this._spriteManagers.reset()}dispose(){this._opaqueSubMeshes.dispose(),this._transparentSubMeshes.dispose(),this._alphaTestSubMeshes.dispose(),this._depthOnlySubMeshes.dispose(),this._particleSystems.dispose(),this._spriteManagers.dispose(),this._edgesRenderers.dispose()}dispatch(F,b,Q){void 0===b&&(b=F.getMesh()),void 0===Q&&(Q=F.TF()),null!==Q&&void 0!==Q&&(Q.needAlphaBlendingForMesh(b)?this._transparentSubMeshes.push(F):Q.needAlphaTestingForMesh(b)?(Q.needDepthPrePass&&this._depthOnlySubMeshes.push(F),this._alphaTestSubMeshes.push(F)):(Q.needDepthPrePass&&this._depthOnlySubMeshes.push(F),this._opaqueSubMeshes.push(F)),b._renderingGroup=this,b._edgesRenderer&&b.isEnabled()&&b.isVisible&&b._edgesRenderer.isEnabled&&this._edgesRenderers.pushNoDuplicate(b._edgesRenderer),this._empty=!1)}dispatchSprites(F){this._spriteManagers.push(F),this._empty=!1}dispatchParticles(F){this._particleSystems.push(F),this._empty=!1}_renderParticles(F){if(0===this._particleSystems.length)return;const b=this._scene.activeCamera;this._scene.onBeforeParticlesRenderingObservable.notifyObservers(this._scene);for(let Q=0;Q<this._particleSystems.length;Q++){const C=this._particleSystems.data[Q];if(0===(b&&b.layerMask&C.layerMask))continue;const z=C.Cb;z.position&&F&&-1===F.indexOf(z)||this._scene._activeParticles.addCount(C.render(),!1)}this._scene.onAfterParticlesRenderingObservable.notifyObservers(this._scene)}_renderSprites(){if(!this._scene.spritesEnabled||0===this._spriteManagers.length)return;const F=this._scene.activeCamera;this._scene.onBeforeSpritesRenderingObservable.notifyObservers(this._scene);for(let b=0;b<this._spriteManagers.length;b++){const Q=this._spriteManagers.data[b];0!==(F&&F.layerMask&Q.layerMask)&&Q.render()}this._scene.onAfterSpritesRenderingObservable.notifyObservers(this._scene)}}t._ZeroVector=z.gQ.Zero();class g{}class W{get maintainStateBetweenFrames(){return this._maintainStateBetweenFrames}set maintainStateBetweenFrames(F){F!==this._maintainStateBetweenFrames&&(this._maintainStateBetweenFrames=F,this._maintainStateBetweenFrames||this.restoreDispachedFlags())}restoreDispachedFlags(){for(const F of this._scene.meshes)if(F.Xb)for(const b of F.Xb)b._wasDispatched=!1;if(this._scene.spriteManagers)for(const F of this._scene.spriteManagers)F._wasDispatched=!1;for(const F of this._scene.Te)F._wasDispatched=!1}constructor(F){this._useSceneAutoClearSetup=!1,this._renderingGroups=new Array,this._autoClearDepthStencil={},this._customOpaqueSortCompareFn={},this._customAlphaTestSortCompareFn={},this._customTransparentSortCompareFn={},this._renderingGroupInfo=new g,this._maintainStateBetweenFrames=!1,this._scene=F;for(let b=W.MIN_RENDERINGGROUPS;b<W.MAX_RENDERINGGROUPS;b++)this._autoClearDepthStencil[b]={cb:!0,depth:!0,stencil:!0}}getRenderingGroup(F){const b=F||0;return this._prepareRenderingGroup(b),this._renderingGroups[b]}_clearDepthStencilBuffer(){let F=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],b=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._depthStencilBufferAlreadyCleaned||(this._scene.getEngine().clear(null,!1,F,b),this._depthStencilBufferAlreadyCleaned=!0)}render(F,b,Q,C){const z=this._renderingGroupInfo;if(z.ZQ=this._scene,z.camera=this._scene.activeCamera,z.renderingManager=this,this._scene.spriteManagers&&C)for(let t=0;t<this._scene.spriteManagers.length;t++){const F=this._scene.spriteManagers[t];this.dispatchSprites(F)}for(let t=W.MIN_RENDERINGGROUPS;t<W.MAX_RENDERINGGROUPS;t++){this._depthStencilBufferAlreadyCleaned=t===W.MIN_RENDERINGGROUPS;const g=this._renderingGroups[t];if(!g||g._empty)continue;const Z=1<<t;if(z.renderingGroupId=t,this._scene.onBeforeRenderingGroupObservable.notifyObservers(z,Z),W.AUTOCLEAR){const F=this._useSceneAutoClearSetup?this._scene.getAutoClearDepthStencilSetup(t):this._autoClearDepthStencil[t];F&&F.cb&&this._clearDepthStencilBuffer(F.depth,F.stencil)}for(const F of this._scene._beforeRenderingGroupDrawStage)F.action(t);g.render(F,C,Q,b);for(const F of this._scene._afterRenderingGroupDrawStage)F.action(t);this._scene.onAfterRenderingGroupObservable.notifyObservers(z,Z)}}reset(){if(!this.maintainStateBetweenFrames)for(let F=W.MIN_RENDERINGGROUPS;F<W.MAX_RENDERINGGROUPS;F++){const b=this._renderingGroups[F];b&&b.prepare()}}resetSprites(){if(!this.maintainStateBetweenFrames)for(let F=W.MIN_RENDERINGGROUPS;F<W.MAX_RENDERINGGROUPS;F++){const b=this._renderingGroups[F];b&&b.prepareSprites()}}dispose(){this.freeRenderingGroups(),this._renderingGroups.length=0,this._renderingGroupInfo=null}freeRenderingGroups(){for(let F=W.MIN_RENDERINGGROUPS;F<W.MAX_RENDERINGGROUPS;F++){const b=this._renderingGroups[F];b&&b.dispose()}}_prepareRenderingGroup(F){void 0===this._renderingGroups[F]&&(this._renderingGroups[F]=new t(F,this._scene,this._customOpaqueSortCompareFn[F],this._customAlphaTestSortCompareFn[F],this._customTransparentSortCompareFn[F]))}dispatchSprites(F){this.maintainStateBetweenFrames&&F._wasDispatched||(F._wasDispatched=!0,this.getRenderingGroup(F.renderingGroupId).dispatchSprites(F))}dispatchParticles(F){this.maintainStateBetweenFrames&&F._wasDispatched||(F._wasDispatched=!0,this.getRenderingGroup(F.renderingGroupId).dispatchParticles(F))}dispatch(F,b,Q){void 0===b&&(b=F.getMesh()),this.maintainStateBetweenFrames&&F._wasDispatched||(F._wasDispatched=!0,this.getRenderingGroup(b.renderingGroupId).dispatch(F,b,Q))}setRenderingOrder(F){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(this._customOpaqueSortCompareFn[F]=b,this._customAlphaTestSortCompareFn[F]=Q,this._customTransparentSortCompareFn[F]=C,this._renderingGroups[F]){const b=this._renderingGroups[F];b.opaqueSortCompareFn=this._customOpaqueSortCompareFn[F],b.alphaTestSortCompareFn=this._customAlphaTestSortCompareFn[F],b.transparentSortCompareFn=this._customTransparentSortCompareFn[F]}}setRenderingAutoClearDepthStencil(F,b){let Q=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],C=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._autoClearDepthStencil[F]={cb:b,depth:Q,stencil:C}}getAutoClearDepthStencilSetup(F){return this._autoClearDepthStencil[F]}}W.MAX_RENDERINGGROUPS=4,W.MIN_RENDERINGGROUPS=0,W.AUTOCLEAR=!0}}]);