"use strict";(self.uw9p3pwwsje=self.uw9p3pwwsje||[]).push([[19],{12894:(D,h,o)=>{o.d(h,{d:()=>M,f:()=>R});var H=o(12898),g=o(12658),j=o(12901);class M{get S(){return this._isDisposed}constructor(D,h,o){let g=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,j=arguments.length>4&&void 0!==arguments[4]&&arguments[4],M=arguments.length>5&&void 0!==arguments[5]&&arguments[5],R=arguments.length>6&&void 0!==arguments[6]&&arguments[6],t=arguments.length>7?arguments[7]:void 0,S=arguments.length>8?arguments[8]:void 0;this._isAlreadyOwned=!1,this._isDisposed=!1,D&&D.GD?this._engine=D.GD().getEngine():this._engine=D,this._updatable=o,this._instanced=M,this._divisor=t||1,this._label=S,h instanceof H.d?(this._data=null,this._buffer=h):(this._data=h,this._buffer=null),this.byteStride=R?g:g*Float32Array.BYTES_PER_ELEMENT,j||this.create()}createVertexBuffer(D,h,o,H,g){let j=arguments.length>5&&void 0!==arguments[5]&&arguments[5],M=arguments.length>6?arguments[6]:void 0;const t=j?h:h*Float32Array.BYTES_PER_ELEMENT,S=H?j?H:H*Float32Array.BYTES_PER_ELEMENT:this.byteStride;return new R(this._engine,this,D,this._updatable,!0,S,void 0===g?this._instanced:g,t,o,void 0,void 0,!0,this._divisor||M)}isUpdatable(){return this._updatable}getData(){return this._data}getBuffer(){return this._buffer}getStrideSize(){return this.byteStride/Float32Array.BYTES_PER_ELEMENT}create(){let D=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;!D&&this._buffer||(D=D||this._data,D&&(this._buffer?this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,D),this._data=D):this._updatable?(this._buffer=this._engine.createDynamicVertexBuffer(D,this._label),this._data=D):this._buffer=this._engine.createVertexBuffer(D,void 0,this._label)))}_rebuild(){if(this._data)this._buffer=null,this.create(this._data);else{if(!this._buffer)return;if(this._buffer.Ko>0)return void(this._updatable?this._buffer=this._engine.createDynamicVertexBuffer(this._buffer.Ko,this._label):this._buffer=this._engine.createVertexBuffer(this._buffer.Ko,void 0,this._label));g.d.Warn(`Missing data for buffer "${this._label}" ${this._buffer?"(uniqueId: "+this._buffer.uniqueId+")":""}. Buffer reconstruction failed.`),this._buffer=null}}update(D){this.create(D)}updateDirectly(D,h,o){let H=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this._buffer&&this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,D,H?h:h*Float32Array.BYTES_PER_ELEMENT,o?o*this.byteStride:void 0),this._data=0===h&&void 0===o?D:null)}_increaseReferences(){this._buffer&&(this._isAlreadyOwned?this._buffer.references++:this._isAlreadyOwned=!0)}dispose(){this._buffer&&this._engine._releaseBuffer(this._buffer)&&(this._isDisposed=!0,this._data=null,this._buffer=null)}}class R{get S(){return this._isDisposed}get instanceDivisor(){return this._instanceDivisor}set instanceDivisor(D){const h=0!=D;this._instanceDivisor=D,h!==this._instanced&&(this._instanced=h,this._computeHashCode())}get _maxVerticesCount(){const D=this.getData();return D?Array.isArray(D)?D.length/(this.byteStride/4)-this.byteOffset/4:(D.byteLength-this.byteOffset)/this.byteStride:0}constructor(D,h,o,H,g,t,S,k,K,Q){let v=arguments.length>10&&void 0!==arguments[10]&&arguments[10],r=arguments.length>11&&void 0!==arguments[11]&&arguments[11],B=arguments.length>12&&void 0!==arguments[12]?arguments[12]:1,s=arguments.length>13&&void 0!==arguments[13]&&arguments[13];this._isDisposed=!1;let U=!1;if(this.bh=D,"object"===typeof H&&null!==H?(U=H.updatable??!1,g=H.postponeInternalCreation,t=H.stride,S=H.instanced,k=H.offset,K=H.size,Q=H.type,v=H.normalized??!1,r=H.useBytes??!1,B=H.divisor??1,s=H.takeBufferOwnership??!1,this._label=H.label):U=!!H,h instanceof M?(this._buffer=h,this._ownsBuffer=s):(this._buffer=new M(D,h,U,t,g,S,r,B,this._label),this._ownsBuffer=!0),this.uniqueId=R._Counter++,this._kind=o,void 0===Q){const D=this.getData();this.type=D?R.GetDataType(D):R.FLOAT}else this.type=Q;const q=(0,j.o)(this.type);r?(this._size=K||(t?t/q:R.DeduceStride(o)),this.byteStride=t||this._buffer.byteStride||this._size*q,this.byteOffset=k||0):(this._size=K||t||R.DeduceStride(o),this.byteStride=t?t*q:this._buffer.byteStride||this._size*q,this.byteOffset=(k||0)*q),this.normalized=v,this._instanced=void 0!==S&&S,this._instanceDivisor=S?B:0,this._alignBuffer(),this._computeHashCode()}_computeHashCode(){this.hashCode=(this.type-5120|0)+((this.normalized?1:0)<<3)+(this._size<<4)+((this._instanced?1:0)<<6)+(this.byteStride<<12)}_rebuild(){var D;null===(D=this._buffer)||void 0===D||D._rebuild()}getKind(){return this._kind}isUpdatable(){return this._buffer.isUpdatable()}getData(){return this._buffer.getData()}getFloatData(D,h){const o=this.getData();return o?(0,j.l)(o,this._size,this.type,this.byteOffset,this.byteStride,this.normalized,D,h):null}getBuffer(){return this._buffer.getBuffer()}getWrapperBuffer(){return this._buffer}getStrideSize(){return this.byteStride/(0,j.o)(this.type)}getOffset(){return this.byteOffset/(0,j.o)(this.type)}getSize(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this._size*(0,j.o)(this.type):this._size}getIsInstanced(){return this._instanced}getInstanceDivisor(){return this._instanceDivisor}create(D){this._buffer.create(D),this._alignBuffer()}update(D){this._buffer.update(D),this._alignBuffer()}updateDirectly(D,h){let o=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._buffer.updateDirectly(D,h,void 0,o),this._alignBuffer()}dispose(){this._ownsBuffer&&this._buffer.dispose(),this._isDisposed=!0}forEach(D,h){(0,j.j)(this._buffer.getData(),this.byteOffset,this.byteStride,this._size,this.type,D,this.normalized,((D,o)=>{for(let H=0;H<this._size;H++)h(D[H],o+H)}))}_alignBuffer(){}static DeduceStride(D){switch(D){case R.UVKind:case R.UV2Kind:case R.UV3Kind:case R.UV4Kind:case R.UV5Kind:case R.UV6Kind:return 2;case R.NormalKind:case R.PositionKind:return 3;case R.ColorKind:case R.ColorInstanceKind:case R.MatricesIndicesKind:case R.MatricesIndicesExtraKind:case R.MatricesWeightsKind:case R.MatricesWeightsExtraKind:case R.TangentKind:return 4;default:throw new Error("Invalid kind '"+D+"'")}}static GetDataType(D){return D instanceof Int8Array?R.BYTE:D instanceof Uint8Array?R.UNSIGNED_BYTE:D instanceof Int16Array?R.SHORT:D instanceof Uint16Array?R.UNSIGNED_SHORT:D instanceof Int32Array?R.INT:D instanceof Uint32Array?R.UNSIGNED_INT:R.FLOAT}static GetTypeByteLength(D){return(0,j.o)(D)}static ForEach(D,h,o,H,g,M,R,t){(0,j.j)(D,h,o,H,g,M,R,((D,h)=>{for(let o=0;o<H;o++)t(D[o],h+o)}))}static GetFloatData(D,h,o,H,g,M,R,t){return(0,j.l)(D,h,o,H,g,M,R,t)}}R._Counter=0,R.BYTE=5120,R.UNSIGNED_BYTE=5121,R.SHORT=5122,R.UNSIGNED_SHORT=5123,R.INT=5124,R.UNSIGNED_INT=5125,R.FLOAT=5126,R.PositionKind="position",R.NormalKind="normal",R.TangentKind="tangent",R.UVKind="uv",R.UV2Kind="uv2",R.UV3Kind="uv3",R.UV4Kind="uv4",R.UV5Kind="uv5",R.UV6Kind="uv6",R.ColorKind="color",R.ColorInstanceKind="instanceColor",R.MatricesIndicesKind="matricesIndices",R.MatricesWeightsKind="matricesWeights",R.MatricesIndicesExtraKind="matricesIndicesExtra",R.MatricesWeightsExtraKind="matricesWeightsExtra"},12901:(D,h,o)=>{o.d(h,{b:()=>Q,f:()=>K,j:()=>t,l:()=>S,o:()=>M,p:()=>R,r:()=>k});var H=o(12658);function g(D,h,o,H){switch(h){case 5120:{let h=D.getInt8(o);return H&&(h=Math.max(h/127,-1)),h}case 5121:{let h=D.getUint8(o);return H&&(h/=255),h}case 5122:{let h=D.getInt16(o,!0);return H&&(h=Math.max(h/32767,-1)),h}case 5123:{let h=D.getUint16(o,!0);return H&&(h/=65535),h}case 5124:return D.getInt32(o,!0);case 5125:return D.getUint32(o,!0);case 5126:return D.getFloat32(o,!0);default:throw new Error(`Invalid component type ${h}`)}}function j(D,h,o,H,g){switch(h){case 5120:H&&(g=Math.round(127*g)),D.setInt8(o,g);break;case 5121:H&&(g=Math.round(255*g)),D.setUint8(o,g);break;case 5122:H&&(g=Math.round(32767*g)),D.setInt16(o,g,!0);break;case 5123:H&&(g=Math.round(65535*g)),D.setUint16(o,g,!0);break;case 5124:D.setInt32(o,g,!0);break;case 5125:D.setUint32(o,g,!0);break;case 5126:D.setFloat32(o,g,!0);break;default:throw new Error(`Invalid component type ${h}`)}}function M(D){switch(D){case 5120:case 5121:return 1;case 5122:case 5123:return 2;case 5124:case 5125:case 5126:return 4;default:throw new Error(`Invalid type '${D}'`)}}function R(D){switch(D){case 5120:return Int8Array;case 5121:return Uint8Array;case 5122:return Int16Array;case 5123:return Uint16Array;case 5124:return Int32Array;case 5125:return Uint32Array;case 5126:return Float32Array;default:throw new Error(`Invalid component type '${D}'`)}}function t(D,h,o,H,R,t,S,k){const K=new Array(H),Q=new Array(H);if(D instanceof Array){let g=h/4;const j=o/4;for(let h=0;h<t;h+=H){for(let h=0;h<H;h++)K[h]=Q[h]=D[g+h];k(Q,h);for(let h=0;h<H;h++)K[h]!==Q[h]&&(D[g+h]=Q[h]);g+=j}}else{const v=ArrayBuffer.isView(D)?new DataView(D.buffer,D.byteOffset,D.byteLength):new DataView(D),r=M(R);for(let D=0;D<t;D+=H){for(let D=0,o=h;D<H;D++,o+=r)K[D]=Q[D]=g(v,R,o,S);k(Q,D);for(let D=0,o=h;D<H;D++,o+=r)K[D]!==Q[D]&&j(v,R,o,S,Q[D]);h+=o}}}function S(D,h,o,g,j,R,S,k){const K=h*M(o),Q=S*h;if(5126!==o||j!==K){const H=new Float32Array(Q);return t(D,g,j,h,o,Q,R,((D,o)=>{for(let g=0;g<h;g++)H[o+g]=D[g]})),H}if(!(D instanceof Array||D instanceof Float32Array)||0!==g||D.length!==Q){if(D instanceof Array){const h=g/4;return D.slice(h,h+Q)}if(D instanceof ArrayBuffer)return new Float32Array(D,g,Q);{const h=D.byteOffset+g;return 0!==(3&h)&&(H.d.Warn("Float array must be aligned to 4-bytes border"),k=!0),k?new Float32Array(D.buffer.slice(h,h+Q*Float32Array.BYTES_PER_ELEMENT)):new Float32Array(D.buffer,h,Q)}}return k?D.slice():D}function k(D,h,o,g,j,S,k,K){const Q=M(o),v=R(o),r=k*h;if(Array.isArray(D)){if(0!==(3&g)||0!==(3&j))throw new Error("byteOffset and byteStride must be a multiple of 4 for number[] data.");const H=g/4,M=j/4;if(H+(k-1)*M+h>D.length)throw new Error("Last accessed index is out of bounds.");if(M<h)throw new Error("Data stride cannot be smaller than the component size.");if(M!==h){const H=new v(r);return t(D,g,j,h,o,r,S,((D,o)=>{for(let g=0;g<h;g++)H[o+g]=D[g]})),H}return new v(D.slice(H,H+r))}let B,s=g;D instanceof ArrayBuffer?B=D:(B=D.buffer,s+=D.byteOffset);if(s+(k-1)*j+h*Q>B.byteLength)throw new Error("Last accessed byte is out of bounds.");const U=h*Q;if(j<U)throw new Error("Byte stride cannot be smaller than the component's byte size.");if(j!==U){const D=new v(r);return t(B,s,j,h,o,r,S,((o,H)=>{for(let g=0;g<h;g++)D[H+g]=o[g]})),D}return 1!==Q&&0!==(s&Q-1)&&(H.d.Warn("Array must be aligned to border of element size. Data will be copied."),K=!0),K?new v(B.slice(s,s+r*Q)):new v(B,s,r)}function K(D,h,o,g,j,R,S,k){const K=h*M(o),Q=S*h;if(k.length!==Q)throw new Error("Output length is not valid");if(5126===o&&j===K)if(D instanceof Array){const h=g/4;k.set(D,h)}else if(D instanceof ArrayBuffer){const h=new Float32Array(D,g,Q);k.set(h)}else{const h=D.byteOffset+g;if(0!==(3&h))return H.d.Warn("Float array must be aligned to 4-bytes border"),void k.set(new Float32Array(D.buffer.slice(h,h+Q*Float32Array.BYTES_PER_ELEMENT)));const o=new Float32Array(D.buffer,h,Q);k.set(o)}else t(D,g,j,h,o,Q,R,((D,o)=>{for(let H=0;H<h;H++)k[o+H]=D[H]}))}function Q(D,h){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(Array.isArray(D)){for(let g=0;g<h;g++)if(D[o+g]-H>65535)return!0;return!1}return 4===D.BYTES_PER_ELEMENT}},12898:(D,h,o)=>{o.d(h,{d:()=>H});class H{get underlyingResource(){return null}constructor(){this.references=0,this.Ko=0,this.is32Bits=!1,this.uniqueId=H._Counter++}}H._Counter=0},12940:(D,h,o)=>{o.d(h,{c:()=>g});var H=o(12722);class g{static GetEffect(D){return void 0===D.getPipelineContext?D.effect:D}constructor(D){let h=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._wasPreviouslyReady=!1,this._forceRebindOnNextCall=!0,this._wasPreviouslyUsingInstances=null,this.effect=null,this.defines=null,this.drawContext=D.createDrawContext(),h&&(this.materialContext=D.createMaterialContext())}setEffect(D,h){let o=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];var H;(this.effect=D,void 0!==h&&(this.defines=h),o)&&(null===(H=this.drawContext)||void 0===H||H.reset())}dispose(){var D;let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.effect){const D=this.effect;h?D.dispose():H.e.SetImmediate((()=>{D.getEngine().onEndFrameObservable.addOnce((()=>{D.dispose()}))})),this.effect=null}null===(D=this.drawContext)||void 0===D||D.dispose()}}},13034:(D,h,o)=>{o.d(h,{e:()=>g});var H=o(12875);class g{static GetPlanes(D){const h=[];for(let o=0;o<6;o++)h.push(new H.b(0,0,0,0));return g.GetPlanesToRef(D,h),h}static GetNearPlaneToRef(D,h){const o=D.m;h.normal.x=o[3]+o[2],h.normal.y=o[7]+o[6],h.normal.z=o[11]+o[10],h.d=o[15]+o[14],h.normalize()}static GetFarPlaneToRef(D,h){const o=D.m;h.normal.x=o[3]-o[2],h.normal.y=o[7]-o[6],h.normal.z=o[11]-o[10],h.d=o[15]-o[14],h.normalize()}static GetLeftPlaneToRef(D,h){const o=D.m;h.normal.x=o[3]+o[0],h.normal.y=o[7]+o[4],h.normal.z=o[11]+o[8],h.d=o[15]+o[12],h.normalize()}static GetRightPlaneToRef(D,h){const o=D.m;h.normal.x=o[3]-o[0],h.normal.y=o[7]-o[4],h.normal.z=o[11]-o[8],h.d=o[15]-o[12],h.normalize()}static GetTopPlaneToRef(D,h){const o=D.m;h.normal.x=o[3]-o[1],h.normal.y=o[7]-o[5],h.normal.z=o[11]-o[9],h.d=o[15]-o[13],h.normalize()}static GetBottomPlaneToRef(D,h){const o=D.m;h.normal.x=o[3]+o[1],h.normal.y=o[7]+o[5],h.normal.z=o[11]+o[9],h.d=o[15]+o[13],h.normalize()}static GetPlanesToRef(D,h){g.GetNearPlaneToRef(D,h[0]),g.GetFarPlaneToRef(D,h[1]),g.GetLeftPlaneToRef(D,h[2]),g.GetRightPlaneToRef(D,h[3]),g.GetTopPlaneToRef(D,h[4]),g.GetBottomPlaneToRef(D,h[5])}static IsPointInFrustum(D,h){for(let o=0;o<6;o++)if(h[o].dotCoordinate(D)<0)return!1;return!0}}},13044:(D,h,o)=>{o.d(h,{d:()=>g});var H=o(12667);class g{get min(){return this._min}get max(){return this._max}get average(){return this._average}get lastSecAverage(){return this._lastSecAverage}get current(){return this._current}get total(){return this._totalAccumulated}get count(){return this._totalValueCount}constructor(){this._startMonitoringTime=0,this._min=0,this._max=0,this._average=0,this._lastSecAverage=0,this._current=0,this._totalValueCount=0,this._totalAccumulated=0,this._lastSecAccumulated=0,this._lastSecTime=0,this._lastSecValueCount=0}fetchNewFrame(){this._totalValueCount++,this._current=0,this._lastSecValueCount++}addCount(D,h){g.Enabled&&(this._current+=D,h&&this._fetchResult())}beginMonitoring(){g.Enabled&&(this._startMonitoringTime=H.b.Now)}endMonitoring(){let D=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(!g.Enabled)return;D&&this.fetchNewFrame();const h=H.b.Now;this._current=h-this._startMonitoringTime,D&&this._fetchResult()}ih(){this._fetchResult()}_fetchResult(){this._totalAccumulated+=this._current,this._lastSecAccumulated+=this._current,this._min=Math.min(this._min,this._current),this._max=Math.max(this._max,this._current),this._average=this._totalAccumulated/this._totalValueCount;const D=H.b.Now;D-this._lastSecTime>1e3&&(this._lastSecAverage=this._lastSecAccumulated/this._lastSecValueCount,this._lastSecTime=D,this._lastSecAccumulated=0,this._lastSecValueCount=0)}}g.Enabled=!0},12915:(D,h,o)=>{o.d(h,{b:()=>g,d:()=>H});class H{constructor(D){this.length=0,this.data=new Array(D),this._id=H._GlobalId++}push(D){this.data[this.length++]=D,this.length>this.data.length&&(this.data.length*=2)}forEach(D){for(let h=0;h<this.length;h++)D(this.data[h])}sort(D){this.data.sort(D)}reset(){this.length=0}dispose(){this.reset(),this.data&&(this.data.length=0)}concat(D){if(0!==D.length){this.length+D.length>this.data.length&&(this.data.length=2*(this.length+D.length));for(let h=0;h<D.length;h++)this.data[this.length++]=(D.data||D)[h]}}indexOf(D){const h=this.data.indexOf(D);return h>=this.length?-1:h}contains(D){return-1!==this.indexOf(D)}}H._GlobalId=0;class g extends H{constructor(){super(...arguments),this._duplicateId=0}push(D){super.push(D),D.__smartArrayFlags||(D.__smartArrayFlags={}),D.__smartArrayFlags[this._id]=this._duplicateId}pushNoDuplicate(D){return(!D.__smartArrayFlags||D.__smartArrayFlags[this._id]!==this._duplicateId)&&(this.push(D),!0)}reset(){super.reset(),this._duplicateId++}concatWithNoDuplicate(D){if(0!==D.length){this.length+D.length>this.data.length&&(this.data.length=2*(this.length+D.length));for(let h=0;h<D.length;h++){const o=(D.data||D)[h];this.pushNoDuplicate(o)}}}}},12892:(D,h,o)=>{o.d(h,{d:()=>j});var H=o(12894),g=o(12648);class j{constructor(D){this._vertexBuffers={},this.onBeforeRenderObservable=new g.c,this._scene=D}_prepareBuffers(){if(this._vertexBuffers[H.f.PositionKind])return;const D=[];D.push(1,1),D.push(-1,1),D.push(-1,-1),D.push(1,-1),this._vertexBuffers[H.f.PositionKind]=new H.f(this._scene.getEngine(),D,H.f.PositionKind,!1,!1,2),this._buildIndexBuffer()}_buildIndexBuffer(){const D=[];D.push(0),D.push(1),D.push(2),D.push(0),D.push(2),D.push(3),this._indexBuffer=this._scene.getEngine().createIndexBuffer(D)}_rebuild(){const D=this._vertexBuffers[H.f.PositionKind];D&&(D._rebuild(),this._buildIndexBuffer())}_prepareFrame(){let D=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const o=this._scene.activeCamera;return!!o&&(h=h||o._postProcesses.filter((D=>null!=D)),!(!h||0===h.length||!this._scene.postProcessesEnabled)&&(h[0].activate(o,D,null!==h&&void 0!==h),!0))}directRender(D){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2&&void 0!==arguments[2]&&arguments[2],H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,j=arguments.length>5&&void 0!==arguments[5]&&arguments[5],M=arguments.length>6&&void 0!==arguments[6]?arguments[6]:D.length;const R=this._scene.getEngine();for(let S=0;S<M;S++){var t;if(S<D.length-1)D[S+1].activate(this._scene.activeCamera||this._scene,null===h||void 0===h?void 0:h.texture);else h?R.bindFramebuffer(h,H,void 0,void 0,o,g):j||R.restoreDefaultFramebuffer(),null===(t=R._debugInsertMarker)||void 0===t||t.call(R,`post process ${D[S].name} output`);const M=D[S],k=M.apply();k&&(M.onBeforeRenderObservable.notifyObservers(k),this._prepareBuffers(),R.bindBuffers(this._vertexBuffers,this._indexBuffer,k),R.drawElementsType(0,0,6),M.onAfterRenderObservable.notifyObservers(k))}R.setDepthBuffer(!0),R.setDepthWrite(!0)}_finalizeFrame(D,h,o,H){let g=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const j=this._scene.activeCamera;if(!j)return;if(this.onBeforeRenderObservable.notifyObservers(this),0===(H=H||j._postProcesses.filter((D=>null!=D))).length||!this._scene.postProcessesEnabled)return;const M=this._scene.getEngine();for(let t=0,S=H.length;t<S;t++){const k=H[t];var R;if(t<S-1)k._outputTexture=H[t+1].activate(j,null===h||void 0===h?void 0:h.texture);else h?(M.bindFramebuffer(h,o,void 0,void 0,g),k._outputTexture=h):(M.restoreDefaultFramebuffer(),k._outputTexture=null),null===(R=M._debugInsertMarker)||void 0===R||R.call(M,`post process ${H[t].name} output`);if(D)break;const K=k.apply();K&&(k.onBeforeRenderObservable.notifyObservers(K),this._prepareBuffers(),M.bindBuffers(this._vertexBuffers,this._indexBuffer,K),M.drawElementsType(0,0,6),k.onAfterRenderObservable.notifyObservers(K))}M.setDepthBuffer(!0),M.setDepthWrite(!0),M.setAlphaMode(0)}dispose(){const D=this._vertexBuffers[H.f.PositionKind];D&&(D.dispose(),this._vertexBuffers[H.f.PositionKind]=null),this._indexBuffer&&(this._scene.getEngine()._releaseBuffer(this._indexBuffer),this._indexBuffer=null)}}},12910:(D,h,o)=>{o.d(h,{b:()=>R});var H=o(12915),g=o(12831);class j{set opaqueSortCompareFn(D){this._opaqueSortCompareFn=D||j.PainterSortCompare,this._renderOpaque=this._renderOpaqueSorted}set alphaTestSortCompareFn(D){this._alphaTestSortCompareFn=D||j.PainterSortCompare,this._renderAlphaTest=this._renderAlphaTestSorted}set transparentSortCompareFn(D){this._transparentSortCompareFn=D||j.defaultTransparentSortCompare,this._renderTransparent=this._renderTransparentSorted}constructor(D,h){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,g=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,j=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.index=D,this._opaqueSubMeshes=new H.d(256),this._transparentSubMeshes=new H.d(256),this._alphaTestSubMeshes=new H.d(256),this._depthOnlySubMeshes=new H.d(256),this._particleSystems=new H.d(256),this._spriteManagers=new H.d(256),this._empty=!0,this._edgesRenderers=new H.b(16),this._scene=h,this.opaqueSortCompareFn=o,this.alphaTestSortCompareFn=g,this.transparentSortCompareFn=j}render(D,h,o,H){if(D)return void D(this._opaqueSubMeshes,this._alphaTestSubMeshes,this._transparentSubMeshes,this._depthOnlySubMeshes);const g=this._scene.getEngine();0!==this._depthOnlySubMeshes.length&&(g.setColorWrite(!1),this._renderAlphaTest(this._depthOnlySubMeshes),g.setColorWrite(!0)),0!==this._opaqueSubMeshes.length&&this._renderOpaque(this._opaqueSubMeshes),0!==this._alphaTestSubMeshes.length&&this._renderAlphaTest(this._alphaTestSubMeshes);const j=g.getStencilBuffer();if(g.setStencilBuffer(!1),h&&this._renderSprites(),o&&this._renderParticles(H),this.onBeforeTransparentRendering&&this.onBeforeTransparentRendering(),0!==this._transparentSubMeshes.length||this._scene.useOrderIndependentTransparency){if(g.setStencilBuffer(j),this._scene.useOrderIndependentTransparency){const D=this._scene.depthPeelingRenderer.render(this._transparentSubMeshes);D.length&&this._renderTransparent(D)}else this._renderTransparent(this._transparentSubMeshes);g.setAlphaMode(0)}if(g.setStencilBuffer(!1),this._edgesRenderers.length){for(let D=0;D<this._edgesRenderers.length;D++)this._edgesRenderers.data[D].render();g.setAlphaMode(0)}g.setStencilBuffer(j)}_renderOpaqueSorted(D){j._RenderSorted(D,this._opaqueSortCompareFn,this._scene.activeCamera,!1)}_renderAlphaTestSorted(D){j._RenderSorted(D,this._alphaTestSortCompareFn,this._scene.activeCamera,!1)}_renderTransparentSorted(D){j._RenderSorted(D,this._transparentSortCompareFn,this._scene.activeCamera,!0)}static _RenderSorted(D,h,o,H){let M,R=0;const t=o?o.globalPosition:j._ZeroVector;if(H)for(;R<D.length;R++)M=D.data[R],M._alphaIndex=M.getMesh().alphaIndex,M._distanceToCamera=g.Gh.Distance(M.getBoundingInfo().boundingSphere.centerWorld,t);const S=D.length===D.data.length?D.data:D.data.slice(0,D.length);h&&S.sort(h);const k=S[0].getMesh().GD();for(R=0;R<S.length;R++)if(M=S[R],!k._activeMeshesFrozenButKeepClipping||M.isInFrustum(k._frustumPlanes)){if(H){const D=M.uD();if(D&&D.needDepthPrePass){const h=D.GD().getEngine();h.setColorWrite(!1),h.setAlphaMode(0),M.render(!1),h.setColorWrite(!0)}}M.render(H)}}static defaultTransparentSortCompare(D,h){return D._alphaIndex>h._alphaIndex?1:D._alphaIndex<h._alphaIndex?-1:j.backToFrontSortCompare(D,h)}static backToFrontSortCompare(D,h){return D._distanceToCamera<h._distanceToCamera?1:D._distanceToCamera>h._distanceToCamera?-1:0}static frontToBackSortCompare(D,h){return D._distanceToCamera<h._distanceToCamera?-1:D._distanceToCamera>h._distanceToCamera?1:0}static PainterSortCompare(D,h){const o=D.getMesh(),H=h.getMesh();return o.material&&H.material?o.material.uniqueId-H.material.uniqueId:o.uniqueId-H.uniqueId}prepare(){this._opaqueSubMeshes.reset(),this._transparentSubMeshes.reset(),this._alphaTestSubMeshes.reset(),this._depthOnlySubMeshes.reset(),this._particleSystems.reset(),this.prepareSprites(),this._edgesRenderers.reset(),this._empty=!0}prepareSprites(){this._spriteManagers.reset()}dispose(){this._opaqueSubMeshes.dispose(),this._transparentSubMeshes.dispose(),this._alphaTestSubMeshes.dispose(),this._depthOnlySubMeshes.dispose(),this._particleSystems.dispose(),this._spriteManagers.dispose(),this._edgesRenderers.dispose()}dispatch(D,h,o){void 0===h&&(h=D.getMesh()),void 0===o&&(o=D.uD()),null!==o&&void 0!==o&&(o.needAlphaBlendingForMesh(h)?this._transparentSubMeshes.push(D):o.needAlphaTestingForMesh(h)?(o.needDepthPrePass&&this._depthOnlySubMeshes.push(D),this._alphaTestSubMeshes.push(D)):(o.needDepthPrePass&&this._depthOnlySubMeshes.push(D),this._opaqueSubMeshes.push(D)),h._renderingGroup=this,h._edgesRenderer&&h.isEnabled()&&h.isVisible&&h._edgesRenderer.isEnabled&&this._edgesRenderers.pushNoDuplicate(h._edgesRenderer),this._empty=!1)}dispatchSprites(D){this._spriteManagers.push(D),this._empty=!1}dispatchParticles(D){this._particleSystems.push(D),this._empty=!1}_renderParticles(D){if(0===this._particleSystems.length)return;const h=this._scene.activeCamera;this._scene.onBeforeParticlesRenderingObservable.notifyObservers(this._scene);for(let o=0;o<this._particleSystems.length;o++){const H=this._particleSystems.data[o];if(0===(h&&h.layerMask&H.layerMask))continue;const g=H.Hh;g.position&&D&&-1===D.indexOf(g)||this._scene._activeParticles.addCount(H.render(),!1)}this._scene.onAfterParticlesRenderingObservable.notifyObservers(this._scene)}_renderSprites(){if(!this._scene.spritesEnabled||0===this._spriteManagers.length)return;const D=this._scene.activeCamera;this._scene.onBeforeSpritesRenderingObservable.notifyObservers(this._scene);for(let h=0;h<this._spriteManagers.length;h++){const o=this._spriteManagers.data[h];0!==(D&&D.layerMask&o.layerMask)&&o.render()}this._scene.onAfterSpritesRenderingObservable.notifyObservers(this._scene)}}j._ZeroVector=g.Gh.Zero();class M{}class R{get maintainStateBetweenFrames(){return this._maintainStateBetweenFrames}set maintainStateBetweenFrames(D){D!==this._maintainStateBetweenFrames&&(this._maintainStateBetweenFrames=D,this._maintainStateBetweenFrames||this.restoreDispachedFlags())}restoreDispachedFlags(){for(const D of this._scene.meshes)if(D.nh)for(const h of D.nh)h._wasDispatched=!1;if(this._scene.spriteManagers)for(const D of this._scene.spriteManagers)D._wasDispatched=!1;for(const D of this._scene.YQ)D._wasDispatched=!1}constructor(D){this._useSceneAutoClearSetup=!1,this._renderingGroups=new Array,this._autoClearDepthStencil={},this._customOpaqueSortCompareFn={},this._customAlphaTestSortCompareFn={},this._customTransparentSortCompareFn={},this._renderingGroupInfo=new M,this._maintainStateBetweenFrames=!1,this._scene=D;for(let h=R.MIN_RENDERINGGROUPS;h<R.MAX_RENDERINGGROUPS;h++)this._autoClearDepthStencil[h]={ah:!0,depth:!0,Oh:!0}}getRenderingGroup(D){const h=D||0;return this._prepareRenderingGroup(h),this._renderingGroups[h]}_clearDepthStencilBuffer(){let D=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],h=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._depthStencilBufferAlreadyCleaned||(this._scene.getEngine().clear(null,!1,D,h),this._depthStencilBufferAlreadyCleaned=!0)}render(D,h,o,H){const g=this._renderingGroupInfo;if(g.Th=this._scene,g.camera=this._scene.activeCamera,g.renderingManager=this,this._scene.spriteManagers&&H)for(let j=0;j<this._scene.spriteManagers.length;j++){const D=this._scene.spriteManagers[j];this.dispatchSprites(D)}for(let j=R.MIN_RENDERINGGROUPS;j<R.MAX_RENDERINGGROUPS;j++){this._depthStencilBufferAlreadyCleaned=j===R.MIN_RENDERINGGROUPS;const M=this._renderingGroups[j];if(!M||M._empty)continue;const t=1<<j;if(g.renderingGroupId=j,this._scene.onBeforeRenderingGroupObservable.notifyObservers(g,t),R.AUTOCLEAR){const D=this._useSceneAutoClearSetup?this._scene.getAutoClearDepthStencilSetup(j):this._autoClearDepthStencil[j];D&&D.ah&&this._clearDepthStencilBuffer(D.depth,D.Oh)}for(const D of this._scene._beforeRenderingGroupDrawStage)D.action(j);M.render(D,H,o,h);for(const D of this._scene._afterRenderingGroupDrawStage)D.action(j);this._scene.onAfterRenderingGroupObservable.notifyObservers(g,t)}}reset(){if(!this.maintainStateBetweenFrames)for(let D=R.MIN_RENDERINGGROUPS;D<R.MAX_RENDERINGGROUPS;D++){const h=this._renderingGroups[D];h&&h.prepare()}}resetSprites(){if(!this.maintainStateBetweenFrames)for(let D=R.MIN_RENDERINGGROUPS;D<R.MAX_RENDERINGGROUPS;D++){const h=this._renderingGroups[D];h&&h.prepareSprites()}}dispose(){this.freeRenderingGroups(),this._renderingGroups.length=0,this._renderingGroupInfo=null}freeRenderingGroups(){for(let D=R.MIN_RENDERINGGROUPS;D<R.MAX_RENDERINGGROUPS;D++){const h=this._renderingGroups[D];h&&h.dispose()}}_prepareRenderingGroup(D){void 0===this._renderingGroups[D]&&(this._renderingGroups[D]=new j(D,this._scene,this._customOpaqueSortCompareFn[D],this._customAlphaTestSortCompareFn[D],this._customTransparentSortCompareFn[D]))}dispatchSprites(D){this.maintainStateBetweenFrames&&D._wasDispatched||(D._wasDispatched=!0,this.getRenderingGroup(D.renderingGroupId).dispatchSprites(D))}dispatchParticles(D){this.maintainStateBetweenFrames&&D._wasDispatched||(D._wasDispatched=!0,this.getRenderingGroup(D.renderingGroupId).dispatchParticles(D))}dispatch(D,h,o){void 0===h&&(h=D.getMesh()),this.maintainStateBetweenFrames&&D._wasDispatched||(D._wasDispatched=!0,this.getRenderingGroup(h.renderingGroupId).dispatch(D,h,o))}setRenderingOrder(D){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(this._customOpaqueSortCompareFn[D]=h,this._customAlphaTestSortCompareFn[D]=o,this._customTransparentSortCompareFn[D]=H,this._renderingGroups[D]){const h=this._renderingGroups[D];h.opaqueSortCompareFn=this._customOpaqueSortCompareFn[D],h.alphaTestSortCompareFn=this._customAlphaTestSortCompareFn[D],h.transparentSortCompareFn=this._customTransparentSortCompareFn[D]}}setRenderingAutoClearDepthStencil(D,h){let o=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],H=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._autoClearDepthStencil[D]={ah:h,depth:o,Oh:H}}getAutoClearDepthStencilSetup(D){return this._autoClearDepthStencil[D]}}R.MAX_RENDERINGGROUPS=4,R.MIN_RENDERINGGROUPS=0,R.AUTOCLEAR=!0}}]);