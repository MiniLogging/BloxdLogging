"use strict";(self.wj3aziuz228=self.wj3aziuz228||[]).push([[19],{12549:(u,R,I)=>{I.d(R,{e:()=>C,i:()=>D});var B=I(12558),U=I(12315),K=I(12560);class C{get C(){return this._isDisposed}constructor(u,R,I){let U=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,K=arguments.length>4&&void 0!==arguments[4]&&arguments[4],C=arguments.length>5&&void 0!==arguments[5]&&arguments[5],D=arguments.length>6&&void 0!==arguments[6]&&arguments[6],s=arguments.length>7?arguments[7]:void 0,t=arguments.length>8?arguments[8]:void 0;this._isAlreadyOwned=!1,this._isDisposed=!1,u&&u.eu?this._engine=u.eu().getEngine():this._engine=u,this._updatable=I,this._instanced=C,this._divisor=s||1,this._label=t,R instanceof B.d?(this._data=null,this._buffer=R):(this._data=R,this._buffer=null),this.byteStride=D?U:U*Float32Array.BYTES_PER_ELEMENT,K||this.create()}createVertexBuffer(u,R,I,B,U){let K=arguments.length>5&&void 0!==arguments[5]&&arguments[5],C=arguments.length>6?arguments[6]:void 0;const s=K?R:R*Float32Array.BYTES_PER_ELEMENT,t=B?K?B:B*Float32Array.BYTES_PER_ELEMENT:this.byteStride;return new D(this._engine,this,u,this._updatable,!0,t,void 0===U?this._instanced:U,s,I,void 0,void 0,!0,this._divisor||C)}isUpdatable(){return this._updatable}getData(){return this._data}getBuffer(){return this._buffer}getStrideSize(){return this.byteStride/Float32Array.BYTES_PER_ELEMENT}create(){let u=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;!u&&this._buffer||(u=u||this._data,u&&(this._buffer?this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,u),this._data=u):this._updatable?(this._buffer=this._engine.createDynamicVertexBuffer(u,this._label),this._data=u):this._buffer=this._engine.createVertexBuffer(u,void 0,this._label)))}_rebuild(){if(this._data)this._buffer=null,this.create(this._data);else{if(!this._buffer)return;if(this._buffer.vI>0)return void(this._updatable?this._buffer=this._engine.createDynamicVertexBuffer(this._buffer.vI,this._label):this._buffer=this._engine.createVertexBuffer(this._buffer.vI,void 0,this._label));U.b.Warn(`Missing data for buffer "${this._label}" ${this._buffer?"(uniqueId: "+this._buffer.uniqueId+")":""}. Buffer reconstruction failed.`),this._buffer=null}}update(u){this.create(u)}updateDirectly(u,R,I){let B=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this._buffer&&this._updatable&&(this._engine.updateDynamicVertexBuffer(this._buffer,u,B?R:R*Float32Array.BYTES_PER_ELEMENT,I?I*this.byteStride:void 0),this._data=0===R&&void 0===I?u:null)}_increaseReferences(){this._buffer&&(this._isAlreadyOwned?this._buffer.references++:this._isAlreadyOwned=!0)}dispose(){this._buffer&&this._engine._releaseBuffer(this._buffer)&&(this._isDisposed=!0,this._data=null,this._buffer=null)}}class D{get C(){return this._isDisposed}get instanceDivisor(){return this._instanceDivisor}set instanceDivisor(u){const R=0!=u;this._instanceDivisor=u,R!==this._instanced&&(this._instanced=R,this._computeHashCode())}get _maxVerticesCount(){const u=this.getData();return u?Array.isArray(u)?u.length/(this.byteStride/4)-this.byteOffset/4:(u.byteLength-this.byteOffset)/this.byteStride:0}constructor(u,R,I,B,U,s,t,G,S,b){let r=arguments.length>10&&void 0!==arguments[10]&&arguments[10],P=arguments.length>11&&void 0!==arguments[11]&&arguments[11],X=arguments.length>12&&void 0!==arguments[12]?arguments[12]:1,E=arguments.length>13&&void 0!==arguments[13]&&arguments[13];this._isDisposed=!1;let z=!1;if(this.rR=u,"object"===typeof B&&null!==B?(z=B.updatable??!1,U=B.postponeInternalCreation,s=B.stride,t=B.instanced,G=B.offset,S=B.size,b=B.type,r=B.normalized??!1,P=B.useBytes??!1,X=B.divisor??1,E=B.takeBufferOwnership??!1,this._label=B.label):z=!!B,R instanceof C?(this._buffer=R,this._ownsBuffer=E):(this._buffer=new C(u,R,z,s,U,t,P,X,this._label),this._ownsBuffer=!0),this.uniqueId=D._Counter++,this._kind=I,void 0===b){const u=this.getData();this.type=u?D.GetDataType(u):D.FLOAT}else this.type=b;const f=(0,K.n)(this.type);P?(this._size=S||(s?s/f:D.DeduceStride(I)),this.byteStride=s||this._buffer.byteStride||this._size*f,this.byteOffset=G||0):(this._size=S||s||D.DeduceStride(I),this.byteStride=s?s*f:this._buffer.byteStride||this._size*f,this.byteOffset=(G||0)*f),this.normalized=r,this._instanced=void 0!==t&&t,this._instanceDivisor=t?X:0,this._alignBuffer(),this._computeHashCode()}_computeHashCode(){this.hashCode=(this.type-5120|0)+((this.normalized?1:0)<<3)+(this._size<<4)+((this._instanced?1:0)<<6)+(this.byteStride<<12)}_rebuild(){var u;null===(u=this._buffer)||void 0===u||u._rebuild()}getKind(){return this._kind}isUpdatable(){return this._buffer.isUpdatable()}getData(){return this._buffer.getData()}getFloatData(u,R){const I=this.getData();return I?(0,K.l)(I,this._size,this.type,this.byteOffset,this.byteStride,this.normalized,u,R):null}getBuffer(){return this._buffer.getBuffer()}getWrapperBuffer(){return this._buffer}getStrideSize(){return this.byteStride/(0,K.n)(this.type)}getOffset(){return this.byteOffset/(0,K.n)(this.type)}getSize(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this._size*(0,K.n)(this.type):this._size}getIsInstanced(){return this._instanced}getInstanceDivisor(){return this._instanceDivisor}create(u){this._buffer.create(u),this._alignBuffer()}update(u){this._buffer.update(u),this._alignBuffer()}updateDirectly(u,R){let I=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._buffer.updateDirectly(u,R,void 0,I),this._alignBuffer()}dispose(){this._ownsBuffer&&this._buffer.dispose(),this._isDisposed=!0}forEach(u,R){(0,K.j)(this._buffer.getData(),this.byteOffset,this.byteStride,this._size,this.type,u,this.normalized,((u,I)=>{for(let B=0;B<this._size;B++)R(u[B],I+B)}))}_alignBuffer(){}static DeduceStride(u){switch(u){case D.UVKind:case D.UV2Kind:case D.UV3Kind:case D.UV4Kind:case D.UV5Kind:case D.UV6Kind:return 2;case D.NormalKind:case D.PositionKind:return 3;case D.ColorKind:case D.ColorInstanceKind:case D.MatricesIndicesKind:case D.MatricesIndicesExtraKind:case D.MatricesWeightsKind:case D.MatricesWeightsExtraKind:case D.TangentKind:return 4;default:throw new Error("Invalid kind '"+u+"'")}}static GetDataType(u){return u instanceof Int8Array?D.BYTE:u instanceof Uint8Array?D.UNSIGNED_BYTE:u instanceof Int16Array?D.SHORT:u instanceof Uint16Array?D.UNSIGNED_SHORT:u instanceof Int32Array?D.INT:u instanceof Uint32Array?D.UNSIGNED_INT:D.FLOAT}static GetTypeByteLength(u){return(0,K.n)(u)}static ForEach(u,R,I,B,U,C,D,s){(0,K.j)(u,R,I,B,U,C,D,((u,R)=>{for(let I=0;I<B;I++)s(u[I],R+I)}))}static GetFloatData(u,R,I,B,U,C,D,s){return(0,K.l)(u,R,I,B,U,C,D,s)}}D._Counter=0,D.BYTE=5120,D.UNSIGNED_BYTE=5121,D.SHORT=5122,D.UNSIGNED_SHORT=5123,D.INT=5124,D.UNSIGNED_INT=5125,D.FLOAT=5126,D.PositionKind="position",D.NormalKind="normal",D.TangentKind="tangent",D.UVKind="uv",D.UV2Kind="uv2",D.UV3Kind="uv3",D.UV4Kind="uv4",D.UV5Kind="uv5",D.UV6Kind="uv6",D.ColorKind="color",D.ColorInstanceKind="instanceColor",D.MatricesIndicesKind="matricesIndices",D.MatricesWeightsKind="matricesWeights",D.MatricesIndicesExtraKind="matricesIndicesExtra",D.MatricesWeightsExtraKind="matricesWeightsExtra"},12560:(u,R,I)=>{I.d(R,{e:()=>b,g:()=>S,j:()=>s,l:()=>t,n:()=>C,r:()=>D,s:()=>G});var B=I(12315);function U(u,R,I,B){switch(R){case 5120:{let R=u.getInt8(I);return B&&(R=Math.max(R/127,-1)),R}case 5121:{let R=u.getUint8(I);return B&&(R/=255),R}case 5122:{let R=u.getInt16(I,!0);return B&&(R=Math.max(R/32767,-1)),R}case 5123:{let R=u.getUint16(I,!0);return B&&(R/=65535),R}case 5124:return u.getInt32(I,!0);case 5125:return u.getUint32(I,!0);case 5126:return u.getFloat32(I,!0);default:throw new Error(`Invalid component type ${R}`)}}function K(u,R,I,B,U){switch(R){case 5120:B&&(U=Math.round(127*U)),u.setInt8(I,U);break;case 5121:B&&(U=Math.round(255*U)),u.setUint8(I,U);break;case 5122:B&&(U=Math.round(32767*U)),u.setInt16(I,U,!0);break;case 5123:B&&(U=Math.round(65535*U)),u.setUint16(I,U,!0);break;case 5124:u.setInt32(I,U,!0);break;case 5125:u.setUint32(I,U,!0);break;case 5126:u.setFloat32(I,U,!0);break;default:throw new Error(`Invalid component type ${R}`)}}function C(u){switch(u){case 5120:case 5121:return 1;case 5122:case 5123:return 2;case 5124:case 5125:case 5126:return 4;default:throw new Error(`Invalid type '${u}'`)}}function D(u){switch(u){case 5120:return Int8Array;case 5121:return Uint8Array;case 5122:return Int16Array;case 5123:return Uint16Array;case 5124:return Int32Array;case 5125:return Uint32Array;case 5126:return Float32Array;default:throw new Error(`Invalid component type '${u}'`)}}function s(u,R,I,B,D,s,t,G){const S=new Array(B),b=new Array(B);if(u instanceof Array){let U=R/4;const K=I/4;for(let R=0;R<s;R+=B){for(let R=0;R<B;R++)S[R]=b[R]=u[U+R];G(b,R);for(let R=0;R<B;R++)S[R]!==b[R]&&(u[U+R]=b[R]);U+=K}}else{const r=ArrayBuffer.isView(u)?new DataView(u.buffer,u.byteOffset,u.byteLength):new DataView(u),P=C(D);for(let u=0;u<s;u+=B){for(let u=0,I=R;u<B;u++,I+=P)S[u]=b[u]=U(r,D,I,t);G(b,u);for(let u=0,I=R;u<B;u++,I+=P)S[u]!==b[u]&&K(r,D,I,t,b[u]);R+=I}}}function t(u,R,I,U,K,D,t,G){const S=R*C(I),b=t*R;if(5126!==I||K!==S){const B=new Float32Array(b);return s(u,U,K,R,I,b,D,((u,I)=>{for(let U=0;U<R;U++)B[I+U]=u[U]})),B}if(!(u instanceof Array||u instanceof Float32Array)||0!==U||u.length!==b){if(u instanceof Array){const R=U/4;return u.slice(R,R+b)}if(u instanceof ArrayBuffer)return new Float32Array(u,U,b);{const R=u.byteOffset+U;return 0!==(3&R)&&(B.b.Warn("Float array must be aligned to 4-bytes border"),G=!0),G?new Float32Array(u.buffer.slice(R,R+b*Float32Array.BYTES_PER_ELEMENT)):new Float32Array(u.buffer,R,b)}}return G?u.slice():u}function G(u,R,I,U,K,t,G,S){const b=C(I),r=D(I),P=G*R;if(Array.isArray(u)){if(0!==(3&U)||0!==(3&K))throw new Error("byteOffset and byteStride must be a multiple of 4 for number[] data.");const B=U/4,C=K/4;if(B+(G-1)*C+R>u.length)throw new Error("Last accessed index is out of bounds.");if(C<R)throw new Error("Data stride cannot be smaller than the component size.");if(C!==R){const B=new r(P);return s(u,U,K,R,I,P,t,((u,I)=>{for(let U=0;U<R;U++)B[I+U]=u[U]})),B}return new r(u.slice(B,B+P))}let X,E=U;u instanceof ArrayBuffer?X=u:(X=u.buffer,E+=u.byteOffset);if(E+(G-1)*K+R*b>X.byteLength)throw new Error("Last accessed byte is out of bounds.");const z=R*b;if(K<z)throw new Error("Byte stride cannot be smaller than the component's byte size.");if(K!==z){const u=new r(P);return s(X,E,K,R,I,P,t,((I,B)=>{for(let U=0;U<R;U++)u[B+U]=I[U]})),u}return 1!==b&&0!==(E&b-1)&&(B.b.Warn("Array must be aligned to border of element size. Data will be copied."),S=!0),S?new r(X.slice(E,E+P*b)):new r(X,E,P)}function S(u,R,I,U,K,D,t,G){const S=R*C(I),b=t*R;if(G.length!==b)throw new Error("Output length is not valid");if(5126===I&&K===S)if(u instanceof Array){const R=U/4;G.set(u,R)}else if(u instanceof ArrayBuffer){const R=new Float32Array(u,U,b);G.set(R)}else{const R=u.byteOffset+U;if(0!==(3&R))return B.b.Warn("Float array must be aligned to 4-bytes border"),void G.set(new Float32Array(u.buffer.slice(R,R+b*Float32Array.BYTES_PER_ELEMENT)));const I=new Float32Array(u.buffer,R,b);G.set(I)}else s(u,U,K,R,I,b,D,((u,I)=>{for(let B=0;B<R;B++)G[I+B]=u[B]}))}function b(u,R){let I=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(Array.isArray(u)){for(let U=0;U<R;U++)if(u[I+U]-B>65535)return!0;return!1}return 4===u.BYTES_PER_ELEMENT}},12558:(u,R,I)=>{I.d(R,{d:()=>B});class B{get underlyingResource(){return null}constructor(){this.references=0,this.vI=0,this.is32Bits=!1,this.uniqueId=B._Counter++}}B._Counter=0},12587:(u,R,I)=>{I.d(R,{d:()=>U});var B=I(12374);class U{static GetEffect(u){return void 0===u.getPipelineContext?u.effect:u}constructor(u){let R=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._wasPreviouslyReady=!1,this._forceRebindOnNextCall=!0,this._wasPreviouslyUsingInstances=null,this.effect=null,this.defines=null,this.drawContext=u.createDrawContext(),R&&(this.materialContext=u.createMaterialContext())}setEffect(u,R){let I=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];var B;(this.effect=u,void 0!==R&&(this.defines=R),I)&&(null===(B=this.drawContext)||void 0===B||B.reset())}dispose(){var u;let R=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.effect){const u=this.effect;R?u.dispose():B.d.SetImmediate((()=>{u.getEngine().onEndFrameObservable.addOnce((()=>{u.dispose()}))})),this.effect=null}null===(u=this.drawContext)||void 0===u||u.dispose()}}},12676:(u,R,I)=>{I.d(R,{c:()=>U});var B=I(12521);class U{static GetPlanes(u){const R=[];for(let I=0;I<6;I++)R.push(new B.c(0,0,0,0));return U.GetPlanesToRef(u,R),R}static GetNearPlaneToRef(u,R){const I=u.m;R.normal.x=I[3]+I[2],R.normal.y=I[7]+I[6],R.normal.z=I[11]+I[10],R.d=I[15]+I[14],R.normalize()}static GetFarPlaneToRef(u,R){const I=u.m;R.normal.x=I[3]-I[2],R.normal.y=I[7]-I[6],R.normal.z=I[11]-I[10],R.d=I[15]-I[14],R.normalize()}static GetLeftPlaneToRef(u,R){const I=u.m;R.normal.x=I[3]+I[0],R.normal.y=I[7]+I[4],R.normal.z=I[11]+I[8],R.d=I[15]+I[12],R.normalize()}static GetRightPlaneToRef(u,R){const I=u.m;R.normal.x=I[3]-I[0],R.normal.y=I[7]-I[4],R.normal.z=I[11]-I[8],R.d=I[15]-I[12],R.normalize()}static GetTopPlaneToRef(u,R){const I=u.m;R.normal.x=I[3]-I[1],R.normal.y=I[7]-I[5],R.normal.z=I[11]-I[9],R.d=I[15]-I[13],R.normalize()}static GetBottomPlaneToRef(u,R){const I=u.m;R.normal.x=I[3]+I[1],R.normal.y=I[7]+I[5],R.normal.z=I[11]+I[9],R.d=I[15]+I[13],R.normalize()}static GetPlanesToRef(u,R){U.GetNearPlaneToRef(u,R[0]),U.GetFarPlaneToRef(u,R[1]),U.GetLeftPlaneToRef(u,R[2]),U.GetRightPlaneToRef(u,R[3]),U.GetTopPlaneToRef(u,R[4]),U.GetBottomPlaneToRef(u,R[5])}static IsPointInFrustum(u,R){for(let I=0;I<6;I++)if(R[I].dotCoordinate(u)<0)return!1;return!0}}},12687:(u,R,I)=>{I.d(R,{b:()=>U});var B=I(12329);class U{get min(){return this._min}get max(){return this._max}get average(){return this._average}get lastSecAverage(){return this._lastSecAverage}get current(){return this._current}get total(){return this._totalAccumulated}get count(){return this._totalValueCount}constructor(){this._startMonitoringTime=0,this._min=0,this._max=0,this._average=0,this._lastSecAverage=0,this._current=0,this._totalValueCount=0,this._totalAccumulated=0,this._lastSecAccumulated=0,this._lastSecTime=0,this._lastSecValueCount=0}fetchNewFrame(){this._totalValueCount++,this._current=0,this._lastSecValueCount++}addCount(u,R){U.Enabled&&(this._current+=u,R&&this._fetchResult())}beginMonitoring(){U.Enabled&&(this._startMonitoringTime=B.e.Now)}endMonitoring(){let u=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(!U.Enabled)return;u&&this.fetchNewFrame();const R=B.e.Now;this._current=R-this._startMonitoringTime,u&&this._fetchResult()}dC(){this._fetchResult()}_fetchResult(){this._totalAccumulated+=this._current,this._lastSecAccumulated+=this._current,this._min=Math.min(this._min,this._current),this._max=Math.max(this._max,this._current),this._average=this._totalAccumulated/this._totalValueCount;const u=B.e.Now;u-this._lastSecTime>1e3&&(this._lastSecAverage=this._lastSecAccumulated/this._lastSecValueCount,this._lastSecTime=u,this._lastSecAccumulated=0,this._lastSecValueCount=0)}}U.Enabled=!0},12570:(u,R,I)=>{I.d(R,{d:()=>U,f:()=>B});class B{constructor(u){this.length=0,this.data=new Array(u),this._id=B._GlobalId++}push(u){this.data[this.length++]=u,this.length>this.data.length&&(this.data.length*=2)}forEach(u){for(let R=0;R<this.length;R++)u(this.data[R])}sort(u){this.data.sort(u)}reset(){this.length=0}dispose(){this.reset(),this.data&&(this.data.length=0)}concat(u){if(0!==u.length){this.length+u.length>this.data.length&&(this.data.length=2*(this.length+u.length));for(let R=0;R<u.length;R++)this.data[this.length++]=(u.data||u)[R]}}indexOf(u){const R=this.data.indexOf(u);return R>=this.length?-1:R}contains(u){return-1!==this.indexOf(u)}}B._GlobalId=0;class U extends B{constructor(){super(...arguments),this._duplicateId=0}push(u){super.push(u),u.__smartArrayFlags||(u.__smartArrayFlags={}),u.__smartArrayFlags[this._id]=this._duplicateId}pushNoDuplicate(u){return(!u.__smartArrayFlags||u.__smartArrayFlags[this._id]!==this._duplicateId)&&(this.push(u),!0)}reset(){super.reset(),this._duplicateId++}concatWithNoDuplicate(u){if(0!==u.length){this.length+u.length>this.data.length&&(this.data.length=2*(this.length+u.length));for(let R=0;R<u.length;R++){const I=(u.data||u)[R];this.pushNoDuplicate(I)}}}}},12540:(u,R,I)=>{I.d(R,{d:()=>K});var B=I(12549),U=I(12303);class K{constructor(u){this._vertexBuffers={},this.onBeforeRenderObservable=new U.c,this._scene=u}_prepareBuffers(){if(this._vertexBuffers[B.i.PositionKind])return;const u=[];u.push(1,1),u.push(-1,1),u.push(-1,-1),u.push(1,-1),this._vertexBuffers[B.i.PositionKind]=new B.i(this._scene.getEngine(),u,B.i.PositionKind,!1,!1,2),this._buildIndexBuffer()}_buildIndexBuffer(){const u=[];u.push(0),u.push(1),u.push(2),u.push(0),u.push(2),u.push(3),this._indexBuffer=this._scene.getEngine().createIndexBuffer(u)}_rebuild(){const u=this._vertexBuffers[B.i.PositionKind];u&&(u._rebuild(),this._buildIndexBuffer())}_prepareFrame(){let u=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const I=this._scene.activeCamera;return!!I&&(R=R||I._postProcesses.filter((u=>null!=u)),!(!R||0===R.length||!this._scene.postProcessesEnabled)&&(R[0].activate(I,u,null!==R&&void 0!==R),!0))}directRender(u){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,I=arguments.length>2&&void 0!==arguments[2]&&arguments[2],B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,K=arguments.length>5&&void 0!==arguments[5]&&arguments[5],C=arguments.length>6&&void 0!==arguments[6]?arguments[6]:u.length;const D=this._scene.getEngine();for(let t=0;t<C;t++){var s;if(t<u.length-1)u[t+1].activate(this._scene.activeCamera||this._scene,null===R||void 0===R?void 0:R.texture);else R?D.bindFramebuffer(R,B,void 0,void 0,I,U):K||D.restoreDefaultFramebuffer(),null===(s=D._debugInsertMarker)||void 0===s||s.call(D,`post process ${u[t].name} output`);const C=u[t],G=C.apply();G&&(C.onBeforeRenderObservable.notifyObservers(G),this._prepareBuffers(),D.bindBuffers(this._vertexBuffers,this._indexBuffer,G),D.drawElementsType(0,0,6),C.onAfterRenderObservable.notifyObservers(G))}D.setDepthBuffer(!0),D.setDepthWrite(!0)}_finalizeFrame(u,R,I,B){let U=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const K=this._scene.activeCamera;if(!K)return;if(this.onBeforeRenderObservable.notifyObservers(this),0===(B=B||K._postProcesses.filter((u=>null!=u))).length||!this._scene.postProcessesEnabled)return;const C=this._scene.getEngine();for(let s=0,t=B.length;s<t;s++){const G=B[s];var D;if(s<t-1)G._outputTexture=B[s+1].activate(K,null===R||void 0===R?void 0:R.texture);else R?(C.bindFramebuffer(R,I,void 0,void 0,U),G._outputTexture=R):(C.restoreDefaultFramebuffer(),G._outputTexture=null),null===(D=C._debugInsertMarker)||void 0===D||D.call(C,`post process ${B[s].name} output`);if(u)break;const S=G.apply();S&&(G.onBeforeRenderObservable.notifyObservers(S),this._prepareBuffers(),C.bindBuffers(this._vertexBuffers,this._indexBuffer,S),C.drawElementsType(0,0,6),G.onAfterRenderObservable.notifyObservers(S))}C.setDepthBuffer(!0),C.setDepthWrite(!0),C.setAlphaMode(0)}dispose(){const u=this._vertexBuffers[B.i.PositionKind];u&&(u.dispose(),this._vertexBuffers[B.i.PositionKind]=null),this._indexBuffer&&(this._scene.getEngine()._releaseBuffer(this._indexBuffer),this._indexBuffer=null)}}},12567:(u,R,I)=>{I.d(R,{b:()=>D});var B=I(12570),U=I(12481);class K{set opaqueSortCompareFn(u){this._opaqueSortCompareFn=u||K.PainterSortCompare,this._renderOpaque=this._renderOpaqueSorted}set alphaTestSortCompareFn(u){this._alphaTestSortCompareFn=u||K.PainterSortCompare,this._renderAlphaTest=this._renderAlphaTestSorted}set transparentSortCompareFn(u){this._transparentSortCompareFn=u||K.defaultTransparentSortCompare,this._renderTransparent=this._renderTransparentSorted}constructor(u,R){let I=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,U=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,K=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.index=u,this._opaqueSubMeshes=new B.f(256),this._transparentSubMeshes=new B.f(256),this._alphaTestSubMeshes=new B.f(256),this._depthOnlySubMeshes=new B.f(256),this._particleSystems=new B.f(256),this._spriteManagers=new B.f(256),this._empty=!0,this._edgesRenderers=new B.d(16),this._scene=R,this.opaqueSortCompareFn=I,this.alphaTestSortCompareFn=U,this.transparentSortCompareFn=K}render(u,R,I,B){if(u)return void u(this._opaqueSubMeshes,this._alphaTestSubMeshes,this._transparentSubMeshes,this._depthOnlySubMeshes);const U=this._scene.getEngine();0!==this._depthOnlySubMeshes.length&&(U.setColorWrite(!1),this._renderAlphaTest(this._depthOnlySubMeshes),U.setColorWrite(!0)),0!==this._opaqueSubMeshes.length&&this._renderOpaque(this._opaqueSubMeshes),0!==this._alphaTestSubMeshes.length&&this._renderAlphaTest(this._alphaTestSubMeshes);const K=U.getStencilBuffer();if(U.setStencilBuffer(!1),R&&this._renderSprites(),I&&this._renderParticles(B),this.onBeforeTransparentRendering&&this.onBeforeTransparentRendering(),0!==this._transparentSubMeshes.length||this._scene.useOrderIndependentTransparency){if(U.setStencilBuffer(K),this._scene.useOrderIndependentTransparency){const u=this._scene.depthPeelingRenderer.render(this._transparentSubMeshes);u.length&&this._renderTransparent(u)}else this._renderTransparent(this._transparentSubMeshes);U.setAlphaMode(0)}if(U.setStencilBuffer(!1),this._edgesRenderers.length){for(let u=0;u<this._edgesRenderers.length;u++)this._edgesRenderers.data[u].render();U.setAlphaMode(0)}U.setStencilBuffer(K)}_renderOpaqueSorted(u){K._RenderSorted(u,this._opaqueSortCompareFn,this._scene.activeCamera,!1)}_renderAlphaTestSorted(u){K._RenderSorted(u,this._alphaTestSortCompareFn,this._scene.activeCamera,!1)}_renderTransparentSorted(u){K._RenderSorted(u,this._transparentSortCompareFn,this._scene.activeCamera,!0)}static _RenderSorted(u,R,I,B){let C,D=0;const s=I?I.globalPosition:K._ZeroVector;if(B)for(;D<u.length;D++)C=u.data[D],C._alphaIndex=C.getMesh().alphaIndex,C._distanceToCamera=U.PR.Distance(C.getBoundingInfo().boundingSphere.centerWorld,s);const t=u.length===u.data.length?u.data:u.data.slice(0,u.length);R&&t.sort(R);const G=t[0].getMesh().eu();for(D=0;D<t.length;D++)if(C=t[D],!G._activeMeshesFrozenButKeepClipping||C.isInFrustum(G._frustumPlanes)){if(B){const u=C.cu();if(u&&u.needDepthPrePass){const R=u.eu().getEngine();R.setColorWrite(!1),R.setAlphaMode(0),C.render(!1),R.setColorWrite(!0)}}C.render(B)}}static defaultTransparentSortCompare(u,R){return u._alphaIndex>R._alphaIndex?1:u._alphaIndex<R._alphaIndex?-1:K.backToFrontSortCompare(u,R)}static backToFrontSortCompare(u,R){return u._distanceToCamera<R._distanceToCamera?1:u._distanceToCamera>R._distanceToCamera?-1:0}static frontToBackSortCompare(u,R){return u._distanceToCamera<R._distanceToCamera?-1:u._distanceToCamera>R._distanceToCamera?1:0}static PainterSortCompare(u,R){const I=u.getMesh(),B=R.getMesh();return I.material&&B.material?I.material.uniqueId-B.material.uniqueId:I.uniqueId-B.uniqueId}prepare(){this._opaqueSubMeshes.reset(),this._transparentSubMeshes.reset(),this._alphaTestSubMeshes.reset(),this._depthOnlySubMeshes.reset(),this._particleSystems.reset(),this.prepareSprites(),this._edgesRenderers.reset(),this._empty=!0}prepareSprites(){this._spriteManagers.reset()}dispose(){this._opaqueSubMeshes.dispose(),this._transparentSubMeshes.dispose(),this._alphaTestSubMeshes.dispose(),this._depthOnlySubMeshes.dispose(),this._particleSystems.dispose(),this._spriteManagers.dispose(),this._edgesRenderers.dispose()}dispatch(u,R,I){void 0===R&&(R=u.getMesh()),void 0===I&&(I=u.cu()),null!==I&&void 0!==I&&(I.needAlphaBlendingForMesh(R)?this._transparentSubMeshes.push(u):I.needAlphaTestingForMesh(R)?(I.needDepthPrePass&&this._depthOnlySubMeshes.push(u),this._alphaTestSubMeshes.push(u)):(I.needDepthPrePass&&this._depthOnlySubMeshes.push(u),this._opaqueSubMeshes.push(u)),R._renderingGroup=this,R._edgesRenderer&&R.isEnabled()&&R.isVisible&&R._edgesRenderer.isEnabled&&this._edgesRenderers.pushNoDuplicate(R._edgesRenderer),this._empty=!1)}dispatchSprites(u){this._spriteManagers.push(u),this._empty=!1}dispatchParticles(u){this._particleSystems.push(u),this._empty=!1}_renderParticles(u){if(0===this._particleSystems.length)return;const R=this._scene.activeCamera;this._scene.onBeforeParticlesRenderingObservable.notifyObservers(this._scene);for(let I=0;I<this._particleSystems.length;I++){const B=this._particleSystems.data[I];if(0===(R&&R.layerMask&B.layerMask))continue;const U=B.BR;U.position&&u&&-1===u.indexOf(U)||this._scene._activeParticles.addCount(B.render(),!1)}this._scene.onAfterParticlesRenderingObservable.notifyObservers(this._scene)}_renderSprites(){if(!this._scene.spritesEnabled||0===this._spriteManagers.length)return;const u=this._scene.activeCamera;this._scene.onBeforeSpritesRenderingObservable.notifyObservers(this._scene);for(let R=0;R<this._spriteManagers.length;R++){const I=this._spriteManagers.data[R];0!==(u&&u.layerMask&I.layerMask)&&I.render()}this._scene.onAfterSpritesRenderingObservable.notifyObservers(this._scene)}}K._ZeroVector=U.PR.Zero();class C{}class D{get maintainStateBetweenFrames(){return this._maintainStateBetweenFrames}set maintainStateBetweenFrames(u){u!==this._maintainStateBetweenFrames&&(this._maintainStateBetweenFrames=u,this._maintainStateBetweenFrames||this.restoreDispachedFlags())}restoreDispachedFlags(){for(const u of this._scene.meshes)if(u.DD)for(const R of u.DD)R._wasDispatched=!1;if(this._scene.spriteManagers)for(const u of this._scene.spriteManagers)u._wasDispatched=!1;for(const u of this._scene.nS)u._wasDispatched=!1}constructor(u){this._useSceneAutoClearSetup=!1,this._renderingGroups=new Array,this._autoClearDepthStencil={},this._customOpaqueSortCompareFn={},this._customAlphaTestSortCompareFn={},this._customTransparentSortCompareFn={},this._renderingGroupInfo=new C,this._maintainStateBetweenFrames=!1,this._scene=u;for(let R=D.MIN_RENDERINGGROUPS;R<D.MAX_RENDERINGGROUPS;R++)this._autoClearDepthStencil[R]={CD:!0,depth:!0,RD:!0}}getRenderingGroup(u){const R=u||0;return this._prepareRenderingGroup(R),this._renderingGroups[R]}_clearDepthStencilBuffer(){let u=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],R=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._depthStencilBufferAlreadyCleaned||(this._scene.getEngine().clear(null,!1,u,R),this._depthStencilBufferAlreadyCleaned=!0)}render(u,R,I,B){const U=this._renderingGroupInfo;if(U.ER=this._scene,U.camera=this._scene.activeCamera,U.renderingManager=this,this._scene.spriteManagers&&B)for(let K=0;K<this._scene.spriteManagers.length;K++){const u=this._scene.spriteManagers[K];this.dispatchSprites(u)}for(let K=D.MIN_RENDERINGGROUPS;K<D.MAX_RENDERINGGROUPS;K++){this._depthStencilBufferAlreadyCleaned=K===D.MIN_RENDERINGGROUPS;const C=this._renderingGroups[K];if(!C||C._empty)continue;const s=1<<K;if(U.renderingGroupId=K,this._scene.onBeforeRenderingGroupObservable.notifyObservers(U,s),D.AUTOCLEAR){const u=this._useSceneAutoClearSetup?this._scene.getAutoClearDepthStencilSetup(K):this._autoClearDepthStencil[K];u&&u.CD&&this._clearDepthStencilBuffer(u.depth,u.RD)}for(const u of this._scene._beforeRenderingGroupDrawStage)u.action(K);C.render(u,B,I,R);for(const u of this._scene._afterRenderingGroupDrawStage)u.action(K);this._scene.onAfterRenderingGroupObservable.notifyObservers(U,s)}}reset(){if(!this.maintainStateBetweenFrames)for(let u=D.MIN_RENDERINGGROUPS;u<D.MAX_RENDERINGGROUPS;u++){const R=this._renderingGroups[u];R&&R.prepare()}}resetSprites(){if(!this.maintainStateBetweenFrames)for(let u=D.MIN_RENDERINGGROUPS;u<D.MAX_RENDERINGGROUPS;u++){const R=this._renderingGroups[u];R&&R.prepareSprites()}}dispose(){this.freeRenderingGroups(),this._renderingGroups.length=0,this._renderingGroupInfo=null}freeRenderingGroups(){for(let u=D.MIN_RENDERINGGROUPS;u<D.MAX_RENDERINGGROUPS;u++){const R=this._renderingGroups[u];R&&R.dispose()}}_prepareRenderingGroup(u){void 0===this._renderingGroups[u]&&(this._renderingGroups[u]=new K(u,this._scene,this._customOpaqueSortCompareFn[u],this._customAlphaTestSortCompareFn[u],this._customTransparentSortCompareFn[u]))}dispatchSprites(u){this.maintainStateBetweenFrames&&u._wasDispatched||(u._wasDispatched=!0,this.getRenderingGroup(u.renderingGroupId).dispatchSprites(u))}dispatchParticles(u){this.maintainStateBetweenFrames&&u._wasDispatched||(u._wasDispatched=!0,this.getRenderingGroup(u.renderingGroupId).dispatchParticles(u))}dispatch(u,R,I){void 0===R&&(R=u.getMesh()),this.maintainStateBetweenFrames&&u._wasDispatched||(u._wasDispatched=!0,this.getRenderingGroup(R.renderingGroupId).dispatch(u,R,I))}setRenderingOrder(u){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,I=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(this._customOpaqueSortCompareFn[u]=R,this._customAlphaTestSortCompareFn[u]=I,this._customTransparentSortCompareFn[u]=B,this._renderingGroups[u]){const R=this._renderingGroups[u];R.opaqueSortCompareFn=this._customOpaqueSortCompareFn[u],R.alphaTestSortCompareFn=this._customAlphaTestSortCompareFn[u],R.transparentSortCompareFn=this._customTransparentSortCompareFn[u]}}setRenderingAutoClearDepthStencil(u,R){let I=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],B=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._autoClearDepthStencil[u]={CD:R,depth:I,RD:B}}getAutoClearDepthStencilSetup(u){return this._autoClearDepthStencil[u]}}D.MAX_RENDERINGGROUPS=4,D.MIN_RENDERINGGROUPS=0,D.AUTOCLEAR=!0}}]);