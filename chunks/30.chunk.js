"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[30],{11248:(p,O,E)=>{E.r(O),E.d(O,{lodPixelShaderWGSL:()=>F});const e="lodPixelShader",x="const GammaEncodePowerApprox=1.0/2.2;varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;uniform lod: f32;uniform gamma: i32;@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {fragmentOutputs.color=textureSampleLevel(textureSampler,textureSamplerSampler,fragmentInputs.vUV,uniforms.lod);if (uniforms.gamma==0) {fragmentOutputs.color=vec4f(pow(fragmentOutputs.color.rgb,vec3f(GammaEncodePowerApprox)),fragmentOutputs.color.a);}}\n";E(1087).d.ShadersStoreWGSL[e]=x;const F={name:e,shader:x}}}]);