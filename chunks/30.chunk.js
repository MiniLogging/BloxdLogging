"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[30],{10899:(b,G,i)=>{i.r(G),i.d(G,{lodPixelShaderWGSL:()=>V});const g="lodPixelShader",c="const GammaEncodePowerApprox=1.0/2.2;varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;uniform lod: f32;uniform gamma: i32;@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {fragmentOutputs.color=textureSampleLevel(textureSampler,textureSamplerSampler,fragmentInputs.vUV,uniforms.lod);if (uniforms.gamma==0) {fragmentOutputs.color=vec4f(pow(fragmentOutputs.color.rgb,vec3f(GammaEncodePowerApprox)),fragmentOutputs.color.a);}}\n";i(1132).e.ShadersStoreWGSL[g]=c;const V={name:g,shader:c}}}]);