"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[30],{10931:(N,Z,d)=>{d.r(Z),d.d(Z,{lodPixelShaderWGSL:()=>m});const X="lodPixelShader",I="const GammaEncodePowerApprox=1.0/2.2;varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;uniform lod: f32;uniform gamma: i32;@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {fragmentOutputs.color=textureSampleLevel(textureSampler,textureSamplerSampler,fragmentInputs.vUV,uniforms.lod);if (uniforms.gamma==0) {fragmentOutputs.color=vec4f(pow(fragmentOutputs.color.rgb,vec3f(GammaEncodePowerApprox)),fragmentOutputs.color.a);}}\n";d(1069).c.ShadersStoreWGSL[X]=I;const m={name:X,shader:I}}}]);