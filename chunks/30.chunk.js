"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[30],{10793:(V,H,t)=>{t.r(H),t.d(H,{lodPixelShaderWGSL:()=>h});const I="lodPixelShader",Z="const GammaEncodePowerApprox=1.0/2.2;varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;uniform lod: f32;uniform gamma: i32;@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {fragmentOutputs.color=textureSampleLevel(textureSampler,textureSamplerSampler,fragmentInputs.vUV,uniforms.lod);if (uniforms.gamma==0) {fragmentOutputs.color=vec4f(pow(fragmentOutputs.color.rgb,vec3f(GammaEncodePowerApprox)),fragmentOutputs.color.a);}}\n";t(1051).b.ShadersStoreWGSL[I]=Z;const h={name:I,shader:Z}}}]);