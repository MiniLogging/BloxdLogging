"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[30],{11637:(D,j,W)=>{W.r(j),W.d(j,{lodPixelShaderWGSL:()=>k});const Q="lodPixelShader",C="const GammaEncodePowerApprox=1.0/2.2;varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;uniform lod: f32;uniform gamma: i32;@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {fragmentOutputs.color=textureSampleLevel(textureSampler,textureSamplerSampler,fragmentInputs.vUV,uniforms.lod);if (uniforms.gamma==0) {fragmentOutputs.color=vec4f(pow(fragmentOutputs.color.rgb,vec3f(GammaEncodePowerApprox)),fragmentOutputs.color.a);}}\n";W(1108).e.ShadersStoreWGSL[Q]=C;const k={name:Q,shader:C}}}]);