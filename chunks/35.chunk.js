"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[35],{13540:(s,Z,o)=>{function t(s){return Math.floor(s/8)}function j(s){return 1<<s%8}o.d(Z,{OptimizeIndices:()=>a});class S{constructor(s){this.size=s,this._byteArray=new Uint8Array(Math.ceil(this.size/8))}get(s){if(s>=this.size)throw new RangeError("Bit index out of range");const Z=t(s),o=j(s);return 0!==(this._byteArray[Z]&o)}set(s,Z){if(s>=this.size)throw new RangeError("Bit index out of range");const o=t(s),S=j(s);Z?this._byteArray[o]|=S:this._byteArray[o]&=~S}}function a(s){const Z=[],o=s.length/3;for(let S=0;S<o;S++)Z.push([s[3*S],s[3*S+1],s[3*S+2]]);const t=new Map;for(let S=0;S<Z.length;S++){const s=Z[S];for(const Z of s){let s=t.get(Z);s||t.set(Z,s=[]),s.push(S)}}const j=new S(o),a=[],O=s=>{const o=[s];for(;o.length>0;){const s=o.pop();if(!j.get(s)){j.set(s,!0),a.push(Z[s]);for(const S of Z[s]){const s=t.get(S);if(!s)return;for(const Z of s)j.get(Z)||o.push(Z)}}}};for(let S=0;S<o;S++)j.get(S)||O(S);let v=0;for(const S of a)s[v++]=S[0],s[v++]=S[1],s[v++]=S[2]}}}]);