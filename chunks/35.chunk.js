"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[35],{13374:(h,d,m)=>{function j(h){return Math.floor(h/8)}function A(h){return 1<<h%8}m.d(d,{OptimizeIndices:()=>w});class b{constructor(h){this.size=h,this._byteArray=new Uint8Array(Math.ceil(this.size/8))}get(h){if(h>=this.size)throw new RangeError("Bit index out of range");const d=j(h),m=A(h);return 0!==(this._byteArray[d]&m)}set(h,d){if(h>=this.size)throw new RangeError("Bit index out of range");const m=j(h),b=A(h);d?this._byteArray[m]|=b:this._byteArray[m]&=~b}}function w(h){const d=[],m=h.length/3;for(let b=0;b<m;b++)d.push([h[3*b],h[3*b+1],h[3*b+2]]);const j=new Map;for(let b=0;b<d.length;b++){const h=d[b];for(const d of h){let h=j.get(d);h||j.set(d,h=[]),h.push(b)}}const A=new b(m),w=[],a=h=>{const m=[h];for(;m.length>0;){const h=m.pop();if(!A.get(h)){A.set(h,!0),w.push(d[h]);for(const b of d[h]){const h=j.get(b);if(!h)return;for(const d of h)A.get(d)||m.push(d)}}}};for(let b=0;b<m;b++)A.get(b)||a(b);let D=0;for(const b of w)h[D++]=b[0],h[D++]=b[1],h[D++]=b[2]}}}]);