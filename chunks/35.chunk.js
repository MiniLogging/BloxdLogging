"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[35],{13674:(w,p,e)=>{function r(w){return Math.floor(w/8)}function I(w){return 1<<w%8}e.d(p,{OptimizeIndices:()=>f});class d{constructor(w){this.size=w,this._byteArray=new Uint8Array(Math.ceil(this.size/8))}get(w){if(w>=this.size)throw new RangeError("Bit index out of range");const p=r(w),e=I(w);return 0!==(this._byteArray[p]&e)}set(w,p){if(w>=this.size)throw new RangeError("Bit index out of range");const e=r(w),d=I(w);p?this._byteArray[e]|=d:this._byteArray[e]&=~d}}function f(w){const p=[],e=w.length/3;for(let d=0;d<e;d++)p.push([w[3*d],w[3*d+1],w[3*d+2]]);const r=new Map;for(let d=0;d<p.length;d++){const w=p[d];for(const p of w){let w=r.get(p);w||r.set(p,w=[]),w.push(d)}}const I=new d(e),f=[],q=w=>{const e=[w];for(;e.length>0;){const w=e.pop();if(!I.get(w)){I.set(w,!0),f.push(p[w]);for(const d of p[w]){const w=r.get(d);if(!w)return;for(const p of w)I.get(p)||e.push(p)}}}};for(let d=0;d<e;d++)I.get(d)||q(d);let E=0;for(const d of f)w[E++]=d[0],w[E++]=d[1],w[E++]=d[2]}}}]);