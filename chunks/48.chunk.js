"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[48],{13561:(x,Z,l)=>{l.r(Z),l.d(Z,{colorPixelShaderWGSL:()=>A});var t=l(1182);l(11531),l(11533),l(11541),l(11581);const L="colorPixelShader",z="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vColor: vec4f;\n#else\nuniform color: vec4f;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nfragmentOutputs.color=input.vColor;\n#else\nfragmentOutputs.color=uniforms.color;\n#endif\n#include<fogFragment>(color,fragmentOutputs.color)\n#define CUSTOM_FRAGMENT_MAIN_END\n}";t.e.ShadersStoreWGSL[L]=z;const A={name:L,shader:z}}}]);