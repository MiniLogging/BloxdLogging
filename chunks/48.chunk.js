"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[48],{12504:(V,H,t)=>{t.r(H),t.d(H,{colorPixelShaderWGSL:()=>f});var I=t(1051);t(10403),t(10409),t(10413),t(10446);const Z="colorPixelShader",h="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vColor: vec4f;\n#else\nuniform color: vec4f;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nfragmentOutputs.color=input.vColor;\n#else\nfragmentOutputs.color=uniforms.color;\n#endif\n#include<fogFragment>(color,fragmentOutputs.color)\n#define CUSTOM_FRAGMENT_MAIN_END\n}";I.b.ShadersStoreWGSL[Z]=h;const f={name:Z,shader:h}}}]);