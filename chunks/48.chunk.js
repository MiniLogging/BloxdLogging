"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[48],{13438:(D,j,W)=>{W.r(j),W.d(j,{colorPixelShaderWGSL:()=>M});var Q=W(1108);W(11234),W(11243),W(11247),W(11286);const C="colorPixelShader",k="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vColor: vec4f;\n#else\nuniform color: vec4f;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nfragmentOutputs.color=input.vColor;\n#else\nfragmentOutputs.color=uniforms.color;\n#endif\n#include<fogFragment>(color,fragmentOutputs.color)\n#define CUSTOM_FRAGMENT_MAIN_END\n}";Q.e.ShadersStoreWGSL[C]=k;const M={name:C,shader:k}}}]);