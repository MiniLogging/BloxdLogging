"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[48],{13030:(t,b,Y)=>{Y.r(b),Y.d(b,{colorPixelShaderWGSL:()=>r});var o=Y(1175);Y(10968),Y(10972),Y(10981),Y(11019);const x="colorPixelShader",F="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vColor: vec4f;\n#else\nuniform color: vec4f;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nfragmentOutputs.color=input.vColor;\n#else\nfragmentOutputs.color=uniforms.color;\n#endif\n#include<fogFragment>(color,fragmentOutputs.color)\n#define CUSTOM_FRAGMENT_MAIN_END\n}";o.d.ShadersStoreWGSL[x]=F;const r={name:x,shader:F}}}]);