"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[48],{13041:(O,q,s)=>{s.r(q),s.d(q,{colorPixelShaderWGSL:()=>P});var Z=s(1092);s(11002),s(11006),s(11009),s(11037);const D="colorPixelShader",B="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vColor: vec4f;\n#else\nuniform color: vec4f;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nfragmentOutputs.color=input.vColor;\n#else\nfragmentOutputs.color=uniforms.color;\n#endif\n#include<fogFragment>(color,fragmentOutputs.color)\n#define CUSTOM_FRAGMENT_MAIN_END\n}";Z.b.ShadersStoreWGSL[D]=B;const P={name:D,shader:B}}}]);