"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[48],{12411:(G,D,N)=>{N.r(D),N.d(D,{colorPixelShaderWGSL:()=>n});var T=N(1133);N(10596),N(10601),N(10605),N(10648);const o="colorPixelShader",Z="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vColor: vec4f;\n#else\nuniform color: vec4f;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nfragmentOutputs.color=input.vColor;\n#else\nfragmentOutputs.color=uniforms.color;\n#endif\n#include<fogFragment>(color,fragmentOutputs.color)\n#define CUSTOM_FRAGMENT_MAIN_END\n}";T.d.ShadersStoreWGSL[o]=Z;const n={name:o,shader:Z}}}]);