"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[48],{12595:(f,Q,H)=>{H.r(Q),H.d(Q,{colorPixelShaderWGSL:()=>x});var X=H(1115);H(10539),H(10543),H(10550),H(10571);const i="colorPixelShader",S="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vColor: vec4f;\n#else\nuniform color: vec4f;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nfragmentOutputs.color=input.vColor;\n#else\nfragmentOutputs.color=uniforms.color;\n#endif\n#include<fogFragment>(color,fragmentOutputs.color)\n#define CUSTOM_FRAGMENT_MAIN_END\n}";X.d.ShadersStoreWGSL[i]=S;const x={name:i,shader:S}}}]);