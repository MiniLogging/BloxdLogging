"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[48],{13201:(Q,z,I)=>{I.r(z),I.d(z,{colorPixelShaderWGSL:()=>A});var P=I(1086);I(11124),I(11133),I(11139),I(11171);const w="colorPixelShader",T="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vColor: vec4f;\n#else\nuniform color: vec4f;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nfragmentOutputs.color=input.vColor;\n#else\nfragmentOutputs.color=uniforms.color;\n#endif\n#include<fogFragment>(color,fragmentOutputs.color)\n#define CUSTOM_FRAGMENT_MAIN_END\n}";P.e.ShadersStoreWGSL[w]=T;const A={name:w,shader:T}}}]);