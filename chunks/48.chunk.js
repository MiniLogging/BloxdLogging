"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[48],{12575:(q,X,Q)=>{Q.r(X),Q.d(X,{colorPixelShaderWGSL:()=>H});var y=Q(1119);Q(10508),Q(10517),Q(10520),Q(10548);const x="colorPixelShader",u="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vColor: vec4f;\n#else\nuniform color: vec4f;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nfragmentOutputs.color=input.vColor;\n#else\nfragmentOutputs.color=uniforms.color;\n#endif\n#include<fogFragment>(color,fragmentOutputs.color)\n#define CUSTOM_FRAGMENT_MAIN_END\n}";y.c.ShadersStoreWGSL[x]=u;const H={name:x,shader:u}}}]);