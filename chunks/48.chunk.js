"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[48],{13428:(f,H,Q)=>{Q.r(H),Q.d(H,{colorPixelShaderWGSL:()=>n});var a=Q(1118);Q(11367),Q(11369),Q(11372),Q(11404);const d="colorPixelShader",s="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vColor: vec4f;\n#else\nuniform color: vec4f;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nfragmentOutputs.color=input.vColor;\n#else\nfragmentOutputs.color=uniforms.color;\n#endif\n#include<fogFragment>(color,fragmentOutputs.color)\n#define CUSTOM_FRAGMENT_MAIN_END\n}";a.b.ShadersStoreWGSL[d]=s;const n={name:d,shader:s}}}]);