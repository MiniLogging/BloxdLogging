"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[48],{12383:(N,Z,d)=>{d.r(Z),d.d(Z,{colorPixelShaderWGSL:()=>z});var X=d(1069);d(10562),d(10571),d(10576),d(10618);const I="colorPixelShader",m="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vColor: vec4f;\n#else\nuniform color: vec4f;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nfragmentOutputs.color=input.vColor;\n#else\nfragmentOutputs.color=uniforms.color;\n#endif\n#include<fogFragment>(color,fragmentOutputs.color)\n#define CUSTOM_FRAGMENT_MAIN_END\n}";X.c.ShadersStoreWGSL[I]=m;const z={name:I,shader:m}}}]);