"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[48],{13593:(k,M,F)=>{F.r(M),F.d(M,{AnimationGroup:()=>m,TargetedAnimation:()=>y});var l=F(12568),t=F(477),g=F(516),B=F(635),G=F(12561),A=F(682);class N{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(k,M,F,t){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=M,this._target=k,this._scene=F,this._host=t,this._activeTargets=[],M._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===l.b.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=A.c.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const k={frame:0,value:this._minValue};this._keys.splice(0,0,k)}if(this._target instanceof Array){let k=0;for(const M of this._target)this._preparePath(M,k),this._getOriginalValues(k),k++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const g=M.getEvents();g&&g.length>0&&g.forEach((k=>{this._events.push(k._clone())})),this._enableBlending=k&&k.animationPropertiesOverride?k.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(k){let M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const F=this._animation.targetPropertyPath;if(F.length>1){let l=k;for(let k=0;k<F.length-1;k++){const M=F[k];if(l=l[M],void 0===l)throw new Error(`Invalid property (${M}) in property path (${F.join(".")})`)}this._targetPath=F[F.length-1],this._activeTargets[M]=l}else this._targetPath=F[0],this._activeTargets[M]=k;if(void 0===this._activeTargets[M][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${F.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let k=0;for(const M of this._target)void 0!==this._originalValue[k]&&this._setValue(M,this._activeTargets[k],this._originalValue[k],-1,k),k++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let k=0;k<this._events.length;k++)this._events[k].isDone=!1}isStopped(){return this._stopped}dispose(){const k=this._animation.runtimeAnimations.indexOf(this);k>-1&&this._animation.runtimeAnimations.splice(k,1)}setValue(k,M){if(this._targetIsArray)for(let F=0;F<this._target.length;F++){const l=this._target[F];this._setValue(l,this._activeTargets[F],k,M,F)}else this._setValue(this._target,this._directTarget,k,M,0)}_getOriginalValues(){let k,M=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const F=this._activeTargets[M];k=F.getLocalMatrix&&"_matrix"===this._targetPath?F.getLocalMatrix():F[this._targetPath],k&&k.clone?this._originalValue[M]=k.clone():this._originalValue[M]=k}_registerTargetForLateAnimationBinding(k,M){const F=k.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(F),F._lateAnimationHolders||(F._lateAnimationHolders={}),F._lateAnimationHolders[k.targetPath]||(F._lateAnimationHolders[k.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:M}),k.isAdditive?(F._lateAnimationHolders[k.targetPath].additiveAnimations.push(k),F._lateAnimationHolders[k.targetPath].totalAdditiveWeight+=k.weight):(F._lateAnimationHolders[k.targetPath].animations.push(k),F._lateAnimationHolders[k.targetPath].totalWeight+=k.weight)}_setValue(k,M,F,t,g){if(this._currentActiveTarget=M,this._weight=t,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const k=M[this._targetPath];k.clone?this._originalBlendValue=k.clone():this._originalBlendValue=k}this._originalBlendValue.m?l.b.AllowMatrixDecomposeForInterpolation?this._currentValue?A.c.DecomposeLerpToRef(this._originalBlendValue,F,this._blendingFactor,this._currentValue):this._currentValue=A.c.DecomposeLerp(this._originalBlendValue,F,this._blendingFactor):this._currentValue?A.c.LerpToRef(this._originalBlendValue,F,this._blendingFactor,this._currentValue):this._currentValue=A.c.Lerp(this._originalBlendValue,F,this._blendingFactor):this._currentValue=l.b._UniversalLerp(this._originalBlendValue,F,this._blendingFactor);const t=k&&k.animationPropertiesOverride?k.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=t}else this._currentValue?this._currentValue.p?this._currentValue.p(F):this._currentValue=F:null!==F&&void 0!==F&&F.clone?this._currentValue=F.clone():this._currentValue=F;-1!==t?this._registerTargetForLateAnimationBinding(this,this._originalValue[g]):this._animationState.loopMode===l.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[g],M[this._targetPath]):M[this._targetPath]=this._originalValue[g]+this._currentValue:M[this._targetPath]=this._currentValue,k.bk&&k.bk(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(k){let M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const F=this._animation.getKeys();k<F[0].frame?k=F[0].frame:k>F[F.length-1].frame&&(k=F[F.length-1].frame);const l=this._events;if(l.length)for(let g=0;g<l.length;g++)l[g].onlyOnce||(l[g].isDone=l[g].frame<k);this._currentFrame=k;const t=this._animation._interpolate(k,this._animationState);this.setValue(t,M)}_prepareForSpeedRatioChange(k){const M=this._previousElapsedTime*(this._animation.framePerSecond*k)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-M}animate(k,M,F,t,g){let B=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const G=this._animation,A=G.targetPropertyPath;if(!A||A.length<1)return this._stopped=!0,!1;let N=!0;(M<this._minFrame||M>this._maxFrame)&&(M=this._minFrame),(F<this._minFrame||F>this._maxFrame)&&(F=this._maxFrame);const d=F-M;let L,U=k*(G.framePerSecond*g)/1e3+this._absoluteFrameOffset,O=0,w=!1;const Z=t&&this._animationState.loopMode===l.b.ANIMATIONLOOPMODE_YOYO;if(Z){const k=(U-M)/d,F=Math.sin(k*Math.PI);U=Math.abs(F)*d+M;const l=F>=0?1:-1;this._yoyoDirection!==l&&(w=!0),this._yoyoDirection=l}if(this._previousElapsedTime=k,this._previousAbsoluteFrame=U,!t&&F>=M&&(U>=d&&g>0||U<=0&&g<0))N=!1,O=G._getKeyValue(this._maxValue);else if(!t&&M>=F&&(U<=d&&g<0||U>=0&&g>0))N=!1,O=G._getKeyValue(this._minValue);else if(this._animationState.loopMode!==l.b.ANIMATIONLOOPMODE_CYCLE){const k=F.toString()+M.toString();if(!this._offsetsCache[k]){this._animationState.repeatCount=0,this._animationState.loopMode=l.b.ANIMATIONLOOPMODE_CYCLE;const t=G._interpolate(M,this._animationState),g=G._interpolate(F,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),G.dataType){case l.b.ANIMATIONTYPE_FLOAT:this._offsetsCache[k]=g-t;break;case l.b.ANIMATIONTYPE_QUATERNION:case l.b.ANIMATIONTYPE_VECTOR3:case l.b.ANIMATIONTYPE_VECTOR2:case l.b.ANIMATIONTYPE_SIZE:case l.b.ANIMATIONTYPE_COLOR3:this._offsetsCache[k]=g.fe(t)}this._highLimitsCache[k]=g}O=this._highLimitsCache[k],L=this._offsetsCache[k]}if(void 0===L)switch(G.dataType){case l.b.ANIMATIONTYPE_FLOAT:L=0;break;case l.b.ANIMATIONTYPE_QUATERNION:L=l.m;break;case l.b.ANIMATIONTYPE_VECTOR3:L=l.t;break;case l.b.ANIMATIONTYPE_VECTOR2:L=l.p;break;case l.b.ANIMATIONTYPE_SIZE:L=l.o;break;case l.b.ANIMATIONTYPE_COLOR3:L=l.e;break;case l.b.ANIMATIONTYPE_COLOR4:L=l.i}let R;if(this._host&&this._host.syncRoot){const k=this._host.syncRoot;R=M+d*((k.masterFrame-k.fromFrame)/(k.toFrame-k.fromFrame))}else R=U>0&&M>F||U<0&&M<F?N&&0!==d?F+U%d:M:N&&0!==d?M+U%d:F;const y=this._events;if(!Z&&(g>0&&this.currentFrame>R||g<0&&this.currentFrame<R)||Z&&w){this._onLoop();for(let k=0;k<y.length;k++)y[k].onlyOnce||(y[k].isDone=!1);this._animationState.key=g>0?0:G.getKeys().length-1}this._currentFrame=R,this._animationState.repeatCount=0===d?0:U/d|0,this._animationState.highLimitValue=O,this._animationState.offsetValue=L;const m=G._interpolate(R,this._animationState);if(this.setValue(m,B),y.length)for(let l=0;l<y.length;l++)if(d>=0&&R>=y[l].frame&&y[l].frame>=M||d<0&&R<=y[l].frame&&y[l].frame<=M){const k=y[l];k.isDone||(k.onlyOnce&&(y.splice(l,1),l--),k.isDone=!0,k.action(R))}return N||(this._stopped=!0),N}}var d=F(498);class L{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(k){this._weight=-1!==k?Math.min(Math.max(k,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(k){for(let M=0;M<this._runtimeAnimations.length;M++){this._runtimeAnimations[M]._prepareForSpeedRatioChange(k)}this._speedRatio=k,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(k,M){let F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,g=arguments.length>4&&void 0!==arguments[4]&&arguments[4],B=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,G=arguments.length>6?arguments[6]:void 0,A=arguments.length>7?arguments[7]:void 0,N=arguments.length>8?arguments[8]:void 0,d=arguments.length>9&&void 0!==arguments[9]&&arguments[9],L=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=M,this.fromFrame=F,this.toFrame=l,this.loopAnimation=g,this.onAnimationEnd=G,this.onAnimationLoop=N,this.isAdditive=d,this.playOrder=L,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.Yj=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new t.c,this.onAnimationLoopObservable=new t.c,this._scene=k,A&&this.appendAnimations(M,A),this._speedRatio=B,k._activeAnimatables.push(this)}syncWith(k){if(this._syncRoot=k,k){const k=this._scene._activeAnimatables.indexOf(this);k>-1&&(this._scene._activeAnimatables.splice(k,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(k,M){for(let F=0;F<M.length;F++){const l=M[F],t=new N(k,l,this._scene,this);t._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(t)}}getAnimationByTargetProperty(k){const M=this._runtimeAnimations;for(let F=0;F<M.length;F++)if(M[F].animation.targetProperty===k)return M[F].animation;return null}getRuntimeAnimationByTargetProperty(k){const M=this._runtimeAnimations;for(let F=0;F<M.length;F++)if(M[F].animation.targetProperty===k)return M[F];return null}reset(){const k=this._runtimeAnimations;for(let M=0;M<k.length;M++)k[M].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(k){const M=this._runtimeAnimations;for(let F=0;F<M.length;F++)M[F].animation.enableBlending=!0,M[F].animation.blendingSpeed=k}disableBlending(){const k=this._runtimeAnimations;for(let M=0;M<k.length;M++)k[M].animation.enableBlending=!1}goToFrame(k){const M=this._runtimeAnimations;if(M[0]){const F=M[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??M[0].currentFrame;const l=0===this.speedRatio?0:(k-this._frameToSyncFromJump)/F*1e3/this.speedRatio;this._manualJumpDelay=-l}for(let F=0;F<M.length;F++)M[F].goToFrame(k,this._weight);this._goToFrame=k}get paused(){return this.Yj}pause(){this.Yj||(this.Yj=!0)}restart(){this.Yj=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(k,M){let F=arguments.length>2&&void 0!==arguments[2]&&arguments[2],l=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(k||M){const t=this._scene._activeAnimatables.indexOf(this);if(t>-1){const g=this._runtimeAnimations;for(let F=g.length-1;F>=0;F--){const l=g[F];k&&l.animation.name!=k||(M&&!M(l.target)||(l.dispose(),g.splice(F,1)))}0==g.length&&(F||this._scene._activeAnimatables.splice(t,1),l||this._raiseOnAnimationEnd())}}else{const k=this._scene._activeAnimatables.indexOf(this);if(k>-1){F||this._scene._activeAnimatables.splice(k,1);const M=this._runtimeAnimations;for(let k=0;k<M.length;k++)M[k].dispose();this._runtimeAnimations.length=0,l||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((k=>{this.onAnimationEndObservable.add((()=>{k(this)}),void 0,void 0,this,!0)}))}_animate(k){if(this.Yj)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=k),!0;if(null===this._localDelayOffset?(this._localDelayOffset=k,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=k-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let M=!1;const F=this._runtimeAnimations;let l;for(l=0;l<F.length;l++){const t=F[l].animate(k-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);M=M||t}if(this.animationStarted=M,!M){if(this.disposeOnEnd)for(l=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(l,1),l=0;l<F.length;l++)F[l].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return M}}function U(k){if(0===k.totalWeight&&0===k.totalAdditiveWeight)return k.originalValue;let M=1;const F=A.i.fk[0],l=A.i.fk[1],t=A.i.Quaternion[0];let g=0;const B=k.animations[0],G=k.originalValue;let N=1,d=!1;if(k.totalWeight<1)N=1-k.totalWeight,G.decompose(l,t,F);else{if(g=1,M=k.totalWeight,N=B.weight/M,1==N){if(!k.totalAdditiveWeight)return B.currentValue;d=!0}B.currentValue.decompose(l,t,F)}if(!d){l.scaleInPlace(N),F.scaleInPlace(N),t.scaleInPlace(N);for(let B=g;B<k.animations.length;B++){const g=k.animations[B];if(0===g.weight)continue;N=g.weight/M;const G=A.i.fk[2],d=A.i.fk[3],L=A.i.Quaternion[1];g.currentValue.decompose(d,L,G),d.scaleAndAddToRef(N,l),L.scaleAndAddToRef(A.f.Dot(t,L)>0?N:-N,t),G.scaleAndAddToRef(N,F)}t.normalize()}for(let U=0;U<k.additiveAnimations.length;U++){const M=k.additiveAnimations[U];if(0===M.weight)continue;const g=A.i.fk[2],B=A.i.fk[3],G=A.i.Quaternion[1];M.currentValue.decompose(B,G,g),B.multiplyToRef(l,B),A.m.LerpToRef(l,B,M.weight,l),t.multiplyToRef(G,G),A.f.SlerpToRef(t,G,M.weight,t),g.scaleAndAddToRef(M.weight,F)}const L=B?B._animationState.workValue:A.i.Matrix[0].clone();return A.c.ComposeToRef(l,t,F,L),L}function O(k,M){if(0===k.totalWeight&&0===k.totalAdditiveWeight)return M;const F=k.animations[0],l=k.originalValue;let t=M;if(0===k.totalWeight&&k.totalAdditiveWeight>0)t.p(l);else if(1===k.animations.length){if(A.f.SlerpToRef(l,F.currentValue,Math.min(1,k.totalWeight),t),0===k.totalAdditiveWeight)return t}else if(k.animations.length>1){let F,g,B=1;if(k.totalWeight<1){const M=1-k.totalWeight;F=[],g=[],F.push(l),g.push(M)}else{if(2===k.animations.length&&(A.f.SlerpToRef(k.animations[0].currentValue,k.animations[1].currentValue,k.animations[1].weight/k.totalWeight,M),0===k.totalAdditiveWeight))return M;F=[],g=[],B=k.totalWeight}for(let M=0;M<k.animations.length;M++){const l=k.animations[M];F.push(l.currentValue),g.push(l.weight/B)}let G=0;for(let k=0;k<F.length;)k?(G+=g[k],A.f.SlerpToRef(t,F[k],g[k]/G,t),k++):(A.f.SlerpToRef(F[k],F[k+1],g[k+1]/(g[k]+g[k+1]),M),t=M,G=g[k]+g[k+1],k+=2)}for(let g=0;g<k.additiveAnimations.length;g++){const M=k.additiveAnimations[g];0!==M.weight&&(t.multiplyToRef(M.currentValue,A.i.Quaternion[0]),A.f.SlerpToRef(t,A.i.Quaternion[0],M.weight,t))}return t}var w,Z,R=F(2430);w=R.e,(Z=G.e)&&(Z.prototype.copyAnimationRange=function(k,M,F){let t=arguments.length>3&&void 0!==arguments[3]&&arguments[3],g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new l.b(this.name,"_matrix",k.animations[0].framePerSecond,l.b.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const B=k.animations[0].getRange(M);if(!B)return!1;const G=B.from,A=B.to,N=k.animations[0].getKeys(),d=k.length,L=k.getParent(),U=this.getParent(),O=t&&L&&d&&this.length&&d!==this.length,w=O&&U&&L?U.length/L.length:1,Z=t&&!U&&g&&(1!==g.x||1!==g.y||1!==g.z),R=this.animations[0].getKeys();let y,m,o;for(let l=0,Q=N.length;l<Q;l++)y=N[l],y.frame>=G&&y.frame<=A&&(t?(o=y.value.clone(),O?(m=o.getTranslation(),o.setTranslation(m.scaleInPlace(w))):Z&&g?(m=o.getTranslation(),o.setTranslation(m.multiplyInPlace(g))):o=y.value):o=y.value,R.push({frame:y.frame+F,value:o}));return this.animations[0].createRange(M,G+F,A+F),!0}),w&&(w.prototype._animate=function(k){if(!this.animationsEnabled)return;const M=d.e.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=M}this.deltaTime=void 0!==k?k:this.useConstantAnimationDeltaTime?16:(M-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=M;const F=this._activeAnimatables;if(0===F.length)return;this._animationTime+=this.deltaTime;const t=this._animationTime;for(let l=0;l<F.length;l++){const k=F[l];!k._animate(t)&&k.disposeOnEnd&&l--}!function(k){if(k._registeredForLateAnimationBindings.length){for(let M=0;M<k._registeredForLateAnimationBindings.length;M++){const F=k._registeredForLateAnimationBindings.data[M];for(const k in F._lateAnimationHolders){const M=F._lateAnimationHolders[k],t=M.animations[0],g=M.originalValue;if(void 0===g||null===g)continue;const B=l.b.AllowMatrixDecomposeForInterpolation&&g.m;let G=F[k];if(B)G=U(M);else if(void 0!==g.w)G=O(M,G||A.f.Identity());else{let k=0,F=1;const B=t&&t._animationState.loopMode===l.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(M.totalWeight<1)G=B?g.clone?g.clone():g:t&&g.scale?g.scale(1-M.totalWeight):t?g*(1-M.totalWeight):g.clone?g.clone():g;else if(t){F=M.totalWeight;const l=t.weight/F;G=1!==l?t.currentValue.scale?t.currentValue.scale(l):t.currentValue*l:t.currentValue,B&&(G.addToRef?G.addToRef(g,G):G+=g),k=1}for(let l=k;l<M.animations.length;l++){const k=M.animations[l],t=k.weight/F;t&&(k.currentValue.scaleAndAddToRef?k.currentValue.scaleAndAddToRef(t,G):G+=k.currentValue*t)}for(let l=0;l<M.additiveAnimations.length;l++){const k=M.additiveAnimations[l],F=k.weight;F&&(k.currentValue.scaleAndAddToRef?k.currentValue.scaleAndAddToRef(F,G):G+=k.currentValue*F)}}F[k]=G}F._lateAnimationHolders={}}k._registeredForLateAnimationBindings.reset()}}(this)},w.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((k,M)=>k.playOrder-M.playOrder))},w.prototype.beginWeightedAnimation=function(k,M,F){let l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,t=arguments.length>4?arguments[4]:void 0,g=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,B=arguments.length>6?arguments[6]:void 0,G=arguments.length>7?arguments[7]:void 0,A=arguments.length>8?arguments[8]:void 0,N=arguments.length>9?arguments[9]:void 0,d=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const L=this.beginAnimation(k,M,F,t,g,B,G,!1,A,N,d);return L.weight=l,L},w.prototype.beginAnimation=function(k,M,F,l){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,g=arguments.length>5?arguments[5]:void 0,B=arguments.length>6?arguments[6]:void 0,G=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],A=arguments.length>8?arguments[8]:void 0,N=arguments.length>9?arguments[9]:void 0,d=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(t<0){const k=M;M=F,F=k,t=-t}M>F&&(t=-t),G&&this.stopAnimation(k,void 0,A),B||(B=new L(this,k,M,F,l,t,g,void 0,N,d));const U=!A||A(k);if(k.animations&&U&&B.appendAnimations(k,k.animations),k.getAnimatables){const d=k.getAnimatables();for(let k=0;k<d.length;k++)this.beginAnimation(d[k],M,F,l,t,g,B,G,A,N)}return B.reset(),B},w.prototype.beginHierarchyAnimation=function(k,M,F,l,t){let g=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,B=arguments.length>6?arguments[6]:void 0,G=arguments.length>7?arguments[7]:void 0,A=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],N=arguments.length>9?arguments[9]:void 0,d=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const L=k.getDescendants(M),U=[];U.push(this.beginAnimation(k,F,l,t,g,B,G,A,N,void 0,d));for(const O of L)U.push(this.beginAnimation(O,F,l,t,g,B,G,A,N,void 0,d));return U},w.prototype.beginDirectAnimation=function(k,M,F,l,t){let g=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(g<0){const k=F;F=l,l=k,g=-g}return F>l&&(g=-g),new L(this,k,F,l,t,g,arguments.length>6?arguments[6]:void 0,M,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},w.prototype.beginDirectHierarchyAnimation=function(k,M,F,l,t,g,B,G,A){let N=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const d=k.getDescendants(M),L=[];L.push(this.beginDirectAnimation(k,F,l,t,g,B,G,A,N));for(const U of d)L.push(this.beginDirectAnimation(U,F,l,t,g,B,G,A,N));return L},w.prototype.getAnimatableByTarget=function(k){for(let M=0;M<this._activeAnimatables.length;M++)if(this._activeAnimatables[M].target===k)return this._activeAnimatables[M];return null},w.prototype.getAllAnimatablesByTarget=function(k){const M=[];for(let F=0;F<this._activeAnimatables.length;F++)this._activeAnimatables[F].target===k&&M.push(this._activeAnimatables[F]);return M},w.prototype.stopAnimation=function(k,M,F){const l=this.getAllAnimatablesByTarget(k);for(const t of l)t.stop(M,F)},w.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let k=0;k<this._activeAnimatables.length;k++)this._activeAnimatables[k].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const k of this.animationGroups)k.stop()});class y{getClassName(){return"TargetedAnimation"}serialize(){const k={};return k.animation=this.animation.serialize(),k.targetId=this.target.id,k}}class m{get mask(){return this._mask}set mask(k){this._mask!==k&&(this._mask=k,this.syncWithMask(!0))}syncWithMask(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||k){this._numActiveAnimatables=0;for(let k=0;k<this._animatables.length;++k){const M=this._animatables[k];!this.mask||this.mask.disabled||this.mask.retainsTarget(M.target.name)?(this._numActiveAnimatables++,M.paused&&M.restart()):M.paused||M.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let k=0;k<this._animatables.length;++k){const M=this._animatables[k];this.mask.retainsTarget(M.target.name)||(M.stop(),this._animatables.splice(k,1),--k)}for(let k=0;k<this._targetedAnimations.length;k++){const M=this._targetedAnimations[k];this.mask.retainsTarget(M.target.name)||(this._targetedAnimations.splice(k,1),--k)}}}get from(){return this._from}set from(k){if(this._from!==k){this._from=k;for(let k=0;k<this._animatables.length;k++){this._animatables[k].fromFrame=this._from}}}get to(){return this._to}set to(k){if(this._to!==k){this._to=k;for(let k=0;k<this._animatables.length;k++){this._animatables[k].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(k){if(this._speedRatio!==k){this._speedRatio=k;for(let k=0;k<this._animatables.length;k++){this._animatables[k].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(k){if(this._loopAnimation!==k){this._loopAnimation=k;for(let k=0;k<this._animatables.length;k++){this._animatables[k].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(k){if(this._isAdditive!==k){this._isAdditive=k;for(let k=0;k<this._animatables.length;k++){this._animatables[k].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(k){this._weight!==k&&(this._weight=k,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(k){if(this._playOrder!==k&&(this._playOrder=k,this._animatables.length>0)){for(let k=0;k<this._animatables.length;k++)this._animatables[k].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(k){if(this._enableBlending!==k&&(this._enableBlending=k,null!==k))for(let M=0;M<this._targetedAnimations.length;++M)this._targetedAnimations[M].animation.enableBlending=k}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(k){if(this._blendingSpeed!==k&&(this._blendingSpeed=k,null!==k))for(let M=0;M<this._targetedAnimations.length;++M)this._targetedAnimations[M].animation.blendingSpeed=k}getLength(k,M){k=k??this._from;return((M=M??this._to)-k)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(k){let M=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],F=arguments.length>2&&void 0!==arguments[2]&&arguments[2],l=arguments.length>3?arguments[3]:void 0;if(0===k.length)return null;l=l??k[0].weight;let t=Number.MAX_VALUE,g=-Number.MAX_VALUE;if(F)for(const G of k)G.from<t&&(t=G.from),G.to>g&&(g=G.to);const B=new m(k[0].name+"_merged",k[0]._scene,l);for(const G of k){F&&G.normalize(t,g);for(const k of G.targetedAnimations)B.addTargetedAnimation(k.animation,k.target);M&&G.dispose()}return B}constructor(k){let M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=k,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new t.c,this.onAnimationLoopObservable=new t.c,this.onAnimationGroupLoopObservable=new t.c,this.onAnimationGroupEndObservable=new t.c,this.onAnimationGroupPauseObservable=new t.c,this.onAnimationGroupPlayObservable=new t.c,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=M||g.e.LastCreatedScene,this._weight=F,this._playOrder=l,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(k,M){const F=new y;F.animation=k,F.target=M;const l=k.getKeys();return this._from>l[0].frame&&(this._from=l[0].frame),this._to<l[l.length-1].frame&&(this._to=l[l.length-1].frame),null!==this._enableBlending&&(k.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(k.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(F),this._shouldStart=!0,F}removeTargetedAnimation(k){for(let M=this._targetedAnimations.length-1;M>-1;M--){this._targetedAnimations[M].animation===k&&this._targetedAnimations.splice(M,1)}}normalize(){let k=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==k&&(k=this._from),null==M&&(M=this._to);for(let F=0;F<this._targetedAnimations.length;F++){const l=this._targetedAnimations[F].animation.getKeys(),t=l[0],g=l[l.length-1];if(t.frame>k){const M={frame:k,value:t.value,inTangent:t.inTangent,outTangent:t.outTangent,interpolation:t.interpolation};l.splice(0,0,M)}if(g.frame<M){const k={frame:M,value:g.value,inTangent:g.inTangent,outTangent:g.outTangent,interpolation:g.interpolation};l.push(k)}}return this._from=k,this._to=M,this}_processLoop(k,M,F){k.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(M),this._animationLoopFlags[F]||(this._animationLoopFlags[F]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0],M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,F=arguments.length>2?arguments[2]:void 0,l=arguments.length>3?arguments[3]:void 0,t=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=k,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let g=0;g<this._targetedAnimations.length;g++){const B=this._targetedAnimations[g],G=this._scene.beginDirectAnimation(B.target,[B.animation],void 0!==F?F:this._from,void 0!==l?l:this._to,k,M,void 0,void 0,void 0!==t?t:this._isAdditive);G.weight=this._weight,G.playOrder=this._playOrder,G.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(B),this._checkAnimationGroupEnded(G)},this._processLoop(G,B,g),this._animatables.push(G)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=M,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let k=0;k<this._animatables.length;k++){this._animatables[k].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(k){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==k&&(this.loopAnimation=k),this.restart()):(this.stop(),this.start(k,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let k=0;k<this._animatables.length;k++){this._animatables[k].reset()}return this}restart(){if(!this._isStarted)return this;for(let k=0;k<this._animatables.length;k++){this._animatables[k].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const M=this._animatables.slice();for(let l=0;l<M.length;l++)M[l].stop(void 0,void 0,!0,k);let F=0;for(let l=0;l<this._scene._activeAnimatables.length;l++){const M=this._scene._activeAnimatables[l];M._runtimeAnimations.length>0?this._scene._activeAnimatables[F++]=M:k&&this._checkAnimationGroupEnded(M,k)}return this._scene._activeAnimatables.length=F,this._isStarted=!1,this}setWeightForAllAnimatables(k){for(let M=0;M<this._animatables.length;M++){this._animatables[M].weight=k}return this}syncAllAnimationsWith(k){for(let M=0;M<this._animatables.length;M++){this._animatables[M].syncWith(k)}return this}goToFrame(k){if(!this._isStarted)return this;for(let M=0;M<this._animatables.length;M++){this._animatables[M].goToFrame(k)}return this}getCurrentFrame(){var k;return(null===(k=this.animatables[0])||void 0===k?void 0:k.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const k=this._scene.animationGroups.indexOf(this);if(k>-1&&this._scene.animationGroups.splice(k,1),this._parentContainer){const k=this._parentContainer.animationGroups.indexOf(this);k>-1&&this._parentContainer.animationGroups.splice(k,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(k){let M=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const F=this._animatables.indexOf(k);F>-1&&this._animatables.splice(F,1),0===this._animatables.length&&(this._isStarted=!1,M||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(k,M){let F=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const l=new m(k||this.name,this._scene,this._weight,this._playOrder);l._from=this.from,l._to=this.to,l._speedRatio=this.speedRatio,l._loopAnimation=this.loopAnimation,l._isAdditive=this.isAdditive,l._enableBlending=this.enableBlending,l._blendingSpeed=this.blendingSpeed,l.metadata=this.metadata,l.mask=this.mask;for(const t of this._targetedAnimations)l.addTargetedAnimation(F?t.animation.clone():t.animation,M?M(t.target):t.target);return l}serialize(){const k={};k.name=this.name,k.from=this.from,k.to=this.to,k.speedRatio=this.speedRatio,k.loopAnimation=this.loopAnimation,k.isAdditive=this.isAdditive,k.weight=this.weight,k.playOrder=this.playOrder,k.enableBlending=this.enableBlending,k.blendingSpeed=this.blendingSpeed,k.targetedAnimations=[];for(let M=0;M<this.targetedAnimations.length;M++){const F=this.targetedAnimations[M];k.targetedAnimations[M]=F.serialize()}return B.e&&B.e.HasTags(this)&&(k.tags=B.e.GetTags(this)),this.metadata&&(k.metadata=this.metadata),k}static Parse(k,M){const F=new m(k.name,M,k.weight,k.playOrder);for(let t=0;t<k.targetedAnimations.length;t++){const g=k.targetedAnimations[t],B=l.b.Parse(g.animation),G=g.targetId;if("influence"===g.animation.property){const k=M.getMorphTargetById(G);k&&F.addTargetedAnimation(B,k)}else{const k=M.getNodeById(G);null!=k&&F.addTargetedAnimation(B,k)}}return B.e&&B.e.AddTagsTo(F,k.tags),null!==k.from&&null!==k.to&&F.normalize(k.from,k.to),void 0!==k.speedRatio&&(F._speedRatio=k.speedRatio),void 0!==k.loopAnimation&&(F._loopAnimation=k.loopAnimation),void 0!==k.isAdditive&&(F._isAdditive=k.isAdditive),void 0!==k.weight&&(F._weight=k.weight),void 0!==k.playOrder&&(F._playOrder=k.playOrder),void 0!==k.enableBlending&&(F._enableBlending=k.enableBlending),void 0!==k.blendingSpeed&&(F._blendingSpeed=k.blendingSpeed),void 0!==k.metadata&&(F.metadata=k.metadata),F}static MakeAnimationAdditive(k,M,F){let t;t="object"===typeof M?M:{referenceFrame:M,range:F,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let g=k;t.cloneOriginalAnimationGroup&&(g=k.clone(t.clonedAnimationGroupName||g.name));const B=g.targetedAnimations;for(let G=0;G<B.length;G++){const k=B[G];k.animation=l.b.MakeAnimationAdditive(k.animation,t)}if(g.isAdditive=!0,t.clipKeys){let k=Number.MAX_VALUE,M=-Number.MAX_VALUE;const F=g.targetedAnimations;for(let l=0;l<F.length;l++){const t=F[l].animation.getKeys();k>t[0].frame&&(k=t[0].frame),M<t[t.length-1].frame&&(M=t[t.length-1].frame)}g._from=k,g._to=M}return g}static ClipKeys(k,M,F,l,t){const g=k.clone(l||k.name);return m.ClipKeysInPlace(g,M,F,t)}static ClipKeysInPlace(k,M,F,l){return m.ClipInPlace(k,M,F,l,!1)}static ClipFrames(k,M,F,l,t){const g=k.clone(l||k.name);return m.ClipFramesInPlace(g,M,F,t)}static ClipFramesInPlace(k,M,F,l){return m.ClipInPlace(k,M,F,l,!0)}static ClipInPlace(k,M,F,l){let t=arguments.length>4&&void 0!==arguments[4]&&arguments[4],g=Number.MAX_VALUE,B=-Number.MAX_VALUE;const G=k.targetedAnimations;for(let A=0;A<G.length;A++){const k=G[A],N=l?k.animation:k.animation.clone();t&&(N.createKeyForFrame(M),N.createKeyForFrame(F));const d=N.getKeys(),L=[];let U=Number.MAX_VALUE;for(let l=0;l<d.length;l++){const k=d[l];if(!t&&l>=M&&l<=F||t&&k.frame>=M&&k.frame<=F){const M={frame:k.frame,value:k.value.clone?k.value.clone():k.value,inTangent:k.inTangent,outTangent:k.outTangent,interpolation:k.interpolation,lockedTangent:k.lockedTangent};U===Number.MAX_VALUE&&(U=M.frame),M.frame-=U,L.push(M)}}0!==L.length?(g>L[0].frame&&(g=L[0].frame),B<L[L.length-1].frame&&(B=L[L.length-1].frame),N.setKeys(L,!0),k.animation=N):(G.splice(A,1),A--)}return k._from=g,k._to=B,k}getClassName(){return"AnimationGroup"}toString(k){let M="Name: "+this.name;return M+=", type: "+this.getClassName(),k&&(M+=", from: "+this._from,M+=", to: "+this._to,M+=", isStarted: "+this._isStarted,M+=", speedRatio: "+this._speedRatio,M+=", targetedAnimations length: "+this._targetedAnimations.length,M+=", animatables length: "+this._animatables),M}}}}]);