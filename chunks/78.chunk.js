"use strict";(self.xeuzlpp225k=self.xeuzlpp225k||[]).push([[78],{14479:(k,Q,i)=>{i.r(Q),i.d(Q,{AnimationGroup:()=>h,TargetedAnimation:()=>l});var Z=i(11805),U=i(11122),C=i(11157),B=i(11341),o=i(12984),m=i(11298);class O{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(k,Q,i,U){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=Q,this._target=k,this._scene=i,this._host=U,this._activeTargets=[],Q._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===Z.c.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=m.Matrix.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const k={frame:0,value:this._minValue};this._keys.splice(0,0,k)}if(this._target instanceof Array){let k=0;for(const Q of this._target)this._preparePath(Q,k),this._getOriginalValues(k),k++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const C=Q.getEvents();if(C&&C.length>0)for(const Z of C)this._events.push(Z._clone());this._enableBlending=k&&k.animationPropertiesOverride?k.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(k){let Q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const i=this._animation.targetPropertyPath;if(i.length>1){let Z=k;for(let k=0;k<i.length-1;k++){const Q=i[k];if(Z=Z[Q],void 0===Z)throw new Error(`Invalid property (${Q}) in property path (${i.join(".")})`)}this._targetPath=i[i.length-1],this._activeTargets[Q]=Z}else this._targetPath=i[0],this._activeTargets[Q]=k;if(void 0===this._activeTargets[Q][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${i.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let k=0;for(const Q of this._target)void 0!==this._originalValue[k]&&this._setValue(Q,this._activeTargets[k],this._originalValue[k],-1,k),k++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let k=0;k<this._events.length;k++)this._events[k].isDone=!1}isStopped(){return this._stopped}dispose(){const k=this._animation.runtimeAnimations.indexOf(this);k>-1&&this._animation.runtimeAnimations.splice(k,1)}setValue(k,Q){if(this._targetIsArray)for(let i=0;i<this._target.length;i++){const Z=this._target[i];this._setValue(Z,this._activeTargets[i],k,Q,i)}else this._setValue(this._target,this._directTarget,k,Q,0)}_getOriginalValues(){let k,Q=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const i=this._activeTargets[Q];k=i.getLocalMatrix&&"_matrix"===this._targetPath?i.getLocalMatrix():i[this._targetPath],k&&k.clone?this._originalValue[Q]=k.clone():this._originalValue[Q]=k}_registerTargetForLateAnimationBinding(k,Q){const i=k.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(i),i._lateAnimationHolders||(i._lateAnimationHolders={}),i._lateAnimationHolders[k.targetPath]||(i._lateAnimationHolders[k.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:Q}),k.isAdditive?(i._lateAnimationHolders[k.targetPath].additiveAnimations.push(k),i._lateAnimationHolders[k.targetPath].totalAdditiveWeight+=k.weight):(i._lateAnimationHolders[k.targetPath].animations.push(k),i._lateAnimationHolders[k.targetPath].totalWeight+=k.weight)}_setValue(k,Q,i,U,C){if(this._currentActiveTarget=Q,this._weight=U,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const k=Q[this._targetPath];k.clone?this._originalBlendValue=k.clone():this._originalBlendValue=k}this._originalBlendValue.m?Z.c.AllowMatrixDecomposeForInterpolation?this._currentValue?m.Matrix.DecomposeLerpToRef(this._originalBlendValue,i,this._blendingFactor,this._currentValue):this._currentValue=m.Matrix.DecomposeLerp(this._originalBlendValue,i,this._blendingFactor):this._currentValue?m.Matrix.LerpToRef(this._originalBlendValue,i,this._blendingFactor,this._currentValue):this._currentValue=m.Matrix.Lerp(this._originalBlendValue,i,this._blendingFactor):this._currentValue=Z.c._UniversalLerp(this._originalBlendValue,i,this._blendingFactor);const U=k&&k.animationPropertiesOverride?k.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=U}else this._currentValue?this._currentValue.B?this._currentValue.B(i):this._currentValue=i:null!==i&&void 0!==i&&i.clone?this._currentValue=i.clone():this._currentValue=i;-1!==U?this._registerTargetForLateAnimationBinding(this,this._originalValue[C]):this._animationState.loopMode===Z.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[C],Q[this._targetPath]):Q[this._targetPath]=this._originalValue[C]+this._currentValue:Q[this._targetPath]=this._currentValue,k.DO&&k.DO(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(k){let Q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const i=this._animation.getKeys();k<i[0].frame?k=i[0].frame:k>i[i.length-1].frame&&(k=i[i.length-1].frame);const Z=this._events;if(Z.length)for(let C=0;C<Z.length;C++)Z[C].onlyOnce||(Z[C].isDone=Z[C].frame<k);this._currentFrame=k;const U=this._animation._interpolate(k,this._animationState);this.setValue(U,Q)}_prepareForSpeedRatioChange(k){const Q=this._previousElapsedTime*(this._animation.framePerSecond*k)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-Q}animate(k,Q,i,U,C){let B=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const o=this._animation,m=o.targetPropertyPath;if(!m||m.length<1)return this._stopped=!0,!1;let O,J=!0;const G=this._events;let H=0;if(this._coreRuntimeAnimation)H=i-Q,O=this._coreRuntimeAnimation.currentFrame,this._currentFrame=O,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let B;(Q<this._minFrame||Q>this._maxFrame)&&(Q=this._minFrame),(i<this._minFrame||i>this._maxFrame)&&(i=this._maxFrame),H=i-Q;let m=k*(o.framePerSecond*C)/1e3+this._absoluteFrameOffset,e=0,F=!1;const z=U&&this._animationState.loopMode===Z.c.ANIMATIONLOOPMODE_YOYO;if(z){const k=(m-Q)/H,i=Math.sin(k*Math.PI);m=Math.abs(i)*H+Q;const Z=i>=0?1:-1;this._yoyoDirection!==Z&&(F=!0),this._yoyoDirection=Z}if(this._previousElapsedTime=k,this._previousAbsoluteFrame=m,!U&&i>=Q&&(m>=H&&C>0||m<=0&&C<0))J=!1,e=o._getKeyValue(this._maxValue);else if(!U&&Q>=i&&(m<=H&&C<0||m>=0&&C>0))J=!1,e=o._getKeyValue(this._minValue);else if(this._animationState.loopMode!==Z.c.ANIMATIONLOOPMODE_CYCLE){const k=i.toString()+Q.toString();if(!this._offsetsCache[k]){this._animationState.repeatCount=0,this._animationState.loopMode=Z.c.ANIMATIONLOOPMODE_CYCLE;const U=o._interpolate(Q,this._animationState),C=o._interpolate(i,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),o.dataType){case Z.c.ANIMATIONTYPE_FLOAT:this._offsetsCache[k]=C-U;break;case Z.c.ANIMATIONTYPE_QUATERNION:case Z.c.ANIMATIONTYPE_VECTOR3:case Z.c.ANIMATIONTYPE_VECTOR2:case Z.c.ANIMATIONTYPE_SIZE:case Z.c.ANIMATIONTYPE_COLOR3:this._offsetsCache[k]=C.EQ(U)}this._highLimitsCache[k]=C}e=this._highLimitsCache[k],B=this._offsetsCache[k]}if(void 0===B)switch(o.dataType){case Z.c.ANIMATIONTYPE_FLOAT:B=0;break;case Z.c.ANIMATIONTYPE_QUATERNION:B=Z.h;break;case Z.c.ANIMATIONTYPE_VECTOR3:B=Z.o;break;case Z.c.ANIMATIONTYPE_VECTOR2:B=Z.k;break;case Z.c.ANIMATIONTYPE_SIZE:B=Z.j;break;case Z.c.ANIMATIONTYPE_COLOR3:B=Z.e;break;case Z.c.ANIMATIONTYPE_COLOR4:B=Z.f}if(this._host&&this._host.syncRoot){const k=this._host.syncRoot;O=Q+H*((k.masterFrame-k.fromFrame)/(k.toFrame-k.fromFrame))}else O=m>0&&Q>i||m<0&&Q<i?J&&0!==H?i+m%H:Q:J&&0!==H?Q+m%H:i;if(!z&&(C>0&&this.currentFrame>O||C<0&&this.currentFrame<O)||z&&F){this._onLoop();for(let k=0;k<G.length;k++)G[k].onlyOnce||(G[k].isDone=!1);this._animationState.key=C>0?0:o.getKeys().length-1}this._currentFrame=O,this._animationState.repeatCount=0===H?0:m/H|0,this._animationState.highLimitValue=e,this._animationState.offsetValue=B}const e=o._interpolate(O,this._animationState);if(this.setValue(e,B),G.length)for(let Z=0;Z<G.length;Z++)if(H>=0&&O>=G[Z].frame&&G[Z].frame>=Q||H<0&&O<=G[Z].frame&&G[Z].frame<=Q){const k=G[Z];k.isDone||(k.onlyOnce&&(G.splice(Z,1),Z--),k.isDone=!0,k.action(O))}return J||(this._stopped=!0),J}}var J=i(11144);class G{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(k){this._weight=-1!==k?Math.min(Math.max(k,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(k){for(let Q=0;Q<this._runtimeAnimations.length;Q++){this._runtimeAnimations[Q]._prepareForSpeedRatioChange(k)}this._speedRatio=k,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(k,Q){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,C=arguments.length>4&&void 0!==arguments[4]&&arguments[4],B=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,o=arguments.length>6?arguments[6]:void 0,m=arguments.length>7?arguments[7]:void 0,O=arguments.length>8?arguments[8]:void 0,J=arguments.length>9&&void 0!==arguments[9]&&arguments[9],G=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=Q,this.fromFrame=i,this.toFrame=Z,this.loopAnimation=C,this.onAnimationEnd=o,this.onAnimationLoop=O,this.isAdditive=J,this.playOrder=G,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.rB=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new U.c,this.onAnimationLoopObservable=new U.c,this._scene=k,m&&this.appendAnimations(Q,m),this._speedRatio=B,k._activeAnimatables.push(this)}syncWith(k){if(this._syncRoot=k,k){const k=this._scene._activeAnimatables.indexOf(this);k>-1&&(this._scene._activeAnimatables.splice(k,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(k,Q){for(let i=0;i<Q.length;i++){const Z=Q[i],U=new O(k,Z,this._scene,this);U._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(U)}}getAnimationByTargetProperty(k){const Q=this._runtimeAnimations;for(let i=0;i<Q.length;i++)if(Q[i].animation.targetProperty===k)return Q[i].animation;return null}getRuntimeAnimationByTargetProperty(k){const Q=this._runtimeAnimations;for(let i=0;i<Q.length;i++)if(Q[i].animation.targetProperty===k)return Q[i];return null}reset(){const k=this._runtimeAnimations;for(let Q=0;Q<k.length;Q++)k[Q].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(k){const Q=this._runtimeAnimations;for(let i=0;i<Q.length;i++)Q[i].animation.enableBlending=!0,Q[i].animation.blendingSpeed=k}disableBlending(){const k=this._runtimeAnimations;for(let Q=0;Q<k.length;Q++)k[Q].animation.enableBlending=!1}goToFrame(k){let Q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const i=this._runtimeAnimations;if(i[0]){const Q=i[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??i[0].currentFrame;const Z=0===this.speedRatio?0:(k-this._frameToSyncFromJump)/Q*1e3/this.speedRatio;this._manualJumpDelay=-Z}for(let Z=0;Z<i.length;Z++)i[Z].goToFrame(k,Q?this._weight:-1);this._goToFrame=k}get paused(){return this.rB}pause(){this.rB||(this.rB=!0)}restart(){this.rB=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(k,Q){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],Z=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(k||Q){const U=this._scene._activeAnimatables.indexOf(this);if(U>-1){const C=this._runtimeAnimations;for(let i=C.length-1;i>=0;i--){const Z=C[i];k&&Z.animation.name!=k||(Q&&!Q(Z.target)||(Z.dispose(),C.splice(i,1)))}0==C.length&&(i||this._scene._activeAnimatables.splice(U,1),Z||this._raiseOnAnimationEnd())}}else{const k=this._scene._activeAnimatables.indexOf(this);if(k>-1){i||this._scene._activeAnimatables.splice(k,1);const Q=this._runtimeAnimations;for(let k=0;k<Q.length;k++)Q[k].dispose();this._runtimeAnimations.length=0,Z||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((k=>{this.onAnimationEndObservable.add((()=>{k(this)}),void 0,void 0,this,!0)}))}_animate(k){if(this.rB)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=k),!0;if(null===this._localDelayOffset?(this._localDelayOffset=k,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=k-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let Q=!1;const i=this._runtimeAnimations;let Z;for(Z=0;Z<i.length;Z++){const U=i[Z].animate(k-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);Q=Q||U}if(this.animationStarted=Q,!Q){if(this.disposeOnEnd)for(Z=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(Z,1),Z=0;Z<i.length;Z++)i[Z].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return Q}}function H(k){if(0===k.totalWeight&&0===k.totalAdditiveWeight)return k.originalValue;let Q=1;const i=m.TmpVectors.zQ[0],Z=m.TmpVectors.zQ[1],U=m.TmpVectors.Quaternion[0];let C=0;const B=k.animations[0],o=k.originalValue;let O=1,J=!1;if(k.totalWeight<1)O=1-k.totalWeight,o.decompose(Z,U,i);else{if(C=1,Q=k.totalWeight,O=B.weight/Q,1==O){if(!k.totalAdditiveWeight)return B.currentValue;J=!0}B.currentValue.decompose(Z,U,i)}if(!J){Z.scaleInPlace(O),i.scaleInPlace(O),U.scaleInPlace(O);for(let B=C;B<k.animations.length;B++){const C=k.animations[B];if(0===C.weight)continue;O=C.weight/Q;const o=m.TmpVectors.zQ[2],J=m.TmpVectors.zQ[3],G=m.TmpVectors.Quaternion[1];C.currentValue.decompose(J,G,o),J.scaleAndAddToRef(O,Z),G.scaleAndAddToRef(m.Quaternion.Dot(U,G)>0?O:-O,U),o.scaleAndAddToRef(O,i)}U.normalize()}for(let H=0;H<k.additiveAnimations.length;H++){const Q=k.additiveAnimations[H];if(0===Q.weight)continue;const C=m.TmpVectors.zQ[2],B=m.TmpVectors.zQ[3],o=m.TmpVectors.Quaternion[1];Q.currentValue.decompose(B,o,C),B.multiplyToRef(Z,B),m.zQ.LerpToRef(Z,B,Q.weight,Z),U.multiplyToRef(o,o),m.Quaternion.SlerpToRef(U,o,Q.weight,U),C.scaleAndAddToRef(Q.weight,i)}const G=B?B._animationState.workValue:m.TmpVectors.Matrix[0].clone();return m.Matrix.ComposeToRef(Z,U,i,G),G}function e(k,Q){if(0===k.totalWeight&&0===k.totalAdditiveWeight)return Q;const i=k.animations[0],Z=k.originalValue;let U=Q;if(0===k.totalWeight&&k.totalAdditiveWeight>0)U.B(Z);else if(1===k.animations.length){if(m.Quaternion.SlerpToRef(Z,i.currentValue,Math.min(1,k.totalWeight),U),0===k.totalAdditiveWeight)return U}else if(k.animations.length>1){let i,C,B=1;if(k.totalWeight<1){const Q=1-k.totalWeight;i=[],C=[],i.push(Z),C.push(Q)}else{if(2===k.animations.length&&(m.Quaternion.SlerpToRef(k.animations[0].currentValue,k.animations[1].currentValue,k.animations[1].weight/k.totalWeight,Q),0===k.totalAdditiveWeight))return Q;i=[],C=[],B=k.totalWeight}for(let Q=0;Q<k.animations.length;Q++){const Z=k.animations[Q];i.push(Z.currentValue),C.push(Z.weight/B)}let o=0;for(let k=0;k<i.length;)k?(o+=C[k],m.Quaternion.SlerpToRef(U,i[k],C[k]/o,U),k++):(m.Quaternion.SlerpToRef(i[k],i[k+1],C[k+1]/(C[k]+C[k+1]),Q),U=Q,o=C[k]+C[k+1],k+=2)}for(let C=0;C<k.additiveAnimations.length;C++){const Q=k.additiveAnimations[C];0!==Q.weight&&(U.multiplyToRef(Q.currentValue,m.TmpVectors.Quaternion[0]),m.Quaternion.SlerpToRef(U,m.TmpVectors.Quaternion[0],Q.weight,U))}return U}var F,z,E=i(11538);F=E.b,(z=o.c)&&(z.prototype.copyAnimationRange=function(k,Q,i){let U=arguments.length>3&&void 0!==arguments[3]&&arguments[3],C=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new Z.c(this.name,"_matrix",k.animations[0].framePerSecond,Z.c.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const B=k.animations[0].getRange(Q);if(!B)return!1;const o=B.from,m=B.to,O=k.animations[0].getKeys(),J=k.length,G=k.getParent(),H=this.getParent(),e=U&&G&&J&&this.length&&J!==this.length,F=e&&H&&G?H.length/G.length:1,z=U&&!H&&C&&(1!==C.x||1!==C.y||1!==C.z),E=this.animations[0].getKeys();let l,h,c;for(let Z=0,f=O.length;Z<f;Z++)l=O[Z],l.frame>=o&&l.frame<=m&&(U?(c=l.value.clone(),e?(h=c.getTranslation(),c.setTranslation(h.scaleInPlace(F))):z&&C?(h=c.getTranslation(),c.setTranslation(h.multiplyInPlace(C))):c=l.value):c=l.value,E.push({frame:l.frame+i,value:c}));return this.animations[0].createRange(Q,o+i,m+i),!0}),F&&(F.prototype._animate=function(k){if(!this.animationsEnabled)return;const Q=J.c.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=Q}this.deltaTime=void 0!==k?k:this.useConstantAnimationDeltaTime?16:(Q-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=Q;const i=this._activeAnimatables;if(0===i.length)return;this._animationTime+=this.deltaTime;const U=this._animationTime;for(let Z=0;Z<i.length;Z++){const k=i[Z];!k._animate(U)&&k.disposeOnEnd&&Z--}!function(k){if(k._registeredForLateAnimationBindings.length){for(let Q=0;Q<k._registeredForLateAnimationBindings.length;Q++){const i=k._registeredForLateAnimationBindings.data[Q];for(const k in i._lateAnimationHolders){const Q=i._lateAnimationHolders[k],U=Q.animations[0],C=Q.originalValue;if(void 0===C||null===C)continue;const B=Z.c.AllowMatrixDecomposeForInterpolation&&C.m;let o=i[k];if(B)o=H(Q);else if(void 0!==C.w)o=e(Q,o||m.Quaternion.Identity());else{let k=0,i=1;const B=U&&U._animationState.loopMode===Z.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(Q.totalWeight<1)o=B?C.clone?C.clone():C:U&&C.scale?C.scale(1-Q.totalWeight):U?C*(1-Q.totalWeight):C.clone?C.clone():C;else if(U){i=Q.totalWeight;const Z=U.weight/i;o=1!==Z?U.currentValue.scale?U.currentValue.scale(Z):U.currentValue*Z:U.currentValue,B&&(o.addToRef?o.addToRef(C,o):o+=C),k=1}for(let Z=k;Z<Q.animations.length;Z++){const k=Q.animations[Z],U=k.weight/i;U&&(k.currentValue.scaleAndAddToRef?k.currentValue.scaleAndAddToRef(U,o):o+=k.currentValue*U)}for(let Z=0;Z<Q.additiveAnimations.length;Z++){const k=Q.additiveAnimations[Z],i=k.weight;i&&(k.currentValue.scaleAndAddToRef?k.currentValue.scaleAndAddToRef(i,o):o+=k.currentValue*i)}}i[k]=o}i._lateAnimationHolders={}}k._registeredForLateAnimationBindings.reset()}}(this)},F.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((k,Q)=>k.playOrder-Q.playOrder))},F.prototype.beginWeightedAnimation=function(k,Q,i){let Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,U=arguments.length>4?arguments[4]:void 0,C=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,B=arguments.length>6?arguments[6]:void 0,o=arguments.length>7?arguments[7]:void 0,m=arguments.length>8?arguments[8]:void 0,O=arguments.length>9?arguments[9]:void 0,J=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const G=this.beginAnimation(k,Q,i,U,C,B,o,!1,m,O,J);return G.weight=Z,G},F.prototype.beginAnimation=function(k,Q,i,Z){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,C=arguments.length>5?arguments[5]:void 0,B=arguments.length>6?arguments[6]:void 0,o=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],m=arguments.length>8?arguments[8]:void 0,O=arguments.length>9?arguments[9]:void 0,J=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(U<0){const k=Q;Q=i,i=k,U=-U}Q>i&&(U=-U),o&&this.stopAnimation(k,void 0,m),B||(B=new G(this,k,Q,i,Z,U,C,void 0,O,J));const H=!m||m(k);if(k.animations&&H&&B.appendAnimations(k,k.animations),k.getAnimatables){const J=k.getAnimatables();for(let k=0;k<J.length;k++)this.beginAnimation(J[k],Q,i,Z,U,C,B,o,m,O)}return B.reset(),B},F.prototype.beginHierarchyAnimation=function(k,Q,i,Z,U){let C=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,B=arguments.length>6?arguments[6]:void 0,o=arguments.length>7?arguments[7]:void 0,m=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],O=arguments.length>9?arguments[9]:void 0,J=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const G=k.getDescendants(Q),H=[];H.push(this.beginAnimation(k,i,Z,U,C,B,o,m,O,void 0,J));for(const e of G)H.push(this.beginAnimation(e,i,Z,U,C,B,o,m,O,void 0,J));return H},F.prototype.beginDirectAnimation=function(k,Q,i,Z,U){let C=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(C<0){const k=i;i=Z,Z=k,C=-C}return i>Z&&(C=-C),new G(this,k,i,Z,U,C,arguments.length>6?arguments[6]:void 0,Q,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},F.prototype.beginDirectHierarchyAnimation=function(k,Q,i,Z,U,C,B,o,m){let O=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const J=k.getDescendants(Q),G=[];G.push(this.beginDirectAnimation(k,i,Z,U,C,B,o,m,O));for(const H of J)G.push(this.beginDirectAnimation(H,i,Z,U,C,B,o,m,O));return G},F.prototype.getAnimatableByTarget=function(k){for(let Q=0;Q<this._activeAnimatables.length;Q++)if(this._activeAnimatables[Q].target===k)return this._activeAnimatables[Q];return null},F.prototype.getAllAnimatablesByTarget=function(k){const Q=[];for(let i=0;i<this._activeAnimatables.length;i++)this._activeAnimatables[i].target===k&&Q.push(this._activeAnimatables[i]);return Q},F.prototype.stopAnimation=function(k,Q,i){const Z=this.getAllAnimatablesByTarget(k);for(const U of Z)U.stop(Q,i)},F.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let k=0;k<this._activeAnimatables.length;k++)this._activeAnimatables[k].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const k of this.animationGroups)k.stop()});class l{getClassName(){return"TargetedAnimation"}serialize(){const k={};return k.animation=this.animation.serialize(),k.targetId=this.target.id,k}}class h{get mask(){return this._mask}set mask(k){this._mask!==k&&(this._mask=k,this.syncWithMask(!0))}syncWithMask(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||k){this._numActiveAnimatables=0;for(let k=0;k<this._animatables.length;++k){const Q=this._animatables[k];!this.mask||this.mask.disabled||this.mask.retainsTarget(Q.target.name)?(this._numActiveAnimatables++,Q.paused&&Q.restart()):Q.paused||Q.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let k=0;k<this._animatables.length;++k){const Q=this._animatables[k];this.mask.retainsTarget(Q.target.name)||(Q.stop(),this._animatables.splice(k,1),--k)}for(let k=0;k<this._targetedAnimations.length;k++){const Q=this._targetedAnimations[k];this.mask.retainsTarget(Q.target.name)||(this._targetedAnimations.splice(k,1),--k)}}}get from(){return this._from}set from(k){if(this._from!==k){this._from=k;for(let k=0;k<this._animatables.length;k++){this._animatables[k].fromFrame=this._from}}}get to(){return this._to}set to(k){if(this._to!==k){this._to=k;for(let k=0;k<this._animatables.length;k++){this._animatables[k].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(k){if(this._speedRatio!==k){this._speedRatio=k;for(let k=0;k<this._animatables.length;k++){this._animatables[k].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(k){if(this._loopAnimation!==k){this._loopAnimation=k;for(let k=0;k<this._animatables.length;k++){this._animatables[k].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(k){if(this._isAdditive!==k){this._isAdditive=k;for(let k=0;k<this._animatables.length;k++){this._animatables[k].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(k){this._weight!==k&&(this._weight=k,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(k){if(this._playOrder!==k&&(this._playOrder=k,this._animatables.length>0)){for(let k=0;k<this._animatables.length;k++)this._animatables[k].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(k){if(this._enableBlending!==k&&(this._enableBlending=k,null!==k))for(let Q=0;Q<this._targetedAnimations.length;++Q)this._targetedAnimations[Q].animation.enableBlending=k}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(k){if(this._blendingSpeed!==k&&(this._blendingSpeed=k,null!==k))for(let Q=0;Q<this._targetedAnimations.length;++Q)this._targetedAnimations[Q].animation.blendingSpeed=k}getLength(k,Q){k=k??this._from;return((Q=Q??this._to)-k)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(k){let Q=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],Z=arguments.length>3?arguments[3]:void 0;if(0===k.length)return null;Z=Z??k[0].weight;let U=Number.MAX_VALUE,C=-Number.MAX_VALUE;if(i)for(const o of k)o.from<U&&(U=o.from),o.to>C&&(C=o.to);const B=new h(k[0].name+"_merged",k[0]._scene,Z);for(const o of k){i&&o.normalize(U,C);for(const k of o.targetedAnimations)B.addTargetedAnimation(k.animation,k.target);Q&&o.dispose()}return B}constructor(k){let Q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=k,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new U.c,this.onAnimationLoopObservable=new U.c,this.onAnimationGroupLoopObservable=new U.c,this.onAnimationGroupEndObservable=new U.c,this.onAnimationGroupPauseObservable=new U.c,this.onAnimationGroupPlayObservable=new U.c,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=Q||C.b.LastCreatedScene,this._weight=i,this._playOrder=Z,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(k,Q){const i=new l;i.animation=k,i.target=Q;const Z=k.getKeys();return this._from>Z[0].frame&&(this._from=Z[0].frame),this._to<Z[Z.length-1].frame&&(this._to=Z[Z.length-1].frame),null!==this._enableBlending&&(k.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(k.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(i),this._shouldStart=!0,i}removeTargetedAnimation(k){for(let Q=this._targetedAnimations.length-1;Q>-1;Q--){this._targetedAnimations[Q].animation===k&&this._targetedAnimations.splice(Q,1)}}normalize(){let k=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,Q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==k&&(k=this._from),null==Q&&(Q=this._to);for(let i=0;i<this._targetedAnimations.length;i++){const Z=this._targetedAnimations[i].animation.getKeys(),U=Z[0],C=Z[Z.length-1];if(U.frame>k){const Q={frame:k,value:U.value,inTangent:U.inTangent,outTangent:U.outTangent,interpolation:U.interpolation};Z.splice(0,0,Q)}if(C.frame<Q){const k={frame:Q,value:C.value,inTangent:C.inTangent,outTangent:C.outTangent,interpolation:C.interpolation};Z.push(k)}}return this._from=k,this._to=Q,this}_processLoop(k,Q,i){k.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(Q),this._animationLoopFlags[i]||(this._animationLoopFlags[i]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0],Q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2?arguments[2]:void 0,Z=arguments.length>3?arguments[3]:void 0,U=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=k,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let C=0;C<this._targetedAnimations.length;C++){const B=this._targetedAnimations[C],o=this._scene.beginDirectAnimation(B.target,[B.animation],void 0!==i?i:this._from,void 0!==Z?Z:this._to,k,Q,void 0,void 0,void 0!==U?U:this._isAdditive);o.weight=this._weight,o.playOrder=this._playOrder,o.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(B),this._checkAnimationGroupEnded(o)},this._processLoop(o,B,C),this._animatables.push(o)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=Q,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let k=0;k<this._animatables.length;k++){this._animatables[k].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(k){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==k&&(this.loopAnimation=k),this.restart()):(this.stop(),this.start(k,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let k=0;k<this._animatables.length;k++){this._animatables[k].reset()}return this}restart(){if(!this._isStarted)return this;for(let k=0;k<this._animatables.length;k++){this._animatables[k].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const Q=this._animatables.slice();for(let Z=0;Z<Q.length;Z++)Q[Z].stop(void 0,void 0,!0,k);let i=0;for(let Z=0;Z<this._scene._activeAnimatables.length;Z++){const Q=this._scene._activeAnimatables[Z];Q._runtimeAnimations.length>0?this._scene._activeAnimatables[i++]=Q:k&&this._checkAnimationGroupEnded(Q,k)}return this._scene._activeAnimatables.length=i,this._isStarted=!1,this}setWeightForAllAnimatables(k){for(let Q=0;Q<this._animatables.length;Q++){this._animatables[Q].weight=k}return this}syncAllAnimationsWith(k){for(let Q=0;Q<this._animatables.length;Q++){this._animatables[Q].syncWith(k)}return this}goToFrame(k){let Q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let i=0;i<this._animatables.length;i++){this._animatables[i].goToFrame(k,Q)}return this}getCurrentFrame(){var k;return(null===(k=this.animatables[0])||void 0===k?void 0:k.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const k=this._scene.animationGroups.indexOf(this);if(k>-1&&this._scene.animationGroups.splice(k,1),this._parentContainer){const k=this._parentContainer.animationGroups.indexOf(this);k>-1&&this._parentContainer.animationGroups.splice(k,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(k){let Q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const i=this._animatables.indexOf(k);i>-1&&this._animatables.splice(i,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,Q||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(k,Q){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const Z=new h(k||this.name,this._scene,this._weight,this._playOrder);Z._from=this.from,Z._to=this.to,Z._speedRatio=this.speedRatio,Z._loopAnimation=this.loopAnimation,Z._isAdditive=this.isAdditive,Z._enableBlending=this.enableBlending,Z._blendingSpeed=this.blendingSpeed,Z.metadata=this.metadata,Z.mask=this.mask;for(const U of this._targetedAnimations)Z.addTargetedAnimation(i?U.animation.clone():U.animation,Q?Q(U.target):U.target);return Z}serialize(){const k={};k.name=this.name,k.from=this.from,k.to=this.to,k.speedRatio=this.speedRatio,k.loopAnimation=this.loopAnimation,k.isAdditive=this.isAdditive,k.weight=this.weight,k.playOrder=this.playOrder,k.enableBlending=this.enableBlending,k.blendingSpeed=this.blendingSpeed,k.targetedAnimations=[];for(let Q=0;Q<this.targetedAnimations.length;Q++){const i=this.targetedAnimations[Q];k.targetedAnimations[Q]=i.serialize()}return B.e&&B.e.HasTags(this)&&(k.tags=B.e.GetTags(this)),this.metadata&&(k.metadata=this.metadata),k}static Parse(k,Q){const i=new h(k.name,Q,k.weight,k.playOrder);for(let U=0;U<k.targetedAnimations.length;U++){const C=k.targetedAnimations[U],B=Z.c.Parse(C.animation),o=C.targetId;if("influence"===C.animation.property){const k=Q.getMorphTargetById(o);k&&i.addTargetedAnimation(B,k)}else{const k=Q.getNodeById(o);null!=k&&i.addTargetedAnimation(B,k)}}return B.e&&B.e.AddTagsTo(i,k.tags),null!==k.from&&null!==k.to&&i.normalize(k.from,k.to),void 0!==k.speedRatio&&(i._speedRatio=k.speedRatio),void 0!==k.loopAnimation&&(i._loopAnimation=k.loopAnimation),void 0!==k.isAdditive&&(i._isAdditive=k.isAdditive),void 0!==k.weight&&(i._weight=k.weight),void 0!==k.playOrder&&(i._playOrder=k.playOrder),void 0!==k.enableBlending&&(i._enableBlending=k.enableBlending),void 0!==k.blendingSpeed&&(i._blendingSpeed=k.blendingSpeed),void 0!==k.metadata&&(i.metadata=k.metadata),i}static MakeAnimationAdditive(k,Q,i){let U;U="object"===typeof Q?Q:{referenceFrame:Q,range:i,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let C=k;U.cloneOriginalAnimationGroup&&(C=k.clone(U.clonedAnimationGroupName||C.name));const B=C.targetedAnimations;for(let o=0;o<B.length;o++){const k=B[o];k.animation=Z.c.MakeAnimationAdditive(k.animation,U)}if(C.isAdditive=!0,U.clipKeys){let k=Number.MAX_VALUE,Q=-Number.MAX_VALUE;const i=C.targetedAnimations;for(let Z=0;Z<i.length;Z++){const U=i[Z].animation.getKeys();k>U[0].frame&&(k=U[0].frame),Q<U[U.length-1].frame&&(Q=U[U.length-1].frame)}C._from=k,C._to=Q}return C}static ClipKeys(k,Q,i,Z,U){const C=k.clone(Z||k.name);return h.ClipKeysInPlace(C,Q,i,U)}static ClipKeysInPlace(k,Q,i,Z){return h.ClipInPlace(k,Q,i,Z,!1)}static ClipFrames(k,Q,i,Z,U){const C=k.clone(Z||k.name);return h.ClipFramesInPlace(C,Q,i,U)}static ClipFramesInPlace(k,Q,i,Z){return h.ClipInPlace(k,Q,i,Z,!0)}static ClipInPlace(k,Q,i,Z){let U=arguments.length>4&&void 0!==arguments[4]&&arguments[4],C=Number.MAX_VALUE,B=-Number.MAX_VALUE;const o=k.targetedAnimations;for(let m=0;m<o.length;m++){const k=o[m],O=Z?k.animation:k.animation.clone();U&&(O.createKeyForFrame(Q),O.createKeyForFrame(i));const J=O.getKeys(),G=[];let H=Number.MAX_VALUE;for(let Z=0;Z<J.length;Z++){const k=J[Z];if(!U&&Z>=Q&&Z<=i||U&&k.frame>=Q&&k.frame<=i){const Q={frame:k.frame,value:k.value.clone?k.value.clone():k.value,inTangent:k.inTangent,outTangent:k.outTangent,interpolation:k.interpolation,lockedTangent:k.lockedTangent};H===Number.MAX_VALUE&&(H=Q.frame),Q.frame-=H,G.push(Q)}}0!==G.length?(C>G[0].frame&&(C=G[0].frame),B<G[G.length-1].frame&&(B=G[G.length-1].frame),O.setKeys(G,!0),k.animation=O):(o.splice(m,1),m--)}return k._from=C,k._to=B,k}getClassName(){return"AnimationGroup"}toString(k){let Q="Name: "+this.name;return Q+=", type: "+this.getClassName(),k&&(Q+=", from: "+this._from,Q+=", to: "+this._to,Q+=", isStarted: "+this._isStarted,Q+=", speedRatio: "+this._speedRatio,Q+=", targetedAnimations length: "+this._targetedAnimations.length,Q+=", animatables length: "+this._animatables),Q}}}}]);