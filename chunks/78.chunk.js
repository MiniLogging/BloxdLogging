"use strict";(self.ipz2em9uj1g=self.ipz2em9uj1g||[]).push([[78],{15805:(r,O,W)=>{W.r(O),W.d(O,{AnimationGroup:()=>Y,TargetedAnimation:()=>e});var q=W(13058),Q=W(12435),C=W(12484),T=W(12626),h=W(14197),J=W(12591);class mr{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(r,O,W,Q){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=O,this._target=r,this._scene=W,this._host=Q,this._activeTargets=[],O._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===q.b.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=J.Matrix.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const r={frame:0,value:this._minValue};this._keys.splice(0,0,r)}if(this._target instanceof Array){let r=0;for(const O of this._target)this._preparePath(O,r),this._getOriginalValues(r),r++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const C=O.getEvents();if(C&&C.length>0)for(const q of C)this._events.push(q._clone());this._enableBlending=r&&r.animationPropertiesOverride?r.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(r){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const W=this._animation.targetPropertyPath;if(W.length>1){let q=r;for(let r=0;r<W.length-1;r++){const O=W[r];if(q=q[O],void 0===q)throw new Error(`Invalid property (${O}) in property path (${W.join(".")})`)}this._targetPath=W[W.length-1],this._activeTargets[O]=q}else this._targetPath=W[0],this._activeTargets[O]=r;if(void 0===this._activeTargets[O][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${W.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let r=0;for(const O of this._target)void 0!==this._originalValue[r]&&this._setValue(O,this._activeTargets[r],this._originalValue[r],-1,r),r++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let r=0;r<this._events.length;r++)this._events[r].isDone=!1}isStopped(){return this._stopped}dispose(){const r=this._animation.runtimeAnimations.indexOf(this);r>-1&&this._animation.runtimeAnimations.splice(r,1)}setValue(r,O){if(this._targetIsArray)for(let W=0;W<this._target.length;W++){const q=this._target[W];this._setValue(q,this._activeTargets[W],r,O,W)}else this._setValue(this._target,this._directTarget,r,O,0)}_getOriginalValues(){let r,O=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const W=this._activeTargets[O];r=W.getLocalMatrix&&"_matrix"===this._targetPath?W.getLocalMatrix():W[this._targetPath],r&&r.clone?this._originalValue[O]=r.clone():this._originalValue[O]=r}_registerTargetForLateAnimationBinding(r,O){const W=r.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(W),W._lateAnimationHolders||(W._lateAnimationHolders={}),W._lateAnimationHolders[r.targetPath]||(W._lateAnimationHolders[r.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:O}),r.isAdditive?(W._lateAnimationHolders[r.targetPath].additiveAnimations.push(r),W._lateAnimationHolders[r.targetPath].totalAdditiveWeight+=r.weight):(W._lateAnimationHolders[r.targetPath].animations.push(r),W._lateAnimationHolders[r.targetPath].totalWeight+=r.weight)}_setValue(r,O,W,Q,C){if(this._currentActiveTarget=O,this._weight=Q,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const r=O[this._targetPath];r.clone?this._originalBlendValue=r.clone():this._originalBlendValue=r}this._originalBlendValue.m?q.b.AllowMatrixDecomposeForInterpolation?this._currentValue?J.Matrix.DecomposeLerpToRef(this._originalBlendValue,W,this._blendingFactor,this._currentValue):this._currentValue=J.Matrix.DecomposeLerp(this._originalBlendValue,W,this._blendingFactor):this._currentValue?J.Matrix.LerpToRef(this._originalBlendValue,W,this._blendingFactor,this._currentValue):this._currentValue=J.Matrix.Lerp(this._originalBlendValue,W,this._blendingFactor):this._currentValue=q.b._UniversalLerp(this._originalBlendValue,W,this._blendingFactor);const Q=r&&r.animationPropertiesOverride?r.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=Q}else this._currentValue?this._currentValue.C?this._currentValue.C(W):this._currentValue=W:null!==W&&void 0!==W&&W.clone?this._currentValue=W.clone():this._currentValue=W;-1!==Q?this._registerTargetForLateAnimationBinding(this,this._originalValue[C]):this._animationState.loopMode===q.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[C],O[this._targetPath]):O[this._targetPath]=this._originalValue[C]+this._currentValue:O[this._targetPath]=this._currentValue,r.mv&&r.mv(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(r){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const W=this._animation.getKeys();r<W[0].frame?r=W[0].frame:r>W[W.length-1].frame&&(r=W[W.length-1].frame);const q=this._events;if(q.length)for(let C=0;C<q.length;C++)q[C].onlyOnce||(q[C].isDone=q[C].frame<r);this._currentFrame=r;const Q=this._animation._interpolate(r,this._animationState);this.setValue(Q,O)}_prepareForSpeedRatioChange(r){const O=this._previousElapsedTime*(this._animation.framePerSecond*r)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-O}animate(r,O,W,Q,C){let T=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const h=this._animation,J=h.targetPropertyPath;if(!J||J.length<1)return this._stopped=!0,!1;let mr,d=!0;const v=this._events;let g=0;if(this._coreRuntimeAnimation)g=W-O,mr=this._coreRuntimeAnimation.currentFrame,this._currentFrame=mr,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let T;(O<this._minFrame||O>this._maxFrame)&&(O=this._minFrame),(W<this._minFrame||W>this._maxFrame)&&(W=this._maxFrame),g=W-O;let J=r*(h.framePerSecond*C)/1e3+this._absoluteFrameOffset,K=0,U=!1;const P=Q&&this._animationState.loopMode===q.b.ANIMATIONLOOPMODE_YOYO;if(P){const r=(J-O)/g,W=Math.sin(r*Math.PI);J=Math.abs(W)*g+O;const q=W>=0?1:-1;this._yoyoDirection!==q&&(U=!0),this._yoyoDirection=q}if(this._previousElapsedTime=r,this._previousAbsoluteFrame=J,!Q&&W>=O&&(J>=g&&C>0||J<=0&&C<0))d=!1,K=h._getKeyValue(this._maxValue);else if(!Q&&O>=W&&(J<=g&&C<0||J>=0&&C>0))d=!1,K=h._getKeyValue(this._minValue);else if(this._animationState.loopMode!==q.b.ANIMATIONLOOPMODE_CYCLE){const r=W.toString()+O.toString();if(!this._offsetsCache[r]){this._animationState.repeatCount=0,this._animationState.loopMode=q.b.ANIMATIONLOOPMODE_CYCLE;const Q=h._interpolate(O,this._animationState),C=h._interpolate(W,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),h.dataType){case q.b.ANIMATIONTYPE_FLOAT:this._offsetsCache[r]=C-Q;break;case q.b.ANIMATIONTYPE_QUATERNION:case q.b.ANIMATIONTYPE_VECTOR3:case q.b.ANIMATIONTYPE_VECTOR2:case q.b.ANIMATIONTYPE_SIZE:case q.b.ANIMATIONTYPE_COLOR3:this._offsetsCache[r]=C.YO(Q)}this._highLimitsCache[r]=C}K=this._highLimitsCache[r],T=this._offsetsCache[r]}if(void 0===T)switch(h.dataType){case q.b.ANIMATIONTYPE_FLOAT:T=0;break;case q.b.ANIMATIONTYPE_QUATERNION:T=q.h;break;case q.b.ANIMATIONTYPE_VECTOR3:T=q.p;break;case q.b.ANIMATIONTYPE_VECTOR2:T=q.l;break;case q.b.ANIMATIONTYPE_SIZE:T=q.k;break;case q.b.ANIMATIONTYPE_COLOR3:T=q.c;break;case q.b.ANIMATIONTYPE_COLOR4:T=q.f}if(this._host&&this._host.syncRoot){const r=this._host.syncRoot;mr=O+g*((r.masterFrame-r.fromFrame)/(r.toFrame-r.fromFrame))}else mr=J>0&&O>W||J<0&&O<W?d&&0!==g?W+J%g:O:d&&0!==g?O+J%g:W;if(!P&&(C>0&&this.currentFrame>mr||C<0&&this.currentFrame<mr)||P&&U){this._onLoop();for(let r=0;r<v.length;r++)v[r].onlyOnce||(v[r].isDone=!1);this._animationState.key=C>0?0:h.getKeys().length-1}this._currentFrame=mr,this._animationState.repeatCount=0===g?0:J/g|0,this._animationState.highLimitValue=K,this._animationState.offsetValue=T}const K=h._interpolate(mr,this._animationState);if(this.setValue(K,T),v.length)for(let q=0;q<v.length;q++)if(g>=0&&mr>=v[q].frame&&v[q].frame>=O||g<0&&mr<=v[q].frame&&v[q].frame<=O){const r=v[q];r.isDone||(r.onlyOnce&&(v.splice(q,1),q--),r.isDone=!0,r.action(mr))}return d||(this._stopped=!0),d}}var d=W(12465);class v{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(r){this._weight=-1!==r?Math.min(Math.max(r,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(r){for(let O=0;O<this._runtimeAnimations.length;O++){this._runtimeAnimations[O]._prepareForSpeedRatioChange(r)}this._speedRatio=r,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(r,O){let W=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,C=arguments.length>4&&void 0!==arguments[4]&&arguments[4],T=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,h=arguments.length>6?arguments[6]:void 0,J=arguments.length>7?arguments[7]:void 0,mr=arguments.length>8?arguments[8]:void 0,d=arguments.length>9&&void 0!==arguments[9]&&arguments[9],v=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=O,this.fromFrame=W,this.toFrame=q,this.loopAnimation=C,this.onAnimationEnd=h,this.onAnimationLoop=mr,this.isAdditive=d,this.playOrder=v,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.Ch=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new Q.d,this.onAnimationLoopObservable=new Q.d,this._scene=r,J&&this.appendAnimations(O,J),this._speedRatio=T,r._activeAnimatables.push(this)}syncWith(r){if(this._syncRoot=r,r){const r=this._scene._activeAnimatables.indexOf(this);r>-1&&(this._scene._activeAnimatables.splice(r,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(r,O){for(let W=0;W<O.length;W++){const q=O[W],Q=new mr(r,q,this._scene,this);Q._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(Q)}}getAnimationByTargetProperty(r){const O=this._runtimeAnimations;for(let W=0;W<O.length;W++)if(O[W].animation.targetProperty===r)return O[W].animation;return null}getRuntimeAnimationByTargetProperty(r){const O=this._runtimeAnimations;for(let W=0;W<O.length;W++)if(O[W].animation.targetProperty===r)return O[W];return null}reset(){const r=this._runtimeAnimations;for(let O=0;O<r.length;O++)r[O].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(r){const O=this._runtimeAnimations;for(let W=0;W<O.length;W++)O[W].animation.enableBlending=!0,O[W].animation.blendingSpeed=r}disableBlending(){const r=this._runtimeAnimations;for(let O=0;O<r.length;O++)r[O].animation.enableBlending=!1}goToFrame(r){let O=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const W=this._runtimeAnimations;if(W[0]){const O=W[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??W[0].currentFrame;const q=0===this.speedRatio?0:(r-this._frameToSyncFromJump)/O*1e3/this.speedRatio;this._manualJumpDelay=-q}for(let q=0;q<W.length;q++)W[q].goToFrame(r,O?this._weight:-1);this._goToFrame=r}get paused(){return this.Ch}pause(){this.Ch||(this.Ch=!0)}restart(){this.Ch=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(r,O){let W=arguments.length>2&&void 0!==arguments[2]&&arguments[2],q=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(r||O){const Q=this._scene._activeAnimatables.indexOf(this);if(Q>-1){const C=this._runtimeAnimations;for(let W=C.length-1;W>=0;W--){const q=C[W];r&&q.animation.name!=r||(O&&!O(q.target)||(q.dispose(),C.splice(W,1)))}0==C.length&&(W||this._scene._activeAnimatables.splice(Q,1),q||this._raiseOnAnimationEnd())}}else{const r=this._scene._activeAnimatables.indexOf(this);if(r>-1){W||this._scene._activeAnimatables.splice(r,1);const O=this._runtimeAnimations;for(let r=0;r<O.length;r++)O[r].dispose();this._runtimeAnimations.length=0,q||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((r=>{this.onAnimationEndObservable.add((()=>{r(this)}),void 0,void 0,this,!0)}))}_animate(r){if(this.Ch)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=r),!0;if(null===this._localDelayOffset?(this._localDelayOffset=r,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=r-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let O=!1;const W=this._runtimeAnimations;let q;for(q=0;q<W.length;q++){const Q=W[q].animate(r-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);O=O||Q}if(this.animationStarted=O,!O){if(this.disposeOnEnd)for(q=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(q,1),q=0;q<W.length;q++)W[q].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return O}}function g(r){if(0===r.totalWeight&&0===r.totalAdditiveWeight)return r.originalValue;let O=1;const W=J.TmpVectors.eO[0],q=J.TmpVectors.eO[1],Q=J.TmpVectors.Quaternion[0];let C=0;const T=r.animations[0],h=r.originalValue;let mr=1,d=!1;if(r.totalWeight<1)mr=1-r.totalWeight,h.decompose(q,Q,W);else{if(C=1,O=r.totalWeight,mr=T.weight/O,1==mr){if(!r.totalAdditiveWeight)return T.currentValue;d=!0}T.currentValue.decompose(q,Q,W)}if(!d){q.scaleInPlace(mr),W.scaleInPlace(mr),Q.scaleInPlace(mr);for(let T=C;T<r.animations.length;T++){const C=r.animations[T];if(0===C.weight)continue;mr=C.weight/O;const h=J.TmpVectors.eO[2],d=J.TmpVectors.eO[3],v=J.TmpVectors.Quaternion[1];C.currentValue.decompose(d,v,h),d.scaleAndAddToRef(mr,q),v.scaleAndAddToRef(J.Quaternion.Dot(Q,v)>0?mr:-mr,Q),h.scaleAndAddToRef(mr,W)}Q.normalize()}for(let g=0;g<r.additiveAnimations.length;g++){const O=r.additiveAnimations[g];if(0===O.weight)continue;const C=J.TmpVectors.eO[2],T=J.TmpVectors.eO[3],h=J.TmpVectors.Quaternion[1];O.currentValue.decompose(T,h,C),T.multiplyToRef(q,T),J.eO.LerpToRef(q,T,O.weight,q),Q.multiplyToRef(h,h),J.Quaternion.SlerpToRef(Q,h,O.weight,Q),C.scaleAndAddToRef(O.weight,W)}const v=T?T._animationState.workValue:J.TmpVectors.Matrix[0].clone();return J.Matrix.ComposeToRef(q,Q,W,v),v}function K(r,O){if(0===r.totalWeight&&0===r.totalAdditiveWeight)return O;const W=r.animations[0],q=r.originalValue;let Q=O;if(0===r.totalWeight&&r.totalAdditiveWeight>0)Q.C(q);else if(1===r.animations.length){if(J.Quaternion.SlerpToRef(q,W.currentValue,Math.min(1,r.totalWeight),Q),0===r.totalAdditiveWeight)return Q}else if(r.animations.length>1){let W,C,T=1;if(r.totalWeight<1){const O=1-r.totalWeight;W=[],C=[],W.push(q),C.push(O)}else{if(2===r.animations.length&&(J.Quaternion.SlerpToRef(r.animations[0].currentValue,r.animations[1].currentValue,r.animations[1].weight/r.totalWeight,O),0===r.totalAdditiveWeight))return O;W=[],C=[],T=r.totalWeight}for(let O=0;O<r.animations.length;O++){const q=r.animations[O];W.push(q.currentValue),C.push(q.weight/T)}let h=0;for(let r=0;r<W.length;)r?(h+=C[r],J.Quaternion.SlerpToRef(Q,W[r],C[r]/h,Q),r++):(J.Quaternion.SlerpToRef(W[r],W[r+1],C[r+1]/(C[r]+C[r+1]),O),Q=O,h=C[r]+C[r+1],r+=2)}for(let C=0;C<r.additiveAnimations.length;C++){const O=r.additiveAnimations[C];0!==O.weight&&(Q.multiplyToRef(O.currentValue,J.TmpVectors.Quaternion[0]),J.Quaternion.SlerpToRef(Q,J.TmpVectors.Quaternion[0],O.weight,Q))}return Q}var U,P,b=W(12802);U=b.e,(P=h.e)&&(P.prototype.copyAnimationRange=function(r,O,W){let Q=arguments.length>3&&void 0!==arguments[3]&&arguments[3],C=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new q.b(this.name,"_matrix",r.animations[0].framePerSecond,q.b.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const T=r.animations[0].getRange(O);if(!T)return!1;const h=T.from,J=T.to,mr=r.animations[0].getKeys(),d=r.length,v=r.getParent(),g=this.getParent(),K=Q&&v&&d&&this.length&&d!==this.length,U=K&&g&&v?g.length/v.length:1,P=Q&&!g&&C&&(1!==C.x||1!==C.y||1!==C.z),b=this.animations[0].getKeys();let e,Y,G;for(let q=0,X=mr.length;q<X;q++)e=mr[q],e.frame>=h&&e.frame<=J&&(Q?(G=e.value.clone(),K?(Y=G.getTranslation(),G.setTranslation(Y.scaleInPlace(U))):P&&C?(Y=G.getTranslation(),G.setTranslation(Y.multiplyInPlace(C))):G=e.value):G=e.value,b.push({frame:e.frame+W,value:G}));return this.animations[0].createRange(O,h+W,J+W),!0}),U&&(U.prototype._animate=function(r){if(!this.animationsEnabled)return;const O=d.e.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=O}this.deltaTime=void 0!==r?r:this.useConstantAnimationDeltaTime?16:(O-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=O;const W=this._activeAnimatables;if(0===W.length)return;this._animationTime+=this.deltaTime;const Q=this._animationTime;for(let q=0;q<W.length;q++){const r=W[q];!r._animate(Q)&&r.disposeOnEnd&&q--}!function(r){if(r._registeredForLateAnimationBindings.length){for(let O=0;O<r._registeredForLateAnimationBindings.length;O++){const W=r._registeredForLateAnimationBindings.data[O];for(const r in W._lateAnimationHolders){const O=W._lateAnimationHolders[r],Q=O.animations[0],C=O.originalValue;if(void 0===C||null===C)continue;const T=q.b.AllowMatrixDecomposeForInterpolation&&C.m;let h=W[r];if(T)h=g(O);else if(void 0!==C.w)h=K(O,h||J.Quaternion.Identity());else{let r=0,W=1;const T=Q&&Q._animationState.loopMode===q.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(O.totalWeight<1)h=T?C.clone?C.clone():C:Q&&C.scale?C.scale(1-O.totalWeight):Q?C*(1-O.totalWeight):C.clone?C.clone():C;else if(Q){W=O.totalWeight;const q=Q.weight/W;h=1!==q?Q.currentValue.scale?Q.currentValue.scale(q):Q.currentValue*q:Q.currentValue,T&&(h.addToRef?h.addToRef(C,h):h+=C),r=1}for(let q=r;q<O.animations.length;q++){const r=O.animations[q],Q=r.weight/W;Q&&(r.currentValue.scaleAndAddToRef?r.currentValue.scaleAndAddToRef(Q,h):h+=r.currentValue*Q)}for(let q=0;q<O.additiveAnimations.length;q++){const r=O.additiveAnimations[q],W=r.weight;W&&(r.currentValue.scaleAndAddToRef?r.currentValue.scaleAndAddToRef(W,h):h+=r.currentValue*W)}}W[r]=h}W._lateAnimationHolders={}}r._registeredForLateAnimationBindings.reset()}}(this)},U.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((r,O)=>r.playOrder-O.playOrder))},U.prototype.beginWeightedAnimation=function(r,O,W){let q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,Q=arguments.length>4?arguments[4]:void 0,C=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,T=arguments.length>6?arguments[6]:void 0,h=arguments.length>7?arguments[7]:void 0,J=arguments.length>8?arguments[8]:void 0,mr=arguments.length>9?arguments[9]:void 0,d=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const v=this.beginAnimation(r,O,W,Q,C,T,h,!1,J,mr,d);return v.weight=q,v},U.prototype.beginAnimation=function(r,O,W,q){let Q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,C=arguments.length>5?arguments[5]:void 0,T=arguments.length>6?arguments[6]:void 0,h=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],J=arguments.length>8?arguments[8]:void 0,mr=arguments.length>9?arguments[9]:void 0,d=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(Q<0){const r=O;O=W,W=r,Q=-Q}O>W&&(Q=-Q),h&&this.stopAnimation(r,void 0,J),T||(T=new v(this,r,O,W,q,Q,C,void 0,mr,d));const g=!J||J(r);if(r.animations&&g&&T.appendAnimations(r,r.animations),r.getAnimatables){const d=r.getAnimatables();for(let r=0;r<d.length;r++)this.beginAnimation(d[r],O,W,q,Q,C,T,h,J,mr)}return T.reset(),T},U.prototype.beginHierarchyAnimation=function(r,O,W,q,Q){let C=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,T=arguments.length>6?arguments[6]:void 0,h=arguments.length>7?arguments[7]:void 0,J=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],mr=arguments.length>9?arguments[9]:void 0,d=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const v=r.getDescendants(O),g=[];g.push(this.beginAnimation(r,W,q,Q,C,T,h,J,mr,void 0,d));for(const K of v)g.push(this.beginAnimation(K,W,q,Q,C,T,h,J,mr,void 0,d));return g},U.prototype.beginDirectAnimation=function(r,O,W,q,Q){let C=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(C<0){const r=W;W=q,q=r,C=-C}return W>q&&(C=-C),new v(this,r,W,q,Q,C,arguments.length>6?arguments[6]:void 0,O,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},U.prototype.beginDirectHierarchyAnimation=function(r,O,W,q,Q,C,T,h,J){let mr=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const d=r.getDescendants(O),v=[];v.push(this.beginDirectAnimation(r,W,q,Q,C,T,h,J,mr));for(const g of d)v.push(this.beginDirectAnimation(g,W,q,Q,C,T,h,J,mr));return v},U.prototype.getAnimatableByTarget=function(r){for(let O=0;O<this._activeAnimatables.length;O++)if(this._activeAnimatables[O].target===r)return this._activeAnimatables[O];return null},U.prototype.getAllAnimatablesByTarget=function(r){const O=[];for(let W=0;W<this._activeAnimatables.length;W++)this._activeAnimatables[W].target===r&&O.push(this._activeAnimatables[W]);return O},U.prototype.stopAnimation=function(r,O,W){const q=this.getAllAnimatablesByTarget(r);for(const Q of q)Q.stop(O,W)},U.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let r=0;r<this._activeAnimatables.length;r++)this._activeAnimatables[r].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const r of this.animationGroups)r.stop()});class e{getClassName(){return"TargetedAnimation"}serialize(){const r={};return r.animation=this.animation.serialize(),r.targetId=this.target.id,r}}class Y{get mask(){return this._mask}set mask(r){this._mask!==r&&(this._mask=r,this.syncWithMask(!0))}syncWithMask(){let r=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||r){this._numActiveAnimatables=0;for(let r=0;r<this._animatables.length;++r){const O=this._animatables[r];!this.mask||this.mask.disabled||this.mask.retainsTarget(O.target.name)?(this._numActiveAnimatables++,O.paused&&O.restart()):O.paused||O.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let r=0;r<this._animatables.length;++r){const O=this._animatables[r];this.mask.retainsTarget(O.target.name)||(O.stop(),this._animatables.splice(r,1),--r)}for(let r=0;r<this._targetedAnimations.length;r++){const O=this._targetedAnimations[r];this.mask.retainsTarget(O.target.name)||(this._targetedAnimations.splice(r,1),--r)}}}get from(){return this._from}set from(r){if(this._from!==r){this._from=r;for(let r=0;r<this._animatables.length;r++){this._animatables[r].fromFrame=this._from}}}get to(){return this._to}set to(r){if(this._to!==r){this._to=r;for(let r=0;r<this._animatables.length;r++){this._animatables[r].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(r){if(this._speedRatio!==r){this._speedRatio=r;for(let r=0;r<this._animatables.length;r++){this._animatables[r].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(r){if(this._loopAnimation!==r){this._loopAnimation=r;for(let r=0;r<this._animatables.length;r++){this._animatables[r].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(r){if(this._isAdditive!==r){this._isAdditive=r;for(let r=0;r<this._animatables.length;r++){this._animatables[r].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(r){this._weight!==r&&(this._weight=r,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(r){if(this._playOrder!==r&&(this._playOrder=r,this._animatables.length>0)){for(let r=0;r<this._animatables.length;r++)this._animatables[r].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(r){if(this._enableBlending!==r&&(this._enableBlending=r,null!==r))for(let O=0;O<this._targetedAnimations.length;++O)this._targetedAnimations[O].animation.enableBlending=r}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(r){if(this._blendingSpeed!==r&&(this._blendingSpeed=r,null!==r))for(let O=0;O<this._targetedAnimations.length;++O)this._targetedAnimations[O].animation.blendingSpeed=r}getLength(r,O){r=r??this._from;return((O=O??this._to)-r)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(r){let O=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],W=arguments.length>2&&void 0!==arguments[2]&&arguments[2],q=arguments.length>3?arguments[3]:void 0;if(0===r.length)return null;q=q??r[0].weight;let Q=Number.MAX_VALUE,C=-Number.MAX_VALUE;if(W)for(const h of r)h.from<Q&&(Q=h.from),h.to>C&&(C=h.to);const T=new Y(r[0].name+"_merged",r[0]._scene,q);for(const h of r){W&&h.normalize(Q,C);for(const r of h.targetedAnimations)T.addTargetedAnimation(r.animation,r.target);O&&h.dispose()}return T}constructor(r){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,W=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=r,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new Q.d,this.onAnimationLoopObservable=new Q.d,this.onAnimationGroupLoopObservable=new Q.d,this.onAnimationGroupEndObservable=new Q.d,this.onAnimationGroupPauseObservable=new Q.d,this.onAnimationGroupPlayObservable=new Q.d,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=O||C.d.LastCreatedScene,this._weight=W,this._playOrder=q,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(r,O){const W=new e;W.animation=r,W.target=O;const q=r.getKeys();return this._from>q[0].frame&&(this._from=q[0].frame),this._to<q[q.length-1].frame&&(this._to=q[q.length-1].frame),null!==this._enableBlending&&(r.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(r.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(W),this._shouldStart=!0,W}removeTargetedAnimation(r){for(let O=this._targetedAnimations.length-1;O>-1;O--){this._targetedAnimations[O].animation===r&&this._targetedAnimations.splice(O,1)}}normalize(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==r&&(r=this._from),null==O&&(O=this._to);for(let W=0;W<this._targetedAnimations.length;W++){const q=this._targetedAnimations[W].animation.getKeys(),Q=q[0],C=q[q.length-1];if(Q.frame>r){const O={frame:r,value:Q.value,inTangent:Q.inTangent,outTangent:Q.outTangent,interpolation:Q.interpolation};q.splice(0,0,O)}if(C.frame<O){const r={frame:O,value:C.value,inTangent:C.inTangent,outTangent:C.outTangent,interpolation:C.interpolation};q.push(r)}}return this._from=r,this._to=O,this}_processLoop(r,O,W){r.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(O),this._animationLoopFlags[W]||(this._animationLoopFlags[W]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let r=arguments.length>0&&void 0!==arguments[0]&&arguments[0],O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,W=arguments.length>2?arguments[2]:void 0,q=arguments.length>3?arguments[3]:void 0,Q=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=r,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let C=0;C<this._targetedAnimations.length;C++){const T=this._targetedAnimations[C],h=this._scene.beginDirectAnimation(T.target,[T.animation],void 0!==W?W:this._from,void 0!==q?q:this._to,r,O,void 0,void 0,void 0!==Q?Q:this._isAdditive);h.weight=this._weight,h.playOrder=this._playOrder,h.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(T),this._checkAnimationGroupEnded(h)},this._processLoop(h,T,C),this._animatables.push(h)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=O,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let r=0;r<this._animatables.length;r++){this._animatables[r].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(r){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==r&&(this.loopAnimation=r),this.restart()):(this.stop(),this.start(r,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let r=0;r<this._animatables.length;r++){this._animatables[r].reset()}return this}restart(){if(!this._isStarted)return this;for(let r=0;r<this._animatables.length;r++){this._animatables[r].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let r=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const O=this._animatables.slice();for(let q=0;q<O.length;q++)O[q].stop(void 0,void 0,!0,r);let W=0;for(let q=0;q<this._scene._activeAnimatables.length;q++){const O=this._scene._activeAnimatables[q];O._runtimeAnimations.length>0?this._scene._activeAnimatables[W++]=O:r&&this._checkAnimationGroupEnded(O,r)}return this._scene._activeAnimatables.length=W,this._isStarted=!1,this}setWeightForAllAnimatables(r){for(let O=0;O<this._animatables.length;O++){this._animatables[O].weight=r}return this}syncAllAnimationsWith(r){for(let O=0;O<this._animatables.length;O++){this._animatables[O].syncWith(r)}return this}goToFrame(r){let O=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let W=0;W<this._animatables.length;W++){this._animatables[W].goToFrame(r,O)}return this}getCurrentFrame(){var r;return(null===(r=this.animatables[0])||void 0===r?void 0:r.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const r=this._scene.animationGroups.indexOf(this);if(r>-1&&this._scene.animationGroups.splice(r,1),this._parentContainer){const r=this._parentContainer.animationGroups.indexOf(this);r>-1&&this._parentContainer.animationGroups.splice(r,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(r){let O=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const W=this._animatables.indexOf(r);W>-1&&this._animatables.splice(W,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,O||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(r,O){let W=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const q=new Y(r||this.name,this._scene,this._weight,this._playOrder);q._from=this.from,q._to=this.to,q._speedRatio=this.speedRatio,q._loopAnimation=this.loopAnimation,q._isAdditive=this.isAdditive,q._enableBlending=this.enableBlending,q._blendingSpeed=this.blendingSpeed,q.metadata=this.metadata,q.mask=this.mask;for(const Q of this._targetedAnimations)q.addTargetedAnimation(W?Q.animation.clone():Q.animation,O?O(Q.target):Q.target);return q}serialize(){const r={};r.name=this.name,r.from=this.from,r.to=this.to,r.speedRatio=this.speedRatio,r.loopAnimation=this.loopAnimation,r.isAdditive=this.isAdditive,r.weight=this.weight,r.playOrder=this.playOrder,r.enableBlending=this.enableBlending,r.blendingSpeed=this.blendingSpeed,r.targetedAnimations=[];for(let O=0;O<this.targetedAnimations.length;O++){const W=this.targetedAnimations[O];r.targetedAnimations[O]=W.serialize()}return T.e&&T.e.HasTags(this)&&(r.tags=T.e.GetTags(this)),this.metadata&&(r.metadata=this.metadata),r}static Parse(r,O){const W=new Y(r.name,O,r.weight,r.playOrder);for(let Q=0;Q<r.targetedAnimations.length;Q++){const C=r.targetedAnimations[Q],T=q.b.Parse(C.animation),h=C.targetId;if("influence"===C.animation.property){const r=O.getMorphTargetById(h);r&&W.addTargetedAnimation(T,r)}else{const r=O.getNodeById(h);null!=r&&W.addTargetedAnimation(T,r)}}return T.e&&T.e.AddTagsTo(W,r.tags),null!==r.from&&null!==r.to&&W.normalize(r.from,r.to),void 0!==r.speedRatio&&(W._speedRatio=r.speedRatio),void 0!==r.loopAnimation&&(W._loopAnimation=r.loopAnimation),void 0!==r.isAdditive&&(W._isAdditive=r.isAdditive),void 0!==r.weight&&(W._weight=r.weight),void 0!==r.playOrder&&(W._playOrder=r.playOrder),void 0!==r.enableBlending&&(W._enableBlending=r.enableBlending),void 0!==r.blendingSpeed&&(W._blendingSpeed=r.blendingSpeed),void 0!==r.metadata&&(W.metadata=r.metadata),W}static MakeAnimationAdditive(r,O,W){let Q;Q="object"===typeof O?O:{referenceFrame:O,range:W,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let C=r;Q.cloneOriginalAnimationGroup&&(C=r.clone(Q.clonedAnimationGroupName||C.name));const T=C.targetedAnimations;for(let h=0;h<T.length;h++){const r=T[h];r.animation=q.b.MakeAnimationAdditive(r.animation,Q)}if(C.isAdditive=!0,Q.clipKeys){let r=Number.MAX_VALUE,O=-Number.MAX_VALUE;const W=C.targetedAnimations;for(let q=0;q<W.length;q++){const Q=W[q].animation.getKeys();r>Q[0].frame&&(r=Q[0].frame),O<Q[Q.length-1].frame&&(O=Q[Q.length-1].frame)}C._from=r,C._to=O}return C}static ClipKeys(r,O,W,q,Q){const C=r.clone(q||r.name);return Y.ClipKeysInPlace(C,O,W,Q)}static ClipKeysInPlace(r,O,W,q){return Y.ClipInPlace(r,O,W,q,!1)}static ClipFrames(r,O,W,q,Q){const C=r.clone(q||r.name);return Y.ClipFramesInPlace(C,O,W,Q)}static ClipFramesInPlace(r,O,W,q){return Y.ClipInPlace(r,O,W,q,!0)}static ClipInPlace(r,O,W,q){let Q=arguments.length>4&&void 0!==arguments[4]&&arguments[4],C=Number.MAX_VALUE,T=-Number.MAX_VALUE;const h=r.targetedAnimations;for(let J=0;J<h.length;J++){const r=h[J],mr=q?r.animation:r.animation.clone();Q&&(mr.createKeyForFrame(O),mr.createKeyForFrame(W));const d=mr.getKeys(),v=[];let g=Number.MAX_VALUE;for(let q=0;q<d.length;q++){const r=d[q];if(!Q&&q>=O&&q<=W||Q&&r.frame>=O&&r.frame<=W){const O={frame:r.frame,value:r.value.clone?r.value.clone():r.value,inTangent:r.inTangent,outTangent:r.outTangent,interpolation:r.interpolation,lockedTangent:r.lockedTangent};g===Number.MAX_VALUE&&(g=O.frame),O.frame-=g,v.push(O)}}0!==v.length?(C>v[0].frame&&(C=v[0].frame),T<v[v.length-1].frame&&(T=v[v.length-1].frame),mr.setKeys(v,!0),r.animation=mr):(h.splice(J,1),J--)}return r._from=C,r._to=T,r}getClassName(){return"AnimationGroup"}toString(r){let O="Name: "+this.name;return O+=", type: "+this.getClassName(),r&&(O+=", from: "+this._from,O+=", to: "+this._to,O+=", isStarted: "+this._isStarted,O+=", speedRatio: "+this._speedRatio,O+=", targetedAnimations length: "+this._targetedAnimations.length,O+=", animatables length: "+this._animatables),O}}}}]);