"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[78],{14223:(u,F,z)=>{z.r(F),z.d(F,{FlowGraphForLoopBlock:()=>G});var p=z(13003),b=z(12952),R=z(668),c=z(12986),I=z(12944);class G extends p.e{constructor(u){super(u),this.startIndex=this.registerDataInput("startIndex",b.e,0),this.endIndex=this.registerDataInput("endIndex",b.e),this.step=this.registerDataInput("step",b.t,1),this.index=this.registerDataOutput("index",b.l,new I.d((0,c.r)((null===u||void 0===u?void 0:u.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(u){var F;const z=(0,c.r)(this.startIndex.getValue(u)),p=this.step.getValue(u);let b=(0,c.r)(this.endIndex.getValue(u));for(let R=z;R<b&&(this.index.setValue(new I.d(R),u),this.executionFlow._activateSignal(u),b=(0,c.r)(this.endIndex.getValue(u)),!(R>G.MaxLoopIterations*p));R+=p);null!==(F=this.config)&&void 0!==F&&F.incrementIndexWhenLoopDone&&this.index.setValue(new I.d((0,c.r)(this.index.getValue(u))+p),u),this.completed._activateSignal(u)}getClassName(){return"FlowGraphForLoopBlock"}}G.MaxLoopIterations=1e3,(0,R.h)("FlowGraphForLoopBlock",G)}}]);