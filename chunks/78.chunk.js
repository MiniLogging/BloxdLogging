"use strict";(self["6xhfpmwgjr5"]=self["6xhfpmwgjr5"]||[]).push([[78],{16397:(P,a,R)=>{R.r(a),R.d(a,{_IESTextureLoader:()=>j});var S=R(14184);function A(P){return P.split(" ").filter((P=>""!==P)).map((P=>parseFloat(P)))}function Z(P,a,R){for(;R.length!==a;){const a=A(P.lines[P.index++]);R.push(...a)}}function p(P,a,R){let A=0,Z=0,p=0,j=0,U=0,Q=0;for(let S=0;S<P.numberOfHorizontalAngles-1;S++)if(R<P.horizontalAngles[S+1]||S===P.numberOfHorizontalAngles-2){Z=S,p=P.horizontalAngles[S],j=P.horizontalAngles[S+1];break}for(let S=0;S<P.numberOfVerticalAngles-1;S++)if(a<P.verticalAngles[S+1]||S===P.numberOfVerticalAngles-2){A=S,U=P.verticalAngles[S],Q=P.verticalAngles[S+1];break}const h=j-p,l=Q-U;if(0===l)return 0;const V=0===h?0:(R-p)/h,f=(a-U)/l,O=0===h?Z:Z+1,q=(0,S.i)(P.candelaValues[Z][A],P.candelaValues[O][A],V),y=(0,S.i)(P.candelaValues[Z][A+1],P.candelaValues[O][A+1],V);return(0,S.i)(q,y,f)}class j{constructor(){this.supportCascades=!1}loadCubeData(){throw".ies not supported in Cube."}loadData(P,a,R){const S=function(P){const a={lines:new TextDecoder("utf-8").decode(P).split("\n"),index:0},R={version:a.lines[0],candelaValues:[],horizontalAngles:[],verticalAngles:[],numberOfHorizontalAngles:0,numberOfVerticalAngles:0};for(a.index=1;a.lines.length>0&&!a.lines[a.index].includes("TILT=");)a.index++;a.lines[a.index].includes("INCLUDE"),a.index++;const S=A(a.lines[a.index++]);R.numberOfLights=S[0],R.lumensPerLamp=S[1],R.candelaMultiplier=S[2],R.numberOfVerticalAngles=S[3],R.numberOfHorizontalAngles=S[4],R.photometricType=S[5],R.unitsType=S[6],R.width=S[7],R.length=S[8],R.height=S[9];const j=A(a.lines[a.index++]);R.ballastFactor=j[0],R.fileGenerationType=j[1],R.inputWatts=j[2];for(let A=0;A<R.numberOfHorizontalAngles;A++)R.candelaValues[A]=[];Z(a,R.numberOfVerticalAngles,R.verticalAngles),Z(a,R.numberOfHorizontalAngles,R.horizontalAngles);for(let A=0;A<R.numberOfHorizontalAngles;A++)Z(a,R.numberOfVerticalAngles,R.candelaValues[A]);let U=-1;for(let A=0;A<R.numberOfHorizontalAngles;A++)for(let P=0;P<R.numberOfVerticalAngles;P++)R.candelaValues[A][P]*=R.candelaValues[A][P]*R.candelaMultiplier*R.ballastFactor*R.fileGenerationType,U=Math.max(U,R.candelaValues[A][P]);if(U>0)for(let A=0;A<R.numberOfHorizontalAngles;A++)for(let P=0;P<R.numberOfVerticalAngles;P++)R.candelaValues[A][P]/=U;const Q=180,h=360,l=new Float32Array(64800),V=R.horizontalAngles[0],f=R.horizontalAngles[R.numberOfHorizontalAngles-1];for(let A=0;A<64800;A++){let P=A%h;const a=Math.floor(A/h);f-V!==0&&(P<V||P>=f)&&(P%=2*f,P>f&&(P=2*f-P)),l[a+P*Q]=p(R,a,P)}return{width:180,height:1,data:l}}(new Uint8Array(P.buffer,P.byteOffset,P.byteLength));R(S.width,S.height,!1,!1,(()=>{const P=a.getEngine();a.type=1,a.format=6,a._gammaSpace=!1,P._uploadDataToTextureDirectly(a,S.data)}))}}}}]);