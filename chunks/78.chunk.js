"use strict";(self.n4ygn1cq9vg=self.n4ygn1cq9vg||[]).push([[78],{15598:(e,d,v)=>{v.r(d),v.d(d,{AnimationGroup:()=>C,TargetedAnimation:()=>D});var P=v(12948),p=v(12248),L=v(12281),B=v(12457),X=v(14116),z=v(12420);class W{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(e,d,v,p){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=d,this._target=e,this._scene=v,this._host=p,this._activeTargets=[],d._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===P.e.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=z.Matrix.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const e={frame:0,value:this._minValue};this._keys.splice(0,0,e)}if(this._target instanceof Array){let e=0;for(const d of this._target)this._preparePath(d,e),this._getOriginalValues(e),e++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const L=d.getEvents();if(L&&L.length>0)for(const P of L)this._events.push(P._clone());this._enableBlending=e&&e.animationPropertiesOverride?e.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(e){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const v=this._animation.targetPropertyPath;if(v.length>1){let P=e;for(let e=0;e<v.length-1;e++){const d=v[e];if(P=P[d],void 0===P)throw new Error(`Invalid property (${d}) in property path (${v.join(".")})`)}this._targetPath=v[v.length-1],this._activeTargets[d]=P}else this._targetPath=v[0],this._activeTargets[d]=e;if(void 0===this._activeTargets[d][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${v.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let e=0;for(const d of this._target)void 0!==this._originalValue[e]&&this._setValue(d,this._activeTargets[e],this._originalValue[e],-1,e),e++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let e=0;e<this._events.length;e++)this._events[e].isDone=!1}isStopped(){return this._stopped}dispose(){const e=this._animation.runtimeAnimations.indexOf(this);e>-1&&this._animation.runtimeAnimations.splice(e,1)}setValue(e,d){if(this._targetIsArray)for(let v=0;v<this._target.length;v++){const P=this._target[v];this._setValue(P,this._activeTargets[v],e,d,v)}else this._setValue(this._target,this._directTarget,e,d,0)}_getOriginalValues(){let e,d=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const v=this._activeTargets[d];e=v.getLocalMatrix&&"_matrix"===this._targetPath?v.getLocalMatrix():v[this._targetPath],e&&e.clone?this._originalValue[d]=e.clone():this._originalValue[d]=e}_registerTargetForLateAnimationBinding(e,d){const v=e.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(v),v._lateAnimationHolders||(v._lateAnimationHolders={}),v._lateAnimationHolders[e.targetPath]||(v._lateAnimationHolders[e.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:d}),e.isAdditive?(v._lateAnimationHolders[e.targetPath].additiveAnimations.push(e),v._lateAnimationHolders[e.targetPath].totalAdditiveWeight+=e.weight):(v._lateAnimationHolders[e.targetPath].animations.push(e),v._lateAnimationHolders[e.targetPath].totalWeight+=e.weight)}_setValue(e,d,v,p,L){if(this._currentActiveTarget=d,this._weight=p,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const e=d[this._targetPath];e.clone?this._originalBlendValue=e.clone():this._originalBlendValue=e}this._originalBlendValue.m?P.e.AllowMatrixDecomposeForInterpolation?this._currentValue?z.Matrix.DecomposeLerpToRef(this._originalBlendValue,v,this._blendingFactor,this._currentValue):this._currentValue=z.Matrix.DecomposeLerp(this._originalBlendValue,v,this._blendingFactor):this._currentValue?z.Matrix.LerpToRef(this._originalBlendValue,v,this._blendingFactor,this._currentValue):this._currentValue=z.Matrix.Lerp(this._originalBlendValue,v,this._blendingFactor):this._currentValue=P.e._UniversalLerp(this._originalBlendValue,v,this._blendingFactor);const p=e&&e.animationPropertiesOverride?e.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=p}else this._currentValue?this._currentValue.L?this._currentValue.L(v):this._currentValue=v:null!==v&&void 0!==v&&v.clone?this._currentValue=v.clone():this._currentValue=v;-1!==p?this._registerTargetForLateAnimationBinding(this,this._originalValue[L]):this._animationState.loopMode===P.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[L],d[this._targetPath]):d[this._targetPath]=this._originalValue[L]+this._currentValue:d[this._targetPath]=this._currentValue,e.HW&&e.HW(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(e){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const v=this._animation.getKeys();e<v[0].frame?e=v[0].frame:e>v[v.length-1].frame&&(e=v[v.length-1].frame);const P=this._events;if(P.length)for(let L=0;L<P.length;L++)P[L].onlyOnce||(P[L].isDone=P[L].frame<e);this._currentFrame=e;const p=this._animation._interpolate(e,this._animationState);this.setValue(p,d)}_prepareForSpeedRatioChange(e){const d=this._previousElapsedTime*(this._animation.framePerSecond*e)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-d}animate(e,d,v,p,L){let B=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const X=this._animation,z=X.targetPropertyPath;if(!z||z.length<1)return this._stopped=!0,!1;let W,V=!0;const k=this._events;let g=0;if(this._coreRuntimeAnimation)g=v-d,W=this._coreRuntimeAnimation.currentFrame,this._currentFrame=W,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let B;(d<this._minFrame||d>this._maxFrame)&&(d=this._minFrame),(v<this._minFrame||v>this._maxFrame)&&(v=this._maxFrame),g=v-d;let z=e*(X.framePerSecond*L)/1e3+this._absoluteFrameOffset,F=0,w=!1;const G=p&&this._animationState.loopMode===P.e.ANIMATIONLOOPMODE_YOYO;if(G){const e=(z-d)/g,v=Math.sin(e*Math.PI);z=Math.abs(v)*g+d;const P=v>=0?1:-1;this._yoyoDirection!==P&&(w=!0),this._yoyoDirection=P}if(this._previousElapsedTime=e,this._previousAbsoluteFrame=z,!p&&v>=d&&(z>=g&&L>0||z<=0&&L<0))V=!1,F=X._getKeyValue(this._maxValue);else if(!p&&d>=v&&(z<=g&&L<0||z>=0&&L>0))V=!1,F=X._getKeyValue(this._minValue);else if(this._animationState.loopMode!==P.e.ANIMATIONLOOPMODE_CYCLE){const e=v.toString()+d.toString();if(!this._offsetsCache[e]){this._animationState.repeatCount=0,this._animationState.loopMode=P.e.ANIMATIONLOOPMODE_CYCLE;const p=X._interpolate(d,this._animationState),L=X._interpolate(v,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),X.dataType){case P.e.ANIMATIONTYPE_FLOAT:this._offsetsCache[e]=L-p;break;case P.e.ANIMATIONTYPE_QUATERNION:case P.e.ANIMATIONTYPE_VECTOR3:case P.e.ANIMATIONTYPE_VECTOR2:case P.e.ANIMATIONTYPE_SIZE:case P.e.ANIMATIONTYPE_COLOR3:this._offsetsCache[e]=L.Zd(p)}this._highLimitsCache[e]=L}F=this._highLimitsCache[e],B=this._offsetsCache[e]}if(void 0===B)switch(X.dataType){case P.e.ANIMATIONTYPE_FLOAT:B=0;break;case P.e.ANIMATIONTYPE_QUATERNION:B=P.m;break;case P.e.ANIMATIONTYPE_VECTOR3:B=P.w;break;case P.e.ANIMATIONTYPE_VECTOR2:B=P.s;break;case P.e.ANIMATIONTYPE_SIZE:B=P.q;break;case P.e.ANIMATIONTYPE_COLOR3:B=P.g;break;case P.e.ANIMATIONTYPE_COLOR4:B=P.i}if(this._host&&this._host.syncRoot){const e=this._host.syncRoot;W=d+g*((e.masterFrame-e.fromFrame)/(e.toFrame-e.fromFrame))}else W=z>0&&d>v||z<0&&d<v?V&&0!==g?v+z%g:d:V&&0!==g?d+z%g:v;if(!G&&(L>0&&this.currentFrame>W||L<0&&this.currentFrame<W)||G&&w){this._onLoop();for(let e=0;e<k.length;e++)k[e].onlyOnce||(k[e].isDone=!1);this._animationState.key=L>0?0:X.getKeys().length-1}this._currentFrame=W,this._animationState.repeatCount=0===g?0:z/g|0,this._animationState.highLimitValue=F,this._animationState.offsetValue=B}const F=X._interpolate(W,this._animationState);if(this.setValue(F,B),k.length)for(let P=0;P<k.length;P++)if(g>=0&&W>=k[P].frame&&k[P].frame>=d||g<0&&W<=k[P].frame&&k[P].frame<=d){const e=k[P];e.isDone||(e.onlyOnce&&(k.splice(P,1),P--),e.isDone=!0,e.action(W))}return V||(this._stopped=!0),V}}var V=v(12265);class k{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(e){this._weight=-1!==e?Math.min(Math.max(e,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(e){for(let d=0;d<this._runtimeAnimations.length;d++){this._runtimeAnimations[d]._prepareForSpeedRatioChange(e)}this._speedRatio=e,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(e,d){let v=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,P=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,L=arguments.length>4&&void 0!==arguments[4]&&arguments[4],B=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,X=arguments.length>6?arguments[6]:void 0,z=arguments.length>7?arguments[7]:void 0,W=arguments.length>8?arguments[8]:void 0,V=arguments.length>9&&void 0!==arguments[9]&&arguments[9],k=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=d,this.fromFrame=v,this.toFrame=P,this.loopAnimation=L,this.onAnimationEnd=X,this.onAnimationLoop=W,this.isAdditive=V,this.playOrder=k,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.CX=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new p.d,this.onAnimationLoopObservable=new p.d,this._scene=e,z&&this.appendAnimations(d,z),this._speedRatio=B,e._activeAnimatables.push(this)}syncWith(e){if(this._syncRoot=e,e){const e=this._scene._activeAnimatables.indexOf(this);e>-1&&(this._scene._activeAnimatables.splice(e,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(e,d){for(let v=0;v<d.length;v++){const P=d[v],p=new W(e,P,this._scene,this);p._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(p)}}getAnimationByTargetProperty(e){const d=this._runtimeAnimations;for(let v=0;v<d.length;v++)if(d[v].animation.targetProperty===e)return d[v].animation;return null}getRuntimeAnimationByTargetProperty(e){const d=this._runtimeAnimations;for(let v=0;v<d.length;v++)if(d[v].animation.targetProperty===e)return d[v];return null}reset(){const e=this._runtimeAnimations;for(let d=0;d<e.length;d++)e[d].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(e){const d=this._runtimeAnimations;for(let v=0;v<d.length;v++)d[v].animation.enableBlending=!0,d[v].animation.blendingSpeed=e}disableBlending(){const e=this._runtimeAnimations;for(let d=0;d<e.length;d++)e[d].animation.enableBlending=!1}goToFrame(e){let d=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const v=this._runtimeAnimations;if(v[0]){const d=v[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??v[0].currentFrame;const P=0===this.speedRatio?0:(e-this._frameToSyncFromJump)/d*1e3/this.speedRatio;this._manualJumpDelay=-P}for(let P=0;P<v.length;P++)v[P].goToFrame(e,d?this._weight:-1);this._goToFrame=e}get paused(){return this.CX}pause(){this.CX||(this.CX=!0)}restart(){this.CX=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(e,d){let v=arguments.length>2&&void 0!==arguments[2]&&arguments[2],P=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(e||d){const p=this._scene._activeAnimatables.indexOf(this);if(p>-1){const L=this._runtimeAnimations;for(let v=L.length-1;v>=0;v--){const P=L[v];e&&P.animation.name!=e||(d&&!d(P.target)||(P.dispose(),L.splice(v,1)))}0==L.length&&(v||this._scene._activeAnimatables.splice(p,1),P||this._raiseOnAnimationEnd())}}else{const e=this._scene._activeAnimatables.indexOf(this);if(e>-1){v||this._scene._activeAnimatables.splice(e,1);const d=this._runtimeAnimations;for(let e=0;e<d.length;e++)d[e].dispose();this._runtimeAnimations.length=0,P||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((e=>{this.onAnimationEndObservable.add((()=>{e(this)}),void 0,void 0,this,!0)}))}_animate(e){if(this.CX)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=e),!0;if(null===this._localDelayOffset?(this._localDelayOffset=e,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=e-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let d=!1;const v=this._runtimeAnimations;let P;for(P=0;P<v.length;P++){const p=v[P].animate(e-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);d=d||p}if(this.animationStarted=d,!d){if(this.disposeOnEnd)for(P=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(P,1),P=0;P<v.length;P++)v[P].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return d}}function g(e){if(0===e.totalWeight&&0===e.totalAdditiveWeight)return e.originalValue;let d=1;const v=z.TmpVectors.mv[0],P=z.TmpVectors.mv[1],p=z.TmpVectors.Quaternion[0];let L=0;const B=e.animations[0],X=e.originalValue;let W=1,V=!1;if(e.totalWeight<1)W=1-e.totalWeight,X.decompose(P,p,v);else{if(L=1,d=e.totalWeight,W=B.weight/d,1==W){if(!e.totalAdditiveWeight)return B.currentValue;V=!0}B.currentValue.decompose(P,p,v)}if(!V){P.scaleInPlace(W),v.scaleInPlace(W),p.scaleInPlace(W);for(let B=L;B<e.animations.length;B++){const L=e.animations[B];if(0===L.weight)continue;W=L.weight/d;const X=z.TmpVectors.mv[2],V=z.TmpVectors.mv[3],k=z.TmpVectors.Quaternion[1];L.currentValue.decompose(V,k,X),V.scaleAndAddToRef(W,P),k.scaleAndAddToRef(z.Quaternion.Dot(p,k)>0?W:-W,p),X.scaleAndAddToRef(W,v)}p.normalize()}for(let g=0;g<e.additiveAnimations.length;g++){const d=e.additiveAnimations[g];if(0===d.weight)continue;const L=z.TmpVectors.mv[2],B=z.TmpVectors.mv[3],X=z.TmpVectors.Quaternion[1];d.currentValue.decompose(B,X,L),B.multiplyToRef(P,B),z.mv.LerpToRef(P,B,d.weight,P),p.multiplyToRef(X,X),z.Quaternion.SlerpToRef(p,X,d.weight,p),L.scaleAndAddToRef(d.weight,v)}const k=B?B._animationState.workValue:z.TmpVectors.Matrix[0].clone();return z.Matrix.ComposeToRef(P,p,v,k),k}function F(e,d){if(0===e.totalWeight&&0===e.totalAdditiveWeight)return d;const v=e.animations[0],P=e.originalValue;let p=d;if(0===e.totalWeight&&e.totalAdditiveWeight>0)p.L(P);else if(1===e.animations.length){if(z.Quaternion.SlerpToRef(P,v.currentValue,Math.min(1,e.totalWeight),p),0===e.totalAdditiveWeight)return p}else if(e.animations.length>1){let v,L,B=1;if(e.totalWeight<1){const d=1-e.totalWeight;v=[],L=[],v.push(P),L.push(d)}else{if(2===e.animations.length&&(z.Quaternion.SlerpToRef(e.animations[0].currentValue,e.animations[1].currentValue,e.animations[1].weight/e.totalWeight,d),0===e.totalAdditiveWeight))return d;v=[],L=[],B=e.totalWeight}for(let d=0;d<e.animations.length;d++){const P=e.animations[d];v.push(P.currentValue),L.push(P.weight/B)}let X=0;for(let e=0;e<v.length;)e?(X+=L[e],z.Quaternion.SlerpToRef(p,v[e],L[e]/X,p),e++):(z.Quaternion.SlerpToRef(v[e],v[e+1],L[e+1]/(L[e]+L[e+1]),d),p=d,X=L[e]+L[e+1],e+=2)}for(let L=0;L<e.additiveAnimations.length;L++){const d=e.additiveAnimations[L];0!==d.weight&&(p.multiplyToRef(d.currentValue,z.TmpVectors.Quaternion[0]),z.Quaternion.SlerpToRef(p,z.TmpVectors.Quaternion[0],d.weight,p))}return p}var w,G,U=v(12653);w=U.d,(G=X.c)&&(G.prototype.copyAnimationRange=function(e,d,v){let p=arguments.length>3&&void 0!==arguments[3]&&arguments[3],L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new P.e(this.name,"_matrix",e.animations[0].framePerSecond,P.e.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const B=e.animations[0].getRange(d);if(!B)return!1;const X=B.from,z=B.to,W=e.animations[0].getKeys(),V=e.length,k=e.getParent(),g=this.getParent(),F=p&&k&&V&&this.length&&V!==this.length,w=F&&g&&k?g.length/k.length:1,G=p&&!g&&L&&(1!==L.x||1!==L.y||1!==L.z),U=this.animations[0].getKeys();let D,C,q;for(let P=0,h=W.length;P<h;P++)D=W[P],D.frame>=X&&D.frame<=z&&(p?(q=D.value.clone(),F?(C=q.getTranslation(),q.setTranslation(C.scaleInPlace(w))):G&&L?(C=q.getTranslation(),q.setTranslation(C.multiplyInPlace(L))):q=D.value):q=D.value,U.push({frame:D.frame+v,value:q}));return this.animations[0].createRange(d,X+v,z+v),!0}),w&&(w.prototype._animate=function(e){if(!this.animationsEnabled)return;const d=V.d.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=d}this.deltaTime=void 0!==e?e:this.useConstantAnimationDeltaTime?16:(d-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=d;const v=this._activeAnimatables;if(0===v.length)return;this._animationTime+=this.deltaTime;const p=this._animationTime;for(let P=0;P<v.length;P++){const e=v[P];!e._animate(p)&&e.disposeOnEnd&&P--}!function(e){if(e._registeredForLateAnimationBindings.length){for(let d=0;d<e._registeredForLateAnimationBindings.length;d++){const v=e._registeredForLateAnimationBindings.data[d];for(const e in v._lateAnimationHolders){const d=v._lateAnimationHolders[e],p=d.animations[0],L=d.originalValue;if(void 0===L||null===L)continue;const B=P.e.AllowMatrixDecomposeForInterpolation&&L.m;let X=v[e];if(B)X=g(d);else if(void 0!==L.w)X=F(d,X||z.Quaternion.Identity());else{let e=0,v=1;const B=p&&p._animationState.loopMode===P.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(d.totalWeight<1)X=B?L.clone?L.clone():L:p&&L.scale?L.scale(1-d.totalWeight):p?L*(1-d.totalWeight):L.clone?L.clone():L;else if(p){v=d.totalWeight;const P=p.weight/v;X=1!==P?p.currentValue.scale?p.currentValue.scale(P):p.currentValue*P:p.currentValue,B&&(X.addToRef?X.addToRef(L,X):X+=L),e=1}for(let P=e;P<d.animations.length;P++){const e=d.animations[P],p=e.weight/v;p&&(e.currentValue.scaleAndAddToRef?e.currentValue.scaleAndAddToRef(p,X):X+=e.currentValue*p)}for(let P=0;P<d.additiveAnimations.length;P++){const e=d.additiveAnimations[P],v=e.weight;v&&(e.currentValue.scaleAndAddToRef?e.currentValue.scaleAndAddToRef(v,X):X+=e.currentValue*v)}}v[e]=X}v._lateAnimationHolders={}}e._registeredForLateAnimationBindings.reset()}}(this)},w.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((e,d)=>e.playOrder-d.playOrder))},w.prototype.beginWeightedAnimation=function(e,d,v){let P=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,p=arguments.length>4?arguments[4]:void 0,L=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,B=arguments.length>6?arguments[6]:void 0,X=arguments.length>7?arguments[7]:void 0,z=arguments.length>8?arguments[8]:void 0,W=arguments.length>9?arguments[9]:void 0,V=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const k=this.beginAnimation(e,d,v,p,L,B,X,!1,z,W,V);return k.weight=P,k},w.prototype.beginAnimation=function(e,d,v,P){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,L=arguments.length>5?arguments[5]:void 0,B=arguments.length>6?arguments[6]:void 0,X=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],z=arguments.length>8?arguments[8]:void 0,W=arguments.length>9?arguments[9]:void 0,V=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(p<0){const e=d;d=v,v=e,p=-p}d>v&&(p=-p),X&&this.stopAnimation(e,void 0,z),B||(B=new k(this,e,d,v,P,p,L,void 0,W,V));const g=!z||z(e);if(e.animations&&g&&B.appendAnimations(e,e.animations),e.getAnimatables){const V=e.getAnimatables();for(let e=0;e<V.length;e++)this.beginAnimation(V[e],d,v,P,p,L,B,X,z,W)}return B.reset(),B},w.prototype.beginHierarchyAnimation=function(e,d,v,P,p){let L=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,B=arguments.length>6?arguments[6]:void 0,X=arguments.length>7?arguments[7]:void 0,z=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],W=arguments.length>9?arguments[9]:void 0,V=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const k=e.getDescendants(d),g=[];g.push(this.beginAnimation(e,v,P,p,L,B,X,z,W,void 0,V));for(const F of k)g.push(this.beginAnimation(F,v,P,p,L,B,X,z,W,void 0,V));return g},w.prototype.beginDirectAnimation=function(e,d,v,P,p){let L=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(L<0){const e=v;v=P,P=e,L=-L}return v>P&&(L=-L),new k(this,e,v,P,p,L,arguments.length>6?arguments[6]:void 0,d,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},w.prototype.beginDirectHierarchyAnimation=function(e,d,v,P,p,L,B,X,z){let W=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const V=e.getDescendants(d),k=[];k.push(this.beginDirectAnimation(e,v,P,p,L,B,X,z,W));for(const g of V)k.push(this.beginDirectAnimation(g,v,P,p,L,B,X,z,W));return k},w.prototype.getAnimatableByTarget=function(e){for(let d=0;d<this._activeAnimatables.length;d++)if(this._activeAnimatables[d].target===e)return this._activeAnimatables[d];return null},w.prototype.getAllAnimatablesByTarget=function(e){const d=[];for(let v=0;v<this._activeAnimatables.length;v++)this._activeAnimatables[v].target===e&&d.push(this._activeAnimatables[v]);return d},w.prototype.stopAnimation=function(e,d,v){const P=this.getAllAnimatablesByTarget(e);for(const p of P)p.stop(d,v)},w.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let e=0;e<this._activeAnimatables.length;e++)this._activeAnimatables[e].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const e of this.animationGroups)e.stop()});class D{getClassName(){return"TargetedAnimation"}serialize(){const e={};return e.animation=this.animation.serialize(),e.targetId=this.target.id,e}}class C{get mask(){return this._mask}set mask(e){this._mask!==e&&(this._mask=e,this.syncWithMask(!0))}syncWithMask(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||e){this._numActiveAnimatables=0;for(let e=0;e<this._animatables.length;++e){const d=this._animatables[e];!this.mask||this.mask.disabled||this.mask.retainsTarget(d.target.name)?(this._numActiveAnimatables++,d.paused&&d.restart()):d.paused||d.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let e=0;e<this._animatables.length;++e){const d=this._animatables[e];this.mask.retainsTarget(d.target.name)||(d.stop(),this._animatables.splice(e,1),--e)}for(let e=0;e<this._targetedAnimations.length;e++){const d=this._targetedAnimations[e];this.mask.retainsTarget(d.target.name)||(this._targetedAnimations.splice(e,1),--e)}}}get from(){return this._from}set from(e){if(this._from!==e){this._from=e;for(let e=0;e<this._animatables.length;e++){this._animatables[e].fromFrame=this._from}}}get to(){return this._to}set to(e){if(this._to!==e){this._to=e;for(let e=0;e<this._animatables.length;e++){this._animatables[e].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(e){if(this._speedRatio!==e){this._speedRatio=e;for(let e=0;e<this._animatables.length;e++){this._animatables[e].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(e){if(this._loopAnimation!==e){this._loopAnimation=e;for(let e=0;e<this._animatables.length;e++){this._animatables[e].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(e){if(this._isAdditive!==e){this._isAdditive=e;for(let e=0;e<this._animatables.length;e++){this._animatables[e].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(e){this._weight!==e&&(this._weight=e,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(e){if(this._playOrder!==e&&(this._playOrder=e,this._animatables.length>0)){for(let e=0;e<this._animatables.length;e++)this._animatables[e].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(e){if(this._enableBlending!==e&&(this._enableBlending=e,null!==e))for(let d=0;d<this._targetedAnimations.length;++d)this._targetedAnimations[d].animation.enableBlending=e}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(e){if(this._blendingSpeed!==e&&(this._blendingSpeed=e,null!==e))for(let d=0;d<this._targetedAnimations.length;++d)this._targetedAnimations[d].animation.blendingSpeed=e}getLength(e,d){e=e??this._from;return((d=d??this._to)-e)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(e){let d=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],v=arguments.length>2&&void 0!==arguments[2]&&arguments[2],P=arguments.length>3?arguments[3]:void 0;if(0===e.length)return null;P=P??e[0].weight;let p=Number.MAX_VALUE,L=-Number.MAX_VALUE;if(v)for(const X of e)X.from<p&&(p=X.from),X.to>L&&(L=X.to);const B=new C(e[0].name+"_merged",e[0]._scene,P);for(const X of e){v&&X.normalize(p,L);for(const e of X.targetedAnimations)B.addTargetedAnimation(e.animation,e.target);d&&X.dispose()}return B}constructor(e){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,v=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,P=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=e,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new p.d,this.onAnimationLoopObservable=new p.d,this.onAnimationGroupLoopObservable=new p.d,this.onAnimationGroupEndObservable=new p.d,this.onAnimationGroupPauseObservable=new p.d,this.onAnimationGroupPlayObservable=new p.d,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=d||L.c.LastCreatedScene,this._weight=v,this._playOrder=P,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(e,d){const v=new D;v.animation=e,v.target=d;const P=e.getKeys();return this._from>P[0].frame&&(this._from=P[0].frame),this._to<P[P.length-1].frame&&(this._to=P[P.length-1].frame),null!==this._enableBlending&&(e.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(e.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(v),this._shouldStart=!0,v}removeTargetedAnimation(e){for(let d=this._targetedAnimations.length-1;d>-1;d--){this._targetedAnimations[d].animation===e&&this._targetedAnimations.splice(d,1)}}normalize(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==e&&(e=this._from),null==d&&(d=this._to);for(let v=0;v<this._targetedAnimations.length;v++){const P=this._targetedAnimations[v].animation.getKeys(),p=P[0],L=P[P.length-1];if(p.frame>e){const d={frame:e,value:p.value,inTangent:p.inTangent,outTangent:p.outTangent,interpolation:p.interpolation};P.splice(0,0,d)}if(L.frame<d){const e={frame:d,value:L.value,inTangent:L.inTangent,outTangent:L.outTangent,interpolation:L.interpolation};P.push(e)}}return this._from=e,this._to=d,this}_processLoop(e,d,v){e.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(d),this._animationLoopFlags[v]||(this._animationLoopFlags[v]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,v=arguments.length>2?arguments[2]:void 0,P=arguments.length>3?arguments[3]:void 0,p=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=e,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let L=0;L<this._targetedAnimations.length;L++){const B=this._targetedAnimations[L],X=this._scene.beginDirectAnimation(B.target,[B.animation],void 0!==v?v:this._from,void 0!==P?P:this._to,e,d,void 0,void 0,void 0!==p?p:this._isAdditive);X.weight=this._weight,X.playOrder=this._playOrder,X.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(B),this._checkAnimationGroupEnded(X)},this._processLoop(X,B,L),this._animatables.push(X)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=d,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let e=0;e<this._animatables.length;e++){this._animatables[e].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(e){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==e&&(this.loopAnimation=e),this.restart()):(this.stop(),this.start(e,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let e=0;e<this._animatables.length;e++){this._animatables[e].reset()}return this}restart(){if(!this._isStarted)return this;for(let e=0;e<this._animatables.length;e++){this._animatables[e].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const d=this._animatables.slice();for(let P=0;P<d.length;P++)d[P].stop(void 0,void 0,!0,e);let v=0;for(let P=0;P<this._scene._activeAnimatables.length;P++){const d=this._scene._activeAnimatables[P];d._runtimeAnimations.length>0?this._scene._activeAnimatables[v++]=d:e&&this._checkAnimationGroupEnded(d,e)}return this._scene._activeAnimatables.length=v,this._isStarted=!1,this}setWeightForAllAnimatables(e){for(let d=0;d<this._animatables.length;d++){this._animatables[d].weight=e}return this}syncAllAnimationsWith(e){for(let d=0;d<this._animatables.length;d++){this._animatables[d].syncWith(e)}return this}goToFrame(e){let d=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let v=0;v<this._animatables.length;v++){this._animatables[v].goToFrame(e,d)}return this}getCurrentFrame(){var e;return(null===(e=this.animatables[0])||void 0===e?void 0:e.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const e=this._scene.animationGroups.indexOf(this);if(e>-1&&this._scene.animationGroups.splice(e,1),this._parentContainer){const e=this._parentContainer.animationGroups.indexOf(this);e>-1&&this._parentContainer.animationGroups.splice(e,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(e){let d=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const v=this._animatables.indexOf(e);v>-1&&this._animatables.splice(v,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,d||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(e,d){let v=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const P=new C(e||this.name,this._scene,this._weight,this._playOrder);P._from=this.from,P._to=this.to,P._speedRatio=this.speedRatio,P._loopAnimation=this.loopAnimation,P._isAdditive=this.isAdditive,P._enableBlending=this.enableBlending,P._blendingSpeed=this.blendingSpeed,P.metadata=this.metadata,P.mask=this.mask;for(const p of this._targetedAnimations)P.addTargetedAnimation(v?p.animation.clone():p.animation,d?d(p.target):p.target);return P}serialize(){const e={};e.name=this.name,e.from=this.from,e.to=this.to,e.speedRatio=this.speedRatio,e.loopAnimation=this.loopAnimation,e.isAdditive=this.isAdditive,e.weight=this.weight,e.playOrder=this.playOrder,e.enableBlending=this.enableBlending,e.blendingSpeed=this.blendingSpeed,e.targetedAnimations=[];for(let d=0;d<this.targetedAnimations.length;d++){const v=this.targetedAnimations[d];e.targetedAnimations[d]=v.serialize()}return B.d&&B.d.HasTags(this)&&(e.tags=B.d.GetTags(this)),this.metadata&&(e.metadata=this.metadata),e}static Parse(e,d){const v=new C(e.name,d,e.weight,e.playOrder);for(let p=0;p<e.targetedAnimations.length;p++){const L=e.targetedAnimations[p],B=P.e.Parse(L.animation),X=L.targetId;if("influence"===L.animation.property){const e=d.getMorphTargetById(X);e&&v.addTargetedAnimation(B,e)}else{const e=d.getNodeById(X);null!=e&&v.addTargetedAnimation(B,e)}}return B.d&&B.d.AddTagsTo(v,e.tags),null!==e.from&&null!==e.to&&v.normalize(e.from,e.to),void 0!==e.speedRatio&&(v._speedRatio=e.speedRatio),void 0!==e.loopAnimation&&(v._loopAnimation=e.loopAnimation),void 0!==e.isAdditive&&(v._isAdditive=e.isAdditive),void 0!==e.weight&&(v._weight=e.weight),void 0!==e.playOrder&&(v._playOrder=e.playOrder),void 0!==e.enableBlending&&(v._enableBlending=e.enableBlending),void 0!==e.blendingSpeed&&(v._blendingSpeed=e.blendingSpeed),void 0!==e.metadata&&(v.metadata=e.metadata),v}static MakeAnimationAdditive(e,d,v){let p;p="object"===typeof d?d:{referenceFrame:d,range:v,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let L=e;p.cloneOriginalAnimationGroup&&(L=e.clone(p.clonedAnimationGroupName||L.name));const B=L.targetedAnimations;for(let X=0;X<B.length;X++){const e=B[X];e.animation=P.e.MakeAnimationAdditive(e.animation,p)}if(L.isAdditive=!0,p.clipKeys){let e=Number.MAX_VALUE,d=-Number.MAX_VALUE;const v=L.targetedAnimations;for(let P=0;P<v.length;P++){const p=v[P].animation.getKeys();e>p[0].frame&&(e=p[0].frame),d<p[p.length-1].frame&&(d=p[p.length-1].frame)}L._from=e,L._to=d}return L}static ClipKeys(e,d,v,P,p){const L=e.clone(P||e.name);return C.ClipKeysInPlace(L,d,v,p)}static ClipKeysInPlace(e,d,v,P){return C.ClipInPlace(e,d,v,P,!1)}static ClipFrames(e,d,v,P,p){const L=e.clone(P||e.name);return C.ClipFramesInPlace(L,d,v,p)}static ClipFramesInPlace(e,d,v,P){return C.ClipInPlace(e,d,v,P,!0)}static ClipInPlace(e,d,v,P){let p=arguments.length>4&&void 0!==arguments[4]&&arguments[4],L=Number.MAX_VALUE,B=-Number.MAX_VALUE;const X=e.targetedAnimations;for(let z=0;z<X.length;z++){const e=X[z],W=P?e.animation:e.animation.clone();p&&(W.createKeyForFrame(d),W.createKeyForFrame(v));const V=W.getKeys(),k=[];let g=Number.MAX_VALUE;for(let P=0;P<V.length;P++){const e=V[P];if(!p&&P>=d&&P<=v||p&&e.frame>=d&&e.frame<=v){const d={frame:e.frame,value:e.value.clone?e.value.clone():e.value,inTangent:e.inTangent,outTangent:e.outTangent,interpolation:e.interpolation,lockedTangent:e.lockedTangent};g===Number.MAX_VALUE&&(g=d.frame),d.frame-=g,k.push(d)}}0!==k.length?(L>k[0].frame&&(L=k[0].frame),B<k[k.length-1].frame&&(B=k[k.length-1].frame),W.setKeys(k,!0),e.animation=W):(X.splice(z,1),z--)}return e._from=L,e._to=B,e}getClassName(){return"AnimationGroup"}toString(e){let d="Name: "+this.name;return d+=", type: "+this.getClassName(),e&&(d+=", from: "+this._from,d+=", to: "+this._to,d+=", isStarted: "+this._isStarted,d+=", speedRatio: "+this._speedRatio,d+=", targetedAnimations length: "+this._targetedAnimations.length,d+=", animatables length: "+this._animatables),d}}}}]);