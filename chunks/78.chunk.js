"use strict";(self.ynu1yiqvs98=self.ynu1yiqvs98||[]).push([[78],{14289:(I,E,j)=>{j.r(E),j.d(E,{AnimationGroup:()=>X,TargetedAnimation:()=>C});var e=j(11637),w=j(10960),z=j(10993),h=j(11158),t=j(12737),U=j(11117);class R{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(I,E,j,w){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=E,this._target=I,this._scene=j,this._host=w,this._activeTargets=[],E._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===e.c.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=U.Matrix.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const I={frame:0,value:this._minValue};this._keys.splice(0,0,I)}if(this._target instanceof Array){let I=0;for(const E of this._target)this._preparePath(E,I),this._getOriginalValues(I),I++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const z=E.getEvents();if(z&&z.length>0)for(const e of z)this._events.push(e._clone());this._enableBlending=I&&I.animationPropertiesOverride?I.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(I){let E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const j=this._animation.targetPropertyPath;if(j.length>1){let e=I;for(let I=0;I<j.length-1;I++){const E=j[I];if(e=e[E],void 0===e)throw new Error(`Invalid property (${E}) in property path (${j.join(".")})`)}this._targetPath=j[j.length-1],this._activeTargets[E]=e}else this._targetPath=j[0],this._activeTargets[E]=I;if(void 0===this._activeTargets[E][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${j.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let I=0;for(const E of this._target)void 0!==this._originalValue[I]&&this._setValue(E,this._activeTargets[I],this._originalValue[I],-1,I),I++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let I=0;I<this._events.length;I++)this._events[I].isDone=!1}isStopped(){return this._stopped}dispose(){const I=this._animation.runtimeAnimations.indexOf(this);I>-1&&this._animation.runtimeAnimations.splice(I,1)}setValue(I,E){if(this._targetIsArray)for(let j=0;j<this._target.length;j++){const e=this._target[j];this._setValue(e,this._activeTargets[j],I,E,j)}else this._setValue(this._target,this._directTarget,I,E,0)}_getOriginalValues(){let I,E=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const j=this._activeTargets[E];I=j.getLocalMatrix&&"_matrix"===this._targetPath?j.getLocalMatrix():j[this._targetPath],I&&I.clone?this._originalValue[E]=I.clone():this._originalValue[E]=I}_registerTargetForLateAnimationBinding(I,E){const j=I.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(j),j._lateAnimationHolders||(j._lateAnimationHolders={}),j._lateAnimationHolders[I.targetPath]||(j._lateAnimationHolders[I.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:E}),I.isAdditive?(j._lateAnimationHolders[I.targetPath].additiveAnimations.push(I),j._lateAnimationHolders[I.targetPath].totalAdditiveWeight+=I.weight):(j._lateAnimationHolders[I.targetPath].animations.push(I),j._lateAnimationHolders[I.targetPath].totalWeight+=I.weight)}_setValue(I,E,j,w,z){if(this._currentActiveTarget=E,this._weight=w,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const I=E[this._targetPath];I.clone?this._originalBlendValue=I.clone():this._originalBlendValue=I}this._originalBlendValue.m?e.c.AllowMatrixDecomposeForInterpolation?this._currentValue?U.Matrix.DecomposeLerpToRef(this._originalBlendValue,j,this._blendingFactor,this._currentValue):this._currentValue=U.Matrix.DecomposeLerp(this._originalBlendValue,j,this._blendingFactor):this._currentValue?U.Matrix.LerpToRef(this._originalBlendValue,j,this._blendingFactor,this._currentValue):this._currentValue=U.Matrix.Lerp(this._originalBlendValue,j,this._blendingFactor):this._currentValue=e.c._UniversalLerp(this._originalBlendValue,j,this._blendingFactor);const w=I&&I.animationPropertiesOverride?I.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=w}else this._currentValue?this._currentValue.U?this._currentValue.U(j):this._currentValue=j:null!==j&&void 0!==j&&j.clone?this._currentValue=j.clone():this._currentValue=j;-1!==w?this._registerTargetForLateAnimationBinding(this,this._originalValue[z]):this._animationState.loopMode===e.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[z],E[this._targetPath]):E[this._targetPath]=this._originalValue[z]+this._currentValue:E[this._targetPath]=this._currentValue,I.JR&&I.JR(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(I){let E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const j=this._animation.getKeys();I<j[0].frame?I=j[0].frame:I>j[j.length-1].frame&&(I=j[j.length-1].frame);const e=this._events;if(e.length)for(let z=0;z<e.length;z++)e[z].onlyOnce||(e[z].isDone=e[z].frame<I);this._currentFrame=I;const w=this._animation._interpolate(I,this._animationState);this.setValue(w,E)}_prepareForSpeedRatioChange(I){const E=this._previousElapsedTime*(this._animation.framePerSecond*I)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-E}animate(I,E,j,w,z){let h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const t=this._animation,U=t.targetPropertyPath;if(!U||U.length<1)return this._stopped=!0,!1;let R,P=!0;const o=this._events;let Z=0;if(this._coreRuntimeAnimation)Z=j-E,R=this._coreRuntimeAnimation.currentFrame,this._currentFrame=R,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let h;(E<this._minFrame||E>this._maxFrame)&&(E=this._minFrame),(j<this._minFrame||j>this._maxFrame)&&(j=this._maxFrame),Z=j-E;let U=I*(t.framePerSecond*z)/1e3+this._absoluteFrameOffset,c=0,K=!1;const L=w&&this._animationState.loopMode===e.c.ANIMATIONLOOPMODE_YOYO;if(L){const I=(U-E)/Z,j=Math.sin(I*Math.PI);U=Math.abs(j)*Z+E;const e=j>=0?1:-1;this._yoyoDirection!==e&&(K=!0),this._yoyoDirection=e}if(this._previousElapsedTime=I,this._previousAbsoluteFrame=U,!w&&j>=E&&(U>=Z&&z>0||U<=0&&z<0))P=!1,c=t._getKeyValue(this._maxValue);else if(!w&&E>=j&&(U<=Z&&z<0||U>=0&&z>0))P=!1,c=t._getKeyValue(this._minValue);else if(this._animationState.loopMode!==e.c.ANIMATIONLOOPMODE_CYCLE){const I=j.toString()+E.toString();if(!this._offsetsCache[I]){this._animationState.repeatCount=0,this._animationState.loopMode=e.c.ANIMATIONLOOPMODE_CYCLE;const w=t._interpolate(E,this._animationState),z=t._interpolate(j,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),t.dataType){case e.c.ANIMATIONTYPE_FLOAT:this._offsetsCache[I]=z-w;break;case e.c.ANIMATIONTYPE_QUATERNION:case e.c.ANIMATIONTYPE_VECTOR3:case e.c.ANIMATIONTYPE_VECTOR2:case e.c.ANIMATIONTYPE_SIZE:case e.c.ANIMATIONTYPE_COLOR3:this._offsetsCache[I]=z.FE(w)}this._highLimitsCache[I]=z}c=this._highLimitsCache[I],h=this._offsetsCache[I]}if(void 0===h)switch(t.dataType){case e.c.ANIMATIONTYPE_FLOAT:h=0;break;case e.c.ANIMATIONTYPE_QUATERNION:h=e.j;break;case e.c.ANIMATIONTYPE_VECTOR3:h=e.v;break;case e.c.ANIMATIONTYPE_VECTOR2:h=e.r;break;case e.c.ANIMATIONTYPE_SIZE:h=e.n;break;case e.c.ANIMATIONTYPE_COLOR3:h=e.f;break;case e.c.ANIMATIONTYPE_COLOR4:h=e.i}if(this._host&&this._host.syncRoot){const I=this._host.syncRoot;R=E+Z*((I.masterFrame-I.fromFrame)/(I.toFrame-I.fromFrame))}else R=U>0&&E>j||U<0&&E<j?P&&0!==Z?j+U%Z:E:P&&0!==Z?E+U%Z:j;if(!L&&(z>0&&this.currentFrame>R||z<0&&this.currentFrame<R)||L&&K){this._onLoop();for(let I=0;I<o.length;I++)o[I].onlyOnce||(o[I].isDone=!1);this._animationState.key=z>0?0:t.getKeys().length-1}this._currentFrame=R,this._animationState.repeatCount=0===Z?0:U/Z|0,this._animationState.highLimitValue=c,this._animationState.offsetValue=h}const c=t._interpolate(R,this._animationState);if(this.setValue(c,h),o.length)for(let e=0;e<o.length;e++)if(Z>=0&&R>=o[e].frame&&o[e].frame>=E||Z<0&&R<=o[e].frame&&o[e].frame<=E){const I=o[e];I.isDone||(I.onlyOnce&&(o.splice(e,1),e--),I.isDone=!0,I.action(R))}return P||(this._stopped=!0),P}}var P=j(10983);class o{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(I){this._weight=-1!==I?Math.min(Math.max(I,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(I){for(let E=0;E<this._runtimeAnimations.length;E++){this._runtimeAnimations[E]._prepareForSpeedRatioChange(I)}this._speedRatio=I,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(I,E){let j=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,z=arguments.length>4&&void 0!==arguments[4]&&arguments[4],h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,t=arguments.length>6?arguments[6]:void 0,U=arguments.length>7?arguments[7]:void 0,R=arguments.length>8?arguments[8]:void 0,P=arguments.length>9&&void 0!==arguments[9]&&arguments[9],o=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=E,this.fromFrame=j,this.toFrame=e,this.loopAnimation=z,this.onAnimationEnd=t,this.onAnimationLoop=R,this.isAdditive=P,this.playOrder=o,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.Ht=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new w.e,this.onAnimationLoopObservable=new w.e,this._scene=I,U&&this.appendAnimations(E,U),this._speedRatio=h,I._activeAnimatables.push(this)}syncWith(I){if(this._syncRoot=I,I){const I=this._scene._activeAnimatables.indexOf(this);I>-1&&(this._scene._activeAnimatables.splice(I,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(I,E){for(let j=0;j<E.length;j++){const e=E[j],w=new R(I,e,this._scene,this);w._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(w)}}getAnimationByTargetProperty(I){const E=this._runtimeAnimations;for(let j=0;j<E.length;j++)if(E[j].animation.targetProperty===I)return E[j].animation;return null}getRuntimeAnimationByTargetProperty(I){const E=this._runtimeAnimations;for(let j=0;j<E.length;j++)if(E[j].animation.targetProperty===I)return E[j];return null}reset(){const I=this._runtimeAnimations;for(let E=0;E<I.length;E++)I[E].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(I){const E=this._runtimeAnimations;for(let j=0;j<E.length;j++)E[j].animation.enableBlending=!0,E[j].animation.blendingSpeed=I}disableBlending(){const I=this._runtimeAnimations;for(let E=0;E<I.length;E++)I[E].animation.enableBlending=!1}goToFrame(I){let E=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const j=this._runtimeAnimations;if(j[0]){const E=j[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??j[0].currentFrame;const e=0===this.speedRatio?0:(I-this._frameToSyncFromJump)/E*1e3/this.speedRatio;this._manualJumpDelay=-e}for(let e=0;e<j.length;e++)j[e].goToFrame(I,E?this._weight:-1);this._goToFrame=I}get paused(){return this.Ht}pause(){this.Ht||(this.Ht=!0)}restart(){this.Ht=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(I,E){let j=arguments.length>2&&void 0!==arguments[2]&&arguments[2],e=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(I||E){const w=this._scene._activeAnimatables.indexOf(this);if(w>-1){const z=this._runtimeAnimations;for(let j=z.length-1;j>=0;j--){const e=z[j];I&&e.animation.name!=I||(E&&!E(e.target)||(e.dispose(),z.splice(j,1)))}0==z.length&&(j||this._scene._activeAnimatables.splice(w,1),e||this._raiseOnAnimationEnd())}}else{const I=this._scene._activeAnimatables.indexOf(this);if(I>-1){j||this._scene._activeAnimatables.splice(I,1);const E=this._runtimeAnimations;for(let I=0;I<E.length;I++)E[I].dispose();this._runtimeAnimations.length=0,e||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((I=>{this.onAnimationEndObservable.add((()=>{I(this)}),void 0,void 0,this,!0)}))}_animate(I){if(this.Ht)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=I),!0;if(null===this._localDelayOffset?(this._localDelayOffset=I,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=I-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let E=!1;const j=this._runtimeAnimations;let e;for(e=0;e<j.length;e++){const w=j[e].animate(I-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);E=E||w}if(this.animationStarted=E,!E){if(this.disposeOnEnd)for(e=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(e,1),e=0;e<j.length;e++)j[e].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return E}}function Z(I){if(0===I.totalWeight&&0===I.totalAdditiveWeight)return I.originalValue;let E=1;const j=U.TmpVectors.LE[0],e=U.TmpVectors.LE[1],w=U.TmpVectors.Quaternion[0];let z=0;const h=I.animations[0],t=I.originalValue;let R=1,P=!1;if(I.totalWeight<1)R=1-I.totalWeight,t.decompose(e,w,j);else{if(z=1,E=I.totalWeight,R=h.weight/E,1==R){if(!I.totalAdditiveWeight)return h.currentValue;P=!0}h.currentValue.decompose(e,w,j)}if(!P){e.scaleInPlace(R),j.scaleInPlace(R),w.scaleInPlace(R);for(let h=z;h<I.animations.length;h++){const z=I.animations[h];if(0===z.weight)continue;R=z.weight/E;const t=U.TmpVectors.LE[2],P=U.TmpVectors.LE[3],o=U.TmpVectors.Quaternion[1];z.currentValue.decompose(P,o,t),P.scaleAndAddToRef(R,e),o.scaleAndAddToRef(U.Quaternion.Dot(w,o)>0?R:-R,w),t.scaleAndAddToRef(R,j)}w.normalize()}for(let Z=0;Z<I.additiveAnimations.length;Z++){const E=I.additiveAnimations[Z];if(0===E.weight)continue;const z=U.TmpVectors.LE[2],h=U.TmpVectors.LE[3],t=U.TmpVectors.Quaternion[1];E.currentValue.decompose(h,t,z),h.multiplyToRef(e,h),U.LE.LerpToRef(e,h,E.weight,e),w.multiplyToRef(t,t),U.Quaternion.SlerpToRef(w,t,E.weight,w),z.scaleAndAddToRef(E.weight,j)}const o=h?h._animationState.workValue:U.TmpVectors.Matrix[0].clone();return U.Matrix.ComposeToRef(e,w,j,o),o}function c(I,E){if(0===I.totalWeight&&0===I.totalAdditiveWeight)return E;const j=I.animations[0],e=I.originalValue;let w=E;if(0===I.totalWeight&&I.totalAdditiveWeight>0)w.U(e);else if(1===I.animations.length){if(U.Quaternion.SlerpToRef(e,j.currentValue,Math.min(1,I.totalWeight),w),0===I.totalAdditiveWeight)return w}else if(I.animations.length>1){let j,z,h=1;if(I.totalWeight<1){const E=1-I.totalWeight;j=[],z=[],j.push(e),z.push(E)}else{if(2===I.animations.length&&(U.Quaternion.SlerpToRef(I.animations[0].currentValue,I.animations[1].currentValue,I.animations[1].weight/I.totalWeight,E),0===I.totalAdditiveWeight))return E;j=[],z=[],h=I.totalWeight}for(let E=0;E<I.animations.length;E++){const e=I.animations[E];j.push(e.currentValue),z.push(e.weight/h)}let t=0;for(let I=0;I<j.length;)I?(t+=z[I],U.Quaternion.SlerpToRef(w,j[I],z[I]/t,w),I++):(U.Quaternion.SlerpToRef(j[I],j[I+1],z[I+1]/(z[I]+z[I+1]),E),w=E,t=z[I]+z[I+1],I+=2)}for(let z=0;z<I.additiveAnimations.length;z++){const E=I.additiveAnimations[z];0!==E.weight&&(w.multiplyToRef(E.currentValue,U.TmpVectors.Quaternion[0]),U.Quaternion.SlerpToRef(w,U.TmpVectors.Quaternion[0],E.weight,w))}return w}var K,L,F=j(11363);K=F.c,(L=t.e)&&(L.prototype.copyAnimationRange=function(I,E,j){let w=arguments.length>3&&void 0!==arguments[3]&&arguments[3],z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new e.c(this.name,"_matrix",I.animations[0].framePerSecond,e.c.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const h=I.animations[0].getRange(E);if(!h)return!1;const t=h.from,U=h.to,R=I.animations[0].getKeys(),P=I.length,o=I.getParent(),Z=this.getParent(),c=w&&o&&P&&this.length&&P!==this.length,K=c&&Z&&o?Z.length/o.length:1,L=w&&!Z&&z&&(1!==z.x||1!==z.y||1!==z.z),F=this.animations[0].getKeys();let C,X,q;for(let e=0,x=R.length;e<x;e++)C=R[e],C.frame>=t&&C.frame<=U&&(w?(q=C.value.clone(),c?(X=q.getTranslation(),q.setTranslation(X.scaleInPlace(K))):L&&z?(X=q.getTranslation(),q.setTranslation(X.multiplyInPlace(z))):q=C.value):q=C.value,F.push({frame:C.frame+j,value:q}));return this.animations[0].createRange(E,t+j,U+j),!0}),K&&(K.prototype._animate=function(I){if(!this.animationsEnabled)return;const E=P.e.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=E}this.deltaTime=void 0!==I?I:this.useConstantAnimationDeltaTime?16:(E-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=E;const j=this._activeAnimatables;if(0===j.length)return;this._animationTime+=this.deltaTime;const w=this._animationTime;for(let e=0;e<j.length;e++){const I=j[e];!I._animate(w)&&I.disposeOnEnd&&e--}!function(I){if(I._registeredForLateAnimationBindings.length){for(let E=0;E<I._registeredForLateAnimationBindings.length;E++){const j=I._registeredForLateAnimationBindings.data[E];for(const I in j._lateAnimationHolders){const E=j._lateAnimationHolders[I],w=E.animations[0],z=E.originalValue;if(void 0===z||null===z)continue;const h=e.c.AllowMatrixDecomposeForInterpolation&&z.m;let t=j[I];if(h)t=Z(E);else if(void 0!==z.w)t=c(E,t||U.Quaternion.Identity());else{let I=0,j=1;const h=w&&w._animationState.loopMode===e.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(E.totalWeight<1)t=h?z.clone?z.clone():z:w&&z.scale?z.scale(1-E.totalWeight):w?z*(1-E.totalWeight):z.clone?z.clone():z;else if(w){j=E.totalWeight;const e=w.weight/j;t=1!==e?w.currentValue.scale?w.currentValue.scale(e):w.currentValue*e:w.currentValue,h&&(t.addToRef?t.addToRef(z,t):t+=z),I=1}for(let e=I;e<E.animations.length;e++){const I=E.animations[e],w=I.weight/j;w&&(I.currentValue.scaleAndAddToRef?I.currentValue.scaleAndAddToRef(w,t):t+=I.currentValue*w)}for(let e=0;e<E.additiveAnimations.length;e++){const I=E.additiveAnimations[e],j=I.weight;j&&(I.currentValue.scaleAndAddToRef?I.currentValue.scaleAndAddToRef(j,t):t+=I.currentValue*j)}}j[I]=t}j._lateAnimationHolders={}}I._registeredForLateAnimationBindings.reset()}}(this)},K.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((I,E)=>I.playOrder-E.playOrder))},K.prototype.beginWeightedAnimation=function(I,E,j){let e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,w=arguments.length>4?arguments[4]:void 0,z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,h=arguments.length>6?arguments[6]:void 0,t=arguments.length>7?arguments[7]:void 0,U=arguments.length>8?arguments[8]:void 0,R=arguments.length>9?arguments[9]:void 0,P=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const o=this.beginAnimation(I,E,j,w,z,h,t,!1,U,R,P);return o.weight=e,o},K.prototype.beginAnimation=function(I,E,j,e){let w=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,z=arguments.length>5?arguments[5]:void 0,h=arguments.length>6?arguments[6]:void 0,t=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],U=arguments.length>8?arguments[8]:void 0,R=arguments.length>9?arguments[9]:void 0,P=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(w<0){const I=E;E=j,j=I,w=-w}E>j&&(w=-w),t&&this.stopAnimation(I,void 0,U),h||(h=new o(this,I,E,j,e,w,z,void 0,R,P));const Z=!U||U(I);if(I.animations&&Z&&h.appendAnimations(I,I.animations),I.getAnimatables){const P=I.getAnimatables();for(let I=0;I<P.length;I++)this.beginAnimation(P[I],E,j,e,w,z,h,t,U,R)}return h.reset(),h},K.prototype.beginHierarchyAnimation=function(I,E,j,e,w){let z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,h=arguments.length>6?arguments[6]:void 0,t=arguments.length>7?arguments[7]:void 0,U=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],R=arguments.length>9?arguments[9]:void 0,P=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const o=I.getDescendants(E),Z=[];Z.push(this.beginAnimation(I,j,e,w,z,h,t,U,R,void 0,P));for(const c of o)Z.push(this.beginAnimation(c,j,e,w,z,h,t,U,R,void 0,P));return Z},K.prototype.beginDirectAnimation=function(I,E,j,e,w){let z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(z<0){const I=j;j=e,e=I,z=-z}return j>e&&(z=-z),new o(this,I,j,e,w,z,arguments.length>6?arguments[6]:void 0,E,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},K.prototype.beginDirectHierarchyAnimation=function(I,E,j,e,w,z,h,t,U){let R=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const P=I.getDescendants(E),o=[];o.push(this.beginDirectAnimation(I,j,e,w,z,h,t,U,R));for(const Z of P)o.push(this.beginDirectAnimation(Z,j,e,w,z,h,t,U,R));return o},K.prototype.getAnimatableByTarget=function(I){for(let E=0;E<this._activeAnimatables.length;E++)if(this._activeAnimatables[E].target===I)return this._activeAnimatables[E];return null},K.prototype.getAllAnimatablesByTarget=function(I){const E=[];for(let j=0;j<this._activeAnimatables.length;j++)this._activeAnimatables[j].target===I&&E.push(this._activeAnimatables[j]);return E},K.prototype.stopAnimation=function(I,E,j){const e=this.getAllAnimatablesByTarget(I);for(const w of e)w.stop(E,j)},K.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let I=0;I<this._activeAnimatables.length;I++)this._activeAnimatables[I].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const I of this.animationGroups)I.stop()});class C{getClassName(){return"TargetedAnimation"}serialize(){const I={};return I.animation=this.animation.serialize(),I.targetId=this.target.id,I}}class X{get mask(){return this._mask}set mask(I){this._mask!==I&&(this._mask=I,this.syncWithMask(!0))}syncWithMask(){let I=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||I){this._numActiveAnimatables=0;for(let I=0;I<this._animatables.length;++I){const E=this._animatables[I];!this.mask||this.mask.disabled||this.mask.retainsTarget(E.target.name)?(this._numActiveAnimatables++,E.paused&&E.restart()):E.paused||E.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let I=0;I<this._animatables.length;++I){const E=this._animatables[I];this.mask.retainsTarget(E.target.name)||(E.stop(),this._animatables.splice(I,1),--I)}for(let I=0;I<this._targetedAnimations.length;I++){const E=this._targetedAnimations[I];this.mask.retainsTarget(E.target.name)||(this._targetedAnimations.splice(I,1),--I)}}}get from(){return this._from}set from(I){if(this._from!==I){this._from=I;for(let I=0;I<this._animatables.length;I++){this._animatables[I].fromFrame=this._from}}}get to(){return this._to}set to(I){if(this._to!==I){this._to=I;for(let I=0;I<this._animatables.length;I++){this._animatables[I].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(I){if(this._speedRatio!==I){this._speedRatio=I;for(let I=0;I<this._animatables.length;I++){this._animatables[I].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(I){if(this._loopAnimation!==I){this._loopAnimation=I;for(let I=0;I<this._animatables.length;I++){this._animatables[I].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(I){if(this._isAdditive!==I){this._isAdditive=I;for(let I=0;I<this._animatables.length;I++){this._animatables[I].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(I){this._weight!==I&&(this._weight=I,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(I){if(this._playOrder!==I&&(this._playOrder=I,this._animatables.length>0)){for(let I=0;I<this._animatables.length;I++)this._animatables[I].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(I){if(this._enableBlending!==I&&(this._enableBlending=I,null!==I))for(let E=0;E<this._targetedAnimations.length;++E)this._targetedAnimations[E].animation.enableBlending=I}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(I){if(this._blendingSpeed!==I&&(this._blendingSpeed=I,null!==I))for(let E=0;E<this._targetedAnimations.length;++E)this._targetedAnimations[E].animation.blendingSpeed=I}getLength(I,E){I=I??this._from;return((E=E??this._to)-I)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(I){let E=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],j=arguments.length>2&&void 0!==arguments[2]&&arguments[2],e=arguments.length>3?arguments[3]:void 0;if(0===I.length)return null;e=e??I[0].weight;let w=Number.MAX_VALUE,z=-Number.MAX_VALUE;if(j)for(const t of I)t.from<w&&(w=t.from),t.to>z&&(z=t.to);const h=new X(I[0].name+"_merged",I[0]._scene,e);for(const t of I){j&&t.normalize(w,z);for(const I of t.targetedAnimations)h.addTargetedAnimation(I.animation,I.target);E&&t.dispose()}return h}constructor(I){let E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,j=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=I,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new w.e,this.onAnimationLoopObservable=new w.e,this.onAnimationGroupLoopObservable=new w.e,this.onAnimationGroupEndObservable=new w.e,this.onAnimationGroupPauseObservable=new w.e,this.onAnimationGroupPlayObservable=new w.e,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=E||z.d.LastCreatedScene,this._weight=j,this._playOrder=e,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(I,E){const j=new C;j.animation=I,j.target=E;const e=I.getKeys();return this._from>e[0].frame&&(this._from=e[0].frame),this._to<e[e.length-1].frame&&(this._to=e[e.length-1].frame),null!==this._enableBlending&&(I.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(I.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(j),this._shouldStart=!0,j}removeTargetedAnimation(I){for(let E=this._targetedAnimations.length-1;E>-1;E--){this._targetedAnimations[E].animation===I&&this._targetedAnimations.splice(E,1)}}normalize(){let I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==I&&(I=this._from),null==E&&(E=this._to);for(let j=0;j<this._targetedAnimations.length;j++){const e=this._targetedAnimations[j].animation.getKeys(),w=e[0],z=e[e.length-1];if(w.frame>I){const E={frame:I,value:w.value,inTangent:w.inTangent,outTangent:w.outTangent,interpolation:w.interpolation};e.splice(0,0,E)}if(z.frame<E){const I={frame:E,value:z.value,inTangent:z.inTangent,outTangent:z.outTangent,interpolation:z.interpolation};e.push(I)}}return this._from=I,this._to=E,this}_processLoop(I,E,j){I.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(E),this._animationLoopFlags[j]||(this._animationLoopFlags[j]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let I=arguments.length>0&&void 0!==arguments[0]&&arguments[0],E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,j=arguments.length>2?arguments[2]:void 0,e=arguments.length>3?arguments[3]:void 0,w=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=I,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let z=0;z<this._targetedAnimations.length;z++){const h=this._targetedAnimations[z],t=this._scene.beginDirectAnimation(h.target,[h.animation],void 0!==j?j:this._from,void 0!==e?e:this._to,I,E,void 0,void 0,void 0!==w?w:this._isAdditive);t.weight=this._weight,t.playOrder=this._playOrder,t.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(h),this._checkAnimationGroupEnded(t)},this._processLoop(t,h,z),this._animatables.push(t)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=E,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let I=0;I<this._animatables.length;I++){this._animatables[I].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(I){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==I&&(this.loopAnimation=I),this.restart()):(this.stop(),this.start(I,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let I=0;I<this._animatables.length;I++){this._animatables[I].reset()}return this}restart(){if(!this._isStarted)return this;for(let I=0;I<this._animatables.length;I++){this._animatables[I].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let I=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const E=this._animatables.slice();for(let e=0;e<E.length;e++)E[e].stop(void 0,void 0,!0,I);let j=0;for(let e=0;e<this._scene._activeAnimatables.length;e++){const E=this._scene._activeAnimatables[e];E._runtimeAnimations.length>0?this._scene._activeAnimatables[j++]=E:I&&this._checkAnimationGroupEnded(E,I)}return this._scene._activeAnimatables.length=j,this._isStarted=!1,this}setWeightForAllAnimatables(I){for(let E=0;E<this._animatables.length;E++){this._animatables[E].weight=I}return this}syncAllAnimationsWith(I){for(let E=0;E<this._animatables.length;E++){this._animatables[E].syncWith(I)}return this}goToFrame(I){let E=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let j=0;j<this._animatables.length;j++){this._animatables[j].goToFrame(I,E)}return this}getCurrentFrame(){var I;return(null===(I=this.animatables[0])||void 0===I?void 0:I.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const I=this._scene.animationGroups.indexOf(this);if(I>-1&&this._scene.animationGroups.splice(I,1),this._parentContainer){const I=this._parentContainer.animationGroups.indexOf(this);I>-1&&this._parentContainer.animationGroups.splice(I,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(I){let E=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const j=this._animatables.indexOf(I);j>-1&&this._animatables.splice(j,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,E||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(I,E){let j=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const e=new X(I||this.name,this._scene,this._weight,this._playOrder);e._from=this.from,e._to=this.to,e._speedRatio=this.speedRatio,e._loopAnimation=this.loopAnimation,e._isAdditive=this.isAdditive,e._enableBlending=this.enableBlending,e._blendingSpeed=this.blendingSpeed,e.metadata=this.metadata,e.mask=this.mask;for(const w of this._targetedAnimations)e.addTargetedAnimation(j?w.animation.clone():w.animation,E?E(w.target):w.target);return e}serialize(){const I={};I.name=this.name,I.from=this.from,I.to=this.to,I.speedRatio=this.speedRatio,I.loopAnimation=this.loopAnimation,I.isAdditive=this.isAdditive,I.weight=this.weight,I.playOrder=this.playOrder,I.enableBlending=this.enableBlending,I.blendingSpeed=this.blendingSpeed,I.targetedAnimations=[];for(let E=0;E<this.targetedAnimations.length;E++){const j=this.targetedAnimations[E];I.targetedAnimations[E]=j.serialize()}return h.c&&h.c.HasTags(this)&&(I.tags=h.c.GetTags(this)),this.metadata&&(I.metadata=this.metadata),I}static Parse(I,E){const j=new X(I.name,E,I.weight,I.playOrder);for(let w=0;w<I.targetedAnimations.length;w++){const z=I.targetedAnimations[w],h=e.c.Parse(z.animation),t=z.targetId;if("influence"===z.animation.property){const I=E.getMorphTargetById(t);I&&j.addTargetedAnimation(h,I)}else{const I=E.getNodeById(t);null!=I&&j.addTargetedAnimation(h,I)}}return h.c&&h.c.AddTagsTo(j,I.tags),null!==I.from&&null!==I.to&&j.normalize(I.from,I.to),void 0!==I.speedRatio&&(j._speedRatio=I.speedRatio),void 0!==I.loopAnimation&&(j._loopAnimation=I.loopAnimation),void 0!==I.isAdditive&&(j._isAdditive=I.isAdditive),void 0!==I.weight&&(j._weight=I.weight),void 0!==I.playOrder&&(j._playOrder=I.playOrder),void 0!==I.enableBlending&&(j._enableBlending=I.enableBlending),void 0!==I.blendingSpeed&&(j._blendingSpeed=I.blendingSpeed),void 0!==I.metadata&&(j.metadata=I.metadata),j}static MakeAnimationAdditive(I,E,j){let w;w="object"===typeof E?E:{referenceFrame:E,range:j,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let z=I;w.cloneOriginalAnimationGroup&&(z=I.clone(w.clonedAnimationGroupName||z.name));const h=z.targetedAnimations;for(let t=0;t<h.length;t++){const I=h[t];I.animation=e.c.MakeAnimationAdditive(I.animation,w)}if(z.isAdditive=!0,w.clipKeys){let I=Number.MAX_VALUE,E=-Number.MAX_VALUE;const j=z.targetedAnimations;for(let e=0;e<j.length;e++){const w=j[e].animation.getKeys();I>w[0].frame&&(I=w[0].frame),E<w[w.length-1].frame&&(E=w[w.length-1].frame)}z._from=I,z._to=E}return z}static ClipKeys(I,E,j,e,w){const z=I.clone(e||I.name);return X.ClipKeysInPlace(z,E,j,w)}static ClipKeysInPlace(I,E,j,e){return X.ClipInPlace(I,E,j,e,!1)}static ClipFrames(I,E,j,e,w){const z=I.clone(e||I.name);return X.ClipFramesInPlace(z,E,j,w)}static ClipFramesInPlace(I,E,j,e){return X.ClipInPlace(I,E,j,e,!0)}static ClipInPlace(I,E,j,e){let w=arguments.length>4&&void 0!==arguments[4]&&arguments[4],z=Number.MAX_VALUE,h=-Number.MAX_VALUE;const t=I.targetedAnimations;for(let U=0;U<t.length;U++){const I=t[U],R=e?I.animation:I.animation.clone();w&&(R.createKeyForFrame(E),R.createKeyForFrame(j));const P=R.getKeys(),o=[];let Z=Number.MAX_VALUE;for(let e=0;e<P.length;e++){const I=P[e];if(!w&&e>=E&&e<=j||w&&I.frame>=E&&I.frame<=j){const E={frame:I.frame,value:I.value.clone?I.value.clone():I.value,inTangent:I.inTangent,outTangent:I.outTangent,interpolation:I.interpolation,lockedTangent:I.lockedTangent};Z===Number.MAX_VALUE&&(Z=E.frame),E.frame-=Z,o.push(E)}}0!==o.length?(z>o[0].frame&&(z=o[0].frame),h<o[o.length-1].frame&&(h=o[o.length-1].frame),R.setKeys(o,!0),I.animation=R):(t.splice(U,1),U--)}return I._from=z,I._to=h,I}getClassName(){return"AnimationGroup"}toString(I){let E="Name: "+this.name;return E+=", type: "+this.getClassName(),I&&(E+=", from: "+this._from,E+=", to: "+this._to,E+=", isStarted: "+this._isStarted,E+=", speedRatio: "+this._speedRatio,E+=", targetedAnimations length: "+this._targetedAnimations.length,E+=", animatables length: "+this._animatables),E}}}}]);