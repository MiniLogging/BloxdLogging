"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[78],{13828:(W,F,c)=>{c.r(F),c.d(F,{FlowGraphForLoopBlock:()=>u});var T=c(12566),Y=c(12517),Z=c(642),w=c(12554),A=c(12512);class u extends T.c{constructor(W){super(W),this.startIndex=this.registerDataInput("startIndex",Y.c,0),this.endIndex=this.registerDataInput("endIndex",Y.c),this.step=this.registerDataInput("step",Y.n,1),this.index=this.registerDataOutput("index",Y.f,new A.c((0,w.s)((null===W||void 0===W?void 0:W.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(W){var F;const c=(0,w.s)(this.startIndex.getValue(W)),T=this.step.getValue(W);let Y=(0,w.s)(this.endIndex.getValue(W));for(let Z=c;Z<Y&&(this.index.setValue(new A.c(Z),W),this.executionFlow._activateSignal(W),Y=(0,w.s)(this.endIndex.getValue(W)),!(Z>u.MaxLoopIterations*T));Z+=T);null!==(F=this.config)&&void 0!==F&&F.incrementIndexWhenLoopDone&&this.index.setValue(new A.c((0,w.s)(this.index.getValue(W))+T),W),this.completed._activateSignal(W)}getClassName(){return"FlowGraphForLoopBlock"}}u.MaxLoopIterations=1e3,(0,Z.h)("FlowGraphForLoopBlock",u)}}]);