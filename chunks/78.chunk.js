"use strict";(self["9s4i8ue3jq"]=self["9s4i8ue3jq"]||[]).push([[78],{15949:(a,c,o)=>{o.r(c),o.d(c,{AnimationGroup:()=>k,TargetedAnimation:()=>y});var s=o(13322),q=o(12639),t=o(12680),i=o(12852),p=o(14328),G=o(12810);class T{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(a,c,o,q){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=c,this._target=a,this._scene=o,this._host=q,this._activeTargets=[],c._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===s.b.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=G.Matrix.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const a={frame:0,value:this._minValue};this._keys.splice(0,0,a)}if(this._target instanceof Array){let a=0;for(const c of this._target)this._preparePath(c,a),this._getOriginalValues(a),a++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const t=c.getEvents();if(t&&t.length>0)for(const s of t)this._events.push(s._clone());this._enableBlending=a&&a.animationPropertiesOverride?a.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(a){let c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const o=this._animation.targetPropertyPath;if(o.length>1){let s=a;for(let a=0;a<o.length-1;a++){const c=o[a];if(s=s[c],void 0===s)throw new Error(`Invalid property (${c}) in property path (${o.join(".")})`)}this._targetPath=o[o.length-1],this._activeTargets[c]=s}else this._targetPath=o[0],this._activeTargets[c]=a;if(void 0===this._activeTargets[c][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${o.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let a=0;for(const c of this._target)void 0!==this._originalValue[a]&&this._setValue(c,this._activeTargets[a],this._originalValue[a],-1,a),a++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let a=0;a<this._events.length;a++)this._events[a].isDone=!1}isStopped(){return this._stopped}dispose(){const a=this._animation.runtimeAnimations.indexOf(this);a>-1&&this._animation.runtimeAnimations.splice(a,1)}setValue(a,c){if(this._targetIsArray)for(let o=0;o<this._target.length;o++){const s=this._target[o];this._setValue(s,this._activeTargets[o],a,c,o)}else this._setValue(this._target,this._directTarget,a,c,0)}_getOriginalValues(){let a,c=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const o=this._activeTargets[c];a=o.getLocalMatrix&&"_matrix"===this._targetPath?o.getLocalMatrix():o[this._targetPath],a&&a.clone?this._originalValue[c]=a.clone():this._originalValue[c]=a}_registerTargetForLateAnimationBinding(a,c){const o=a.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(o),o._lateAnimationHolders||(o._lateAnimationHolders={}),o._lateAnimationHolders[a.targetPath]||(o._lateAnimationHolders[a.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:c}),a.isAdditive?(o._lateAnimationHolders[a.targetPath].additiveAnimations.push(a),o._lateAnimationHolders[a.targetPath].totalAdditiveWeight+=a.weight):(o._lateAnimationHolders[a.targetPath].animations.push(a),o._lateAnimationHolders[a.targetPath].totalWeight+=a.weight)}_setValue(a,c,o,q,t){if(this._currentActiveTarget=c,this._weight=q,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const a=c[this._targetPath];a.clone?this._originalBlendValue=a.clone():this._originalBlendValue=a}this._originalBlendValue.m?s.b.AllowMatrixDecomposeForInterpolation?this._currentValue?G.Matrix.DecomposeLerpToRef(this._originalBlendValue,o,this._blendingFactor,this._currentValue):this._currentValue=G.Matrix.DecomposeLerp(this._originalBlendValue,o,this._blendingFactor):this._currentValue?G.Matrix.LerpToRef(this._originalBlendValue,o,this._blendingFactor,this._currentValue):this._currentValue=G.Matrix.Lerp(this._originalBlendValue,o,this._blendingFactor):this._currentValue=s.b._UniversalLerp(this._originalBlendValue,o,this._blendingFactor);const q=a&&a.animationPropertiesOverride?a.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=q}else this._currentValue?this._currentValue.G?this._currentValue.G(o):this._currentValue=o:null!==o&&void 0!==o&&o.clone?this._currentValue=o.clone():this._currentValue=o;-1!==q?this._registerTargetForLateAnimationBinding(this,this._originalValue[t]):this._animationState.loopMode===s.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[t],c[this._targetPath]):c[this._targetPath]=this._originalValue[t]+this._currentValue:c[this._targetPath]=this._currentValue,a.FC&&a.FC(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(a){let c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const o=this._animation.getKeys();a<o[0].frame?a=o[0].frame:a>o[o.length-1].frame&&(a=o[o.length-1].frame);const s=this._events;if(s.length)for(let t=0;t<s.length;t++)s[t].onlyOnce||(s[t].isDone=s[t].frame<a);this._currentFrame=a;const q=this._animation._interpolate(a,this._animationState);this.setValue(q,c)}_prepareForSpeedRatioChange(a){const c=this._previousElapsedTime*(this._animation.framePerSecond*a)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-c}animate(a,c,o,q,t){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const p=this._animation,G=p.targetPropertyPath;if(!G||G.length<1)return this._stopped=!0,!1;let T,C=!0;const j=this._events;let L=0;if(this._coreRuntimeAnimation)L=o-c,T=this._coreRuntimeAnimation.currentFrame,this._currentFrame=T,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let i;(c<this._minFrame||c>this._maxFrame)&&(c=this._minFrame),(o<this._minFrame||o>this._maxFrame)&&(o=this._maxFrame),L=o-c;let G=a*(p.framePerSecond*t)/1e3+this._absoluteFrameOffset,e=0,g=!1;const M=q&&this._animationState.loopMode===s.b.ANIMATIONLOOPMODE_YOYO;if(M){const a=(G-c)/L,o=Math.sin(a*Math.PI);G=Math.abs(o)*L+c;const s=o>=0?1:-1;this._yoyoDirection!==s&&(g=!0),this._yoyoDirection=s}if(this._previousElapsedTime=a,this._previousAbsoluteFrame=G,!q&&o>=c&&(G>=L&&t>0||G<=0&&t<0))C=!1,e=p._getKeyValue(this._maxValue);else if(!q&&c>=o&&(G<=L&&t<0||G>=0&&t>0))C=!1,e=p._getKeyValue(this._minValue);else if(this._animationState.loopMode!==s.b.ANIMATIONLOOPMODE_CYCLE){const a=o.toString()+c.toString();if(!this._offsetsCache[a]){this._animationState.repeatCount=0,this._animationState.loopMode=s.b.ANIMATIONLOOPMODE_CYCLE;const q=p._interpolate(c,this._animationState),t=p._interpolate(o,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),p.dataType){case s.b.ANIMATIONTYPE_FLOAT:this._offsetsCache[a]=t-q;break;case s.b.ANIMATIONTYPE_QUATERNION:case s.b.ANIMATIONTYPE_VECTOR3:case s.b.ANIMATIONTYPE_VECTOR2:case s.b.ANIMATIONTYPE_SIZE:case s.b.ANIMATIONTYPE_COLOR3:this._offsetsCache[a]=t.vc(q)}this._highLimitsCache[a]=t}e=this._highLimitsCache[a],i=this._offsetsCache[a]}if(void 0===i)switch(p.dataType){case s.b.ANIMATIONTYPE_FLOAT:i=0;break;case s.b.ANIMATIONTYPE_QUATERNION:i=s.j;break;case s.b.ANIMATIONTYPE_VECTOR3:i=s.p;break;case s.b.ANIMATIONTYPE_VECTOR2:i=s.o;break;case s.b.ANIMATIONTYPE_SIZE:i=s.l;break;case s.b.ANIMATIONTYPE_COLOR3:i=s.c;break;case s.b.ANIMATIONTYPE_COLOR4:i=s.g}if(this._host&&this._host.syncRoot){const a=this._host.syncRoot;T=c+L*((a.masterFrame-a.fromFrame)/(a.toFrame-a.fromFrame))}else T=G>0&&c>o||G<0&&c<o?C&&0!==L?o+G%L:c:C&&0!==L?c+G%L:o;if(!M&&(t>0&&this.currentFrame>T||t<0&&this.currentFrame<T)||M&&g){this._onLoop();for(let a=0;a<j.length;a++)j[a].onlyOnce||(j[a].isDone=!1);this._animationState.key=t>0?0:p.getKeys().length-1}this._currentFrame=T,this._animationState.repeatCount=0===L?0:G/L|0,this._animationState.highLimitValue=e,this._animationState.offsetValue=i}const e=p._interpolate(T,this._animationState);if(this.setValue(e,i),j.length)for(let s=0;s<j.length;s++)if(L>=0&&T>=j[s].frame&&j[s].frame>=c||L<0&&T<=j[s].frame&&j[s].frame<=c){const a=j[s];a.isDone||(a.onlyOnce&&(j.splice(s,1),s--),a.isDone=!0,a.action(T))}return C||(this._stopped=!0),C}}var C=o(12661);class j{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(a){this._weight=-1!==a?Math.min(Math.max(a,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(a){for(let c=0;c<this._runtimeAnimations.length;c++){this._runtimeAnimations[c]._prepareForSpeedRatioChange(a)}this._speedRatio=a,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(a,c){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,t=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,p=arguments.length>6?arguments[6]:void 0,G=arguments.length>7?arguments[7]:void 0,T=arguments.length>8?arguments[8]:void 0,C=arguments.length>9&&void 0!==arguments[9]&&arguments[9],j=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=c,this.fromFrame=o,this.toFrame=s,this.loopAnimation=t,this.onAnimationEnd=p,this.onAnimationLoop=T,this.isAdditive=C,this.playOrder=j,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.SG=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new q.d,this.onAnimationLoopObservable=new q.d,this._scene=a,G&&this.appendAnimations(c,G),this._speedRatio=i,a._activeAnimatables.push(this)}syncWith(a){if(this._syncRoot=a,a){const a=this._scene._activeAnimatables.indexOf(this);a>-1&&(this._scene._activeAnimatables.splice(a,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(a,c){for(let o=0;o<c.length;o++){const s=c[o],q=new T(a,s,this._scene,this);q._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(q)}}getAnimationByTargetProperty(a){const c=this._runtimeAnimations;for(let o=0;o<c.length;o++)if(c[o].animation.targetProperty===a)return c[o].animation;return null}getRuntimeAnimationByTargetProperty(a){const c=this._runtimeAnimations;for(let o=0;o<c.length;o++)if(c[o].animation.targetProperty===a)return c[o];return null}reset(){const a=this._runtimeAnimations;for(let c=0;c<a.length;c++)a[c].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(a){const c=this._runtimeAnimations;for(let o=0;o<c.length;o++)c[o].animation.enableBlending=!0,c[o].animation.blendingSpeed=a}disableBlending(){const a=this._runtimeAnimations;for(let c=0;c<a.length;c++)a[c].animation.enableBlending=!1}goToFrame(a){let c=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const o=this._runtimeAnimations;if(o[0]){const c=o[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??o[0].currentFrame;const s=0===this.speedRatio?0:(a-this._frameToSyncFromJump)/c*1e3/this.speedRatio;this._manualJumpDelay=-s}for(let s=0;s<o.length;s++)o[s].goToFrame(a,c?this._weight:-1);this._goToFrame=a}get paused(){return this.SG}pause(){this.SG||(this.SG=!0)}restart(){this.SG=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(a,c){let o=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(a||c){const q=this._scene._activeAnimatables.indexOf(this);if(q>-1){const t=this._runtimeAnimations;for(let o=t.length-1;o>=0;o--){const s=t[o];a&&s.animation.name!=a||(c&&!c(s.target)||(s.dispose(),t.splice(o,1)))}0==t.length&&(o||this._scene._activeAnimatables.splice(q,1),s||this._raiseOnAnimationEnd())}}else{const a=this._scene._activeAnimatables.indexOf(this);if(a>-1){o||this._scene._activeAnimatables.splice(a,1);const c=this._runtimeAnimations;for(let a=0;a<c.length;a++)c[a].dispose();this._runtimeAnimations.length=0,s||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((a=>{this.onAnimationEndObservable.add((()=>{a(this)}),void 0,void 0,this,!0)}))}_animate(a){if(this.SG)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=a),!0;if(null===this._localDelayOffset?(this._localDelayOffset=a,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=a-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let c=!1;const o=this._runtimeAnimations;let s;for(s=0;s<o.length;s++){const q=o[s].animate(a-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);c=c||q}if(this.animationStarted=c,!c){if(this.disposeOnEnd)for(s=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(s,1),s=0;s<o.length;s++)o[s].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return c}}function L(a){if(0===a.totalWeight&&0===a.totalAdditiveWeight)return a.originalValue;let c=1;const o=G.TmpVectors.Hc[0],s=G.TmpVectors.Hc[1],q=G.TmpVectors.Quaternion[0];let t=0;const i=a.animations[0],p=a.originalValue;let T=1,C=!1;if(a.totalWeight<1)T=1-a.totalWeight,p.decompose(s,q,o);else{if(t=1,c=a.totalWeight,T=i.weight/c,1==T){if(!a.totalAdditiveWeight)return i.currentValue;C=!0}i.currentValue.decompose(s,q,o)}if(!C){s.scaleInPlace(T),o.scaleInPlace(T),q.scaleInPlace(T);for(let i=t;i<a.animations.length;i++){const t=a.animations[i];if(0===t.weight)continue;T=t.weight/c;const p=G.TmpVectors.Hc[2],C=G.TmpVectors.Hc[3],j=G.TmpVectors.Quaternion[1];t.currentValue.decompose(C,j,p),C.scaleAndAddToRef(T,s),j.scaleAndAddToRef(G.Quaternion.Dot(q,j)>0?T:-T,q),p.scaleAndAddToRef(T,o)}q.normalize()}for(let L=0;L<a.additiveAnimations.length;L++){const c=a.additiveAnimations[L];if(0===c.weight)continue;const t=G.TmpVectors.Hc[2],i=G.TmpVectors.Hc[3],p=G.TmpVectors.Quaternion[1];c.currentValue.decompose(i,p,t),i.multiplyToRef(s,i),G.Hc.LerpToRef(s,i,c.weight,s),q.multiplyToRef(p,p),G.Quaternion.SlerpToRef(q,p,c.weight,q),t.scaleAndAddToRef(c.weight,o)}const j=i?i._animationState.workValue:G.TmpVectors.Matrix[0].clone();return G.Matrix.ComposeToRef(s,q,o,j),j}function e(a,c){if(0===a.totalWeight&&0===a.totalAdditiveWeight)return c;const o=a.animations[0],s=a.originalValue;let q=c;if(0===a.totalWeight&&a.totalAdditiveWeight>0)q.G(s);else if(1===a.animations.length){if(G.Quaternion.SlerpToRef(s,o.currentValue,Math.min(1,a.totalWeight),q),0===a.totalAdditiveWeight)return q}else if(a.animations.length>1){let o,t,i=1;if(a.totalWeight<1){const c=1-a.totalWeight;o=[],t=[],o.push(s),t.push(c)}else{if(2===a.animations.length&&(G.Quaternion.SlerpToRef(a.animations[0].currentValue,a.animations[1].currentValue,a.animations[1].weight/a.totalWeight,c),0===a.totalAdditiveWeight))return c;o=[],t=[],i=a.totalWeight}for(let c=0;c<a.animations.length;c++){const s=a.animations[c];o.push(s.currentValue),t.push(s.weight/i)}let p=0;for(let a=0;a<o.length;)a?(p+=t[a],G.Quaternion.SlerpToRef(q,o[a],t[a]/p,q),a++):(G.Quaternion.SlerpToRef(o[a],o[a+1],t[a+1]/(t[a]+t[a+1]),c),q=c,p=t[a]+t[a+1],a+=2)}for(let t=0;t<a.additiveAnimations.length;t++){const c=a.additiveAnimations[t];0!==c.weight&&(q.multiplyToRef(c.currentValue,G.TmpVectors.Quaternion[0]),G.Quaternion.SlerpToRef(q,G.TmpVectors.Quaternion[0],c.weight,q))}return q}var g,M,N=o(13045);g=N.e,(M=p.e)&&(M.prototype.copyAnimationRange=function(a,c,o){let q=arguments.length>3&&void 0!==arguments[3]&&arguments[3],t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new s.b(this.name,"_matrix",a.animations[0].framePerSecond,s.b.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const i=a.animations[0].getRange(c);if(!i)return!1;const p=i.from,G=i.to,T=a.animations[0].getKeys(),C=a.length,j=a.getParent(),L=this.getParent(),e=q&&j&&C&&this.length&&C!==this.length,g=e&&L&&j?L.length/j.length:1,M=q&&!L&&t&&(1!==t.x||1!==t.y||1!==t.z),N=this.animations[0].getKeys();let y,k,n;for(let s=0,f=T.length;s<f;s++)y=T[s],y.frame>=p&&y.frame<=G&&(q?(n=y.value.clone(),e?(k=n.getTranslation(),n.setTranslation(k.scaleInPlace(g))):M&&t?(k=n.getTranslation(),n.setTranslation(k.multiplyInPlace(t))):n=y.value):n=y.value,N.push({frame:y.frame+o,value:n}));return this.animations[0].createRange(c,p+o,G+o),!0}),g&&(g.prototype._animate=function(a){if(!this.animationsEnabled)return;const c=C.b.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=c}this.deltaTime=void 0!==a?a:this.useConstantAnimationDeltaTime?16:(c-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=c;const o=this._activeAnimatables;if(0===o.length)return;this._animationTime+=this.deltaTime;const q=this._animationTime;for(let s=0;s<o.length;s++){const a=o[s];!a._animate(q)&&a.disposeOnEnd&&s--}!function(a){if(a._registeredForLateAnimationBindings.length){for(let c=0;c<a._registeredForLateAnimationBindings.length;c++){const o=a._registeredForLateAnimationBindings.data[c];for(const a in o._lateAnimationHolders){const c=o._lateAnimationHolders[a],q=c.animations[0],t=c.originalValue;if(void 0===t||null===t)continue;const i=s.b.AllowMatrixDecomposeForInterpolation&&t.m;let p=o[a];if(i)p=L(c);else if(void 0!==t.w)p=e(c,p||G.Quaternion.Identity());else{let a=0,o=1;const i=q&&q._animationState.loopMode===s.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(c.totalWeight<1)p=i?t.clone?t.clone():t:q&&t.scale?t.scale(1-c.totalWeight):q?t*(1-c.totalWeight):t.clone?t.clone():t;else if(q){o=c.totalWeight;const s=q.weight/o;p=1!==s?q.currentValue.scale?q.currentValue.scale(s):q.currentValue*s:q.currentValue,i&&(p.addToRef?p.addToRef(t,p):p+=t),a=1}for(let s=a;s<c.animations.length;s++){const a=c.animations[s],q=a.weight/o;q&&(a.currentValue.scaleAndAddToRef?a.currentValue.scaleAndAddToRef(q,p):p+=a.currentValue*q)}for(let s=0;s<c.additiveAnimations.length;s++){const a=c.additiveAnimations[s],o=a.weight;o&&(a.currentValue.scaleAndAddToRef?a.currentValue.scaleAndAddToRef(o,p):p+=a.currentValue*o)}}o[a]=p}o._lateAnimationHolders={}}a._registeredForLateAnimationBindings.reset()}}(this)},g.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((a,c)=>a.playOrder-c.playOrder))},g.prototype.beginWeightedAnimation=function(a,c,o){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,q=arguments.length>4?arguments[4]:void 0,t=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6?arguments[6]:void 0,p=arguments.length>7?arguments[7]:void 0,G=arguments.length>8?arguments[8]:void 0,T=arguments.length>9?arguments[9]:void 0,C=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const j=this.beginAnimation(a,c,o,q,t,i,p,!1,G,T,C);return j.weight=s,j},g.prototype.beginAnimation=function(a,c,o,s){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,t=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,p=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],G=arguments.length>8?arguments[8]:void 0,T=arguments.length>9?arguments[9]:void 0,C=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(q<0){const a=c;c=o,o=a,q=-q}c>o&&(q=-q),p&&this.stopAnimation(a,void 0,G),i||(i=new j(this,a,c,o,s,q,t,void 0,T,C));const L=!G||G(a);if(a.animations&&L&&i.appendAnimations(a,a.animations),a.getAnimatables){const C=a.getAnimatables();for(let a=0;a<C.length;a++)this.beginAnimation(C[a],c,o,s,q,t,i,p,G,T)}return i.reset(),i},g.prototype.beginHierarchyAnimation=function(a,c,o,s,q){let t=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6?arguments[6]:void 0,p=arguments.length>7?arguments[7]:void 0,G=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],T=arguments.length>9?arguments[9]:void 0,C=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const j=a.getDescendants(c),L=[];L.push(this.beginAnimation(a,o,s,q,t,i,p,G,T,void 0,C));for(const e of j)L.push(this.beginAnimation(e,o,s,q,t,i,p,G,T,void 0,C));return L},g.prototype.beginDirectAnimation=function(a,c,o,s,q){let t=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(t<0){const a=o;o=s,s=a,t=-t}return o>s&&(t=-t),new j(this,a,o,s,q,t,arguments.length>6?arguments[6]:void 0,c,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},g.prototype.beginDirectHierarchyAnimation=function(a,c,o,s,q,t,i,p,G){let T=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const C=a.getDescendants(c),j=[];j.push(this.beginDirectAnimation(a,o,s,q,t,i,p,G,T));for(const L of C)j.push(this.beginDirectAnimation(L,o,s,q,t,i,p,G,T));return j},g.prototype.getAnimatableByTarget=function(a){for(let c=0;c<this._activeAnimatables.length;c++)if(this._activeAnimatables[c].target===a)return this._activeAnimatables[c];return null},g.prototype.getAllAnimatablesByTarget=function(a){const c=[];for(let o=0;o<this._activeAnimatables.length;o++)this._activeAnimatables[o].target===a&&c.push(this._activeAnimatables[o]);return c},g.prototype.stopAnimation=function(a,c,o){const s=this.getAllAnimatablesByTarget(a);for(const q of s)q.stop(c,o)},g.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let a=0;a<this._activeAnimatables.length;a++)this._activeAnimatables[a].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const a of this.animationGroups)a.stop()});class y{getClassName(){return"TargetedAnimation"}serialize(){const a={};return a.animation=this.animation.serialize(),a.targetId=this.target.id,a}}class k{get mask(){return this._mask}set mask(a){this._mask!==a&&(this._mask=a,this.syncWithMask(!0))}syncWithMask(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||a){this._numActiveAnimatables=0;for(let a=0;a<this._animatables.length;++a){const c=this._animatables[a];!this.mask||this.mask.disabled||this.mask.retainsTarget(c.target.name)?(this._numActiveAnimatables++,c.paused&&c.restart()):c.paused||c.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let a=0;a<this._animatables.length;++a){const c=this._animatables[a];this.mask.retainsTarget(c.target.name)||(c.stop(),this._animatables.splice(a,1),--a)}for(let a=0;a<this._targetedAnimations.length;a++){const c=this._targetedAnimations[a];this.mask.retainsTarget(c.target.name)||(this._targetedAnimations.splice(a,1),--a)}}}get from(){return this._from}set from(a){if(this._from!==a){this._from=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].fromFrame=this._from}}}get to(){return this._to}set to(a){if(this._to!==a){this._to=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(a){if(this._speedRatio!==a){this._speedRatio=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(a){if(this._loopAnimation!==a){this._loopAnimation=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(a){if(this._isAdditive!==a){this._isAdditive=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(a){this._weight!==a&&(this._weight=a,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(a){if(this._playOrder!==a&&(this._playOrder=a,this._animatables.length>0)){for(let a=0;a<this._animatables.length;a++)this._animatables[a].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(a){if(this._enableBlending!==a&&(this._enableBlending=a,null!==a))for(let c=0;c<this._targetedAnimations.length;++c)this._targetedAnimations[c].animation.enableBlending=a}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(a){if(this._blendingSpeed!==a&&(this._blendingSpeed=a,null!==a))for(let c=0;c<this._targetedAnimations.length;++c)this._targetedAnimations[c].animation.blendingSpeed=a}getLength(a,c){a=a??this._from;return((c=c??this._to)-a)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(a){let c=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],o=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3?arguments[3]:void 0;if(0===a.length)return null;s=s??a[0].weight;let q=Number.MAX_VALUE,t=-Number.MAX_VALUE;if(o)for(const p of a)p.from<q&&(q=p.from),p.to>t&&(t=p.to);const i=new k(a[0].name+"_merged",a[0]._scene,s);for(const p of a){o&&p.normalize(q,t);for(const a of p.targetedAnimations)i.addTargetedAnimation(a.animation,a.target);c&&p.dispose()}return i}constructor(a){let c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=a,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new q.d,this.onAnimationLoopObservable=new q.d,this.onAnimationGroupLoopObservable=new q.d,this.onAnimationGroupEndObservable=new q.d,this.onAnimationGroupPauseObservable=new q.d,this.onAnimationGroupPlayObservable=new q.d,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=c||t.b.LastCreatedScene,this._weight=o,this._playOrder=s,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(a,c){const o=new y;o.animation=a,o.target=c;const s=a.getKeys();return this._from>s[0].frame&&(this._from=s[0].frame),this._to<s[s.length-1].frame&&(this._to=s[s.length-1].frame),null!==this._enableBlending&&(a.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(a.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(o),this._shouldStart=!0,o}removeTargetedAnimation(a){for(let c=this._targetedAnimations.length-1;c>-1;c--){this._targetedAnimations[c].animation===a&&this._targetedAnimations.splice(c,1)}}normalize(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==a&&(a=this._from),null==c&&(c=this._to);for(let o=0;o<this._targetedAnimations.length;o++){const s=this._targetedAnimations[o].animation.getKeys(),q=s[0],t=s[s.length-1];if(q.frame>a){const c={frame:a,value:q.value,inTangent:q.inTangent,outTangent:q.outTangent,interpolation:q.interpolation};s.splice(0,0,c)}if(t.frame<c){const a={frame:c,value:t.value,inTangent:t.inTangent,outTangent:t.outTangent,interpolation:t.interpolation};s.push(a)}}return this._from=a,this._to=c,this}_processLoop(a,c,o){a.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(c),this._animationLoopFlags[o]||(this._animationLoopFlags[o]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0],c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,o=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0,q=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=a,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let t=0;t<this._targetedAnimations.length;t++){const i=this._targetedAnimations[t],p=this._scene.beginDirectAnimation(i.target,[i.animation],void 0!==o?o:this._from,void 0!==s?s:this._to,a,c,void 0,void 0,void 0!==q?q:this._isAdditive);p.weight=this._weight,p.playOrder=this._playOrder,p.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(i),this._checkAnimationGroupEnded(p)},this._processLoop(p,i,t),this._animatables.push(p)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=c,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let a=0;a<this._animatables.length;a++){this._animatables[a].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(a){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==a&&(this.loopAnimation=a),this.restart()):(this.stop(),this.start(a,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let a=0;a<this._animatables.length;a++){this._animatables[a].reset()}return this}restart(){if(!this._isStarted)return this;for(let a=0;a<this._animatables.length;a++){this._animatables[a].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const c=this._animatables.slice();for(let s=0;s<c.length;s++)c[s].stop(void 0,void 0,!0,a);let o=0;for(let s=0;s<this._scene._activeAnimatables.length;s++){const c=this._scene._activeAnimatables[s];c._runtimeAnimations.length>0?this._scene._activeAnimatables[o++]=c:a&&this._checkAnimationGroupEnded(c,a)}return this._scene._activeAnimatables.length=o,this._isStarted=!1,this}setWeightForAllAnimatables(a){for(let c=0;c<this._animatables.length;c++){this._animatables[c].weight=a}return this}syncAllAnimationsWith(a){for(let c=0;c<this._animatables.length;c++){this._animatables[c].syncWith(a)}return this}goToFrame(a){let c=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let o=0;o<this._animatables.length;o++){this._animatables[o].goToFrame(a,c)}return this}getCurrentFrame(){var a;return(null===(a=this.animatables[0])||void 0===a?void 0:a.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const a=this._scene.animationGroups.indexOf(this);if(a>-1&&this._scene.animationGroups.splice(a,1),this._parentContainer){const a=this._parentContainer.animationGroups.indexOf(this);a>-1&&this._parentContainer.animationGroups.splice(a,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(a){let c=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const o=this._animatables.indexOf(a);o>-1&&this._animatables.splice(o,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,c||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(a,c){let o=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=new k(a||this.name,this._scene,this._weight,this._playOrder);s._from=this.from,s._to=this.to,s._speedRatio=this.speedRatio,s._loopAnimation=this.loopAnimation,s._isAdditive=this.isAdditive,s._enableBlending=this.enableBlending,s._blendingSpeed=this.blendingSpeed,s.metadata=this.metadata,s.mask=this.mask;for(const q of this._targetedAnimations)s.addTargetedAnimation(o?q.animation.clone():q.animation,c?c(q.target):q.target);return s}serialize(){const a={};a.name=this.name,a.from=this.from,a.to=this.to,a.speedRatio=this.speedRatio,a.loopAnimation=this.loopAnimation,a.isAdditive=this.isAdditive,a.weight=this.weight,a.playOrder=this.playOrder,a.enableBlending=this.enableBlending,a.blendingSpeed=this.blendingSpeed,a.targetedAnimations=[];for(let c=0;c<this.targetedAnimations.length;c++){const o=this.targetedAnimations[c];a.targetedAnimations[c]=o.serialize()}return i.c&&i.c.HasTags(this)&&(a.tags=i.c.GetTags(this)),this.metadata&&(a.metadata=this.metadata),a}static Parse(a,c){const o=new k(a.name,c,a.weight,a.playOrder);for(let q=0;q<a.targetedAnimations.length;q++){const t=a.targetedAnimations[q],i=s.b.Parse(t.animation),p=t.targetId;if("influence"===t.animation.property){const a=c.getMorphTargetById(p);a&&o.addTargetedAnimation(i,a)}else{const a=c.getNodeById(p);null!=a&&o.addTargetedAnimation(i,a)}}return i.c&&i.c.AddTagsTo(o,a.tags),null!==a.from&&null!==a.to&&o.normalize(a.from,a.to),void 0!==a.speedRatio&&(o._speedRatio=a.speedRatio),void 0!==a.loopAnimation&&(o._loopAnimation=a.loopAnimation),void 0!==a.isAdditive&&(o._isAdditive=a.isAdditive),void 0!==a.weight&&(o._weight=a.weight),void 0!==a.playOrder&&(o._playOrder=a.playOrder),void 0!==a.enableBlending&&(o._enableBlending=a.enableBlending),void 0!==a.blendingSpeed&&(o._blendingSpeed=a.blendingSpeed),void 0!==a.metadata&&(o.metadata=a.metadata),o}static MakeAnimationAdditive(a,c,o){let q;q="object"===typeof c?c:{referenceFrame:c,range:o,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let t=a;q.cloneOriginalAnimationGroup&&(t=a.clone(q.clonedAnimationGroupName||t.name));const i=t.targetedAnimations;for(let p=0;p<i.length;p++){const a=i[p];a.animation=s.b.MakeAnimationAdditive(a.animation,q)}if(t.isAdditive=!0,q.clipKeys){let a=Number.MAX_VALUE,c=-Number.MAX_VALUE;const o=t.targetedAnimations;for(let s=0;s<o.length;s++){const q=o[s].animation.getKeys();a>q[0].frame&&(a=q[0].frame),c<q[q.length-1].frame&&(c=q[q.length-1].frame)}t._from=a,t._to=c}return t}static ClipKeys(a,c,o,s,q){const t=a.clone(s||a.name);return k.ClipKeysInPlace(t,c,o,q)}static ClipKeysInPlace(a,c,o,s){return k.ClipInPlace(a,c,o,s,!1)}static ClipFrames(a,c,o,s,q){const t=a.clone(s||a.name);return k.ClipFramesInPlace(t,c,o,q)}static ClipFramesInPlace(a,c,o,s){return k.ClipInPlace(a,c,o,s,!0)}static ClipInPlace(a,c,o,s){let q=arguments.length>4&&void 0!==arguments[4]&&arguments[4],t=Number.MAX_VALUE,i=-Number.MAX_VALUE;const p=a.targetedAnimations;for(let G=0;G<p.length;G++){const a=p[G],T=s?a.animation:a.animation.clone();q&&(T.createKeyForFrame(c),T.createKeyForFrame(o));const C=T.getKeys(),j=[];let L=Number.MAX_VALUE;for(let s=0;s<C.length;s++){const a=C[s];if(!q&&s>=c&&s<=o||q&&a.frame>=c&&a.frame<=o){const c={frame:a.frame,value:a.value.clone?a.value.clone():a.value,inTangent:a.inTangent,outTangent:a.outTangent,interpolation:a.interpolation,lockedTangent:a.lockedTangent};L===Number.MAX_VALUE&&(L=c.frame),c.frame-=L,j.push(c)}}0!==j.length?(t>j[0].frame&&(t=j[0].frame),i<j[j.length-1].frame&&(i=j[j.length-1].frame),T.setKeys(j,!0),a.animation=T):(p.splice(G,1),G--)}return a._from=t,a._to=i,a}getClassName(){return"AnimationGroup"}toString(a){let c="Name: "+this.name;return c+=", type: "+this.getClassName(),a&&(c+=", from: "+this._from,c+=", to: "+this._to,c+=", isStarted: "+this._isStarted,c+=", speedRatio: "+this._speedRatio,c+=", targetedAnimations length: "+this._targetedAnimations.length,c+=", animatables length: "+this._animatables),c}}}}]);