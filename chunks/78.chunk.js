"use strict";(self["9x1utqq1axc"]=self["9x1utqq1axc"]||[]).push([[78],{15457:(y,c,A)=>{A.r(c),A.d(c,{AnimationGroup:()=>t,TargetedAnimation:()=>D});var l=A(12845),w=A(12153),N=A(12184),p=A(12368),W=A(13917),h=A(12325);class I{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(y,c,A,w){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=c,this._target=y,this._scene=A,this._host=w,this._activeTargets=[],c._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===l.b.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=h.Matrix.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const y={frame:0,value:this._minValue};this._keys.splice(0,0,y)}if(this._target instanceof Array){let y=0;for(const c of this._target)this._preparePath(c,y),this._getOriginalValues(y),y++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const N=c.getEvents();if(N&&N.length>0)for(const l of N)this._events.push(l._clone());this._enableBlending=y&&y.animationPropertiesOverride?y.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(y){let c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const A=this._animation.targetPropertyPath;if(A.length>1){let l=y;for(let y=0;y<A.length-1;y++){const c=A[y];if(l=l[c],void 0===l)throw new Error(`Invalid property (${c}) in property path (${A.join(".")})`)}this._targetPath=A[A.length-1],this._activeTargets[c]=l}else this._targetPath=A[0],this._activeTargets[c]=y;if(void 0===this._activeTargets[c][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${A.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let y=0;for(const c of this._target)void 0!==this._originalValue[y]&&this._setValue(c,this._activeTargets[y],this._originalValue[y],-1,y),y++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let y=0;y<this._events.length;y++)this._events[y].isDone=!1}isStopped(){return this._stopped}dispose(){const y=this._animation.runtimeAnimations.indexOf(this);y>-1&&this._animation.runtimeAnimations.splice(y,1)}setValue(y,c){if(this._targetIsArray)for(let A=0;A<this._target.length;A++){const l=this._target[A];this._setValue(l,this._activeTargets[A],y,c,A)}else this._setValue(this._target,this._directTarget,y,c,0)}_getOriginalValues(){let y,c=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const A=this._activeTargets[c];y=A.getLocalMatrix&&"_matrix"===this._targetPath?A.getLocalMatrix():A[this._targetPath],y&&y.clone?this._originalValue[c]=y.clone():this._originalValue[c]=y}_registerTargetForLateAnimationBinding(y,c){const A=y.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(A),A._lateAnimationHolders||(A._lateAnimationHolders={}),A._lateAnimationHolders[y.targetPath]||(A._lateAnimationHolders[y.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:c}),y.isAdditive?(A._lateAnimationHolders[y.targetPath].additiveAnimations.push(y),A._lateAnimationHolders[y.targetPath].totalAdditiveWeight+=y.weight):(A._lateAnimationHolders[y.targetPath].animations.push(y),A._lateAnimationHolders[y.targetPath].totalWeight+=y.weight)}_setValue(y,c,A,w,N){if(this._currentActiveTarget=c,this._weight=w,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const y=c[this._targetPath];y.clone?this._originalBlendValue=y.clone():this._originalBlendValue=y}this._originalBlendValue.m?l.b.AllowMatrixDecomposeForInterpolation?this._currentValue?h.Matrix.DecomposeLerpToRef(this._originalBlendValue,A,this._blendingFactor,this._currentValue):this._currentValue=h.Matrix.DecomposeLerp(this._originalBlendValue,A,this._blendingFactor):this._currentValue?h.Matrix.LerpToRef(this._originalBlendValue,A,this._blendingFactor,this._currentValue):this._currentValue=h.Matrix.Lerp(this._originalBlendValue,A,this._blendingFactor):this._currentValue=l.b._UniversalLerp(this._originalBlendValue,A,this._blendingFactor);const w=y&&y.animationPropertiesOverride?y.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=w}else this._currentValue?this._currentValue.p?this._currentValue.p(A):this._currentValue=A:null!==A&&void 0!==A&&A.clone?this._currentValue=A.clone():this._currentValue=A;-1!==w?this._registerTargetForLateAnimationBinding(this,this._originalValue[N]):this._animationState.loopMode===l.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[N],c[this._targetPath]):c[this._targetPath]=this._originalValue[N]+this._currentValue:c[this._targetPath]=this._currentValue,y.Bq&&y.Bq(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(y){let c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const A=this._animation.getKeys();y<A[0].frame?y=A[0].frame:y>A[A.length-1].frame&&(y=A[A.length-1].frame);const l=this._events;if(l.length)for(let N=0;N<l.length;N++)l[N].onlyOnce||(l[N].isDone=l[N].frame<y);this._currentFrame=y;const w=this._animation._interpolate(y,this._animationState);this.setValue(w,c)}_prepareForSpeedRatioChange(y){const c=this._previousElapsedTime*(this._animation.framePerSecond*y)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-c}animate(y,c,A,w,N){let p=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const W=this._animation,h=W.targetPropertyPath;if(!h||h.length<1)return this._stopped=!0,!1;let I,q=!0;const o=this._events;let O=0;if(this._coreRuntimeAnimation)O=A-c,I=this._coreRuntimeAnimation.currentFrame,this._currentFrame=I,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let p;(c<this._minFrame||c>this._maxFrame)&&(c=this._minFrame),(A<this._minFrame||A>this._maxFrame)&&(A=this._maxFrame),O=A-c;let h=y*(W.framePerSecond*N)/1e3+this._absoluteFrameOffset,L=0,i=!1;const H=w&&this._animationState.loopMode===l.b.ANIMATIONLOOPMODE_YOYO;if(H){const y=(h-c)/O,A=Math.sin(y*Math.PI);h=Math.abs(A)*O+c;const l=A>=0?1:-1;this._yoyoDirection!==l&&(i=!0),this._yoyoDirection=l}if(this._previousElapsedTime=y,this._previousAbsoluteFrame=h,!w&&A>=c&&(h>=O&&N>0||h<=0&&N<0))q=!1,L=W._getKeyValue(this._maxValue);else if(!w&&c>=A&&(h<=O&&N<0||h>=0&&N>0))q=!1,L=W._getKeyValue(this._minValue);else if(this._animationState.loopMode!==l.b.ANIMATIONLOOPMODE_CYCLE){const y=A.toString()+c.toString();if(!this._offsetsCache[y]){this._animationState.repeatCount=0,this._animationState.loopMode=l.b.ANIMATIONLOOPMODE_CYCLE;const w=W._interpolate(c,this._animationState),N=W._interpolate(A,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),W.dataType){case l.b.ANIMATIONTYPE_FLOAT:this._offsetsCache[y]=N-w;break;case l.b.ANIMATIONTYPE_QUATERNION:case l.b.ANIMATIONTYPE_VECTOR3:case l.b.ANIMATIONTYPE_VECTOR2:case l.b.ANIMATIONTYPE_SIZE:case l.b.ANIMATIONTYPE_COLOR3:this._offsetsCache[y]=N.xc(w)}this._highLimitsCache[y]=N}L=this._highLimitsCache[y],p=this._offsetsCache[y]}if(void 0===p)switch(W.dataType){case l.b.ANIMATIONTYPE_FLOAT:p=0;break;case l.b.ANIMATIONTYPE_QUATERNION:p=l.h;break;case l.b.ANIMATIONTYPE_VECTOR3:p=l.s;break;case l.b.ANIMATIONTYPE_VECTOR2:p=l.p;break;case l.b.ANIMATIONTYPE_SIZE:p=l.l;break;case l.b.ANIMATIONTYPE_COLOR3:p=l.d;break;case l.b.ANIMATIONTYPE_COLOR4:p=l.g}if(this._host&&this._host.syncRoot){const y=this._host.syncRoot;I=c+O*((y.masterFrame-y.fromFrame)/(y.toFrame-y.fromFrame))}else I=h>0&&c>A||h<0&&c<A?q&&0!==O?A+h%O:c:q&&0!==O?c+h%O:A;if(!H&&(N>0&&this.currentFrame>I||N<0&&this.currentFrame<I)||H&&i){this._onLoop();for(let y=0;y<o.length;y++)o[y].onlyOnce||(o[y].isDone=!1);this._animationState.key=N>0?0:W.getKeys().length-1}this._currentFrame=I,this._animationState.repeatCount=0===O?0:h/O|0,this._animationState.highLimitValue=L,this._animationState.offsetValue=p}const L=W._interpolate(I,this._animationState);if(this.setValue(L,p),o.length)for(let l=0;l<o.length;l++)if(O>=0&&I>=o[l].frame&&o[l].frame>=c||O<0&&I<=o[l].frame&&o[l].frame<=c){const y=o[l];y.isDone||(y.onlyOnce&&(o.splice(l,1),l--),y.isDone=!0,y.action(I))}return q||(this._stopped=!0),q}}var q=A(12171);class o{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(y){this._weight=-1!==y?Math.min(Math.max(y,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(y){for(let c=0;c<this._runtimeAnimations.length;c++){this._runtimeAnimations[c]._prepareForSpeedRatioChange(y)}this._speedRatio=y,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(y,c){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,N=arguments.length>4&&void 0!==arguments[4]&&arguments[4],p=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,W=arguments.length>6?arguments[6]:void 0,h=arguments.length>7?arguments[7]:void 0,I=arguments.length>8?arguments[8]:void 0,q=arguments.length>9&&void 0!==arguments[9]&&arguments[9],o=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=c,this.fromFrame=A,this.toFrame=l,this.loopAnimation=N,this.onAnimationEnd=W,this.onAnimationLoop=I,this.isAdditive=q,this.playOrder=o,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.GW=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new w.d,this.onAnimationLoopObservable=new w.d,this._scene=y,h&&this.appendAnimations(c,h),this._speedRatio=p,y._activeAnimatables.push(this)}syncWith(y){if(this._syncRoot=y,y){const y=this._scene._activeAnimatables.indexOf(this);y>-1&&(this._scene._activeAnimatables.splice(y,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(y,c){for(let A=0;A<c.length;A++){const l=c[A],w=new I(y,l,this._scene,this);w._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(w)}}getAnimationByTargetProperty(y){const c=this._runtimeAnimations;for(let A=0;A<c.length;A++)if(c[A].animation.targetProperty===y)return c[A].animation;return null}getRuntimeAnimationByTargetProperty(y){const c=this._runtimeAnimations;for(let A=0;A<c.length;A++)if(c[A].animation.targetProperty===y)return c[A];return null}reset(){const y=this._runtimeAnimations;for(let c=0;c<y.length;c++)y[c].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(y){const c=this._runtimeAnimations;for(let A=0;A<c.length;A++)c[A].animation.enableBlending=!0,c[A].animation.blendingSpeed=y}disableBlending(){const y=this._runtimeAnimations;for(let c=0;c<y.length;c++)y[c].animation.enableBlending=!1}goToFrame(y){let c=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const A=this._runtimeAnimations;if(A[0]){const c=A[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??A[0].currentFrame;const l=0===this.speedRatio?0:(y-this._frameToSyncFromJump)/c*1e3/this.speedRatio;this._manualJumpDelay=-l}for(let l=0;l<A.length;l++)A[l].goToFrame(y,c?this._weight:-1);this._goToFrame=y}get paused(){return this.GW}pause(){this.GW||(this.GW=!0)}restart(){this.GW=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(y,c){let A=arguments.length>2&&void 0!==arguments[2]&&arguments[2],l=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(y||c){const w=this._scene._activeAnimatables.indexOf(this);if(w>-1){const N=this._runtimeAnimations;for(let A=N.length-1;A>=0;A--){const l=N[A];y&&l.animation.name!=y||(c&&!c(l.target)||(l.dispose(),N.splice(A,1)))}0==N.length&&(A||this._scene._activeAnimatables.splice(w,1),l||this._raiseOnAnimationEnd())}}else{const y=this._scene._activeAnimatables.indexOf(this);if(y>-1){A||this._scene._activeAnimatables.splice(y,1);const c=this._runtimeAnimations;for(let y=0;y<c.length;y++)c[y].dispose();this._runtimeAnimations.length=0,l||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((y=>{this.onAnimationEndObservable.add((()=>{y(this)}),void 0,void 0,this,!0)}))}_animate(y){if(this.GW)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=y),!0;if(null===this._localDelayOffset?(this._localDelayOffset=y,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=y-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let c=!1;const A=this._runtimeAnimations;let l;for(l=0;l<A.length;l++){const w=A[l].animate(y-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);c=c||w}if(this.animationStarted=c,!c){if(this.disposeOnEnd)for(l=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(l,1),l=0;l<A.length;l++)A[l].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return c}}function O(y){if(0===y.totalWeight&&0===y.totalAdditiveWeight)return y.originalValue;let c=1;const A=h.TmpVectors.gc[0],l=h.TmpVectors.gc[1],w=h.TmpVectors.Quaternion[0];let N=0;const p=y.animations[0],W=y.originalValue;let I=1,q=!1;if(y.totalWeight<1)I=1-y.totalWeight,W.decompose(l,w,A);else{if(N=1,c=y.totalWeight,I=p.weight/c,1==I){if(!y.totalAdditiveWeight)return p.currentValue;q=!0}p.currentValue.decompose(l,w,A)}if(!q){l.scaleInPlace(I),A.scaleInPlace(I),w.scaleInPlace(I);for(let p=N;p<y.animations.length;p++){const N=y.animations[p];if(0===N.weight)continue;I=N.weight/c;const W=h.TmpVectors.gc[2],q=h.TmpVectors.gc[3],o=h.TmpVectors.Quaternion[1];N.currentValue.decompose(q,o,W),q.scaleAndAddToRef(I,l),o.scaleAndAddToRef(h.Quaternion.Dot(w,o)>0?I:-I,w),W.scaleAndAddToRef(I,A)}w.normalize()}for(let O=0;O<y.additiveAnimations.length;O++){const c=y.additiveAnimations[O];if(0===c.weight)continue;const N=h.TmpVectors.gc[2],p=h.TmpVectors.gc[3],W=h.TmpVectors.Quaternion[1];c.currentValue.decompose(p,W,N),p.multiplyToRef(l,p),h.gc.LerpToRef(l,p,c.weight,l),w.multiplyToRef(W,W),h.Quaternion.SlerpToRef(w,W,c.weight,w),N.scaleAndAddToRef(c.weight,A)}const o=p?p._animationState.workValue:h.TmpVectors.Matrix[0].clone();return h.Matrix.ComposeToRef(l,w,A,o),o}function L(y,c){if(0===y.totalWeight&&0===y.totalAdditiveWeight)return c;const A=y.animations[0],l=y.originalValue;let w=c;if(0===y.totalWeight&&y.totalAdditiveWeight>0)w.p(l);else if(1===y.animations.length){if(h.Quaternion.SlerpToRef(l,A.currentValue,Math.min(1,y.totalWeight),w),0===y.totalAdditiveWeight)return w}else if(y.animations.length>1){let A,N,p=1;if(y.totalWeight<1){const c=1-y.totalWeight;A=[],N=[],A.push(l),N.push(c)}else{if(2===y.animations.length&&(h.Quaternion.SlerpToRef(y.animations[0].currentValue,y.animations[1].currentValue,y.animations[1].weight/y.totalWeight,c),0===y.totalAdditiveWeight))return c;A=[],N=[],p=y.totalWeight}for(let c=0;c<y.animations.length;c++){const l=y.animations[c];A.push(l.currentValue),N.push(l.weight/p)}let W=0;for(let y=0;y<A.length;)y?(W+=N[y],h.Quaternion.SlerpToRef(w,A[y],N[y]/W,w),y++):(h.Quaternion.SlerpToRef(A[y],A[y+1],N[y+1]/(N[y]+N[y+1]),c),w=c,W=N[y]+N[y+1],y+=2)}for(let N=0;N<y.additiveAnimations.length;N++){const c=y.additiveAnimations[N];0!==c.weight&&(w.multiplyToRef(c.currentValue,h.TmpVectors.Quaternion[0]),h.Quaternion.SlerpToRef(w,h.TmpVectors.Quaternion[0],c.weight,w))}return w}var i,H,P=A(12553);i=P.b,(H=W.d)&&(H.prototype.copyAnimationRange=function(y,c,A){let w=arguments.length>3&&void 0!==arguments[3]&&arguments[3],N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new l.b(this.name,"_matrix",y.animations[0].framePerSecond,l.b.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const p=y.animations[0].getRange(c);if(!p)return!1;const W=p.from,h=p.to,I=y.animations[0].getKeys(),q=y.length,o=y.getParent(),O=this.getParent(),L=w&&o&&q&&this.length&&q!==this.length,i=L&&O&&o?O.length/o.length:1,H=w&&!O&&N&&(1!==N.x||1!==N.y||1!==N.z),P=this.animations[0].getKeys();let D,t,s;for(let l=0,B=I.length;l<B;l++)D=I[l],D.frame>=W&&D.frame<=h&&(w?(s=D.value.clone(),L?(t=s.getTranslation(),s.setTranslation(t.scaleInPlace(i))):H&&N?(t=s.getTranslation(),s.setTranslation(t.multiplyInPlace(N))):s=D.value):s=D.value,P.push({frame:D.frame+A,value:s}));return this.animations[0].createRange(c,W+A,h+A),!0}),i&&(i.prototype._animate=function(y){if(!this.animationsEnabled)return;const c=q.d.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=c}this.deltaTime=void 0!==y?y:this.useConstantAnimationDeltaTime?16:(c-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=c;const A=this._activeAnimatables;if(0===A.length)return;this._animationTime+=this.deltaTime;const w=this._animationTime;for(let l=0;l<A.length;l++){const y=A[l];!y._animate(w)&&y.disposeOnEnd&&l--}!function(y){if(y._registeredForLateAnimationBindings.length){for(let c=0;c<y._registeredForLateAnimationBindings.length;c++){const A=y._registeredForLateAnimationBindings.data[c];for(const y in A._lateAnimationHolders){const c=A._lateAnimationHolders[y],w=c.animations[0],N=c.originalValue;if(void 0===N||null===N)continue;const p=l.b.AllowMatrixDecomposeForInterpolation&&N.m;let W=A[y];if(p)W=O(c);else if(void 0!==N.w)W=L(c,W||h.Quaternion.Identity());else{let y=0,A=1;const p=w&&w._animationState.loopMode===l.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(c.totalWeight<1)W=p?N.clone?N.clone():N:w&&N.scale?N.scale(1-c.totalWeight):w?N*(1-c.totalWeight):N.clone?N.clone():N;else if(w){A=c.totalWeight;const l=w.weight/A;W=1!==l?w.currentValue.scale?w.currentValue.scale(l):w.currentValue*l:w.currentValue,p&&(W.addToRef?W.addToRef(N,W):W+=N),y=1}for(let l=y;l<c.animations.length;l++){const y=c.animations[l],w=y.weight/A;w&&(y.currentValue.scaleAndAddToRef?y.currentValue.scaleAndAddToRef(w,W):W+=y.currentValue*w)}for(let l=0;l<c.additiveAnimations.length;l++){const y=c.additiveAnimations[l],A=y.weight;A&&(y.currentValue.scaleAndAddToRef?y.currentValue.scaleAndAddToRef(A,W):W+=y.currentValue*A)}}A[y]=W}A._lateAnimationHolders={}}y._registeredForLateAnimationBindings.reset()}}(this)},i.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((y,c)=>y.playOrder-c.playOrder))},i.prototype.beginWeightedAnimation=function(y,c,A){let l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,w=arguments.length>4?arguments[4]:void 0,N=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,p=arguments.length>6?arguments[6]:void 0,W=arguments.length>7?arguments[7]:void 0,h=arguments.length>8?arguments[8]:void 0,I=arguments.length>9?arguments[9]:void 0,q=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const o=this.beginAnimation(y,c,A,w,N,p,W,!1,h,I,q);return o.weight=l,o},i.prototype.beginAnimation=function(y,c,A,l){let w=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,N=arguments.length>5?arguments[5]:void 0,p=arguments.length>6?arguments[6]:void 0,W=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],h=arguments.length>8?arguments[8]:void 0,I=arguments.length>9?arguments[9]:void 0,q=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(w<0){const y=c;c=A,A=y,w=-w}c>A&&(w=-w),W&&this.stopAnimation(y,void 0,h),p||(p=new o(this,y,c,A,l,w,N,void 0,I,q));const O=!h||h(y);if(y.animations&&O&&p.appendAnimations(y,y.animations),y.getAnimatables){const q=y.getAnimatables();for(let y=0;y<q.length;y++)this.beginAnimation(q[y],c,A,l,w,N,p,W,h,I)}return p.reset(),p},i.prototype.beginHierarchyAnimation=function(y,c,A,l,w){let N=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,p=arguments.length>6?arguments[6]:void 0,W=arguments.length>7?arguments[7]:void 0,h=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],I=arguments.length>9?arguments[9]:void 0,q=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const o=y.getDescendants(c),O=[];O.push(this.beginAnimation(y,A,l,w,N,p,W,h,I,void 0,q));for(const L of o)O.push(this.beginAnimation(L,A,l,w,N,p,W,h,I,void 0,q));return O},i.prototype.beginDirectAnimation=function(y,c,A,l,w){let N=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(N<0){const y=A;A=l,l=y,N=-N}return A>l&&(N=-N),new o(this,y,A,l,w,N,arguments.length>6?arguments[6]:void 0,c,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},i.prototype.beginDirectHierarchyAnimation=function(y,c,A,l,w,N,p,W,h){let I=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const q=y.getDescendants(c),o=[];o.push(this.beginDirectAnimation(y,A,l,w,N,p,W,h,I));for(const O of q)o.push(this.beginDirectAnimation(O,A,l,w,N,p,W,h,I));return o},i.prototype.getAnimatableByTarget=function(y){for(let c=0;c<this._activeAnimatables.length;c++)if(this._activeAnimatables[c].target===y)return this._activeAnimatables[c];return null},i.prototype.getAllAnimatablesByTarget=function(y){const c=[];for(let A=0;A<this._activeAnimatables.length;A++)this._activeAnimatables[A].target===y&&c.push(this._activeAnimatables[A]);return c},i.prototype.stopAnimation=function(y,c,A){const l=this.getAllAnimatablesByTarget(y);for(const w of l)w.stop(c,A)},i.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let y=0;y<this._activeAnimatables.length;y++)this._activeAnimatables[y].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const y of this.animationGroups)y.stop()});class D{getClassName(){return"TargetedAnimation"}serialize(){const y={};return y.animation=this.animation.serialize(),y.targetId=this.target.id,y}}class t{get mask(){return this._mask}set mask(y){this._mask!==y&&(this._mask=y,this.syncWithMask(!0))}syncWithMask(){let y=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||y){this._numActiveAnimatables=0;for(let y=0;y<this._animatables.length;++y){const c=this._animatables[y];!this.mask||this.mask.disabled||this.mask.retainsTarget(c.target.name)?(this._numActiveAnimatables++,c.paused&&c.restart()):c.paused||c.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let y=0;y<this._animatables.length;++y){const c=this._animatables[y];this.mask.retainsTarget(c.target.name)||(c.stop(),this._animatables.splice(y,1),--y)}for(let y=0;y<this._targetedAnimations.length;y++){const c=this._targetedAnimations[y];this.mask.retainsTarget(c.target.name)||(this._targetedAnimations.splice(y,1),--y)}}}get from(){return this._from}set from(y){if(this._from!==y){this._from=y;for(let y=0;y<this._animatables.length;y++){this._animatables[y].fromFrame=this._from}}}get to(){return this._to}set to(y){if(this._to!==y){this._to=y;for(let y=0;y<this._animatables.length;y++){this._animatables[y].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(y){if(this._speedRatio!==y){this._speedRatio=y;for(let y=0;y<this._animatables.length;y++){this._animatables[y].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(y){if(this._loopAnimation!==y){this._loopAnimation=y;for(let y=0;y<this._animatables.length;y++){this._animatables[y].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(y){if(this._isAdditive!==y){this._isAdditive=y;for(let y=0;y<this._animatables.length;y++){this._animatables[y].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(y){this._weight!==y&&(this._weight=y,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(y){if(this._playOrder!==y&&(this._playOrder=y,this._animatables.length>0)){for(let y=0;y<this._animatables.length;y++)this._animatables[y].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(y){if(this._enableBlending!==y&&(this._enableBlending=y,null!==y))for(let c=0;c<this._targetedAnimations.length;++c)this._targetedAnimations[c].animation.enableBlending=y}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(y){if(this._blendingSpeed!==y&&(this._blendingSpeed=y,null!==y))for(let c=0;c<this._targetedAnimations.length;++c)this._targetedAnimations[c].animation.blendingSpeed=y}getLength(y,c){y=y??this._from;return((c=c??this._to)-y)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(y){let c=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],A=arguments.length>2&&void 0!==arguments[2]&&arguments[2],l=arguments.length>3?arguments[3]:void 0;if(0===y.length)return null;l=l??y[0].weight;let w=Number.MAX_VALUE,N=-Number.MAX_VALUE;if(A)for(const W of y)W.from<w&&(w=W.from),W.to>N&&(N=W.to);const p=new t(y[0].name+"_merged",y[0]._scene,l);for(const W of y){A&&W.normalize(w,N);for(const y of W.targetedAnimations)p.addTargetedAnimation(y.animation,y.target);c&&W.dispose()}return p}constructor(y){let c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=y,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new w.d,this.onAnimationLoopObservable=new w.d,this.onAnimationGroupLoopObservable=new w.d,this.onAnimationGroupEndObservable=new w.d,this.onAnimationGroupPauseObservable=new w.d,this.onAnimationGroupPlayObservable=new w.d,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=c||N.c.LastCreatedScene,this._weight=A,this._playOrder=l,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(y,c){const A=new D;A.animation=y,A.target=c;const l=y.getKeys();return this._from>l[0].frame&&(this._from=l[0].frame),this._to<l[l.length-1].frame&&(this._to=l[l.length-1].frame),null!==this._enableBlending&&(y.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(y.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(A),this._shouldStart=!0,A}removeTargetedAnimation(y){for(let c=this._targetedAnimations.length-1;c>-1;c--){this._targetedAnimations[c].animation===y&&this._targetedAnimations.splice(c,1)}}normalize(){let y=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==y&&(y=this._from),null==c&&(c=this._to);for(let A=0;A<this._targetedAnimations.length;A++){const l=this._targetedAnimations[A].animation.getKeys(),w=l[0],N=l[l.length-1];if(w.frame>y){const c={frame:y,value:w.value,inTangent:w.inTangent,outTangent:w.outTangent,interpolation:w.interpolation};l.splice(0,0,c)}if(N.frame<c){const y={frame:c,value:N.value,inTangent:N.inTangent,outTangent:N.outTangent,interpolation:N.interpolation};l.push(y)}}return this._from=y,this._to=c,this}_processLoop(y,c,A){y.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(c),this._animationLoopFlags[A]||(this._animationLoopFlags[A]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let y=arguments.length>0&&void 0!==arguments[0]&&arguments[0],c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,A=arguments.length>2?arguments[2]:void 0,l=arguments.length>3?arguments[3]:void 0,w=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=y,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let N=0;N<this._targetedAnimations.length;N++){const p=this._targetedAnimations[N],W=this._scene.beginDirectAnimation(p.target,[p.animation],void 0!==A?A:this._from,void 0!==l?l:this._to,y,c,void 0,void 0,void 0!==w?w:this._isAdditive);W.weight=this._weight,W.playOrder=this._playOrder,W.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(p),this._checkAnimationGroupEnded(W)},this._processLoop(W,p,N),this._animatables.push(W)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=c,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let y=0;y<this._animatables.length;y++){this._animatables[y].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(y){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==y&&(this.loopAnimation=y),this.restart()):(this.stop(),this.start(y,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let y=0;y<this._animatables.length;y++){this._animatables[y].reset()}return this}restart(){if(!this._isStarted)return this;for(let y=0;y<this._animatables.length;y++){this._animatables[y].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let y=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const c=this._animatables.slice();for(let l=0;l<c.length;l++)c[l].stop(void 0,void 0,!0,y);let A=0;for(let l=0;l<this._scene._activeAnimatables.length;l++){const c=this._scene._activeAnimatables[l];c._runtimeAnimations.length>0?this._scene._activeAnimatables[A++]=c:y&&this._checkAnimationGroupEnded(c,y)}return this._scene._activeAnimatables.length=A,this._isStarted=!1,this}setWeightForAllAnimatables(y){for(let c=0;c<this._animatables.length;c++){this._animatables[c].weight=y}return this}syncAllAnimationsWith(y){for(let c=0;c<this._animatables.length;c++){this._animatables[c].syncWith(y)}return this}goToFrame(y){let c=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let A=0;A<this._animatables.length;A++){this._animatables[A].goToFrame(y,c)}return this}getCurrentFrame(){var y;return(null===(y=this.animatables[0])||void 0===y?void 0:y.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const y=this._scene.animationGroups.indexOf(this);if(y>-1&&this._scene.animationGroups.splice(y,1),this._parentContainer){const y=this._parentContainer.animationGroups.indexOf(this);y>-1&&this._parentContainer.animationGroups.splice(y,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(y){let c=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const A=this._animatables.indexOf(y);A>-1&&this._animatables.splice(A,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,c||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(y,c){let A=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const l=new t(y||this.name,this._scene,this._weight,this._playOrder);l._from=this.from,l._to=this.to,l._speedRatio=this.speedRatio,l._loopAnimation=this.loopAnimation,l._isAdditive=this.isAdditive,l._enableBlending=this.enableBlending,l._blendingSpeed=this.blendingSpeed,l.metadata=this.metadata,l.mask=this.mask;for(const w of this._targetedAnimations)l.addTargetedAnimation(A?w.animation.clone():w.animation,c?c(w.target):w.target);return l}serialize(){const y={};y.name=this.name,y.from=this.from,y.to=this.to,y.speedRatio=this.speedRatio,y.loopAnimation=this.loopAnimation,y.isAdditive=this.isAdditive,y.weight=this.weight,y.playOrder=this.playOrder,y.enableBlending=this.enableBlending,y.blendingSpeed=this.blendingSpeed,y.targetedAnimations=[];for(let c=0;c<this.targetedAnimations.length;c++){const A=this.targetedAnimations[c];y.targetedAnimations[c]=A.serialize()}return p.c&&p.c.HasTags(this)&&(y.tags=p.c.GetTags(this)),this.metadata&&(y.metadata=this.metadata),y}static Parse(y,c){const A=new t(y.name,c,y.weight,y.playOrder);for(let w=0;w<y.targetedAnimations.length;w++){const N=y.targetedAnimations[w],p=l.b.Parse(N.animation),W=N.targetId;if("influence"===N.animation.property){const y=c.getMorphTargetById(W);y&&A.addTargetedAnimation(p,y)}else{const y=c.getNodeById(W);null!=y&&A.addTargetedAnimation(p,y)}}return p.c&&p.c.AddTagsTo(A,y.tags),null!==y.from&&null!==y.to&&A.normalize(y.from,y.to),void 0!==y.speedRatio&&(A._speedRatio=y.speedRatio),void 0!==y.loopAnimation&&(A._loopAnimation=y.loopAnimation),void 0!==y.isAdditive&&(A._isAdditive=y.isAdditive),void 0!==y.weight&&(A._weight=y.weight),void 0!==y.playOrder&&(A._playOrder=y.playOrder),void 0!==y.enableBlending&&(A._enableBlending=y.enableBlending),void 0!==y.blendingSpeed&&(A._blendingSpeed=y.blendingSpeed),void 0!==y.metadata&&(A.metadata=y.metadata),A}static MakeAnimationAdditive(y,c,A){let w;w="object"===typeof c?c:{referenceFrame:c,range:A,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let N=y;w.cloneOriginalAnimationGroup&&(N=y.clone(w.clonedAnimationGroupName||N.name));const p=N.targetedAnimations;for(let W=0;W<p.length;W++){const y=p[W];y.animation=l.b.MakeAnimationAdditive(y.animation,w)}if(N.isAdditive=!0,w.clipKeys){let y=Number.MAX_VALUE,c=-Number.MAX_VALUE;const A=N.targetedAnimations;for(let l=0;l<A.length;l++){const w=A[l].animation.getKeys();y>w[0].frame&&(y=w[0].frame),c<w[w.length-1].frame&&(c=w[w.length-1].frame)}N._from=y,N._to=c}return N}static ClipKeys(y,c,A,l,w){const N=y.clone(l||y.name);return t.ClipKeysInPlace(N,c,A,w)}static ClipKeysInPlace(y,c,A,l){return t.ClipInPlace(y,c,A,l,!1)}static ClipFrames(y,c,A,l,w){const N=y.clone(l||y.name);return t.ClipFramesInPlace(N,c,A,w)}static ClipFramesInPlace(y,c,A,l){return t.ClipInPlace(y,c,A,l,!0)}static ClipInPlace(y,c,A,l){let w=arguments.length>4&&void 0!==arguments[4]&&arguments[4],N=Number.MAX_VALUE,p=-Number.MAX_VALUE;const W=y.targetedAnimations;for(let h=0;h<W.length;h++){const y=W[h],I=l?y.animation:y.animation.clone();w&&(I.createKeyForFrame(c),I.createKeyForFrame(A));const q=I.getKeys(),o=[];let O=Number.MAX_VALUE;for(let l=0;l<q.length;l++){const y=q[l];if(!w&&l>=c&&l<=A||w&&y.frame>=c&&y.frame<=A){const c={frame:y.frame,value:y.value.clone?y.value.clone():y.value,inTangent:y.inTangent,outTangent:y.outTangent,interpolation:y.interpolation,lockedTangent:y.lockedTangent};O===Number.MAX_VALUE&&(O=c.frame),c.frame-=O,o.push(c)}}0!==o.length?(N>o[0].frame&&(N=o[0].frame),p<o[o.length-1].frame&&(p=o[o.length-1].frame),I.setKeys(o,!0),y.animation=I):(W.splice(h,1),h--)}return y._from=N,y._to=p,y}getClassName(){return"AnimationGroup"}toString(y){let c="Name: "+this.name;return c+=", type: "+this.getClassName(),y&&(c+=", from: "+this._from,c+=", to: "+this._to,c+=", isStarted: "+this._isStarted,c+=", speedRatio: "+this._speedRatio,c+=", targetedAnimations length: "+this._targetedAnimations.length,c+=", animatables length: "+this._animatables),c}}}}]);