"use strict";(self.gpkvekif0vo=self.gpkvekif0vo||[]).push([[78],{15571:(a,O,i)=>{i.r(O),i.d(O,{AnimationGroup:()=>ma,TargetedAnimation:()=>J});var H=i(12916),b=i(12193),G=i(12236),q=i(12433),Q=i(14057),k=i(12395);class I{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(a,O,i,b){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=O,this._target=a,this._scene=i,this._host=b,this._activeTargets=[],O._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===H.b.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=k.Matrix.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const a={frame:0,value:this._minValue};this._keys.splice(0,0,a)}if(this._target instanceof Array){let a=0;for(const O of this._target)this._preparePath(O,a),this._getOriginalValues(a),a++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const G=O.getEvents();if(G&&G.length>0)for(const H of G)this._events.push(H._clone());this._enableBlending=a&&a.animationPropertiesOverride?a.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(a){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const i=this._animation.targetPropertyPath;if(i.length>1){let H=a;for(let a=0;a<i.length-1;a++){const O=i[a];if(H=H[O],void 0===H)throw new Error(`Invalid property (${O}) in property path (${i.join(".")})`)}this._targetPath=i[i.length-1],this._activeTargets[O]=H}else this._targetPath=i[0],this._activeTargets[O]=a;if(void 0===this._activeTargets[O][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${i.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let a=0;for(const O of this._target)void 0!==this._originalValue[a]&&this._setValue(O,this._activeTargets[a],this._originalValue[a],-1,a),a++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let a=0;a<this._events.length;a++)this._events[a].isDone=!1}isStopped(){return this._stopped}dispose(){const a=this._animation.runtimeAnimations.indexOf(this);a>-1&&this._animation.runtimeAnimations.splice(a,1)}setValue(a,O){if(this._targetIsArray)for(let i=0;i<this._target.length;i++){const H=this._target[i];this._setValue(H,this._activeTargets[i],a,O,i)}else this._setValue(this._target,this._directTarget,a,O,0)}_getOriginalValues(){let a,O=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const i=this._activeTargets[O];a=i.getLocalMatrix&&"_matrix"===this._targetPath?i.getLocalMatrix():i[this._targetPath],a&&a.clone?this._originalValue[O]=a.clone():this._originalValue[O]=a}_registerTargetForLateAnimationBinding(a,O){const i=a.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(i),i._lateAnimationHolders||(i._lateAnimationHolders={}),i._lateAnimationHolders[a.targetPath]||(i._lateAnimationHolders[a.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:O}),a.isAdditive?(i._lateAnimationHolders[a.targetPath].additiveAnimations.push(a),i._lateAnimationHolders[a.targetPath].totalAdditiveWeight+=a.weight):(i._lateAnimationHolders[a.targetPath].animations.push(a),i._lateAnimationHolders[a.targetPath].totalWeight+=a.weight)}_setValue(a,O,i,b,G){if(this._currentActiveTarget=O,this._weight=b,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const a=O[this._targetPath];a.clone?this._originalBlendValue=a.clone():this._originalBlendValue=a}this._originalBlendValue.m?H.b.AllowMatrixDecomposeForInterpolation?this._currentValue?k.Matrix.DecomposeLerpToRef(this._originalBlendValue,i,this._blendingFactor,this._currentValue):this._currentValue=k.Matrix.DecomposeLerp(this._originalBlendValue,i,this._blendingFactor):this._currentValue?k.Matrix.LerpToRef(this._originalBlendValue,i,this._blendingFactor,this._currentValue):this._currentValue=k.Matrix.Lerp(this._originalBlendValue,i,this._blendingFactor):this._currentValue=H.b._UniversalLerp(this._originalBlendValue,i,this._blendingFactor);const b=a&&a.animationPropertiesOverride?a.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=b}else this._currentValue?this._currentValue.q?this._currentValue.q(i):this._currentValue=i:null!==i&&void 0!==i&&i.clone?this._currentValue=i.clone():this._currentValue=i;-1!==b?this._registerTargetForLateAnimationBinding(this,this._originalValue[G]):this._animationState.loopMode===H.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[G],O[this._targetPath]):O[this._targetPath]=this._originalValue[G]+this._currentValue:O[this._targetPath]=this._currentValue,a.aP&&a.aP(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(a){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const i=this._animation.getKeys();a<i[0].frame?a=i[0].frame:a>i[i.length-1].frame&&(a=i[i.length-1].frame);const H=this._events;if(H.length)for(let G=0;G<H.length;G++)H[G].onlyOnce||(H[G].isDone=H[G].frame<a);this._currentFrame=a;const b=this._animation._interpolate(a,this._animationState);this.setValue(b,O)}_prepareForSpeedRatioChange(a){const O=this._previousElapsedTime*(this._animation.framePerSecond*a)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-O}animate(a,O,i,b,G){let q=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const Q=this._animation,k=Q.targetPropertyPath;if(!k||k.length<1)return this._stopped=!0,!1;let I,P=!0;const e=this._events;let h=0;if(this._coreRuntimeAnimation)h=i-O,I=this._coreRuntimeAnimation.currentFrame,this._currentFrame=I,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let q;(O<this._minFrame||O>this._maxFrame)&&(O=this._minFrame),(i<this._minFrame||i>this._maxFrame)&&(i=this._maxFrame),h=i-O;let k=a*(Q.framePerSecond*G)/1e3+this._absoluteFrameOffset,j=0,Z=!1;const F=b&&this._animationState.loopMode===H.b.ANIMATIONLOOPMODE_YOYO;if(F){const a=(k-O)/h,i=Math.sin(a*Math.PI);k=Math.abs(i)*h+O;const H=i>=0?1:-1;this._yoyoDirection!==H&&(Z=!0),this._yoyoDirection=H}if(this._previousElapsedTime=a,this._previousAbsoluteFrame=k,!b&&i>=O&&(k>=h&&G>0||k<=0&&G<0))P=!1,j=Q._getKeyValue(this._maxValue);else if(!b&&O>=i&&(k<=h&&G<0||k>=0&&G>0))P=!1,j=Q._getKeyValue(this._minValue);else if(this._animationState.loopMode!==H.b.ANIMATIONLOOPMODE_CYCLE){const a=i.toString()+O.toString();if(!this._offsetsCache[a]){this._animationState.repeatCount=0,this._animationState.loopMode=H.b.ANIMATIONLOOPMODE_CYCLE;const b=Q._interpolate(O,this._animationState),G=Q._interpolate(i,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),Q.dataType){case H.b.ANIMATIONTYPE_FLOAT:this._offsetsCache[a]=G-b;break;case H.b.ANIMATIONTYPE_QUATERNION:case H.b.ANIMATIONTYPE_VECTOR3:case H.b.ANIMATIONTYPE_VECTOR2:case H.b.ANIMATIONTYPE_SIZE:case H.b.ANIMATIONTYPE_COLOR3:this._offsetsCache[a]=G.FO(b)}this._highLimitsCache[a]=G}j=this._highLimitsCache[a],q=this._offsetsCache[a]}if(void 0===q)switch(Q.dataType){case H.b.ANIMATIONTYPE_FLOAT:q=0;break;case H.b.ANIMATIONTYPE_QUATERNION:q=H.i;break;case H.b.ANIMATIONTYPE_VECTOR3:q=H.o;break;case H.b.ANIMATIONTYPE_VECTOR2:q=H.n;break;case H.b.ANIMATIONTYPE_SIZE:q=H.k;break;case H.b.ANIMATIONTYPE_COLOR3:q=H.d;break;case H.b.ANIMATIONTYPE_COLOR4:q=H.f}if(this._host&&this._host.syncRoot){const a=this._host.syncRoot;I=O+h*((a.masterFrame-a.fromFrame)/(a.toFrame-a.fromFrame))}else I=k>0&&O>i||k<0&&O<i?P&&0!==h?i+k%h:O:P&&0!==h?O+k%h:i;if(!F&&(G>0&&this.currentFrame>I||G<0&&this.currentFrame<I)||F&&Z){this._onLoop();for(let a=0;a<e.length;a++)e[a].onlyOnce||(e[a].isDone=!1);this._animationState.key=G>0?0:Q.getKeys().length-1}this._currentFrame=I,this._animationState.repeatCount=0===h?0:k/h|0,this._animationState.highLimitValue=j,this._animationState.offsetValue=q}const j=Q._interpolate(I,this._animationState);if(this.setValue(j,q),e.length)for(let H=0;H<e.length;H++)if(h>=0&&I>=e[H].frame&&e[H].frame>=O||h<0&&I<=e[H].frame&&e[H].frame<=O){const a=e[H];a.isDone||(a.onlyOnce&&(e.splice(H,1),H--),a.isDone=!0,a.action(I))}return P||(this._stopped=!0),P}}var P=i(12218);class e{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(a){this._weight=-1!==a?Math.min(Math.max(a,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(a){for(let O=0;O<this._runtimeAnimations.length;O++){this._runtimeAnimations[O]._prepareForSpeedRatioChange(a)}this._speedRatio=a,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(a,O){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,G=arguments.length>4&&void 0!==arguments[4]&&arguments[4],q=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,Q=arguments.length>6?arguments[6]:void 0,k=arguments.length>7?arguments[7]:void 0,I=arguments.length>8?arguments[8]:void 0,P=arguments.length>9&&void 0!==arguments[9]&&arguments[9],e=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=O,this.fromFrame=i,this.toFrame=H,this.loopAnimation=G,this.onAnimationEnd=Q,this.onAnimationLoop=I,this.isAdditive=P,this.playOrder=e,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.zQ=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new b.e,this.onAnimationLoopObservable=new b.e,this._scene=a,k&&this.appendAnimations(O,k),this._speedRatio=q,a._activeAnimatables.push(this)}syncWith(a){if(this._syncRoot=a,a){const a=this._scene._activeAnimatables.indexOf(this);a>-1&&(this._scene._activeAnimatables.splice(a,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(a,O){for(let i=0;i<O.length;i++){const H=O[i],b=new I(a,H,this._scene,this);b._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(b)}}getAnimationByTargetProperty(a){const O=this._runtimeAnimations;for(let i=0;i<O.length;i++)if(O[i].animation.targetProperty===a)return O[i].animation;return null}getRuntimeAnimationByTargetProperty(a){const O=this._runtimeAnimations;for(let i=0;i<O.length;i++)if(O[i].animation.targetProperty===a)return O[i];return null}reset(){const a=this._runtimeAnimations;for(let O=0;O<a.length;O++)a[O].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(a){const O=this._runtimeAnimations;for(let i=0;i<O.length;i++)O[i].animation.enableBlending=!0,O[i].animation.blendingSpeed=a}disableBlending(){const a=this._runtimeAnimations;for(let O=0;O<a.length;O++)a[O].animation.enableBlending=!1}goToFrame(a){let O=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const i=this._runtimeAnimations;if(i[0]){const O=i[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??i[0].currentFrame;const H=0===this.speedRatio?0:(a-this._frameToSyncFromJump)/O*1e3/this.speedRatio;this._manualJumpDelay=-H}for(let H=0;H<i.length;H++)i[H].goToFrame(a,O?this._weight:-1);this._goToFrame=a}get paused(){return this.zQ}pause(){this.zQ||(this.zQ=!0)}restart(){this.zQ=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(a,O){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],H=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(a||O){const b=this._scene._activeAnimatables.indexOf(this);if(b>-1){const G=this._runtimeAnimations;for(let i=G.length-1;i>=0;i--){const H=G[i];a&&H.animation.name!=a||(O&&!O(H.target)||(H.dispose(),G.splice(i,1)))}0==G.length&&(i||this._scene._activeAnimatables.splice(b,1),H||this._raiseOnAnimationEnd())}}else{const a=this._scene._activeAnimatables.indexOf(this);if(a>-1){i||this._scene._activeAnimatables.splice(a,1);const O=this._runtimeAnimations;for(let a=0;a<O.length;a++)O[a].dispose();this._runtimeAnimations.length=0,H||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((a=>{this.onAnimationEndObservable.add((()=>{a(this)}),void 0,void 0,this,!0)}))}_animate(a){if(this.zQ)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=a),!0;if(null===this._localDelayOffset?(this._localDelayOffset=a,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=a-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let O=!1;const i=this._runtimeAnimations;let H;for(H=0;H<i.length;H++){const b=i[H].animate(a-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);O=O||b}if(this.animationStarted=O,!O){if(this.disposeOnEnd)for(H=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(H,1),H=0;H<i.length;H++)i[H].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return O}}function h(a){if(0===a.totalWeight&&0===a.totalAdditiveWeight)return a.originalValue;let O=1;const i=k.TmpVectors.ZO[0],H=k.TmpVectors.ZO[1],b=k.TmpVectors.Quaternion[0];let G=0;const q=a.animations[0],Q=a.originalValue;let I=1,P=!1;if(a.totalWeight<1)I=1-a.totalWeight,Q.decompose(H,b,i);else{if(G=1,O=a.totalWeight,I=q.weight/O,1==I){if(!a.totalAdditiveWeight)return q.currentValue;P=!0}q.currentValue.decompose(H,b,i)}if(!P){H.scaleInPlace(I),i.scaleInPlace(I),b.scaleInPlace(I);for(let q=G;q<a.animations.length;q++){const G=a.animations[q];if(0===G.weight)continue;I=G.weight/O;const Q=k.TmpVectors.ZO[2],P=k.TmpVectors.ZO[3],e=k.TmpVectors.Quaternion[1];G.currentValue.decompose(P,e,Q),P.scaleAndAddToRef(I,H),e.scaleAndAddToRef(k.Quaternion.Dot(b,e)>0?I:-I,b),Q.scaleAndAddToRef(I,i)}b.normalize()}for(let h=0;h<a.additiveAnimations.length;h++){const O=a.additiveAnimations[h];if(0===O.weight)continue;const G=k.TmpVectors.ZO[2],q=k.TmpVectors.ZO[3],Q=k.TmpVectors.Quaternion[1];O.currentValue.decompose(q,Q,G),q.multiplyToRef(H,q),k.ZO.LerpToRef(H,q,O.weight,H),b.multiplyToRef(Q,Q),k.Quaternion.SlerpToRef(b,Q,O.weight,b),G.scaleAndAddToRef(O.weight,i)}const e=q?q._animationState.workValue:k.TmpVectors.Matrix[0].clone();return k.Matrix.ComposeToRef(H,b,i,e),e}function j(a,O){if(0===a.totalWeight&&0===a.totalAdditiveWeight)return O;const i=a.animations[0],H=a.originalValue;let b=O;if(0===a.totalWeight&&a.totalAdditiveWeight>0)b.q(H);else if(1===a.animations.length){if(k.Quaternion.SlerpToRef(H,i.currentValue,Math.min(1,a.totalWeight),b),0===a.totalAdditiveWeight)return b}else if(a.animations.length>1){let i,G,q=1;if(a.totalWeight<1){const O=1-a.totalWeight;i=[],G=[],i.push(H),G.push(O)}else{if(2===a.animations.length&&(k.Quaternion.SlerpToRef(a.animations[0].currentValue,a.animations[1].currentValue,a.animations[1].weight/a.totalWeight,O),0===a.totalAdditiveWeight))return O;i=[],G=[],q=a.totalWeight}for(let O=0;O<a.animations.length;O++){const H=a.animations[O];i.push(H.currentValue),G.push(H.weight/q)}let Q=0;for(let a=0;a<i.length;)a?(Q+=G[a],k.Quaternion.SlerpToRef(b,i[a],G[a]/Q,b),a++):(k.Quaternion.SlerpToRef(i[a],i[a+1],G[a+1]/(G[a]+G[a+1]),O),b=O,Q=G[a]+G[a+1],a+=2)}for(let G=0;G<a.additiveAnimations.length;G++){const O=a.additiveAnimations[G];0!==O.weight&&(b.multiplyToRef(O.currentValue,k.TmpVectors.Quaternion[0]),k.Quaternion.SlerpToRef(b,k.TmpVectors.Quaternion[0],O.weight,b))}return b}var Z,F,r=i(12648);Z=r.c,(F=Q.d)&&(F.prototype.copyAnimationRange=function(a,O,i){let b=arguments.length>3&&void 0!==arguments[3]&&arguments[3],G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new H.b(this.name,"_matrix",a.animations[0].framePerSecond,H.b.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const q=a.animations[0].getRange(O);if(!q)return!1;const Q=q.from,k=q.to,I=a.animations[0].getKeys(),P=a.length,e=a.getParent(),h=this.getParent(),j=b&&e&&P&&this.length&&P!==this.length,Z=j&&h&&e?h.length/e.length:1,F=b&&!h&&G&&(1!==G.x||1!==G.y||1!==G.z),r=this.animations[0].getKeys();let J,ma,M;for(let H=0,C=I.length;H<C;H++)J=I[H],J.frame>=Q&&J.frame<=k&&(b?(M=J.value.clone(),j?(ma=M.getTranslation(),M.setTranslation(ma.scaleInPlace(Z))):F&&G?(ma=M.getTranslation(),M.setTranslation(ma.multiplyInPlace(G))):M=J.value):M=J.value,r.push({frame:J.frame+i,value:M}));return this.animations[0].createRange(O,Q+i,k+i),!0}),Z&&(Z.prototype._animate=function(a){if(!this.animationsEnabled)return;const O=P.c.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=O}this.deltaTime=void 0!==a?a:this.useConstantAnimationDeltaTime?16:(O-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=O;const i=this._activeAnimatables;if(0===i.length)return;this._animationTime+=this.deltaTime;const b=this._animationTime;for(let H=0;H<i.length;H++){const a=i[H];!a._animate(b)&&a.disposeOnEnd&&H--}!function(a){if(a._registeredForLateAnimationBindings.length){for(let O=0;O<a._registeredForLateAnimationBindings.length;O++){const i=a._registeredForLateAnimationBindings.data[O];for(const a in i._lateAnimationHolders){const O=i._lateAnimationHolders[a],b=O.animations[0],G=O.originalValue;if(void 0===G||null===G)continue;const q=H.b.AllowMatrixDecomposeForInterpolation&&G.m;let Q=i[a];if(q)Q=h(O);else if(void 0!==G.w)Q=j(O,Q||k.Quaternion.Identity());else{let a=0,i=1;const q=b&&b._animationState.loopMode===H.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(O.totalWeight<1)Q=q?G.clone?G.clone():G:b&&G.scale?G.scale(1-O.totalWeight):b?G*(1-O.totalWeight):G.clone?G.clone():G;else if(b){i=O.totalWeight;const H=b.weight/i;Q=1!==H?b.currentValue.scale?b.currentValue.scale(H):b.currentValue*H:b.currentValue,q&&(Q.addToRef?Q.addToRef(G,Q):Q+=G),a=1}for(let H=a;H<O.animations.length;H++){const a=O.animations[H],b=a.weight/i;b&&(a.currentValue.scaleAndAddToRef?a.currentValue.scaleAndAddToRef(b,Q):Q+=a.currentValue*b)}for(let H=0;H<O.additiveAnimations.length;H++){const a=O.additiveAnimations[H],i=a.weight;i&&(a.currentValue.scaleAndAddToRef?a.currentValue.scaleAndAddToRef(i,Q):Q+=a.currentValue*i)}}i[a]=Q}i._lateAnimationHolders={}}a._registeredForLateAnimationBindings.reset()}}(this)},Z.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((a,O)=>a.playOrder-O.playOrder))},Z.prototype.beginWeightedAnimation=function(a,O,i){let H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,b=arguments.length>4?arguments[4]:void 0,G=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,q=arguments.length>6?arguments[6]:void 0,Q=arguments.length>7?arguments[7]:void 0,k=arguments.length>8?arguments[8]:void 0,I=arguments.length>9?arguments[9]:void 0,P=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const e=this.beginAnimation(a,O,i,b,G,q,Q,!1,k,I,P);return e.weight=H,e},Z.prototype.beginAnimation=function(a,O,i,H){let b=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,G=arguments.length>5?arguments[5]:void 0,q=arguments.length>6?arguments[6]:void 0,Q=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],k=arguments.length>8?arguments[8]:void 0,I=arguments.length>9?arguments[9]:void 0,P=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(b<0){const a=O;O=i,i=a,b=-b}O>i&&(b=-b),Q&&this.stopAnimation(a,void 0,k),q||(q=new e(this,a,O,i,H,b,G,void 0,I,P));const h=!k||k(a);if(a.animations&&h&&q.appendAnimations(a,a.animations),a.getAnimatables){const P=a.getAnimatables();for(let a=0;a<P.length;a++)this.beginAnimation(P[a],O,i,H,b,G,q,Q,k,I)}return q.reset(),q},Z.prototype.beginHierarchyAnimation=function(a,O,i,H,b){let G=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,q=arguments.length>6?arguments[6]:void 0,Q=arguments.length>7?arguments[7]:void 0,k=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],I=arguments.length>9?arguments[9]:void 0,P=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const e=a.getDescendants(O),h=[];h.push(this.beginAnimation(a,i,H,b,G,q,Q,k,I,void 0,P));for(const j of e)h.push(this.beginAnimation(j,i,H,b,G,q,Q,k,I,void 0,P));return h},Z.prototype.beginDirectAnimation=function(a,O,i,H,b){let G=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(G<0){const a=i;i=H,H=a,G=-G}return i>H&&(G=-G),new e(this,a,i,H,b,G,arguments.length>6?arguments[6]:void 0,O,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},Z.prototype.beginDirectHierarchyAnimation=function(a,O,i,H,b,G,q,Q,k){let I=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const P=a.getDescendants(O),e=[];e.push(this.beginDirectAnimation(a,i,H,b,G,q,Q,k,I));for(const h of P)e.push(this.beginDirectAnimation(h,i,H,b,G,q,Q,k,I));return e},Z.prototype.getAnimatableByTarget=function(a){for(let O=0;O<this._activeAnimatables.length;O++)if(this._activeAnimatables[O].target===a)return this._activeAnimatables[O];return null},Z.prototype.getAllAnimatablesByTarget=function(a){const O=[];for(let i=0;i<this._activeAnimatables.length;i++)this._activeAnimatables[i].target===a&&O.push(this._activeAnimatables[i]);return O},Z.prototype.stopAnimation=function(a,O,i){const H=this.getAllAnimatablesByTarget(a);for(const b of H)b.stop(O,i)},Z.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let a=0;a<this._activeAnimatables.length;a++)this._activeAnimatables[a].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const a of this.animationGroups)a.stop()});class J{getClassName(){return"TargetedAnimation"}serialize(){const a={};return a.animation=this.animation.serialize(),a.targetId=this.target.id,a}}class ma{get mask(){return this._mask}set mask(a){this._mask!==a&&(this._mask=a,this.syncWithMask(!0))}syncWithMask(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||a){this._numActiveAnimatables=0;for(let a=0;a<this._animatables.length;++a){const O=this._animatables[a];!this.mask||this.mask.disabled||this.mask.retainsTarget(O.target.name)?(this._numActiveAnimatables++,O.paused&&O.restart()):O.paused||O.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let a=0;a<this._animatables.length;++a){const O=this._animatables[a];this.mask.retainsTarget(O.target.name)||(O.stop(),this._animatables.splice(a,1),--a)}for(let a=0;a<this._targetedAnimations.length;a++){const O=this._targetedAnimations[a];this.mask.retainsTarget(O.target.name)||(this._targetedAnimations.splice(a,1),--a)}}}get from(){return this._from}set from(a){if(this._from!==a){this._from=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].fromFrame=this._from}}}get to(){return this._to}set to(a){if(this._to!==a){this._to=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(a){if(this._speedRatio!==a){this._speedRatio=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(a){if(this._loopAnimation!==a){this._loopAnimation=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(a){if(this._isAdditive!==a){this._isAdditive=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(a){this._weight!==a&&(this._weight=a,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(a){if(this._playOrder!==a&&(this._playOrder=a,this._animatables.length>0)){for(let a=0;a<this._animatables.length;a++)this._animatables[a].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(a){if(this._enableBlending!==a&&(this._enableBlending=a,null!==a))for(let O=0;O<this._targetedAnimations.length;++O)this._targetedAnimations[O].animation.enableBlending=a}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(a){if(this._blendingSpeed!==a&&(this._blendingSpeed=a,null!==a))for(let O=0;O<this._targetedAnimations.length;++O)this._targetedAnimations[O].animation.blendingSpeed=a}getLength(a,O){a=a??this._from;return((O=O??this._to)-a)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(a){let O=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],H=arguments.length>3?arguments[3]:void 0;if(0===a.length)return null;H=H??a[0].weight;let b=Number.MAX_VALUE,G=-Number.MAX_VALUE;if(i)for(const Q of a)Q.from<b&&(b=Q.from),Q.to>G&&(G=Q.to);const q=new ma(a[0].name+"_merged",a[0]._scene,H);for(const Q of a){i&&Q.normalize(b,G);for(const a of Q.targetedAnimations)q.addTargetedAnimation(a.animation,a.target);O&&Q.dispose()}return q}constructor(a){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=a,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new b.e,this.onAnimationLoopObservable=new b.e,this.onAnimationGroupLoopObservable=new b.e,this.onAnimationGroupEndObservable=new b.e,this.onAnimationGroupPauseObservable=new b.e,this.onAnimationGroupPlayObservable=new b.e,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=O||G.b.LastCreatedScene,this._weight=i,this._playOrder=H,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(a,O){const i=new J;i.animation=a,i.target=O;const H=a.getKeys();return this._from>H[0].frame&&(this._from=H[0].frame),this._to<H[H.length-1].frame&&(this._to=H[H.length-1].frame),null!==this._enableBlending&&(a.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(a.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(i),this._shouldStart=!0,i}removeTargetedAnimation(a){for(let O=this._targetedAnimations.length-1;O>-1;O--){this._targetedAnimations[O].animation===a&&this._targetedAnimations.splice(O,1)}}normalize(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==a&&(a=this._from),null==O&&(O=this._to);for(let i=0;i<this._targetedAnimations.length;i++){const H=this._targetedAnimations[i].animation.getKeys(),b=H[0],G=H[H.length-1];if(b.frame>a){const O={frame:a,value:b.value,inTangent:b.inTangent,outTangent:b.outTangent,interpolation:b.interpolation};H.splice(0,0,O)}if(G.frame<O){const a={frame:O,value:G.value,inTangent:G.inTangent,outTangent:G.outTangent,interpolation:G.interpolation};H.push(a)}}return this._from=a,this._to=O,this}_processLoop(a,O,i){a.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(O),this._animationLoopFlags[i]||(this._animationLoopFlags[i]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0],O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2?arguments[2]:void 0,H=arguments.length>3?arguments[3]:void 0,b=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=a,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let G=0;G<this._targetedAnimations.length;G++){const q=this._targetedAnimations[G],Q=this._scene.beginDirectAnimation(q.target,[q.animation],void 0!==i?i:this._from,void 0!==H?H:this._to,a,O,void 0,void 0,void 0!==b?b:this._isAdditive);Q.weight=this._weight,Q.playOrder=this._playOrder,Q.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(q),this._checkAnimationGroupEnded(Q)},this._processLoop(Q,q,G),this._animatables.push(Q)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=O,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let a=0;a<this._animatables.length;a++){this._animatables[a].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(a){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==a&&(this.loopAnimation=a),this.restart()):(this.stop(),this.start(a,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let a=0;a<this._animatables.length;a++){this._animatables[a].reset()}return this}restart(){if(!this._isStarted)return this;for(let a=0;a<this._animatables.length;a++){this._animatables[a].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const O=this._animatables.slice();for(let H=0;H<O.length;H++)O[H].stop(void 0,void 0,!0,a);let i=0;for(let H=0;H<this._scene._activeAnimatables.length;H++){const O=this._scene._activeAnimatables[H];O._runtimeAnimations.length>0?this._scene._activeAnimatables[i++]=O:a&&this._checkAnimationGroupEnded(O,a)}return this._scene._activeAnimatables.length=i,this._isStarted=!1,this}setWeightForAllAnimatables(a){for(let O=0;O<this._animatables.length;O++){this._animatables[O].weight=a}return this}syncAllAnimationsWith(a){for(let O=0;O<this._animatables.length;O++){this._animatables[O].syncWith(a)}return this}goToFrame(a){let O=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let i=0;i<this._animatables.length;i++){this._animatables[i].goToFrame(a,O)}return this}getCurrentFrame(){var a;return(null===(a=this.animatables[0])||void 0===a?void 0:a.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const a=this._scene.animationGroups.indexOf(this);if(a>-1&&this._scene.animationGroups.splice(a,1),this._parentContainer){const a=this._parentContainer.animationGroups.indexOf(this);a>-1&&this._parentContainer.animationGroups.splice(a,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(a){let O=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const i=this._animatables.indexOf(a);i>-1&&this._animatables.splice(i,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,O||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(a,O){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const H=new ma(a||this.name,this._scene,this._weight,this._playOrder);H._from=this.from,H._to=this.to,H._speedRatio=this.speedRatio,H._loopAnimation=this.loopAnimation,H._isAdditive=this.isAdditive,H._enableBlending=this.enableBlending,H._blendingSpeed=this.blendingSpeed,H.metadata=this.metadata,H.mask=this.mask;for(const b of this._targetedAnimations)H.addTargetedAnimation(i?b.animation.clone():b.animation,O?O(b.target):b.target);return H}serialize(){const a={};a.name=this.name,a.from=this.from,a.to=this.to,a.speedRatio=this.speedRatio,a.loopAnimation=this.loopAnimation,a.isAdditive=this.isAdditive,a.weight=this.weight,a.playOrder=this.playOrder,a.enableBlending=this.enableBlending,a.blendingSpeed=this.blendingSpeed,a.targetedAnimations=[];for(let O=0;O<this.targetedAnimations.length;O++){const i=this.targetedAnimations[O];a.targetedAnimations[O]=i.serialize()}return q.d&&q.d.HasTags(this)&&(a.tags=q.d.GetTags(this)),this.metadata&&(a.metadata=this.metadata),a}static Parse(a,O){const i=new ma(a.name,O,a.weight,a.playOrder);for(let b=0;b<a.targetedAnimations.length;b++){const G=a.targetedAnimations[b],q=H.b.Parse(G.animation),Q=G.targetId;if("influence"===G.animation.property){const a=O.getMorphTargetById(Q);a&&i.addTargetedAnimation(q,a)}else{const a=O.getNodeById(Q);null!=a&&i.addTargetedAnimation(q,a)}}return q.d&&q.d.AddTagsTo(i,a.tags),null!==a.from&&null!==a.to&&i.normalize(a.from,a.to),void 0!==a.speedRatio&&(i._speedRatio=a.speedRatio),void 0!==a.loopAnimation&&(i._loopAnimation=a.loopAnimation),void 0!==a.isAdditive&&(i._isAdditive=a.isAdditive),void 0!==a.weight&&(i._weight=a.weight),void 0!==a.playOrder&&(i._playOrder=a.playOrder),void 0!==a.enableBlending&&(i._enableBlending=a.enableBlending),void 0!==a.blendingSpeed&&(i._blendingSpeed=a.blendingSpeed),void 0!==a.metadata&&(i.metadata=a.metadata),i}static MakeAnimationAdditive(a,O,i){let b;b="object"===typeof O?O:{referenceFrame:O,range:i,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let G=a;b.cloneOriginalAnimationGroup&&(G=a.clone(b.clonedAnimationGroupName||G.name));const q=G.targetedAnimations;for(let Q=0;Q<q.length;Q++){const a=q[Q];a.animation=H.b.MakeAnimationAdditive(a.animation,b)}if(G.isAdditive=!0,b.clipKeys){let a=Number.MAX_VALUE,O=-Number.MAX_VALUE;const i=G.targetedAnimations;for(let H=0;H<i.length;H++){const b=i[H].animation.getKeys();a>b[0].frame&&(a=b[0].frame),O<b[b.length-1].frame&&(O=b[b.length-1].frame)}G._from=a,G._to=O}return G}static ClipKeys(a,O,i,H,b){const G=a.clone(H||a.name);return ma.ClipKeysInPlace(G,O,i,b)}static ClipKeysInPlace(a,O,i,H){return ma.ClipInPlace(a,O,i,H,!1)}static ClipFrames(a,O,i,H,b){const G=a.clone(H||a.name);return ma.ClipFramesInPlace(G,O,i,b)}static ClipFramesInPlace(a,O,i,H){return ma.ClipInPlace(a,O,i,H,!0)}static ClipInPlace(a,O,i,H){let b=arguments.length>4&&void 0!==arguments[4]&&arguments[4],G=Number.MAX_VALUE,q=-Number.MAX_VALUE;const Q=a.targetedAnimations;for(let k=0;k<Q.length;k++){const a=Q[k],I=H?a.animation:a.animation.clone();b&&(I.createKeyForFrame(O),I.createKeyForFrame(i));const P=I.getKeys(),e=[];let h=Number.MAX_VALUE;for(let H=0;H<P.length;H++){const a=P[H];if(!b&&H>=O&&H<=i||b&&a.frame>=O&&a.frame<=i){const O={frame:a.frame,value:a.value.clone?a.value.clone():a.value,inTangent:a.inTangent,outTangent:a.outTangent,interpolation:a.interpolation,lockedTangent:a.lockedTangent};h===Number.MAX_VALUE&&(h=O.frame),O.frame-=h,e.push(O)}}0!==e.length?(G>e[0].frame&&(G=e[0].frame),q<e[e.length-1].frame&&(q=e[e.length-1].frame),I.setKeys(e,!0),a.animation=I):(Q.splice(k,1),k--)}return a._from=G,a._to=q,a}getClassName(){return"AnimationGroup"}toString(a){let O="Name: "+this.name;return O+=", type: "+this.getClassName(),a&&(O+=", from: "+this._from,O+=", to: "+this._to,O+=", isStarted: "+this._isStarted,O+=", speedRatio: "+this._speedRatio,O+=", targetedAnimations length: "+this._targetedAnimations.length,O+=", animatables length: "+this._animatables),O}}}}]);