"use strict";(self.ex92n20nlz8=self.ex92n20nlz8||[]).push([[78],{15696:(I,g,b)=>{b.r(g),b.d(g,{AnimationGroup:()=>V,TargetedAnimation:()=>f});var e=b(13097),c=b(12412),z=b(12449),M=b(12629),J=b(14198),o=b(12590);class n{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(I,g,b,c){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=g,this._target=I,this._scene=b,this._host=c,this._activeTargets=[],g._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===e.e.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=o.Matrix.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const I={frame:0,value:this._minValue};this._keys.splice(0,0,I)}if(this._target instanceof Array){let I=0;for(const g of this._target)this._preparePath(g,I),this._getOriginalValues(I),I++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const z=g.getEvents();if(z&&z.length>0)for(const e of z)this._events.push(e._clone());this._enableBlending=I&&I.animationPropertiesOverride?I.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(I){let g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const b=this._animation.targetPropertyPath;if(b.length>1){let e=I;for(let I=0;I<b.length-1;I++){const g=b[I];if(e=e[g],void 0===e)throw new Error(`Invalid property (${g}) in property path (${b.join(".")})`)}this._targetPath=b[b.length-1],this._activeTargets[g]=e}else this._targetPath=b[0],this._activeTargets[g]=I;if(void 0===this._activeTargets[g][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${b.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let I=0;for(const g of this._target)void 0!==this._originalValue[I]&&this._setValue(g,this._activeTargets[I],this._originalValue[I],-1,I),I++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let I=0;I<this._events.length;I++)this._events[I].isDone=!1}isStopped(){return this._stopped}dispose(){const I=this._animation.runtimeAnimations.indexOf(this);I>-1&&this._animation.runtimeAnimations.splice(I,1)}setValue(I,g){if(this._targetIsArray)for(let b=0;b<this._target.length;b++){const e=this._target[b];this._setValue(e,this._activeTargets[b],I,g,b)}else this._setValue(this._target,this._directTarget,I,g,0)}_getOriginalValues(){let I,g=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const b=this._activeTargets[g];I=b.getLocalMatrix&&"_matrix"===this._targetPath?b.getLocalMatrix():b[this._targetPath],I&&I.clone?this._originalValue[g]=I.clone():this._originalValue[g]=I}_registerTargetForLateAnimationBinding(I,g){const b=I.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(b),b._lateAnimationHolders||(b._lateAnimationHolders={}),b._lateAnimationHolders[I.targetPath]||(b._lateAnimationHolders[I.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:g}),I.isAdditive?(b._lateAnimationHolders[I.targetPath].additiveAnimations.push(I),b._lateAnimationHolders[I.targetPath].totalAdditiveWeight+=I.weight):(b._lateAnimationHolders[I.targetPath].animations.push(I),b._lateAnimationHolders[I.targetPath].totalWeight+=I.weight)}_setValue(I,g,b,c,z){if(this._currentActiveTarget=g,this._weight=c,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const I=g[this._targetPath];I.clone?this._originalBlendValue=I.clone():this._originalBlendValue=I}this._originalBlendValue.m?e.e.AllowMatrixDecomposeForInterpolation?this._currentValue?o.Matrix.DecomposeLerpToRef(this._originalBlendValue,b,this._blendingFactor,this._currentValue):this._currentValue=o.Matrix.DecomposeLerp(this._originalBlendValue,b,this._blendingFactor):this._currentValue?o.Matrix.LerpToRef(this._originalBlendValue,b,this._blendingFactor,this._currentValue):this._currentValue=o.Matrix.Lerp(this._originalBlendValue,b,this._blendingFactor):this._currentValue=e.e._UniversalLerp(this._originalBlendValue,b,this._blendingFactor);const c=I&&I.animationPropertiesOverride?I.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=c}else this._currentValue?this._currentValue.G?this._currentValue.G(b):this._currentValue=b:null!==b&&void 0!==b&&b.clone?this._currentValue=b.clone():this._currentValue=b;-1!==c?this._registerTargetForLateAnimationBinding(this,this._originalValue[z]):this._animationState.loopMode===e.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[z],g[this._targetPath]):g[this._targetPath]=this._originalValue[z]+this._currentValue:g[this._targetPath]=this._currentValue,I.XD&&I.XD(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(I){let g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const b=this._animation.getKeys();I<b[0].frame?I=b[0].frame:I>b[b.length-1].frame&&(I=b[b.length-1].frame);const e=this._events;if(e.length)for(let z=0;z<e.length;z++)e[z].onlyOnce||(e[z].isDone=e[z].frame<I);this._currentFrame=I;const c=this._animation._interpolate(I,this._animationState);this.setValue(c,g)}_prepareForSpeedRatioChange(I){const g=this._previousElapsedTime*(this._animation.framePerSecond*I)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-g}animate(I,g,b,c,z){let M=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const J=this._animation,o=J.targetPropertyPath;if(!o||o.length<1)return this._stopped=!0,!1;let n,G=!0;const D=this._events;let p=0;if(this._coreRuntimeAnimation)p=b-g,n=this._coreRuntimeAnimation.currentFrame,this._currentFrame=n,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let M;(g<this._minFrame||g>this._maxFrame)&&(g=this._minFrame),(b<this._minFrame||b>this._maxFrame)&&(b=this._maxFrame),p=b-g;let o=I*(J.framePerSecond*z)/1e3+this._absoluteFrameOffset,x=0,Z=!1;const k=c&&this._animationState.loopMode===e.e.ANIMATIONLOOPMODE_YOYO;if(k){const I=(o-g)/p,b=Math.sin(I*Math.PI);o=Math.abs(b)*p+g;const e=b>=0?1:-1;this._yoyoDirection!==e&&(Z=!0),this._yoyoDirection=e}if(this._previousElapsedTime=I,this._previousAbsoluteFrame=o,!c&&b>=g&&(o>=p&&z>0||o<=0&&z<0))G=!1,x=J._getKeyValue(this._maxValue);else if(!c&&g>=b&&(o<=p&&z<0||o>=0&&z>0))G=!1,x=J._getKeyValue(this._minValue);else if(this._animationState.loopMode!==e.e.ANIMATIONLOOPMODE_CYCLE){const I=b.toString()+g.toString();if(!this._offsetsCache[I]){this._animationState.repeatCount=0,this._animationState.loopMode=e.e.ANIMATIONLOOPMODE_CYCLE;const c=J._interpolate(g,this._animationState),z=J._interpolate(b,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),J.dataType){case e.e.ANIMATIONTYPE_FLOAT:this._offsetsCache[I]=z-c;break;case e.e.ANIMATIONTYPE_QUATERNION:case e.e.ANIMATIONTYPE_VECTOR3:case e.e.ANIMATIONTYPE_VECTOR2:case e.e.ANIMATIONTYPE_SIZE:case e.e.ANIMATIONTYPE_COLOR3:this._offsetsCache[I]=z.ag(c)}this._highLimitsCache[I]=z}x=this._highLimitsCache[I],M=this._offsetsCache[I]}if(void 0===M)switch(J.dataType){case e.e.ANIMATIONTYPE_FLOAT:M=0;break;case e.e.ANIMATIONTYPE_QUATERNION:M=e.n;break;case e.e.ANIMATIONTYPE_VECTOR3:M=e.t;break;case e.e.ANIMATIONTYPE_VECTOR2:M=e.p;break;case e.e.ANIMATIONTYPE_SIZE:M=e.o;break;case e.e.ANIMATIONTYPE_COLOR3:M=e.g;break;case e.e.ANIMATIONTYPE_COLOR4:M=e.j}if(this._host&&this._host.syncRoot){const I=this._host.syncRoot;n=g+p*((I.masterFrame-I.fromFrame)/(I.toFrame-I.fromFrame))}else n=o>0&&g>b||o<0&&g<b?G&&0!==p?b+o%p:g:G&&0!==p?g+o%p:b;if(!k&&(z>0&&this.currentFrame>n||z<0&&this.currentFrame<n)||k&&Z){this._onLoop();for(let I=0;I<D.length;I++)D[I].onlyOnce||(D[I].isDone=!1);this._animationState.key=z>0?0:J.getKeys().length-1}this._currentFrame=n,this._animationState.repeatCount=0===p?0:o/p|0,this._animationState.highLimitValue=x,this._animationState.offsetValue=M}const x=J._interpolate(n,this._animationState);if(this.setValue(x,M),D.length)for(let e=0;e<D.length;e++)if(p>=0&&n>=D[e].frame&&D[e].frame>=g||p<0&&n<=D[e].frame&&D[e].frame<=g){const I=D[e];I.isDone||(I.onlyOnce&&(D.splice(e,1),e--),I.isDone=!0,I.action(n))}return G||(this._stopped=!0),G}}var G=b(12433);class D{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(I){this._weight=-1!==I?Math.min(Math.max(I,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(I){for(let g=0;g<this._runtimeAnimations.length;g++){this._runtimeAnimations[g]._prepareForSpeedRatioChange(I)}this._speedRatio=I,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(I,g){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,z=arguments.length>4&&void 0!==arguments[4]&&arguments[4],M=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,J=arguments.length>6?arguments[6]:void 0,o=arguments.length>7?arguments[7]:void 0,n=arguments.length>8?arguments[8]:void 0,G=arguments.length>9&&void 0!==arguments[9]&&arguments[9],D=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=g,this.fromFrame=b,this.toFrame=e,this.loopAnimation=z,this.onAnimationEnd=J,this.onAnimationLoop=n,this.isAdditive=G,this.playOrder=D,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.Rn=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new c.c,this.onAnimationLoopObservable=new c.c,this._scene=I,o&&this.appendAnimations(g,o),this._speedRatio=M,I._activeAnimatables.push(this)}syncWith(I){if(this._syncRoot=I,I){const I=this._scene._activeAnimatables.indexOf(this);I>-1&&(this._scene._activeAnimatables.splice(I,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(I,g){for(let b=0;b<g.length;b++){const e=g[b],c=new n(I,e,this._scene,this);c._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(c)}}getAnimationByTargetProperty(I){const g=this._runtimeAnimations;for(let b=0;b<g.length;b++)if(g[b].animation.targetProperty===I)return g[b].animation;return null}getRuntimeAnimationByTargetProperty(I){const g=this._runtimeAnimations;for(let b=0;b<g.length;b++)if(g[b].animation.targetProperty===I)return g[b];return null}reset(){const I=this._runtimeAnimations;for(let g=0;g<I.length;g++)I[g].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(I){const g=this._runtimeAnimations;for(let b=0;b<g.length;b++)g[b].animation.enableBlending=!0,g[b].animation.blendingSpeed=I}disableBlending(){const I=this._runtimeAnimations;for(let g=0;g<I.length;g++)I[g].animation.enableBlending=!1}goToFrame(I){let g=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const b=this._runtimeAnimations;if(b[0]){const g=b[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??b[0].currentFrame;const e=0===this.speedRatio?0:(I-this._frameToSyncFromJump)/g*1e3/this.speedRatio;this._manualJumpDelay=-e}for(let e=0;e<b.length;e++)b[e].goToFrame(I,g?this._weight:-1);this._goToFrame=I}get paused(){return this.Rn}pause(){this.Rn||(this.Rn=!0)}restart(){this.Rn=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(I,g){let b=arguments.length>2&&void 0!==arguments[2]&&arguments[2],e=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(I||g){const c=this._scene._activeAnimatables.indexOf(this);if(c>-1){const z=this._runtimeAnimations;for(let b=z.length-1;b>=0;b--){const e=z[b];I&&e.animation.name!=I||(g&&!g(e.target)||(e.dispose(),z.splice(b,1)))}0==z.length&&(b||this._scene._activeAnimatables.splice(c,1),e||this._raiseOnAnimationEnd())}}else{const I=this._scene._activeAnimatables.indexOf(this);if(I>-1){b||this._scene._activeAnimatables.splice(I,1);const g=this._runtimeAnimations;for(let I=0;I<g.length;I++)g[I].dispose();this._runtimeAnimations.length=0,e||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((I=>{this.onAnimationEndObservable.add((()=>{I(this)}),void 0,void 0,this,!0)}))}_animate(I){if(this.Rn)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=I),!0;if(null===this._localDelayOffset?(this._localDelayOffset=I,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=I-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let g=!1;const b=this._runtimeAnimations;let e;for(e=0;e<b.length;e++){const c=b[e].animate(I-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);g=g||c}if(this.animationStarted=g,!g){if(this.disposeOnEnd)for(e=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(e,1),e=0;e<b.length;e++)b[e].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return g}}function p(I){if(0===I.totalWeight&&0===I.totalAdditiveWeight)return I.originalValue;let g=1;const b=o.TmpVectors.Vg[0],e=o.TmpVectors.Vg[1],c=o.TmpVectors.Quaternion[0];let z=0;const M=I.animations[0],J=I.originalValue;let n=1,G=!1;if(I.totalWeight<1)n=1-I.totalWeight,J.decompose(e,c,b);else{if(z=1,g=I.totalWeight,n=M.weight/g,1==n){if(!I.totalAdditiveWeight)return M.currentValue;G=!0}M.currentValue.decompose(e,c,b)}if(!G){e.scaleInPlace(n),b.scaleInPlace(n),c.scaleInPlace(n);for(let M=z;M<I.animations.length;M++){const z=I.animations[M];if(0===z.weight)continue;n=z.weight/g;const J=o.TmpVectors.Vg[2],G=o.TmpVectors.Vg[3],D=o.TmpVectors.Quaternion[1];z.currentValue.decompose(G,D,J),G.scaleAndAddToRef(n,e),D.scaleAndAddToRef(o.Quaternion.Dot(c,D)>0?n:-n,c),J.scaleAndAddToRef(n,b)}c.normalize()}for(let p=0;p<I.additiveAnimations.length;p++){const g=I.additiveAnimations[p];if(0===g.weight)continue;const z=o.TmpVectors.Vg[2],M=o.TmpVectors.Vg[3],J=o.TmpVectors.Quaternion[1];g.currentValue.decompose(M,J,z),M.multiplyToRef(e,M),o.Vg.LerpToRef(e,M,g.weight,e),c.multiplyToRef(J,J),o.Quaternion.SlerpToRef(c,J,g.weight,c),z.scaleAndAddToRef(g.weight,b)}const D=M?M._animationState.workValue:o.TmpVectors.Matrix[0].clone();return o.Matrix.ComposeToRef(e,c,b,D),D}function x(I,g){if(0===I.totalWeight&&0===I.totalAdditiveWeight)return g;const b=I.animations[0],e=I.originalValue;let c=g;if(0===I.totalWeight&&I.totalAdditiveWeight>0)c.G(e);else if(1===I.animations.length){if(o.Quaternion.SlerpToRef(e,b.currentValue,Math.min(1,I.totalWeight),c),0===I.totalAdditiveWeight)return c}else if(I.animations.length>1){let b,z,M=1;if(I.totalWeight<1){const g=1-I.totalWeight;b=[],z=[],b.push(e),z.push(g)}else{if(2===I.animations.length&&(o.Quaternion.SlerpToRef(I.animations[0].currentValue,I.animations[1].currentValue,I.animations[1].weight/I.totalWeight,g),0===I.totalAdditiveWeight))return g;b=[],z=[],M=I.totalWeight}for(let g=0;g<I.animations.length;g++){const e=I.animations[g];b.push(e.currentValue),z.push(e.weight/M)}let J=0;for(let I=0;I<b.length;)I?(J+=z[I],o.Quaternion.SlerpToRef(c,b[I],z[I]/J,c),I++):(o.Quaternion.SlerpToRef(b[I],b[I+1],z[I+1]/(z[I]+z[I+1]),g),c=g,J=z[I]+z[I+1],I+=2)}for(let z=0;z<I.additiveAnimations.length;z++){const g=I.additiveAnimations[z];0!==g.weight&&(c.multiplyToRef(g.currentValue,o.TmpVectors.Quaternion[0]),o.Quaternion.SlerpToRef(c,o.TmpVectors.Quaternion[0],g.weight,c))}return c}var Z,k,S=b(12814);Z=S.c,(k=J.e)&&(k.prototype.copyAnimationRange=function(I,g,b){let c=arguments.length>3&&void 0!==arguments[3]&&arguments[3],z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new e.e(this.name,"_matrix",I.animations[0].framePerSecond,e.e.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const M=I.animations[0].getRange(g);if(!M)return!1;const J=M.from,o=M.to,n=I.animations[0].getKeys(),G=I.length,D=I.getParent(),p=this.getParent(),x=c&&D&&G&&this.length&&G!==this.length,Z=x&&p&&D?p.length/D.length:1,k=c&&!p&&z&&(1!==z.x||1!==z.y||1!==z.z),S=this.animations[0].getKeys();let f,V,a;for(let e=0,v=n.length;e<v;e++)f=n[e],f.frame>=J&&f.frame<=o&&(c?(a=f.value.clone(),x?(V=a.getTranslation(),a.setTranslation(V.scaleInPlace(Z))):k&&z?(V=a.getTranslation(),a.setTranslation(V.multiplyInPlace(z))):a=f.value):a=f.value,S.push({frame:f.frame+b,value:a}));return this.animations[0].createRange(g,J+b,o+b),!0}),Z&&(Z.prototype._animate=function(I){if(!this.animationsEnabled)return;const g=G.b.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=g}this.deltaTime=void 0!==I?I:this.useConstantAnimationDeltaTime?16:(g-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=g;const b=this._activeAnimatables;if(0===b.length)return;this._animationTime+=this.deltaTime;const c=this._animationTime;for(let e=0;e<b.length;e++){const I=b[e];!I._animate(c)&&I.disposeOnEnd&&e--}!function(I){if(I._registeredForLateAnimationBindings.length){for(let g=0;g<I._registeredForLateAnimationBindings.length;g++){const b=I._registeredForLateAnimationBindings.data[g];for(const I in b._lateAnimationHolders){const g=b._lateAnimationHolders[I],c=g.animations[0],z=g.originalValue;if(void 0===z||null===z)continue;const M=e.e.AllowMatrixDecomposeForInterpolation&&z.m;let J=b[I];if(M)J=p(g);else if(void 0!==z.w)J=x(g,J||o.Quaternion.Identity());else{let I=0,b=1;const M=c&&c._animationState.loopMode===e.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(g.totalWeight<1)J=M?z.clone?z.clone():z:c&&z.scale?z.scale(1-g.totalWeight):c?z*(1-g.totalWeight):z.clone?z.clone():z;else if(c){b=g.totalWeight;const e=c.weight/b;J=1!==e?c.currentValue.scale?c.currentValue.scale(e):c.currentValue*e:c.currentValue,M&&(J.addToRef?J.addToRef(z,J):J+=z),I=1}for(let e=I;e<g.animations.length;e++){const I=g.animations[e],c=I.weight/b;c&&(I.currentValue.scaleAndAddToRef?I.currentValue.scaleAndAddToRef(c,J):J+=I.currentValue*c)}for(let e=0;e<g.additiveAnimations.length;e++){const I=g.additiveAnimations[e],b=I.weight;b&&(I.currentValue.scaleAndAddToRef?I.currentValue.scaleAndAddToRef(b,J):J+=I.currentValue*b)}}b[I]=J}b._lateAnimationHolders={}}I._registeredForLateAnimationBindings.reset()}}(this)},Z.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((I,g)=>I.playOrder-g.playOrder))},Z.prototype.beginWeightedAnimation=function(I,g,b){let e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,c=arguments.length>4?arguments[4]:void 0,z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,M=arguments.length>6?arguments[6]:void 0,J=arguments.length>7?arguments[7]:void 0,o=arguments.length>8?arguments[8]:void 0,n=arguments.length>9?arguments[9]:void 0,G=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const D=this.beginAnimation(I,g,b,c,z,M,J,!1,o,n,G);return D.weight=e,D},Z.prototype.beginAnimation=function(I,g,b,e){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,z=arguments.length>5?arguments[5]:void 0,M=arguments.length>6?arguments[6]:void 0,J=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],o=arguments.length>8?arguments[8]:void 0,n=arguments.length>9?arguments[9]:void 0,G=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(c<0){const I=g;g=b,b=I,c=-c}g>b&&(c=-c),J&&this.stopAnimation(I,void 0,o),M||(M=new D(this,I,g,b,e,c,z,void 0,n,G));const p=!o||o(I);if(I.animations&&p&&M.appendAnimations(I,I.animations),I.getAnimatables){const G=I.getAnimatables();for(let I=0;I<G.length;I++)this.beginAnimation(G[I],g,b,e,c,z,M,J,o,n)}return M.reset(),M},Z.prototype.beginHierarchyAnimation=function(I,g,b,e,c){let z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,M=arguments.length>6?arguments[6]:void 0,J=arguments.length>7?arguments[7]:void 0,o=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],n=arguments.length>9?arguments[9]:void 0,G=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const D=I.getDescendants(g),p=[];p.push(this.beginAnimation(I,b,e,c,z,M,J,o,n,void 0,G));for(const x of D)p.push(this.beginAnimation(x,b,e,c,z,M,J,o,n,void 0,G));return p},Z.prototype.beginDirectAnimation=function(I,g,b,e,c){let z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(z<0){const I=b;b=e,e=I,z=-z}return b>e&&(z=-z),new D(this,I,b,e,c,z,arguments.length>6?arguments[6]:void 0,g,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},Z.prototype.beginDirectHierarchyAnimation=function(I,g,b,e,c,z,M,J,o){let n=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const G=I.getDescendants(g),D=[];D.push(this.beginDirectAnimation(I,b,e,c,z,M,J,o,n));for(const p of G)D.push(this.beginDirectAnimation(p,b,e,c,z,M,J,o,n));return D},Z.prototype.getAnimatableByTarget=function(I){for(let g=0;g<this._activeAnimatables.length;g++)if(this._activeAnimatables[g].target===I)return this._activeAnimatables[g];return null},Z.prototype.getAllAnimatablesByTarget=function(I){const g=[];for(let b=0;b<this._activeAnimatables.length;b++)this._activeAnimatables[b].target===I&&g.push(this._activeAnimatables[b]);return g},Z.prototype.stopAnimation=function(I,g,b){const e=this.getAllAnimatablesByTarget(I);for(const c of e)c.stop(g,b)},Z.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let I=0;I<this._activeAnimatables.length;I++)this._activeAnimatables[I].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const I of this.animationGroups)I.stop()});class f{getClassName(){return"TargetedAnimation"}serialize(){const I={};return I.animation=this.animation.serialize(),I.targetId=this.target.id,I}}class V{get mask(){return this._mask}set mask(I){this._mask!==I&&(this._mask=I,this.syncWithMask(!0))}syncWithMask(){let I=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||I){this._numActiveAnimatables=0;for(let I=0;I<this._animatables.length;++I){const g=this._animatables[I];!this.mask||this.mask.disabled||this.mask.retainsTarget(g.target.name)?(this._numActiveAnimatables++,g.paused&&g.restart()):g.paused||g.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let I=0;I<this._animatables.length;++I){const g=this._animatables[I];this.mask.retainsTarget(g.target.name)||(g.stop(),this._animatables.splice(I,1),--I)}for(let I=0;I<this._targetedAnimations.length;I++){const g=this._targetedAnimations[I];this.mask.retainsTarget(g.target.name)||(this._targetedAnimations.splice(I,1),--I)}}}get from(){return this._from}set from(I){if(this._from!==I){this._from=I;for(let I=0;I<this._animatables.length;I++){this._animatables[I].fromFrame=this._from}}}get to(){return this._to}set to(I){if(this._to!==I){this._to=I;for(let I=0;I<this._animatables.length;I++){this._animatables[I].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(I){if(this._speedRatio!==I){this._speedRatio=I;for(let I=0;I<this._animatables.length;I++){this._animatables[I].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(I){if(this._loopAnimation!==I){this._loopAnimation=I;for(let I=0;I<this._animatables.length;I++){this._animatables[I].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(I){if(this._isAdditive!==I){this._isAdditive=I;for(let I=0;I<this._animatables.length;I++){this._animatables[I].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(I){this._weight!==I&&(this._weight=I,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(I){if(this._playOrder!==I&&(this._playOrder=I,this._animatables.length>0)){for(let I=0;I<this._animatables.length;I++)this._animatables[I].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(I){if(this._enableBlending!==I&&(this._enableBlending=I,null!==I))for(let g=0;g<this._targetedAnimations.length;++g)this._targetedAnimations[g].animation.enableBlending=I}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(I){if(this._blendingSpeed!==I&&(this._blendingSpeed=I,null!==I))for(let g=0;g<this._targetedAnimations.length;++g)this._targetedAnimations[g].animation.blendingSpeed=I}getLength(I,g){I=I??this._from;return((g=g??this._to)-I)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(I){let g=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],b=arguments.length>2&&void 0!==arguments[2]&&arguments[2],e=arguments.length>3?arguments[3]:void 0;if(0===I.length)return null;e=e??I[0].weight;let c=Number.MAX_VALUE,z=-Number.MAX_VALUE;if(b)for(const J of I)J.from<c&&(c=J.from),J.to>z&&(z=J.to);const M=new V(I[0].name+"_merged",I[0]._scene,e);for(const J of I){b&&J.normalize(c,z);for(const I of J.targetedAnimations)M.addTargetedAnimation(I.animation,I.target);g&&J.dispose()}return M}constructor(I){let g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=I,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new c.c,this.onAnimationLoopObservable=new c.c,this.onAnimationGroupLoopObservable=new c.c,this.onAnimationGroupEndObservable=new c.c,this.onAnimationGroupPauseObservable=new c.c,this.onAnimationGroupPlayObservable=new c.c,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=g||z.b.LastCreatedScene,this._weight=b,this._playOrder=e,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(I,g){const b=new f;b.animation=I,b.target=g;const e=I.getKeys();return this._from>e[0].frame&&(this._from=e[0].frame),this._to<e[e.length-1].frame&&(this._to=e[e.length-1].frame),null!==this._enableBlending&&(I.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(I.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(b),this._shouldStart=!0,b}removeTargetedAnimation(I){for(let g=this._targetedAnimations.length-1;g>-1;g--){this._targetedAnimations[g].animation===I&&this._targetedAnimations.splice(g,1)}}normalize(){let I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==I&&(I=this._from),null==g&&(g=this._to);for(let b=0;b<this._targetedAnimations.length;b++){const e=this._targetedAnimations[b].animation.getKeys(),c=e[0],z=e[e.length-1];if(c.frame>I){const g={frame:I,value:c.value,inTangent:c.inTangent,outTangent:c.outTangent,interpolation:c.interpolation};e.splice(0,0,g)}if(z.frame<g){const I={frame:g,value:z.value,inTangent:z.inTangent,outTangent:z.outTangent,interpolation:z.interpolation};e.push(I)}}return this._from=I,this._to=g,this}_processLoop(I,g,b){I.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(g),this._animationLoopFlags[b]||(this._animationLoopFlags[b]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let I=arguments.length>0&&void 0!==arguments[0]&&arguments[0],g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,b=arguments.length>2?arguments[2]:void 0,e=arguments.length>3?arguments[3]:void 0,c=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=I,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let z=0;z<this._targetedAnimations.length;z++){const M=this._targetedAnimations[z],J=this._scene.beginDirectAnimation(M.target,[M.animation],void 0!==b?b:this._from,void 0!==e?e:this._to,I,g,void 0,void 0,void 0!==c?c:this._isAdditive);J.weight=this._weight,J.playOrder=this._playOrder,J.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(M),this._checkAnimationGroupEnded(J)},this._processLoop(J,M,z),this._animatables.push(J)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=g,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let I=0;I<this._animatables.length;I++){this._animatables[I].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(I){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==I&&(this.loopAnimation=I),this.restart()):(this.stop(),this.start(I,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let I=0;I<this._animatables.length;I++){this._animatables[I].reset()}return this}restart(){if(!this._isStarted)return this;for(let I=0;I<this._animatables.length;I++){this._animatables[I].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let I=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const g=this._animatables.slice();for(let e=0;e<g.length;e++)g[e].stop(void 0,void 0,!0,I);let b=0;for(let e=0;e<this._scene._activeAnimatables.length;e++){const g=this._scene._activeAnimatables[e];g._runtimeAnimations.length>0?this._scene._activeAnimatables[b++]=g:I&&this._checkAnimationGroupEnded(g,I)}return this._scene._activeAnimatables.length=b,this._isStarted=!1,this}setWeightForAllAnimatables(I){for(let g=0;g<this._animatables.length;g++){this._animatables[g].weight=I}return this}syncAllAnimationsWith(I){for(let g=0;g<this._animatables.length;g++){this._animatables[g].syncWith(I)}return this}goToFrame(I){let g=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let b=0;b<this._animatables.length;b++){this._animatables[b].goToFrame(I,g)}return this}getCurrentFrame(){var I;return(null===(I=this.animatables[0])||void 0===I?void 0:I.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const I=this._scene.animationGroups.indexOf(this);if(I>-1&&this._scene.animationGroups.splice(I,1),this._parentContainer){const I=this._parentContainer.animationGroups.indexOf(this);I>-1&&this._parentContainer.animationGroups.splice(I,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(I){let g=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const b=this._animatables.indexOf(I);b>-1&&this._animatables.splice(b,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,g||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(I,g){let b=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const e=new V(I||this.name,this._scene,this._weight,this._playOrder);e._from=this.from,e._to=this.to,e._speedRatio=this.speedRatio,e._loopAnimation=this.loopAnimation,e._isAdditive=this.isAdditive,e._enableBlending=this.enableBlending,e._blendingSpeed=this.blendingSpeed,e.metadata=this.metadata,e.mask=this.mask;for(const c of this._targetedAnimations)e.addTargetedAnimation(b?c.animation.clone():c.animation,g?g(c.target):c.target);return e}serialize(){const I={};I.name=this.name,I.from=this.from,I.to=this.to,I.speedRatio=this.speedRatio,I.loopAnimation=this.loopAnimation,I.isAdditive=this.isAdditive,I.weight=this.weight,I.playOrder=this.playOrder,I.enableBlending=this.enableBlending,I.blendingSpeed=this.blendingSpeed,I.targetedAnimations=[];for(let g=0;g<this.targetedAnimations.length;g++){const b=this.targetedAnimations[g];I.targetedAnimations[g]=b.serialize()}return M.d&&M.d.HasTags(this)&&(I.tags=M.d.GetTags(this)),this.metadata&&(I.metadata=this.metadata),I}static Parse(I,g){const b=new V(I.name,g,I.weight,I.playOrder);for(let c=0;c<I.targetedAnimations.length;c++){const z=I.targetedAnimations[c],M=e.e.Parse(z.animation),J=z.targetId;if("influence"===z.animation.property){const I=g.getMorphTargetById(J);I&&b.addTargetedAnimation(M,I)}else{const I=g.getNodeById(J);null!=I&&b.addTargetedAnimation(M,I)}}return M.d&&M.d.AddTagsTo(b,I.tags),null!==I.from&&null!==I.to&&b.normalize(I.from,I.to),void 0!==I.speedRatio&&(b._speedRatio=I.speedRatio),void 0!==I.loopAnimation&&(b._loopAnimation=I.loopAnimation),void 0!==I.isAdditive&&(b._isAdditive=I.isAdditive),void 0!==I.weight&&(b._weight=I.weight),void 0!==I.playOrder&&(b._playOrder=I.playOrder),void 0!==I.enableBlending&&(b._enableBlending=I.enableBlending),void 0!==I.blendingSpeed&&(b._blendingSpeed=I.blendingSpeed),void 0!==I.metadata&&(b.metadata=I.metadata),b}static MakeAnimationAdditive(I,g,b){let c;c="object"===typeof g?g:{referenceFrame:g,range:b,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let z=I;c.cloneOriginalAnimationGroup&&(z=I.clone(c.clonedAnimationGroupName||z.name));const M=z.targetedAnimations;for(let J=0;J<M.length;J++){const I=M[J];I.animation=e.e.MakeAnimationAdditive(I.animation,c)}if(z.isAdditive=!0,c.clipKeys){let I=Number.MAX_VALUE,g=-Number.MAX_VALUE;const b=z.targetedAnimations;for(let e=0;e<b.length;e++){const c=b[e].animation.getKeys();I>c[0].frame&&(I=c[0].frame),g<c[c.length-1].frame&&(g=c[c.length-1].frame)}z._from=I,z._to=g}return z}static ClipKeys(I,g,b,e,c){const z=I.clone(e||I.name);return V.ClipKeysInPlace(z,g,b,c)}static ClipKeysInPlace(I,g,b,e){return V.ClipInPlace(I,g,b,e,!1)}static ClipFrames(I,g,b,e,c){const z=I.clone(e||I.name);return V.ClipFramesInPlace(z,g,b,c)}static ClipFramesInPlace(I,g,b,e){return V.ClipInPlace(I,g,b,e,!0)}static ClipInPlace(I,g,b,e){let c=arguments.length>4&&void 0!==arguments[4]&&arguments[4],z=Number.MAX_VALUE,M=-Number.MAX_VALUE;const J=I.targetedAnimations;for(let o=0;o<J.length;o++){const I=J[o],n=e?I.animation:I.animation.clone();c&&(n.createKeyForFrame(g),n.createKeyForFrame(b));const G=n.getKeys(),D=[];let p=Number.MAX_VALUE;for(let e=0;e<G.length;e++){const I=G[e];if(!c&&e>=g&&e<=b||c&&I.frame>=g&&I.frame<=b){const g={frame:I.frame,value:I.value.clone?I.value.clone():I.value,inTangent:I.inTangent,outTangent:I.outTangent,interpolation:I.interpolation,lockedTangent:I.lockedTangent};p===Number.MAX_VALUE&&(p=g.frame),g.frame-=p,D.push(g)}}0!==D.length?(z>D[0].frame&&(z=D[0].frame),M<D[D.length-1].frame&&(M=D[D.length-1].frame),n.setKeys(D,!0),I.animation=n):(J.splice(o,1),o--)}return I._from=z,I._to=M,I}getClassName(){return"AnimationGroup"}toString(I){let g="Name: "+this.name;return g+=", type: "+this.getClassName(),I&&(g+=", from: "+this._from,g+=", to: "+this._to,g+=", isStarted: "+this._isStarted,g+=", speedRatio: "+this._speedRatio,g+=", targetedAnimations length: "+this._targetedAnimations.length,g+=", animatables length: "+this._animatables),g}}}}]);