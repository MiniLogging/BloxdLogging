"use strict";(self["686i8587bmi"]=self["686i8587bmi"]||[]).push([[78],{16001:(h,d,T)=>{T.r(d),T.d(d,{AnimationGroup:()=>L,TargetedAnimation:()=>W});var Y=T(13301),y=T(12583),C=T(12625),n=T(12809),X=T(14457),F=T(12765);class U{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(h,d,T,y){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=d,this._target=h,this._scene=T,this._host=y,this._activeTargets=[],d._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===Y.c.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=F.Matrix.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const h={frame:0,value:this._minValue};this._keys.splice(0,0,h)}if(this._target instanceof Array){let h=0;for(const d of this._target)this._preparePath(d,h),this._getOriginalValues(h),h++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const C=d.getEvents();if(C&&C.length>0)for(const Y of C)this._events.push(Y._clone());this._enableBlending=h&&h.animationPropertiesOverride?h.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(h){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const T=this._animation.targetPropertyPath;if(T.length>1){let Y=h;for(let h=0;h<T.length-1;h++){const d=T[h];if(Y=Y[d],void 0===Y)throw new Error(`Invalid property (${d}) in property path (${T.join(".")})`)}this._targetPath=T[T.length-1],this._activeTargets[d]=Y}else this._targetPath=T[0],this._activeTargets[d]=h;if(void 0===this._activeTargets[d][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${T.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let h=0;for(const d of this._target)void 0!==this._originalValue[h]&&this._setValue(d,this._activeTargets[h],this._originalValue[h],-1,h),h++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let h=0;h<this._events.length;h++)this._events[h].isDone=!1}isStopped(){return this._stopped}dispose(){const h=this._animation.runtimeAnimations.indexOf(this);h>-1&&this._animation.runtimeAnimations.splice(h,1)}setValue(h,d){if(this._targetIsArray)for(let T=0;T<this._target.length;T++){const Y=this._target[T];this._setValue(Y,this._activeTargets[T],h,d,T)}else this._setValue(this._target,this._directTarget,h,d,0)}_getOriginalValues(){let h,d=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const T=this._activeTargets[d];h=T.getLocalMatrix&&"_matrix"===this._targetPath?T.getLocalMatrix():T[this._targetPath],h&&h.clone?this._originalValue[d]=h.clone():this._originalValue[d]=h}_registerTargetForLateAnimationBinding(h,d){const T=h.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(T),T._lateAnimationHolders||(T._lateAnimationHolders={}),T._lateAnimationHolders[h.targetPath]||(T._lateAnimationHolders[h.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:d}),h.isAdditive?(T._lateAnimationHolders[h.targetPath].additiveAnimations.push(h),T._lateAnimationHolders[h.targetPath].totalAdditiveWeight+=h.weight):(T._lateAnimationHolders[h.targetPath].animations.push(h),T._lateAnimationHolders[h.targetPath].totalWeight+=h.weight)}_setValue(h,d,T,y,C){if(this._currentActiveTarget=d,this._weight=y,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const h=d[this._targetPath];h.clone?this._originalBlendValue=h.clone():this._originalBlendValue=h}this._originalBlendValue.m?Y.c.AllowMatrixDecomposeForInterpolation?this._currentValue?F.Matrix.DecomposeLerpToRef(this._originalBlendValue,T,this._blendingFactor,this._currentValue):this._currentValue=F.Matrix.DecomposeLerp(this._originalBlendValue,T,this._blendingFactor):this._currentValue?F.Matrix.LerpToRef(this._originalBlendValue,T,this._blendingFactor,this._currentValue):this._currentValue=F.Matrix.Lerp(this._originalBlendValue,T,this._blendingFactor):this._currentValue=Y.c._UniversalLerp(this._originalBlendValue,T,this._blendingFactor);const y=h&&h.animationPropertiesOverride?h.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=y}else this._currentValue?this._currentValue.C?this._currentValue.C(T):this._currentValue=T:null!==T&&void 0!==T&&T.clone?this._currentValue=T.clone():this._currentValue=T;-1!==y?this._registerTargetForLateAnimationBinding(this,this._originalValue[C]):this._animationState.loopMode===Y.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[C],d[this._targetPath]):d[this._targetPath]=this._originalValue[C]+this._currentValue:d[this._targetPath]=this._currentValue,h.YZ&&h.YZ(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(h){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const T=this._animation.getKeys();h<T[0].frame?h=T[0].frame:h>T[T.length-1].frame&&(h=T[T.length-1].frame);const Y=this._events;if(Y.length)for(let C=0;C<Y.length;C++)Y[C].onlyOnce||(Y[C].isDone=Y[C].frame<h);this._currentFrame=h;const y=this._animation._interpolate(h,this._animationState);this.setValue(y,d)}_prepareForSpeedRatioChange(h){const d=this._previousElapsedTime*(this._animation.framePerSecond*h)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-d}animate(h,d,T,y,C){let n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const X=this._animation,F=X.targetPropertyPath;if(!F||F.length<1)return this._stopped=!0,!1;let U,Z=!0;const S=this._events;let r=0;if(this._coreRuntimeAnimation)r=T-d,U=this._coreRuntimeAnimation.currentFrame,this._currentFrame=U,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let n;(d<this._minFrame||d>this._maxFrame)&&(d=this._minFrame),(T<this._minFrame||T>this._maxFrame)&&(T=this._maxFrame),r=T-d;let F=h*(X.framePerSecond*C)/1e3+this._absoluteFrameOffset,c=0,O=!1;const f=y&&this._animationState.loopMode===Y.c.ANIMATIONLOOPMODE_YOYO;if(f){const h=(F-d)/r,T=Math.sin(h*Math.PI);F=Math.abs(T)*r+d;const Y=T>=0?1:-1;this._yoyoDirection!==Y&&(O=!0),this._yoyoDirection=Y}if(this._previousElapsedTime=h,this._previousAbsoluteFrame=F,!y&&T>=d&&(F>=r&&C>0||F<=0&&C<0))Z=!1,c=X._getKeyValue(this._maxValue);else if(!y&&d>=T&&(F<=r&&C<0||F>=0&&C>0))Z=!1,c=X._getKeyValue(this._minValue);else if(this._animationState.loopMode!==Y.c.ANIMATIONLOOPMODE_CYCLE){const h=T.toString()+d.toString();if(!this._offsetsCache[h]){this._animationState.repeatCount=0,this._animationState.loopMode=Y.c.ANIMATIONLOOPMODE_CYCLE;const y=X._interpolate(d,this._animationState),C=X._interpolate(T,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),X.dataType){case Y.c.ANIMATIONTYPE_FLOAT:this._offsetsCache[h]=C-y;break;case Y.c.ANIMATIONTYPE_QUATERNION:case Y.c.ANIMATIONTYPE_VECTOR3:case Y.c.ANIMATIONTYPE_VECTOR2:case Y.c.ANIMATIONTYPE_SIZE:case Y.c.ANIMATIONTYPE_COLOR3:this._offsetsCache[h]=C.Nd(y)}this._highLimitsCache[h]=C}c=this._highLimitsCache[h],n=this._offsetsCache[h]}if(void 0===n)switch(X.dataType){case Y.c.ANIMATIONTYPE_FLOAT:n=0;break;case Y.c.ANIMATIONTYPE_QUATERNION:n=Y.l;break;case Y.c.ANIMATIONTYPE_VECTOR3:n=Y.u;break;case Y.c.ANIMATIONTYPE_VECTOR2:n=Y.r;break;case Y.c.ANIMATIONTYPE_SIZE:n=Y.p;break;case Y.c.ANIMATIONTYPE_COLOR3:n=Y.g;break;case Y.c.ANIMATIONTYPE_COLOR4:n=Y.j}if(this._host&&this._host.syncRoot){const h=this._host.syncRoot;U=d+r*((h.masterFrame-h.fromFrame)/(h.toFrame-h.fromFrame))}else U=F>0&&d>T||F<0&&d<T?Z&&0!==r?T+F%r:d:Z&&0!==r?d+F%r:T;if(!f&&(C>0&&this.currentFrame>U||C<0&&this.currentFrame<U)||f&&O){this._onLoop();for(let h=0;h<S.length;h++)S[h].onlyOnce||(S[h].isDone=!1);this._animationState.key=C>0?0:X.getKeys().length-1}this._currentFrame=U,this._animationState.repeatCount=0===r?0:F/r|0,this._animationState.highLimitValue=c,this._animationState.offsetValue=n}const c=X._interpolate(U,this._animationState);if(this.setValue(c,n),S.length)for(let Y=0;Y<S.length;Y++)if(r>=0&&U>=S[Y].frame&&S[Y].frame>=d||r<0&&U<=S[Y].frame&&S[Y].frame<=d){const h=S[Y];h.isDone||(h.onlyOnce&&(S.splice(Y,1),Y--),h.isDone=!0,h.action(U))}return Z||(this._stopped=!0),Z}}var Z=T(12609);class S{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(h){this._weight=-1!==h?Math.min(Math.max(h,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(h){for(let d=0;d<this._runtimeAnimations.length;d++){this._runtimeAnimations[d]._prepareForSpeedRatioChange(h)}this._speedRatio=h,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(h,d){let T=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,Y=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,C=arguments.length>4&&void 0!==arguments[4]&&arguments[4],n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,X=arguments.length>6?arguments[6]:void 0,F=arguments.length>7?arguments[7]:void 0,U=arguments.length>8?arguments[8]:void 0,Z=arguments.length>9&&void 0!==arguments[9]&&arguments[9],S=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=d,this.fromFrame=T,this.toFrame=Y,this.loopAnimation=C,this.onAnimationEnd=X,this.onAnimationLoop=U,this.isAdditive=Z,this.playOrder=S,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.NX=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new y.e,this.onAnimationLoopObservable=new y.e,this._scene=h,F&&this.appendAnimations(d,F),this._speedRatio=n,h._activeAnimatables.push(this)}syncWith(h){if(this._syncRoot=h,h){const h=this._scene._activeAnimatables.indexOf(this);h>-1&&(this._scene._activeAnimatables.splice(h,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(h,d){for(let T=0;T<d.length;T++){const Y=d[T],y=new U(h,Y,this._scene,this);y._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(y)}}getAnimationByTargetProperty(h){const d=this._runtimeAnimations;for(let T=0;T<d.length;T++)if(d[T].animation.targetProperty===h)return d[T].animation;return null}getRuntimeAnimationByTargetProperty(h){const d=this._runtimeAnimations;for(let T=0;T<d.length;T++)if(d[T].animation.targetProperty===h)return d[T];return null}reset(){const h=this._runtimeAnimations;for(let d=0;d<h.length;d++)h[d].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(h){const d=this._runtimeAnimations;for(let T=0;T<d.length;T++)d[T].animation.enableBlending=!0,d[T].animation.blendingSpeed=h}disableBlending(){const h=this._runtimeAnimations;for(let d=0;d<h.length;d++)h[d].animation.enableBlending=!1}goToFrame(h){let d=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const T=this._runtimeAnimations;if(T[0]){const d=T[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??T[0].currentFrame;const Y=0===this.speedRatio?0:(h-this._frameToSyncFromJump)/d*1e3/this.speedRatio;this._manualJumpDelay=-Y}for(let Y=0;Y<T.length;Y++)T[Y].goToFrame(h,d?this._weight:-1);this._goToFrame=h}get paused(){return this.NX}pause(){this.NX||(this.NX=!0)}restart(){this.NX=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(h,d){let T=arguments.length>2&&void 0!==arguments[2]&&arguments[2],Y=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(h||d){const y=this._scene._activeAnimatables.indexOf(this);if(y>-1){const C=this._runtimeAnimations;for(let T=C.length-1;T>=0;T--){const Y=C[T];h&&Y.animation.name!=h||(d&&!d(Y.target)||(Y.dispose(),C.splice(T,1)))}0==C.length&&(T||this._scene._activeAnimatables.splice(y,1),Y||this._raiseOnAnimationEnd())}}else{const h=this._scene._activeAnimatables.indexOf(this);if(h>-1){T||this._scene._activeAnimatables.splice(h,1);const d=this._runtimeAnimations;for(let h=0;h<d.length;h++)d[h].dispose();this._runtimeAnimations.length=0,Y||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((h=>{this.onAnimationEndObservable.add((()=>{h(this)}),void 0,void 0,this,!0)}))}_animate(h){if(this.NX)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=h),!0;if(null===this._localDelayOffset?(this._localDelayOffset=h,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=h-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let d=!1;const T=this._runtimeAnimations;let Y;for(Y=0;Y<T.length;Y++){const y=T[Y].animate(h-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);d=d||y}if(this.animationStarted=d,!d){if(this.disposeOnEnd)for(Y=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(Y,1),Y=0;Y<T.length;Y++)T[Y].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return d}}function r(h){if(0===h.totalWeight&&0===h.totalAdditiveWeight)return h.originalValue;let d=1;const T=F.TmpVectors.pd[0],Y=F.TmpVectors.pd[1],y=F.TmpVectors.Quaternion[0];let C=0;const n=h.animations[0],X=h.originalValue;let U=1,Z=!1;if(h.totalWeight<1)U=1-h.totalWeight,X.decompose(Y,y,T);else{if(C=1,d=h.totalWeight,U=n.weight/d,1==U){if(!h.totalAdditiveWeight)return n.currentValue;Z=!0}n.currentValue.decompose(Y,y,T)}if(!Z){Y.scaleInPlace(U),T.scaleInPlace(U),y.scaleInPlace(U);for(let n=C;n<h.animations.length;n++){const C=h.animations[n];if(0===C.weight)continue;U=C.weight/d;const X=F.TmpVectors.pd[2],Z=F.TmpVectors.pd[3],S=F.TmpVectors.Quaternion[1];C.currentValue.decompose(Z,S,X),Z.scaleAndAddToRef(U,Y),S.scaleAndAddToRef(F.Quaternion.Dot(y,S)>0?U:-U,y),X.scaleAndAddToRef(U,T)}y.normalize()}for(let r=0;r<h.additiveAnimations.length;r++){const d=h.additiveAnimations[r];if(0===d.weight)continue;const C=F.TmpVectors.pd[2],n=F.TmpVectors.pd[3],X=F.TmpVectors.Quaternion[1];d.currentValue.decompose(n,X,C),n.multiplyToRef(Y,n),F.pd.LerpToRef(Y,n,d.weight,Y),y.multiplyToRef(X,X),F.Quaternion.SlerpToRef(y,X,d.weight,y),C.scaleAndAddToRef(d.weight,T)}const S=n?n._animationState.workValue:F.TmpVectors.Matrix[0].clone();return F.Matrix.ComposeToRef(Y,y,T,S),S}function c(h,d){if(0===h.totalWeight&&0===h.totalAdditiveWeight)return d;const T=h.animations[0],Y=h.originalValue;let y=d;if(0===h.totalWeight&&h.totalAdditiveWeight>0)y.C(Y);else if(1===h.animations.length){if(F.Quaternion.SlerpToRef(Y,T.currentValue,Math.min(1,h.totalWeight),y),0===h.totalAdditiveWeight)return y}else if(h.animations.length>1){let T,C,n=1;if(h.totalWeight<1){const d=1-h.totalWeight;T=[],C=[],T.push(Y),C.push(d)}else{if(2===h.animations.length&&(F.Quaternion.SlerpToRef(h.animations[0].currentValue,h.animations[1].currentValue,h.animations[1].weight/h.totalWeight,d),0===h.totalAdditiveWeight))return d;T=[],C=[],n=h.totalWeight}for(let d=0;d<h.animations.length;d++){const Y=h.animations[d];T.push(Y.currentValue),C.push(Y.weight/n)}let X=0;for(let h=0;h<T.length;)h?(X+=C[h],F.Quaternion.SlerpToRef(y,T[h],C[h]/X,y),h++):(F.Quaternion.SlerpToRef(T[h],T[h+1],C[h+1]/(C[h]+C[h+1]),d),y=d,X=C[h]+C[h+1],h+=2)}for(let C=0;C<h.additiveAnimations.length;C++){const d=h.additiveAnimations[C];0!==d.weight&&(y.multiplyToRef(d.currentValue,F.TmpVectors.Quaternion[0]),F.Quaternion.SlerpToRef(y,F.TmpVectors.Quaternion[0],d.weight,y))}return y}var O,f,J=T(12990);O=J.d,(f=X.e)&&(f.prototype.copyAnimationRange=function(h,d,T){let y=arguments.length>3&&void 0!==arguments[3]&&arguments[3],C=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new Y.c(this.name,"_matrix",h.animations[0].framePerSecond,Y.c.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const n=h.animations[0].getRange(d);if(!n)return!1;const X=n.from,F=n.to,U=h.animations[0].getKeys(),Z=h.length,S=h.getParent(),r=this.getParent(),c=y&&S&&Z&&this.length&&Z!==this.length,O=c&&r&&S?r.length/S.length:1,f=y&&!r&&C&&(1!==C.x||1!==C.y||1!==C.z),J=this.animations[0].getKeys();let W,L,D;for(let Y=0,V=U.length;Y<V;Y++)W=U[Y],W.frame>=X&&W.frame<=F&&(y?(D=W.value.clone(),c?(L=D.getTranslation(),D.setTranslation(L.scaleInPlace(O))):f&&C?(L=D.getTranslation(),D.setTranslation(L.multiplyInPlace(C))):D=W.value):D=W.value,J.push({frame:W.frame+T,value:D}));return this.animations[0].createRange(d,X+T,F+T),!0}),O&&(O.prototype._animate=function(h){if(!this.animationsEnabled)return;const d=Z.b.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=d}this.deltaTime=void 0!==h?h:this.useConstantAnimationDeltaTime?16:(d-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=d;const T=this._activeAnimatables;if(0===T.length)return;this._animationTime+=this.deltaTime;const y=this._animationTime;for(let Y=0;Y<T.length;Y++){const h=T[Y];!h._animate(y)&&h.disposeOnEnd&&Y--}!function(h){if(h._registeredForLateAnimationBindings.length){for(let d=0;d<h._registeredForLateAnimationBindings.length;d++){const T=h._registeredForLateAnimationBindings.data[d];for(const h in T._lateAnimationHolders){const d=T._lateAnimationHolders[h],y=d.animations[0],C=d.originalValue;if(void 0===C||null===C)continue;const n=Y.c.AllowMatrixDecomposeForInterpolation&&C.m;let X=T[h];if(n)X=r(d);else if(void 0!==C.w)X=c(d,X||F.Quaternion.Identity());else{let h=0,T=1;const n=y&&y._animationState.loopMode===Y.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(d.totalWeight<1)X=n?C.clone?C.clone():C:y&&C.scale?C.scale(1-d.totalWeight):y?C*(1-d.totalWeight):C.clone?C.clone():C;else if(y){T=d.totalWeight;const Y=y.weight/T;X=1!==Y?y.currentValue.scale?y.currentValue.scale(Y):y.currentValue*Y:y.currentValue,n&&(X.addToRef?X.addToRef(C,X):X+=C),h=1}for(let Y=h;Y<d.animations.length;Y++){const h=d.animations[Y],y=h.weight/T;y&&(h.currentValue.scaleAndAddToRef?h.currentValue.scaleAndAddToRef(y,X):X+=h.currentValue*y)}for(let Y=0;Y<d.additiveAnimations.length;Y++){const h=d.additiveAnimations[Y],T=h.weight;T&&(h.currentValue.scaleAndAddToRef?h.currentValue.scaleAndAddToRef(T,X):X+=h.currentValue*T)}}T[h]=X}T._lateAnimationHolders={}}h._registeredForLateAnimationBindings.reset()}}(this)},O.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((h,d)=>h.playOrder-d.playOrder))},O.prototype.beginWeightedAnimation=function(h,d,T){let Y=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,y=arguments.length>4?arguments[4]:void 0,C=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,n=arguments.length>6?arguments[6]:void 0,X=arguments.length>7?arguments[7]:void 0,F=arguments.length>8?arguments[8]:void 0,U=arguments.length>9?arguments[9]:void 0,Z=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const S=this.beginAnimation(h,d,T,y,C,n,X,!1,F,U,Z);return S.weight=Y,S},O.prototype.beginAnimation=function(h,d,T,Y){let y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,C=arguments.length>5?arguments[5]:void 0,n=arguments.length>6?arguments[6]:void 0,X=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],F=arguments.length>8?arguments[8]:void 0,U=arguments.length>9?arguments[9]:void 0,Z=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(y<0){const h=d;d=T,T=h,y=-y}d>T&&(y=-y),X&&this.stopAnimation(h,void 0,F),n||(n=new S(this,h,d,T,Y,y,C,void 0,U,Z));const r=!F||F(h);if(h.animations&&r&&n.appendAnimations(h,h.animations),h.getAnimatables){const Z=h.getAnimatables();for(let h=0;h<Z.length;h++)this.beginAnimation(Z[h],d,T,Y,y,C,n,X,F,U)}return n.reset(),n},O.prototype.beginHierarchyAnimation=function(h,d,T,Y,y){let C=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,n=arguments.length>6?arguments[6]:void 0,X=arguments.length>7?arguments[7]:void 0,F=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],U=arguments.length>9?arguments[9]:void 0,Z=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const S=h.getDescendants(d),r=[];r.push(this.beginAnimation(h,T,Y,y,C,n,X,F,U,void 0,Z));for(const c of S)r.push(this.beginAnimation(c,T,Y,y,C,n,X,F,U,void 0,Z));return r},O.prototype.beginDirectAnimation=function(h,d,T,Y,y){let C=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(C<0){const h=T;T=Y,Y=h,C=-C}return T>Y&&(C=-C),new S(this,h,T,Y,y,C,arguments.length>6?arguments[6]:void 0,d,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},O.prototype.beginDirectHierarchyAnimation=function(h,d,T,Y,y,C,n,X,F){let U=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const Z=h.getDescendants(d),S=[];S.push(this.beginDirectAnimation(h,T,Y,y,C,n,X,F,U));for(const r of Z)S.push(this.beginDirectAnimation(r,T,Y,y,C,n,X,F,U));return S},O.prototype.getAnimatableByTarget=function(h){for(let d=0;d<this._activeAnimatables.length;d++)if(this._activeAnimatables[d].target===h)return this._activeAnimatables[d];return null},O.prototype.getAllAnimatablesByTarget=function(h){const d=[];for(let T=0;T<this._activeAnimatables.length;T++)this._activeAnimatables[T].target===h&&d.push(this._activeAnimatables[T]);return d},O.prototype.stopAnimation=function(h,d,T){const Y=this.getAllAnimatablesByTarget(h);for(const y of Y)y.stop(d,T)},O.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let h=0;h<this._activeAnimatables.length;h++)this._activeAnimatables[h].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const h of this.animationGroups)h.stop()});class W{getClassName(){return"TargetedAnimation"}serialize(){const h={};return h.animation=this.animation.serialize(),h.targetId=this.target.id,h}}class L{get mask(){return this._mask}set mask(h){this._mask!==h&&(this._mask=h,this.syncWithMask(!0))}syncWithMask(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||h){this._numActiveAnimatables=0;for(let h=0;h<this._animatables.length;++h){const d=this._animatables[h];!this.mask||this.mask.disabled||this.mask.retainsTarget(d.target.name)?(this._numActiveAnimatables++,d.paused&&d.restart()):d.paused||d.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let h=0;h<this._animatables.length;++h){const d=this._animatables[h];this.mask.retainsTarget(d.target.name)||(d.stop(),this._animatables.splice(h,1),--h)}for(let h=0;h<this._targetedAnimations.length;h++){const d=this._targetedAnimations[h];this.mask.retainsTarget(d.target.name)||(this._targetedAnimations.splice(h,1),--h)}}}get from(){return this._from}set from(h){if(this._from!==h){this._from=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].fromFrame=this._from}}}get to(){return this._to}set to(h){if(this._to!==h){this._to=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(h){if(this._speedRatio!==h){this._speedRatio=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(h){if(this._loopAnimation!==h){this._loopAnimation=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(h){if(this._isAdditive!==h){this._isAdditive=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(h){this._weight!==h&&(this._weight=h,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(h){if(this._playOrder!==h&&(this._playOrder=h,this._animatables.length>0)){for(let h=0;h<this._animatables.length;h++)this._animatables[h].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(h){if(this._enableBlending!==h&&(this._enableBlending=h,null!==h))for(let d=0;d<this._targetedAnimations.length;++d)this._targetedAnimations[d].animation.enableBlending=h}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(h){if(this._blendingSpeed!==h&&(this._blendingSpeed=h,null!==h))for(let d=0;d<this._targetedAnimations.length;++d)this._targetedAnimations[d].animation.blendingSpeed=h}getLength(h,d){h=h??this._from;return((d=d??this._to)-h)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(h){let d=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],T=arguments.length>2&&void 0!==arguments[2]&&arguments[2],Y=arguments.length>3?arguments[3]:void 0;if(0===h.length)return null;Y=Y??h[0].weight;let y=Number.MAX_VALUE,C=-Number.MAX_VALUE;if(T)for(const X of h)X.from<y&&(y=X.from),X.to>C&&(C=X.to);const n=new L(h[0].name+"_merged",h[0]._scene,Y);for(const X of h){T&&X.normalize(y,C);for(const h of X.targetedAnimations)n.addTargetedAnimation(h.animation,h.target);d&&X.dispose()}return n}constructor(h){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,T=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,Y=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=h,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new y.e,this.onAnimationLoopObservable=new y.e,this.onAnimationGroupLoopObservable=new y.e,this.onAnimationGroupEndObservable=new y.e,this.onAnimationGroupPauseObservable=new y.e,this.onAnimationGroupPlayObservable=new y.e,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=d||C.d.LastCreatedScene,this._weight=T,this._playOrder=Y,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(h,d){const T=new W;T.animation=h,T.target=d;const Y=h.getKeys();return this._from>Y[0].frame&&(this._from=Y[0].frame),this._to<Y[Y.length-1].frame&&(this._to=Y[Y.length-1].frame),null!==this._enableBlending&&(h.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(h.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(T),this._shouldStart=!0,T}removeTargetedAnimation(h){for(let d=this._targetedAnimations.length-1;d>-1;d--){this._targetedAnimations[d].animation===h&&this._targetedAnimations.splice(d,1)}}normalize(){let h=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==h&&(h=this._from),null==d&&(d=this._to);for(let T=0;T<this._targetedAnimations.length;T++){const Y=this._targetedAnimations[T].animation.getKeys(),y=Y[0],C=Y[Y.length-1];if(y.frame>h){const d={frame:h,value:y.value,inTangent:y.inTangent,outTangent:y.outTangent,interpolation:y.interpolation};Y.splice(0,0,d)}if(C.frame<d){const h={frame:d,value:C.value,inTangent:C.inTangent,outTangent:C.outTangent,interpolation:C.interpolation};Y.push(h)}}return this._from=h,this._to=d,this}_processLoop(h,d,T){h.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(d),this._animationLoopFlags[T]||(this._animationLoopFlags[T]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0],d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,T=arguments.length>2?arguments[2]:void 0,Y=arguments.length>3?arguments[3]:void 0,y=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=h,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let C=0;C<this._targetedAnimations.length;C++){const n=this._targetedAnimations[C],X=this._scene.beginDirectAnimation(n.target,[n.animation],void 0!==T?T:this._from,void 0!==Y?Y:this._to,h,d,void 0,void 0,void 0!==y?y:this._isAdditive);X.weight=this._weight,X.playOrder=this._playOrder,X.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(n),this._checkAnimationGroupEnded(X)},this._processLoop(X,n,C),this._animatables.push(X)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=d,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let h=0;h<this._animatables.length;h++){this._animatables[h].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(h){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==h&&(this.loopAnimation=h),this.restart()):(this.stop(),this.start(h,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let h=0;h<this._animatables.length;h++){this._animatables[h].reset()}return this}restart(){if(!this._isStarted)return this;for(let h=0;h<this._animatables.length;h++){this._animatables[h].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const d=this._animatables.slice();for(let Y=0;Y<d.length;Y++)d[Y].stop(void 0,void 0,!0,h);let T=0;for(let Y=0;Y<this._scene._activeAnimatables.length;Y++){const d=this._scene._activeAnimatables[Y];d._runtimeAnimations.length>0?this._scene._activeAnimatables[T++]=d:h&&this._checkAnimationGroupEnded(d,h)}return this._scene._activeAnimatables.length=T,this._isStarted=!1,this}setWeightForAllAnimatables(h){for(let d=0;d<this._animatables.length;d++){this._animatables[d].weight=h}return this}syncAllAnimationsWith(h){for(let d=0;d<this._animatables.length;d++){this._animatables[d].syncWith(h)}return this}goToFrame(h){let d=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let T=0;T<this._animatables.length;T++){this._animatables[T].goToFrame(h,d)}return this}getCurrentFrame(){var h;return(null===(h=this.animatables[0])||void 0===h?void 0:h.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const h=this._scene.animationGroups.indexOf(this);if(h>-1&&this._scene.animationGroups.splice(h,1),this._parentContainer){const h=this._parentContainer.animationGroups.indexOf(this);h>-1&&this._parentContainer.animationGroups.splice(h,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(h){let d=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const T=this._animatables.indexOf(h);T>-1&&this._animatables.splice(T,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,d||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(h,d){let T=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const Y=new L(h||this.name,this._scene,this._weight,this._playOrder);Y._from=this.from,Y._to=this.to,Y._speedRatio=this.speedRatio,Y._loopAnimation=this.loopAnimation,Y._isAdditive=this.isAdditive,Y._enableBlending=this.enableBlending,Y._blendingSpeed=this.blendingSpeed,Y.metadata=this.metadata,Y.mask=this.mask;for(const y of this._targetedAnimations)Y.addTargetedAnimation(T?y.animation.clone():y.animation,d?d(y.target):y.target);return Y}serialize(){const h={};h.name=this.name,h.from=this.from,h.to=this.to,h.speedRatio=this.speedRatio,h.loopAnimation=this.loopAnimation,h.isAdditive=this.isAdditive,h.weight=this.weight,h.playOrder=this.playOrder,h.enableBlending=this.enableBlending,h.blendingSpeed=this.blendingSpeed,h.targetedAnimations=[];for(let d=0;d<this.targetedAnimations.length;d++){const T=this.targetedAnimations[d];h.targetedAnimations[d]=T.serialize()}return n.e&&n.e.HasTags(this)&&(h.tags=n.e.GetTags(this)),this.metadata&&(h.metadata=this.metadata),h}static Parse(h,d){const T=new L(h.name,d,h.weight,h.playOrder);for(let y=0;y<h.targetedAnimations.length;y++){const C=h.targetedAnimations[y],n=Y.c.Parse(C.animation),X=C.targetId;if("influence"===C.animation.property){const h=d.getMorphTargetById(X);h&&T.addTargetedAnimation(n,h)}else{const h=d.getNodeById(X);null!=h&&T.addTargetedAnimation(n,h)}}return n.e&&n.e.AddTagsTo(T,h.tags),null!==h.from&&null!==h.to&&T.normalize(h.from,h.to),void 0!==h.speedRatio&&(T._speedRatio=h.speedRatio),void 0!==h.loopAnimation&&(T._loopAnimation=h.loopAnimation),void 0!==h.isAdditive&&(T._isAdditive=h.isAdditive),void 0!==h.weight&&(T._weight=h.weight),void 0!==h.playOrder&&(T._playOrder=h.playOrder),void 0!==h.enableBlending&&(T._enableBlending=h.enableBlending),void 0!==h.blendingSpeed&&(T._blendingSpeed=h.blendingSpeed),void 0!==h.metadata&&(T.metadata=h.metadata),T}static MakeAnimationAdditive(h,d,T){let y;y="object"===typeof d?d:{referenceFrame:d,range:T,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let C=h;y.cloneOriginalAnimationGroup&&(C=h.clone(y.clonedAnimationGroupName||C.name));const n=C.targetedAnimations;for(let X=0;X<n.length;X++){const h=n[X];h.animation=Y.c.MakeAnimationAdditive(h.animation,y)}if(C.isAdditive=!0,y.clipKeys){let h=Number.MAX_VALUE,d=-Number.MAX_VALUE;const T=C.targetedAnimations;for(let Y=0;Y<T.length;Y++){const y=T[Y].animation.getKeys();h>y[0].frame&&(h=y[0].frame),d<y[y.length-1].frame&&(d=y[y.length-1].frame)}C._from=h,C._to=d}return C}static ClipKeys(h,d,T,Y,y){const C=h.clone(Y||h.name);return L.ClipKeysInPlace(C,d,T,y)}static ClipKeysInPlace(h,d,T,Y){return L.ClipInPlace(h,d,T,Y,!1)}static ClipFrames(h,d,T,Y,y){const C=h.clone(Y||h.name);return L.ClipFramesInPlace(C,d,T,y)}static ClipFramesInPlace(h,d,T,Y){return L.ClipInPlace(h,d,T,Y,!0)}static ClipInPlace(h,d,T,Y){let y=arguments.length>4&&void 0!==arguments[4]&&arguments[4],C=Number.MAX_VALUE,n=-Number.MAX_VALUE;const X=h.targetedAnimations;for(let F=0;F<X.length;F++){const h=X[F],U=Y?h.animation:h.animation.clone();y&&(U.createKeyForFrame(d),U.createKeyForFrame(T));const Z=U.getKeys(),S=[];let r=Number.MAX_VALUE;for(let Y=0;Y<Z.length;Y++){const h=Z[Y];if(!y&&Y>=d&&Y<=T||y&&h.frame>=d&&h.frame<=T){const d={frame:h.frame,value:h.value.clone?h.value.clone():h.value,inTangent:h.inTangent,outTangent:h.outTangent,interpolation:h.interpolation,lockedTangent:h.lockedTangent};r===Number.MAX_VALUE&&(r=d.frame),d.frame-=r,S.push(d)}}0!==S.length?(C>S[0].frame&&(C=S[0].frame),n<S[S.length-1].frame&&(n=S[S.length-1].frame),U.setKeys(S,!0),h.animation=U):(X.splice(F,1),F--)}return h._from=C,h._to=n,h}getClassName(){return"AnimationGroup"}toString(h){let d="Name: "+this.name;return d+=", type: "+this.getClassName(),h&&(d+=", from: "+this._from,d+=", to: "+this._to,d+=", isStarted: "+this._isStarted,d+=", speedRatio: "+this._speedRatio,d+=", targetedAnimations length: "+this._targetedAnimations.length,d+=", animatables length: "+this._animatables),d}}}}]);