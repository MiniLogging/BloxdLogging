"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[78],{14108:(n,k,T)=>{T.r(k),T.d(k,{FlowGraphForLoopBlock:()=>E});var c=T(12875),K=T(12831),Q=T(675),G=T(12861),w=T(12829);class E extends c.c{constructor(n){super(n),this.startIndex=this.registerDataInput("startIndex",K.e,0),this.endIndex=this.registerDataInput("endIndex",K.e),this.step=this.registerDataInput("step",K.w,1),this.index=this.registerDataOutput("index",K.j,new w.d((0,G.r)((null===n||void 0===n?void 0:n.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(n){var k;const T=(0,G.r)(this.startIndex.getValue(n)),c=this.step.getValue(n);let K=(0,G.r)(this.endIndex.getValue(n));for(let Q=T;Q<K&&(this.index.setValue(new w.d(Q),n),this.executionFlow._activateSignal(n),K=(0,G.r)(this.endIndex.getValue(n)),!(Q>E.MaxLoopIterations*c));Q+=c);null!==(k=this.config)&&void 0!==k&&k.incrementIndexWhenLoopDone&&this.index.setValue(new w.d((0,G.r)(this.index.getValue(n))+c),n),this.completed._activateSignal(n)}getClassName(){return"FlowGraphForLoopBlock"}}E.MaxLoopIterations=1e3,(0,Q.f)("FlowGraphForLoopBlock",E)}}]);