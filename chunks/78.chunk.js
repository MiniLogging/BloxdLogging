"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[78],{14304:(h,V,i)=>{i.r(V),i.d(V,{AnimationGroup:()=>f,TargetedAnimation:()=>c});var S=i(11665),l=i(10960),Y=i(10988),g=i(11186),q=i(12722),B=i(11138);class J{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(h,V,i,l){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=V,this._target=h,this._scene=i,this._host=l,this._activeTargets=[],V._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===S.d.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=B.Matrix.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const h={frame:0,value:this._minValue};this._keys.splice(0,0,h)}if(this._target instanceof Array){let h=0;for(const V of this._target)this._preparePath(V,h),this._getOriginalValues(h),h++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const Y=V.getEvents();if(Y&&Y.length>0)for(const S of Y)this._events.push(S._clone());this._enableBlending=h&&h.animationPropertiesOverride?h.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(h){let V=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const i=this._animation.targetPropertyPath;if(i.length>1){let S=h;for(let h=0;h<i.length-1;h++){const V=i[h];if(S=S[V],void 0===S)throw new Error(`Invalid property (${V}) in property path (${i.join(".")})`)}this._targetPath=i[i.length-1],this._activeTargets[V]=S}else this._targetPath=i[0],this._activeTargets[V]=h;if(void 0===this._activeTargets[V][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${i.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let h=0;for(const V of this._target)void 0!==this._originalValue[h]&&this._setValue(V,this._activeTargets[h],this._originalValue[h],-1,h),h++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let h=0;h<this._events.length;h++)this._events[h].isDone=!1}isStopped(){return this._stopped}dispose(){const h=this._animation.runtimeAnimations.indexOf(this);h>-1&&this._animation.runtimeAnimations.splice(h,1)}setValue(h,V){if(this._targetIsArray)for(let i=0;i<this._target.length;i++){const S=this._target[i];this._setValue(S,this._activeTargets[i],h,V,i)}else this._setValue(this._target,this._directTarget,h,V,0)}_getOriginalValues(){let h,V=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const i=this._activeTargets[V];h=i.getLocalMatrix&&"_matrix"===this._targetPath?i.getLocalMatrix():i[this._targetPath],h&&h.clone?this._originalValue[V]=h.clone():this._originalValue[V]=h}_registerTargetForLateAnimationBinding(h,V){const i=h.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(i),i._lateAnimationHolders||(i._lateAnimationHolders={}),i._lateAnimationHolders[h.targetPath]||(i._lateAnimationHolders[h.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:V}),h.isAdditive?(i._lateAnimationHolders[h.targetPath].additiveAnimations.push(h),i._lateAnimationHolders[h.targetPath].totalAdditiveWeight+=h.weight):(i._lateAnimationHolders[h.targetPath].animations.push(h),i._lateAnimationHolders[h.targetPath].totalWeight+=h.weight)}_setValue(h,V,i,l,Y){if(this._currentActiveTarget=V,this._weight=l,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const h=V[this._targetPath];h.clone?this._originalBlendValue=h.clone():this._originalBlendValue=h}this._originalBlendValue.m?S.d.AllowMatrixDecomposeForInterpolation?this._currentValue?B.Matrix.DecomposeLerpToRef(this._originalBlendValue,i,this._blendingFactor,this._currentValue):this._currentValue=B.Matrix.DecomposeLerp(this._originalBlendValue,i,this._blendingFactor):this._currentValue?B.Matrix.LerpToRef(this._originalBlendValue,i,this._blendingFactor,this._currentValue):this._currentValue=B.Matrix.Lerp(this._originalBlendValue,i,this._blendingFactor):this._currentValue=S.d._UniversalLerp(this._originalBlendValue,i,this._blendingFactor);const l=h&&h.animationPropertiesOverride?h.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=l}else this._currentValue?this._currentValue.l?this._currentValue.l(i):this._currentValue=i:null!==i&&void 0!==i&&i.clone?this._currentValue=i.clone():this._currentValue=i;-1!==l?this._registerTargetForLateAnimationBinding(this,this._originalValue[Y]):this._animationState.loopMode===S.d.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[Y],V[this._targetPath]):V[this._targetPath]=this._originalValue[Y]+this._currentValue:V[this._targetPath]=this._currentValue,h.LJ&&h.LJ(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(h){let V=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const i=this._animation.getKeys();h<i[0].frame?h=i[0].frame:h>i[i.length-1].frame&&(h=i[i.length-1].frame);const S=this._events;if(S.length)for(let Y=0;Y<S.length;Y++)S[Y].onlyOnce||(S[Y].isDone=S[Y].frame<h);this._currentFrame=h;const l=this._animation._interpolate(h,this._animationState);this.setValue(l,V)}_prepareForSpeedRatioChange(h){const V=this._previousElapsedTime*(this._animation.framePerSecond*h)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-V}animate(h,V,i,l,Y){let g=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const q=this._animation,B=q.targetPropertyPath;if(!B||B.length<1)return this._stopped=!0,!1;let J,I=!0;const v=this._events;let s=0;if(this._coreRuntimeAnimation)s=i-V,J=this._coreRuntimeAnimation.currentFrame,this._currentFrame=J,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let g;(V<this._minFrame||V>this._maxFrame)&&(V=this._minFrame),(i<this._minFrame||i>this._maxFrame)&&(i=this._maxFrame),s=i-V;let B=h*(q.framePerSecond*Y)/1e3+this._absoluteFrameOffset,t=0,T=!1;const e=l&&this._animationState.loopMode===S.d.ANIMATIONLOOPMODE_YOYO;if(e){const h=(B-V)/s,i=Math.sin(h*Math.PI);B=Math.abs(i)*s+V;const S=i>=0?1:-1;this._yoyoDirection!==S&&(T=!0),this._yoyoDirection=S}if(this._previousElapsedTime=h,this._previousAbsoluteFrame=B,!l&&i>=V&&(B>=s&&Y>0||B<=0&&Y<0))I=!1,t=q._getKeyValue(this._maxValue);else if(!l&&V>=i&&(B<=s&&Y<0||B>=0&&Y>0))I=!1,t=q._getKeyValue(this._minValue);else if(this._animationState.loopMode!==S.d.ANIMATIONLOOPMODE_CYCLE){const h=i.toString()+V.toString();if(!this._offsetsCache[h]){this._animationState.repeatCount=0,this._animationState.loopMode=S.d.ANIMATIONLOOPMODE_CYCLE;const l=q._interpolate(V,this._animationState),Y=q._interpolate(i,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),q.dataType){case S.d.ANIMATIONTYPE_FLOAT:this._offsetsCache[h]=Y-l;break;case S.d.ANIMATIONTYPE_QUATERNION:case S.d.ANIMATIONTYPE_VECTOR3:case S.d.ANIMATIONTYPE_VECTOR2:case S.d.ANIMATIONTYPE_SIZE:case S.d.ANIMATIONTYPE_COLOR3:this._offsetsCache[h]=Y.cV(l)}this._highLimitsCache[h]=Y}t=this._highLimitsCache[h],g=this._offsetsCache[h]}if(void 0===g)switch(q.dataType){case S.d.ANIMATIONTYPE_FLOAT:g=0;break;case S.d.ANIMATIONTYPE_QUATERNION:g=S.j;break;case S.d.ANIMATIONTYPE_VECTOR3:g=S.q;break;case S.d.ANIMATIONTYPE_VECTOR2:g=S.n;break;case S.d.ANIMATIONTYPE_SIZE:g=S.l;break;case S.d.ANIMATIONTYPE_COLOR3:g=S.e;break;case S.d.ANIMATIONTYPE_COLOR4:g=S.f}if(this._host&&this._host.syncRoot){const h=this._host.syncRoot;J=V+s*((h.masterFrame-h.fromFrame)/(h.toFrame-h.fromFrame))}else J=B>0&&V>i||B<0&&V<i?I&&0!==s?i+B%s:V:I&&0!==s?V+B%s:i;if(!e&&(Y>0&&this.currentFrame>J||Y<0&&this.currentFrame<J)||e&&T){this._onLoop();for(let h=0;h<v.length;h++)v[h].onlyOnce||(v[h].isDone=!1);this._animationState.key=Y>0?0:q.getKeys().length-1}this._currentFrame=J,this._animationState.repeatCount=0===s?0:B/s|0,this._animationState.highLimitValue=t,this._animationState.offsetValue=g}const t=q._interpolate(J,this._animationState);if(this.setValue(t,g),v.length)for(let S=0;S<v.length;S++)if(s>=0&&J>=v[S].frame&&v[S].frame>=V||s<0&&J<=v[S].frame&&v[S].frame<=V){const h=v[S];h.isDone||(h.onlyOnce&&(v.splice(S,1),S--),h.isDone=!0,h.action(J))}return I||(this._stopped=!0),I}}var I=i(10975);class v{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(h){this._weight=-1!==h?Math.min(Math.max(h,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(h){for(let V=0;V<this._runtimeAnimations.length;V++){this._runtimeAnimations[V]._prepareForSpeedRatioChange(h)}this._speedRatio=h,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(h,V){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,Y=arguments.length>4&&void 0!==arguments[4]&&arguments[4],g=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,q=arguments.length>6?arguments[6]:void 0,B=arguments.length>7?arguments[7]:void 0,J=arguments.length>8?arguments[8]:void 0,I=arguments.length>9&&void 0!==arguments[9]&&arguments[9],v=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=V,this.fromFrame=i,this.toFrame=S,this.loopAnimation=Y,this.onAnimationEnd=q,this.onAnimationLoop=J,this.isAdditive=I,this.playOrder=v,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.Yq=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new l.d,this.onAnimationLoopObservable=new l.d,this._scene=h,B&&this.appendAnimations(V,B),this._speedRatio=g,h._activeAnimatables.push(this)}syncWith(h){if(this._syncRoot=h,h){const h=this._scene._activeAnimatables.indexOf(this);h>-1&&(this._scene._activeAnimatables.splice(h,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(h,V){for(let i=0;i<V.length;i++){const S=V[i],l=new J(h,S,this._scene,this);l._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(l)}}getAnimationByTargetProperty(h){const V=this._runtimeAnimations;for(let i=0;i<V.length;i++)if(V[i].animation.targetProperty===h)return V[i].animation;return null}getRuntimeAnimationByTargetProperty(h){const V=this._runtimeAnimations;for(let i=0;i<V.length;i++)if(V[i].animation.targetProperty===h)return V[i];return null}reset(){const h=this._runtimeAnimations;for(let V=0;V<h.length;V++)h[V].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(h){const V=this._runtimeAnimations;for(let i=0;i<V.length;i++)V[i].animation.enableBlending=!0,V[i].animation.blendingSpeed=h}disableBlending(){const h=this._runtimeAnimations;for(let V=0;V<h.length;V++)h[V].animation.enableBlending=!1}goToFrame(h){let V=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const i=this._runtimeAnimations;if(i[0]){const V=i[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??i[0].currentFrame;const S=0===this.speedRatio?0:(h-this._frameToSyncFromJump)/V*1e3/this.speedRatio;this._manualJumpDelay=-S}for(let S=0;S<i.length;S++)i[S].goToFrame(h,V?this._weight:-1);this._goToFrame=h}get paused(){return this.Yq}pause(){this.Yq||(this.Yq=!0)}restart(){this.Yq=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(h,V){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],S=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(h||V){const l=this._scene._activeAnimatables.indexOf(this);if(l>-1){const Y=this._runtimeAnimations;for(let i=Y.length-1;i>=0;i--){const S=Y[i];h&&S.animation.name!=h||(V&&!V(S.target)||(S.dispose(),Y.splice(i,1)))}0==Y.length&&(i||this._scene._activeAnimatables.splice(l,1),S||this._raiseOnAnimationEnd())}}else{const h=this._scene._activeAnimatables.indexOf(this);if(h>-1){i||this._scene._activeAnimatables.splice(h,1);const V=this._runtimeAnimations;for(let h=0;h<V.length;h++)V[h].dispose();this._runtimeAnimations.length=0,S||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((h=>{this.onAnimationEndObservable.add((()=>{h(this)}),void 0,void 0,this,!0)}))}_animate(h){if(this.Yq)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=h),!0;if(null===this._localDelayOffset?(this._localDelayOffset=h,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=h-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let V=!1;const i=this._runtimeAnimations;let S;for(S=0;S<i.length;S++){const l=i[S].animate(h-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);V=V||l}if(this.animationStarted=V,!V){if(this.disposeOnEnd)for(S=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(S,1),S=0;S<i.length;S++)i[S].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return V}}function s(h){if(0===h.totalWeight&&0===h.totalAdditiveWeight)return h.originalValue;let V=1;const i=B.TmpVectors.nV[0],S=B.TmpVectors.nV[1],l=B.TmpVectors.Quaternion[0];let Y=0;const g=h.animations[0],q=h.originalValue;let J=1,I=!1;if(h.totalWeight<1)J=1-h.totalWeight,q.decompose(S,l,i);else{if(Y=1,V=h.totalWeight,J=g.weight/V,1==J){if(!h.totalAdditiveWeight)return g.currentValue;I=!0}g.currentValue.decompose(S,l,i)}if(!I){S.scaleInPlace(J),i.scaleInPlace(J),l.scaleInPlace(J);for(let g=Y;g<h.animations.length;g++){const Y=h.animations[g];if(0===Y.weight)continue;J=Y.weight/V;const q=B.TmpVectors.nV[2],I=B.TmpVectors.nV[3],v=B.TmpVectors.Quaternion[1];Y.currentValue.decompose(I,v,q),I.scaleAndAddToRef(J,S),v.scaleAndAddToRef(B.Quaternion.Dot(l,v)>0?J:-J,l),q.scaleAndAddToRef(J,i)}l.normalize()}for(let s=0;s<h.additiveAnimations.length;s++){const V=h.additiveAnimations[s];if(0===V.weight)continue;const Y=B.TmpVectors.nV[2],g=B.TmpVectors.nV[3],q=B.TmpVectors.Quaternion[1];V.currentValue.decompose(g,q,Y),g.multiplyToRef(S,g),B.nV.LerpToRef(S,g,V.weight,S),l.multiplyToRef(q,q),B.Quaternion.SlerpToRef(l,q,V.weight,l),Y.scaleAndAddToRef(V.weight,i)}const v=g?g._animationState.workValue:B.TmpVectors.Matrix[0].clone();return B.Matrix.ComposeToRef(S,l,i,v),v}function t(h,V){if(0===h.totalWeight&&0===h.totalAdditiveWeight)return V;const i=h.animations[0],S=h.originalValue;let l=V;if(0===h.totalWeight&&h.totalAdditiveWeight>0)l.l(S);else if(1===h.animations.length){if(B.Quaternion.SlerpToRef(S,i.currentValue,Math.min(1,h.totalWeight),l),0===h.totalAdditiveWeight)return l}else if(h.animations.length>1){let i,Y,g=1;if(h.totalWeight<1){const V=1-h.totalWeight;i=[],Y=[],i.push(S),Y.push(V)}else{if(2===h.animations.length&&(B.Quaternion.SlerpToRef(h.animations[0].currentValue,h.animations[1].currentValue,h.animations[1].weight/h.totalWeight,V),0===h.totalAdditiveWeight))return V;i=[],Y=[],g=h.totalWeight}for(let V=0;V<h.animations.length;V++){const S=h.animations[V];i.push(S.currentValue),Y.push(S.weight/g)}let q=0;for(let h=0;h<i.length;)h?(q+=Y[h],B.Quaternion.SlerpToRef(l,i[h],Y[h]/q,l),h++):(B.Quaternion.SlerpToRef(i[h],i[h+1],Y[h+1]/(Y[h]+Y[h+1]),V),l=V,q=Y[h]+Y[h+1],h+=2)}for(let Y=0;Y<h.additiveAnimations.length;Y++){const V=h.additiveAnimations[Y];0!==V.weight&&(l.multiplyToRef(V.currentValue,B.TmpVectors.Quaternion[0]),B.Quaternion.SlerpToRef(l,B.TmpVectors.Quaternion[0],V.weight,l))}return l}var T,e,n=i(11382);T=n.d,(e=q.e)&&(e.prototype.copyAnimationRange=function(h,V,i){let l=arguments.length>3&&void 0!==arguments[3]&&arguments[3],Y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new S.d(this.name,"_matrix",h.animations[0].framePerSecond,S.d.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const g=h.animations[0].getRange(V);if(!g)return!1;const q=g.from,B=g.to,J=h.animations[0].getKeys(),I=h.length,v=h.getParent(),s=this.getParent(),t=l&&v&&I&&this.length&&I!==this.length,T=t&&s&&v?s.length/v.length:1,e=l&&!s&&Y&&(1!==Y.x||1!==Y.y||1!==Y.z),n=this.animations[0].getKeys();let c,f,P;for(let S=0,L=J.length;S<L;S++)c=J[S],c.frame>=q&&c.frame<=B&&(l?(P=c.value.clone(),t?(f=P.getTranslation(),P.setTranslation(f.scaleInPlace(T))):e&&Y?(f=P.getTranslation(),P.setTranslation(f.multiplyInPlace(Y))):P=c.value):P=c.value,n.push({frame:c.frame+i,value:P}));return this.animations[0].createRange(V,q+i,B+i),!0}),T&&(T.prototype._animate=function(h){if(!this.animationsEnabled)return;const V=I.e.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=V}this.deltaTime=void 0!==h?h:this.useConstantAnimationDeltaTime?16:(V-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=V;const i=this._activeAnimatables;if(0===i.length)return;this._animationTime+=this.deltaTime;const l=this._animationTime;for(let S=0;S<i.length;S++){const h=i[S];!h._animate(l)&&h.disposeOnEnd&&S--}!function(h){if(h._registeredForLateAnimationBindings.length){for(let V=0;V<h._registeredForLateAnimationBindings.length;V++){const i=h._registeredForLateAnimationBindings.data[V];for(const h in i._lateAnimationHolders){const V=i._lateAnimationHolders[h],l=V.animations[0],Y=V.originalValue;if(void 0===Y||null===Y)continue;const g=S.d.AllowMatrixDecomposeForInterpolation&&Y.m;let q=i[h];if(g)q=s(V);else if(void 0!==Y.w)q=t(V,q||B.Quaternion.Identity());else{let h=0,i=1;const g=l&&l._animationState.loopMode===S.d.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(V.totalWeight<1)q=g?Y.clone?Y.clone():Y:l&&Y.scale?Y.scale(1-V.totalWeight):l?Y*(1-V.totalWeight):Y.clone?Y.clone():Y;else if(l){i=V.totalWeight;const S=l.weight/i;q=1!==S?l.currentValue.scale?l.currentValue.scale(S):l.currentValue*S:l.currentValue,g&&(q.addToRef?q.addToRef(Y,q):q+=Y),h=1}for(let S=h;S<V.animations.length;S++){const h=V.animations[S],l=h.weight/i;l&&(h.currentValue.scaleAndAddToRef?h.currentValue.scaleAndAddToRef(l,q):q+=h.currentValue*l)}for(let S=0;S<V.additiveAnimations.length;S++){const h=V.additiveAnimations[S],i=h.weight;i&&(h.currentValue.scaleAndAddToRef?h.currentValue.scaleAndAddToRef(i,q):q+=h.currentValue*i)}}i[h]=q}i._lateAnimationHolders={}}h._registeredForLateAnimationBindings.reset()}}(this)},T.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((h,V)=>h.playOrder-V.playOrder))},T.prototype.beginWeightedAnimation=function(h,V,i){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,l=arguments.length>4?arguments[4]:void 0,Y=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,g=arguments.length>6?arguments[6]:void 0,q=arguments.length>7?arguments[7]:void 0,B=arguments.length>8?arguments[8]:void 0,J=arguments.length>9?arguments[9]:void 0,I=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const v=this.beginAnimation(h,V,i,l,Y,g,q,!1,B,J,I);return v.weight=S,v},T.prototype.beginAnimation=function(h,V,i,S){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,Y=arguments.length>5?arguments[5]:void 0,g=arguments.length>6?arguments[6]:void 0,q=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],B=arguments.length>8?arguments[8]:void 0,J=arguments.length>9?arguments[9]:void 0,I=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(l<0){const h=V;V=i,i=h,l=-l}V>i&&(l=-l),q&&this.stopAnimation(h,void 0,B),g||(g=new v(this,h,V,i,S,l,Y,void 0,J,I));const s=!B||B(h);if(h.animations&&s&&g.appendAnimations(h,h.animations),h.getAnimatables){const I=h.getAnimatables();for(let h=0;h<I.length;h++)this.beginAnimation(I[h],V,i,S,l,Y,g,q,B,J)}return g.reset(),g},T.prototype.beginHierarchyAnimation=function(h,V,i,S,l){let Y=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,g=arguments.length>6?arguments[6]:void 0,q=arguments.length>7?arguments[7]:void 0,B=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],J=arguments.length>9?arguments[9]:void 0,I=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const v=h.getDescendants(V),s=[];s.push(this.beginAnimation(h,i,S,l,Y,g,q,B,J,void 0,I));for(const t of v)s.push(this.beginAnimation(t,i,S,l,Y,g,q,B,J,void 0,I));return s},T.prototype.beginDirectAnimation=function(h,V,i,S,l){let Y=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(Y<0){const h=i;i=S,S=h,Y=-Y}return i>S&&(Y=-Y),new v(this,h,i,S,l,Y,arguments.length>6?arguments[6]:void 0,V,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},T.prototype.beginDirectHierarchyAnimation=function(h,V,i,S,l,Y,g,q,B){let J=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const I=h.getDescendants(V),v=[];v.push(this.beginDirectAnimation(h,i,S,l,Y,g,q,B,J));for(const s of I)v.push(this.beginDirectAnimation(s,i,S,l,Y,g,q,B,J));return v},T.prototype.getAnimatableByTarget=function(h){for(let V=0;V<this._activeAnimatables.length;V++)if(this._activeAnimatables[V].target===h)return this._activeAnimatables[V];return null},T.prototype.getAllAnimatablesByTarget=function(h){const V=[];for(let i=0;i<this._activeAnimatables.length;i++)this._activeAnimatables[i].target===h&&V.push(this._activeAnimatables[i]);return V},T.prototype.stopAnimation=function(h,V,i){const S=this.getAllAnimatablesByTarget(h);for(const l of S)l.stop(V,i)},T.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let h=0;h<this._activeAnimatables.length;h++)this._activeAnimatables[h].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const h of this.animationGroups)h.stop()});class c{getClassName(){return"TargetedAnimation"}serialize(){const h={};return h.animation=this.animation.serialize(),h.targetId=this.target.id,h}}class f{get mask(){return this._mask}set mask(h){this._mask!==h&&(this._mask=h,this.syncWithMask(!0))}syncWithMask(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||h){this._numActiveAnimatables=0;for(let h=0;h<this._animatables.length;++h){const V=this._animatables[h];!this.mask||this.mask.disabled||this.mask.retainsTarget(V.target.name)?(this._numActiveAnimatables++,V.paused&&V.restart()):V.paused||V.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let h=0;h<this._animatables.length;++h){const V=this._animatables[h];this.mask.retainsTarget(V.target.name)||(V.stop(),this._animatables.splice(h,1),--h)}for(let h=0;h<this._targetedAnimations.length;h++){const V=this._targetedAnimations[h];this.mask.retainsTarget(V.target.name)||(this._targetedAnimations.splice(h,1),--h)}}}get from(){return this._from}set from(h){if(this._from!==h){this._from=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].fromFrame=this._from}}}get to(){return this._to}set to(h){if(this._to!==h){this._to=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(h){if(this._speedRatio!==h){this._speedRatio=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(h){if(this._loopAnimation!==h){this._loopAnimation=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(h){if(this._isAdditive!==h){this._isAdditive=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(h){this._weight!==h&&(this._weight=h,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(h){if(this._playOrder!==h&&(this._playOrder=h,this._animatables.length>0)){for(let h=0;h<this._animatables.length;h++)this._animatables[h].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(h){if(this._enableBlending!==h&&(this._enableBlending=h,null!==h))for(let V=0;V<this._targetedAnimations.length;++V)this._targetedAnimations[V].animation.enableBlending=h}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(h){if(this._blendingSpeed!==h&&(this._blendingSpeed=h,null!==h))for(let V=0;V<this._targetedAnimations.length;++V)this._targetedAnimations[V].animation.blendingSpeed=h}getLength(h,V){h=h??this._from;return((V=V??this._to)-h)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(h){let V=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],S=arguments.length>3?arguments[3]:void 0;if(0===h.length)return null;S=S??h[0].weight;let l=Number.MAX_VALUE,Y=-Number.MAX_VALUE;if(i)for(const q of h)q.from<l&&(l=q.from),q.to>Y&&(Y=q.to);const g=new f(h[0].name+"_merged",h[0]._scene,S);for(const q of h){i&&q.normalize(l,Y);for(const h of q.targetedAnimations)g.addTargetedAnimation(h.animation,h.target);V&&q.dispose()}return g}constructor(h){let V=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=h,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new l.d,this.onAnimationLoopObservable=new l.d,this.onAnimationGroupLoopObservable=new l.d,this.onAnimationGroupEndObservable=new l.d,this.onAnimationGroupPauseObservable=new l.d,this.onAnimationGroupPlayObservable=new l.d,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=V||Y.d.LastCreatedScene,this._weight=i,this._playOrder=S,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(h,V){const i=new c;i.animation=h,i.target=V;const S=h.getKeys();return this._from>S[0].frame&&(this._from=S[0].frame),this._to<S[S.length-1].frame&&(this._to=S[S.length-1].frame),null!==this._enableBlending&&(h.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(h.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(i),this._shouldStart=!0,i}removeTargetedAnimation(h){for(let V=this._targetedAnimations.length-1;V>-1;V--){this._targetedAnimations[V].animation===h&&this._targetedAnimations.splice(V,1)}}normalize(){let h=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,V=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==h&&(h=this._from),null==V&&(V=this._to);for(let i=0;i<this._targetedAnimations.length;i++){const S=this._targetedAnimations[i].animation.getKeys(),l=S[0],Y=S[S.length-1];if(l.frame>h){const V={frame:h,value:l.value,inTangent:l.inTangent,outTangent:l.outTangent,interpolation:l.interpolation};S.splice(0,0,V)}if(Y.frame<V){const h={frame:V,value:Y.value,inTangent:Y.inTangent,outTangent:Y.outTangent,interpolation:Y.interpolation};S.push(h)}}return this._from=h,this._to=V,this}_processLoop(h,V,i){h.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(V),this._animationLoopFlags[i]||(this._animationLoopFlags[i]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0],V=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2?arguments[2]:void 0,S=arguments.length>3?arguments[3]:void 0,l=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=h,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let Y=0;Y<this._targetedAnimations.length;Y++){const g=this._targetedAnimations[Y],q=this._scene.beginDirectAnimation(g.target,[g.animation],void 0!==i?i:this._from,void 0!==S?S:this._to,h,V,void 0,void 0,void 0!==l?l:this._isAdditive);q.weight=this._weight,q.playOrder=this._playOrder,q.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(g),this._checkAnimationGroupEnded(q)},this._processLoop(q,g,Y),this._animatables.push(q)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=V,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let h=0;h<this._animatables.length;h++){this._animatables[h].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(h){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==h&&(this.loopAnimation=h),this.restart()):(this.stop(),this.start(h,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let h=0;h<this._animatables.length;h++){this._animatables[h].reset()}return this}restart(){if(!this._isStarted)return this;for(let h=0;h<this._animatables.length;h++){this._animatables[h].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const V=this._animatables.slice();for(let S=0;S<V.length;S++)V[S].stop(void 0,void 0,!0,h);let i=0;for(let S=0;S<this._scene._activeAnimatables.length;S++){const V=this._scene._activeAnimatables[S];V._runtimeAnimations.length>0?this._scene._activeAnimatables[i++]=V:h&&this._checkAnimationGroupEnded(V,h)}return this._scene._activeAnimatables.length=i,this._isStarted=!1,this}setWeightForAllAnimatables(h){for(let V=0;V<this._animatables.length;V++){this._animatables[V].weight=h}return this}syncAllAnimationsWith(h){for(let V=0;V<this._animatables.length;V++){this._animatables[V].syncWith(h)}return this}goToFrame(h){let V=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let i=0;i<this._animatables.length;i++){this._animatables[i].goToFrame(h,V)}return this}getCurrentFrame(){var h;return(null===(h=this.animatables[0])||void 0===h?void 0:h.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const h=this._scene.animationGroups.indexOf(this);if(h>-1&&this._scene.animationGroups.splice(h,1),this._parentContainer){const h=this._parentContainer.animationGroups.indexOf(this);h>-1&&this._parentContainer.animationGroups.splice(h,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(h){let V=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const i=this._animatables.indexOf(h);i>-1&&this._animatables.splice(i,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,V||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(h,V){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const S=new f(h||this.name,this._scene,this._weight,this._playOrder);S._from=this.from,S._to=this.to,S._speedRatio=this.speedRatio,S._loopAnimation=this.loopAnimation,S._isAdditive=this.isAdditive,S._enableBlending=this.enableBlending,S._blendingSpeed=this.blendingSpeed,S.metadata=this.metadata,S.mask=this.mask;for(const l of this._targetedAnimations)S.addTargetedAnimation(i?l.animation.clone():l.animation,V?V(l.target):l.target);return S}serialize(){const h={};h.name=this.name,h.from=this.from,h.to=this.to,h.speedRatio=this.speedRatio,h.loopAnimation=this.loopAnimation,h.isAdditive=this.isAdditive,h.weight=this.weight,h.playOrder=this.playOrder,h.enableBlending=this.enableBlending,h.blendingSpeed=this.blendingSpeed,h.targetedAnimations=[];for(let V=0;V<this.targetedAnimations.length;V++){const i=this.targetedAnimations[V];h.targetedAnimations[V]=i.serialize()}return g.b&&g.b.HasTags(this)&&(h.tags=g.b.GetTags(this)),this.metadata&&(h.metadata=this.metadata),h}static Parse(h,V){const i=new f(h.name,V,h.weight,h.playOrder);for(let l=0;l<h.targetedAnimations.length;l++){const Y=h.targetedAnimations[l],g=S.d.Parse(Y.animation),q=Y.targetId;if("influence"===Y.animation.property){const h=V.getMorphTargetById(q);h&&i.addTargetedAnimation(g,h)}else{const h=V.getNodeById(q);null!=h&&i.addTargetedAnimation(g,h)}}return g.b&&g.b.AddTagsTo(i,h.tags),null!==h.from&&null!==h.to&&i.normalize(h.from,h.to),void 0!==h.speedRatio&&(i._speedRatio=h.speedRatio),void 0!==h.loopAnimation&&(i._loopAnimation=h.loopAnimation),void 0!==h.isAdditive&&(i._isAdditive=h.isAdditive),void 0!==h.weight&&(i._weight=h.weight),void 0!==h.playOrder&&(i._playOrder=h.playOrder),void 0!==h.enableBlending&&(i._enableBlending=h.enableBlending),void 0!==h.blendingSpeed&&(i._blendingSpeed=h.blendingSpeed),void 0!==h.metadata&&(i.metadata=h.metadata),i}static MakeAnimationAdditive(h,V,i){let l;l="object"===typeof V?V:{referenceFrame:V,range:i,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let Y=h;l.cloneOriginalAnimationGroup&&(Y=h.clone(l.clonedAnimationGroupName||Y.name));const g=Y.targetedAnimations;for(let q=0;q<g.length;q++){const h=g[q];h.animation=S.d.MakeAnimationAdditive(h.animation,l)}if(Y.isAdditive=!0,l.clipKeys){let h=Number.MAX_VALUE,V=-Number.MAX_VALUE;const i=Y.targetedAnimations;for(let S=0;S<i.length;S++){const l=i[S].animation.getKeys();h>l[0].frame&&(h=l[0].frame),V<l[l.length-1].frame&&(V=l[l.length-1].frame)}Y._from=h,Y._to=V}return Y}static ClipKeys(h,V,i,S,l){const Y=h.clone(S||h.name);return f.ClipKeysInPlace(Y,V,i,l)}static ClipKeysInPlace(h,V,i,S){return f.ClipInPlace(h,V,i,S,!1)}static ClipFrames(h,V,i,S,l){const Y=h.clone(S||h.name);return f.ClipFramesInPlace(Y,V,i,l)}static ClipFramesInPlace(h,V,i,S){return f.ClipInPlace(h,V,i,S,!0)}static ClipInPlace(h,V,i,S){let l=arguments.length>4&&void 0!==arguments[4]&&arguments[4],Y=Number.MAX_VALUE,g=-Number.MAX_VALUE;const q=h.targetedAnimations;for(let B=0;B<q.length;B++){const h=q[B],J=S?h.animation:h.animation.clone();l&&(J.createKeyForFrame(V),J.createKeyForFrame(i));const I=J.getKeys(),v=[];let s=Number.MAX_VALUE;for(let S=0;S<I.length;S++){const h=I[S];if(!l&&S>=V&&S<=i||l&&h.frame>=V&&h.frame<=i){const V={frame:h.frame,value:h.value.clone?h.value.clone():h.value,inTangent:h.inTangent,outTangent:h.outTangent,interpolation:h.interpolation,lockedTangent:h.lockedTangent};s===Number.MAX_VALUE&&(s=V.frame),V.frame-=s,v.push(V)}}0!==v.length?(Y>v[0].frame&&(Y=v[0].frame),g<v[v.length-1].frame&&(g=v[v.length-1].frame),J.setKeys(v,!0),h.animation=J):(q.splice(B,1),B--)}return h._from=Y,h._to=g,h}getClassName(){return"AnimationGroup"}toString(h){let V="Name: "+this.name;return V+=", type: "+this.getClassName(),h&&(V+=", from: "+this._from,V+=", to: "+this._to,V+=", isStarted: "+this._isStarted,V+=", speedRatio: "+this._speedRatio,V+=", targetedAnimations length: "+this._targetedAnimations.length,V+=", animatables length: "+this._animatables),V}}}}]);