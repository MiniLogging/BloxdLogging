"use strict";(self.yg1iw12lizp=self.yg1iw12lizp||[]).push([[78],{15804:(L,U,x)=>{x.r(U),x.d(U,{AnimationGroup:()=>Q,TargetedAnimation:()=>H});var mL=x(13133),p=x(12391),G=x(12440),F=x(12632),a=x(14271),o=x(12589);class A{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(L,U,x,p){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=U,this._target=L,this._scene=x,this._host=p,this._activeTargets=[],U._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===mL.c.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=o.Matrix.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const L={frame:0,value:this._minValue};this._keys.splice(0,0,L)}if(this._target instanceof Array){let L=0;for(const U of this._target)this._preparePath(U,L),this._getOriginalValues(L),L++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const G=U.getEvents();if(G&&G.length>0)for(const mL of G)this._events.push(mL._clone());this._enableBlending=L&&L.animationPropertiesOverride?L.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(L){let U=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const x=this._animation.targetPropertyPath;if(x.length>1){let mL=L;for(let L=0;L<x.length-1;L++){const U=x[L];if(mL=mL[U],void 0===mL)throw new Error(`Invalid property (${U}) in property path (${x.join(".")})`)}this._targetPath=x[x.length-1],this._activeTargets[U]=mL}else this._targetPath=x[0],this._activeTargets[U]=L;if(void 0===this._activeTargets[U][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${x.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let L=0;for(const U of this._target)void 0!==this._originalValue[L]&&this._setValue(U,this._activeTargets[L],this._originalValue[L],-1,L),L++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let L=0;L<this._events.length;L++)this._events[L].isDone=!1}isStopped(){return this._stopped}dispose(){const L=this._animation.runtimeAnimations.indexOf(this);L>-1&&this._animation.runtimeAnimations.splice(L,1)}setValue(L,U){if(this._targetIsArray)for(let x=0;x<this._target.length;x++){const mL=this._target[x];this._setValue(mL,this._activeTargets[x],L,U,x)}else this._setValue(this._target,this._directTarget,L,U,0)}_getOriginalValues(){let L,U=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const x=this._activeTargets[U];L=x.getLocalMatrix&&"_matrix"===this._targetPath?x.getLocalMatrix():x[this._targetPath],L&&L.clone?this._originalValue[U]=L.clone():this._originalValue[U]=L}_registerTargetForLateAnimationBinding(L,U){const x=L.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(x),x._lateAnimationHolders||(x._lateAnimationHolders={}),x._lateAnimationHolders[L.targetPath]||(x._lateAnimationHolders[L.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:U}),L.isAdditive?(x._lateAnimationHolders[L.targetPath].additiveAnimations.push(L),x._lateAnimationHolders[L.targetPath].totalAdditiveWeight+=L.weight):(x._lateAnimationHolders[L.targetPath].animations.push(L),x._lateAnimationHolders[L.targetPath].totalWeight+=L.weight)}_setValue(L,U,x,p,G){if(this._currentActiveTarget=U,this._weight=p,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const L=U[this._targetPath];L.clone?this._originalBlendValue=L.clone():this._originalBlendValue=L}this._originalBlendValue.m?mL.c.AllowMatrixDecomposeForInterpolation?this._currentValue?o.Matrix.DecomposeLerpToRef(this._originalBlendValue,x,this._blendingFactor,this._currentValue):this._currentValue=o.Matrix.DecomposeLerp(this._originalBlendValue,x,this._blendingFactor):this._currentValue?o.Matrix.LerpToRef(this._originalBlendValue,x,this._blendingFactor,this._currentValue):this._currentValue=o.Matrix.Lerp(this._originalBlendValue,x,this._blendingFactor):this._currentValue=mL.c._UniversalLerp(this._originalBlendValue,x,this._blendingFactor);const p=L&&L.animationPropertiesOverride?L.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=p}else this._currentValue?this._currentValue.p?this._currentValue.p(x):this._currentValue=x:null!==x&&void 0!==x&&x.clone?this._currentValue=x.clone():this._currentValue=x;-1!==p?this._registerTargetForLateAnimationBinding(this,this._originalValue[G]):this._animationState.loopMode===mL.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[G],U[this._targetPath]):U[this._targetPath]=this._originalValue[G]+this._currentValue:U[this._targetPath]=this._currentValue,L.kA&&L.kA(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(L){let U=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const x=this._animation.getKeys();L<x[0].frame?L=x[0].frame:L>x[x.length-1].frame&&(L=x[x.length-1].frame);const mL=this._events;if(mL.length)for(let G=0;G<mL.length;G++)mL[G].onlyOnce||(mL[G].isDone=mL[G].frame<L);this._currentFrame=L;const p=this._animation._interpolate(L,this._animationState);this.setValue(p,U)}_prepareForSpeedRatioChange(L){const U=this._previousElapsedTime*(this._animation.framePerSecond*L)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-U}animate(L,U,x,p,G){let F=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const a=this._animation,o=a.targetPropertyPath;if(!o||o.length<1)return this._stopped=!0,!1;let A,r=!0;const h=this._events;let b=0;if(this._coreRuntimeAnimation)b=x-U,A=this._coreRuntimeAnimation.currentFrame,this._currentFrame=A,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let F;(U<this._minFrame||U>this._maxFrame)&&(U=this._minFrame),(x<this._minFrame||x>this._maxFrame)&&(x=this._maxFrame),b=x-U;let o=L*(a.framePerSecond*G)/1e3+this._absoluteFrameOffset,E=0,Y=!1;const S=p&&this._animationState.loopMode===mL.c.ANIMATIONLOOPMODE_YOYO;if(S){const L=(o-U)/b,x=Math.sin(L*Math.PI);o=Math.abs(x)*b+U;const mL=x>=0?1:-1;this._yoyoDirection!==mL&&(Y=!0),this._yoyoDirection=mL}if(this._previousElapsedTime=L,this._previousAbsoluteFrame=o,!p&&x>=U&&(o>=b&&G>0||o<=0&&G<0))r=!1,E=a._getKeyValue(this._maxValue);else if(!p&&U>=x&&(o<=b&&G<0||o>=0&&G>0))r=!1,E=a._getKeyValue(this._minValue);else if(this._animationState.loopMode!==mL.c.ANIMATIONLOOPMODE_CYCLE){const L=x.toString()+U.toString();if(!this._offsetsCache[L]){this._animationState.repeatCount=0,this._animationState.loopMode=mL.c.ANIMATIONLOOPMODE_CYCLE;const p=a._interpolate(U,this._animationState),G=a._interpolate(x,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),a.dataType){case mL.c.ANIMATIONTYPE_FLOAT:this._offsetsCache[L]=G-p;break;case mL.c.ANIMATIONTYPE_QUATERNION:case mL.c.ANIMATIONTYPE_VECTOR3:case mL.c.ANIMATIONTYPE_VECTOR2:case mL.c.ANIMATIONTYPE_SIZE:case mL.c.ANIMATIONTYPE_COLOR3:this._offsetsCache[L]=G.SU(p)}this._highLimitsCache[L]=G}E=this._highLimitsCache[L],F=this._offsetsCache[L]}if(void 0===F)switch(a.dataType){case mL.c.ANIMATIONTYPE_FLOAT:F=0;break;case mL.c.ANIMATIONTYPE_QUATERNION:F=mL.i;break;case mL.c.ANIMATIONTYPE_VECTOR3:F=mL.s;break;case mL.c.ANIMATIONTYPE_VECTOR2:F=mL.o;break;case mL.c.ANIMATIONTYPE_SIZE:F=mL.k;break;case mL.c.ANIMATIONTYPE_COLOR3:F=mL.d;break;case mL.c.ANIMATIONTYPE_COLOR4:F=mL.f}if(this._host&&this._host.syncRoot){const L=this._host.syncRoot;A=U+b*((L.masterFrame-L.fromFrame)/(L.toFrame-L.fromFrame))}else A=o>0&&U>x||o<0&&U<x?r&&0!==b?x+o%b:U:r&&0!==b?U+o%b:x;if(!S&&(G>0&&this.currentFrame>A||G<0&&this.currentFrame<A)||S&&Y){this._onLoop();for(let L=0;L<h.length;L++)h[L].onlyOnce||(h[L].isDone=!1);this._animationState.key=G>0?0:a.getKeys().length-1}this._currentFrame=A,this._animationState.repeatCount=0===b?0:o/b|0,this._animationState.highLimitValue=E,this._animationState.offsetValue=F}const E=a._interpolate(A,this._animationState);if(this.setValue(E,F),h.length)for(let mL=0;mL<h.length;mL++)if(b>=0&&A>=h[mL].frame&&h[mL].frame>=U||b<0&&A<=h[mL].frame&&h[mL].frame<=U){const L=h[mL];L.isDone||(L.onlyOnce&&(h.splice(mL,1),mL--),L.isDone=!0,L.action(A))}return r||(this._stopped=!0),r}}var r=x(12420);class h{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(L){this._weight=-1!==L?Math.min(Math.max(L,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(L){for(let U=0;U<this._runtimeAnimations.length;U++){this._runtimeAnimations[U]._prepareForSpeedRatioChange(L)}this._speedRatio=L,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(L,U){let x=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,mL=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,G=arguments.length>4&&void 0!==arguments[4]&&arguments[4],F=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,a=arguments.length>6?arguments[6]:void 0,o=arguments.length>7?arguments[7]:void 0,A=arguments.length>8?arguments[8]:void 0,r=arguments.length>9&&void 0!==arguments[9]&&arguments[9],h=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=U,this.fromFrame=x,this.toFrame=mL,this.loopAnimation=G,this.onAnimationEnd=a,this.onAnimationLoop=A,this.isAdditive=r,this.playOrder=h,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.Ua=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new p.c,this.onAnimationLoopObservable=new p.c,this._scene=L,o&&this.appendAnimations(U,o),this._speedRatio=F,L._activeAnimatables.push(this)}syncWith(L){if(this._syncRoot=L,L){const L=this._scene._activeAnimatables.indexOf(this);L>-1&&(this._scene._activeAnimatables.splice(L,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(L,U){for(let x=0;x<U.length;x++){const mL=U[x],p=new A(L,mL,this._scene,this);p._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(p)}}getAnimationByTargetProperty(L){const U=this._runtimeAnimations;for(let x=0;x<U.length;x++)if(U[x].animation.targetProperty===L)return U[x].animation;return null}getRuntimeAnimationByTargetProperty(L){const U=this._runtimeAnimations;for(let x=0;x<U.length;x++)if(U[x].animation.targetProperty===L)return U[x];return null}reset(){const L=this._runtimeAnimations;for(let U=0;U<L.length;U++)L[U].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(L){const U=this._runtimeAnimations;for(let x=0;x<U.length;x++)U[x].animation.enableBlending=!0,U[x].animation.blendingSpeed=L}disableBlending(){const L=this._runtimeAnimations;for(let U=0;U<L.length;U++)L[U].animation.enableBlending=!1}goToFrame(L){let U=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const x=this._runtimeAnimations;if(x[0]){const U=x[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??x[0].currentFrame;const mL=0===this.speedRatio?0:(L-this._frameToSyncFromJump)/U*1e3/this.speedRatio;this._manualJumpDelay=-mL}for(let mL=0;mL<x.length;mL++)x[mL].goToFrame(L,U?this._weight:-1);this._goToFrame=L}get paused(){return this.Ua}pause(){this.Ua||(this.Ua=!0)}restart(){this.Ua=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(L,U){let x=arguments.length>2&&void 0!==arguments[2]&&arguments[2],mL=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(L||U){const p=this._scene._activeAnimatables.indexOf(this);if(p>-1){const G=this._runtimeAnimations;for(let x=G.length-1;x>=0;x--){const mL=G[x];L&&mL.animation.name!=L||(U&&!U(mL.target)||(mL.dispose(),G.splice(x,1)))}0==G.length&&(x||this._scene._activeAnimatables.splice(p,1),mL||this._raiseOnAnimationEnd())}}else{const L=this._scene._activeAnimatables.indexOf(this);if(L>-1){x||this._scene._activeAnimatables.splice(L,1);const U=this._runtimeAnimations;for(let L=0;L<U.length;L++)U[L].dispose();this._runtimeAnimations.length=0,mL||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((L=>{this.onAnimationEndObservable.add((()=>{L(this)}),void 0,void 0,this,!0)}))}_animate(L){if(this.Ua)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=L),!0;if(null===this._localDelayOffset?(this._localDelayOffset=L,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=L-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let U=!1;const x=this._runtimeAnimations;let mL;for(mL=0;mL<x.length;mL++){const p=x[mL].animate(L-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);U=U||p}if(this.animationStarted=U,!U){if(this.disposeOnEnd)for(mL=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(mL,1),mL=0;mL<x.length;mL++)x[mL].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return U}}function b(L){if(0===L.totalWeight&&0===L.totalAdditiveWeight)return L.originalValue;let U=1;const x=o.TmpVectors.YU[0],mL=o.TmpVectors.YU[1],p=o.TmpVectors.Quaternion[0];let G=0;const F=L.animations[0],a=L.originalValue;let A=1,r=!1;if(L.totalWeight<1)A=1-L.totalWeight,a.decompose(mL,p,x);else{if(G=1,U=L.totalWeight,A=F.weight/U,1==A){if(!L.totalAdditiveWeight)return F.currentValue;r=!0}F.currentValue.decompose(mL,p,x)}if(!r){mL.scaleInPlace(A),x.scaleInPlace(A),p.scaleInPlace(A);for(let F=G;F<L.animations.length;F++){const G=L.animations[F];if(0===G.weight)continue;A=G.weight/U;const a=o.TmpVectors.YU[2],r=o.TmpVectors.YU[3],h=o.TmpVectors.Quaternion[1];G.currentValue.decompose(r,h,a),r.scaleAndAddToRef(A,mL),h.scaleAndAddToRef(o.Quaternion.Dot(p,h)>0?A:-A,p),a.scaleAndAddToRef(A,x)}p.normalize()}for(let b=0;b<L.additiveAnimations.length;b++){const U=L.additiveAnimations[b];if(0===U.weight)continue;const G=o.TmpVectors.YU[2],F=o.TmpVectors.YU[3],a=o.TmpVectors.Quaternion[1];U.currentValue.decompose(F,a,G),F.multiplyToRef(mL,F),o.YU.LerpToRef(mL,F,U.weight,mL),p.multiplyToRef(a,a),o.Quaternion.SlerpToRef(p,a,U.weight,p),G.scaleAndAddToRef(U.weight,x)}const h=F?F._animationState.workValue:o.TmpVectors.Matrix[0].clone();return o.Matrix.ComposeToRef(mL,p,x,h),h}function E(L,U){if(0===L.totalWeight&&0===L.totalAdditiveWeight)return U;const x=L.animations[0],mL=L.originalValue;let p=U;if(0===L.totalWeight&&L.totalAdditiveWeight>0)p.p(mL);else if(1===L.animations.length){if(o.Quaternion.SlerpToRef(mL,x.currentValue,Math.min(1,L.totalWeight),p),0===L.totalAdditiveWeight)return p}else if(L.animations.length>1){let x,G,F=1;if(L.totalWeight<1){const U=1-L.totalWeight;x=[],G=[],x.push(mL),G.push(U)}else{if(2===L.animations.length&&(o.Quaternion.SlerpToRef(L.animations[0].currentValue,L.animations[1].currentValue,L.animations[1].weight/L.totalWeight,U),0===L.totalAdditiveWeight))return U;x=[],G=[],F=L.totalWeight}for(let U=0;U<L.animations.length;U++){const mL=L.animations[U];x.push(mL.currentValue),G.push(mL.weight/F)}let a=0;for(let L=0;L<x.length;)L?(a+=G[L],o.Quaternion.SlerpToRef(p,x[L],G[L]/a,p),L++):(o.Quaternion.SlerpToRef(x[L],x[L+1],G[L+1]/(G[L]+G[L+1]),U),p=U,a=G[L]+G[L+1],L+=2)}for(let G=0;G<L.additiveAnimations.length;G++){const U=L.additiveAnimations[G];0!==U.weight&&(p.multiplyToRef(U.currentValue,o.TmpVectors.Quaternion[0]),o.Quaternion.SlerpToRef(p,o.TmpVectors.Quaternion[0],U.weight,p))}return p}var Y,S,V=x(12820);Y=V.e,(S=a.d)&&(S.prototype.copyAnimationRange=function(L,U,x){let p=arguments.length>3&&void 0!==arguments[3]&&arguments[3],G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new mL.c(this.name,"_matrix",L.animations[0].framePerSecond,mL.c.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const F=L.animations[0].getRange(U);if(!F)return!1;const a=F.from,o=F.to,A=L.animations[0].getKeys(),r=L.length,h=L.getParent(),b=this.getParent(),E=p&&h&&r&&this.length&&r!==this.length,Y=E&&b&&h?b.length/h.length:1,S=p&&!b&&G&&(1!==G.x||1!==G.y||1!==G.z),V=this.animations[0].getKeys();let H,Q,q;for(let mL=0,f=A.length;mL<f;mL++)H=A[mL],H.frame>=a&&H.frame<=o&&(p?(q=H.value.clone(),E?(Q=q.getTranslation(),q.setTranslation(Q.scaleInPlace(Y))):S&&G?(Q=q.getTranslation(),q.setTranslation(Q.multiplyInPlace(G))):q=H.value):q=H.value,V.push({frame:H.frame+x,value:q}));return this.animations[0].createRange(U,a+x,o+x),!0}),Y&&(Y.prototype._animate=function(L){if(!this.animationsEnabled)return;const U=r.e.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=U}this.deltaTime=void 0!==L?L:this.useConstantAnimationDeltaTime?16:(U-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=U;const x=this._activeAnimatables;if(0===x.length)return;this._animationTime+=this.deltaTime;const p=this._animationTime;for(let mL=0;mL<x.length;mL++){const L=x[mL];!L._animate(p)&&L.disposeOnEnd&&mL--}!function(L){if(L._registeredForLateAnimationBindings.length){for(let U=0;U<L._registeredForLateAnimationBindings.length;U++){const x=L._registeredForLateAnimationBindings.data[U];for(const L in x._lateAnimationHolders){const U=x._lateAnimationHolders[L],p=U.animations[0],G=U.originalValue;if(void 0===G||null===G)continue;const F=mL.c.AllowMatrixDecomposeForInterpolation&&G.m;let a=x[L];if(F)a=b(U);else if(void 0!==G.w)a=E(U,a||o.Quaternion.Identity());else{let L=0,x=1;const F=p&&p._animationState.loopMode===mL.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(U.totalWeight<1)a=F?G.clone?G.clone():G:p&&G.scale?G.scale(1-U.totalWeight):p?G*(1-U.totalWeight):G.clone?G.clone():G;else if(p){x=U.totalWeight;const mL=p.weight/x;a=1!==mL?p.currentValue.scale?p.currentValue.scale(mL):p.currentValue*mL:p.currentValue,F&&(a.addToRef?a.addToRef(G,a):a+=G),L=1}for(let mL=L;mL<U.animations.length;mL++){const L=U.animations[mL],p=L.weight/x;p&&(L.currentValue.scaleAndAddToRef?L.currentValue.scaleAndAddToRef(p,a):a+=L.currentValue*p)}for(let mL=0;mL<U.additiveAnimations.length;mL++){const L=U.additiveAnimations[mL],x=L.weight;x&&(L.currentValue.scaleAndAddToRef?L.currentValue.scaleAndAddToRef(x,a):a+=L.currentValue*x)}}x[L]=a}x._lateAnimationHolders={}}L._registeredForLateAnimationBindings.reset()}}(this)},Y.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((L,U)=>L.playOrder-U.playOrder))},Y.prototype.beginWeightedAnimation=function(L,U,x){let mL=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,p=arguments.length>4?arguments[4]:void 0,G=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,F=arguments.length>6?arguments[6]:void 0,a=arguments.length>7?arguments[7]:void 0,o=arguments.length>8?arguments[8]:void 0,A=arguments.length>9?arguments[9]:void 0,r=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const h=this.beginAnimation(L,U,x,p,G,F,a,!1,o,A,r);return h.weight=mL,h},Y.prototype.beginAnimation=function(L,U,x,mL){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,G=arguments.length>5?arguments[5]:void 0,F=arguments.length>6?arguments[6]:void 0,a=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],o=arguments.length>8?arguments[8]:void 0,A=arguments.length>9?arguments[9]:void 0,r=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(p<0){const L=U;U=x,x=L,p=-p}U>x&&(p=-p),a&&this.stopAnimation(L,void 0,o),F||(F=new h(this,L,U,x,mL,p,G,void 0,A,r));const b=!o||o(L);if(L.animations&&b&&F.appendAnimations(L,L.animations),L.getAnimatables){const r=L.getAnimatables();for(let L=0;L<r.length;L++)this.beginAnimation(r[L],U,x,mL,p,G,F,a,o,A)}return F.reset(),F},Y.prototype.beginHierarchyAnimation=function(L,U,x,mL,p){let G=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,F=arguments.length>6?arguments[6]:void 0,a=arguments.length>7?arguments[7]:void 0,o=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],A=arguments.length>9?arguments[9]:void 0,r=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const h=L.getDescendants(U),b=[];b.push(this.beginAnimation(L,x,mL,p,G,F,a,o,A,void 0,r));for(const E of h)b.push(this.beginAnimation(E,x,mL,p,G,F,a,o,A,void 0,r));return b},Y.prototype.beginDirectAnimation=function(L,U,x,mL,p){let G=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(G<0){const L=x;x=mL,mL=L,G=-G}return x>mL&&(G=-G),new h(this,L,x,mL,p,G,arguments.length>6?arguments[6]:void 0,U,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},Y.prototype.beginDirectHierarchyAnimation=function(L,U,x,mL,p,G,F,a,o){let A=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const r=L.getDescendants(U),h=[];h.push(this.beginDirectAnimation(L,x,mL,p,G,F,a,o,A));for(const b of r)h.push(this.beginDirectAnimation(b,x,mL,p,G,F,a,o,A));return h},Y.prototype.getAnimatableByTarget=function(L){for(let U=0;U<this._activeAnimatables.length;U++)if(this._activeAnimatables[U].target===L)return this._activeAnimatables[U];return null},Y.prototype.getAllAnimatablesByTarget=function(L){const U=[];for(let x=0;x<this._activeAnimatables.length;x++)this._activeAnimatables[x].target===L&&U.push(this._activeAnimatables[x]);return U},Y.prototype.stopAnimation=function(L,U,x){const mL=this.getAllAnimatablesByTarget(L);for(const p of mL)p.stop(U,x)},Y.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let L=0;L<this._activeAnimatables.length;L++)this._activeAnimatables[L].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const L of this.animationGroups)L.stop()});class H{getClassName(){return"TargetedAnimation"}serialize(){const L={};return L.animation=this.animation.serialize(),L.targetId=this.target.id,L}}class Q{get mask(){return this._mask}set mask(L){this._mask!==L&&(this._mask=L,this.syncWithMask(!0))}syncWithMask(){let L=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||L){this._numActiveAnimatables=0;for(let L=0;L<this._animatables.length;++L){const U=this._animatables[L];!this.mask||this.mask.disabled||this.mask.retainsTarget(U.target.name)?(this._numActiveAnimatables++,U.paused&&U.restart()):U.paused||U.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let L=0;L<this._animatables.length;++L){const U=this._animatables[L];this.mask.retainsTarget(U.target.name)||(U.stop(),this._animatables.splice(L,1),--L)}for(let L=0;L<this._targetedAnimations.length;L++){const U=this._targetedAnimations[L];this.mask.retainsTarget(U.target.name)||(this._targetedAnimations.splice(L,1),--L)}}}get from(){return this._from}set from(L){if(this._from!==L){this._from=L;for(let L=0;L<this._animatables.length;L++){this._animatables[L].fromFrame=this._from}}}get to(){return this._to}set to(L){if(this._to!==L){this._to=L;for(let L=0;L<this._animatables.length;L++){this._animatables[L].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(L){if(this._speedRatio!==L){this._speedRatio=L;for(let L=0;L<this._animatables.length;L++){this._animatables[L].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(L){if(this._loopAnimation!==L){this._loopAnimation=L;for(let L=0;L<this._animatables.length;L++){this._animatables[L].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(L){if(this._isAdditive!==L){this._isAdditive=L;for(let L=0;L<this._animatables.length;L++){this._animatables[L].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(L){this._weight!==L&&(this._weight=L,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(L){if(this._playOrder!==L&&(this._playOrder=L,this._animatables.length>0)){for(let L=0;L<this._animatables.length;L++)this._animatables[L].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(L){if(this._enableBlending!==L&&(this._enableBlending=L,null!==L))for(let U=0;U<this._targetedAnimations.length;++U)this._targetedAnimations[U].animation.enableBlending=L}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(L){if(this._blendingSpeed!==L&&(this._blendingSpeed=L,null!==L))for(let U=0;U<this._targetedAnimations.length;++U)this._targetedAnimations[U].animation.blendingSpeed=L}getLength(L,U){L=L??this._from;return((U=U??this._to)-L)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(L){let U=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],x=arguments.length>2&&void 0!==arguments[2]&&arguments[2],mL=arguments.length>3?arguments[3]:void 0;if(0===L.length)return null;mL=mL??L[0].weight;let p=Number.MAX_VALUE,G=-Number.MAX_VALUE;if(x)for(const a of L)a.from<p&&(p=a.from),a.to>G&&(G=a.to);const F=new Q(L[0].name+"_merged",L[0]._scene,mL);for(const a of L){x&&a.normalize(p,G);for(const L of a.targetedAnimations)F.addTargetedAnimation(L.animation,L.target);U&&a.dispose()}return F}constructor(L){let U=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,x=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,mL=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=L,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new p.c,this.onAnimationLoopObservable=new p.c,this.onAnimationGroupLoopObservable=new p.c,this.onAnimationGroupEndObservable=new p.c,this.onAnimationGroupPauseObservable=new p.c,this.onAnimationGroupPlayObservable=new p.c,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=U||G.c.LastCreatedScene,this._weight=x,this._playOrder=mL,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(L,U){const x=new H;x.animation=L,x.target=U;const mL=L.getKeys();return this._from>mL[0].frame&&(this._from=mL[0].frame),this._to<mL[mL.length-1].frame&&(this._to=mL[mL.length-1].frame),null!==this._enableBlending&&(L.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(L.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(x),this._shouldStart=!0,x}removeTargetedAnimation(L){for(let U=this._targetedAnimations.length-1;U>-1;U--){this._targetedAnimations[U].animation===L&&this._targetedAnimations.splice(U,1)}}normalize(){let L=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,U=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==L&&(L=this._from),null==U&&(U=this._to);for(let x=0;x<this._targetedAnimations.length;x++){const mL=this._targetedAnimations[x].animation.getKeys(),p=mL[0],G=mL[mL.length-1];if(p.frame>L){const U={frame:L,value:p.value,inTangent:p.inTangent,outTangent:p.outTangent,interpolation:p.interpolation};mL.splice(0,0,U)}if(G.frame<U){const L={frame:U,value:G.value,inTangent:G.inTangent,outTangent:G.outTangent,interpolation:G.interpolation};mL.push(L)}}return this._from=L,this._to=U,this}_processLoop(L,U,x){L.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(U),this._animationLoopFlags[x]||(this._animationLoopFlags[x]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let L=arguments.length>0&&void 0!==arguments[0]&&arguments[0],U=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,x=arguments.length>2?arguments[2]:void 0,mL=arguments.length>3?arguments[3]:void 0,p=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=L,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let G=0;G<this._targetedAnimations.length;G++){const F=this._targetedAnimations[G],a=this._scene.beginDirectAnimation(F.target,[F.animation],void 0!==x?x:this._from,void 0!==mL?mL:this._to,L,U,void 0,void 0,void 0!==p?p:this._isAdditive);a.weight=this._weight,a.playOrder=this._playOrder,a.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(F),this._checkAnimationGroupEnded(a)},this._processLoop(a,F,G),this._animatables.push(a)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=U,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let L=0;L<this._animatables.length;L++){this._animatables[L].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(L){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==L&&(this.loopAnimation=L),this.restart()):(this.stop(),this.start(L,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let L=0;L<this._animatables.length;L++){this._animatables[L].reset()}return this}restart(){if(!this._isStarted)return this;for(let L=0;L<this._animatables.length;L++){this._animatables[L].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let L=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const U=this._animatables.slice();for(let mL=0;mL<U.length;mL++)U[mL].stop(void 0,void 0,!0,L);let x=0;for(let mL=0;mL<this._scene._activeAnimatables.length;mL++){const U=this._scene._activeAnimatables[mL];U._runtimeAnimations.length>0?this._scene._activeAnimatables[x++]=U:L&&this._checkAnimationGroupEnded(U,L)}return this._scene._activeAnimatables.length=x,this._isStarted=!1,this}setWeightForAllAnimatables(L){for(let U=0;U<this._animatables.length;U++){this._animatables[U].weight=L}return this}syncAllAnimationsWith(L){for(let U=0;U<this._animatables.length;U++){this._animatables[U].syncWith(L)}return this}goToFrame(L){let U=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let x=0;x<this._animatables.length;x++){this._animatables[x].goToFrame(L,U)}return this}getCurrentFrame(){var L;return(null===(L=this.animatables[0])||void 0===L?void 0:L.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const L=this._scene.animationGroups.indexOf(this);if(L>-1&&this._scene.animationGroups.splice(L,1),this._parentContainer){const L=this._parentContainer.animationGroups.indexOf(this);L>-1&&this._parentContainer.animationGroups.splice(L,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(L){let U=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const x=this._animatables.indexOf(L);x>-1&&this._animatables.splice(x,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,U||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(L,U){let x=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const mL=new Q(L||this.name,this._scene,this._weight,this._playOrder);mL._from=this.from,mL._to=this.to,mL._speedRatio=this.speedRatio,mL._loopAnimation=this.loopAnimation,mL._isAdditive=this.isAdditive,mL._enableBlending=this.enableBlending,mL._blendingSpeed=this.blendingSpeed,mL.metadata=this.metadata,mL.mask=this.mask;for(const p of this._targetedAnimations)mL.addTargetedAnimation(x?p.animation.clone():p.animation,U?U(p.target):p.target);return mL}serialize(){const L={};L.name=this.name,L.from=this.from,L.to=this.to,L.speedRatio=this.speedRatio,L.loopAnimation=this.loopAnimation,L.isAdditive=this.isAdditive,L.weight=this.weight,L.playOrder=this.playOrder,L.enableBlending=this.enableBlending,L.blendingSpeed=this.blendingSpeed,L.targetedAnimations=[];for(let U=0;U<this.targetedAnimations.length;U++){const x=this.targetedAnimations[U];L.targetedAnimations[U]=x.serialize()}return F.e&&F.e.HasTags(this)&&(L.tags=F.e.GetTags(this)),this.metadata&&(L.metadata=this.metadata),L}static Parse(L,U){const x=new Q(L.name,U,L.weight,L.playOrder);for(let p=0;p<L.targetedAnimations.length;p++){const G=L.targetedAnimations[p],F=mL.c.Parse(G.animation),a=G.targetId;if("influence"===G.animation.property){const L=U.getMorphTargetById(a);L&&x.addTargetedAnimation(F,L)}else{const L=U.getNodeById(a);null!=L&&x.addTargetedAnimation(F,L)}}return F.e&&F.e.AddTagsTo(x,L.tags),null!==L.from&&null!==L.to&&x.normalize(L.from,L.to),void 0!==L.speedRatio&&(x._speedRatio=L.speedRatio),void 0!==L.loopAnimation&&(x._loopAnimation=L.loopAnimation),void 0!==L.isAdditive&&(x._isAdditive=L.isAdditive),void 0!==L.weight&&(x._weight=L.weight),void 0!==L.playOrder&&(x._playOrder=L.playOrder),void 0!==L.enableBlending&&(x._enableBlending=L.enableBlending),void 0!==L.blendingSpeed&&(x._blendingSpeed=L.blendingSpeed),void 0!==L.metadata&&(x.metadata=L.metadata),x}static MakeAnimationAdditive(L,U,x){let p;p="object"===typeof U?U:{referenceFrame:U,range:x,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let G=L;p.cloneOriginalAnimationGroup&&(G=L.clone(p.clonedAnimationGroupName||G.name));const F=G.targetedAnimations;for(let a=0;a<F.length;a++){const L=F[a];L.animation=mL.c.MakeAnimationAdditive(L.animation,p)}if(G.isAdditive=!0,p.clipKeys){let L=Number.MAX_VALUE,U=-Number.MAX_VALUE;const x=G.targetedAnimations;for(let mL=0;mL<x.length;mL++){const p=x[mL].animation.getKeys();L>p[0].frame&&(L=p[0].frame),U<p[p.length-1].frame&&(U=p[p.length-1].frame)}G._from=L,G._to=U}return G}static ClipKeys(L,U,x,mL,p){const G=L.clone(mL||L.name);return Q.ClipKeysInPlace(G,U,x,p)}static ClipKeysInPlace(L,U,x,mL){return Q.ClipInPlace(L,U,x,mL,!1)}static ClipFrames(L,U,x,mL,p){const G=L.clone(mL||L.name);return Q.ClipFramesInPlace(G,U,x,p)}static ClipFramesInPlace(L,U,x,mL){return Q.ClipInPlace(L,U,x,mL,!0)}static ClipInPlace(L,U,x,mL){let p=arguments.length>4&&void 0!==arguments[4]&&arguments[4],G=Number.MAX_VALUE,F=-Number.MAX_VALUE;const a=L.targetedAnimations;for(let o=0;o<a.length;o++){const L=a[o],A=mL?L.animation:L.animation.clone();p&&(A.createKeyForFrame(U),A.createKeyForFrame(x));const r=A.getKeys(),h=[];let b=Number.MAX_VALUE;for(let mL=0;mL<r.length;mL++){const L=r[mL];if(!p&&mL>=U&&mL<=x||p&&L.frame>=U&&L.frame<=x){const U={frame:L.frame,value:L.value.clone?L.value.clone():L.value,inTangent:L.inTangent,outTangent:L.outTangent,interpolation:L.interpolation,lockedTangent:L.lockedTangent};b===Number.MAX_VALUE&&(b=U.frame),U.frame-=b,h.push(U)}}0!==h.length?(G>h[0].frame&&(G=h[0].frame),F<h[h.length-1].frame&&(F=h[h.length-1].frame),A.setKeys(h,!0),L.animation=A):(a.splice(o,1),o--)}return L._from=G,L._to=F,L}getClassName(){return"AnimationGroup"}toString(L){let U="Name: "+this.name;return U+=", type: "+this.getClassName(),L&&(U+=", from: "+this._from,U+=", to: "+this._to,U+=", isStarted: "+this._isStarted,U+=", speedRatio: "+this._speedRatio,U+=", targetedAnimations length: "+this._targetedAnimations.length,U+=", animatables length: "+this._animatables),U}}}}]);