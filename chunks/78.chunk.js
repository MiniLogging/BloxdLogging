"use strict";(self.c2c3ycupenc=self.c2c3ycupenc||[]).push([[78],{14880:(c,r,D)=>{D.r(r),D.d(r,{AnimationGroup:()=>J,TargetedAnimation:()=>Z});var W=D(12202),B=D(11494),t=D(11538),u=D(11719),a=D(13318),H=D(11683);class x{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(c,r,D,B){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=r,this._target=c,this._scene=D,this._host=B,this._activeTargets=[],r._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===W.b.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=H.Matrix.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const c={frame:0,value:this._minValue};this._keys.splice(0,0,c)}if(this._target instanceof Array){let c=0;for(const r of this._target)this._preparePath(r,c),this._getOriginalValues(c),c++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const t=r.getEvents();if(t&&t.length>0)for(const W of t)this._events.push(W._clone());this._enableBlending=c&&c.animationPropertiesOverride?c.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(c){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const D=this._animation.targetPropertyPath;if(D.length>1){let W=c;for(let c=0;c<D.length-1;c++){const r=D[c];if(W=W[r],void 0===W)throw new Error(`Invalid property (${r}) in property path (${D.join(".")})`)}this._targetPath=D[D.length-1],this._activeTargets[r]=W}else this._targetPath=D[0],this._activeTargets[r]=c;if(void 0===this._activeTargets[r][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${D.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let c=0;for(const r of this._target)void 0!==this._originalValue[c]&&this._setValue(r,this._activeTargets[c],this._originalValue[c],-1,c),c++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let c=0;c<this._events.length;c++)this._events[c].isDone=!1}isStopped(){return this._stopped}dispose(){const c=this._animation.runtimeAnimations.indexOf(this);c>-1&&this._animation.runtimeAnimations.splice(c,1)}setValue(c,r){if(this._targetIsArray)for(let D=0;D<this._target.length;D++){const W=this._target[D];this._setValue(W,this._activeTargets[D],c,r,D)}else this._setValue(this._target,this._directTarget,c,r,0)}_getOriginalValues(){let c,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const D=this._activeTargets[r];c=D.getLocalMatrix&&"_matrix"===this._targetPath?D.getLocalMatrix():D[this._targetPath],c&&c.clone?this._originalValue[r]=c.clone():this._originalValue[r]=c}_registerTargetForLateAnimationBinding(c,r){const D=c.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(D),D._lateAnimationHolders||(D._lateAnimationHolders={}),D._lateAnimationHolders[c.targetPath]||(D._lateAnimationHolders[c.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:r}),c.isAdditive?(D._lateAnimationHolders[c.targetPath].additiveAnimations.push(c),D._lateAnimationHolders[c.targetPath].totalAdditiveWeight+=c.weight):(D._lateAnimationHolders[c.targetPath].animations.push(c),D._lateAnimationHolders[c.targetPath].totalWeight+=c.weight)}_setValue(c,r,D,B,t){if(this._currentActiveTarget=r,this._weight=B,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const c=r[this._targetPath];c.clone?this._originalBlendValue=c.clone():this._originalBlendValue=c}this._originalBlendValue.m?W.b.AllowMatrixDecomposeForInterpolation?this._currentValue?H.Matrix.DecomposeLerpToRef(this._originalBlendValue,D,this._blendingFactor,this._currentValue):this._currentValue=H.Matrix.DecomposeLerp(this._originalBlendValue,D,this._blendingFactor):this._currentValue?H.Matrix.LerpToRef(this._originalBlendValue,D,this._blendingFactor,this._currentValue):this._currentValue=H.Matrix.Lerp(this._originalBlendValue,D,this._blendingFactor):this._currentValue=W.b._UniversalLerp(this._originalBlendValue,D,this._blendingFactor);const B=c&&c.animationPropertiesOverride?c.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=B}else this._currentValue?this._currentValue.t?this._currentValue.t(D):this._currentValue=D:null!==D&&void 0!==D&&D.clone?this._currentValue=D.clone():this._currentValue=D;-1!==B?this._registerTargetForLateAnimationBinding(this,this._originalValue[t]):this._animationState.loopMode===W.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[t],r[this._targetPath]):r[this._targetPath]=this._originalValue[t]+this._currentValue:r[this._targetPath]=this._currentValue,c.Qx&&c.Qx(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(c){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const D=this._animation.getKeys();c<D[0].frame?c=D[0].frame:c>D[D.length-1].frame&&(c=D[D.length-1].frame);const W=this._events;if(W.length)for(let t=0;t<W.length;t++)W[t].onlyOnce||(W[t].isDone=W[t].frame<c);this._currentFrame=c;const B=this._animation._interpolate(c,this._animationState);this.setValue(B,r)}_prepareForSpeedRatioChange(c){const r=this._previousElapsedTime*(this._animation.framePerSecond*c)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-r}animate(c,r,D,B,t){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const a=this._animation,H=a.targetPropertyPath;if(!H||H.length<1)return this._stopped=!0,!1;let x,M=!0;const E=this._events;let m=0;if(this._coreRuntimeAnimation)m=D-r,x=this._coreRuntimeAnimation.currentFrame,this._currentFrame=x,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let u;(r<this._minFrame||r>this._maxFrame)&&(r=this._minFrame),(D<this._minFrame||D>this._maxFrame)&&(D=this._maxFrame),m=D-r;let H=c*(a.framePerSecond*t)/1e3+this._absoluteFrameOffset,Y=0,v=!1;const k=B&&this._animationState.loopMode===W.b.ANIMATIONLOOPMODE_YOYO;if(k){const c=(H-r)/m,D=Math.sin(c*Math.PI);H=Math.abs(D)*m+r;const W=D>=0?1:-1;this._yoyoDirection!==W&&(v=!0),this._yoyoDirection=W}if(this._previousElapsedTime=c,this._previousAbsoluteFrame=H,!B&&D>=r&&(H>=m&&t>0||H<=0&&t<0))M=!1,Y=a._getKeyValue(this._maxValue);else if(!B&&r>=D&&(H<=m&&t<0||H>=0&&t>0))M=!1,Y=a._getKeyValue(this._minValue);else if(this._animationState.loopMode!==W.b.ANIMATIONLOOPMODE_CYCLE){const c=D.toString()+r.toString();if(!this._offsetsCache[c]){this._animationState.repeatCount=0,this._animationState.loopMode=W.b.ANIMATIONLOOPMODE_CYCLE;const B=a._interpolate(r,this._animationState),t=a._interpolate(D,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),a.dataType){case W.b.ANIMATIONTYPE_FLOAT:this._offsetsCache[c]=t-B;break;case W.b.ANIMATIONTYPE_QUATERNION:case W.b.ANIMATIONTYPE_VECTOR3:case W.b.ANIMATIONTYPE_VECTOR2:case W.b.ANIMATIONTYPE_SIZE:case W.b.ANIMATIONTYPE_COLOR3:this._offsetsCache[c]=t.Jr(B)}this._highLimitsCache[c]=t}Y=this._highLimitsCache[c],u=this._offsetsCache[c]}if(void 0===u)switch(a.dataType){case W.b.ANIMATIONTYPE_FLOAT:u=0;break;case W.b.ANIMATIONTYPE_QUATERNION:u=W.k;break;case W.b.ANIMATIONTYPE_VECTOR3:u=W.r;break;case W.b.ANIMATIONTYPE_VECTOR2:u=W.p;break;case W.b.ANIMATIONTYPE_SIZE:u=W.m;break;case W.b.ANIMATIONTYPE_COLOR3:u=W.e;break;case W.b.ANIMATIONTYPE_COLOR4:u=W.g}if(this._host&&this._host.syncRoot){const c=this._host.syncRoot;x=r+m*((c.masterFrame-c.fromFrame)/(c.toFrame-c.fromFrame))}else x=H>0&&r>D||H<0&&r<D?M&&0!==m?D+H%m:r:M&&0!==m?r+H%m:D;if(!k&&(t>0&&this.currentFrame>x||t<0&&this.currentFrame<x)||k&&v){this._onLoop();for(let c=0;c<E.length;c++)E[c].onlyOnce||(E[c].isDone=!1);this._animationState.key=t>0?0:a.getKeys().length-1}this._currentFrame=x,this._animationState.repeatCount=0===m?0:H/m|0,this._animationState.highLimitValue=Y,this._animationState.offsetValue=u}const Y=a._interpolate(x,this._animationState);if(this.setValue(Y,u),E.length)for(let W=0;W<E.length;W++)if(m>=0&&x>=E[W].frame&&E[W].frame>=r||m<0&&x<=E[W].frame&&E[W].frame<=r){const c=E[W];c.isDone||(c.onlyOnce&&(E.splice(W,1),W--),c.isDone=!0,c.action(x))}return M||(this._stopped=!0),M}}var M=D(11517);class E{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(c){this._weight=-1!==c?Math.min(Math.max(c,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(c){for(let r=0;r<this._runtimeAnimations.length;r++){this._runtimeAnimations[r]._prepareForSpeedRatioChange(c)}this._speedRatio=c,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(c,r){let D=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,W=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,t=arguments.length>4&&void 0!==arguments[4]&&arguments[4],u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,a=arguments.length>6?arguments[6]:void 0,H=arguments.length>7?arguments[7]:void 0,x=arguments.length>8?arguments[8]:void 0,M=arguments.length>9&&void 0!==arguments[9]&&arguments[9],E=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=r,this.fromFrame=D,this.toFrame=W,this.loopAnimation=t,this.onAnimationEnd=a,this.onAnimationLoop=x,this.isAdditive=M,this.playOrder=E,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.nu=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new B.c,this.onAnimationLoopObservable=new B.c,this._scene=c,H&&this.appendAnimations(r,H),this._speedRatio=u,c._activeAnimatables.push(this)}syncWith(c){if(this._syncRoot=c,c){const c=this._scene._activeAnimatables.indexOf(this);c>-1&&(this._scene._activeAnimatables.splice(c,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(c,r){for(let D=0;D<r.length;D++){const W=r[D],B=new x(c,W,this._scene,this);B._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(B)}}getAnimationByTargetProperty(c){const r=this._runtimeAnimations;for(let D=0;D<r.length;D++)if(r[D].animation.targetProperty===c)return r[D].animation;return null}getRuntimeAnimationByTargetProperty(c){const r=this._runtimeAnimations;for(let D=0;D<r.length;D++)if(r[D].animation.targetProperty===c)return r[D];return null}reset(){const c=this._runtimeAnimations;for(let r=0;r<c.length;r++)c[r].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(c){const r=this._runtimeAnimations;for(let D=0;D<r.length;D++)r[D].animation.enableBlending=!0,r[D].animation.blendingSpeed=c}disableBlending(){const c=this._runtimeAnimations;for(let r=0;r<c.length;r++)c[r].animation.enableBlending=!1}goToFrame(c){let r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const D=this._runtimeAnimations;if(D[0]){const r=D[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??D[0].currentFrame;const W=0===this.speedRatio?0:(c-this._frameToSyncFromJump)/r*1e3/this.speedRatio;this._manualJumpDelay=-W}for(let W=0;W<D.length;W++)D[W].goToFrame(c,r?this._weight:-1);this._goToFrame=c}get paused(){return this.nu}pause(){this.nu||(this.nu=!0)}restart(){this.nu=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(c,r){let D=arguments.length>2&&void 0!==arguments[2]&&arguments[2],W=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(c||r){const B=this._scene._activeAnimatables.indexOf(this);if(B>-1){const t=this._runtimeAnimations;for(let D=t.length-1;D>=0;D--){const W=t[D];c&&W.animation.name!=c||(r&&!r(W.target)||(W.dispose(),t.splice(D,1)))}0==t.length&&(D||this._scene._activeAnimatables.splice(B,1),W||this._raiseOnAnimationEnd())}}else{const c=this._scene._activeAnimatables.indexOf(this);if(c>-1){D||this._scene._activeAnimatables.splice(c,1);const r=this._runtimeAnimations;for(let c=0;c<r.length;c++)r[c].dispose();this._runtimeAnimations.length=0,W||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((c=>{this.onAnimationEndObservable.add((()=>{c(this)}),void 0,void 0,this,!0)}))}_animate(c){if(this.nu)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=c),!0;if(null===this._localDelayOffset?(this._localDelayOffset=c,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=c-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let r=!1;const D=this._runtimeAnimations;let W;for(W=0;W<D.length;W++){const B=D[W].animate(c-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);r=r||B}if(this.animationStarted=r,!r){if(this.disposeOnEnd)for(W=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(W,1),W=0;W<D.length;W++)D[W].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return r}}function m(c){if(0===c.totalWeight&&0===c.totalAdditiveWeight)return c.originalValue;let r=1;const D=H.TmpVectors.Zr[0],W=H.TmpVectors.Zr[1],B=H.TmpVectors.Quaternion[0];let t=0;const u=c.animations[0],a=c.originalValue;let x=1,M=!1;if(c.totalWeight<1)x=1-c.totalWeight,a.decompose(W,B,D);else{if(t=1,r=c.totalWeight,x=u.weight/r,1==x){if(!c.totalAdditiveWeight)return u.currentValue;M=!0}u.currentValue.decompose(W,B,D)}if(!M){W.scaleInPlace(x),D.scaleInPlace(x),B.scaleInPlace(x);for(let u=t;u<c.animations.length;u++){const t=c.animations[u];if(0===t.weight)continue;x=t.weight/r;const a=H.TmpVectors.Zr[2],M=H.TmpVectors.Zr[3],E=H.TmpVectors.Quaternion[1];t.currentValue.decompose(M,E,a),M.scaleAndAddToRef(x,W),E.scaleAndAddToRef(H.Quaternion.Dot(B,E)>0?x:-x,B),a.scaleAndAddToRef(x,D)}B.normalize()}for(let m=0;m<c.additiveAnimations.length;m++){const r=c.additiveAnimations[m];if(0===r.weight)continue;const t=H.TmpVectors.Zr[2],u=H.TmpVectors.Zr[3],a=H.TmpVectors.Quaternion[1];r.currentValue.decompose(u,a,t),u.multiplyToRef(W,u),H.Zr.LerpToRef(W,u,r.weight,W),B.multiplyToRef(a,a),H.Quaternion.SlerpToRef(B,a,r.weight,B),t.scaleAndAddToRef(r.weight,D)}const E=u?u._animationState.workValue:H.TmpVectors.Matrix[0].clone();return H.Matrix.ComposeToRef(W,B,D,E),E}function Y(c,r){if(0===c.totalWeight&&0===c.totalAdditiveWeight)return r;const D=c.animations[0],W=c.originalValue;let B=r;if(0===c.totalWeight&&c.totalAdditiveWeight>0)B.t(W);else if(1===c.animations.length){if(H.Quaternion.SlerpToRef(W,D.currentValue,Math.min(1,c.totalWeight),B),0===c.totalAdditiveWeight)return B}else if(c.animations.length>1){let D,t,u=1;if(c.totalWeight<1){const r=1-c.totalWeight;D=[],t=[],D.push(W),t.push(r)}else{if(2===c.animations.length&&(H.Quaternion.SlerpToRef(c.animations[0].currentValue,c.animations[1].currentValue,c.animations[1].weight/c.totalWeight,r),0===c.totalAdditiveWeight))return r;D=[],t=[],u=c.totalWeight}for(let r=0;r<c.animations.length;r++){const W=c.animations[r];D.push(W.currentValue),t.push(W.weight/u)}let a=0;for(let c=0;c<D.length;)c?(a+=t[c],H.Quaternion.SlerpToRef(B,D[c],t[c]/a,B),c++):(H.Quaternion.SlerpToRef(D[c],D[c+1],t[c+1]/(t[c]+t[c+1]),r),B=r,a=t[c]+t[c+1],c+=2)}for(let t=0;t<c.additiveAnimations.length;t++){const r=c.additiveAnimations[t];0!==r.weight&&(B.multiplyToRef(r.currentValue,H.TmpVectors.Quaternion[0]),H.Quaternion.SlerpToRef(B,H.TmpVectors.Quaternion[0],r.weight,B))}return B}var v,k,w=D(11924);v=w.b,(k=a.c)&&(k.prototype.copyAnimationRange=function(c,r,D){let B=arguments.length>3&&void 0!==arguments[3]&&arguments[3],t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new W.b(this.name,"_matrix",c.animations[0].framePerSecond,W.b.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const u=c.animations[0].getRange(r);if(!u)return!1;const a=u.from,H=u.to,x=c.animations[0].getKeys(),M=c.length,E=c.getParent(),m=this.getParent(),Y=B&&E&&M&&this.length&&M!==this.length,v=Y&&m&&E?m.length/E.length:1,k=B&&!m&&t&&(1!==t.x||1!==t.y||1!==t.z),w=this.animations[0].getKeys();let Z,J,q;for(let W=0,j=x.length;W<j;W++)Z=x[W],Z.frame>=a&&Z.frame<=H&&(B?(q=Z.value.clone(),Y?(J=q.getTranslation(),q.setTranslation(J.scaleInPlace(v))):k&&t?(J=q.getTranslation(),q.setTranslation(J.multiplyInPlace(t))):q=Z.value):q=Z.value,w.push({frame:Z.frame+D,value:q}));return this.animations[0].createRange(r,a+D,H+D),!0}),v&&(v.prototype._animate=function(c){if(!this.animationsEnabled)return;const r=M.e.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=r}this.deltaTime=void 0!==c?c:this.useConstantAnimationDeltaTime?16:(r-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=r;const D=this._activeAnimatables;if(0===D.length)return;this._animationTime+=this.deltaTime;const B=this._animationTime;for(let W=0;W<D.length;W++){const c=D[W];!c._animate(B)&&c.disposeOnEnd&&W--}!function(c){if(c._registeredForLateAnimationBindings.length){for(let r=0;r<c._registeredForLateAnimationBindings.length;r++){const D=c._registeredForLateAnimationBindings.data[r];for(const c in D._lateAnimationHolders){const r=D._lateAnimationHolders[c],B=r.animations[0],t=r.originalValue;if(void 0===t||null===t)continue;const u=W.b.AllowMatrixDecomposeForInterpolation&&t.m;let a=D[c];if(u)a=m(r);else if(void 0!==t.w)a=Y(r,a||H.Quaternion.Identity());else{let c=0,D=1;const u=B&&B._animationState.loopMode===W.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(r.totalWeight<1)a=u?t.clone?t.clone():t:B&&t.scale?t.scale(1-r.totalWeight):B?t*(1-r.totalWeight):t.clone?t.clone():t;else if(B){D=r.totalWeight;const W=B.weight/D;a=1!==W?B.currentValue.scale?B.currentValue.scale(W):B.currentValue*W:B.currentValue,u&&(a.addToRef?a.addToRef(t,a):a+=t),c=1}for(let W=c;W<r.animations.length;W++){const c=r.animations[W],B=c.weight/D;B&&(c.currentValue.scaleAndAddToRef?c.currentValue.scaleAndAddToRef(B,a):a+=c.currentValue*B)}for(let W=0;W<r.additiveAnimations.length;W++){const c=r.additiveAnimations[W],D=c.weight;D&&(c.currentValue.scaleAndAddToRef?c.currentValue.scaleAndAddToRef(D,a):a+=c.currentValue*D)}}D[c]=a}D._lateAnimationHolders={}}c._registeredForLateAnimationBindings.reset()}}(this)},v.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((c,r)=>c.playOrder-r.playOrder))},v.prototype.beginWeightedAnimation=function(c,r,D){let W=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,B=arguments.length>4?arguments[4]:void 0,t=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,u=arguments.length>6?arguments[6]:void 0,a=arguments.length>7?arguments[7]:void 0,H=arguments.length>8?arguments[8]:void 0,x=arguments.length>9?arguments[9]:void 0,M=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const E=this.beginAnimation(c,r,D,B,t,u,a,!1,H,x,M);return E.weight=W,E},v.prototype.beginAnimation=function(c,r,D,W){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,t=arguments.length>5?arguments[5]:void 0,u=arguments.length>6?arguments[6]:void 0,a=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],H=arguments.length>8?arguments[8]:void 0,x=arguments.length>9?arguments[9]:void 0,M=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(B<0){const c=r;r=D,D=c,B=-B}r>D&&(B=-B),a&&this.stopAnimation(c,void 0,H),u||(u=new E(this,c,r,D,W,B,t,void 0,x,M));const m=!H||H(c);if(c.animations&&m&&u.appendAnimations(c,c.animations),c.getAnimatables){const M=c.getAnimatables();for(let c=0;c<M.length;c++)this.beginAnimation(M[c],r,D,W,B,t,u,a,H,x)}return u.reset(),u},v.prototype.beginHierarchyAnimation=function(c,r,D,W,B){let t=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,u=arguments.length>6?arguments[6]:void 0,a=arguments.length>7?arguments[7]:void 0,H=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],x=arguments.length>9?arguments[9]:void 0,M=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const E=c.getDescendants(r),m=[];m.push(this.beginAnimation(c,D,W,B,t,u,a,H,x,void 0,M));for(const Y of E)m.push(this.beginAnimation(Y,D,W,B,t,u,a,H,x,void 0,M));return m},v.prototype.beginDirectAnimation=function(c,r,D,W,B){let t=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(t<0){const c=D;D=W,W=c,t=-t}return D>W&&(t=-t),new E(this,c,D,W,B,t,arguments.length>6?arguments[6]:void 0,r,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},v.prototype.beginDirectHierarchyAnimation=function(c,r,D,W,B,t,u,a,H){let x=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const M=c.getDescendants(r),E=[];E.push(this.beginDirectAnimation(c,D,W,B,t,u,a,H,x));for(const m of M)E.push(this.beginDirectAnimation(m,D,W,B,t,u,a,H,x));return E},v.prototype.getAnimatableByTarget=function(c){for(let r=0;r<this._activeAnimatables.length;r++)if(this._activeAnimatables[r].target===c)return this._activeAnimatables[r];return null},v.prototype.getAllAnimatablesByTarget=function(c){const r=[];for(let D=0;D<this._activeAnimatables.length;D++)this._activeAnimatables[D].target===c&&r.push(this._activeAnimatables[D]);return r},v.prototype.stopAnimation=function(c,r,D){const W=this.getAllAnimatablesByTarget(c);for(const B of W)B.stop(r,D)},v.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let c=0;c<this._activeAnimatables.length;c++)this._activeAnimatables[c].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const c of this.animationGroups)c.stop()});class Z{getClassName(){return"TargetedAnimation"}serialize(){const c={};return c.animation=this.animation.serialize(),c.targetId=this.target.id,c}}class J{get mask(){return this._mask}set mask(c){this._mask!==c&&(this._mask=c,this.syncWithMask(!0))}syncWithMask(){let c=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||c){this._numActiveAnimatables=0;for(let c=0;c<this._animatables.length;++c){const r=this._animatables[c];!this.mask||this.mask.disabled||this.mask.retainsTarget(r.target.name)?(this._numActiveAnimatables++,r.paused&&r.restart()):r.paused||r.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let c=0;c<this._animatables.length;++c){const r=this._animatables[c];this.mask.retainsTarget(r.target.name)||(r.stop(),this._animatables.splice(c,1),--c)}for(let c=0;c<this._targetedAnimations.length;c++){const r=this._targetedAnimations[c];this.mask.retainsTarget(r.target.name)||(this._targetedAnimations.splice(c,1),--c)}}}get from(){return this._from}set from(c){if(this._from!==c){this._from=c;for(let c=0;c<this._animatables.length;c++){this._animatables[c].fromFrame=this._from}}}get to(){return this._to}set to(c){if(this._to!==c){this._to=c;for(let c=0;c<this._animatables.length;c++){this._animatables[c].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(c){if(this._speedRatio!==c){this._speedRatio=c;for(let c=0;c<this._animatables.length;c++){this._animatables[c].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(c){if(this._loopAnimation!==c){this._loopAnimation=c;for(let c=0;c<this._animatables.length;c++){this._animatables[c].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(c){if(this._isAdditive!==c){this._isAdditive=c;for(let c=0;c<this._animatables.length;c++){this._animatables[c].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(c){this._weight!==c&&(this._weight=c,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(c){if(this._playOrder!==c&&(this._playOrder=c,this._animatables.length>0)){for(let c=0;c<this._animatables.length;c++)this._animatables[c].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(c){if(this._enableBlending!==c&&(this._enableBlending=c,null!==c))for(let r=0;r<this._targetedAnimations.length;++r)this._targetedAnimations[r].animation.enableBlending=c}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(c){if(this._blendingSpeed!==c&&(this._blendingSpeed=c,null!==c))for(let r=0;r<this._targetedAnimations.length;++r)this._targetedAnimations[r].animation.blendingSpeed=c}getLength(c,r){c=c??this._from;return((r=r??this._to)-c)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(c){let r=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],D=arguments.length>2&&void 0!==arguments[2]&&arguments[2],W=arguments.length>3?arguments[3]:void 0;if(0===c.length)return null;W=W??c[0].weight;let B=Number.MAX_VALUE,t=-Number.MAX_VALUE;if(D)for(const a of c)a.from<B&&(B=a.from),a.to>t&&(t=a.to);const u=new J(c[0].name+"_merged",c[0]._scene,W);for(const a of c){D&&a.normalize(B,t);for(const c of a.targetedAnimations)u.addTargetedAnimation(c.animation,c.target);r&&a.dispose()}return u}constructor(c){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,D=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,W=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=c,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new B.c,this.onAnimationLoopObservable=new B.c,this.onAnimationGroupLoopObservable=new B.c,this.onAnimationGroupEndObservable=new B.c,this.onAnimationGroupPauseObservable=new B.c,this.onAnimationGroupPlayObservable=new B.c,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=r||t.c.LastCreatedScene,this._weight=D,this._playOrder=W,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(c,r){const D=new Z;D.animation=c,D.target=r;const W=c.getKeys();return this._from>W[0].frame&&(this._from=W[0].frame),this._to<W[W.length-1].frame&&(this._to=W[W.length-1].frame),null!==this._enableBlending&&(c.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(c.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(D),this._shouldStart=!0,D}removeTargetedAnimation(c){for(let r=this._targetedAnimations.length-1;r>-1;r--){this._targetedAnimations[r].animation===c&&this._targetedAnimations.splice(r,1)}}normalize(){let c=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==c&&(c=this._from),null==r&&(r=this._to);for(let D=0;D<this._targetedAnimations.length;D++){const W=this._targetedAnimations[D].animation.getKeys(),B=W[0],t=W[W.length-1];if(B.frame>c){const r={frame:c,value:B.value,inTangent:B.inTangent,outTangent:B.outTangent,interpolation:B.interpolation};W.splice(0,0,r)}if(t.frame<r){const c={frame:r,value:t.value,inTangent:t.inTangent,outTangent:t.outTangent,interpolation:t.interpolation};W.push(c)}}return this._from=c,this._to=r,this}_processLoop(c,r,D){c.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(r),this._animationLoopFlags[D]||(this._animationLoopFlags[D]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let c=arguments.length>0&&void 0!==arguments[0]&&arguments[0],r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,D=arguments.length>2?arguments[2]:void 0,W=arguments.length>3?arguments[3]:void 0,B=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=c,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let t=0;t<this._targetedAnimations.length;t++){const u=this._targetedAnimations[t],a=this._scene.beginDirectAnimation(u.target,[u.animation],void 0!==D?D:this._from,void 0!==W?W:this._to,c,r,void 0,void 0,void 0!==B?B:this._isAdditive);a.weight=this._weight,a.playOrder=this._playOrder,a.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(u),this._checkAnimationGroupEnded(a)},this._processLoop(a,u,t),this._animatables.push(a)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=r,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let c=0;c<this._animatables.length;c++){this._animatables[c].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(c){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==c&&(this.loopAnimation=c),this.restart()):(this.stop(),this.start(c,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let c=0;c<this._animatables.length;c++){this._animatables[c].reset()}return this}restart(){if(!this._isStarted)return this;for(let c=0;c<this._animatables.length;c++){this._animatables[c].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let c=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const r=this._animatables.slice();for(let W=0;W<r.length;W++)r[W].stop(void 0,void 0,!0,c);let D=0;for(let W=0;W<this._scene._activeAnimatables.length;W++){const r=this._scene._activeAnimatables[W];r._runtimeAnimations.length>0?this._scene._activeAnimatables[D++]=r:c&&this._checkAnimationGroupEnded(r,c)}return this._scene._activeAnimatables.length=D,this._isStarted=!1,this}setWeightForAllAnimatables(c){for(let r=0;r<this._animatables.length;r++){this._animatables[r].weight=c}return this}syncAllAnimationsWith(c){for(let r=0;r<this._animatables.length;r++){this._animatables[r].syncWith(c)}return this}goToFrame(c){let r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let D=0;D<this._animatables.length;D++){this._animatables[D].goToFrame(c,r)}return this}getCurrentFrame(){var c;return(null===(c=this.animatables[0])||void 0===c?void 0:c.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const c=this._scene.animationGroups.indexOf(this);if(c>-1&&this._scene.animationGroups.splice(c,1),this._parentContainer){const c=this._parentContainer.animationGroups.indexOf(this);c>-1&&this._parentContainer.animationGroups.splice(c,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(c){let r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const D=this._animatables.indexOf(c);D>-1&&this._animatables.splice(D,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,r||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(c,r){let D=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const W=new J(c||this.name,this._scene,this._weight,this._playOrder);W._from=this.from,W._to=this.to,W._speedRatio=this.speedRatio,W._loopAnimation=this.loopAnimation,W._isAdditive=this.isAdditive,W._enableBlending=this.enableBlending,W._blendingSpeed=this.blendingSpeed,W.metadata=this.metadata,W.mask=this.mask;for(const B of this._targetedAnimations)W.addTargetedAnimation(D?B.animation.clone():B.animation,r?r(B.target):B.target);return W}serialize(){const c={};c.name=this.name,c.from=this.from,c.to=this.to,c.speedRatio=this.speedRatio,c.loopAnimation=this.loopAnimation,c.isAdditive=this.isAdditive,c.weight=this.weight,c.playOrder=this.playOrder,c.enableBlending=this.enableBlending,c.blendingSpeed=this.blendingSpeed,c.targetedAnimations=[];for(let r=0;r<this.targetedAnimations.length;r++){const D=this.targetedAnimations[r];c.targetedAnimations[r]=D.serialize()}return u.b&&u.b.HasTags(this)&&(c.tags=u.b.GetTags(this)),this.metadata&&(c.metadata=this.metadata),c}static Parse(c,r){const D=new J(c.name,r,c.weight,c.playOrder);for(let B=0;B<c.targetedAnimations.length;B++){const t=c.targetedAnimations[B],u=W.b.Parse(t.animation),a=t.targetId;if("influence"===t.animation.property){const c=r.getMorphTargetById(a);c&&D.addTargetedAnimation(u,c)}else{const c=r.getNodeById(a);null!=c&&D.addTargetedAnimation(u,c)}}return u.b&&u.b.AddTagsTo(D,c.tags),null!==c.from&&null!==c.to&&D.normalize(c.from,c.to),void 0!==c.speedRatio&&(D._speedRatio=c.speedRatio),void 0!==c.loopAnimation&&(D._loopAnimation=c.loopAnimation),void 0!==c.isAdditive&&(D._isAdditive=c.isAdditive),void 0!==c.weight&&(D._weight=c.weight),void 0!==c.playOrder&&(D._playOrder=c.playOrder),void 0!==c.enableBlending&&(D._enableBlending=c.enableBlending),void 0!==c.blendingSpeed&&(D._blendingSpeed=c.blendingSpeed),void 0!==c.metadata&&(D.metadata=c.metadata),D}static MakeAnimationAdditive(c,r,D){let B;B="object"===typeof r?r:{referenceFrame:r,range:D,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let t=c;B.cloneOriginalAnimationGroup&&(t=c.clone(B.clonedAnimationGroupName||t.name));const u=t.targetedAnimations;for(let a=0;a<u.length;a++){const c=u[a];c.animation=W.b.MakeAnimationAdditive(c.animation,B)}if(t.isAdditive=!0,B.clipKeys){let c=Number.MAX_VALUE,r=-Number.MAX_VALUE;const D=t.targetedAnimations;for(let W=0;W<D.length;W++){const B=D[W].animation.getKeys();c>B[0].frame&&(c=B[0].frame),r<B[B.length-1].frame&&(r=B[B.length-1].frame)}t._from=c,t._to=r}return t}static ClipKeys(c,r,D,W,B){const t=c.clone(W||c.name);return J.ClipKeysInPlace(t,r,D,B)}static ClipKeysInPlace(c,r,D,W){return J.ClipInPlace(c,r,D,W,!1)}static ClipFrames(c,r,D,W,B){const t=c.clone(W||c.name);return J.ClipFramesInPlace(t,r,D,B)}static ClipFramesInPlace(c,r,D,W){return J.ClipInPlace(c,r,D,W,!0)}static ClipInPlace(c,r,D,W){let B=arguments.length>4&&void 0!==arguments[4]&&arguments[4],t=Number.MAX_VALUE,u=-Number.MAX_VALUE;const a=c.targetedAnimations;for(let H=0;H<a.length;H++){const c=a[H],x=W?c.animation:c.animation.clone();B&&(x.createKeyForFrame(r),x.createKeyForFrame(D));const M=x.getKeys(),E=[];let m=Number.MAX_VALUE;for(let W=0;W<M.length;W++){const c=M[W];if(!B&&W>=r&&W<=D||B&&c.frame>=r&&c.frame<=D){const r={frame:c.frame,value:c.value.clone?c.value.clone():c.value,inTangent:c.inTangent,outTangent:c.outTangent,interpolation:c.interpolation,lockedTangent:c.lockedTangent};m===Number.MAX_VALUE&&(m=r.frame),r.frame-=m,E.push(r)}}0!==E.length?(t>E[0].frame&&(t=E[0].frame),u<E[E.length-1].frame&&(u=E[E.length-1].frame),x.setKeys(E,!0),c.animation=x):(a.splice(H,1),H--)}return c._from=t,c._to=u,c}getClassName(){return"AnimationGroup"}toString(c){let r="Name: "+this.name;return r+=", type: "+this.getClassName(),c&&(r+=", from: "+this._from,r+=", to: "+this._to,r+=", isStarted: "+this._isStarted,r+=", speedRatio: "+this._speedRatio,r+=", targetedAnimations length: "+this._targetedAnimations.length,r+=", animatables length: "+this._animatables),r}}}}]);