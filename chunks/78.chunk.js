"use strict";(self["3b8bnhi4gzj"]=self["3b8bnhi4gzj"]||[]).push([[78],{14946:(Z,h,V)=>{V.r(h),V.d(h,{AnimationGroup:()=>q,TargetedAnimation:()=>o});var v=V(12268),A=V(11566),H=V(11599),K=V(11776),d=V(13392),a=V(11729);class n{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(Z,h,V,A){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=h,this._target=Z,this._scene=V,this._host=A,this._activeTargets=[],h._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===v.c.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=a.Matrix.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const Z={frame:0,value:this._minValue};this._keys.splice(0,0,Z)}if(this._target instanceof Array){let Z=0;for(const h of this._target)this._preparePath(h,Z),this._getOriginalValues(Z),Z++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const H=h.getEvents();if(H&&H.length>0)for(const v of H)this._events.push(v._clone());this._enableBlending=Z&&Z.animationPropertiesOverride?Z.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(Z){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const V=this._animation.targetPropertyPath;if(V.length>1){let v=Z;for(let Z=0;Z<V.length-1;Z++){const h=V[Z];if(v=v[h],void 0===v)throw new Error(`Invalid property (${h}) in property path (${V.join(".")})`)}this._targetPath=V[V.length-1],this._activeTargets[h]=v}else this._targetPath=V[0],this._activeTargets[h]=Z;if(void 0===this._activeTargets[h][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${V.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let Z=0;for(const h of this._target)void 0!==this._originalValue[Z]&&this._setValue(h,this._activeTargets[Z],this._originalValue[Z],-1,Z),Z++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let Z=0;Z<this._events.length;Z++)this._events[Z].isDone=!1}isStopped(){return this._stopped}dispose(){const Z=this._animation.runtimeAnimations.indexOf(this);Z>-1&&this._animation.runtimeAnimations.splice(Z,1)}setValue(Z,h){if(this._targetIsArray)for(let V=0;V<this._target.length;V++){const v=this._target[V];this._setValue(v,this._activeTargets[V],Z,h,V)}else this._setValue(this._target,this._directTarget,Z,h,0)}_getOriginalValues(){let Z,h=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const V=this._activeTargets[h];Z=V.getLocalMatrix&&"_matrix"===this._targetPath?V.getLocalMatrix():V[this._targetPath],Z&&Z.clone?this._originalValue[h]=Z.clone():this._originalValue[h]=Z}_registerTargetForLateAnimationBinding(Z,h){const V=Z.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(V),V._lateAnimationHolders||(V._lateAnimationHolders={}),V._lateAnimationHolders[Z.targetPath]||(V._lateAnimationHolders[Z.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:h}),Z.isAdditive?(V._lateAnimationHolders[Z.targetPath].additiveAnimations.push(Z),V._lateAnimationHolders[Z.targetPath].totalAdditiveWeight+=Z.weight):(V._lateAnimationHolders[Z.targetPath].animations.push(Z),V._lateAnimationHolders[Z.targetPath].totalWeight+=Z.weight)}_setValue(Z,h,V,A,H){if(this._currentActiveTarget=h,this._weight=A,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const Z=h[this._targetPath];Z.clone?this._originalBlendValue=Z.clone():this._originalBlendValue=Z}this._originalBlendValue.m?v.c.AllowMatrixDecomposeForInterpolation?this._currentValue?a.Matrix.DecomposeLerpToRef(this._originalBlendValue,V,this._blendingFactor,this._currentValue):this._currentValue=a.Matrix.DecomposeLerp(this._originalBlendValue,V,this._blendingFactor):this._currentValue?a.Matrix.LerpToRef(this._originalBlendValue,V,this._blendingFactor,this._currentValue):this._currentValue=a.Matrix.Lerp(this._originalBlendValue,V,this._blendingFactor):this._currentValue=v.c._UniversalLerp(this._originalBlendValue,V,this._blendingFactor);const A=Z&&Z.animationPropertiesOverride?Z.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=A}else this._currentValue?this._currentValue.v?this._currentValue.v(V):this._currentValue=V:null!==V&&void 0!==V&&V.clone?this._currentValue=V.clone():this._currentValue=V;-1!==A?this._registerTargetForLateAnimationBinding(this,this._originalValue[H]):this._animationState.loopMode===v.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[H],h[this._targetPath]):h[this._targetPath]=this._originalValue[H]+this._currentValue:h[this._targetPath]=this._currentValue,Z.Vx&&Z.Vx(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(Z){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const V=this._animation.getKeys();Z<V[0].frame?Z=V[0].frame:Z>V[V.length-1].frame&&(Z=V[V.length-1].frame);const v=this._events;if(v.length)for(let H=0;H<v.length;H++)v[H].onlyOnce||(v[H].isDone=v[H].frame<Z);this._currentFrame=Z;const A=this._animation._interpolate(Z,this._animationState);this.setValue(A,h)}_prepareForSpeedRatioChange(Z){const h=this._previousElapsedTime*(this._animation.framePerSecond*Z)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-h}animate(Z,h,V,A,H){let K=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const d=this._animation,a=d.targetPropertyPath;if(!a||a.length<1)return this._stopped=!0,!1;let n,x=!0;const N=this._events;let D=0;if(this._coreRuntimeAnimation)D=V-h,n=this._coreRuntimeAnimation.currentFrame,this._currentFrame=n,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let K;(h<this._minFrame||h>this._maxFrame)&&(h=this._minFrame),(V<this._minFrame||V>this._maxFrame)&&(V=this._maxFrame),D=V-h;let a=Z*(d.framePerSecond*H)/1e3+this._absoluteFrameOffset,k=0,u=!1;const F=A&&this._animationState.loopMode===v.c.ANIMATIONLOOPMODE_YOYO;if(F){const Z=(a-h)/D,V=Math.sin(Z*Math.PI);a=Math.abs(V)*D+h;const v=V>=0?1:-1;this._yoyoDirection!==v&&(u=!0),this._yoyoDirection=v}if(this._previousElapsedTime=Z,this._previousAbsoluteFrame=a,!A&&V>=h&&(a>=D&&H>0||a<=0&&H<0))x=!1,k=d._getKeyValue(this._maxValue);else if(!A&&h>=V&&(a<=D&&H<0||a>=0&&H>0))x=!1,k=d._getKeyValue(this._minValue);else if(this._animationState.loopMode!==v.c.ANIMATIONLOOPMODE_CYCLE){const Z=V.toString()+h.toString();if(!this._offsetsCache[Z]){this._animationState.repeatCount=0,this._animationState.loopMode=v.c.ANIMATIONLOOPMODE_CYCLE;const A=d._interpolate(h,this._animationState),H=d._interpolate(V,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),d.dataType){case v.c.ANIMATIONTYPE_FLOAT:this._offsetsCache[Z]=H-A;break;case v.c.ANIMATIONTYPE_QUATERNION:case v.c.ANIMATIONTYPE_VECTOR3:case v.c.ANIMATIONTYPE_VECTOR2:case v.c.ANIMATIONTYPE_SIZE:case v.c.ANIMATIONTYPE_COLOR3:this._offsetsCache[Z]=H.rh(A)}this._highLimitsCache[Z]=H}k=this._highLimitsCache[Z],K=this._offsetsCache[Z]}if(void 0===K)switch(d.dataType){case v.c.ANIMATIONTYPE_FLOAT:K=0;break;case v.c.ANIMATIONTYPE_QUATERNION:K=v.g;break;case v.c.ANIMATIONTYPE_VECTOR3:K=v.p;break;case v.c.ANIMATIONTYPE_VECTOR2:K=v.m;break;case v.c.ANIMATIONTYPE_SIZE:K=v.i;break;case v.c.ANIMATIONTYPE_COLOR3:K=v.d;break;case v.c.ANIMATIONTYPE_COLOR4:K=v.e}if(this._host&&this._host.syncRoot){const Z=this._host.syncRoot;n=h+D*((Z.masterFrame-Z.fromFrame)/(Z.toFrame-Z.fromFrame))}else n=a>0&&h>V||a<0&&h<V?x&&0!==D?V+a%D:h:x&&0!==D?h+a%D:V;if(!F&&(H>0&&this.currentFrame>n||H<0&&this.currentFrame<n)||F&&u){this._onLoop();for(let Z=0;Z<N.length;Z++)N[Z].onlyOnce||(N[Z].isDone=!1);this._animationState.key=H>0?0:d.getKeys().length-1}this._currentFrame=n,this._animationState.repeatCount=0===D?0:a/D|0,this._animationState.highLimitValue=k,this._animationState.offsetValue=K}const k=d._interpolate(n,this._animationState);if(this.setValue(k,K),N.length)for(let v=0;v<N.length;v++)if(D>=0&&n>=N[v].frame&&N[v].frame>=h||D<0&&n<=N[v].frame&&N[v].frame<=h){const Z=N[v];Z.isDone||(Z.onlyOnce&&(N.splice(v,1),v--),Z.isDone=!0,Z.action(n))}return x||(this._stopped=!0),x}}var x=V(11588);class N{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(Z){this._weight=-1!==Z?Math.min(Math.max(Z,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(Z){for(let h=0;h<this._runtimeAnimations.length;h++){this._runtimeAnimations[h]._prepareForSpeedRatioChange(Z)}this._speedRatio=Z,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(Z,h){let V=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,H=arguments.length>4&&void 0!==arguments[4]&&arguments[4],K=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,d=arguments.length>6?arguments[6]:void 0,a=arguments.length>7?arguments[7]:void 0,n=arguments.length>8?arguments[8]:void 0,x=arguments.length>9&&void 0!==arguments[9]&&arguments[9],N=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=h,this.fromFrame=V,this.toFrame=v,this.loopAnimation=H,this.onAnimationEnd=d,this.onAnimationLoop=n,this.isAdditive=x,this.playOrder=N,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.qd=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new A.b,this.onAnimationLoopObservable=new A.b,this._scene=Z,a&&this.appendAnimations(h,a),this._speedRatio=K,Z._activeAnimatables.push(this)}syncWith(Z){if(this._syncRoot=Z,Z){const Z=this._scene._activeAnimatables.indexOf(this);Z>-1&&(this._scene._activeAnimatables.splice(Z,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(Z,h){for(let V=0;V<h.length;V++){const v=h[V],A=new n(Z,v,this._scene,this);A._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(A)}}getAnimationByTargetProperty(Z){const h=this._runtimeAnimations;for(let V=0;V<h.length;V++)if(h[V].animation.targetProperty===Z)return h[V].animation;return null}getRuntimeAnimationByTargetProperty(Z){const h=this._runtimeAnimations;for(let V=0;V<h.length;V++)if(h[V].animation.targetProperty===Z)return h[V];return null}reset(){const Z=this._runtimeAnimations;for(let h=0;h<Z.length;h++)Z[h].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(Z){const h=this._runtimeAnimations;for(let V=0;V<h.length;V++)h[V].animation.enableBlending=!0,h[V].animation.blendingSpeed=Z}disableBlending(){const Z=this._runtimeAnimations;for(let h=0;h<Z.length;h++)Z[h].animation.enableBlending=!1}goToFrame(Z){let h=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const V=this._runtimeAnimations;if(V[0]){const h=V[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??V[0].currentFrame;const v=0===this.speedRatio?0:(Z-this._frameToSyncFromJump)/h*1e3/this.speedRatio;this._manualJumpDelay=-v}for(let v=0;v<V.length;v++)V[v].goToFrame(Z,h?this._weight:-1);this._goToFrame=Z}get paused(){return this.qd}pause(){this.qd||(this.qd=!0)}restart(){this.qd=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(Z,h){let V=arguments.length>2&&void 0!==arguments[2]&&arguments[2],v=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(Z||h){const A=this._scene._activeAnimatables.indexOf(this);if(A>-1){const H=this._runtimeAnimations;for(let V=H.length-1;V>=0;V--){const v=H[V];Z&&v.animation.name!=Z||(h&&!h(v.target)||(v.dispose(),H.splice(V,1)))}0==H.length&&(V||this._scene._activeAnimatables.splice(A,1),v||this._raiseOnAnimationEnd())}}else{const Z=this._scene._activeAnimatables.indexOf(this);if(Z>-1){V||this._scene._activeAnimatables.splice(Z,1);const h=this._runtimeAnimations;for(let Z=0;Z<h.length;Z++)h[Z].dispose();this._runtimeAnimations.length=0,v||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((Z=>{this.onAnimationEndObservable.add((()=>{Z(this)}),void 0,void 0,this,!0)}))}_animate(Z){if(this.qd)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=Z),!0;if(null===this._localDelayOffset?(this._localDelayOffset=Z,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=Z-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let h=!1;const V=this._runtimeAnimations;let v;for(v=0;v<V.length;v++){const A=V[v].animate(Z-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);h=h||A}if(this.animationStarted=h,!h){if(this.disposeOnEnd)for(v=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(v,1),v=0;v<V.length;v++)V[v].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return h}}function D(Z){if(0===Z.totalWeight&&0===Z.totalAdditiveWeight)return Z.originalValue;let h=1;const V=a.TmpVectors.Ch[0],v=a.TmpVectors.Ch[1],A=a.TmpVectors.Quaternion[0];let H=0;const K=Z.animations[0],d=Z.originalValue;let n=1,x=!1;if(Z.totalWeight<1)n=1-Z.totalWeight,d.decompose(v,A,V);else{if(H=1,h=Z.totalWeight,n=K.weight/h,1==n){if(!Z.totalAdditiveWeight)return K.currentValue;x=!0}K.currentValue.decompose(v,A,V)}if(!x){v.scaleInPlace(n),V.scaleInPlace(n),A.scaleInPlace(n);for(let K=H;K<Z.animations.length;K++){const H=Z.animations[K];if(0===H.weight)continue;n=H.weight/h;const d=a.TmpVectors.Ch[2],x=a.TmpVectors.Ch[3],N=a.TmpVectors.Quaternion[1];H.currentValue.decompose(x,N,d),x.scaleAndAddToRef(n,v),N.scaleAndAddToRef(a.Quaternion.Dot(A,N)>0?n:-n,A),d.scaleAndAddToRef(n,V)}A.normalize()}for(let D=0;D<Z.additiveAnimations.length;D++){const h=Z.additiveAnimations[D];if(0===h.weight)continue;const H=a.TmpVectors.Ch[2],K=a.TmpVectors.Ch[3],d=a.TmpVectors.Quaternion[1];h.currentValue.decompose(K,d,H),K.multiplyToRef(v,K),a.Ch.LerpToRef(v,K,h.weight,v),A.multiplyToRef(d,d),a.Quaternion.SlerpToRef(A,d,h.weight,A),H.scaleAndAddToRef(h.weight,V)}const N=K?K._animationState.workValue:a.TmpVectors.Matrix[0].clone();return a.Matrix.ComposeToRef(v,A,V,N),N}function k(Z,h){if(0===Z.totalWeight&&0===Z.totalAdditiveWeight)return h;const V=Z.animations[0],v=Z.originalValue;let A=h;if(0===Z.totalWeight&&Z.totalAdditiveWeight>0)A.v(v);else if(1===Z.animations.length){if(a.Quaternion.SlerpToRef(v,V.currentValue,Math.min(1,Z.totalWeight),A),0===Z.totalAdditiveWeight)return A}else if(Z.animations.length>1){let V,H,K=1;if(Z.totalWeight<1){const h=1-Z.totalWeight;V=[],H=[],V.push(v),H.push(h)}else{if(2===Z.animations.length&&(a.Quaternion.SlerpToRef(Z.animations[0].currentValue,Z.animations[1].currentValue,Z.animations[1].weight/Z.totalWeight,h),0===Z.totalAdditiveWeight))return h;V=[],H=[],K=Z.totalWeight}for(let h=0;h<Z.animations.length;h++){const v=Z.animations[h];V.push(v.currentValue),H.push(v.weight/K)}let d=0;for(let Z=0;Z<V.length;)Z?(d+=H[Z],a.Quaternion.SlerpToRef(A,V[Z],H[Z]/d,A),Z++):(a.Quaternion.SlerpToRef(V[Z],V[Z+1],H[Z+1]/(H[Z]+H[Z+1]),h),A=h,d=H[Z]+H[Z+1],Z+=2)}for(let H=0;H<Z.additiveAnimations.length;H++){const h=Z.additiveAnimations[H];0!==h.weight&&(A.multiplyToRef(h.currentValue,a.TmpVectors.Quaternion[0]),a.Quaternion.SlerpToRef(A,a.TmpVectors.Quaternion[0],h.weight,A))}return A}var u,F,b=V(11983);u=b.e,(F=d.c)&&(F.prototype.copyAnimationRange=function(Z,h,V){let A=arguments.length>3&&void 0!==arguments[3]&&arguments[3],H=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new v.c(this.name,"_matrix",Z.animations[0].framePerSecond,v.c.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const K=Z.animations[0].getRange(h);if(!K)return!1;const d=K.from,a=K.to,n=Z.animations[0].getKeys(),x=Z.length,N=Z.getParent(),D=this.getParent(),k=A&&N&&x&&this.length&&x!==this.length,u=k&&D&&N?D.length/N.length:1,F=A&&!D&&H&&(1!==H.x||1!==H.y||1!==H.z),b=this.animations[0].getKeys();let o,q,X;for(let v=0,E=n.length;v<E;v++)o=n[v],o.frame>=d&&o.frame<=a&&(A?(X=o.value.clone(),k?(q=X.getTranslation(),X.setTranslation(q.scaleInPlace(u))):F&&H?(q=X.getTranslation(),X.setTranslation(q.multiplyInPlace(H))):X=o.value):X=o.value,b.push({frame:o.frame+V,value:X}));return this.animations[0].createRange(h,d+V,a+V),!0}),u&&(u.prototype._animate=function(Z){if(!this.animationsEnabled)return;const h=x.e.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=h}this.deltaTime=void 0!==Z?Z:this.useConstantAnimationDeltaTime?16:(h-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=h;const V=this._activeAnimatables;if(0===V.length)return;this._animationTime+=this.deltaTime;const A=this._animationTime;for(let v=0;v<V.length;v++){const Z=V[v];!Z._animate(A)&&Z.disposeOnEnd&&v--}!function(Z){if(Z._registeredForLateAnimationBindings.length){for(let h=0;h<Z._registeredForLateAnimationBindings.length;h++){const V=Z._registeredForLateAnimationBindings.data[h];for(const Z in V._lateAnimationHolders){const h=V._lateAnimationHolders[Z],A=h.animations[0],H=h.originalValue;if(void 0===H||null===H)continue;const K=v.c.AllowMatrixDecomposeForInterpolation&&H.m;let d=V[Z];if(K)d=D(h);else if(void 0!==H.w)d=k(h,d||a.Quaternion.Identity());else{let Z=0,V=1;const K=A&&A._animationState.loopMode===v.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(h.totalWeight<1)d=K?H.clone?H.clone():H:A&&H.scale?H.scale(1-h.totalWeight):A?H*(1-h.totalWeight):H.clone?H.clone():H;else if(A){V=h.totalWeight;const v=A.weight/V;d=1!==v?A.currentValue.scale?A.currentValue.scale(v):A.currentValue*v:A.currentValue,K&&(d.addToRef?d.addToRef(H,d):d+=H),Z=1}for(let v=Z;v<h.animations.length;v++){const Z=h.animations[v],A=Z.weight/V;A&&(Z.currentValue.scaleAndAddToRef?Z.currentValue.scaleAndAddToRef(A,d):d+=Z.currentValue*A)}for(let v=0;v<h.additiveAnimations.length;v++){const Z=h.additiveAnimations[v],V=Z.weight;V&&(Z.currentValue.scaleAndAddToRef?Z.currentValue.scaleAndAddToRef(V,d):d+=Z.currentValue*V)}}V[Z]=d}V._lateAnimationHolders={}}Z._registeredForLateAnimationBindings.reset()}}(this)},u.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((Z,h)=>Z.playOrder-h.playOrder))},u.prototype.beginWeightedAnimation=function(Z,h,V){let v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,A=arguments.length>4?arguments[4]:void 0,H=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,K=arguments.length>6?arguments[6]:void 0,d=arguments.length>7?arguments[7]:void 0,a=arguments.length>8?arguments[8]:void 0,n=arguments.length>9?arguments[9]:void 0,x=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const N=this.beginAnimation(Z,h,V,A,H,K,d,!1,a,n,x);return N.weight=v,N},u.prototype.beginAnimation=function(Z,h,V,v){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,H=arguments.length>5?arguments[5]:void 0,K=arguments.length>6?arguments[6]:void 0,d=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],a=arguments.length>8?arguments[8]:void 0,n=arguments.length>9?arguments[9]:void 0,x=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(A<0){const Z=h;h=V,V=Z,A=-A}h>V&&(A=-A),d&&this.stopAnimation(Z,void 0,a),K||(K=new N(this,Z,h,V,v,A,H,void 0,n,x));const D=!a||a(Z);if(Z.animations&&D&&K.appendAnimations(Z,Z.animations),Z.getAnimatables){const x=Z.getAnimatables();for(let Z=0;Z<x.length;Z++)this.beginAnimation(x[Z],h,V,v,A,H,K,d,a,n)}return K.reset(),K},u.prototype.beginHierarchyAnimation=function(Z,h,V,v,A){let H=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,K=arguments.length>6?arguments[6]:void 0,d=arguments.length>7?arguments[7]:void 0,a=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],n=arguments.length>9?arguments[9]:void 0,x=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const N=Z.getDescendants(h),D=[];D.push(this.beginAnimation(Z,V,v,A,H,K,d,a,n,void 0,x));for(const k of N)D.push(this.beginAnimation(k,V,v,A,H,K,d,a,n,void 0,x));return D},u.prototype.beginDirectAnimation=function(Z,h,V,v,A){let H=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(H<0){const Z=V;V=v,v=Z,H=-H}return V>v&&(H=-H),new N(this,Z,V,v,A,H,arguments.length>6?arguments[6]:void 0,h,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},u.prototype.beginDirectHierarchyAnimation=function(Z,h,V,v,A,H,K,d,a){let n=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const x=Z.getDescendants(h),N=[];N.push(this.beginDirectAnimation(Z,V,v,A,H,K,d,a,n));for(const D of x)N.push(this.beginDirectAnimation(D,V,v,A,H,K,d,a,n));return N},u.prototype.getAnimatableByTarget=function(Z){for(let h=0;h<this._activeAnimatables.length;h++)if(this._activeAnimatables[h].target===Z)return this._activeAnimatables[h];return null},u.prototype.getAllAnimatablesByTarget=function(Z){const h=[];for(let V=0;V<this._activeAnimatables.length;V++)this._activeAnimatables[V].target===Z&&h.push(this._activeAnimatables[V]);return h},u.prototype.stopAnimation=function(Z,h,V){const v=this.getAllAnimatablesByTarget(Z);for(const A of v)A.stop(h,V)},u.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let Z=0;Z<this._activeAnimatables.length;Z++)this._activeAnimatables[Z].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const Z of this.animationGroups)Z.stop()});class o{getClassName(){return"TargetedAnimation"}serialize(){const Z={};return Z.animation=this.animation.serialize(),Z.targetId=this.target.id,Z}}class q{get mask(){return this._mask}set mask(Z){this._mask!==Z&&(this._mask=Z,this.syncWithMask(!0))}syncWithMask(){let Z=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||Z){this._numActiveAnimatables=0;for(let Z=0;Z<this._animatables.length;++Z){const h=this._animatables[Z];!this.mask||this.mask.disabled||this.mask.retainsTarget(h.target.name)?(this._numActiveAnimatables++,h.paused&&h.restart()):h.paused||h.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let Z=0;Z<this._animatables.length;++Z){const h=this._animatables[Z];this.mask.retainsTarget(h.target.name)||(h.stop(),this._animatables.splice(Z,1),--Z)}for(let Z=0;Z<this._targetedAnimations.length;Z++){const h=this._targetedAnimations[Z];this.mask.retainsTarget(h.target.name)||(this._targetedAnimations.splice(Z,1),--Z)}}}get from(){return this._from}set from(Z){if(this._from!==Z){this._from=Z;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].fromFrame=this._from}}}get to(){return this._to}set to(Z){if(this._to!==Z){this._to=Z;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(Z){if(this._speedRatio!==Z){this._speedRatio=Z;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(Z){if(this._loopAnimation!==Z){this._loopAnimation=Z;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(Z){if(this._isAdditive!==Z){this._isAdditive=Z;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(Z){this._weight!==Z&&(this._weight=Z,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(Z){if(this._playOrder!==Z&&(this._playOrder=Z,this._animatables.length>0)){for(let Z=0;Z<this._animatables.length;Z++)this._animatables[Z].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(Z){if(this._enableBlending!==Z&&(this._enableBlending=Z,null!==Z))for(let h=0;h<this._targetedAnimations.length;++h)this._targetedAnimations[h].animation.enableBlending=Z}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(Z){if(this._blendingSpeed!==Z&&(this._blendingSpeed=Z,null!==Z))for(let h=0;h<this._targetedAnimations.length;++h)this._targetedAnimations[h].animation.blendingSpeed=Z}getLength(Z,h){Z=Z??this._from;return((h=h??this._to)-Z)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(Z){let h=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],V=arguments.length>2&&void 0!==arguments[2]&&arguments[2],v=arguments.length>3?arguments[3]:void 0;if(0===Z.length)return null;v=v??Z[0].weight;let A=Number.MAX_VALUE,H=-Number.MAX_VALUE;if(V)for(const d of Z)d.from<A&&(A=d.from),d.to>H&&(H=d.to);const K=new q(Z[0].name+"_merged",Z[0]._scene,v);for(const d of Z){V&&d.normalize(A,H);for(const Z of d.targetedAnimations)K.addTargetedAnimation(Z.animation,Z.target);h&&d.dispose()}return K}constructor(Z){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,V=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=Z,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new A.b,this.onAnimationLoopObservable=new A.b,this.onAnimationGroupLoopObservable=new A.b,this.onAnimationGroupEndObservable=new A.b,this.onAnimationGroupPauseObservable=new A.b,this.onAnimationGroupPlayObservable=new A.b,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=h||H.b.LastCreatedScene,this._weight=V,this._playOrder=v,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(Z,h){const V=new o;V.animation=Z,V.target=h;const v=Z.getKeys();return this._from>v[0].frame&&(this._from=v[0].frame),this._to<v[v.length-1].frame&&(this._to=v[v.length-1].frame),null!==this._enableBlending&&(Z.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(Z.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(V),this._shouldStart=!0,V}removeTargetedAnimation(Z){for(let h=this._targetedAnimations.length-1;h>-1;h--){this._targetedAnimations[h].animation===Z&&this._targetedAnimations.splice(h,1)}}normalize(){let Z=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==Z&&(Z=this._from),null==h&&(h=this._to);for(let V=0;V<this._targetedAnimations.length;V++){const v=this._targetedAnimations[V].animation.getKeys(),A=v[0],H=v[v.length-1];if(A.frame>Z){const h={frame:Z,value:A.value,inTangent:A.inTangent,outTangent:A.outTangent,interpolation:A.interpolation};v.splice(0,0,h)}if(H.frame<h){const Z={frame:h,value:H.value,inTangent:H.inTangent,outTangent:H.outTangent,interpolation:H.interpolation};v.push(Z)}}return this._from=Z,this._to=h,this}_processLoop(Z,h,V){Z.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(h),this._animationLoopFlags[V]||(this._animationLoopFlags[V]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let Z=arguments.length>0&&void 0!==arguments[0]&&arguments[0],h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,V=arguments.length>2?arguments[2]:void 0,v=arguments.length>3?arguments[3]:void 0,A=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=Z,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let H=0;H<this._targetedAnimations.length;H++){const K=this._targetedAnimations[H],d=this._scene.beginDirectAnimation(K.target,[K.animation],void 0!==V?V:this._from,void 0!==v?v:this._to,Z,h,void 0,void 0,void 0!==A?A:this._isAdditive);d.weight=this._weight,d.playOrder=this._playOrder,d.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(K),this._checkAnimationGroupEnded(d)},this._processLoop(d,K,H),this._animatables.push(d)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=h,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(Z){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==Z&&(this.loopAnimation=Z),this.restart()):(this.stop(),this.start(Z,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].reset()}return this}restart(){if(!this._isStarted)return this;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let Z=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const h=this._animatables.slice();for(let v=0;v<h.length;v++)h[v].stop(void 0,void 0,!0,Z);let V=0;for(let v=0;v<this._scene._activeAnimatables.length;v++){const h=this._scene._activeAnimatables[v];h._runtimeAnimations.length>0?this._scene._activeAnimatables[V++]=h:Z&&this._checkAnimationGroupEnded(h,Z)}return this._scene._activeAnimatables.length=V,this._isStarted=!1,this}setWeightForAllAnimatables(Z){for(let h=0;h<this._animatables.length;h++){this._animatables[h].weight=Z}return this}syncAllAnimationsWith(Z){for(let h=0;h<this._animatables.length;h++){this._animatables[h].syncWith(Z)}return this}goToFrame(Z){let h=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let V=0;V<this._animatables.length;V++){this._animatables[V].goToFrame(Z,h)}return this}getCurrentFrame(){var Z;return(null===(Z=this.animatables[0])||void 0===Z?void 0:Z.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const Z=this._scene.animationGroups.indexOf(this);if(Z>-1&&this._scene.animationGroups.splice(Z,1),this._parentContainer){const Z=this._parentContainer.animationGroups.indexOf(this);Z>-1&&this._parentContainer.animationGroups.splice(Z,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(Z){let h=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const V=this._animatables.indexOf(Z);V>-1&&this._animatables.splice(V,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,h||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(Z,h){let V=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const v=new q(Z||this.name,this._scene,this._weight,this._playOrder);v._from=this.from,v._to=this.to,v._speedRatio=this.speedRatio,v._loopAnimation=this.loopAnimation,v._isAdditive=this.isAdditive,v._enableBlending=this.enableBlending,v._blendingSpeed=this.blendingSpeed,v.metadata=this.metadata,v.mask=this.mask;for(const A of this._targetedAnimations)v.addTargetedAnimation(V?A.animation.clone():A.animation,h?h(A.target):A.target);return v}serialize(){const Z={};Z.name=this.name,Z.from=this.from,Z.to=this.to,Z.speedRatio=this.speedRatio,Z.loopAnimation=this.loopAnimation,Z.isAdditive=this.isAdditive,Z.weight=this.weight,Z.playOrder=this.playOrder,Z.enableBlending=this.enableBlending,Z.blendingSpeed=this.blendingSpeed,Z.targetedAnimations=[];for(let h=0;h<this.targetedAnimations.length;h++){const V=this.targetedAnimations[h];Z.targetedAnimations[h]=V.serialize()}return K.d&&K.d.HasTags(this)&&(Z.tags=K.d.GetTags(this)),this.metadata&&(Z.metadata=this.metadata),Z}static Parse(Z,h){const V=new q(Z.name,h,Z.weight,Z.playOrder);for(let A=0;A<Z.targetedAnimations.length;A++){const H=Z.targetedAnimations[A],K=v.c.Parse(H.animation),d=H.targetId;if("influence"===H.animation.property){const Z=h.getMorphTargetById(d);Z&&V.addTargetedAnimation(K,Z)}else{const Z=h.getNodeById(d);null!=Z&&V.addTargetedAnimation(K,Z)}}return K.d&&K.d.AddTagsTo(V,Z.tags),null!==Z.from&&null!==Z.to&&V.normalize(Z.from,Z.to),void 0!==Z.speedRatio&&(V._speedRatio=Z.speedRatio),void 0!==Z.loopAnimation&&(V._loopAnimation=Z.loopAnimation),void 0!==Z.isAdditive&&(V._isAdditive=Z.isAdditive),void 0!==Z.weight&&(V._weight=Z.weight),void 0!==Z.playOrder&&(V._playOrder=Z.playOrder),void 0!==Z.enableBlending&&(V._enableBlending=Z.enableBlending),void 0!==Z.blendingSpeed&&(V._blendingSpeed=Z.blendingSpeed),void 0!==Z.metadata&&(V.metadata=Z.metadata),V}static MakeAnimationAdditive(Z,h,V){let A;A="object"===typeof h?h:{referenceFrame:h,range:V,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let H=Z;A.cloneOriginalAnimationGroup&&(H=Z.clone(A.clonedAnimationGroupName||H.name));const K=H.targetedAnimations;for(let d=0;d<K.length;d++){const Z=K[d];Z.animation=v.c.MakeAnimationAdditive(Z.animation,A)}if(H.isAdditive=!0,A.clipKeys){let Z=Number.MAX_VALUE,h=-Number.MAX_VALUE;const V=H.targetedAnimations;for(let v=0;v<V.length;v++){const A=V[v].animation.getKeys();Z>A[0].frame&&(Z=A[0].frame),h<A[A.length-1].frame&&(h=A[A.length-1].frame)}H._from=Z,H._to=h}return H}static ClipKeys(Z,h,V,v,A){const H=Z.clone(v||Z.name);return q.ClipKeysInPlace(H,h,V,A)}static ClipKeysInPlace(Z,h,V,v){return q.ClipInPlace(Z,h,V,v,!1)}static ClipFrames(Z,h,V,v,A){const H=Z.clone(v||Z.name);return q.ClipFramesInPlace(H,h,V,A)}static ClipFramesInPlace(Z,h,V,v){return q.ClipInPlace(Z,h,V,v,!0)}static ClipInPlace(Z,h,V,v){let A=arguments.length>4&&void 0!==arguments[4]&&arguments[4],H=Number.MAX_VALUE,K=-Number.MAX_VALUE;const d=Z.targetedAnimations;for(let a=0;a<d.length;a++){const Z=d[a],n=v?Z.animation:Z.animation.clone();A&&(n.createKeyForFrame(h),n.createKeyForFrame(V));const x=n.getKeys(),N=[];let D=Number.MAX_VALUE;for(let v=0;v<x.length;v++){const Z=x[v];if(!A&&v>=h&&v<=V||A&&Z.frame>=h&&Z.frame<=V){const h={frame:Z.frame,value:Z.value.clone?Z.value.clone():Z.value,inTangent:Z.inTangent,outTangent:Z.outTangent,interpolation:Z.interpolation,lockedTangent:Z.lockedTangent};D===Number.MAX_VALUE&&(D=h.frame),h.frame-=D,N.push(h)}}0!==N.length?(H>N[0].frame&&(H=N[0].frame),K<N[N.length-1].frame&&(K=N[N.length-1].frame),n.setKeys(N,!0),Z.animation=n):(d.splice(a,1),a--)}return Z._from=H,Z._to=K,Z}getClassName(){return"AnimationGroup"}toString(Z){let h="Name: "+this.name;return h+=", type: "+this.getClassName(),Z&&(h+=", from: "+this._from,h+=", to: "+this._to,h+=", isStarted: "+this._isStarted,h+=", speedRatio: "+this._speedRatio,h+=", targetedAnimations length: "+this._targetedAnimations.length,h+=", animatables length: "+this._animatables),h}}}}]);