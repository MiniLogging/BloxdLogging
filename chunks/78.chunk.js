"use strict";(self["1xyrlsr8vb9"]=self["1xyrlsr8vb9"]||[]).push([[78],{15305:(I,O,C)=>{C.r(O),C.d(O,{AnimationGroup:()=>r,TargetedAnimation:()=>h});var j=C(12759),K=C(12088),i=C(12132),y=C(12300),S=C(13806),U=C(12272);class p{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(I,O,C,K){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=O,this._target=I,this._scene=C,this._host=K,this._activeTargets=[],O._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===j.d.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=U.Matrix.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const I={frame:0,value:this._minValue};this._keys.splice(0,0,I)}if(this._target instanceof Array){let I=0;for(const O of this._target)this._preparePath(O,I),this._getOriginalValues(I),I++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const i=O.getEvents();if(i&&i.length>0)for(const j of i)this._events.push(j._clone());this._enableBlending=I&&I.animationPropertiesOverride?I.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(I){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const C=this._animation.targetPropertyPath;if(C.length>1){let j=I;for(let I=0;I<C.length-1;I++){const O=C[I];if(j=j[O],void 0===j)throw new Error(`Invalid property (${O}) in property path (${C.join(".")})`)}this._targetPath=C[C.length-1],this._activeTargets[O]=j}else this._targetPath=C[0],this._activeTargets[O]=I;if(void 0===this._activeTargets[O][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${C.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let I=0;for(const O of this._target)void 0!==this._originalValue[I]&&this._setValue(O,this._activeTargets[I],this._originalValue[I],-1,I),I++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let I=0;I<this._events.length;I++)this._events[I].isDone=!1}isStopped(){return this._stopped}dispose(){const I=this._animation.runtimeAnimations.indexOf(this);I>-1&&this._animation.runtimeAnimations.splice(I,1)}setValue(I,O){if(this._targetIsArray)for(let C=0;C<this._target.length;C++){const j=this._target[C];this._setValue(j,this._activeTargets[C],I,O,C)}else this._setValue(this._target,this._directTarget,I,O,0)}_getOriginalValues(){let I,O=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const C=this._activeTargets[O];I=C.getLocalMatrix&&"_matrix"===this._targetPath?C.getLocalMatrix():C[this._targetPath],I&&I.clone?this._originalValue[O]=I.clone():this._originalValue[O]=I}_registerTargetForLateAnimationBinding(I,O){const C=I.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(C),C._lateAnimationHolders||(C._lateAnimationHolders={}),C._lateAnimationHolders[I.targetPath]||(C._lateAnimationHolders[I.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:O}),I.isAdditive?(C._lateAnimationHolders[I.targetPath].additiveAnimations.push(I),C._lateAnimationHolders[I.targetPath].totalAdditiveWeight+=I.weight):(C._lateAnimationHolders[I.targetPath].animations.push(I),C._lateAnimationHolders[I.targetPath].totalWeight+=I.weight)}_setValue(I,O,C,K,i){if(this._currentActiveTarget=O,this._weight=K,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const I=O[this._targetPath];I.clone?this._originalBlendValue=I.clone():this._originalBlendValue=I}this._originalBlendValue.m?j.d.AllowMatrixDecomposeForInterpolation?this._currentValue?U.Matrix.DecomposeLerpToRef(this._originalBlendValue,C,this._blendingFactor,this._currentValue):this._currentValue=U.Matrix.DecomposeLerp(this._originalBlendValue,C,this._blendingFactor):this._currentValue?U.Matrix.LerpToRef(this._originalBlendValue,C,this._blendingFactor,this._currentValue):this._currentValue=U.Matrix.Lerp(this._originalBlendValue,C,this._blendingFactor):this._currentValue=j.d._UniversalLerp(this._originalBlendValue,C,this._blendingFactor);const K=I&&I.animationPropertiesOverride?I.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=K}else this._currentValue?this._currentValue.K?this._currentValue.K(C):this._currentValue=C:null!==C&&void 0!==C&&C.clone?this._currentValue=C.clone():this._currentValue=C;-1!==K?this._registerTargetForLateAnimationBinding(this,this._originalValue[i]):this._animationState.loopMode===j.d.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[i],O[this._targetPath]):O[this._targetPath]=this._originalValue[i]+this._currentValue:O[this._targetPath]=this._currentValue,I.zp&&I.zp(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(I){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const C=this._animation.getKeys();I<C[0].frame?I=C[0].frame:I>C[C.length-1].frame&&(I=C[C.length-1].frame);const j=this._events;if(j.length)for(let i=0;i<j.length;i++)j[i].onlyOnce||(j[i].isDone=j[i].frame<I);this._currentFrame=I;const K=this._animation._interpolate(I,this._animationState);this.setValue(K,O)}_prepareForSpeedRatioChange(I){const O=this._previousElapsedTime*(this._animation.framePerSecond*I)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-O}animate(I,O,C,K,i){let y=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const S=this._animation,U=S.targetPropertyPath;if(!U||U.length<1)return this._stopped=!0,!1;let p,N=!0;const Q=this._events;let s=0;if(this._coreRuntimeAnimation)s=C-O,p=this._coreRuntimeAnimation.currentFrame,this._currentFrame=p,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let y;(O<this._minFrame||O>this._maxFrame)&&(O=this._minFrame),(C<this._minFrame||C>this._maxFrame)&&(C=this._maxFrame),s=C-O;let U=I*(S.framePerSecond*i)/1e3+this._absoluteFrameOffset,Z=0,q=!1;const mI=K&&this._animationState.loopMode===j.d.ANIMATIONLOOPMODE_YOYO;if(mI){const I=(U-O)/s,C=Math.sin(I*Math.PI);U=Math.abs(C)*s+O;const j=C>=0?1:-1;this._yoyoDirection!==j&&(q=!0),this._yoyoDirection=j}if(this._previousElapsedTime=I,this._previousAbsoluteFrame=U,!K&&C>=O&&(U>=s&&i>0||U<=0&&i<0))N=!1,Z=S._getKeyValue(this._maxValue);else if(!K&&O>=C&&(U<=s&&i<0||U>=0&&i>0))N=!1,Z=S._getKeyValue(this._minValue);else if(this._animationState.loopMode!==j.d.ANIMATIONLOOPMODE_CYCLE){const I=C.toString()+O.toString();if(!this._offsetsCache[I]){this._animationState.repeatCount=0,this._animationState.loopMode=j.d.ANIMATIONLOOPMODE_CYCLE;const K=S._interpolate(O,this._animationState),i=S._interpolate(C,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),S.dataType){case j.d.ANIMATIONTYPE_FLOAT:this._offsetsCache[I]=i-K;break;case j.d.ANIMATIONTYPE_QUATERNION:case j.d.ANIMATIONTYPE_VECTOR3:case j.d.ANIMATIONTYPE_VECTOR2:case j.d.ANIMATIONTYPE_SIZE:case j.d.ANIMATIONTYPE_COLOR3:this._offsetsCache[I]=i.EO(K)}this._highLimitsCache[I]=i}Z=this._highLimitsCache[I],y=this._offsetsCache[I]}if(void 0===y)switch(S.dataType){case j.d.ANIMATIONTYPE_FLOAT:y=0;break;case j.d.ANIMATIONTYPE_QUATERNION:y=j.i;break;case j.d.ANIMATIONTYPE_VECTOR3:y=j.o;break;case j.d.ANIMATIONTYPE_VECTOR2:y=j.m;break;case j.d.ANIMATIONTYPE_SIZE:y=j.k;break;case j.d.ANIMATIONTYPE_COLOR3:y=j.e;break;case j.d.ANIMATIONTYPE_COLOR4:y=j.f}if(this._host&&this._host.syncRoot){const I=this._host.syncRoot;p=O+s*((I.masterFrame-I.fromFrame)/(I.toFrame-I.fromFrame))}else p=U>0&&O>C||U<0&&O<C?N&&0!==s?C+U%s:O:N&&0!==s?O+U%s:C;if(!mI&&(i>0&&this.currentFrame>p||i<0&&this.currentFrame<p)||mI&&q){this._onLoop();for(let I=0;I<Q.length;I++)Q[I].onlyOnce||(Q[I].isDone=!1);this._animationState.key=i>0?0:S.getKeys().length-1}this._currentFrame=p,this._animationState.repeatCount=0===s?0:U/s|0,this._animationState.highLimitValue=Z,this._animationState.offsetValue=y}const Z=S._interpolate(p,this._animationState);if(this.setValue(Z,y),Q.length)for(let j=0;j<Q.length;j++)if(s>=0&&p>=Q[j].frame&&Q[j].frame>=O||s<0&&p<=Q[j].frame&&Q[j].frame<=O){const I=Q[j];I.isDone||(I.onlyOnce&&(Q.splice(j,1),j--),I.isDone=!0,I.action(p))}return N||(this._stopped=!0),N}}var N=C(12118);class Q{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(I){this._weight=-1!==I?Math.min(Math.max(I,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(I){for(let O=0;O<this._runtimeAnimations.length;O++){this._runtimeAnimations[O]._prepareForSpeedRatioChange(I)}this._speedRatio=I,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(I,O){let C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,j=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,i=arguments.length>4&&void 0!==arguments[4]&&arguments[4],y=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,S=arguments.length>6?arguments[6]:void 0,U=arguments.length>7?arguments[7]:void 0,p=arguments.length>8?arguments[8]:void 0,N=arguments.length>9&&void 0!==arguments[9]&&arguments[9],Q=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=O,this.fromFrame=C,this.toFrame=j,this.loopAnimation=i,this.onAnimationEnd=S,this.onAnimationLoop=p,this.isAdditive=N,this.playOrder=Q,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.Ry=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new K.c,this.onAnimationLoopObservable=new K.c,this._scene=I,U&&this.appendAnimations(O,U),this._speedRatio=y,I._activeAnimatables.push(this)}syncWith(I){if(this._syncRoot=I,I){const I=this._scene._activeAnimatables.indexOf(this);I>-1&&(this._scene._activeAnimatables.splice(I,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(I,O){for(let C=0;C<O.length;C++){const j=O[C],K=new p(I,j,this._scene,this);K._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(K)}}getAnimationByTargetProperty(I){const O=this._runtimeAnimations;for(let C=0;C<O.length;C++)if(O[C].animation.targetProperty===I)return O[C].animation;return null}getRuntimeAnimationByTargetProperty(I){const O=this._runtimeAnimations;for(let C=0;C<O.length;C++)if(O[C].animation.targetProperty===I)return O[C];return null}reset(){const I=this._runtimeAnimations;for(let O=0;O<I.length;O++)I[O].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(I){const O=this._runtimeAnimations;for(let C=0;C<O.length;C++)O[C].animation.enableBlending=!0,O[C].animation.blendingSpeed=I}disableBlending(){const I=this._runtimeAnimations;for(let O=0;O<I.length;O++)I[O].animation.enableBlending=!1}goToFrame(I){let O=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const C=this._runtimeAnimations;if(C[0]){const O=C[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??C[0].currentFrame;const j=0===this.speedRatio?0:(I-this._frameToSyncFromJump)/O*1e3/this.speedRatio;this._manualJumpDelay=-j}for(let j=0;j<C.length;j++)C[j].goToFrame(I,O?this._weight:-1);this._goToFrame=I}get paused(){return this.Ry}pause(){this.Ry||(this.Ry=!0)}restart(){this.Ry=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(I,O){let C=arguments.length>2&&void 0!==arguments[2]&&arguments[2],j=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(I||O){const K=this._scene._activeAnimatables.indexOf(this);if(K>-1){const i=this._runtimeAnimations;for(let C=i.length-1;C>=0;C--){const j=i[C];I&&j.animation.name!=I||(O&&!O(j.target)||(j.dispose(),i.splice(C,1)))}0==i.length&&(C||this._scene._activeAnimatables.splice(K,1),j||this._raiseOnAnimationEnd())}}else{const I=this._scene._activeAnimatables.indexOf(this);if(I>-1){C||this._scene._activeAnimatables.splice(I,1);const O=this._runtimeAnimations;for(let I=0;I<O.length;I++)O[I].dispose();this._runtimeAnimations.length=0,j||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((I=>{this.onAnimationEndObservable.add((()=>{I(this)}),void 0,void 0,this,!0)}))}_animate(I){if(this.Ry)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=I),!0;if(null===this._localDelayOffset?(this._localDelayOffset=I,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=I-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let O=!1;const C=this._runtimeAnimations;let j;for(j=0;j<C.length;j++){const K=C[j].animate(I-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);O=O||K}if(this.animationStarted=O,!O){if(this.disposeOnEnd)for(j=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(j,1),j=0;j<C.length;j++)C[j].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return O}}function s(I){if(0===I.totalWeight&&0===I.totalAdditiveWeight)return I.originalValue;let O=1;const C=U.TmpVectors.mC[0],j=U.TmpVectors.mC[1],K=U.TmpVectors.Quaternion[0];let i=0;const y=I.animations[0],S=I.originalValue;let p=1,N=!1;if(I.totalWeight<1)p=1-I.totalWeight,S.decompose(j,K,C);else{if(i=1,O=I.totalWeight,p=y.weight/O,1==p){if(!I.totalAdditiveWeight)return y.currentValue;N=!0}y.currentValue.decompose(j,K,C)}if(!N){j.scaleInPlace(p),C.scaleInPlace(p),K.scaleInPlace(p);for(let y=i;y<I.animations.length;y++){const i=I.animations[y];if(0===i.weight)continue;p=i.weight/O;const S=U.TmpVectors.mC[2],N=U.TmpVectors.mC[3],Q=U.TmpVectors.Quaternion[1];i.currentValue.decompose(N,Q,S),N.scaleAndAddToRef(p,j),Q.scaleAndAddToRef(U.Quaternion.Dot(K,Q)>0?p:-p,K),S.scaleAndAddToRef(p,C)}K.normalize()}for(let s=0;s<I.additiveAnimations.length;s++){const O=I.additiveAnimations[s];if(0===O.weight)continue;const i=U.TmpVectors.mC[2],y=U.TmpVectors.mC[3],S=U.TmpVectors.Quaternion[1];O.currentValue.decompose(y,S,i),y.multiplyToRef(j,y),U.mC.LerpToRef(j,y,O.weight,j),K.multiplyToRef(S,S),U.Quaternion.SlerpToRef(K,S,O.weight,K),i.scaleAndAddToRef(O.weight,C)}const Q=y?y._animationState.workValue:U.TmpVectors.Matrix[0].clone();return U.Matrix.ComposeToRef(j,K,C,Q),Q}function Z(I,O){if(0===I.totalWeight&&0===I.totalAdditiveWeight)return O;const C=I.animations[0],j=I.originalValue;let K=O;if(0===I.totalWeight&&I.totalAdditiveWeight>0)K.K(j);else if(1===I.animations.length){if(U.Quaternion.SlerpToRef(j,C.currentValue,Math.min(1,I.totalWeight),K),0===I.totalAdditiveWeight)return K}else if(I.animations.length>1){let C,i,y=1;if(I.totalWeight<1){const O=1-I.totalWeight;C=[],i=[],C.push(j),i.push(O)}else{if(2===I.animations.length&&(U.Quaternion.SlerpToRef(I.animations[0].currentValue,I.animations[1].currentValue,I.animations[1].weight/I.totalWeight,O),0===I.totalAdditiveWeight))return O;C=[],i=[],y=I.totalWeight}for(let O=0;O<I.animations.length;O++){const j=I.animations[O];C.push(j.currentValue),i.push(j.weight/y)}let S=0;for(let I=0;I<C.length;)I?(S+=i[I],U.Quaternion.SlerpToRef(K,C[I],i[I]/S,K),I++):(U.Quaternion.SlerpToRef(C[I],C[I+1],i[I+1]/(i[I]+i[I+1]),O),K=O,S=i[I]+i[I+1],I+=2)}for(let i=0;i<I.additiveAnimations.length;i++){const O=I.additiveAnimations[i];0!==O.weight&&(K.multiplyToRef(O.currentValue,U.TmpVectors.Quaternion[0]),U.Quaternion.SlerpToRef(K,U.TmpVectors.Quaternion[0],O.weight,K))}return K}var q,mI,E=C(12487);q=E.b,(mI=S.b)&&(mI.prototype.copyAnimationRange=function(I,O,C){let K=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new j.d(this.name,"_matrix",I.animations[0].framePerSecond,j.d.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const y=I.animations[0].getRange(O);if(!y)return!1;const S=y.from,U=y.to,p=I.animations[0].getKeys(),N=I.length,Q=I.getParent(),s=this.getParent(),Z=K&&Q&&N&&this.length&&N!==this.length,q=Z&&s&&Q?s.length/Q.length:1,mI=K&&!s&&i&&(1!==i.x||1!==i.y||1!==i.z),E=this.animations[0].getKeys();let h,r,W;for(let j=0,Y=p.length;j<Y;j++)h=p[j],h.frame>=S&&h.frame<=U&&(K?(W=h.value.clone(),Z?(r=W.getTranslation(),W.setTranslation(r.scaleInPlace(q))):mI&&i?(r=W.getTranslation(),W.setTranslation(r.multiplyInPlace(i))):W=h.value):W=h.value,E.push({frame:h.frame+C,value:W}));return this.animations[0].createRange(O,S+C,U+C),!0}),q&&(q.prototype._animate=function(I){if(!this.animationsEnabled)return;const O=N.c.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=O}this.deltaTime=void 0!==I?I:this.useConstantAnimationDeltaTime?16:(O-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=O;const C=this._activeAnimatables;if(0===C.length)return;this._animationTime+=this.deltaTime;const K=this._animationTime;for(let j=0;j<C.length;j++){const I=C[j];!I._animate(K)&&I.disposeOnEnd&&j--}!function(I){if(I._registeredForLateAnimationBindings.length){for(let O=0;O<I._registeredForLateAnimationBindings.length;O++){const C=I._registeredForLateAnimationBindings.data[O];for(const I in C._lateAnimationHolders){const O=C._lateAnimationHolders[I],K=O.animations[0],i=O.originalValue;if(void 0===i||null===i)continue;const y=j.d.AllowMatrixDecomposeForInterpolation&&i.m;let S=C[I];if(y)S=s(O);else if(void 0!==i.w)S=Z(O,S||U.Quaternion.Identity());else{let I=0,C=1;const y=K&&K._animationState.loopMode===j.d.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(O.totalWeight<1)S=y?i.clone?i.clone():i:K&&i.scale?i.scale(1-O.totalWeight):K?i*(1-O.totalWeight):i.clone?i.clone():i;else if(K){C=O.totalWeight;const j=K.weight/C;S=1!==j?K.currentValue.scale?K.currentValue.scale(j):K.currentValue*j:K.currentValue,y&&(S.addToRef?S.addToRef(i,S):S+=i),I=1}for(let j=I;j<O.animations.length;j++){const I=O.animations[j],K=I.weight/C;K&&(I.currentValue.scaleAndAddToRef?I.currentValue.scaleAndAddToRef(K,S):S+=I.currentValue*K)}for(let j=0;j<O.additiveAnimations.length;j++){const I=O.additiveAnimations[j],C=I.weight;C&&(I.currentValue.scaleAndAddToRef?I.currentValue.scaleAndAddToRef(C,S):S+=I.currentValue*C)}}C[I]=S}C._lateAnimationHolders={}}I._registeredForLateAnimationBindings.reset()}}(this)},q.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((I,O)=>I.playOrder-O.playOrder))},q.prototype.beginWeightedAnimation=function(I,O,C){let j=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,K=arguments.length>4?arguments[4]:void 0,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,y=arguments.length>6?arguments[6]:void 0,S=arguments.length>7?arguments[7]:void 0,U=arguments.length>8?arguments[8]:void 0,p=arguments.length>9?arguments[9]:void 0,N=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const Q=this.beginAnimation(I,O,C,K,i,y,S,!1,U,p,N);return Q.weight=j,Q},q.prototype.beginAnimation=function(I,O,C,j){let K=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,i=arguments.length>5?arguments[5]:void 0,y=arguments.length>6?arguments[6]:void 0,S=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],U=arguments.length>8?arguments[8]:void 0,p=arguments.length>9?arguments[9]:void 0,N=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(K<0){const I=O;O=C,C=I,K=-K}O>C&&(K=-K),S&&this.stopAnimation(I,void 0,U),y||(y=new Q(this,I,O,C,j,K,i,void 0,p,N));const s=!U||U(I);if(I.animations&&s&&y.appendAnimations(I,I.animations),I.getAnimatables){const N=I.getAnimatables();for(let I=0;I<N.length;I++)this.beginAnimation(N[I],O,C,j,K,i,y,S,U,p)}return y.reset(),y},q.prototype.beginHierarchyAnimation=function(I,O,C,j,K){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,y=arguments.length>6?arguments[6]:void 0,S=arguments.length>7?arguments[7]:void 0,U=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],p=arguments.length>9?arguments[9]:void 0,N=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const Q=I.getDescendants(O),s=[];s.push(this.beginAnimation(I,C,j,K,i,y,S,U,p,void 0,N));for(const Z of Q)s.push(this.beginAnimation(Z,C,j,K,i,y,S,U,p,void 0,N));return s},q.prototype.beginDirectAnimation=function(I,O,C,j,K){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(i<0){const I=C;C=j,j=I,i=-i}return C>j&&(i=-i),new Q(this,I,C,j,K,i,arguments.length>6?arguments[6]:void 0,O,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},q.prototype.beginDirectHierarchyAnimation=function(I,O,C,j,K,i,y,S,U){let p=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const N=I.getDescendants(O),Q=[];Q.push(this.beginDirectAnimation(I,C,j,K,i,y,S,U,p));for(const s of N)Q.push(this.beginDirectAnimation(s,C,j,K,i,y,S,U,p));return Q},q.prototype.getAnimatableByTarget=function(I){for(let O=0;O<this._activeAnimatables.length;O++)if(this._activeAnimatables[O].target===I)return this._activeAnimatables[O];return null},q.prototype.getAllAnimatablesByTarget=function(I){const O=[];for(let C=0;C<this._activeAnimatables.length;C++)this._activeAnimatables[C].target===I&&O.push(this._activeAnimatables[C]);return O},q.prototype.stopAnimation=function(I,O,C){const j=this.getAllAnimatablesByTarget(I);for(const K of j)K.stop(O,C)},q.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let I=0;I<this._activeAnimatables.length;I++)this._activeAnimatables[I].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const I of this.animationGroups)I.stop()});class h{getClassName(){return"TargetedAnimation"}serialize(){const I={};return I.animation=this.animation.serialize(),I.targetId=this.target.id,I}}class r{get mask(){return this._mask}set mask(I){this._mask!==I&&(this._mask=I,this.syncWithMask(!0))}syncWithMask(){let I=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||I){this._numActiveAnimatables=0;for(let I=0;I<this._animatables.length;++I){const O=this._animatables[I];!this.mask||this.mask.disabled||this.mask.retainsTarget(O.target.name)?(this._numActiveAnimatables++,O.paused&&O.restart()):O.paused||O.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let I=0;I<this._animatables.length;++I){const O=this._animatables[I];this.mask.retainsTarget(O.target.name)||(O.stop(),this._animatables.splice(I,1),--I)}for(let I=0;I<this._targetedAnimations.length;I++){const O=this._targetedAnimations[I];this.mask.retainsTarget(O.target.name)||(this._targetedAnimations.splice(I,1),--I)}}}get from(){return this._from}set from(I){if(this._from!==I){this._from=I;for(let I=0;I<this._animatables.length;I++){this._animatables[I].fromFrame=this._from}}}get to(){return this._to}set to(I){if(this._to!==I){this._to=I;for(let I=0;I<this._animatables.length;I++){this._animatables[I].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(I){if(this._speedRatio!==I){this._speedRatio=I;for(let I=0;I<this._animatables.length;I++){this._animatables[I].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(I){if(this._loopAnimation!==I){this._loopAnimation=I;for(let I=0;I<this._animatables.length;I++){this._animatables[I].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(I){if(this._isAdditive!==I){this._isAdditive=I;for(let I=0;I<this._animatables.length;I++){this._animatables[I].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(I){this._weight!==I&&(this._weight=I,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(I){if(this._playOrder!==I&&(this._playOrder=I,this._animatables.length>0)){for(let I=0;I<this._animatables.length;I++)this._animatables[I].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(I){if(this._enableBlending!==I&&(this._enableBlending=I,null!==I))for(let O=0;O<this._targetedAnimations.length;++O)this._targetedAnimations[O].animation.enableBlending=I}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(I){if(this._blendingSpeed!==I&&(this._blendingSpeed=I,null!==I))for(let O=0;O<this._targetedAnimations.length;++O)this._targetedAnimations[O].animation.blendingSpeed=I}getLength(I,O){I=I??this._from;return((O=O??this._to)-I)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(I){let O=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],C=arguments.length>2&&void 0!==arguments[2]&&arguments[2],j=arguments.length>3?arguments[3]:void 0;if(0===I.length)return null;j=j??I[0].weight;let K=Number.MAX_VALUE,i=-Number.MAX_VALUE;if(C)for(const S of I)S.from<K&&(K=S.from),S.to>i&&(i=S.to);const y=new r(I[0].name+"_merged",I[0]._scene,j);for(const S of I){C&&S.normalize(K,i);for(const I of S.targetedAnimations)y.addTargetedAnimation(I.animation,I.target);O&&S.dispose()}return y}constructor(I){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,j=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=I,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new K.c,this.onAnimationLoopObservable=new K.c,this.onAnimationGroupLoopObservable=new K.c,this.onAnimationGroupEndObservable=new K.c,this.onAnimationGroupPauseObservable=new K.c,this.onAnimationGroupPlayObservable=new K.c,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=O||i.e.LastCreatedScene,this._weight=C,this._playOrder=j,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(I,O){const C=new h;C.animation=I,C.target=O;const j=I.getKeys();return this._from>j[0].frame&&(this._from=j[0].frame),this._to<j[j.length-1].frame&&(this._to=j[j.length-1].frame),null!==this._enableBlending&&(I.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(I.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(C),this._shouldStart=!0,C}removeTargetedAnimation(I){for(let O=this._targetedAnimations.length-1;O>-1;O--){this._targetedAnimations[O].animation===I&&this._targetedAnimations.splice(O,1)}}normalize(){let I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==I&&(I=this._from),null==O&&(O=this._to);for(let C=0;C<this._targetedAnimations.length;C++){const j=this._targetedAnimations[C].animation.getKeys(),K=j[0],i=j[j.length-1];if(K.frame>I){const O={frame:I,value:K.value,inTangent:K.inTangent,outTangent:K.outTangent,interpolation:K.interpolation};j.splice(0,0,O)}if(i.frame<O){const I={frame:O,value:i.value,inTangent:i.inTangent,outTangent:i.outTangent,interpolation:i.interpolation};j.push(I)}}return this._from=I,this._to=O,this}_processLoop(I,O,C){I.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(O),this._animationLoopFlags[C]||(this._animationLoopFlags[C]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let I=arguments.length>0&&void 0!==arguments[0]&&arguments[0],O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,C=arguments.length>2?arguments[2]:void 0,j=arguments.length>3?arguments[3]:void 0,K=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=I,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let i=0;i<this._targetedAnimations.length;i++){const y=this._targetedAnimations[i],S=this._scene.beginDirectAnimation(y.target,[y.animation],void 0!==C?C:this._from,void 0!==j?j:this._to,I,O,void 0,void 0,void 0!==K?K:this._isAdditive);S.weight=this._weight,S.playOrder=this._playOrder,S.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(y),this._checkAnimationGroupEnded(S)},this._processLoop(S,y,i),this._animatables.push(S)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=O,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let I=0;I<this._animatables.length;I++){this._animatables[I].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(I){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==I&&(this.loopAnimation=I),this.restart()):(this.stop(),this.start(I,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let I=0;I<this._animatables.length;I++){this._animatables[I].reset()}return this}restart(){if(!this._isStarted)return this;for(let I=0;I<this._animatables.length;I++){this._animatables[I].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let I=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const O=this._animatables.slice();for(let j=0;j<O.length;j++)O[j].stop(void 0,void 0,!0,I);let C=0;for(let j=0;j<this._scene._activeAnimatables.length;j++){const O=this._scene._activeAnimatables[j];O._runtimeAnimations.length>0?this._scene._activeAnimatables[C++]=O:I&&this._checkAnimationGroupEnded(O,I)}return this._scene._activeAnimatables.length=C,this._isStarted=!1,this}setWeightForAllAnimatables(I){for(let O=0;O<this._animatables.length;O++){this._animatables[O].weight=I}return this}syncAllAnimationsWith(I){for(let O=0;O<this._animatables.length;O++){this._animatables[O].syncWith(I)}return this}goToFrame(I){let O=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let C=0;C<this._animatables.length;C++){this._animatables[C].goToFrame(I,O)}return this}getCurrentFrame(){var I;return(null===(I=this.animatables[0])||void 0===I?void 0:I.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const I=this._scene.animationGroups.indexOf(this);if(I>-1&&this._scene.animationGroups.splice(I,1),this._parentContainer){const I=this._parentContainer.animationGroups.indexOf(this);I>-1&&this._parentContainer.animationGroups.splice(I,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(I){let O=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const C=this._animatables.indexOf(I);C>-1&&this._animatables.splice(C,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,O||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(I,O){let C=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const j=new r(I||this.name,this._scene,this._weight,this._playOrder);j._from=this.from,j._to=this.to,j._speedRatio=this.speedRatio,j._loopAnimation=this.loopAnimation,j._isAdditive=this.isAdditive,j._enableBlending=this.enableBlending,j._blendingSpeed=this.blendingSpeed,j.metadata=this.metadata,j.mask=this.mask;for(const K of this._targetedAnimations)j.addTargetedAnimation(C?K.animation.clone():K.animation,O?O(K.target):K.target);return j}serialize(){const I={};I.name=this.name,I.from=this.from,I.to=this.to,I.speedRatio=this.speedRatio,I.loopAnimation=this.loopAnimation,I.isAdditive=this.isAdditive,I.weight=this.weight,I.playOrder=this.playOrder,I.enableBlending=this.enableBlending,I.blendingSpeed=this.blendingSpeed,I.targetedAnimations=[];for(let O=0;O<this.targetedAnimations.length;O++){const C=this.targetedAnimations[O];I.targetedAnimations[O]=C.serialize()}return y.d&&y.d.HasTags(this)&&(I.tags=y.d.GetTags(this)),this.metadata&&(I.metadata=this.metadata),I}static Parse(I,O){const C=new r(I.name,O,I.weight,I.playOrder);for(let K=0;K<I.targetedAnimations.length;K++){const i=I.targetedAnimations[K],y=j.d.Parse(i.animation),S=i.targetId;if("influence"===i.animation.property){const I=O.getMorphTargetById(S);I&&C.addTargetedAnimation(y,I)}else{const I=O.getNodeById(S);null!=I&&C.addTargetedAnimation(y,I)}}return y.d&&y.d.AddTagsTo(C,I.tags),null!==I.from&&null!==I.to&&C.normalize(I.from,I.to),void 0!==I.speedRatio&&(C._speedRatio=I.speedRatio),void 0!==I.loopAnimation&&(C._loopAnimation=I.loopAnimation),void 0!==I.isAdditive&&(C._isAdditive=I.isAdditive),void 0!==I.weight&&(C._weight=I.weight),void 0!==I.playOrder&&(C._playOrder=I.playOrder),void 0!==I.enableBlending&&(C._enableBlending=I.enableBlending),void 0!==I.blendingSpeed&&(C._blendingSpeed=I.blendingSpeed),void 0!==I.metadata&&(C.metadata=I.metadata),C}static MakeAnimationAdditive(I,O,C){let K;K="object"===typeof O?O:{referenceFrame:O,range:C,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let i=I;K.cloneOriginalAnimationGroup&&(i=I.clone(K.clonedAnimationGroupName||i.name));const y=i.targetedAnimations;for(let S=0;S<y.length;S++){const I=y[S];I.animation=j.d.MakeAnimationAdditive(I.animation,K)}if(i.isAdditive=!0,K.clipKeys){let I=Number.MAX_VALUE,O=-Number.MAX_VALUE;const C=i.targetedAnimations;for(let j=0;j<C.length;j++){const K=C[j].animation.getKeys();I>K[0].frame&&(I=K[0].frame),O<K[K.length-1].frame&&(O=K[K.length-1].frame)}i._from=I,i._to=O}return i}static ClipKeys(I,O,C,j,K){const i=I.clone(j||I.name);return r.ClipKeysInPlace(i,O,C,K)}static ClipKeysInPlace(I,O,C,j){return r.ClipInPlace(I,O,C,j,!1)}static ClipFrames(I,O,C,j,K){const i=I.clone(j||I.name);return r.ClipFramesInPlace(i,O,C,K)}static ClipFramesInPlace(I,O,C,j){return r.ClipInPlace(I,O,C,j,!0)}static ClipInPlace(I,O,C,j){let K=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=Number.MAX_VALUE,y=-Number.MAX_VALUE;const S=I.targetedAnimations;for(let U=0;U<S.length;U++){const I=S[U],p=j?I.animation:I.animation.clone();K&&(p.createKeyForFrame(O),p.createKeyForFrame(C));const N=p.getKeys(),Q=[];let s=Number.MAX_VALUE;for(let j=0;j<N.length;j++){const I=N[j];if(!K&&j>=O&&j<=C||K&&I.frame>=O&&I.frame<=C){const O={frame:I.frame,value:I.value.clone?I.value.clone():I.value,inTangent:I.inTangent,outTangent:I.outTangent,interpolation:I.interpolation,lockedTangent:I.lockedTangent};s===Number.MAX_VALUE&&(s=O.frame),O.frame-=s,Q.push(O)}}0!==Q.length?(i>Q[0].frame&&(i=Q[0].frame),y<Q[Q.length-1].frame&&(y=Q[Q.length-1].frame),p.setKeys(Q,!0),I.animation=p):(S.splice(U,1),U--)}return I._from=i,I._to=y,I}getClassName(){return"AnimationGroup"}toString(I){let O="Name: "+this.name;return O+=", type: "+this.getClassName(),I&&(O+=", from: "+this._from,O+=", to: "+this._to,O+=", isStarted: "+this._isStarted,O+=", speedRatio: "+this._speedRatio,O+=", targetedAnimations length: "+this._targetedAnimations.length,O+=", animatables length: "+this._animatables),O}}}}]);