"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[78],{14104:(P,Q,O)=>{O.r(Q),O.d(Q,{FlowGraphForLoopBlock:()=>R});var b=O(12922),F=O(12871),g=O(696),m=O(12900),q=O(12867);class R extends b.b{constructor(P){super(P),this.startIndex=this.registerDataInput("startIndex",F.d,0),this.endIndex=this.registerDataInput("endIndex",F.d),this.step=this.registerDataInput("step",F.o,1),this.index=this.registerDataOutput("index",F.h,new q.c((0,m.o)((null===P||void 0===P?void 0:P.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(P){var Q;const O=(0,m.o)(this.startIndex.getValue(P)),b=this.step.getValue(P);let F=(0,m.o)(this.endIndex.getValue(P));for(let g=O;g<F&&(this.index.setValue(new q.c(g),P),this.executionFlow._activateSignal(P),F=(0,m.o)(this.endIndex.getValue(P)),!(g>R.MaxLoopIterations*b));g+=b);null!==(Q=this.config)&&void 0!==Q&&Q.incrementIndexWhenLoopDone&&this.index.setValue(new q.c((0,m.o)(this.index.getValue(P))+b),P),this.completed._activateSignal(P)}getClassName(){return"FlowGraphForLoopBlock"}}R.MaxLoopIterations=1e3,(0,g.f)("FlowGraphForLoopBlock",R)}}]);