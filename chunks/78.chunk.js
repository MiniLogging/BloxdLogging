"use strict";(self.g111kvdsqxc=self.g111kvdsqxc||[]).push([[78],{14419:(K,H,M)=>{M.r(H),M.d(H,{AnimationGroup:()=>B,TargetedAnimation:()=>S});var q=M(11811),w=M(11102),u=M(11143),y=M(11327),h=M(12920),W=M(11290);class I{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(K,H,M,w){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=H,this._target=K,this._scene=M,this._host=w,this._activeTargets=[],H._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===q.d.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=W.Matrix.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const K={frame:0,value:this._minValue};this._keys.splice(0,0,K)}if(this._target instanceof Array){let K=0;for(const H of this._target)this._preparePath(H,K),this._getOriginalValues(K),K++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const u=H.getEvents();if(u&&u.length>0)for(const q of u)this._events.push(q._clone());this._enableBlending=K&&K.animationPropertiesOverride?K.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(K){let H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const M=this._animation.targetPropertyPath;if(M.length>1){let q=K;for(let K=0;K<M.length-1;K++){const H=M[K];if(q=q[H],void 0===q)throw new Error(`Invalid property (${H}) in property path (${M.join(".")})`)}this._targetPath=M[M.length-1],this._activeTargets[H]=q}else this._targetPath=M[0],this._activeTargets[H]=K;if(void 0===this._activeTargets[H][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${M.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let K=0;for(const H of this._target)void 0!==this._originalValue[K]&&this._setValue(H,this._activeTargets[K],this._originalValue[K],-1,K),K++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let K=0;K<this._events.length;K++)this._events[K].isDone=!1}isStopped(){return this._stopped}dispose(){const K=this._animation.runtimeAnimations.indexOf(this);K>-1&&this._animation.runtimeAnimations.splice(K,1)}setValue(K,H){if(this._targetIsArray)for(let M=0;M<this._target.length;M++){const q=this._target[M];this._setValue(q,this._activeTargets[M],K,H,M)}else this._setValue(this._target,this._directTarget,K,H,0)}_getOriginalValues(){let K,H=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const M=this._activeTargets[H];K=M.getLocalMatrix&&"_matrix"===this._targetPath?M.getLocalMatrix():M[this._targetPath],K&&K.clone?this._originalValue[H]=K.clone():this._originalValue[H]=K}_registerTargetForLateAnimationBinding(K,H){const M=K.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(M),M._lateAnimationHolders||(M._lateAnimationHolders={}),M._lateAnimationHolders[K.targetPath]||(M._lateAnimationHolders[K.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:H}),K.isAdditive?(M._lateAnimationHolders[K.targetPath].additiveAnimations.push(K),M._lateAnimationHolders[K.targetPath].totalAdditiveWeight+=K.weight):(M._lateAnimationHolders[K.targetPath].animations.push(K),M._lateAnimationHolders[K.targetPath].totalWeight+=K.weight)}_setValue(K,H,M,w,u){if(this._currentActiveTarget=H,this._weight=w,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const K=H[this._targetPath];K.clone?this._originalBlendValue=K.clone():this._originalBlendValue=K}this._originalBlendValue.m?q.d.AllowMatrixDecomposeForInterpolation?this._currentValue?W.Matrix.DecomposeLerpToRef(this._originalBlendValue,M,this._blendingFactor,this._currentValue):this._currentValue=W.Matrix.DecomposeLerp(this._originalBlendValue,M,this._blendingFactor):this._currentValue?W.Matrix.LerpToRef(this._originalBlendValue,M,this._blendingFactor,this._currentValue):this._currentValue=W.Matrix.Lerp(this._originalBlendValue,M,this._blendingFactor):this._currentValue=q.d._UniversalLerp(this._originalBlendValue,M,this._blendingFactor);const w=K&&K.animationPropertiesOverride?K.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=w}else this._currentValue?this._currentValue.q?this._currentValue.q(M):this._currentValue=M:null!==M&&void 0!==M&&M.clone?this._currentValue=M.clone():this._currentValue=M;-1!==w?this._registerTargetForLateAnimationBinding(this,this._originalValue[u]):this._animationState.loopMode===q.d.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[u],H[this._targetPath]):H[this._targetPath]=this._originalValue[u]+this._currentValue:H[this._targetPath]=this._currentValue,K.rI&&K.rI(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(K){let H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const M=this._animation.getKeys();K<M[0].frame?K=M[0].frame:K>M[M.length-1].frame&&(K=M[M.length-1].frame);const q=this._events;if(q.length)for(let u=0;u<q.length;u++)q[u].onlyOnce||(q[u].isDone=q[u].frame<K);this._currentFrame=K;const w=this._animation._interpolate(K,this._animationState);this.setValue(w,H)}_prepareForSpeedRatioChange(K){const H=this._previousElapsedTime*(this._animation.framePerSecond*K)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-H}animate(K,H,M,w,u){let y=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const h=this._animation,W=h.targetPropertyPath;if(!W||W.length<1)return this._stopped=!0,!1;let I,f=!0;const z=this._events;let G=0;if(this._coreRuntimeAnimation)G=M-H,I=this._coreRuntimeAnimation.currentFrame,this._currentFrame=I,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let y;(H<this._minFrame||H>this._maxFrame)&&(H=this._minFrame),(M<this._minFrame||M>this._maxFrame)&&(M=this._maxFrame),G=M-H;let W=K*(h.framePerSecond*u)/1e3+this._absoluteFrameOffset,a=0,v=!1;const O=w&&this._animationState.loopMode===q.d.ANIMATIONLOOPMODE_YOYO;if(O){const K=(W-H)/G,M=Math.sin(K*Math.PI);W=Math.abs(M)*G+H;const q=M>=0?1:-1;this._yoyoDirection!==q&&(v=!0),this._yoyoDirection=q}if(this._previousElapsedTime=K,this._previousAbsoluteFrame=W,!w&&M>=H&&(W>=G&&u>0||W<=0&&u<0))f=!1,a=h._getKeyValue(this._maxValue);else if(!w&&H>=M&&(W<=G&&u<0||W>=0&&u>0))f=!1,a=h._getKeyValue(this._minValue);else if(this._animationState.loopMode!==q.d.ANIMATIONLOOPMODE_CYCLE){const K=M.toString()+H.toString();if(!this._offsetsCache[K]){this._animationState.repeatCount=0,this._animationState.loopMode=q.d.ANIMATIONLOOPMODE_CYCLE;const w=h._interpolate(H,this._animationState),u=h._interpolate(M,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),h.dataType){case q.d.ANIMATIONTYPE_FLOAT:this._offsetsCache[K]=u-w;break;case q.d.ANIMATIONTYPE_QUATERNION:case q.d.ANIMATIONTYPE_VECTOR3:case q.d.ANIMATIONTYPE_VECTOR2:case q.d.ANIMATIONTYPE_SIZE:case q.d.ANIMATIONTYPE_COLOR3:this._offsetsCache[K]=u.LH(w)}this._highLimitsCache[K]=u}a=this._highLimitsCache[K],y=this._offsetsCache[K]}if(void 0===y)switch(h.dataType){case q.d.ANIMATIONTYPE_FLOAT:y=0;break;case q.d.ANIMATIONTYPE_QUATERNION:y=q.h;break;case q.d.ANIMATIONTYPE_VECTOR3:y=q.l;break;case q.d.ANIMATIONTYPE_VECTOR2:y=q.j;break;case q.d.ANIMATIONTYPE_SIZE:y=q.i;break;case q.d.ANIMATIONTYPE_COLOR3:y=q.f;break;case q.d.ANIMATIONTYPE_COLOR4:y=q.g}if(this._host&&this._host.syncRoot){const K=this._host.syncRoot;I=H+G*((K.masterFrame-K.fromFrame)/(K.toFrame-K.fromFrame))}else I=W>0&&H>M||W<0&&H<M?f&&0!==G?M+W%G:H:f&&0!==G?H+W%G:M;if(!O&&(u>0&&this.currentFrame>I||u<0&&this.currentFrame<I)||O&&v){this._onLoop();for(let K=0;K<z.length;K++)z[K].onlyOnce||(z[K].isDone=!1);this._animationState.key=u>0?0:h.getKeys().length-1}this._currentFrame=I,this._animationState.repeatCount=0===G?0:W/G|0,this._animationState.highLimitValue=a,this._animationState.offsetValue=y}const a=h._interpolate(I,this._animationState);if(this.setValue(a,y),z.length)for(let q=0;q<z.length;q++)if(G>=0&&I>=z[q].frame&&z[q].frame>=H||G<0&&I<=z[q].frame&&z[q].frame<=H){const K=z[q];K.isDone||(K.onlyOnce&&(z.splice(q,1),q--),K.isDone=!0,K.action(I))}return f||(this._stopped=!0),f}}var f=M(11125);class z{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(K){this._weight=-1!==K?Math.min(Math.max(K,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(K){for(let H=0;H<this._runtimeAnimations.length;H++){this._runtimeAnimations[H]._prepareForSpeedRatioChange(K)}this._speedRatio=K,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(K,H){let M=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,u=arguments.length>4&&void 0!==arguments[4]&&arguments[4],y=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,h=arguments.length>6?arguments[6]:void 0,W=arguments.length>7?arguments[7]:void 0,I=arguments.length>8?arguments[8]:void 0,f=arguments.length>9&&void 0!==arguments[9]&&arguments[9],z=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=H,this.fromFrame=M,this.toFrame=q,this.loopAnimation=u,this.onAnimationEnd=h,this.onAnimationLoop=I,this.isAdditive=f,this.playOrder=z,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.Py=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new w.d,this.onAnimationLoopObservable=new w.d,this._scene=K,W&&this.appendAnimations(H,W),this._speedRatio=y,K._activeAnimatables.push(this)}syncWith(K){if(this._syncRoot=K,K){const K=this._scene._activeAnimatables.indexOf(this);K>-1&&(this._scene._activeAnimatables.splice(K,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(K,H){for(let M=0;M<H.length;M++){const q=H[M],w=new I(K,q,this._scene,this);w._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(w)}}getAnimationByTargetProperty(K){const H=this._runtimeAnimations;for(let M=0;M<H.length;M++)if(H[M].animation.targetProperty===K)return H[M].animation;return null}getRuntimeAnimationByTargetProperty(K){const H=this._runtimeAnimations;for(let M=0;M<H.length;M++)if(H[M].animation.targetProperty===K)return H[M];return null}reset(){const K=this._runtimeAnimations;for(let H=0;H<K.length;H++)K[H].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(K){const H=this._runtimeAnimations;for(let M=0;M<H.length;M++)H[M].animation.enableBlending=!0,H[M].animation.blendingSpeed=K}disableBlending(){const K=this._runtimeAnimations;for(let H=0;H<K.length;H++)K[H].animation.enableBlending=!1}goToFrame(K){let H=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const M=this._runtimeAnimations;if(M[0]){const H=M[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??M[0].currentFrame;const q=0===this.speedRatio?0:(K-this._frameToSyncFromJump)/H*1e3/this.speedRatio;this._manualJumpDelay=-q}for(let q=0;q<M.length;q++)M[q].goToFrame(K,H?this._weight:-1);this._goToFrame=K}get paused(){return this.Py}pause(){this.Py||(this.Py=!0)}restart(){this.Py=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(K,H){let M=arguments.length>2&&void 0!==arguments[2]&&arguments[2],q=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(K||H){const w=this._scene._activeAnimatables.indexOf(this);if(w>-1){const u=this._runtimeAnimations;for(let M=u.length-1;M>=0;M--){const q=u[M];K&&q.animation.name!=K||(H&&!H(q.target)||(q.dispose(),u.splice(M,1)))}0==u.length&&(M||this._scene._activeAnimatables.splice(w,1),q||this._raiseOnAnimationEnd())}}else{const K=this._scene._activeAnimatables.indexOf(this);if(K>-1){M||this._scene._activeAnimatables.splice(K,1);const H=this._runtimeAnimations;for(let K=0;K<H.length;K++)H[K].dispose();this._runtimeAnimations.length=0,q||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((K=>{this.onAnimationEndObservable.add((()=>{K(this)}),void 0,void 0,this,!0)}))}_animate(K){if(this.Py)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=K),!0;if(null===this._localDelayOffset?(this._localDelayOffset=K,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=K-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let H=!1;const M=this._runtimeAnimations;let q;for(q=0;q<M.length;q++){const w=M[q].animate(K-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);H=H||w}if(this.animationStarted=H,!H){if(this.disposeOnEnd)for(q=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(q,1),q=0;q<M.length;q++)M[q].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return H}}function G(K){if(0===K.totalWeight&&0===K.totalAdditiveWeight)return K.originalValue;let H=1;const M=W.TmpVectors.OH[0],q=W.TmpVectors.OH[1],w=W.TmpVectors.Quaternion[0];let u=0;const y=K.animations[0],h=K.originalValue;let I=1,f=!1;if(K.totalWeight<1)I=1-K.totalWeight,h.decompose(q,w,M);else{if(u=1,H=K.totalWeight,I=y.weight/H,1==I){if(!K.totalAdditiveWeight)return y.currentValue;f=!0}y.currentValue.decompose(q,w,M)}if(!f){q.scaleInPlace(I),M.scaleInPlace(I),w.scaleInPlace(I);for(let y=u;y<K.animations.length;y++){const u=K.animations[y];if(0===u.weight)continue;I=u.weight/H;const h=W.TmpVectors.OH[2],f=W.TmpVectors.OH[3],z=W.TmpVectors.Quaternion[1];u.currentValue.decompose(f,z,h),f.scaleAndAddToRef(I,q),z.scaleAndAddToRef(W.Quaternion.Dot(w,z)>0?I:-I,w),h.scaleAndAddToRef(I,M)}w.normalize()}for(let G=0;G<K.additiveAnimations.length;G++){const H=K.additiveAnimations[G];if(0===H.weight)continue;const u=W.TmpVectors.OH[2],y=W.TmpVectors.OH[3],h=W.TmpVectors.Quaternion[1];H.currentValue.decompose(y,h,u),y.multiplyToRef(q,y),W.OH.LerpToRef(q,y,H.weight,q),w.multiplyToRef(h,h),W.Quaternion.SlerpToRef(w,h,H.weight,w),u.scaleAndAddToRef(H.weight,M)}const z=y?y._animationState.workValue:W.TmpVectors.Matrix[0].clone();return W.Matrix.ComposeToRef(q,w,M,z),z}function a(K,H){if(0===K.totalWeight&&0===K.totalAdditiveWeight)return H;const M=K.animations[0],q=K.originalValue;let w=H;if(0===K.totalWeight&&K.totalAdditiveWeight>0)w.q(q);else if(1===K.animations.length){if(W.Quaternion.SlerpToRef(q,M.currentValue,Math.min(1,K.totalWeight),w),0===K.totalAdditiveWeight)return w}else if(K.animations.length>1){let M,u,y=1;if(K.totalWeight<1){const H=1-K.totalWeight;M=[],u=[],M.push(q),u.push(H)}else{if(2===K.animations.length&&(W.Quaternion.SlerpToRef(K.animations[0].currentValue,K.animations[1].currentValue,K.animations[1].weight/K.totalWeight,H),0===K.totalAdditiveWeight))return H;M=[],u=[],y=K.totalWeight}for(let H=0;H<K.animations.length;H++){const q=K.animations[H];M.push(q.currentValue),u.push(q.weight/y)}let h=0;for(let K=0;K<M.length;)K?(h+=u[K],W.Quaternion.SlerpToRef(w,M[K],u[K]/h,w),K++):(W.Quaternion.SlerpToRef(M[K],M[K+1],u[K+1]/(u[K]+u[K+1]),H),w=H,h=u[K]+u[K+1],K+=2)}for(let u=0;u<K.additiveAnimations.length;u++){const H=K.additiveAnimations[u];0!==H.weight&&(w.multiplyToRef(H.currentValue,W.TmpVectors.Quaternion[0]),W.Quaternion.SlerpToRef(w,W.TmpVectors.Quaternion[0],H.weight,w))}return w}var v,O,L=M(11522);v=L.b,(O=h.e)&&(O.prototype.copyAnimationRange=function(K,H,M){let w=arguments.length>3&&void 0!==arguments[3]&&arguments[3],u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new q.d(this.name,"_matrix",K.animations[0].framePerSecond,q.d.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const y=K.animations[0].getRange(H);if(!y)return!1;const h=y.from,W=y.to,I=K.animations[0].getKeys(),f=K.length,z=K.getParent(),G=this.getParent(),a=w&&z&&f&&this.length&&f!==this.length,v=a&&G&&z?G.length/z.length:1,O=w&&!G&&u&&(1!==u.x||1!==u.y||1!==u.z),L=this.animations[0].getKeys();let S,B,C;for(let q=0,i=I.length;q<i;q++)S=I[q],S.frame>=h&&S.frame<=W&&(w?(C=S.value.clone(),a?(B=C.getTranslation(),C.setTranslation(B.scaleInPlace(v))):O&&u?(B=C.getTranslation(),C.setTranslation(B.multiplyInPlace(u))):C=S.value):C=S.value,L.push({frame:S.frame+M,value:C}));return this.animations[0].createRange(H,h+M,W+M),!0}),v&&(v.prototype._animate=function(K){if(!this.animationsEnabled)return;const H=f.d.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=H}this.deltaTime=void 0!==K?K:this.useConstantAnimationDeltaTime?16:(H-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=H;const M=this._activeAnimatables;if(0===M.length)return;this._animationTime+=this.deltaTime;const w=this._animationTime;for(let q=0;q<M.length;q++){const K=M[q];!K._animate(w)&&K.disposeOnEnd&&q--}!function(K){if(K._registeredForLateAnimationBindings.length){for(let H=0;H<K._registeredForLateAnimationBindings.length;H++){const M=K._registeredForLateAnimationBindings.data[H];for(const K in M._lateAnimationHolders){const H=M._lateAnimationHolders[K],w=H.animations[0],u=H.originalValue;if(void 0===u||null===u)continue;const y=q.d.AllowMatrixDecomposeForInterpolation&&u.m;let h=M[K];if(y)h=G(H);else if(void 0!==u.w)h=a(H,h||W.Quaternion.Identity());else{let K=0,M=1;const y=w&&w._animationState.loopMode===q.d.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(H.totalWeight<1)h=y?u.clone?u.clone():u:w&&u.scale?u.scale(1-H.totalWeight):w?u*(1-H.totalWeight):u.clone?u.clone():u;else if(w){M=H.totalWeight;const q=w.weight/M;h=1!==q?w.currentValue.scale?w.currentValue.scale(q):w.currentValue*q:w.currentValue,y&&(h.addToRef?h.addToRef(u,h):h+=u),K=1}for(let q=K;q<H.animations.length;q++){const K=H.animations[q],w=K.weight/M;w&&(K.currentValue.scaleAndAddToRef?K.currentValue.scaleAndAddToRef(w,h):h+=K.currentValue*w)}for(let q=0;q<H.additiveAnimations.length;q++){const K=H.additiveAnimations[q],M=K.weight;M&&(K.currentValue.scaleAndAddToRef?K.currentValue.scaleAndAddToRef(M,h):h+=K.currentValue*M)}}M[K]=h}M._lateAnimationHolders={}}K._registeredForLateAnimationBindings.reset()}}(this)},v.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((K,H)=>K.playOrder-H.playOrder))},v.prototype.beginWeightedAnimation=function(K,H,M){let q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,w=arguments.length>4?arguments[4]:void 0,u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,y=arguments.length>6?arguments[6]:void 0,h=arguments.length>7?arguments[7]:void 0,W=arguments.length>8?arguments[8]:void 0,I=arguments.length>9?arguments[9]:void 0,f=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const z=this.beginAnimation(K,H,M,w,u,y,h,!1,W,I,f);return z.weight=q,z},v.prototype.beginAnimation=function(K,H,M,q){let w=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,u=arguments.length>5?arguments[5]:void 0,y=arguments.length>6?arguments[6]:void 0,h=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],W=arguments.length>8?arguments[8]:void 0,I=arguments.length>9?arguments[9]:void 0,f=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(w<0){const K=H;H=M,M=K,w=-w}H>M&&(w=-w),h&&this.stopAnimation(K,void 0,W),y||(y=new z(this,K,H,M,q,w,u,void 0,I,f));const G=!W||W(K);if(K.animations&&G&&y.appendAnimations(K,K.animations),K.getAnimatables){const f=K.getAnimatables();for(let K=0;K<f.length;K++)this.beginAnimation(f[K],H,M,q,w,u,y,h,W,I)}return y.reset(),y},v.prototype.beginHierarchyAnimation=function(K,H,M,q,w){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,y=arguments.length>6?arguments[6]:void 0,h=arguments.length>7?arguments[7]:void 0,W=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],I=arguments.length>9?arguments[9]:void 0,f=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const z=K.getDescendants(H),G=[];G.push(this.beginAnimation(K,M,q,w,u,y,h,W,I,void 0,f));for(const a of z)G.push(this.beginAnimation(a,M,q,w,u,y,h,W,I,void 0,f));return G},v.prototype.beginDirectAnimation=function(K,H,M,q,w){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(u<0){const K=M;M=q,q=K,u=-u}return M>q&&(u=-u),new z(this,K,M,q,w,u,arguments.length>6?arguments[6]:void 0,H,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},v.prototype.beginDirectHierarchyAnimation=function(K,H,M,q,w,u,y,h,W){let I=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const f=K.getDescendants(H),z=[];z.push(this.beginDirectAnimation(K,M,q,w,u,y,h,W,I));for(const G of f)z.push(this.beginDirectAnimation(G,M,q,w,u,y,h,W,I));return z},v.prototype.getAnimatableByTarget=function(K){for(let H=0;H<this._activeAnimatables.length;H++)if(this._activeAnimatables[H].target===K)return this._activeAnimatables[H];return null},v.prototype.getAllAnimatablesByTarget=function(K){const H=[];for(let M=0;M<this._activeAnimatables.length;M++)this._activeAnimatables[M].target===K&&H.push(this._activeAnimatables[M]);return H},v.prototype.stopAnimation=function(K,H,M){const q=this.getAllAnimatablesByTarget(K);for(const w of q)w.stop(H,M)},v.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let K=0;K<this._activeAnimatables.length;K++)this._activeAnimatables[K].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const K of this.animationGroups)K.stop()});class S{getClassName(){return"TargetedAnimation"}serialize(){const K={};return K.animation=this.animation.serialize(),K.targetId=this.target.id,K}}class B{get mask(){return this._mask}set mask(K){this._mask!==K&&(this._mask=K,this.syncWithMask(!0))}syncWithMask(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||K){this._numActiveAnimatables=0;for(let K=0;K<this._animatables.length;++K){const H=this._animatables[K];!this.mask||this.mask.disabled||this.mask.retainsTarget(H.target.name)?(this._numActiveAnimatables++,H.paused&&H.restart()):H.paused||H.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let K=0;K<this._animatables.length;++K){const H=this._animatables[K];this.mask.retainsTarget(H.target.name)||(H.stop(),this._animatables.splice(K,1),--K)}for(let K=0;K<this._targetedAnimations.length;K++){const H=this._targetedAnimations[K];this.mask.retainsTarget(H.target.name)||(this._targetedAnimations.splice(K,1),--K)}}}get from(){return this._from}set from(K){if(this._from!==K){this._from=K;for(let K=0;K<this._animatables.length;K++){this._animatables[K].fromFrame=this._from}}}get to(){return this._to}set to(K){if(this._to!==K){this._to=K;for(let K=0;K<this._animatables.length;K++){this._animatables[K].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(K){if(this._speedRatio!==K){this._speedRatio=K;for(let K=0;K<this._animatables.length;K++){this._animatables[K].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(K){if(this._loopAnimation!==K){this._loopAnimation=K;for(let K=0;K<this._animatables.length;K++){this._animatables[K].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(K){if(this._isAdditive!==K){this._isAdditive=K;for(let K=0;K<this._animatables.length;K++){this._animatables[K].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(K){this._weight!==K&&(this._weight=K,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(K){if(this._playOrder!==K&&(this._playOrder=K,this._animatables.length>0)){for(let K=0;K<this._animatables.length;K++)this._animatables[K].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(K){if(this._enableBlending!==K&&(this._enableBlending=K,null!==K))for(let H=0;H<this._targetedAnimations.length;++H)this._targetedAnimations[H].animation.enableBlending=K}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(K){if(this._blendingSpeed!==K&&(this._blendingSpeed=K,null!==K))for(let H=0;H<this._targetedAnimations.length;++H)this._targetedAnimations[H].animation.blendingSpeed=K}getLength(K,H){K=K??this._from;return((H=H??this._to)-K)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(K){let H=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],M=arguments.length>2&&void 0!==arguments[2]&&arguments[2],q=arguments.length>3?arguments[3]:void 0;if(0===K.length)return null;q=q??K[0].weight;let w=Number.MAX_VALUE,u=-Number.MAX_VALUE;if(M)for(const h of K)h.from<w&&(w=h.from),h.to>u&&(u=h.to);const y=new B(K[0].name+"_merged",K[0]._scene,q);for(const h of K){M&&h.normalize(w,u);for(const K of h.targetedAnimations)y.addTargetedAnimation(K.animation,K.target);H&&h.dispose()}return y}constructor(K){let H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,M=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=K,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new w.d,this.onAnimationLoopObservable=new w.d,this.onAnimationGroupLoopObservable=new w.d,this.onAnimationGroupEndObservable=new w.d,this.onAnimationGroupPauseObservable=new w.d,this.onAnimationGroupPlayObservable=new w.d,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=H||u.b.LastCreatedScene,this._weight=M,this._playOrder=q,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(K,H){const M=new S;M.animation=K,M.target=H;const q=K.getKeys();return this._from>q[0].frame&&(this._from=q[0].frame),this._to<q[q.length-1].frame&&(this._to=q[q.length-1].frame),null!==this._enableBlending&&(K.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(K.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(M),this._shouldStart=!0,M}removeTargetedAnimation(K){for(let H=this._targetedAnimations.length-1;H>-1;H--){this._targetedAnimations[H].animation===K&&this._targetedAnimations.splice(H,1)}}normalize(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==K&&(K=this._from),null==H&&(H=this._to);for(let M=0;M<this._targetedAnimations.length;M++){const q=this._targetedAnimations[M].animation.getKeys(),w=q[0],u=q[q.length-1];if(w.frame>K){const H={frame:K,value:w.value,inTangent:w.inTangent,outTangent:w.outTangent,interpolation:w.interpolation};q.splice(0,0,H)}if(u.frame<H){const K={frame:H,value:u.value,inTangent:u.inTangent,outTangent:u.outTangent,interpolation:u.interpolation};q.push(K)}}return this._from=K,this._to=H,this}_processLoop(K,H,M){K.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(H),this._animationLoopFlags[M]||(this._animationLoopFlags[M]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0],H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,M=arguments.length>2?arguments[2]:void 0,q=arguments.length>3?arguments[3]:void 0,w=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=K,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let u=0;u<this._targetedAnimations.length;u++){const y=this._targetedAnimations[u],h=this._scene.beginDirectAnimation(y.target,[y.animation],void 0!==M?M:this._from,void 0!==q?q:this._to,K,H,void 0,void 0,void 0!==w?w:this._isAdditive);h.weight=this._weight,h.playOrder=this._playOrder,h.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(y),this._checkAnimationGroupEnded(h)},this._processLoop(h,y,u),this._animatables.push(h)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=H,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let K=0;K<this._animatables.length;K++){this._animatables[K].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(K){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==K&&(this.loopAnimation=K),this.restart()):(this.stop(),this.start(K,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let K=0;K<this._animatables.length;K++){this._animatables[K].reset()}return this}restart(){if(!this._isStarted)return this;for(let K=0;K<this._animatables.length;K++){this._animatables[K].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const H=this._animatables.slice();for(let q=0;q<H.length;q++)H[q].stop(void 0,void 0,!0,K);let M=0;for(let q=0;q<this._scene._activeAnimatables.length;q++){const H=this._scene._activeAnimatables[q];H._runtimeAnimations.length>0?this._scene._activeAnimatables[M++]=H:K&&this._checkAnimationGroupEnded(H,K)}return this._scene._activeAnimatables.length=M,this._isStarted=!1,this}setWeightForAllAnimatables(K){for(let H=0;H<this._animatables.length;H++){this._animatables[H].weight=K}return this}syncAllAnimationsWith(K){for(let H=0;H<this._animatables.length;H++){this._animatables[H].syncWith(K)}return this}goToFrame(K){let H=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let M=0;M<this._animatables.length;M++){this._animatables[M].goToFrame(K,H)}return this}getCurrentFrame(){var K;return(null===(K=this.animatables[0])||void 0===K?void 0:K.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const K=this._scene.animationGroups.indexOf(this);if(K>-1&&this._scene.animationGroups.splice(K,1),this._parentContainer){const K=this._parentContainer.animationGroups.indexOf(this);K>-1&&this._parentContainer.animationGroups.splice(K,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(K){let H=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const M=this._animatables.indexOf(K);M>-1&&this._animatables.splice(M,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,H||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(K,H){let M=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const q=new B(K||this.name,this._scene,this._weight,this._playOrder);q._from=this.from,q._to=this.to,q._speedRatio=this.speedRatio,q._loopAnimation=this.loopAnimation,q._isAdditive=this.isAdditive,q._enableBlending=this.enableBlending,q._blendingSpeed=this.blendingSpeed,q.metadata=this.metadata,q.mask=this.mask;for(const w of this._targetedAnimations)q.addTargetedAnimation(M?w.animation.clone():w.animation,H?H(w.target):w.target);return q}serialize(){const K={};K.name=this.name,K.from=this.from,K.to=this.to,K.speedRatio=this.speedRatio,K.loopAnimation=this.loopAnimation,K.isAdditive=this.isAdditive,K.weight=this.weight,K.playOrder=this.playOrder,K.enableBlending=this.enableBlending,K.blendingSpeed=this.blendingSpeed,K.targetedAnimations=[];for(let H=0;H<this.targetedAnimations.length;H++){const M=this.targetedAnimations[H];K.targetedAnimations[H]=M.serialize()}return y.d&&y.d.HasTags(this)&&(K.tags=y.d.GetTags(this)),this.metadata&&(K.metadata=this.metadata),K}static Parse(K,H){const M=new B(K.name,H,K.weight,K.playOrder);for(let w=0;w<K.targetedAnimations.length;w++){const u=K.targetedAnimations[w],y=q.d.Parse(u.animation),h=u.targetId;if("influence"===u.animation.property){const K=H.getMorphTargetById(h);K&&M.addTargetedAnimation(y,K)}else{const K=H.getNodeById(h);null!=K&&M.addTargetedAnimation(y,K)}}return y.d&&y.d.AddTagsTo(M,K.tags),null!==K.from&&null!==K.to&&M.normalize(K.from,K.to),void 0!==K.speedRatio&&(M._speedRatio=K.speedRatio),void 0!==K.loopAnimation&&(M._loopAnimation=K.loopAnimation),void 0!==K.isAdditive&&(M._isAdditive=K.isAdditive),void 0!==K.weight&&(M._weight=K.weight),void 0!==K.playOrder&&(M._playOrder=K.playOrder),void 0!==K.enableBlending&&(M._enableBlending=K.enableBlending),void 0!==K.blendingSpeed&&(M._blendingSpeed=K.blendingSpeed),void 0!==K.metadata&&(M.metadata=K.metadata),M}static MakeAnimationAdditive(K,H,M){let w;w="object"===typeof H?H:{referenceFrame:H,range:M,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let u=K;w.cloneOriginalAnimationGroup&&(u=K.clone(w.clonedAnimationGroupName||u.name));const y=u.targetedAnimations;for(let h=0;h<y.length;h++){const K=y[h];K.animation=q.d.MakeAnimationAdditive(K.animation,w)}if(u.isAdditive=!0,w.clipKeys){let K=Number.MAX_VALUE,H=-Number.MAX_VALUE;const M=u.targetedAnimations;for(let q=0;q<M.length;q++){const w=M[q].animation.getKeys();K>w[0].frame&&(K=w[0].frame),H<w[w.length-1].frame&&(H=w[w.length-1].frame)}u._from=K,u._to=H}return u}static ClipKeys(K,H,M,q,w){const u=K.clone(q||K.name);return B.ClipKeysInPlace(u,H,M,w)}static ClipKeysInPlace(K,H,M,q){return B.ClipInPlace(K,H,M,q,!1)}static ClipFrames(K,H,M,q,w){const u=K.clone(q||K.name);return B.ClipFramesInPlace(u,H,M,w)}static ClipFramesInPlace(K,H,M,q){return B.ClipInPlace(K,H,M,q,!0)}static ClipInPlace(K,H,M,q){let w=arguments.length>4&&void 0!==arguments[4]&&arguments[4],u=Number.MAX_VALUE,y=-Number.MAX_VALUE;const h=K.targetedAnimations;for(let W=0;W<h.length;W++){const K=h[W],I=q?K.animation:K.animation.clone();w&&(I.createKeyForFrame(H),I.createKeyForFrame(M));const f=I.getKeys(),z=[];let G=Number.MAX_VALUE;for(let q=0;q<f.length;q++){const K=f[q];if(!w&&q>=H&&q<=M||w&&K.frame>=H&&K.frame<=M){const H={frame:K.frame,value:K.value.clone?K.value.clone():K.value,inTangent:K.inTangent,outTangent:K.outTangent,interpolation:K.interpolation,lockedTangent:K.lockedTangent};G===Number.MAX_VALUE&&(G=H.frame),H.frame-=G,z.push(H)}}0!==z.length?(u>z[0].frame&&(u=z[0].frame),y<z[z.length-1].frame&&(y=z[z.length-1].frame),I.setKeys(z,!0),K.animation=I):(h.splice(W,1),W--)}return K._from=u,K._to=y,K}getClassName(){return"AnimationGroup"}toString(K){let H="Name: "+this.name;return H+=", type: "+this.getClassName(),K&&(H+=", from: "+this._from,H+=", to: "+this._to,H+=", isStarted: "+this._isStarted,H+=", speedRatio: "+this._speedRatio,H+=", targetedAnimations length: "+this._targetedAnimations.length,H+=", animatables length: "+this._animatables),H}}}}]);