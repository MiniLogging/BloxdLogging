"use strict";(self.ozi0exxand9=self.ozi0exxand9||[]).push([[78],{14513:(f,v,Z)=>{Z.r(v),Z.d(v,{AnimationGroup:()=>K,TargetedAnimation:()=>U});var V=Z(11921),h=Z(11235),J=Z(11281),l=Z(11466),e=Z(13048),C=Z(11421);class H{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(f,v,Z,h){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=v,this._target=f,this._scene=Z,this._host=h,this._activeTargets=[],v._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===V.b.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=C.Matrix.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const f={frame:0,value:this._minValue};this._keys.splice(0,0,f)}if(this._target instanceof Array){let f=0;for(const v of this._target)this._preparePath(v,f),this._getOriginalValues(f),f++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const J=v.getEvents();if(J&&J.length>0)for(const V of J)this._events.push(V._clone());this._enableBlending=f&&f.animationPropertiesOverride?f.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(f){let v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const Z=this._animation.targetPropertyPath;if(Z.length>1){let V=f;for(let f=0;f<Z.length-1;f++){const v=Z[f];if(V=V[v],void 0===V)throw new Error(`Invalid property (${v}) in property path (${Z.join(".")})`)}this._targetPath=Z[Z.length-1],this._activeTargets[v]=V}else this._targetPath=Z[0],this._activeTargets[v]=f;if(void 0===this._activeTargets[v][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${Z.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let f=0;for(const v of this._target)void 0!==this._originalValue[f]&&this._setValue(v,this._activeTargets[f],this._originalValue[f],-1,f),f++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let f=0;f<this._events.length;f++)this._events[f].isDone=!1}isStopped(){return this._stopped}dispose(){const f=this._animation.runtimeAnimations.indexOf(this);f>-1&&this._animation.runtimeAnimations.splice(f,1)}setValue(f,v){if(this._targetIsArray)for(let Z=0;Z<this._target.length;Z++){const V=this._target[Z];this._setValue(V,this._activeTargets[Z],f,v,Z)}else this._setValue(this._target,this._directTarget,f,v,0)}_getOriginalValues(){let f,v=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const Z=this._activeTargets[v];f=Z.getLocalMatrix&&"_matrix"===this._targetPath?Z.getLocalMatrix():Z[this._targetPath],f&&f.clone?this._originalValue[v]=f.clone():this._originalValue[v]=f}_registerTargetForLateAnimationBinding(f,v){const Z=f.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(Z),Z._lateAnimationHolders||(Z._lateAnimationHolders={}),Z._lateAnimationHolders[f.targetPath]||(Z._lateAnimationHolders[f.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:v}),f.isAdditive?(Z._lateAnimationHolders[f.targetPath].additiveAnimations.push(f),Z._lateAnimationHolders[f.targetPath].totalAdditiveWeight+=f.weight):(Z._lateAnimationHolders[f.targetPath].animations.push(f),Z._lateAnimationHolders[f.targetPath].totalWeight+=f.weight)}_setValue(f,v,Z,h,J){if(this._currentActiveTarget=v,this._weight=h,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const f=v[this._targetPath];f.clone?this._originalBlendValue=f.clone():this._originalBlendValue=f}this._originalBlendValue.m?V.b.AllowMatrixDecomposeForInterpolation?this._currentValue?C.Matrix.DecomposeLerpToRef(this._originalBlendValue,Z,this._blendingFactor,this._currentValue):this._currentValue=C.Matrix.DecomposeLerp(this._originalBlendValue,Z,this._blendingFactor):this._currentValue?C.Matrix.LerpToRef(this._originalBlendValue,Z,this._blendingFactor,this._currentValue):this._currentValue=C.Matrix.Lerp(this._originalBlendValue,Z,this._blendingFactor):this._currentValue=V.b._UniversalLerp(this._originalBlendValue,Z,this._blendingFactor);const h=f&&f.animationPropertiesOverride?f.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=h}else this._currentValue?this._currentValue.h?this._currentValue.h(Z):this._currentValue=Z:null!==Z&&void 0!==Z&&Z.clone?this._currentValue=Z.clone():this._currentValue=Z;-1!==h?this._registerTargetForLateAnimationBinding(this,this._originalValue[J]):this._animationState.loopMode===V.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[J],v[this._targetPath]):v[this._targetPath]=this._originalValue[J]+this._currentValue:v[this._targetPath]=this._currentValue,f.dH&&f.dH(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(f){let v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const Z=this._animation.getKeys();f<Z[0].frame?f=Z[0].frame:f>Z[Z.length-1].frame&&(f=Z[Z.length-1].frame);const V=this._events;if(V.length)for(let J=0;J<V.length;J++)V[J].onlyOnce||(V[J].isDone=V[J].frame<f);this._currentFrame=f;const h=this._animation._interpolate(f,this._animationState);this.setValue(h,v)}_prepareForSpeedRatioChange(f){const v=this._previousElapsedTime*(this._animation.framePerSecond*f)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-v}animate(f,v,Z,h,J){let l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const e=this._animation,C=e.targetPropertyPath;if(!C||C.length<1)return this._stopped=!0,!1;let H,O=!0;const u=this._events;let W=0;if(this._coreRuntimeAnimation)W=Z-v,H=this._coreRuntimeAnimation.currentFrame,this._currentFrame=H,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let l;(v<this._minFrame||v>this._maxFrame)&&(v=this._minFrame),(Z<this._minFrame||Z>this._maxFrame)&&(Z=this._maxFrame),W=Z-v;let C=f*(e.framePerSecond*J)/1e3+this._absoluteFrameOffset,a=0,b=!1;const X=h&&this._animationState.loopMode===V.b.ANIMATIONLOOPMODE_YOYO;if(X){const f=(C-v)/W,Z=Math.sin(f*Math.PI);C=Math.abs(Z)*W+v;const V=Z>=0?1:-1;this._yoyoDirection!==V&&(b=!0),this._yoyoDirection=V}if(this._previousElapsedTime=f,this._previousAbsoluteFrame=C,!h&&Z>=v&&(C>=W&&J>0||C<=0&&J<0))O=!1,a=e._getKeyValue(this._maxValue);else if(!h&&v>=Z&&(C<=W&&J<0||C>=0&&J>0))O=!1,a=e._getKeyValue(this._minValue);else if(this._animationState.loopMode!==V.b.ANIMATIONLOOPMODE_CYCLE){const f=Z.toString()+v.toString();if(!this._offsetsCache[f]){this._animationState.repeatCount=0,this._animationState.loopMode=V.b.ANIMATIONLOOPMODE_CYCLE;const h=e._interpolate(v,this._animationState),J=e._interpolate(Z,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),e.dataType){case V.b.ANIMATIONTYPE_FLOAT:this._offsetsCache[f]=J-h;break;case V.b.ANIMATIONTYPE_QUATERNION:case V.b.ANIMATIONTYPE_VECTOR3:case V.b.ANIMATIONTYPE_VECTOR2:case V.b.ANIMATIONTYPE_SIZE:case V.b.ANIMATIONTYPE_COLOR3:this._offsetsCache[f]=J.Fv(h)}this._highLimitsCache[f]=J}a=this._highLimitsCache[f],l=this._offsetsCache[f]}if(void 0===l)switch(e.dataType){case V.b.ANIMATIONTYPE_FLOAT:l=0;break;case V.b.ANIMATIONTYPE_QUATERNION:l=V.k;break;case V.b.ANIMATIONTYPE_VECTOR3:l=V.r;break;case V.b.ANIMATIONTYPE_VECTOR2:l=V.q;break;case V.b.ANIMATIONTYPE_SIZE:l=V.o;break;case V.b.ANIMATIONTYPE_COLOR3:l=V.e;break;case V.b.ANIMATIONTYPE_COLOR4:l=V.h}if(this._host&&this._host.syncRoot){const f=this._host.syncRoot;H=v+W*((f.masterFrame-f.fromFrame)/(f.toFrame-f.fromFrame))}else H=C>0&&v>Z||C<0&&v<Z?O&&0!==W?Z+C%W:v:O&&0!==W?v+C%W:Z;if(!X&&(J>0&&this.currentFrame>H||J<0&&this.currentFrame<H)||X&&b){this._onLoop();for(let f=0;f<u.length;f++)u[f].onlyOnce||(u[f].isDone=!1);this._animationState.key=J>0?0:e.getKeys().length-1}this._currentFrame=H,this._animationState.repeatCount=0===W?0:C/W|0,this._animationState.highLimitValue=a,this._animationState.offsetValue=l}const a=e._interpolate(H,this._animationState);if(this.setValue(a,l),u.length)for(let V=0;V<u.length;V++)if(W>=0&&H>=u[V].frame&&u[V].frame>=v||W<0&&H<=u[V].frame&&u[V].frame<=v){const f=u[V];f.isDone||(f.onlyOnce&&(u.splice(V,1),V--),f.isDone=!0,f.action(H))}return O||(this._stopped=!0),O}}var O=Z(11254);class u{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(f){this._weight=-1!==f?Math.min(Math.max(f,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(f){for(let v=0;v<this._runtimeAnimations.length;v++){this._runtimeAnimations[v]._prepareForSpeedRatioChange(f)}this._speedRatio=f,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(f,v){let Z=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,J=arguments.length>4&&void 0!==arguments[4]&&arguments[4],l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,e=arguments.length>6?arguments[6]:void 0,C=arguments.length>7?arguments[7]:void 0,H=arguments.length>8?arguments[8]:void 0,O=arguments.length>9&&void 0!==arguments[9]&&arguments[9],u=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=v,this.fromFrame=Z,this.toFrame=V,this.loopAnimation=J,this.onAnimationEnd=e,this.onAnimationLoop=H,this.isAdditive=O,this.playOrder=u,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.ae=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new h.c,this.onAnimationLoopObservable=new h.c,this._scene=f,C&&this.appendAnimations(v,C),this._speedRatio=l,f._activeAnimatables.push(this)}syncWith(f){if(this._syncRoot=f,f){const f=this._scene._activeAnimatables.indexOf(this);f>-1&&(this._scene._activeAnimatables.splice(f,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(f,v){for(let Z=0;Z<v.length;Z++){const V=v[Z],h=new H(f,V,this._scene,this);h._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(h)}}getAnimationByTargetProperty(f){const v=this._runtimeAnimations;for(let Z=0;Z<v.length;Z++)if(v[Z].animation.targetProperty===f)return v[Z].animation;return null}getRuntimeAnimationByTargetProperty(f){const v=this._runtimeAnimations;for(let Z=0;Z<v.length;Z++)if(v[Z].animation.targetProperty===f)return v[Z];return null}reset(){const f=this._runtimeAnimations;for(let v=0;v<f.length;v++)f[v].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(f){const v=this._runtimeAnimations;for(let Z=0;Z<v.length;Z++)v[Z].animation.enableBlending=!0,v[Z].animation.blendingSpeed=f}disableBlending(){const f=this._runtimeAnimations;for(let v=0;v<f.length;v++)f[v].animation.enableBlending=!1}goToFrame(f){let v=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const Z=this._runtimeAnimations;if(Z[0]){const v=Z[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??Z[0].currentFrame;const V=0===this.speedRatio?0:(f-this._frameToSyncFromJump)/v*1e3/this.speedRatio;this._manualJumpDelay=-V}for(let V=0;V<Z.length;V++)Z[V].goToFrame(f,v?this._weight:-1);this._goToFrame=f}get paused(){return this.ae}pause(){this.ae||(this.ae=!0)}restart(){this.ae=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(f,v){let Z=arguments.length>2&&void 0!==arguments[2]&&arguments[2],V=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(f||v){const h=this._scene._activeAnimatables.indexOf(this);if(h>-1){const J=this._runtimeAnimations;for(let Z=J.length-1;Z>=0;Z--){const V=J[Z];f&&V.animation.name!=f||(v&&!v(V.target)||(V.dispose(),J.splice(Z,1)))}0==J.length&&(Z||this._scene._activeAnimatables.splice(h,1),V||this._raiseOnAnimationEnd())}}else{const f=this._scene._activeAnimatables.indexOf(this);if(f>-1){Z||this._scene._activeAnimatables.splice(f,1);const v=this._runtimeAnimations;for(let f=0;f<v.length;f++)v[f].dispose();this._runtimeAnimations.length=0,V||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((f=>{this.onAnimationEndObservable.add((()=>{f(this)}),void 0,void 0,this,!0)}))}_animate(f){if(this.ae)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=f),!0;if(null===this._localDelayOffset?(this._localDelayOffset=f,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=f-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let v=!1;const Z=this._runtimeAnimations;let V;for(V=0;V<Z.length;V++){const h=Z[V].animate(f-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);v=v||h}if(this.animationStarted=v,!v){if(this.disposeOnEnd)for(V=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(V,1),V=0;V<Z.length;V++)Z[V].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return v}}function W(f){if(0===f.totalWeight&&0===f.totalAdditiveWeight)return f.originalValue;let v=1;const Z=C.TmpVectors.Xv[0],V=C.TmpVectors.Xv[1],h=C.TmpVectors.Quaternion[0];let J=0;const l=f.animations[0],e=f.originalValue;let H=1,O=!1;if(f.totalWeight<1)H=1-f.totalWeight,e.decompose(V,h,Z);else{if(J=1,v=f.totalWeight,H=l.weight/v,1==H){if(!f.totalAdditiveWeight)return l.currentValue;O=!0}l.currentValue.decompose(V,h,Z)}if(!O){V.scaleInPlace(H),Z.scaleInPlace(H),h.scaleInPlace(H);for(let l=J;l<f.animations.length;l++){const J=f.animations[l];if(0===J.weight)continue;H=J.weight/v;const e=C.TmpVectors.Xv[2],O=C.TmpVectors.Xv[3],u=C.TmpVectors.Quaternion[1];J.currentValue.decompose(O,u,e),O.scaleAndAddToRef(H,V),u.scaleAndAddToRef(C.Quaternion.Dot(h,u)>0?H:-H,h),e.scaleAndAddToRef(H,Z)}h.normalize()}for(let W=0;W<f.additiveAnimations.length;W++){const v=f.additiveAnimations[W];if(0===v.weight)continue;const J=C.TmpVectors.Xv[2],l=C.TmpVectors.Xv[3],e=C.TmpVectors.Quaternion[1];v.currentValue.decompose(l,e,J),l.multiplyToRef(V,l),C.Xv.LerpToRef(V,l,v.weight,V),h.multiplyToRef(e,e),C.Quaternion.SlerpToRef(h,e,v.weight,h),J.scaleAndAddToRef(v.weight,Z)}const u=l?l._animationState.workValue:C.TmpVectors.Matrix[0].clone();return C.Matrix.ComposeToRef(V,h,Z,u),u}function a(f,v){if(0===f.totalWeight&&0===f.totalAdditiveWeight)return v;const Z=f.animations[0],V=f.originalValue;let h=v;if(0===f.totalWeight&&f.totalAdditiveWeight>0)h.h(V);else if(1===f.animations.length){if(C.Quaternion.SlerpToRef(V,Z.currentValue,Math.min(1,f.totalWeight),h),0===f.totalAdditiveWeight)return h}else if(f.animations.length>1){let Z,J,l=1;if(f.totalWeight<1){const v=1-f.totalWeight;Z=[],J=[],Z.push(V),J.push(v)}else{if(2===f.animations.length&&(C.Quaternion.SlerpToRef(f.animations[0].currentValue,f.animations[1].currentValue,f.animations[1].weight/f.totalWeight,v),0===f.totalAdditiveWeight))return v;Z=[],J=[],l=f.totalWeight}for(let v=0;v<f.animations.length;v++){const V=f.animations[v];Z.push(V.currentValue),J.push(V.weight/l)}let e=0;for(let f=0;f<Z.length;)f?(e+=J[f],C.Quaternion.SlerpToRef(h,Z[f],J[f]/e,h),f++):(C.Quaternion.SlerpToRef(Z[f],Z[f+1],J[f+1]/(J[f]+J[f+1]),v),h=v,e=J[f]+J[f+1],f+=2)}for(let J=0;J<f.additiveAnimations.length;J++){const v=f.additiveAnimations[J];0!==v.weight&&(h.multiplyToRef(v.currentValue,C.TmpVectors.Quaternion[0]),C.Quaternion.SlerpToRef(h,C.TmpVectors.Quaternion[0],v.weight,h))}return h}var b,X,F=Z(11646);b=F.b,(X=e.d)&&(X.prototype.copyAnimationRange=function(f,v,Z){let h=arguments.length>3&&void 0!==arguments[3]&&arguments[3],J=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new V.b(this.name,"_matrix",f.animations[0].framePerSecond,V.b.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const l=f.animations[0].getRange(v);if(!l)return!1;const e=l.from,C=l.to,H=f.animations[0].getKeys(),O=f.length,u=f.getParent(),W=this.getParent(),a=h&&u&&O&&this.length&&O!==this.length,b=a&&W&&u?W.length/u.length:1,X=h&&!W&&J&&(1!==J.x||1!==J.y||1!==J.z),F=this.animations[0].getKeys();let U,K,M;for(let V=0,A=H.length;V<A;V++)U=H[V],U.frame>=e&&U.frame<=C&&(h?(M=U.value.clone(),a?(K=M.getTranslation(),M.setTranslation(K.scaleInPlace(b))):X&&J?(K=M.getTranslation(),M.setTranslation(K.multiplyInPlace(J))):M=U.value):M=U.value,F.push({frame:U.frame+Z,value:M}));return this.animations[0].createRange(v,e+Z,C+Z),!0}),b&&(b.prototype._animate=function(f){if(!this.animationsEnabled)return;const v=O.b.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=v}this.deltaTime=void 0!==f?f:this.useConstantAnimationDeltaTime?16:(v-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=v;const Z=this._activeAnimatables;if(0===Z.length)return;this._animationTime+=this.deltaTime;const h=this._animationTime;for(let V=0;V<Z.length;V++){const f=Z[V];!f._animate(h)&&f.disposeOnEnd&&V--}!function(f){if(f._registeredForLateAnimationBindings.length){for(let v=0;v<f._registeredForLateAnimationBindings.length;v++){const Z=f._registeredForLateAnimationBindings.data[v];for(const f in Z._lateAnimationHolders){const v=Z._lateAnimationHolders[f],h=v.animations[0],J=v.originalValue;if(void 0===J||null===J)continue;const l=V.b.AllowMatrixDecomposeForInterpolation&&J.m;let e=Z[f];if(l)e=W(v);else if(void 0!==J.w)e=a(v,e||C.Quaternion.Identity());else{let f=0,Z=1;const l=h&&h._animationState.loopMode===V.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(v.totalWeight<1)e=l?J.clone?J.clone():J:h&&J.scale?J.scale(1-v.totalWeight):h?J*(1-v.totalWeight):J.clone?J.clone():J;else if(h){Z=v.totalWeight;const V=h.weight/Z;e=1!==V?h.currentValue.scale?h.currentValue.scale(V):h.currentValue*V:h.currentValue,l&&(e.addToRef?e.addToRef(J,e):e+=J),f=1}for(let V=f;V<v.animations.length;V++){const f=v.animations[V],h=f.weight/Z;h&&(f.currentValue.scaleAndAddToRef?f.currentValue.scaleAndAddToRef(h,e):e+=f.currentValue*h)}for(let V=0;V<v.additiveAnimations.length;V++){const f=v.additiveAnimations[V],Z=f.weight;Z&&(f.currentValue.scaleAndAddToRef?f.currentValue.scaleAndAddToRef(Z,e):e+=f.currentValue*Z)}}Z[f]=e}Z._lateAnimationHolders={}}f._registeredForLateAnimationBindings.reset()}}(this)},b.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((f,v)=>f.playOrder-v.playOrder))},b.prototype.beginWeightedAnimation=function(f,v,Z){let V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,h=arguments.length>4?arguments[4]:void 0,J=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,l=arguments.length>6?arguments[6]:void 0,e=arguments.length>7?arguments[7]:void 0,C=arguments.length>8?arguments[8]:void 0,H=arguments.length>9?arguments[9]:void 0,O=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const u=this.beginAnimation(f,v,Z,h,J,l,e,!1,C,H,O);return u.weight=V,u},b.prototype.beginAnimation=function(f,v,Z,V){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,J=arguments.length>5?arguments[5]:void 0,l=arguments.length>6?arguments[6]:void 0,e=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],C=arguments.length>8?arguments[8]:void 0,H=arguments.length>9?arguments[9]:void 0,O=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(h<0){const f=v;v=Z,Z=f,h=-h}v>Z&&(h=-h),e&&this.stopAnimation(f,void 0,C),l||(l=new u(this,f,v,Z,V,h,J,void 0,H,O));const W=!C||C(f);if(f.animations&&W&&l.appendAnimations(f,f.animations),f.getAnimatables){const O=f.getAnimatables();for(let f=0;f<O.length;f++)this.beginAnimation(O[f],v,Z,V,h,J,l,e,C,H)}return l.reset(),l},b.prototype.beginHierarchyAnimation=function(f,v,Z,V,h){let J=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,l=arguments.length>6?arguments[6]:void 0,e=arguments.length>7?arguments[7]:void 0,C=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],H=arguments.length>9?arguments[9]:void 0,O=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const u=f.getDescendants(v),W=[];W.push(this.beginAnimation(f,Z,V,h,J,l,e,C,H,void 0,O));for(const a of u)W.push(this.beginAnimation(a,Z,V,h,J,l,e,C,H,void 0,O));return W},b.prototype.beginDirectAnimation=function(f,v,Z,V,h){let J=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(J<0){const f=Z;Z=V,V=f,J=-J}return Z>V&&(J=-J),new u(this,f,Z,V,h,J,arguments.length>6?arguments[6]:void 0,v,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},b.prototype.beginDirectHierarchyAnimation=function(f,v,Z,V,h,J,l,e,C){let H=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const O=f.getDescendants(v),u=[];u.push(this.beginDirectAnimation(f,Z,V,h,J,l,e,C,H));for(const W of O)u.push(this.beginDirectAnimation(W,Z,V,h,J,l,e,C,H));return u},b.prototype.getAnimatableByTarget=function(f){for(let v=0;v<this._activeAnimatables.length;v++)if(this._activeAnimatables[v].target===f)return this._activeAnimatables[v];return null},b.prototype.getAllAnimatablesByTarget=function(f){const v=[];for(let Z=0;Z<this._activeAnimatables.length;Z++)this._activeAnimatables[Z].target===f&&v.push(this._activeAnimatables[Z]);return v},b.prototype.stopAnimation=function(f,v,Z){const V=this.getAllAnimatablesByTarget(f);for(const h of V)h.stop(v,Z)},b.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let f=0;f<this._activeAnimatables.length;f++)this._activeAnimatables[f].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const f of this.animationGroups)f.stop()});class U{getClassName(){return"TargetedAnimation"}serialize(){const f={};return f.animation=this.animation.serialize(),f.targetId=this.target.id,f}}class K{get mask(){return this._mask}set mask(f){this._mask!==f&&(this._mask=f,this.syncWithMask(!0))}syncWithMask(){let f=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||f){this._numActiveAnimatables=0;for(let f=0;f<this._animatables.length;++f){const v=this._animatables[f];!this.mask||this.mask.disabled||this.mask.retainsTarget(v.target.name)?(this._numActiveAnimatables++,v.paused&&v.restart()):v.paused||v.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let f=0;f<this._animatables.length;++f){const v=this._animatables[f];this.mask.retainsTarget(v.target.name)||(v.stop(),this._animatables.splice(f,1),--f)}for(let f=0;f<this._targetedAnimations.length;f++){const v=this._targetedAnimations[f];this.mask.retainsTarget(v.target.name)||(this._targetedAnimations.splice(f,1),--f)}}}get from(){return this._from}set from(f){if(this._from!==f){this._from=f;for(let f=0;f<this._animatables.length;f++){this._animatables[f].fromFrame=this._from}}}get to(){return this._to}set to(f){if(this._to!==f){this._to=f;for(let f=0;f<this._animatables.length;f++){this._animatables[f].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(f){if(this._speedRatio!==f){this._speedRatio=f;for(let f=0;f<this._animatables.length;f++){this._animatables[f].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(f){if(this._loopAnimation!==f){this._loopAnimation=f;for(let f=0;f<this._animatables.length;f++){this._animatables[f].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(f){if(this._isAdditive!==f){this._isAdditive=f;for(let f=0;f<this._animatables.length;f++){this._animatables[f].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(f){this._weight!==f&&(this._weight=f,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(f){if(this._playOrder!==f&&(this._playOrder=f,this._animatables.length>0)){for(let f=0;f<this._animatables.length;f++)this._animatables[f].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(f){if(this._enableBlending!==f&&(this._enableBlending=f,null!==f))for(let v=0;v<this._targetedAnimations.length;++v)this._targetedAnimations[v].animation.enableBlending=f}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(f){if(this._blendingSpeed!==f&&(this._blendingSpeed=f,null!==f))for(let v=0;v<this._targetedAnimations.length;++v)this._targetedAnimations[v].animation.blendingSpeed=f}getLength(f,v){f=f??this._from;return((v=v??this._to)-f)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(f){let v=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],Z=arguments.length>2&&void 0!==arguments[2]&&arguments[2],V=arguments.length>3?arguments[3]:void 0;if(0===f.length)return null;V=V??f[0].weight;let h=Number.MAX_VALUE,J=-Number.MAX_VALUE;if(Z)for(const e of f)e.from<h&&(h=e.from),e.to>J&&(J=e.to);const l=new K(f[0].name+"_merged",f[0]._scene,V);for(const e of f){Z&&e.normalize(h,J);for(const f of e.targetedAnimations)l.addTargetedAnimation(f.animation,f.target);v&&e.dispose()}return l}constructor(f){let v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Z=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=f,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new h.c,this.onAnimationLoopObservable=new h.c,this.onAnimationGroupLoopObservable=new h.c,this.onAnimationGroupEndObservable=new h.c,this.onAnimationGroupPauseObservable=new h.c,this.onAnimationGroupPlayObservable=new h.c,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=v||J.c.LastCreatedScene,this._weight=Z,this._playOrder=V,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(f,v){const Z=new U;Z.animation=f,Z.target=v;const V=f.getKeys();return this._from>V[0].frame&&(this._from=V[0].frame),this._to<V[V.length-1].frame&&(this._to=V[V.length-1].frame),null!==this._enableBlending&&(f.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(f.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(Z),this._shouldStart=!0,Z}removeTargetedAnimation(f){for(let v=this._targetedAnimations.length-1;v>-1;v--){this._targetedAnimations[v].animation===f&&this._targetedAnimations.splice(v,1)}}normalize(){let f=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==f&&(f=this._from),null==v&&(v=this._to);for(let Z=0;Z<this._targetedAnimations.length;Z++){const V=this._targetedAnimations[Z].animation.getKeys(),h=V[0],J=V[V.length-1];if(h.frame>f){const v={frame:f,value:h.value,inTangent:h.inTangent,outTangent:h.outTangent,interpolation:h.interpolation};V.splice(0,0,v)}if(J.frame<v){const f={frame:v,value:J.value,inTangent:J.inTangent,outTangent:J.outTangent,interpolation:J.interpolation};V.push(f)}}return this._from=f,this._to=v,this}_processLoop(f,v,Z){f.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(v),this._animationLoopFlags[Z]||(this._animationLoopFlags[Z]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let f=arguments.length>0&&void 0!==arguments[0]&&arguments[0],v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,Z=arguments.length>2?arguments[2]:void 0,V=arguments.length>3?arguments[3]:void 0,h=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=f,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let J=0;J<this._targetedAnimations.length;J++){const l=this._targetedAnimations[J],e=this._scene.beginDirectAnimation(l.target,[l.animation],void 0!==Z?Z:this._from,void 0!==V?V:this._to,f,v,void 0,void 0,void 0!==h?h:this._isAdditive);e.weight=this._weight,e.playOrder=this._playOrder,e.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(l),this._checkAnimationGroupEnded(e)},this._processLoop(e,l,J),this._animatables.push(e)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=v,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let f=0;f<this._animatables.length;f++){this._animatables[f].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(f){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==f&&(this.loopAnimation=f),this.restart()):(this.stop(),this.start(f,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let f=0;f<this._animatables.length;f++){this._animatables[f].reset()}return this}restart(){if(!this._isStarted)return this;for(let f=0;f<this._animatables.length;f++){this._animatables[f].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let f=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const v=this._animatables.slice();for(let V=0;V<v.length;V++)v[V].stop(void 0,void 0,!0,f);let Z=0;for(let V=0;V<this._scene._activeAnimatables.length;V++){const v=this._scene._activeAnimatables[V];v._runtimeAnimations.length>0?this._scene._activeAnimatables[Z++]=v:f&&this._checkAnimationGroupEnded(v,f)}return this._scene._activeAnimatables.length=Z,this._isStarted=!1,this}setWeightForAllAnimatables(f){for(let v=0;v<this._animatables.length;v++){this._animatables[v].weight=f}return this}syncAllAnimationsWith(f){for(let v=0;v<this._animatables.length;v++){this._animatables[v].syncWith(f)}return this}goToFrame(f){let v=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].goToFrame(f,v)}return this}getCurrentFrame(){var f;return(null===(f=this.animatables[0])||void 0===f?void 0:f.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const f=this._scene.animationGroups.indexOf(this);if(f>-1&&this._scene.animationGroups.splice(f,1),this._parentContainer){const f=this._parentContainer.animationGroups.indexOf(this);f>-1&&this._parentContainer.animationGroups.splice(f,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(f){let v=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const Z=this._animatables.indexOf(f);Z>-1&&this._animatables.splice(Z,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,v||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(f,v){let Z=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const V=new K(f||this.name,this._scene,this._weight,this._playOrder);V._from=this.from,V._to=this.to,V._speedRatio=this.speedRatio,V._loopAnimation=this.loopAnimation,V._isAdditive=this.isAdditive,V._enableBlending=this.enableBlending,V._blendingSpeed=this.blendingSpeed,V.metadata=this.metadata,V.mask=this.mask;for(const h of this._targetedAnimations)V.addTargetedAnimation(Z?h.animation.clone():h.animation,v?v(h.target):h.target);return V}serialize(){const f={};f.name=this.name,f.from=this.from,f.to=this.to,f.speedRatio=this.speedRatio,f.loopAnimation=this.loopAnimation,f.isAdditive=this.isAdditive,f.weight=this.weight,f.playOrder=this.playOrder,f.enableBlending=this.enableBlending,f.blendingSpeed=this.blendingSpeed,f.targetedAnimations=[];for(let v=0;v<this.targetedAnimations.length;v++){const Z=this.targetedAnimations[v];f.targetedAnimations[v]=Z.serialize()}return l.b&&l.b.HasTags(this)&&(f.tags=l.b.GetTags(this)),this.metadata&&(f.metadata=this.metadata),f}static Parse(f,v){const Z=new K(f.name,v,f.weight,f.playOrder);for(let h=0;h<f.targetedAnimations.length;h++){const J=f.targetedAnimations[h],l=V.b.Parse(J.animation),e=J.targetId;if("influence"===J.animation.property){const f=v.getMorphTargetById(e);f&&Z.addTargetedAnimation(l,f)}else{const f=v.getNodeById(e);null!=f&&Z.addTargetedAnimation(l,f)}}return l.b&&l.b.AddTagsTo(Z,f.tags),null!==f.from&&null!==f.to&&Z.normalize(f.from,f.to),void 0!==f.speedRatio&&(Z._speedRatio=f.speedRatio),void 0!==f.loopAnimation&&(Z._loopAnimation=f.loopAnimation),void 0!==f.isAdditive&&(Z._isAdditive=f.isAdditive),void 0!==f.weight&&(Z._weight=f.weight),void 0!==f.playOrder&&(Z._playOrder=f.playOrder),void 0!==f.enableBlending&&(Z._enableBlending=f.enableBlending),void 0!==f.blendingSpeed&&(Z._blendingSpeed=f.blendingSpeed),void 0!==f.metadata&&(Z.metadata=f.metadata),Z}static MakeAnimationAdditive(f,v,Z){let h;h="object"===typeof v?v:{referenceFrame:v,range:Z,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let J=f;h.cloneOriginalAnimationGroup&&(J=f.clone(h.clonedAnimationGroupName||J.name));const l=J.targetedAnimations;for(let e=0;e<l.length;e++){const f=l[e];f.animation=V.b.MakeAnimationAdditive(f.animation,h)}if(J.isAdditive=!0,h.clipKeys){let f=Number.MAX_VALUE,v=-Number.MAX_VALUE;const Z=J.targetedAnimations;for(let V=0;V<Z.length;V++){const h=Z[V].animation.getKeys();f>h[0].frame&&(f=h[0].frame),v<h[h.length-1].frame&&(v=h[h.length-1].frame)}J._from=f,J._to=v}return J}static ClipKeys(f,v,Z,V,h){const J=f.clone(V||f.name);return K.ClipKeysInPlace(J,v,Z,h)}static ClipKeysInPlace(f,v,Z,V){return K.ClipInPlace(f,v,Z,V,!1)}static ClipFrames(f,v,Z,V,h){const J=f.clone(V||f.name);return K.ClipFramesInPlace(J,v,Z,h)}static ClipFramesInPlace(f,v,Z,V){return K.ClipInPlace(f,v,Z,V,!0)}static ClipInPlace(f,v,Z,V){let h=arguments.length>4&&void 0!==arguments[4]&&arguments[4],J=Number.MAX_VALUE,l=-Number.MAX_VALUE;const e=f.targetedAnimations;for(let C=0;C<e.length;C++){const f=e[C],H=V?f.animation:f.animation.clone();h&&(H.createKeyForFrame(v),H.createKeyForFrame(Z));const O=H.getKeys(),u=[];let W=Number.MAX_VALUE;for(let V=0;V<O.length;V++){const f=O[V];if(!h&&V>=v&&V<=Z||h&&f.frame>=v&&f.frame<=Z){const v={frame:f.frame,value:f.value.clone?f.value.clone():f.value,inTangent:f.inTangent,outTangent:f.outTangent,interpolation:f.interpolation,lockedTangent:f.lockedTangent};W===Number.MAX_VALUE&&(W=v.frame),v.frame-=W,u.push(v)}}0!==u.length?(J>u[0].frame&&(J=u[0].frame),l<u[u.length-1].frame&&(l=u[u.length-1].frame),H.setKeys(u,!0),f.animation=H):(e.splice(C,1),C--)}return f._from=J,f._to=l,f}getClassName(){return"AnimationGroup"}toString(f){let v="Name: "+this.name;return v+=", type: "+this.getClassName(),f&&(v+=", from: "+this._from,v+=", to: "+this._to,v+=", isStarted: "+this._isStarted,v+=", speedRatio: "+this._speedRatio,v+=", targetedAnimations length: "+this._targetedAnimations.length,v+=", animatables length: "+this._animatables),v}}}}]);