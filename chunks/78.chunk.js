"use strict";(self.agop5zpabxv=self.agop5zpabxv||[]).push([[78],{15449:(H,u,J)=>{J.r(u),J.d(u,{AnimationGroup:()=>k,TargetedAnimation:()=>a});var O=J(12852),U=J(12175),h=J(12203),w=J(12374),g=J(13956),B=J(12338);class b{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(H,u,J,U){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=u,this._target=H,this._scene=J,this._host=U,this._activeTargets=[],u._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===O.e.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=B.Matrix.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const H={frame:0,value:this._minValue};this._keys.splice(0,0,H)}if(this._target instanceof Array){let H=0;for(const u of this._target)this._preparePath(u,H),this._getOriginalValues(H),H++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const h=u.getEvents();if(h&&h.length>0)for(const O of h)this._events.push(O._clone());this._enableBlending=H&&H.animationPropertiesOverride?H.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(H){let u=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const J=this._animation.targetPropertyPath;if(J.length>1){let O=H;for(let H=0;H<J.length-1;H++){const u=J[H];if(O=O[u],void 0===O)throw new Error(`Invalid property (${u}) in property path (${J.join(".")})`)}this._targetPath=J[J.length-1],this._activeTargets[u]=O}else this._targetPath=J[0],this._activeTargets[u]=H;if(void 0===this._activeTargets[u][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${J.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let H=0;for(const u of this._target)void 0!==this._originalValue[H]&&this._setValue(u,this._activeTargets[H],this._originalValue[H],-1,H),H++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let H=0;H<this._events.length;H++)this._events[H].isDone=!1}isStopped(){return this._stopped}dispose(){const H=this._animation.runtimeAnimations.indexOf(this);H>-1&&this._animation.runtimeAnimations.splice(H,1)}setValue(H,u){if(this._targetIsArray)for(let J=0;J<this._target.length;J++){const O=this._target[J];this._setValue(O,this._activeTargets[J],H,u,J)}else this._setValue(this._target,this._directTarget,H,u,0)}_getOriginalValues(){let H,u=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const J=this._activeTargets[u];H=J.getLocalMatrix&&"_matrix"===this._targetPath?J.getLocalMatrix():J[this._targetPath],H&&H.clone?this._originalValue[u]=H.clone():this._originalValue[u]=H}_registerTargetForLateAnimationBinding(H,u){const J=H.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(J),J._lateAnimationHolders||(J._lateAnimationHolders={}),J._lateAnimationHolders[H.targetPath]||(J._lateAnimationHolders[H.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:u}),H.isAdditive?(J._lateAnimationHolders[H.targetPath].additiveAnimations.push(H),J._lateAnimationHolders[H.targetPath].totalAdditiveWeight+=H.weight):(J._lateAnimationHolders[H.targetPath].animations.push(H),J._lateAnimationHolders[H.targetPath].totalWeight+=H.weight)}_setValue(H,u,J,U,h){if(this._currentActiveTarget=u,this._weight=U,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const H=u[this._targetPath];H.clone?this._originalBlendValue=H.clone():this._originalBlendValue=H}this._originalBlendValue.m?O.e.AllowMatrixDecomposeForInterpolation?this._currentValue?B.Matrix.DecomposeLerpToRef(this._originalBlendValue,J,this._blendingFactor,this._currentValue):this._currentValue=B.Matrix.DecomposeLerp(this._originalBlendValue,J,this._blendingFactor):this._currentValue?B.Matrix.LerpToRef(this._originalBlendValue,J,this._blendingFactor,this._currentValue):this._currentValue=B.Matrix.Lerp(this._originalBlendValue,J,this._blendingFactor):this._currentValue=O.e._UniversalLerp(this._originalBlendValue,J,this._blendingFactor);const U=H&&H.animationPropertiesOverride?H.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=U}else this._currentValue?this._currentValue.O?this._currentValue.O(J):this._currentValue=J:null!==J&&void 0!==J&&J.clone?this._currentValue=J.clone():this._currentValue=J;-1!==U?this._registerTargetForLateAnimationBinding(this,this._originalValue[h]):this._animationState.loopMode===O.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[h],u[this._targetPath]):u[this._targetPath]=this._originalValue[h]+this._currentValue:u[this._targetPath]=this._currentValue,H.BG&&H.BG(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(H){let u=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const J=this._animation.getKeys();H<J[0].frame?H=J[0].frame:H>J[J.length-1].frame&&(H=J[J.length-1].frame);const O=this._events;if(O.length)for(let h=0;h<O.length;h++)O[h].onlyOnce||(O[h].isDone=O[h].frame<H);this._currentFrame=H;const U=this._animation._interpolate(H,this._animationState);this.setValue(U,u)}_prepareForSpeedRatioChange(H){const u=this._previousElapsedTime*(this._animation.framePerSecond*H)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-u}animate(H,u,J,U,h){let w=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const g=this._animation,B=g.targetPropertyPath;if(!B||B.length<1)return this._stopped=!0,!1;let b,d=!0;const G=this._events;let P=0;if(this._coreRuntimeAnimation)P=J-u,b=this._coreRuntimeAnimation.currentFrame,this._currentFrame=b,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let w;(u<this._minFrame||u>this._maxFrame)&&(u=this._minFrame),(J<this._minFrame||J>this._maxFrame)&&(J=this._maxFrame),P=J-u;let B=H*(g.framePerSecond*h)/1e3+this._absoluteFrameOffset,mH=0,l=!1;const r=U&&this._animationState.loopMode===O.e.ANIMATIONLOOPMODE_YOYO;if(r){const H=(B-u)/P,J=Math.sin(H*Math.PI);B=Math.abs(J)*P+u;const O=J>=0?1:-1;this._yoyoDirection!==O&&(l=!0),this._yoyoDirection=O}if(this._previousElapsedTime=H,this._previousAbsoluteFrame=B,!U&&J>=u&&(B>=P&&h>0||B<=0&&h<0))d=!1,mH=g._getKeyValue(this._maxValue);else if(!U&&u>=J&&(B<=P&&h<0||B>=0&&h>0))d=!1,mH=g._getKeyValue(this._minValue);else if(this._animationState.loopMode!==O.e.ANIMATIONLOOPMODE_CYCLE){const H=J.toString()+u.toString();if(!this._offsetsCache[H]){this._animationState.repeatCount=0,this._animationState.loopMode=O.e.ANIMATIONLOOPMODE_CYCLE;const U=g._interpolate(u,this._animationState),h=g._interpolate(J,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),g.dataType){case O.e.ANIMATIONTYPE_FLOAT:this._offsetsCache[H]=h-U;break;case O.e.ANIMATIONTYPE_QUATERNION:case O.e.ANIMATIONTYPE_VECTOR3:case O.e.ANIMATIONTYPE_VECTOR2:case O.e.ANIMATIONTYPE_SIZE:case O.e.ANIMATIONTYPE_COLOR3:this._offsetsCache[H]=h.ru(U)}this._highLimitsCache[H]=h}mH=this._highLimitsCache[H],w=this._offsetsCache[H]}if(void 0===w)switch(g.dataType){case O.e.ANIMATIONTYPE_FLOAT:w=0;break;case O.e.ANIMATIONTYPE_QUATERNION:w=O.h;break;case O.e.ANIMATIONTYPE_VECTOR3:w=O.l;break;case O.e.ANIMATIONTYPE_VECTOR2:w=O.k;break;case O.e.ANIMATIONTYPE_SIZE:w=O.j;break;case O.e.ANIMATIONTYPE_COLOR3:w=O.f;break;case O.e.ANIMATIONTYPE_COLOR4:w=O.g}if(this._host&&this._host.syncRoot){const H=this._host.syncRoot;b=u+P*((H.masterFrame-H.fromFrame)/(H.toFrame-H.fromFrame))}else b=B>0&&u>J||B<0&&u<J?d&&0!==P?J+B%P:u:d&&0!==P?u+B%P:J;if(!r&&(h>0&&this.currentFrame>b||h<0&&this.currentFrame<b)||r&&l){this._onLoop();for(let H=0;H<G.length;H++)G[H].onlyOnce||(G[H].isDone=!1);this._animationState.key=h>0?0:g.getKeys().length-1}this._currentFrame=b,this._animationState.repeatCount=0===P?0:B/P|0,this._animationState.highLimitValue=mH,this._animationState.offsetValue=w}const mH=g._interpolate(b,this._animationState);if(this.setValue(mH,w),G.length)for(let O=0;O<G.length;O++)if(P>=0&&b>=G[O].frame&&G[O].frame>=u||P<0&&b<=G[O].frame&&G[O].frame<=u){const H=G[O];H.isDone||(H.onlyOnce&&(G.splice(O,1),O--),H.isDone=!0,H.action(b))}return d||(this._stopped=!0),d}}var d=J(12197);class G{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(H){this._weight=-1!==H?Math.min(Math.max(H,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(H){for(let u=0;u<this._runtimeAnimations.length;u++){this._runtimeAnimations[u]._prepareForSpeedRatioChange(H)}this._speedRatio=H,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(H,u){let J=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,O=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,h=arguments.length>4&&void 0!==arguments[4]&&arguments[4],w=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,g=arguments.length>6?arguments[6]:void 0,B=arguments.length>7?arguments[7]:void 0,b=arguments.length>8?arguments[8]:void 0,d=arguments.length>9&&void 0!==arguments[9]&&arguments[9],G=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=u,this.fromFrame=J,this.toFrame=O,this.loopAnimation=h,this.onAnimationEnd=g,this.onAnimationLoop=b,this.isAdditive=d,this.playOrder=G,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.Pg=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new U.b,this.onAnimationLoopObservable=new U.b,this._scene=H,B&&this.appendAnimations(u,B),this._speedRatio=w,H._activeAnimatables.push(this)}syncWith(H){if(this._syncRoot=H,H){const H=this._scene._activeAnimatables.indexOf(this);H>-1&&(this._scene._activeAnimatables.splice(H,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(H,u){for(let J=0;J<u.length;J++){const O=u[J],U=new b(H,O,this._scene,this);U._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(U)}}getAnimationByTargetProperty(H){const u=this._runtimeAnimations;for(let J=0;J<u.length;J++)if(u[J].animation.targetProperty===H)return u[J].animation;return null}getRuntimeAnimationByTargetProperty(H){const u=this._runtimeAnimations;for(let J=0;J<u.length;J++)if(u[J].animation.targetProperty===H)return u[J];return null}reset(){const H=this._runtimeAnimations;for(let u=0;u<H.length;u++)H[u].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(H){const u=this._runtimeAnimations;for(let J=0;J<u.length;J++)u[J].animation.enableBlending=!0,u[J].animation.blendingSpeed=H}disableBlending(){const H=this._runtimeAnimations;for(let u=0;u<H.length;u++)H[u].animation.enableBlending=!1}goToFrame(H){let u=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const J=this._runtimeAnimations;if(J[0]){const u=J[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??J[0].currentFrame;const O=0===this.speedRatio?0:(H-this._frameToSyncFromJump)/u*1e3/this.speedRatio;this._manualJumpDelay=-O}for(let O=0;O<J.length;O++)J[O].goToFrame(H,u?this._weight:-1);this._goToFrame=H}get paused(){return this.Pg}pause(){this.Pg||(this.Pg=!0)}restart(){this.Pg=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(H,u){let J=arguments.length>2&&void 0!==arguments[2]&&arguments[2],O=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(H||u){const U=this._scene._activeAnimatables.indexOf(this);if(U>-1){const h=this._runtimeAnimations;for(let J=h.length-1;J>=0;J--){const O=h[J];H&&O.animation.name!=H||(u&&!u(O.target)||(O.dispose(),h.splice(J,1)))}0==h.length&&(J||this._scene._activeAnimatables.splice(U,1),O||this._raiseOnAnimationEnd())}}else{const H=this._scene._activeAnimatables.indexOf(this);if(H>-1){J||this._scene._activeAnimatables.splice(H,1);const u=this._runtimeAnimations;for(let H=0;H<u.length;H++)u[H].dispose();this._runtimeAnimations.length=0,O||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((H=>{this.onAnimationEndObservable.add((()=>{H(this)}),void 0,void 0,this,!0)}))}_animate(H){if(this.Pg)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=H),!0;if(null===this._localDelayOffset?(this._localDelayOffset=H,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=H-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let u=!1;const J=this._runtimeAnimations;let O;for(O=0;O<J.length;O++){const U=J[O].animate(H-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);u=u||U}if(this.animationStarted=u,!u){if(this.disposeOnEnd)for(O=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(O,1),O=0;O<J.length;O++)J[O].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return u}}function P(H){if(0===H.totalWeight&&0===H.totalAdditiveWeight)return H.originalValue;let u=1;const J=B.TmpVectors.lu[0],O=B.TmpVectors.lu[1],U=B.TmpVectors.Quaternion[0];let h=0;const w=H.animations[0],g=H.originalValue;let b=1,d=!1;if(H.totalWeight<1)b=1-H.totalWeight,g.decompose(O,U,J);else{if(h=1,u=H.totalWeight,b=w.weight/u,1==b){if(!H.totalAdditiveWeight)return w.currentValue;d=!0}w.currentValue.decompose(O,U,J)}if(!d){O.scaleInPlace(b),J.scaleInPlace(b),U.scaleInPlace(b);for(let w=h;w<H.animations.length;w++){const h=H.animations[w];if(0===h.weight)continue;b=h.weight/u;const g=B.TmpVectors.lu[2],d=B.TmpVectors.lu[3],G=B.TmpVectors.Quaternion[1];h.currentValue.decompose(d,G,g),d.scaleAndAddToRef(b,O),G.scaleAndAddToRef(B.Quaternion.Dot(U,G)>0?b:-b,U),g.scaleAndAddToRef(b,J)}U.normalize()}for(let P=0;P<H.additiveAnimations.length;P++){const u=H.additiveAnimations[P];if(0===u.weight)continue;const h=B.TmpVectors.lu[2],w=B.TmpVectors.lu[3],g=B.TmpVectors.Quaternion[1];u.currentValue.decompose(w,g,h),w.multiplyToRef(O,w),B.lu.LerpToRef(O,w,u.weight,O),U.multiplyToRef(g,g),B.Quaternion.SlerpToRef(U,g,u.weight,U),h.scaleAndAddToRef(u.weight,J)}const G=w?w._animationState.workValue:B.TmpVectors.Matrix[0].clone();return B.Matrix.ComposeToRef(O,U,J,G),G}function mH(H,u){if(0===H.totalWeight&&0===H.totalAdditiveWeight)return u;const J=H.animations[0],O=H.originalValue;let U=u;if(0===H.totalWeight&&H.totalAdditiveWeight>0)U.O(O);else if(1===H.animations.length){if(B.Quaternion.SlerpToRef(O,J.currentValue,Math.min(1,H.totalWeight),U),0===H.totalAdditiveWeight)return U}else if(H.animations.length>1){let J,h,w=1;if(H.totalWeight<1){const u=1-H.totalWeight;J=[],h=[],J.push(O),h.push(u)}else{if(2===H.animations.length&&(B.Quaternion.SlerpToRef(H.animations[0].currentValue,H.animations[1].currentValue,H.animations[1].weight/H.totalWeight,u),0===H.totalAdditiveWeight))return u;J=[],h=[],w=H.totalWeight}for(let u=0;u<H.animations.length;u++){const O=H.animations[u];J.push(O.currentValue),h.push(O.weight/w)}let g=0;for(let H=0;H<J.length;)H?(g+=h[H],B.Quaternion.SlerpToRef(U,J[H],h[H]/g,U),H++):(B.Quaternion.SlerpToRef(J[H],J[H+1],h[H+1]/(h[H]+h[H+1]),u),U=u,g=h[H]+h[H+1],H+=2)}for(let h=0;h<H.additiveAnimations.length;h++){const u=H.additiveAnimations[h];0!==u.weight&&(U.multiplyToRef(u.currentValue,B.TmpVectors.Quaternion[0]),B.Quaternion.SlerpToRef(U,B.TmpVectors.Quaternion[0],u.weight,U))}return U}var l,r,p=J(12568);l=p.d,(r=g.e)&&(r.prototype.copyAnimationRange=function(H,u,J){let U=arguments.length>3&&void 0!==arguments[3]&&arguments[3],h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new O.e(this.name,"_matrix",H.animations[0].framePerSecond,O.e.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const w=H.animations[0].getRange(u);if(!w)return!1;const g=w.from,B=w.to,b=H.animations[0].getKeys(),d=H.length,G=H.getParent(),P=this.getParent(),mH=U&&G&&d&&this.length&&d!==this.length,l=mH&&P&&G?P.length/G.length:1,r=U&&!P&&h&&(1!==h.x||1!==h.y||1!==h.z),p=this.animations[0].getKeys();let a,k,C;for(let O=0,j=b.length;O<j;O++)a=b[O],a.frame>=g&&a.frame<=B&&(U?(C=a.value.clone(),mH?(k=C.getTranslation(),C.setTranslation(k.scaleInPlace(l))):r&&h?(k=C.getTranslation(),C.setTranslation(k.multiplyInPlace(h))):C=a.value):C=a.value,p.push({frame:a.frame+J,value:C}));return this.animations[0].createRange(u,g+J,B+J),!0}),l&&(l.prototype._animate=function(H){if(!this.animationsEnabled)return;const u=d.e.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=u}this.deltaTime=void 0!==H?H:this.useConstantAnimationDeltaTime?16:(u-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=u;const J=this._activeAnimatables;if(0===J.length)return;this._animationTime+=this.deltaTime;const U=this._animationTime;for(let O=0;O<J.length;O++){const H=J[O];!H._animate(U)&&H.disposeOnEnd&&O--}!function(H){if(H._registeredForLateAnimationBindings.length){for(let u=0;u<H._registeredForLateAnimationBindings.length;u++){const J=H._registeredForLateAnimationBindings.data[u];for(const H in J._lateAnimationHolders){const u=J._lateAnimationHolders[H],U=u.animations[0],h=u.originalValue;if(void 0===h||null===h)continue;const w=O.e.AllowMatrixDecomposeForInterpolation&&h.m;let g=J[H];if(w)g=P(u);else if(void 0!==h.w)g=mH(u,g||B.Quaternion.Identity());else{let H=0,J=1;const w=U&&U._animationState.loopMode===O.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(u.totalWeight<1)g=w?h.clone?h.clone():h:U&&h.scale?h.scale(1-u.totalWeight):U?h*(1-u.totalWeight):h.clone?h.clone():h;else if(U){J=u.totalWeight;const O=U.weight/J;g=1!==O?U.currentValue.scale?U.currentValue.scale(O):U.currentValue*O:U.currentValue,w&&(g.addToRef?g.addToRef(h,g):g+=h),H=1}for(let O=H;O<u.animations.length;O++){const H=u.animations[O],U=H.weight/J;U&&(H.currentValue.scaleAndAddToRef?H.currentValue.scaleAndAddToRef(U,g):g+=H.currentValue*U)}for(let O=0;O<u.additiveAnimations.length;O++){const H=u.additiveAnimations[O],J=H.weight;J&&(H.currentValue.scaleAndAddToRef?H.currentValue.scaleAndAddToRef(J,g):g+=H.currentValue*J)}}J[H]=g}J._lateAnimationHolders={}}H._registeredForLateAnimationBindings.reset()}}(this)},l.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((H,u)=>H.playOrder-u.playOrder))},l.prototype.beginWeightedAnimation=function(H,u,J){let O=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,U=arguments.length>4?arguments[4]:void 0,h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,w=arguments.length>6?arguments[6]:void 0,g=arguments.length>7?arguments[7]:void 0,B=arguments.length>8?arguments[8]:void 0,b=arguments.length>9?arguments[9]:void 0,d=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const G=this.beginAnimation(H,u,J,U,h,w,g,!1,B,b,d);return G.weight=O,G},l.prototype.beginAnimation=function(H,u,J,O){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,h=arguments.length>5?arguments[5]:void 0,w=arguments.length>6?arguments[6]:void 0,g=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],B=arguments.length>8?arguments[8]:void 0,b=arguments.length>9?arguments[9]:void 0,d=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(U<0){const H=u;u=J,J=H,U=-U}u>J&&(U=-U),g&&this.stopAnimation(H,void 0,B),w||(w=new G(this,H,u,J,O,U,h,void 0,b,d));const P=!B||B(H);if(H.animations&&P&&w.appendAnimations(H,H.animations),H.getAnimatables){const d=H.getAnimatables();for(let H=0;H<d.length;H++)this.beginAnimation(d[H],u,J,O,U,h,w,g,B,b)}return w.reset(),w},l.prototype.beginHierarchyAnimation=function(H,u,J,O,U){let h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,w=arguments.length>6?arguments[6]:void 0,g=arguments.length>7?arguments[7]:void 0,B=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],b=arguments.length>9?arguments[9]:void 0,d=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const G=H.getDescendants(u),P=[];P.push(this.beginAnimation(H,J,O,U,h,w,g,B,b,void 0,d));for(const mH of G)P.push(this.beginAnimation(mH,J,O,U,h,w,g,B,b,void 0,d));return P},l.prototype.beginDirectAnimation=function(H,u,J,O,U){let h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(h<0){const H=J;J=O,O=H,h=-h}return J>O&&(h=-h),new G(this,H,J,O,U,h,arguments.length>6?arguments[6]:void 0,u,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},l.prototype.beginDirectHierarchyAnimation=function(H,u,J,O,U,h,w,g,B){let b=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const d=H.getDescendants(u),G=[];G.push(this.beginDirectAnimation(H,J,O,U,h,w,g,B,b));for(const P of d)G.push(this.beginDirectAnimation(P,J,O,U,h,w,g,B,b));return G},l.prototype.getAnimatableByTarget=function(H){for(let u=0;u<this._activeAnimatables.length;u++)if(this._activeAnimatables[u].target===H)return this._activeAnimatables[u];return null},l.prototype.getAllAnimatablesByTarget=function(H){const u=[];for(let J=0;J<this._activeAnimatables.length;J++)this._activeAnimatables[J].target===H&&u.push(this._activeAnimatables[J]);return u},l.prototype.stopAnimation=function(H,u,J){const O=this.getAllAnimatablesByTarget(H);for(const U of O)U.stop(u,J)},l.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let H=0;H<this._activeAnimatables.length;H++)this._activeAnimatables[H].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const H of this.animationGroups)H.stop()});class a{getClassName(){return"TargetedAnimation"}serialize(){const H={};return H.animation=this.animation.serialize(),H.targetId=this.target.id,H}}class k{get mask(){return this._mask}set mask(H){this._mask!==H&&(this._mask=H,this.syncWithMask(!0))}syncWithMask(){let H=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||H){this._numActiveAnimatables=0;for(let H=0;H<this._animatables.length;++H){const u=this._animatables[H];!this.mask||this.mask.disabled||this.mask.retainsTarget(u.target.name)?(this._numActiveAnimatables++,u.paused&&u.restart()):u.paused||u.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let H=0;H<this._animatables.length;++H){const u=this._animatables[H];this.mask.retainsTarget(u.target.name)||(u.stop(),this._animatables.splice(H,1),--H)}for(let H=0;H<this._targetedAnimations.length;H++){const u=this._targetedAnimations[H];this.mask.retainsTarget(u.target.name)||(this._targetedAnimations.splice(H,1),--H)}}}get from(){return this._from}set from(H){if(this._from!==H){this._from=H;for(let H=0;H<this._animatables.length;H++){this._animatables[H].fromFrame=this._from}}}get to(){return this._to}set to(H){if(this._to!==H){this._to=H;for(let H=0;H<this._animatables.length;H++){this._animatables[H].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(H){if(this._speedRatio!==H){this._speedRatio=H;for(let H=0;H<this._animatables.length;H++){this._animatables[H].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(H){if(this._loopAnimation!==H){this._loopAnimation=H;for(let H=0;H<this._animatables.length;H++){this._animatables[H].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(H){if(this._isAdditive!==H){this._isAdditive=H;for(let H=0;H<this._animatables.length;H++){this._animatables[H].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(H){this._weight!==H&&(this._weight=H,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(H){if(this._playOrder!==H&&(this._playOrder=H,this._animatables.length>0)){for(let H=0;H<this._animatables.length;H++)this._animatables[H].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(H){if(this._enableBlending!==H&&(this._enableBlending=H,null!==H))for(let u=0;u<this._targetedAnimations.length;++u)this._targetedAnimations[u].animation.enableBlending=H}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(H){if(this._blendingSpeed!==H&&(this._blendingSpeed=H,null!==H))for(let u=0;u<this._targetedAnimations.length;++u)this._targetedAnimations[u].animation.blendingSpeed=H}getLength(H,u){H=H??this._from;return((u=u??this._to)-H)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(H){let u=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],J=arguments.length>2&&void 0!==arguments[2]&&arguments[2],O=arguments.length>3?arguments[3]:void 0;if(0===H.length)return null;O=O??H[0].weight;let U=Number.MAX_VALUE,h=-Number.MAX_VALUE;if(J)for(const g of H)g.from<U&&(U=g.from),g.to>h&&(h=g.to);const w=new k(H[0].name+"_merged",H[0]._scene,O);for(const g of H){J&&g.normalize(U,h);for(const H of g.targetedAnimations)w.addTargetedAnimation(H.animation,H.target);u&&g.dispose()}return w}constructor(H){let u=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,J=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,O=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=H,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new U.b,this.onAnimationLoopObservable=new U.b,this.onAnimationGroupLoopObservable=new U.b,this.onAnimationGroupEndObservable=new U.b,this.onAnimationGroupPauseObservable=new U.b,this.onAnimationGroupPlayObservable=new U.b,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=u||h.e.LastCreatedScene,this._weight=J,this._playOrder=O,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(H,u){const J=new a;J.animation=H,J.target=u;const O=H.getKeys();return this._from>O[0].frame&&(this._from=O[0].frame),this._to<O[O.length-1].frame&&(this._to=O[O.length-1].frame),null!==this._enableBlending&&(H.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(H.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(J),this._shouldStart=!0,J}removeTargetedAnimation(H){for(let u=this._targetedAnimations.length-1;u>-1;u--){this._targetedAnimations[u].animation===H&&this._targetedAnimations.splice(u,1)}}normalize(){let H=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,u=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==H&&(H=this._from),null==u&&(u=this._to);for(let J=0;J<this._targetedAnimations.length;J++){const O=this._targetedAnimations[J].animation.getKeys(),U=O[0],h=O[O.length-1];if(U.frame>H){const u={frame:H,value:U.value,inTangent:U.inTangent,outTangent:U.outTangent,interpolation:U.interpolation};O.splice(0,0,u)}if(h.frame<u){const H={frame:u,value:h.value,inTangent:h.inTangent,outTangent:h.outTangent,interpolation:h.interpolation};O.push(H)}}return this._from=H,this._to=u,this}_processLoop(H,u,J){H.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(u),this._animationLoopFlags[J]||(this._animationLoopFlags[J]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let H=arguments.length>0&&void 0!==arguments[0]&&arguments[0],u=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,J=arguments.length>2?arguments[2]:void 0,O=arguments.length>3?arguments[3]:void 0,U=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=H,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let h=0;h<this._targetedAnimations.length;h++){const w=this._targetedAnimations[h],g=this._scene.beginDirectAnimation(w.target,[w.animation],void 0!==J?J:this._from,void 0!==O?O:this._to,H,u,void 0,void 0,void 0!==U?U:this._isAdditive);g.weight=this._weight,g.playOrder=this._playOrder,g.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(w),this._checkAnimationGroupEnded(g)},this._processLoop(g,w,h),this._animatables.push(g)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=u,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let H=0;H<this._animatables.length;H++){this._animatables[H].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(H){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==H&&(this.loopAnimation=H),this.restart()):(this.stop(),this.start(H,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let H=0;H<this._animatables.length;H++){this._animatables[H].reset()}return this}restart(){if(!this._isStarted)return this;for(let H=0;H<this._animatables.length;H++){this._animatables[H].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let H=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const u=this._animatables.slice();for(let O=0;O<u.length;O++)u[O].stop(void 0,void 0,!0,H);let J=0;for(let O=0;O<this._scene._activeAnimatables.length;O++){const u=this._scene._activeAnimatables[O];u._runtimeAnimations.length>0?this._scene._activeAnimatables[J++]=u:H&&this._checkAnimationGroupEnded(u,H)}return this._scene._activeAnimatables.length=J,this._isStarted=!1,this}setWeightForAllAnimatables(H){for(let u=0;u<this._animatables.length;u++){this._animatables[u].weight=H}return this}syncAllAnimationsWith(H){for(let u=0;u<this._animatables.length;u++){this._animatables[u].syncWith(H)}return this}goToFrame(H){let u=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let J=0;J<this._animatables.length;J++){this._animatables[J].goToFrame(H,u)}return this}getCurrentFrame(){var H;return(null===(H=this.animatables[0])||void 0===H?void 0:H.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const H=this._scene.animationGroups.indexOf(this);if(H>-1&&this._scene.animationGroups.splice(H,1),this._parentContainer){const H=this._parentContainer.animationGroups.indexOf(this);H>-1&&this._parentContainer.animationGroups.splice(H,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(H){let u=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const J=this._animatables.indexOf(H);J>-1&&this._animatables.splice(J,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,u||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(H,u){let J=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const O=new k(H||this.name,this._scene,this._weight,this._playOrder);O._from=this.from,O._to=this.to,O._speedRatio=this.speedRatio,O._loopAnimation=this.loopAnimation,O._isAdditive=this.isAdditive,O._enableBlending=this.enableBlending,O._blendingSpeed=this.blendingSpeed,O.metadata=this.metadata,O.mask=this.mask;for(const U of this._targetedAnimations)O.addTargetedAnimation(J?U.animation.clone():U.animation,u?u(U.target):U.target);return O}serialize(){const H={};H.name=this.name,H.from=this.from,H.to=this.to,H.speedRatio=this.speedRatio,H.loopAnimation=this.loopAnimation,H.isAdditive=this.isAdditive,H.weight=this.weight,H.playOrder=this.playOrder,H.enableBlending=this.enableBlending,H.blendingSpeed=this.blendingSpeed,H.targetedAnimations=[];for(let u=0;u<this.targetedAnimations.length;u++){const J=this.targetedAnimations[u];H.targetedAnimations[u]=J.serialize()}return w.d&&w.d.HasTags(this)&&(H.tags=w.d.GetTags(this)),this.metadata&&(H.metadata=this.metadata),H}static Parse(H,u){const J=new k(H.name,u,H.weight,H.playOrder);for(let U=0;U<H.targetedAnimations.length;U++){const h=H.targetedAnimations[U],w=O.e.Parse(h.animation),g=h.targetId;if("influence"===h.animation.property){const H=u.getMorphTargetById(g);H&&J.addTargetedAnimation(w,H)}else{const H=u.getNodeById(g);null!=H&&J.addTargetedAnimation(w,H)}}return w.d&&w.d.AddTagsTo(J,H.tags),null!==H.from&&null!==H.to&&J.normalize(H.from,H.to),void 0!==H.speedRatio&&(J._speedRatio=H.speedRatio),void 0!==H.loopAnimation&&(J._loopAnimation=H.loopAnimation),void 0!==H.isAdditive&&(J._isAdditive=H.isAdditive),void 0!==H.weight&&(J._weight=H.weight),void 0!==H.playOrder&&(J._playOrder=H.playOrder),void 0!==H.enableBlending&&(J._enableBlending=H.enableBlending),void 0!==H.blendingSpeed&&(J._blendingSpeed=H.blendingSpeed),void 0!==H.metadata&&(J.metadata=H.metadata),J}static MakeAnimationAdditive(H,u,J){let U;U="object"===typeof u?u:{referenceFrame:u,range:J,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let h=H;U.cloneOriginalAnimationGroup&&(h=H.clone(U.clonedAnimationGroupName||h.name));const w=h.targetedAnimations;for(let g=0;g<w.length;g++){const H=w[g];H.animation=O.e.MakeAnimationAdditive(H.animation,U)}if(h.isAdditive=!0,U.clipKeys){let H=Number.MAX_VALUE,u=-Number.MAX_VALUE;const J=h.targetedAnimations;for(let O=0;O<J.length;O++){const U=J[O].animation.getKeys();H>U[0].frame&&(H=U[0].frame),u<U[U.length-1].frame&&(u=U[U.length-1].frame)}h._from=H,h._to=u}return h}static ClipKeys(H,u,J,O,U){const h=H.clone(O||H.name);return k.ClipKeysInPlace(h,u,J,U)}static ClipKeysInPlace(H,u,J,O){return k.ClipInPlace(H,u,J,O,!1)}static ClipFrames(H,u,J,O,U){const h=H.clone(O||H.name);return k.ClipFramesInPlace(h,u,J,U)}static ClipFramesInPlace(H,u,J,O){return k.ClipInPlace(H,u,J,O,!0)}static ClipInPlace(H,u,J,O){let U=arguments.length>4&&void 0!==arguments[4]&&arguments[4],h=Number.MAX_VALUE,w=-Number.MAX_VALUE;const g=H.targetedAnimations;for(let B=0;B<g.length;B++){const H=g[B],b=O?H.animation:H.animation.clone();U&&(b.createKeyForFrame(u),b.createKeyForFrame(J));const d=b.getKeys(),G=[];let P=Number.MAX_VALUE;for(let O=0;O<d.length;O++){const H=d[O];if(!U&&O>=u&&O<=J||U&&H.frame>=u&&H.frame<=J){const u={frame:H.frame,value:H.value.clone?H.value.clone():H.value,inTangent:H.inTangent,outTangent:H.outTangent,interpolation:H.interpolation,lockedTangent:H.lockedTangent};P===Number.MAX_VALUE&&(P=u.frame),u.frame-=P,G.push(u)}}0!==G.length?(h>G[0].frame&&(h=G[0].frame),w<G[G.length-1].frame&&(w=G[G.length-1].frame),b.setKeys(G,!0),H.animation=b):(g.splice(B,1),B--)}return H._from=h,H._to=w,H}getClassName(){return"AnimationGroup"}toString(H){let u="Name: "+this.name;return u+=", type: "+this.getClassName(),H&&(u+=", from: "+this._from,u+=", to: "+this._to,u+=", isStarted: "+this._isStarted,u+=", speedRatio: "+this._speedRatio,u+=", targetedAnimations length: "+this._targetedAnimations.length,u+=", animatables length: "+this._animatables),u}}}}]);