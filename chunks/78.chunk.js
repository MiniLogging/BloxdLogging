"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[78],{13904:(A,X,s)=>{s.r(X),s.d(X,{FlowGraphForLoopBlock:()=>r});var N=s(12724),f=s(12677),E=s(616),g=s(12706),K=s(12672);class r extends N.e{constructor(A){super(A),this.startIndex=this.registerDataInput("startIndex",f.b,0),this.endIndex=this.registerDataInput("endIndex",f.b),this.step=this.registerDataInput("step",f.n,1),this.index=this.registerDataOutput("index",f.f,new K.e((0,g.s)((null===A||void 0===A?void 0:A.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(A){var X;const s=(0,g.s)(this.startIndex.getValue(A)),N=this.step.getValue(A);let f=(0,g.s)(this.endIndex.getValue(A));for(let E=s;E<f&&(this.index.setValue(new K.e(E),A),this.executionFlow._activateSignal(A),f=(0,g.s)(this.endIndex.getValue(A)),!(E>r.MaxLoopIterations*N));E+=N);null!==(X=this.config)&&void 0!==X&&X.incrementIndexWhenLoopDone&&this.index.setValue(new K.e((0,g.s)(this.index.getValue(A))+N),A),this.completed._activateSignal(A)}getClassName(){return"FlowGraphForLoopBlock"}}r.MaxLoopIterations=1e3,(0,E.f)("FlowGraphForLoopBlock",r)}}]);