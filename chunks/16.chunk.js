"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[16],{2494:(Z,U,n)=>{n.r(U),n.d(U,{_TGATextureLoader:()=>V});var i=n(513);function B(Z){let U=0;return{id_length:Z[U++],colormap_type:Z[U++],image_type:Z[U++],colormap_index:Z[U++]|Z[U++]<<8,colormap_length:Z[U++]|Z[U++]<<8,colormap_size:Z[U++],origin:[Z[U++]|Z[U++]<<8,Z[U++]|Z[U++]<<8],width:Z[U++]|Z[U++]<<8,height:Z[U++]|Z[U++]<<8,pixel_size:Z[U++],flags:Z[U++]}}function l(Z,U){if(U.length<19)return void i.c.Error("Unable to load TGA file - Not enough data to contain header");let n=18;const l=B(U);if(l.id_length+n>U.length)return void i.c.Error("Unable to load TGA file - Not enough data");n+=l.id_length;let V,G=!1,R=!1,d=!1;switch(l.image_type){case 9:G=!0;case 1:R=!0;break;case 10:G=!0;case 2:break;case 11:G=!0;case 3:d=!0}const F=l.pixel_size>>3,y=l.width*l.height*F;let S,q,c,s,z,O,E;if(R&&(S=U.subarray(n,n+=l.colormap_length*(l.colormap_size>>3))),G){let Z,i,B;V=new Uint8Array(y);let l=0;const H=new Uint8Array(F);for(;n<y&&l<y;)if(Z=U[n++],i=1+(127&Z),128&Z){for(B=0;B<F;++B)H[B]=U[n++];for(B=0;B<i;++B)V.set(H,l+B*F);l+=F*i}else{for(i*=F,B=0;B<i;++B)V[l+B]=U[n++];l+=i}}else V=U.subarray(n,n+=R?l.width*l.height:y);switch((48&l.flags)>>4){default:case 2:q=0,s=1,E=l.width,c=0,z=1,O=l.height;break;case 0:q=0,s=1,E=l.width,c=l.height-1,z=-1,O=-1;break;case 3:q=l.width-1,s=-1,E=-1,c=0,z=1,O=l.height;break;case 1:q=l.width-1,s=-1,E=-1,c=l.height-1,z=-1,O=-1}const t="_getImageData"+(d?"Grey":"")+l.pixel_size+"bits",p=H[t](l,S,V,c,z,O,q,s,E);Z.getEngine()._uploadDataToTextureDirectly(Z,p)}const H={GetTGAHeader:B,UploadContent:l,_getImageData8bits:function(Z,U,n,i,B,l,H,V,G){const R=n,d=U,F=Z.width,y=Z.height;let S,q,c,s=0;const z=new Uint8Array(F*y*4);for(c=i;c!==l;c+=B)for(q=H;q!==G;q+=V,s++)S=R[s],z[4*(q+F*c)+3]=255,z[4*(q+F*c)+2]=d[3*S+0],z[4*(q+F*c)+1]=d[3*S+1],z[4*(q+F*c)+0]=d[3*S+2];return z},_getImageData16bits:function(Z,U,n,i,B,l,H,V,G){const R=n,d=Z.width,F=Z.height;let y,S,q,c=0;const s=new Uint8Array(d*F*4);for(q=i;q!==l;q+=B)for(S=H;S!==G;S+=V,c+=2){y=R[c+0]+(R[c+1]<<8);const Z=255*((31744&y)>>10)/31|0,U=255*((992&y)>>5)/31|0,n=255*(31&y)/31|0;s[4*(S+d*q)+0]=Z,s[4*(S+d*q)+1]=U,s[4*(S+d*q)+2]=n,s[4*(S+d*q)+3]=32768&y?0:255}return s},_getImageData24bits:function(Z,U,n,i,B,l,H,V,G){const R=n,d=Z.width,F=Z.height;let y,S,q=0;const c=new Uint8Array(d*F*4);for(S=i;S!==l;S+=B)for(y=H;y!==G;y+=V,q+=3)c[4*(y+d*S)+3]=255,c[4*(y+d*S)+2]=R[q+0],c[4*(y+d*S)+1]=R[q+1],c[4*(y+d*S)+0]=R[q+2];return c},_getImageData32bits:function(Z,U,n,i,B,l,H,V,G){const R=n,d=Z.width,F=Z.height;let y,S,q=0;const c=new Uint8Array(d*F*4);for(S=i;S!==l;S+=B)for(y=H;y!==G;y+=V,q+=4)c[4*(y+d*S)+2]=R[q+0],c[4*(y+d*S)+1]=R[q+1],c[4*(y+d*S)+0]=R[q+2],c[4*(y+d*S)+3]=R[q+3];return c},_getImageDataGrey8bits:function(Z,U,n,i,B,l,H,V,G){const R=n,d=Z.width,F=Z.height;let y,S,q,c=0;const s=new Uint8Array(d*F*4);for(q=i;q!==l;q+=B)for(S=H;S!==G;S+=V,c++)y=R[c],s[4*(S+d*q)+0]=y,s[4*(S+d*q)+1]=y,s[4*(S+d*q)+2]=y,s[4*(S+d*q)+3]=255;return s},_getImageDataGrey16bits:function(Z,U,n,i,B,l,H,V,G){const R=n,d=Z.width,F=Z.height;let y,S,q=0;const c=new Uint8Array(d*F*4);for(S=i;S!==l;S+=B)for(y=H;y!==G;y+=V,q+=2)c[4*(y+d*S)+0]=R[q+0],c[4*(y+d*S)+1]=R[q+0],c[4*(y+d*S)+2]=R[q+0],c[4*(y+d*S)+3]=R[q+1];return c}};class V{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(Z,U,n){const i=new Uint8Array(Z.buffer,Z.byteOffset,Z.byteLength),H=B(i);n(H.width,H.height,U.generateMipMaps,!1,(()=>{l(U,i)}))}}}}]);