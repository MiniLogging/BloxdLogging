"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[16],{2526:(A,X,s)=>{function N(A){return Math.floor(A/8)}function f(A){return 1<<A%8}s.d(X,{OptimizeIndices:()=>g});class E{constructor(A){this.size=A,this._byteArray=new Uint8Array(Math.ceil(this.size/8))}get(A){if(A>=this.size)throw new RangeError("Bit index out of range");const X=N(A),s=f(A);return 0!==(this._byteArray[X]&s)}set(A,X){if(A>=this.size)throw new RangeError("Bit index out of range");const s=N(A),E=f(A);X?this._byteArray[s]|=E:this._byteArray[s]&=~E}}function g(A){const X=[],s=A.length/3;for(let E=0;E<s;E++)X.push([A[3*E],A[3*E+1],A[3*E+2]]);const N=new Map;for(let E=0;E<X.length;E++){const A=X[E];for(const X of A){let A=N.get(X);A||N.set(X,A=[]),A.push(E)}}const f=new E(s),g=[],K=A=>{const s=[A];for(;s.length>0;){const A=s.pop();if(!f.get(A)){f.set(A,!0),g.push(X[A]);for(const E of X[A]){const A=N.get(E);if(!A)return;for(const X of A)f.get(X)||s.push(X)}}}};for(let E=0;E<s;E++)f.get(E)||K(E);let r=0;for(const E of g)A[r++]=E[0],A[r++]=E[1],A[r++]=E[2]}}}]);