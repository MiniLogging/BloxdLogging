"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[16],{2512:(t,q,S)=>{S.r(q),S.d(q,{_TGATextureLoader:()=>r});var o=S(496);function B(t){let q=0;return{id_length:t[q++],colormap_type:t[q++],image_type:t[q++],colormap_index:t[q++]|t[q++]<<8,colormap_length:t[q++]|t[q++]<<8,colormap_size:t[q++],origin:[t[q++]|t[q++]<<8,t[q++]|t[q++]<<8],width:t[q++]|t[q++]<<8,height:t[q++]|t[q++]<<8,pixel_size:t[q++],flags:t[q++]}}function z(t,q){if(q.length<19)return void o.c.Error("Unable to load TGA file - Not enough data to contain header");let S=18;const z=B(q);if(z.id_length+S>q.length)return void o.c.Error("Unable to load TGA file - Not enough data");S+=z.id_length;let r,e=!1,C=!1,Z=!1;switch(z.image_type){case 9:e=!0;case 1:C=!0;break;case 10:e=!0;case 2:break;case 11:e=!0;case 3:Z=!0}const b=z.pixel_size>>3,O=z.width*z.height*b;let i,h,l,I,a,v,M;if(C&&(i=q.subarray(S,S+=z.colormap_length*(z.colormap_size>>3))),e){let t,o,B;r=new Uint8Array(O);let z=0;const L=new Uint8Array(b);for(;S<O&&z<O;)if(t=q[S++],o=1+(127&t),128&t){for(B=0;B<b;++B)L[B]=q[S++];for(B=0;B<o;++B)r.set(L,z+B*b);z+=b*o}else{for(o*=b,B=0;B<o;++B)r[z+B]=q[S++];z+=o}}else r=q.subarray(S,S+=C?z.width*z.height:O);switch((48&z.flags)>>4){default:case 2:h=0,I=1,M=z.width,l=0,a=1,v=z.height;break;case 0:h=0,I=1,M=z.width,l=z.height-1,a=-1,v=-1;break;case 3:h=z.width-1,I=-1,M=-1,l=0,a=1,v=z.height;break;case 1:h=z.width-1,I=-1,M=-1,l=z.height-1,a=-1,v=-1}const x="_getImageData"+(Z?"Grey":"")+z.pixel_size+"bits",k=L[x](z,i,r,l,a,v,h,I,M);t.getEngine()._uploadDataToTextureDirectly(t,k)}const L={GetTGAHeader:B,UploadContent:z,_getImageData8bits:function(t,q,S,o,B,z,L,r,e){const C=S,Z=q,b=t.width,O=t.height;let i,h,l,I=0;const a=new Uint8Array(b*O*4);for(l=o;l!==z;l+=B)for(h=L;h!==e;h+=r,I++)i=C[I],a[4*(h+b*l)+3]=255,a[4*(h+b*l)+2]=Z[3*i+0],a[4*(h+b*l)+1]=Z[3*i+1],a[4*(h+b*l)+0]=Z[3*i+2];return a},_getImageData16bits:function(t,q,S,o,B,z,L,r,e){const C=S,Z=t.width,b=t.height;let O,i,h,l=0;const I=new Uint8Array(Z*b*4);for(h=o;h!==z;h+=B)for(i=L;i!==e;i+=r,l+=2){O=C[l+0]+(C[l+1]<<8);const t=255*((31744&O)>>10)/31|0,q=255*((992&O)>>5)/31|0,S=255*(31&O)/31|0;I[4*(i+Z*h)+0]=t,I[4*(i+Z*h)+1]=q,I[4*(i+Z*h)+2]=S,I[4*(i+Z*h)+3]=32768&O?0:255}return I},_getImageData24bits:function(t,q,S,o,B,z,L,r,e){const C=S,Z=t.width,b=t.height;let O,i,h=0;const l=new Uint8Array(Z*b*4);for(i=o;i!==z;i+=B)for(O=L;O!==e;O+=r,h+=3)l[4*(O+Z*i)+3]=255,l[4*(O+Z*i)+2]=C[h+0],l[4*(O+Z*i)+1]=C[h+1],l[4*(O+Z*i)+0]=C[h+2];return l},_getImageData32bits:function(t,q,S,o,B,z,L,r,e){const C=S,Z=t.width,b=t.height;let O,i,h=0;const l=new Uint8Array(Z*b*4);for(i=o;i!==z;i+=B)for(O=L;O!==e;O+=r,h+=4)l[4*(O+Z*i)+2]=C[h+0],l[4*(O+Z*i)+1]=C[h+1],l[4*(O+Z*i)+0]=C[h+2],l[4*(O+Z*i)+3]=C[h+3];return l},_getImageDataGrey8bits:function(t,q,S,o,B,z,L,r,e){const C=S,Z=t.width,b=t.height;let O,i,h,l=0;const I=new Uint8Array(Z*b*4);for(h=o;h!==z;h+=B)for(i=L;i!==e;i+=r,l++)O=C[l],I[4*(i+Z*h)+0]=O,I[4*(i+Z*h)+1]=O,I[4*(i+Z*h)+2]=O,I[4*(i+Z*h)+3]=255;return I},_getImageDataGrey16bits:function(t,q,S,o,B,z,L,r,e){const C=S,Z=t.width,b=t.height;let O,i,h=0;const l=new Uint8Array(Z*b*4);for(i=o;i!==z;i+=B)for(O=L;O!==e;O+=r,h+=2)l[4*(O+Z*i)+0]=C[h+0],l[4*(O+Z*i)+1]=C[h+0],l[4*(O+Z*i)+2]=C[h+0],l[4*(O+Z*i)+3]=C[h+1];return l}};class r{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(t,q,S){const o=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),L=B(o);S(L.width,L.height,q.generateMipMaps,!1,(()=>{z(q,o)}))}}}}]);