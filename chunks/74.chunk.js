"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[74],{14044:(c,b,A)=>{A.r(b),A.d(b,{FlowGraphDeterminantBlock:()=>J,FlowGraphInvertMatrixBlock:()=>X,FlowGraphMatrixComposeBlock:()=>k,FlowGraphMatrixDecomposeBlock:()=>N,FlowGraphMatrixMultiplicationBlock:()=>R,FlowGraphTransposeBlock:()=>C});var o=A(12789),t=A(12763),n=A(688),h=A(633),s=A(14034),L=A(14018);class C extends s.b{constructor(c){super((0,t.L)((null===c||void 0===c?void 0:c.matrixType)||"Matrix"),(0,t.L)((null===c||void 0===c?void 0:c.matrixType)||"Matrix"),(c=>c.transpose?c.transpose():n.b.Transpose(c)),"FlowGraphTransposeBlock",c)}}(0,h.d)("FlowGraphTransposeBlock",C);class J extends s.b{constructor(c){super((0,t.L)((null===c||void 0===c?void 0:c.matrixType)||"Matrix"),t.t,(c=>c.determinant()),"FlowGraphDeterminantBlock",c)}}(0,h.d)("FlowGraphDeterminantBlock",J);class X extends s.b{constructor(c){super((0,t.L)((null===c||void 0===c?void 0:c.matrixType)||"Matrix"),(0,t.L)((null===c||void 0===c?void 0:c.matrixType)||"Matrix"),(c=>c.inverse?c.inverse():n.b.Invert(c)),"FlowGraphInvertMatrixBlock",c)}}(0,h.d)("FlowGraphInvertMatrixBlock",X);class R extends L.c{constructor(c){super((0,t.L)((null===c||void 0===c?void 0:c.matrixType)||"Matrix"),(0,t.L)((null===c||void 0===c?void 0:c.matrixType)||"Matrix"),(0,t.L)((null===c||void 0===c?void 0:c.matrixType)||"Matrix"),((c,b)=>b.multiply(c)),"FlowGraphMatrixMultiplicationBlock",c)}}(0,h.d)("FlowGraphMatrixMultiplicationBlock",R);class N extends o.d{constructor(c){super(c),this.input=this.registerDataInput("input",t.k),this.position=this.registerDataOutput("position",t.D),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",t.v),this.ld=this.registerDataOutput("ld",t.D),this.isValid=this.registerDataOutput("isValid",t.f,!1)}_updateOutputs(c){const b=c._getExecutionVariable(this,"executionId",-1),A=c._getExecutionVariable(this,"cachedPosition",null),o=c._getExecutionVariable(this,"cachedRotation",null),t=c._getExecutionVariable(this,"cachedScaling",null);if(b===c.executionId&&A&&o&&t)this.position.setValue(A,c),this.rotationQuaternion.setValue(o,c),this.ld.setValue(t,c);else{const b=this.input.getValue(c),h=A||new n.k,s=o||new n.e,L=t||new n.k,C=Math.round(1e4*b.m[3])/1e4,J=Math.round(1e4*b.m[7])/1e4,X=Math.round(1e4*b.m[11])/1e4,R=Math.round(1e4*b.m[15])/1e4;if(0!==C||0!==J||0!==X||1!==R)return this.isValid.setValue(!1,c),this.position.setValue(n.k.Zero(),c),this.rotationQuaternion.setValue(n.e.Identity(),c),void this.ld.setValue(n.k.One(),c);const N=b.decompose(L,s,h);this.isValid.setValue(N,c),this.position.setValue(h,c),this.rotationQuaternion.setValue(s,c),this.ld.setValue(L,c),c._setExecutionVariable(this,"cachedPosition",h),c._setExecutionVariable(this,"cachedRotation",s),c._setExecutionVariable(this,"cachedScaling",L),c._setExecutionVariable(this,"executionId",c.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,h.d)("FlowGraphMatrixDecompose",N);class k extends o.d{constructor(c){super(c),this.position=this.registerDataInput("position",t.D),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",t.v),this.ld=this.registerDataInput("ld",t.D),this.value=this.registerDataOutput("value",t.k)}_updateOutputs(c){const b=c._getExecutionVariable(this,"executionId",-1),A=c._getExecutionVariable(this,"cachedMatrix",null);if(b===c.executionId&&A)this.value.setValue(A,c);else{const b=n.b.Compose(this.ld.getValue(c),this.rotationQuaternion.getValue(c),this.position.getValue(c));this.value.setValue(b,c),c._setExecutionVariable(this,"cachedMatrix",b),c._setExecutionVariable(this,"executionId",c.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,h.d)("FlowGraphMatrixCompose",k)},14018:(c,b,A)=>{A.d(b,{c:()=>t});var o=A(14025);class t extends o.d{constructor(c,b,A,o,t,n){super(A,n),this._operation=o,this._className=t,this.a=this.registerDataInput("a",c),this.b=this.registerDataInput("b",b)}_doOperation(c){const b=this.a.getValue(c),A=this.b.getValue(c);return this._operation(b,A)}getClassName(){return this._className}}},14025:(c,b,A)=>{A.d(b,{d:()=>s});var o=A(12789),t=A(12763);const n="cachedOperationValue",h="cachedExecutionId";class s extends o.d{constructor(c,b){super(b),this.value=this.registerDataOutput("value",c),this.isValid=this.registerDataOutput("isValid",t.f)}_updateOutputs(c){const b=c._getExecutionVariable(this,h,-1),A=c._getExecutionVariable(this,n,null);if(void 0!==A&&null!==A&&b===c.executionId)this.isValid.setValue(!0,c),this.value.setValue(A,c);else try{const b=this._doOperation(c);if(void 0===b||null===b)return void this.isValid.setValue(!1,c);c._setExecutionVariable(this,n,b),c._setExecutionVariable(this,h,c.executionId),this.value.setValue(b,c),this.isValid.setValue(!0,c)}catch(o){this.isValid.setValue(!1,c)}}}},14034:(c,b,A)=>{A.d(b,{b:()=>t});var o=A(14025);class t extends o.d{constructor(c,b,A,o,t){super(b,t),this._operation=A,this._className=o,this.a=this.registerDataInput("a",c)}_doOperation(c){return this._operation(this.a.getValue(c))}getClassName(){return this._className}}}}]);