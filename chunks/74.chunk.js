"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[74],{14180:(t,q,S)=>{S.r(q),S.d(q,{FlowGraphDeterminantBlock:()=>Z,FlowGraphInvertMatrixBlock:()=>b,FlowGraphMatrixComposeBlock:()=>h,FlowGraphMatrixDecomposeBlock:()=>i,FlowGraphMatrixMultiplicationBlock:()=>O,FlowGraphTransposeBlock:()=>C});var o=S(12946),B=S(12927),z=S(678),L=S(622),r=S(14165),e=S(14160);class C extends r.b{constructor(t){super((0,B.R)((null===t||void 0===t?void 0:t.matrixType)||"Matrix"),(0,B.R)((null===t||void 0===t?void 0:t.matrixType)||"Matrix"),(t=>t.transpose?t.transpose():z.e.Transpose(t)),"FlowGraphTransposeBlock",t)}}(0,L.c)("FlowGraphTransposeBlock",C);class Z extends r.b{constructor(t){super((0,B.R)((null===t||void 0===t?void 0:t.matrixType)||"Matrix"),B.v,(t=>t.determinant()),"FlowGraphDeterminantBlock",t)}}(0,L.c)("FlowGraphDeterminantBlock",Z);class b extends r.b{constructor(t){super((0,B.R)((null===t||void 0===t?void 0:t.matrixType)||"Matrix"),(0,B.R)((null===t||void 0===t?void 0:t.matrixType)||"Matrix"),(t=>t.inverse?t.inverse():z.e.Invert(t)),"FlowGraphInvertMatrixBlock",t)}}(0,L.c)("FlowGraphInvertMatrixBlock",b);class O extends e.e{constructor(t){super((0,B.R)((null===t||void 0===t?void 0:t.matrixType)||"Matrix"),(0,B.R)((null===t||void 0===t?void 0:t.matrixType)||"Matrix"),(0,B.R)((null===t||void 0===t?void 0:t.matrixType)||"Matrix"),((t,q)=>q.multiply(t)),"FlowGraphMatrixMultiplicationBlock",t)}}(0,L.c)("FlowGraphMatrixMultiplicationBlock",O);class i extends o.d{constructor(t){super(t),this.input=this.registerDataInput("input",B.l),this.position=this.registerDataOutput("position",B.G),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",B.x),this.oi=this.registerDataOutput("oi",B.G),this.isValid=this.registerDataOutput("isValid",B.f,!1)}_updateOutputs(t){const q=t._getExecutionVariable(this,"executionId",-1),S=t._getExecutionVariable(this,"cachedPosition",null),o=t._getExecutionVariable(this,"cachedRotation",null),B=t._getExecutionVariable(this,"cachedScaling",null);if(q===t.executionId&&S&&o&&B)this.position.setValue(S,t),this.rotationQuaternion.setValue(o,t),this.oi.setValue(B,t);else{const q=this.input.getValue(t),L=S||new z.o,r=o||new z.g,e=B||new z.o,C=Math.round(1e4*q.m[3])/1e4,Z=Math.round(1e4*q.m[7])/1e4,b=Math.round(1e4*q.m[11])/1e4,O=Math.round(1e4*q.m[15])/1e4;if(0!==C||0!==Z||0!==b||1!==O)return this.isValid.setValue(!1,t),this.position.setValue(z.o.Zero(),t),this.rotationQuaternion.setValue(z.g.Identity(),t),void this.oi.setValue(z.o.One(),t);const i=q.decompose(e,r,L);this.isValid.setValue(i,t),this.position.setValue(L,t),this.rotationQuaternion.setValue(r,t),this.oi.setValue(e,t),t._setExecutionVariable(this,"cachedPosition",L),t._setExecutionVariable(this,"cachedRotation",r),t._setExecutionVariable(this,"cachedScaling",e),t._setExecutionVariable(this,"executionId",t.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,L.c)("FlowGraphMatrixDecompose",i);class h extends o.d{constructor(t){super(t),this.position=this.registerDataInput("position",B.G),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",B.x),this.oi=this.registerDataInput("oi",B.G),this.value=this.registerDataOutput("value",B.l)}_updateOutputs(t){const q=t._getExecutionVariable(this,"executionId",-1),S=t._getExecutionVariable(this,"cachedMatrix",null);if(q===t.executionId&&S)this.value.setValue(S,t);else{const q=z.e.Compose(this.oi.getValue(t),this.rotationQuaternion.getValue(t),this.position.getValue(t));this.value.setValue(q,t),t._setExecutionVariable(this,"cachedMatrix",q),t._setExecutionVariable(this,"executionId",t.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,L.c)("FlowGraphMatrixCompose",h)},14160:(t,q,S)=>{S.d(q,{e:()=>B});var o=S(14163);class B extends o.c{constructor(t,q,S,o,B,z){super(S,z),this._operation=o,this._className=B,this.a=this.registerDataInput("a",t),this.b=this.registerDataInput("b",q)}_doOperation(t){const q=this.a.getValue(t),S=this.b.getValue(t);return this._operation(q,S)}getClassName(){return this._className}}},14163:(t,q,S)=>{S.d(q,{c:()=>r});var o=S(12946),B=S(12927);const z="cachedOperationValue",L="cachedExecutionId";class r extends o.d{constructor(t,q){super(q),this.value=this.registerDataOutput("value",t),this.isValid=this.registerDataOutput("isValid",B.f)}_updateOutputs(t){const q=t._getExecutionVariable(this,L,-1),S=t._getExecutionVariable(this,z,null);if(void 0!==S&&null!==S&&q===t.executionId)this.isValid.setValue(!0,t),this.value.setValue(S,t);else try{const q=this._doOperation(t);if(void 0===q||null===q)return void this.isValid.setValue(!1,t);t._setExecutionVariable(this,z,q),t._setExecutionVariable(this,L,t.executionId),this.value.setValue(q,t),this.isValid.setValue(!0,t)}catch(o){this.isValid.setValue(!1,t)}}}},14165:(t,q,S)=>{S.d(q,{b:()=>B});var o=S(14163);class B extends o.c{constructor(t,q,S,o,B){super(q,B),this._operation=S,this._className=o,this.a=this.registerDataInput("a",t)}_doOperation(t){return this._operation(this.a.getValue(t))}getClassName(){return this._className}}}}]);