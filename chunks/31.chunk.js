"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[31],{12843:(B,o,e)=>{e.r(o),e.d(o,{lodPixelShaderWGSL:()=>f});const k="lodPixelShader",d="const GammaEncodePowerApprox=1.0/2.2;varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;uniform lod: f32;uniform gamma: i32;@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {fragmentOutputs.color=textureSampleLevel(textureSampler,textureSamplerSampler,fragmentInputs.vUV,uniforms.lod);if (uniforms.gamma==0) {fragmentOutputs.color=vec4f(pow(fragmentOutputs.color.rgb,vec3f(GammaEncodePowerApprox)),fragmentOutputs.color.a);}}\n";e(581).b.ShadersStoreWGSL[k]=d;const f={name:k,shader:d}}}]);