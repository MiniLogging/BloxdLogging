"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[31],{13439:(q,f,j)=>{j.r(f),j.d(f,{_HDRTextureLoader:()=>u});var d=j(10941);class g{static ConvertPanoramaToCubemap(q,f,j,d){let g=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!q)throw"ConvertPanoramaToCubemap: input cannot be null";if(q.length!=f*j*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(d,this.FACE_FRONT,q,f,j,g),back:this.CreateCubemapTexture(d,this.FACE_BACK,q,f,j,g),left:this.CreateCubemapTexture(d,this.FACE_LEFT,q,f,j,g),right:this.CreateCubemapTexture(d,this.FACE_RIGHT,q,f,j,g),up:this.CreateCubemapTexture(d,this.FACE_UP,q,f,j,g),down:this.CreateCubemapTexture(d,this.FACE_DOWN,q,f,j,g),size:d,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(q,f,j,d,g){let h=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const L=new ArrayBuffer(q*q*4*3),Q=new Float32Array(L),H=h?Math.max(1,Math.round(d/4/q)):1,r=1/H,u=r*r,X=f[1].ej(f[0]).scale(r/q),z=f[3].ej(f[2]).scale(r/q),B=1/q;let D=0;for(let i=0;i<q;i++)for(let h=0;h<H;h++){let h=f[0],L=f[2];for(let f=0;f<q;f++)for(let r=0;r<H;r++){const H=L.ej(h).scale(D).add(h);H.normalize();const r=this.CalcProjectionSpherical(H,j,d,g);Q[i*q*3+3*f+0]+=r.r*u,Q[i*q*3+3*f+1]+=r.g*u,Q[i*q*3+3*f+2]+=r.b*u,h=h.add(X),L=L.add(z)}D+=B*r}return Q}static CalcProjectionSpherical(q,f,j,d){let g=Math.atan2(q.z,q.x);const h=Math.acos(q.y);for(;g<-Math.PI;)g+=2*Math.PI;for(;g>Math.PI;)g-=2*Math.PI;let L=g/Math.PI;const Q=h/Math.PI;L=.5*L+.5;let H=Math.round(L*j);H<0?H=0:H>=j&&(H=j-1);let r=Math.round(Q*d);r<0?r=0:r>=d&&(r=d-1);const u=d-r-1;return{r:f[u*j*3+3*H+0],g:f[u*j*3+3*H+1],b:f[u*j*3+3*H+2]}}}function h(q,f,j,d,g,h){g>0?(g=function(q,f){return f>1023?q*Math.pow(2,1023)*Math.pow(2,f-1023):f<-1074?q*Math.pow(2,-1074)*Math.pow(2,f+1074):q*Math.pow(2,f)}(1,g-136),q[h+0]=f*g,q[h+1]=j*g,q[h+2]=d*g):(q[h+0]=0,q[h+1]=0,q[h+2]=0)}function L(q,f){let j="",d="";for(let g=f;g<q.length-f&&(d=String.fromCharCode(q[g]),"\n"!=d);g++)j+=d;return j}function Q(q){let f=0,j=0,d=L(q,0);if("#"!=d[0]||"?"!=d[1])throw"Bad HDR Format.";let g=!1,h=!1,Q=0;do{Q+=d.length+1,d=L(q,Q),"FORMAT=32-bit_rle_rgbe"==d?h=!0:0==d.length&&(g=!0)}while(!g);if(!h)throw"HDR Bad header format, unsupported FORMAT";Q+=d.length+1,d=L(q,Q);const H=/^-Y (.*) \+X (.*)$/g.exec(d);if(!H||H.length<3)throw"HDR Bad header format, no size";if(j=parseInt(H[2]),f=parseInt(H[1]),j<8||j>32767)throw"HDR Bad header format, unsupported size";return Q+=d.length+1,{height:f,width:j,dataPosition:Q}}function H(q,f){return function(q,f){let j=f.height;const d=f.width;let g,L,Q,H,u,X=f.dataPosition,z=0,B=0,D=0;const i=new ArrayBuffer(4*d),t=new Uint8Array(i),O=new ArrayBuffer(f.width*f.height*4*3),N=new Float32Array(O);for(;j>0;){if(g=q[X++],L=q[X++],Q=q[X++],H=q[X++],2!=g||2!=L||128&Q||f.width<8||f.width>32767)return r(q,f);if((Q<<8|H)!=d)throw"HDR Bad header format, wrong scan line width";for(z=0,D=0;D<4;D++)for(B=(D+1)*d;z<B;)if(g=q[X++],L=q[X++],g>128){if(u=g-128,0==u||u>B-z)throw"HDR Bad Format, bad scanline data (run)";for(;u-- >0;)t[z++]=L}else{if(u=g,0==u||u>B-z)throw"HDR Bad Format, bad scanline data (non-run)";if(t[z++]=L,--u>0)for(let f=0;f<u;f++)t[z++]=q[X++]}for(D=0;D<d;D++)g=t[D],L=t[D+d],Q=t[D+2*d],H=t[D+3*d],h(N,g,L,Q,H,(f.height-j)*d*3+3*D);j--}return N}(q,f)}function r(q,f){let j=f.height;const d=f.width;let g,L,Q,H,r,u=f.dataPosition;const X=new ArrayBuffer(f.width*f.height*4*3),z=new Float32Array(X);for(;j>0;){for(r=0;r<f.width;r++)g=q[u++],L=q[u++],Q=q[u++],H=q[u++],h(z,g,L,Q,H,(f.height-j)*d*3+3*r);j--}return z}g.FACE_LEFT=[new d.j(-1,-1,-1),new d.j(1,-1,-1),new d.j(-1,1,-1),new d.j(1,1,-1)],g.FACE_RIGHT=[new d.j(1,-1,1),new d.j(-1,-1,1),new d.j(1,1,1),new d.j(-1,1,1)],g.FACE_FRONT=[new d.j(1,-1,-1),new d.j(1,-1,1),new d.j(1,1,-1),new d.j(1,1,1)],g.FACE_BACK=[new d.j(-1,-1,1),new d.j(-1,-1,-1),new d.j(-1,1,1),new d.j(-1,1,-1)],g.FACE_DOWN=[new d.j(1,1,-1),new d.j(1,1,1),new d.j(-1,1,-1),new d.j(-1,1,1)],g.FACE_UP=[new d.j(-1,-1,-1),new d.j(-1,-1,1),new d.j(1,-1,-1),new d.j(1,-1,1)];class u{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(q,f,j){const d=new Uint8Array(q.buffer,q.byteOffset,q.byteLength),g=Q(d),h=H(d,g),L=g.width*g.height,r=new Float32Array(4*L);for(let Q=0;Q<L;Q+=1)r[4*Q]=h[3*Q],r[4*Q+1]=h[3*Q+1],r[4*Q+2]=h[3*Q+2],r[4*Q+3]=1;j(g.width,g.height,f.generateMipMaps,!1,(()=>{const q=f.getEngine();f.type=1,f.format=5,f._gammaSpace=!1,q._uploadDataToTextureDirectly(f,r)}))}}}}]);