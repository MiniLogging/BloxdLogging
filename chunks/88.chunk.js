"use strict";(self["6xhfpmwgjr5"]=self["6xhfpmwgjr5"]||[]).push([[88],{16445:(P,a,R)=>{R.r(a),R.d(a,{AnimationGroup:()=>W,TargetedAnimation:()=>t});var S=R(12909),A=R(12232),Z=R(12277),p=R(12454),j=R(14446),U=R(12415);class Q{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(P,a,R,A){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=a,this._target=P,this._scene=R,this._host=A,this._activeTargets=[],a._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===S.e.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=U.Matrix.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const P={frame:0,value:this._minValue};this._keys.splice(0,0,P)}if(this._target instanceof Array){let P=0;for(const a of this._target)this._preparePath(a,P),this._getOriginalValues(P),P++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const Z=a.getEvents();if(Z&&Z.length>0)for(const S of Z)this._events.push(S._clone());this._enableBlending=P&&P.animationPropertiesOverride?P.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(P){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const R=this._animation.targetPropertyPath;if(R.length>1){let S=P;for(let P=0;P<R.length-1;P++){const a=R[P];if(S=S[a],void 0===S)throw new Error(`Invalid property (${a}) in property path (${R.join(".")})`)}this._targetPath=R[R.length-1],this._activeTargets[a]=S}else this._targetPath=R[0],this._activeTargets[a]=P;if(void 0===this._activeTargets[a][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${R.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let P=0;for(const a of this._target)void 0!==this._originalValue[P]&&this._setValue(a,this._activeTargets[P],this._originalValue[P],-1,P),P++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let P=0;P<this._events.length;P++)this._events[P].isDone=!1}isStopped(){return this._stopped}dispose(){const P=this._animation.runtimeAnimations.indexOf(this);P>-1&&this._animation.runtimeAnimations.splice(P,1)}setValue(P,a){if(this._targetIsArray)for(let R=0;R<this._target.length;R++){const S=this._target[R];this._setValue(S,this._activeTargets[R],P,a,R)}else this._setValue(this._target,this._directTarget,P,a,0)}_getOriginalValues(){let P,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const R=this._activeTargets[a];P=R.getLocalMatrix&&"_matrix"===this._targetPath?R.getLocalMatrix():R[this._targetPath],P&&P.clone?this._originalValue[a]=P.clone():this._originalValue[a]=P}_registerTargetForLateAnimationBinding(P,a){const R=P.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(R),R._lateAnimationHolders||(R._lateAnimationHolders={}),R._lateAnimationHolders[P.targetPath]||(R._lateAnimationHolders[P.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:a}),P.isAdditive?(R._lateAnimationHolders[P.targetPath].additiveAnimations.push(P),R._lateAnimationHolders[P.targetPath].totalAdditiveWeight+=P.weight):(R._lateAnimationHolders[P.targetPath].animations.push(P),R._lateAnimationHolders[P.targetPath].totalWeight+=P.weight)}_setValue(P,a,R,A,Z){if(this._currentActiveTarget=a,this._weight=A,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const P=a[this._targetPath];P.clone?this._originalBlendValue=P.clone():this._originalBlendValue=P}this._originalBlendValue.m?S.e.AllowMatrixDecomposeForInterpolation?this._currentValue?U.Matrix.DecomposeLerpToRef(this._originalBlendValue,R,this._blendingFactor,this._currentValue):this._currentValue=U.Matrix.DecomposeLerp(this._originalBlendValue,R,this._blendingFactor):this._currentValue?U.Matrix.LerpToRef(this._originalBlendValue,R,this._blendingFactor,this._currentValue):this._currentValue=U.Matrix.Lerp(this._originalBlendValue,R,this._blendingFactor):this._currentValue=S.e._UniversalLerp(this._originalBlendValue,R,this._blendingFactor);const A=P&&P.animationPropertiesOverride?P.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=A}else this._currentValue?this._currentValue.A?this._currentValue.A(R):this._currentValue=R:null!==R&&void 0!==R&&R.clone?this._currentValue=R.clone():this._currentValue=R;-1!==A?this._registerTargetForLateAnimationBinding(this,this._originalValue[Z]):this._animationState.loopMode===S.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[Z],a[this._targetPath]):a[this._targetPath]=this._originalValue[Z]+this._currentValue:a[this._targetPath]=this._currentValue,P.BQ&&P.BQ(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(P){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const R=this._animation.getKeys();P<R[0].frame?P=R[0].frame:P>R[R.length-1].frame&&(P=R[R.length-1].frame);const S=this._events;if(S.length)for(let Z=0;Z<S.length;Z++)S[Z].onlyOnce||(S[Z].isDone=S[Z].frame<P);this._currentFrame=P;const A=this._animation._interpolate(P,this._animationState);this.setValue(A,a)}_prepareForSpeedRatioChange(P){const a=this._previousElapsedTime*(this._animation.framePerSecond*P)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-a}animate(P,a,R,A,Z){let p=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const j=this._animation,U=j.targetPropertyPath;if(!U||U.length<1)return this._stopped=!0,!1;let Q,h=!0;const l=this._events;let V=0;if(this._coreRuntimeAnimation)V=R-a,Q=this._coreRuntimeAnimation.currentFrame,this._currentFrame=Q,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let p;(a<this._minFrame||a>this._maxFrame)&&(a=this._minFrame),(R<this._minFrame||R>this._maxFrame)&&(R=this._maxFrame),V=R-a;let U=P*(j.framePerSecond*Z)/1e3+this._absoluteFrameOffset,f=0,O=!1;const q=A&&this._animationState.loopMode===S.e.ANIMATIONLOOPMODE_YOYO;if(q){const P=(U-a)/V,R=Math.sin(P*Math.PI);U=Math.abs(R)*V+a;const S=R>=0?1:-1;this._yoyoDirection!==S&&(O=!0),this._yoyoDirection=S}if(this._previousElapsedTime=P,this._previousAbsoluteFrame=U,!A&&R>=a&&(U>=V&&Z>0||U<=0&&Z<0))h=!1,f=j._getKeyValue(this._maxValue);else if(!A&&a>=R&&(U<=V&&Z<0||U>=0&&Z>0))h=!1,f=j._getKeyValue(this._minValue);else if(this._animationState.loopMode!==S.e.ANIMATIONLOOPMODE_CYCLE){const P=R.toString()+a.toString();if(!this._offsetsCache[P]){this._animationState.repeatCount=0,this._animationState.loopMode=S.e.ANIMATIONLOOPMODE_CYCLE;const A=j._interpolate(a,this._animationState),Z=j._interpolate(R,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),j.dataType){case S.e.ANIMATIONTYPE_FLOAT:this._offsetsCache[P]=Z-A;break;case S.e.ANIMATIONTYPE_QUATERNION:case S.e.ANIMATIONTYPE_VECTOR3:case S.e.ANIMATIONTYPE_VECTOR2:case S.e.ANIMATIONTYPE_SIZE:case S.e.ANIMATIONTYPE_COLOR3:this._offsetsCache[P]=Z.qa(A)}this._highLimitsCache[P]=Z}f=this._highLimitsCache[P],p=this._offsetsCache[P]}if(void 0===p)switch(j.dataType){case S.e.ANIMATIONTYPE_FLOAT:p=0;break;case S.e.ANIMATIONTYPE_QUATERNION:p=S.l;break;case S.e.ANIMATIONTYPE_VECTOR3:p=S.t;break;case S.e.ANIMATIONTYPE_VECTOR2:p=S.q;break;case S.e.ANIMATIONTYPE_SIZE:p=S.m;break;case S.e.ANIMATIONTYPE_COLOR3:p=S.f;break;case S.e.ANIMATIONTYPE_COLOR4:p=S.j}if(this._host&&this._host.syncRoot){const P=this._host.syncRoot;Q=a+V*((P.masterFrame-P.fromFrame)/(P.toFrame-P.fromFrame))}else Q=U>0&&a>R||U<0&&a<R?h&&0!==V?R+U%V:a:h&&0!==V?a+U%V:R;if(!q&&(Z>0&&this.currentFrame>Q||Z<0&&this.currentFrame<Q)||q&&O){this._onLoop();for(let P=0;P<l.length;P++)l[P].onlyOnce||(l[P].isDone=!1);this._animationState.key=Z>0?0:j.getKeys().length-1}this._currentFrame=Q,this._animationState.repeatCount=0===V?0:U/V|0,this._animationState.highLimitValue=f,this._animationState.offsetValue=p}const f=j._interpolate(Q,this._animationState);if(this.setValue(f,p),l.length)for(let S=0;S<l.length;S++)if(V>=0&&Q>=l[S].frame&&l[S].frame>=a||V<0&&Q<=l[S].frame&&l[S].frame<=a){const P=l[S];P.isDone||(P.onlyOnce&&(l.splice(S,1),S--),P.isDone=!0,P.action(Q))}return h||(this._stopped=!0),h}}var h=R(12261);class l{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(P){this._weight=-1!==P?Math.min(Math.max(P,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(P){for(let a=0;a<this._runtimeAnimations.length;a++){this._runtimeAnimations[a]._prepareForSpeedRatioChange(P)}this._speedRatio=P,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(P,a){let R=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,Z=arguments.length>4&&void 0!==arguments[4]&&arguments[4],p=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,j=arguments.length>6?arguments[6]:void 0,U=arguments.length>7?arguments[7]:void 0,Q=arguments.length>8?arguments[8]:void 0,h=arguments.length>9&&void 0!==arguments[9]&&arguments[9],l=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=a,this.fromFrame=R,this.toFrame=S,this.loopAnimation=Z,this.onAnimationEnd=j,this.onAnimationLoop=Q,this.isAdditive=h,this.playOrder=l,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.ep=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new A.b,this.onAnimationLoopObservable=new A.b,this._scene=P,U&&this.appendAnimations(a,U),this._speedRatio=p,P._activeAnimatables.push(this)}syncWith(P){if(this._syncRoot=P,P){const P=this._scene._activeAnimatables.indexOf(this);P>-1&&(this._scene._activeAnimatables.splice(P,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(P,a){for(let R=0;R<a.length;R++){const S=a[R],A=new Q(P,S,this._scene,this);A._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(A)}}getAnimationByTargetProperty(P){const a=this._runtimeAnimations;for(let R=0;R<a.length;R++)if(a[R].animation.targetProperty===P)return a[R].animation;return null}getRuntimeAnimationByTargetProperty(P){const a=this._runtimeAnimations;for(let R=0;R<a.length;R++)if(a[R].animation.targetProperty===P)return a[R];return null}reset(){const P=this._runtimeAnimations;for(let a=0;a<P.length;a++)P[a].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(P){const a=this._runtimeAnimations;for(let R=0;R<a.length;R++)a[R].animation.enableBlending=!0,a[R].animation.blendingSpeed=P}disableBlending(){const P=this._runtimeAnimations;for(let a=0;a<P.length;a++)P[a].animation.enableBlending=!1}goToFrame(P){let a=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const R=this._runtimeAnimations;if(R[0]){const a=R[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??R[0].currentFrame;const S=0===this.speedRatio?0:(P-this._frameToSyncFromJump)/a*1e3/this.speedRatio;this._manualJumpDelay=-S}for(let S=0;S<R.length;S++)R[S].goToFrame(P,a?this._weight:-1);this._goToFrame=P}get paused(){return this.ep}pause(){this.ep||(this.ep=!0)}restart(){this.ep=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(P,a){let R=arguments.length>2&&void 0!==arguments[2]&&arguments[2],S=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(P||a){const A=this._scene._activeAnimatables.indexOf(this);if(A>-1){const Z=this._runtimeAnimations;for(let R=Z.length-1;R>=0;R--){const S=Z[R];P&&S.animation.name!=P||(a&&!a(S.target)||(S.dispose(),Z.splice(R,1)))}0==Z.length&&(R||this._scene._activeAnimatables.splice(A,1),S||this._raiseOnAnimationEnd())}}else{const P=this._scene._activeAnimatables.indexOf(this);if(P>-1){R||this._scene._activeAnimatables.splice(P,1);const a=this._runtimeAnimations;for(let P=0;P<a.length;P++)a[P].dispose();this._runtimeAnimations.length=0,S||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((P=>{this.onAnimationEndObservable.add((()=>{P(this)}),void 0,void 0,this,!0)}))}_animate(P){if(this.ep)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=P),!0;if(null===this._localDelayOffset?(this._localDelayOffset=P,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=P-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let a=!1;const R=this._runtimeAnimations;let S;for(S=0;S<R.length;S++){const A=R[S].animate(P-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);a=a||A}if(this.animationStarted=a,!a){if(this.disposeOnEnd)for(S=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(S,1),S=0;S<R.length;S++)R[S].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return a}}function V(P){if(0===P.totalWeight&&0===P.totalAdditiveWeight)return P.originalValue;let a=1;const R=U.TmpVectors.Oa[0],S=U.TmpVectors.Oa[1],A=U.TmpVectors.Quaternion[0];let Z=0;const p=P.animations[0],j=P.originalValue;let Q=1,h=!1;if(P.totalWeight<1)Q=1-P.totalWeight,j.decompose(S,A,R);else{if(Z=1,a=P.totalWeight,Q=p.weight/a,1==Q){if(!P.totalAdditiveWeight)return p.currentValue;h=!0}p.currentValue.decompose(S,A,R)}if(!h){S.scaleInPlace(Q),R.scaleInPlace(Q),A.scaleInPlace(Q);for(let p=Z;p<P.animations.length;p++){const Z=P.animations[p];if(0===Z.weight)continue;Q=Z.weight/a;const j=U.TmpVectors.Oa[2],h=U.TmpVectors.Oa[3],l=U.TmpVectors.Quaternion[1];Z.currentValue.decompose(h,l,j),h.scaleAndAddToRef(Q,S),l.scaleAndAddToRef(U.Quaternion.Dot(A,l)>0?Q:-Q,A),j.scaleAndAddToRef(Q,R)}A.normalize()}for(let V=0;V<P.additiveAnimations.length;V++){const a=P.additiveAnimations[V];if(0===a.weight)continue;const Z=U.TmpVectors.Oa[2],p=U.TmpVectors.Oa[3],j=U.TmpVectors.Quaternion[1];a.currentValue.decompose(p,j,Z),p.multiplyToRef(S,p),U.Oa.LerpToRef(S,p,a.weight,S),A.multiplyToRef(j,j),U.Quaternion.SlerpToRef(A,j,a.weight,A),Z.scaleAndAddToRef(a.weight,R)}const l=p?p._animationState.workValue:U.TmpVectors.Matrix[0].clone();return U.Matrix.ComposeToRef(S,A,R,l),l}function f(P,a){if(0===P.totalWeight&&0===P.totalAdditiveWeight)return a;const R=P.animations[0],S=P.originalValue;let A=a;if(0===P.totalWeight&&P.totalAdditiveWeight>0)A.A(S);else if(1===P.animations.length){if(U.Quaternion.SlerpToRef(S,R.currentValue,Math.min(1,P.totalWeight),A),0===P.totalAdditiveWeight)return A}else if(P.animations.length>1){let R,Z,p=1;if(P.totalWeight<1){const a=1-P.totalWeight;R=[],Z=[],R.push(S),Z.push(a)}else{if(2===P.animations.length&&(U.Quaternion.SlerpToRef(P.animations[0].currentValue,P.animations[1].currentValue,P.animations[1].weight/P.totalWeight,a),0===P.totalAdditiveWeight))return a;R=[],Z=[],p=P.totalWeight}for(let a=0;a<P.animations.length;a++){const S=P.animations[a];R.push(S.currentValue),Z.push(S.weight/p)}let j=0;for(let P=0;P<R.length;)P?(j+=Z[P],U.Quaternion.SlerpToRef(A,R[P],Z[P]/j,A),P++):(U.Quaternion.SlerpToRef(R[P],R[P+1],Z[P+1]/(Z[P]+Z[P+1]),a),A=a,j=Z[P]+Z[P+1],P+=2)}for(let Z=0;Z<P.additiveAnimations.length;Z++){const a=P.additiveAnimations[Z];0!==a.weight&&(A.multiplyToRef(a.currentValue,U.TmpVectors.Quaternion[0]),U.Quaternion.SlerpToRef(A,U.TmpVectors.Quaternion[0],a.weight,A))}return A}var O,q,y=R(12636);O=y.b,(q=j.b)&&(q.prototype.copyAnimationRange=function(P,a,R){let A=arguments.length>3&&void 0!==arguments[3]&&arguments[3],Z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new S.e(this.name,"_matrix",P.animations[0].framePerSecond,S.e.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const p=P.animations[0].getRange(a);if(!p)return!1;const j=p.from,U=p.to,Q=P.animations[0].getKeys(),h=P.length,l=P.getParent(),V=this.getParent(),f=A&&l&&h&&this.length&&h!==this.length,O=f&&V&&l?V.length/l.length:1,q=A&&!V&&Z&&(1!==Z.x||1!==Z.y||1!==Z.z),y=this.animations[0].getKeys();let t,W,k;for(let S=0,x=Q.length;S<x;S++)t=Q[S],t.frame>=j&&t.frame<=U&&(A?(k=t.value.clone(),f?(W=k.getTranslation(),k.setTranslation(W.scaleInPlace(O))):q&&Z?(W=k.getTranslation(),k.setTranslation(W.multiplyInPlace(Z))):k=t.value):k=t.value,y.push({frame:t.frame+R,value:k}));return this.animations[0].createRange(a,j+R,U+R),!0}),O&&(O.prototype._animate=function(P){if(!this.animationsEnabled)return;const a=h.c.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=a}this.deltaTime=void 0!==P?P:this.useConstantAnimationDeltaTime?16:(a-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=a;const R=this._activeAnimatables;if(0===R.length)return;this._animationTime+=this.deltaTime;const A=this._animationTime;for(let S=0;S<R.length;S++){const P=R[S];!P._animate(A)&&P.disposeOnEnd&&S--}!function(P){if(P._registeredForLateAnimationBindings.length){for(let a=0;a<P._registeredForLateAnimationBindings.length;a++){const R=P._registeredForLateAnimationBindings.data[a];for(const P in R._lateAnimationHolders){const a=R._lateAnimationHolders[P],A=a.animations[0],Z=a.originalValue;if(void 0===Z||null===Z)continue;const p=S.e.AllowMatrixDecomposeForInterpolation&&Z.m;let j=R[P];if(p)j=V(a);else if(void 0!==Z.w)j=f(a,j||U.Quaternion.Identity());else{let P=0,R=1;const p=A&&A._animationState.loopMode===S.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(a.totalWeight<1)j=p?Z.clone?Z.clone():Z:A&&Z.scale?Z.scale(1-a.totalWeight):A?Z*(1-a.totalWeight):Z.clone?Z.clone():Z;else if(A){R=a.totalWeight;const S=A.weight/R;j=1!==S?A.currentValue.scale?A.currentValue.scale(S):A.currentValue*S:A.currentValue,p&&(j.addToRef?j.addToRef(Z,j):j+=Z),P=1}for(let S=P;S<a.animations.length;S++){const P=a.animations[S],A=P.weight/R;A&&(P.currentValue.scaleAndAddToRef?P.currentValue.scaleAndAddToRef(A,j):j+=P.currentValue*A)}for(let S=0;S<a.additiveAnimations.length;S++){const P=a.additiveAnimations[S],R=P.weight;R&&(P.currentValue.scaleAndAddToRef?P.currentValue.scaleAndAddToRef(R,j):j+=P.currentValue*R)}}R[P]=j}R._lateAnimationHolders={}}P._registeredForLateAnimationBindings.reset()}}(this)},O.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((P,a)=>P.playOrder-a.playOrder))},O.prototype.beginWeightedAnimation=function(P,a,R){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,A=arguments.length>4?arguments[4]:void 0,Z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,p=arguments.length>6?arguments[6]:void 0,j=arguments.length>7?arguments[7]:void 0,U=arguments.length>8?arguments[8]:void 0,Q=arguments.length>9?arguments[9]:void 0,h=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const l=this.beginAnimation(P,a,R,A,Z,p,j,!1,U,Q,h);return l.weight=S,l},O.prototype.beginAnimation=function(P,a,R,S){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,Z=arguments.length>5?arguments[5]:void 0,p=arguments.length>6?arguments[6]:void 0,j=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],U=arguments.length>8?arguments[8]:void 0,Q=arguments.length>9?arguments[9]:void 0,h=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(A<0){const P=a;a=R,R=P,A=-A}a>R&&(A=-A),j&&this.stopAnimation(P,void 0,U),p||(p=new l(this,P,a,R,S,A,Z,void 0,Q,h));const V=!U||U(P);if(P.animations&&V&&p.appendAnimations(P,P.animations),P.getAnimatables){const h=P.getAnimatables();for(let P=0;P<h.length;P++)this.beginAnimation(h[P],a,R,S,A,Z,p,j,U,Q)}return p.reset(),p},O.prototype.beginHierarchyAnimation=function(P,a,R,S,A){let Z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,p=arguments.length>6?arguments[6]:void 0,j=arguments.length>7?arguments[7]:void 0,U=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],Q=arguments.length>9?arguments[9]:void 0,h=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const l=P.getDescendants(a),V=[];V.push(this.beginAnimation(P,R,S,A,Z,p,j,U,Q,void 0,h));for(const f of l)V.push(this.beginAnimation(f,R,S,A,Z,p,j,U,Q,void 0,h));return V},O.prototype.beginDirectAnimation=function(P,a,R,S,A){let Z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(Z<0){const P=R;R=S,S=P,Z=-Z}return R>S&&(Z=-Z),new l(this,P,R,S,A,Z,arguments.length>6?arguments[6]:void 0,a,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},O.prototype.beginDirectHierarchyAnimation=function(P,a,R,S,A,Z,p,j,U){let Q=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const h=P.getDescendants(a),l=[];l.push(this.beginDirectAnimation(P,R,S,A,Z,p,j,U,Q));for(const V of h)l.push(this.beginDirectAnimation(V,R,S,A,Z,p,j,U,Q));return l},O.prototype.getAnimatableByTarget=function(P){for(let a=0;a<this._activeAnimatables.length;a++)if(this._activeAnimatables[a].target===P)return this._activeAnimatables[a];return null},O.prototype.getAllAnimatablesByTarget=function(P){const a=[];for(let R=0;R<this._activeAnimatables.length;R++)this._activeAnimatables[R].target===P&&a.push(this._activeAnimatables[R]);return a},O.prototype.stopAnimation=function(P,a,R){const S=this.getAllAnimatablesByTarget(P);for(const A of S)A.stop(a,R)},O.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let P=0;P<this._activeAnimatables.length;P++)this._activeAnimatables[P].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const P of this.animationGroups)P.stop()});class t{getClassName(){return"TargetedAnimation"}serialize(){const P={};return P.animation=this.animation.serialize(),P.targetId=this.target.id,P}}class W{get mask(){return this._mask}set mask(P){this._mask!==P&&(this._mask=P,this.syncWithMask(!0))}syncWithMask(){let P=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||P){this._numActiveAnimatables=0;for(let P=0;P<this._animatables.length;++P){const a=this._animatables[P];!this.mask||this.mask.disabled||this.mask.retainsTarget(a.target.name)?(this._numActiveAnimatables++,a.paused&&a.restart()):a.paused||a.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let P=0;P<this._animatables.length;++P){const a=this._animatables[P];this.mask.retainsTarget(a.target.name)||(a.stop(),this._animatables.splice(P,1),--P)}for(let P=0;P<this._targetedAnimations.length;P++){const a=this._targetedAnimations[P];this.mask.retainsTarget(a.target.name)||(this._targetedAnimations.splice(P,1),--P)}}}get from(){return this._from}set from(P){if(this._from!==P){this._from=P;for(let P=0;P<this._animatables.length;P++){this._animatables[P].fromFrame=this._from}}}get to(){return this._to}set to(P){if(this._to!==P){this._to=P;for(let P=0;P<this._animatables.length;P++){this._animatables[P].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(P){if(this._speedRatio!==P){this._speedRatio=P;for(let P=0;P<this._animatables.length;P++){this._animatables[P].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(P){if(this._loopAnimation!==P){this._loopAnimation=P;for(let P=0;P<this._animatables.length;P++){this._animatables[P].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(P){if(this._isAdditive!==P){this._isAdditive=P;for(let P=0;P<this._animatables.length;P++){this._animatables[P].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(P){this._weight!==P&&(this._weight=P,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(P){if(this._playOrder!==P&&(this._playOrder=P,this._animatables.length>0)){for(let P=0;P<this._animatables.length;P++)this._animatables[P].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(P){if(this._enableBlending!==P&&(this._enableBlending=P,null!==P))for(let a=0;a<this._targetedAnimations.length;++a)this._targetedAnimations[a].animation.enableBlending=P}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(P){if(this._blendingSpeed!==P&&(this._blendingSpeed=P,null!==P))for(let a=0;a<this._targetedAnimations.length;++a)this._targetedAnimations[a].animation.blendingSpeed=P}getLength(P,a){P=P??this._from;return((a=a??this._to)-P)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(P){let a=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],R=arguments.length>2&&void 0!==arguments[2]&&arguments[2],S=arguments.length>3?arguments[3]:void 0;if(0===P.length)return null;S=S??P[0].weight;let A=Number.MAX_VALUE,Z=-Number.MAX_VALUE;if(R)for(const j of P)j.from<A&&(A=j.from),j.to>Z&&(Z=j.to);const p=new W(P[0].name+"_merged",P[0]._scene,S);for(const j of P){R&&j.normalize(A,Z);for(const P of j.targetedAnimations)p.addTargetedAnimation(P.animation,P.target);a&&j.dispose()}return p}constructor(P){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,R=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=P,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new A.b,this.onAnimationLoopObservable=new A.b,this.onAnimationGroupLoopObservable=new A.b,this.onAnimationGroupEndObservable=new A.b,this.onAnimationGroupPauseObservable=new A.b,this.onAnimationGroupPlayObservable=new A.b,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=a||Z.e.LastCreatedScene,this._weight=R,this._playOrder=S,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(P,a){const R=new t;R.animation=P,R.target=a;const S=P.getKeys();return this._from>S[0].frame&&(this._from=S[0].frame),this._to<S[S.length-1].frame&&(this._to=S[S.length-1].frame),null!==this._enableBlending&&(P.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(P.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(R),this._shouldStart=!0,R}removeTargetedAnimation(P){for(let a=this._targetedAnimations.length-1;a>-1;a--){this._targetedAnimations[a].animation===P&&this._targetedAnimations.splice(a,1)}}normalize(){let P=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==P&&(P=this._from),null==a&&(a=this._to);for(let R=0;R<this._targetedAnimations.length;R++){const S=this._targetedAnimations[R].animation.getKeys(),A=S[0],Z=S[S.length-1];if(A.frame>P){const a={frame:P,value:A.value,inTangent:A.inTangent,outTangent:A.outTangent,interpolation:A.interpolation};S.splice(0,0,a)}if(Z.frame<a){const P={frame:a,value:Z.value,inTangent:Z.inTangent,outTangent:Z.outTangent,interpolation:Z.interpolation};S.push(P)}}return this._from=P,this._to=a,this}_processLoop(P,a,R){P.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(a),this._animationLoopFlags[R]||(this._animationLoopFlags[R]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let P=arguments.length>0&&void 0!==arguments[0]&&arguments[0],a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,R=arguments.length>2?arguments[2]:void 0,S=arguments.length>3?arguments[3]:void 0,A=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=P,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let Z=0;Z<this._targetedAnimations.length;Z++){const p=this._targetedAnimations[Z],j=this._scene.beginDirectAnimation(p.target,[p.animation],void 0!==R?R:this._from,void 0!==S?S:this._to,P,a,void 0,void 0,void 0!==A?A:this._isAdditive);j.weight=this._weight,j.playOrder=this._playOrder,j.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(p),this._checkAnimationGroupEnded(j)},this._processLoop(j,p,Z),this._animatables.push(j)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=a,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let P=0;P<this._animatables.length;P++){this._animatables[P].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(P){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==P&&(this.loopAnimation=P),this.restart()):(this.stop(),this.start(P,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let P=0;P<this._animatables.length;P++){this._animatables[P].reset()}return this}restart(){if(!this._isStarted)return this;for(let P=0;P<this._animatables.length;P++){this._animatables[P].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let P=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const a=this._animatables.slice();for(let S=0;S<a.length;S++)a[S].stop(void 0,void 0,!0,P);let R=0;for(let S=0;S<this._scene._activeAnimatables.length;S++){const a=this._scene._activeAnimatables[S];a._runtimeAnimations.length>0?this._scene._activeAnimatables[R++]=a:P&&this._checkAnimationGroupEnded(a,P)}return this._scene._activeAnimatables.length=R,this._isStarted=!1,this}setWeightForAllAnimatables(P){for(let a=0;a<this._animatables.length;a++){this._animatables[a].weight=P}return this}syncAllAnimationsWith(P){for(let a=0;a<this._animatables.length;a++){this._animatables[a].syncWith(P)}return this}goToFrame(P){let a=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let R=0;R<this._animatables.length;R++){this._animatables[R].goToFrame(P,a)}return this}getCurrentFrame(){var P;return(null===(P=this.animatables[0])||void 0===P?void 0:P.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const P=this._scene.animationGroups.indexOf(this);if(P>-1&&this._scene.animationGroups.splice(P,1),this._parentContainer){const P=this._parentContainer.animationGroups.indexOf(this);P>-1&&this._parentContainer.animationGroups.splice(P,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(P){let a=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const R=this._animatables.indexOf(P);R>-1&&this._animatables.splice(R,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,a||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(P,a){let R=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const S=new W(P||this.name,this._scene,this._weight,this._playOrder);S._from=this.from,S._to=this.to,S._speedRatio=this.speedRatio,S._loopAnimation=this.loopAnimation,S._isAdditive=this.isAdditive,S._enableBlending=this.enableBlending,S._blendingSpeed=this.blendingSpeed,S.metadata=this.metadata,S.mask=this.mask;for(const A of this._targetedAnimations)S.addTargetedAnimation(R?A.animation.clone():A.animation,a?a(A.target):A.target);return S}serialize(){const P={};P.name=this.name,P.from=this.from,P.to=this.to,P.speedRatio=this.speedRatio,P.loopAnimation=this.loopAnimation,P.isAdditive=this.isAdditive,P.weight=this.weight,P.playOrder=this.playOrder,P.enableBlending=this.enableBlending,P.blendingSpeed=this.blendingSpeed,P.targetedAnimations=[];for(let a=0;a<this.targetedAnimations.length;a++){const R=this.targetedAnimations[a];P.targetedAnimations[a]=R.serialize()}return p.e&&p.e.HasTags(this)&&(P.tags=p.e.GetTags(this)),this.metadata&&(P.metadata=this.metadata),P}static Parse(P,a){const R=new W(P.name,a,P.weight,P.playOrder);for(let A=0;A<P.targetedAnimations.length;A++){const Z=P.targetedAnimations[A],p=S.e.Parse(Z.animation),j=Z.targetId;if("influence"===Z.animation.property){const P=a.getMorphTargetById(j);P&&R.addTargetedAnimation(p,P)}else{const P=a.getNodeById(j);null!=P&&R.addTargetedAnimation(p,P)}}return p.e&&p.e.AddTagsTo(R,P.tags),null!==P.from&&null!==P.to&&R.normalize(P.from,P.to),void 0!==P.speedRatio&&(R._speedRatio=P.speedRatio),void 0!==P.loopAnimation&&(R._loopAnimation=P.loopAnimation),void 0!==P.isAdditive&&(R._isAdditive=P.isAdditive),void 0!==P.weight&&(R._weight=P.weight),void 0!==P.playOrder&&(R._playOrder=P.playOrder),void 0!==P.enableBlending&&(R._enableBlending=P.enableBlending),void 0!==P.blendingSpeed&&(R._blendingSpeed=P.blendingSpeed),void 0!==P.metadata&&(R.metadata=P.metadata),R}static MakeAnimationAdditive(P,a,R){let A;A="object"===typeof a?a:{referenceFrame:a,range:R,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let Z=P;A.cloneOriginalAnimationGroup&&(Z=P.clone(A.clonedAnimationGroupName||Z.name));const p=Z.targetedAnimations;for(let j=0;j<p.length;j++){const P=p[j];P.animation=S.e.MakeAnimationAdditive(P.animation,A)}if(Z.isAdditive=!0,A.clipKeys){let P=Number.MAX_VALUE,a=-Number.MAX_VALUE;const R=Z.targetedAnimations;for(let S=0;S<R.length;S++){const A=R[S].animation.getKeys();P>A[0].frame&&(P=A[0].frame),a<A[A.length-1].frame&&(a=A[A.length-1].frame)}Z._from=P,Z._to=a}return Z}static ClipKeys(P,a,R,S,A){const Z=P.clone(S||P.name);return W.ClipKeysInPlace(Z,a,R,A)}static ClipKeysInPlace(P,a,R,S){return W.ClipInPlace(P,a,R,S,!1)}static ClipFrames(P,a,R,S,A){const Z=P.clone(S||P.name);return W.ClipFramesInPlace(Z,a,R,A)}static ClipFramesInPlace(P,a,R,S){return W.ClipInPlace(P,a,R,S,!0)}static ClipInPlace(P,a,R,S){let A=arguments.length>4&&void 0!==arguments[4]&&arguments[4],Z=Number.MAX_VALUE,p=-Number.MAX_VALUE;const j=P.targetedAnimations;for(let U=0;U<j.length;U++){const P=j[U],Q=S?P.animation:P.animation.clone();A&&(Q.createKeyForFrame(a),Q.createKeyForFrame(R));const h=Q.getKeys(),l=[];let V=Number.MAX_VALUE;for(let S=0;S<h.length;S++){const P=h[S];if(!A&&S>=a&&S<=R||A&&P.frame>=a&&P.frame<=R){const a={frame:P.frame,value:P.value.clone?P.value.clone():P.value,inTangent:P.inTangent,outTangent:P.outTangent,interpolation:P.interpolation,lockedTangent:P.lockedTangent};V===Number.MAX_VALUE&&(V=a.frame),a.frame-=V,l.push(a)}}0!==l.length?(Z>l[0].frame&&(Z=l[0].frame),p<l[l.length-1].frame&&(p=l[l.length-1].frame),Q.setKeys(l,!0),P.animation=Q):(j.splice(U,1),U--)}return P._from=Z,P._to=p,P}getClassName(){return"AnimationGroup"}toString(P){let a="Name: "+this.name;return a+=", type: "+this.getClassName(),P&&(a+=", from: "+this._from,a+=", to: "+this._to,a+=", isStarted: "+this._isStarted,a+=", speedRatio: "+this._speedRatio,a+=", targetedAnimations length: "+this._targetedAnimations.length,a+=", animatables length: "+this._animatables),a}}}}]);