"use strict";(self["80dd64vgxnn"]=self["80dd64vgxnn"]||[]).push([[88],{15807:(mm,o,u)=>{u.r(o),u.d(o,{FlowGraphAbsBlock:()=>P,FlowGraphAcosBlock:()=>Om,FlowGraphAcoshBlock:()=>qm,FlowGraphAddBlock:()=>H,FlowGraphAsinBlock:()=>Bm,FlowGraphAsinhBlock:()=>Ym,FlowGraphAtan2Block:()=>wm,FlowGraphAtanBlock:()=>rm,FlowGraphAtanhBlock:()=>xm,FlowGraphBitwiseAndBlock:()=>Nm,FlowGraphBitwiseLeftShiftBlock:()=>Rm,FlowGraphBitwiseNotBlock:()=>Jm,FlowGraphBitwiseOrBlock:()=>Sm,FlowGraphBitwiseRightShiftBlock:()=>gm,FlowGraphBitwiseXorBlock:()=>Pm,FlowGraphCeilBlock:()=>F,FlowGraphClampBlock:()=>k,FlowGraphCosBlock:()=>um,FlowGraphCoshBlock:()=>Km,FlowGraphCubeRootBlock:()=>Qm,FlowGraphDegToRadBlock:()=>i,FlowGraphDivideBlock:()=>l,FlowGraphEBlock:()=>Q,FlowGraphEqualityBlock:()=>v,FlowGraphExpBlock:()=>Hm,FlowGraphFloorBlock:()=>W,FlowGraphFractionBlock:()=>A,FlowGraphGreaterThanBlock:()=>h,FlowGraphGreaterThanOrEqualBlock:()=>Z,FlowGraphInfBlock:()=>J,FlowGraphIsInfinityBlock:()=>D,FlowGraphIsNanBlock:()=>T,FlowGraphLeadingZerosBlock:()=>Wm,FlowGraphLessThanBlock:()=>n,FlowGraphLessThanOrEqualBlock:()=>U,FlowGraphLog10Block:()=>lm,FlowGraphLog2Block:()=>Mm,FlowGraphLogBlock:()=>Em,FlowGraphMathInterpolationBlock:()=>C,FlowGraphMaxBlock:()=>a,FlowGraphMinBlock:()=>j,FlowGraphModuloBlock:()=>s,FlowGraphMultiplyBlock:()=>M,FlowGraphNaNBlock:()=>N,FlowGraphNegationBlock:()=>y,FlowGraphOneBitsCounterBlock:()=>cm,FlowGraphPiBlock:()=>b,FlowGraphPowerBlock:()=>bm,FlowGraphRadToDegBlock:()=>mo,FlowGraphRandomBlock:()=>t,FlowGraphRoundBlock:()=>c,FlowGraphSaturateBlock:()=>e,FlowGraphSignBlock:()=>R,FlowGraphSinBlock:()=>om,FlowGraphSinhBlock:()=>pm,FlowGraphSquareRootBlock:()=>tm,FlowGraphSubtractBlock:()=>E,FlowGraphTanBlock:()=>fm,FlowGraphTanhBlock:()=>zm,FlowGraphTrailingZerosBlock:()=>Fm,FlowGraphTruncBlock:()=>g});var f=u(12702),B=u(14257),O=u(15816),r=u(15821);class w extends r.d{constructor(mm,o,u,f){super(mm,f),this._operation=o,this._className=u}_doOperation(mm){return this._operation(mm)}getClassName(){return this._className}}var p=u(12740),K=u(15828);class z extends r.d{constructor(mm,o,u,f,B,O,r){super(f,r),this._operation=B,this._className=O,this.a=this.registerDataInput("a",mm),this.b=this.registerDataInput("b",o),this.c=this.registerDataInput("c",u)}_doOperation(mm){return this._operation(this.a.getValue(mm),this.b.getValue(mm),this.c.getValue(mm))}getClassName(){return this._className}}var Y=u(14255),q=u(14266),x=u(14291);class H extends O.e{constructor(mm){super((0,B.O)(null===mm||void 0===mm?void 0:mm.type),(0,B.O)(null===mm||void 0===mm?void 0:mm.type),(0,B.O)(null===mm||void 0===mm?void 0:mm.type),((mm,o)=>this._polymorphicAdd(mm,o)),"FlowGraphAddBlock",mm)}_polymorphicAdd(mm,o){const u=(0,x.j)(mm),f=(0,x.j)(o);if((0,x.f)(u,f)||(0,x.d)(u,f)||(0,x.c)(u,f))return mm.add(o);if("Quaternion"===u||"Vector4"===f)return new p.Vector4(mm.x,mm.y,mm.z,mm.w).addInPlace(o);if("Vector4"===u||"Quaternion"===f)return mm.add(o);var B;if(null!==(B=this.config)&&void 0!==B&&B.preventIntegerFloatArithmetic&&typeof mm!==typeof o)throw new Error("Cannot add different types of numbers.");return(0,x.n)(mm)+(0,x.n)(o)}}(0,f.c)("FlowGraphAddBlock",H);class E extends O.e{constructor(mm){super((0,B.O)(null===mm||void 0===mm?void 0:mm.type),(0,B.O)(null===mm||void 0===mm?void 0:mm.type),(0,B.O)(null===mm||void 0===mm?void 0:mm.type),((mm,o)=>this._polymorphicSubtract(mm,o)),"FlowGraphSubtractBlock",mm)}_polymorphicSubtract(mm,o){const u=(0,x.j)(mm),f=(0,x.j)(o);if((0,x.f)(u,f)||(0,x.c)(u,f)||(0,x.d)(u,f))return mm.Qo(o);if("Quaternion"===u||"Vector4"===f)return new p.Vector4(mm.x,mm.y,mm.z,mm.w).LY(o);if("Vector4"===u||"Quaternion"===f)return mm.Qo(o);var B;if(null!==(B=this.config)&&void 0!==B&&B.preventIntegerFloatArithmetic&&typeof mm!==typeof o)throw new Error("Cannot add different types of numbers.");return(0,x.n)(mm)-(0,x.n)(o)}}(0,f.c)("FlowGraphSubtractBlock",E);class M extends O.e{constructor(mm){super((0,B.O)(null===mm||void 0===mm?void 0:mm.type),(0,B.O)(null===mm||void 0===mm?void 0:mm.type),(0,B.O)(null===mm||void 0===mm?void 0:mm.type),((mm,o)=>this._polymorphicMultiply(mm,o)),"FlowGraphMultiplyBlock",mm)}_polymorphicMultiply(mm,o){const u=(0,x.j)(mm),f=(0,x.j)(o);if((0,x.f)(u,f)||(0,x.c)(u,f))return mm.multiply(o);if("Quaternion"===u||"Vector4"===f)return new p.Vector4(mm.x,mm.y,mm.z,mm.w).multiplyInPlace(o);if("Vector4"===u||"Quaternion"===f)return mm.multiply(o);if((0,x.d)(u,f)){var B;if(null!==(B=this.config)&&void 0!==B&&B.useMatrixPerComponent){const f=mm.m;for(let mm=0;mm<f.length;mm++)f[mm]*=o.m[mm];return"Matrix2D"===u?new q.d(f):"Matrix3D"===u?new q.g(f):p.Matrix.So(f)}return o.multiply(mm)}var O;if(null!==(O=this.config)&&void 0!==O&&O.preventIntegerFloatArithmetic&&typeof mm!==typeof o)throw new Error("Cannot add different types of numbers.");return(0,x.n)(mm)*(0,x.n)(o)}}(0,f.c)("FlowGraphMultiplyBlock",M);class l extends O.e{constructor(mm){super((0,B.O)(null===mm||void 0===mm?void 0:mm.type),(0,B.O)(null===mm||void 0===mm?void 0:mm.type),(0,B.O)(null===mm||void 0===mm?void 0:mm.type),((mm,o)=>this._polymorphicDivide(mm,o)),"FlowGraphDivideBlock",mm)}_polymorphicDivide(mm,o){const u=(0,x.j)(mm),f=(0,x.j)(o);if((0,x.f)(u,f)||(0,x.c)(u,f))return mm.divide(o);if("Quaternion"===u||"Quaternion"===f){const u=mm.clone();return u.x/=o.x,u.y/=o.y,u.z/=o.z,u.w/=o.w,u}if("Quaternion"===u||"Vector4"===f)return new p.Vector4(mm.x,mm.y,mm.z,mm.w).divideInPlace(o);if("Vector4"===u||"Quaternion"===f)return mm.divide(o);if((0,x.d)(u,f)){var B;if(null!==(B=this.config)&&void 0!==B&&B.useMatrixPerComponent){const f=mm.m;for(let mm=0;mm<f.length;mm++)f[mm]/=o.m[mm];return"Matrix2D"===u?new q.d(f):"Matrix3D"===u?new q.g(f):p.Matrix.So(f)}return mm.divide(o)}var O;if(null!==(O=this.config)&&void 0!==O&&O.preventIntegerFloatArithmetic&&typeof mm!==typeof o)throw new Error("Cannot add different types of numbers.");return(0,x.n)(mm)/(0,x.n)(o)}}(0,f.c)("FlowGraphDivideBlock",l);class t extends w{constructor(mm){super(B.r,(mm=>this._random(mm)),"FlowGraphRandomBlock",mm),this.min=this.registerDataInput("min",B.r,(null===mm||void 0===mm?void 0:mm.min)??0),this.max=this.registerDataInput("max",B.r,(null===mm||void 0===mm?void 0:mm.max)??1),null!==mm&&void 0!==mm&&mm.seed&&(this._seed=mm.seed)}_isSeed(){return void 0!==(arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._seed)}_getRandomValue(){if(this._isSeed(this._seed)){const mm=1e4*Math.sin(this._seed++);return mm-Math.floor(mm)}return Math.random()}_random(mm){const o=this.min.getValue(mm),u=this.max.getValue(mm);return this._getRandomValue()*(u-o)+o}}(0,f.c)("FlowGraphRandomBlock",t);class Q extends w{constructor(mm){super(B.r,(()=>Math.E),"FlowGraphEBlock",mm)}}(0,f.c)("FlowGraphEBlock",Q);class b extends w{constructor(mm){super(B.r,(()=>Math.PI),"FlowGraphPIBlock",mm)}}(0,f.c)("FlowGraphPIBlock",b);class J extends w{constructor(mm){super(B.r,(()=>Number.POSITIVE_INFINITY),"FlowGraphInfBlock",mm)}}(0,f.c)("FlowGraphInfBlock",J);class N extends w{constructor(mm){super(B.r,(()=>Number.NaN),"FlowGraphNaNBlock",mm)}}function S(mm,o){switch((0,x.j)(mm)){case"FlowGraphInteger":return new Y.d(o(mm.value));case"Vector2":return new p.Vector2(o(mm.x),o(mm.y));case"lo":return new p.lo(o(mm.x),o(mm.y),o(mm.z));case"Vector4":return new p.Vector4(o(mm.x),o(mm.y),o(mm.z),o(mm.w));case"Quaternion":return new p.Quaternion(o(mm.x),o(mm.y),o(mm.z),o(mm.w));case"Matrix":return p.Matrix.So(mm.m.map(o));case"Matrix2D":return new q.d(mm.m.map(o));case"Matrix3D":return new q.g(mm.m.map(o));default:return o(mm)}}(0,f.c)("FlowGraphNaNBlock",N);class P extends K.c{constructor(mm){super(B.r,B.r,(mm=>this._polymorphicAbs(mm)),"FlowGraphAbsBlock",mm)}_polymorphicAbs(mm){return S(mm,Math.abs)}}(0,f.c)("FlowGraphAbsBlock",P);class R extends K.c{constructor(mm){super(B.r,B.r,(mm=>this._polymorphicSign(mm)),"FlowGraphSignBlock",mm)}_polymorphicSign(mm){return S(mm,Math.sign)}}(0,f.c)("FlowGraphSignBlock",R);class g extends K.c{constructor(mm){super(B.r,B.r,(mm=>this._polymorphicTrunc(mm)),"FlowGraphTruncBlock",mm)}_polymorphicTrunc(mm){return S(mm,Math.trunc)}}(0,f.c)("FlowGraphTruncBlock",g);class W extends K.c{constructor(mm){super(B.r,B.r,(mm=>this._polymorphicFloor(mm)),"FlowGraphFloorBlock",mm)}_polymorphicFloor(mm){return S(mm,Math.floor)}}(0,f.c)("FlowGraphFloorBlock",W);class F extends K.c{constructor(mm){super(B.b,B.b,(mm=>this._polymorphicCeiling(mm)),"FlowGraphCeilBlock",mm)}_polymorphicCeiling(mm){return S(mm,Math.ceil)}}(0,f.c)("FlowGraphCeilBlock",F);class c extends K.c{constructor(mm){super(B.b,B.b,(mm=>this._polymorphicRound(mm)),"FlowGraphRoundBlock",mm)}_polymorphicRound(mm){return S(mm,(mm=>{var o;return mm<0&&null!==(o=this.config)&&void 0!==o&&o.roundHalfAwayFromZero?-Math.round(-mm):Math.round(mm)}))}}(0,f.c)("FlowGraphRoundBlock",c);class A extends K.c{constructor(mm){super(B.b,B.b,(mm=>this._polymorphicFraction(mm)),"FlowGraphFractBlock",mm)}_polymorphicFraction(mm){return S(mm,(mm=>mm-Math.floor(mm)))}}(0,f.c)("FlowGraphFractBlock",A);class y extends K.c{constructor(mm){super(B.b,B.b,(mm=>this._polymorphicNeg(mm)),"FlowGraphNegationBlock",mm)}_polymorphicNeg(mm){return S(mm,(mm=>-mm))}}function I(mm,o,u){switch((0,x.j)(mm)){case"FlowGraphInteger":return new Y.d(u(mm.value,o.value));case"Vector2":return new p.Vector2(u(mm.x,o.x),u(mm.y,o.y));case"lo":return new p.lo(u(mm.x,o.x),u(mm.y,o.y),u(mm.z,o.z));case"Vector4":return new p.Vector4(u(mm.x,o.x),u(mm.y,o.y),u(mm.z,o.z),u(mm.w,o.w));case"Quaternion":return new p.Quaternion(u(mm.x,o.x),u(mm.y,o.y),u(mm.z,o.z),u(mm.w,o.w));case"Matrix":return p.Matrix.So(mm.m.map(((mm,f)=>u(mm,o.m[f]))));case"Matrix2D":return new q.d(mm.m.map(((mm,f)=>u(mm,o.m[f]))));case"Matrix3D":return new q.g(mm.m.map(((mm,f)=>u(mm,o.m[f]))));default:return u((0,x.n)(mm),(0,x.n)(o))}}(0,f.c)("FlowGraphNegationBlock",y);class s extends O.e{constructor(mm){super(B.b,B.b,B.b,((mm,o)=>this._polymorphicRemainder(mm,o)),"FlowGraphModuloBlock",mm)}_polymorphicRemainder(mm,o){return I(mm,o,((mm,o)=>mm%o))}}(0,f.c)("FlowGraphModuloBlock",s);class j extends O.e{constructor(mm){super(B.b,B.b,B.b,((mm,o)=>this._polymorphicMin(mm,o)),"FlowGraphMinBlock",mm)}_polymorphicMin(mm,o){return I(mm,o,Math.min)}}(0,f.c)("FlowGraphMinBlock",j);class a extends O.e{constructor(mm){super(B.b,B.b,B.b,((mm,o)=>this._polymorphicMax(mm,o)),"FlowGraphMaxBlock",mm)}_polymorphicMax(mm,o){return I(mm,o,Math.max)}}function X(mm,o,u){return Math.min(Math.max(mm,Math.min(o,u)),Math.max(o,u))}function G(mm,o,u,f){switch((0,x.j)(mm)){case"FlowGraphInteger":return new Y.d(f(mm.value,o.value,u.value));case"Vector2":return new p.Vector2(f(mm.x,o.x,u.x),f(mm.y,o.y,u.y));case"lo":return new p.lo(f(mm.x,o.x,u.x),f(mm.y,o.y,u.y),f(mm.z,o.z,u.z));case"Vector4":return new p.Vector4(f(mm.x,o.x,u.x),f(mm.y,o.y,u.y),f(mm.z,o.z,u.z),f(mm.w,o.w,u.w));case"Quaternion":return new p.Quaternion(f(mm.x,o.x,u.x),f(mm.y,o.y,u.y),f(mm.z,o.z,u.z),f(mm.w,o.w,u.w));case"Matrix":return p.Matrix.So(mm.m.map(((mm,B)=>f(mm,o.m[B],u.m[B]))));case"Matrix2D":return new q.d(mm.m.map(((mm,B)=>f(mm,o.m[B],u.m[B]))));case"Matrix3D":return new q.g(mm.m.map(((mm,B)=>f(mm,o.m[B],u.m[B]))));default:return f((0,x.n)(mm),(0,x.n)(o),(0,x.n)(u))}}(0,f.c)("FlowGraphMaxBlock",a);class k extends z{constructor(mm){super(B.b,B.b,B.b,B.b,((mm,o,u)=>this._polymorphicClamp(mm,o,u)),"FlowGraphClampBlock",mm)}_polymorphicClamp(mm,o,u){return G(mm,o,u,X)}}function d(mm){return Math.min(Math.max(mm,0),1)}(0,f.c)("FlowGraphClampBlock",k);class e extends K.c{constructor(mm){super(B.b,B.b,(mm=>this._polymorphicSaturate(mm)),"FlowGraphSaturateBlock",mm)}_polymorphicSaturate(mm){return S(mm,d)}}function L(mm,o,u){return(1-u)*mm+u*o}(0,f.c)("FlowGraphSaturateBlock",e);class C extends z{constructor(mm){super(B.b,B.b,B.b,B.b,((mm,o,u)=>this._polymorphicInterpolate(mm,o,u)),"FlowGraphMathInterpolationBlock",mm)}_polymorphicInterpolate(mm,o,u){return G(mm,o,u,L)}}(0,f.c)("FlowGraphMathInterpolationBlock",C);class v extends O.e{constructor(mm){super(B.b,B.b,B.f,((mm,o)=>this._polymorphicEq(mm,o)),"FlowGraphEqualityBlock",mm)}_polymorphicEq(mm,o){const u=(0,x.j)(mm),f=(0,x.j)(o);return typeof mm===typeof o&&((0,x.f)(u,f)||(0,x.d)(u,f)||(0,x.c)(u,f)?mm.equals(o):mm===o)}}function V(mm,o,u){if((0,x.r)(mm)&&(0,x.r)(o))return u((0,x.n)(mm),(0,x.n)(o));throw new Error(`Cannot compare ${mm} and ${o}`)}(0,f.c)("FlowGraphEqualityBlock",v);class n extends O.e{constructor(mm){super(B.b,B.b,B.f,((mm,o)=>this._polymorphicLessThan(mm,o)),"FlowGraphLessThanBlock",mm)}_polymorphicLessThan(mm,o){return V(mm,o,((mm,o)=>mm<o))}}(0,f.c)("FlowGraphLessThanBlock",n);class U extends O.e{constructor(mm){super(B.b,B.b,B.f,((mm,o)=>this._polymorphicLessThanOrEqual(mm,o)),"FlowGraphLessThanOrEqualBlock",mm)}_polymorphicLessThanOrEqual(mm,o){return V(mm,o,((mm,o)=>mm<=o))}}(0,f.c)("FlowGraphLessThanOrEqualBlock",U);class h extends O.e{constructor(mm){super(B.b,B.b,B.f,((mm,o)=>this._polymorphicGreaterThan(mm,o)),"FlowGraphGreaterThanBlock",mm)}_polymorphicGreaterThan(mm,o){return V(mm,o,((mm,o)=>mm>o))}}(0,f.c)("FlowGraphGreaterThanBlock",h);class Z extends O.e{constructor(mm){super(B.b,B.b,B.f,((mm,o)=>this._polymorphicGreaterThanOrEqual(mm,o)),"FlowGraphGreaterThanOrEqualBlock",mm)}_polymorphicGreaterThanOrEqual(mm,o){return V(mm,o,((mm,o)=>mm>=o))}}(0,f.c)("FlowGraphGreaterThanOrEqualBlock",Z);class T extends K.c{constructor(mm){super(B.b,B.f,(mm=>this._polymorphicIsNan(mm)),"FlowGraphIsNaNBlock",mm)}_polymorphicIsNan(mm){if((0,x.r)(mm,!0))return isNaN((0,x.n)(mm));throw new Error(`Cannot get NaN of ${mm}`)}}(0,f.c)("FlowGraphIsNaNBlock",T);class D extends K.c{constructor(mm){super(B.b,B.f,(mm=>this._polymorphicIsInf(mm)),"FlowGraphIsInfBlock",mm)}_polymorphicIsInf(mm){if((0,x.r)(mm))return!isFinite((0,x.n)(mm));throw new Error(`Cannot get isInf of ${mm}`)}}(0,f.c)("FlowGraphIsInfBlock",D);class i extends K.c{constructor(mm){super(B.b,B.b,(mm=>this._polymorphicDegToRad(mm)),"FlowGraphDegToRadBlock",mm)}_degToRad(mm){return mm*Math.PI/180}_polymorphicDegToRad(mm){return S(mm,this._degToRad)}}(0,f.c)("FlowGraphDegToRadBlock",i);class mo extends K.c{constructor(mm){super(B.b,B.b,(mm=>this._polymorphicRadToDeg(mm)),"FlowGraphRadToDegBlock",mm)}_radToDeg(mm){return 180*mm/Math.PI}_polymorphicRadToDeg(mm){return S(mm,this._radToDeg)}}(0,f.c)("FlowGraphRadToDegBlock",mo);class om extends K.c{constructor(mm){super(B.r,B.r,(mm=>this._polymorphicSin(mm)),"FlowGraphSinBlock",mm)}_polymorphicSin(mm){return S(mm,Math.sin)}}class um extends K.c{constructor(mm){super(B.r,B.r,(mm=>this._polymorphicCos(mm)),"FlowGraphCosBlock",mm)}_polymorphicCos(mm){return S(mm,Math.cos)}}class fm extends K.c{constructor(mm){super(B.r,B.r,(mm=>this._polymorphicTan(mm)),"FlowGraphTanBlock",mm)}_polymorphicTan(mm){return S(mm,Math.tan)}}class Bm extends K.c{constructor(mm){super(B.r,B.r,(mm=>this._polymorphicAsin(mm)),"FlowGraphASinBlock",mm)}_polymorphicAsin(mm){return S(mm,Math.asin)}}(0,f.c)("FlowGraphASinBlock",Bm);class Om extends K.c{constructor(mm){super(B.r,B.r,(mm=>this._polymorphicAcos(mm)),"FlowGraphACosBlock",mm)}_polymorphicAcos(mm){return S(mm,Math.acos)}}(0,f.c)("FlowGraphACosBlock",Om);class rm extends K.c{constructor(mm){super(B.r,B.r,(mm=>this._polymorphicAtan(mm)),"FlowGraphATanBlock",mm)}_polymorphicAtan(mm){return S(mm,Math.atan)}}(0,f.c)("FlowGraphATanBlock",rm);class wm extends O.e{constructor(mm){super(B.b,B.b,B.b,((mm,o)=>this._polymorphicAtan2(mm,o)),"FlowGraphATan2Block",mm)}_polymorphicAtan2(mm,o){return I(mm,o,Math.atan2)}}(0,f.c)("FlowGraphATan2Block",wm);class pm extends K.c{constructor(mm){super(B.b,B.b,(mm=>this._polymorphicSinh(mm)),"FlowGraphSinhBlock",mm)}_polymorphicSinh(mm){return S(mm,Math.sinh)}}(0,f.c)("FlowGraphSinhBlock",pm);class Km extends K.c{constructor(mm){super(B.b,B.b,(mm=>this._polymorphicCosh(mm)),"FlowGraphCoshBlock",mm)}_polymorphicCosh(mm){return S(mm,Math.cosh)}}(0,f.c)("FlowGraphCoshBlock",Km);class zm extends K.c{constructor(mm){super(B.b,B.b,(mm=>this._polymorphicTanh(mm)),"FlowGraphTanhBlock",mm)}_polymorphicTanh(mm){return S(mm,Math.tanh)}}(0,f.c)("FlowGraphTanhBlock",zm);class Ym extends K.c{constructor(mm){super(B.b,B.r,(mm=>this._polymorphicAsinh(mm)),"FlowGraphASinhBlock",mm)}_polymorphicAsinh(mm){return S(mm,Math.asinh)}}(0,f.c)("FlowGraphASinhBlock",Ym);class qm extends K.c{constructor(mm){super(B.b,B.r,(mm=>this._polymorphicAcosh(mm)),"FlowGraphACoshBlock",mm)}_polymorphicAcosh(mm){return S(mm,Math.acosh)}}(0,f.c)("FlowGraphACoshBlock",qm);class xm extends K.c{constructor(mm){super(B.b,B.r,(mm=>this._polymorphicAtanh(mm)),"FlowGraphATanhBlock",mm)}_polymorphicAtanh(mm){return S(mm,Math.atanh)}}(0,f.c)("FlowGraphATanhBlock",xm);class Hm extends K.c{constructor(mm){super(B.b,B.r,(mm=>this._polymorphicExp(mm)),"FlowGraphExponentialBlock",mm)}_polymorphicExp(mm){return S(mm,Math.exp)}}(0,f.c)("FlowGraphExponentialBlock",Hm);class Em extends K.c{constructor(mm){super(B.b,B.r,(mm=>this._polymorphicLog(mm)),"FlowGraphLogBlock",mm)}_polymorphicLog(mm){return S(mm,Math.log)}}(0,f.c)("FlowGraphLogBlock",Em);class Mm extends K.c{constructor(mm){super(B.b,B.r,(mm=>this._polymorphicLog2(mm)),"FlowGraphLog2Block",mm)}_polymorphicLog2(mm){return S(mm,Math.log2)}}(0,f.c)("FlowGraphLog2Block",Mm);class lm extends K.c{constructor(mm){super(B.b,B.r,(mm=>this._polymorphicLog10(mm)),"FlowGraphLog10Block",mm)}_polymorphicLog10(mm){return S(mm,Math.log10)}}(0,f.c)("FlowGraphLog10Block",lm);class tm extends K.c{constructor(mm){super(B.b,B.r,(mm=>this._polymorphicSqrt(mm)),"FlowGraphSquareRootBlock",mm)}_polymorphicSqrt(mm){return S(mm,Math.sqrt)}}(0,f.c)("FlowGraphSquareRootBlock",tm);class Qm extends K.c{constructor(mm){super(B.b,B.r,(mm=>this._polymorphicCubeRoot(mm)),"FlowGraphCubeRootBlock",mm)}_polymorphicCubeRoot(mm){return S(mm,Math.cbrt)}}(0,f.c)("FlowGraphCubeRootBlock",Qm);class bm extends O.e{constructor(mm){super(B.b,B.r,B.r,((mm,o)=>this._polymorphicPow(mm,o)),"FlowGraphPowerBlock",mm)}_polymorphicPow(mm,o){return I(mm,o,Math.pow)}}(0,f.c)("FlowGraphPowerBlock",bm);class Jm extends K.c{constructor(mm){super((0,B.O)((null===mm||void 0===mm?void 0:mm.valueType)||"FlowGraphInteger"),(0,B.O)((null===mm||void 0===mm?void 0:mm.valueType)||"FlowGraphInteger"),(mm=>"boolean"===typeof mm?!mm:"number"===typeof mm?~mm:new Y.d(~mm.value)),"FlowGraphBitwiseNotBlock",mm)}}(0,f.c)("FlowGraphBitwiseNotBlock",Jm);class Nm extends O.e{constructor(mm){super((0,B.O)((null===mm||void 0===mm?void 0:mm.valueType)||"FlowGraphInteger"),(0,B.O)((null===mm||void 0===mm?void 0:mm.valueType)||"FlowGraphInteger"),(0,B.O)((null===mm||void 0===mm?void 0:mm.valueType)||"FlowGraphInteger"),((mm,o)=>{if("boolean"===typeof mm&&"boolean"===typeof o)return mm&&o;if("number"===typeof mm&&"number"===typeof o)return mm&o;if("object"===typeof mm&&"object"===typeof o)return new Y.d(mm.value&o.value);throw new Error(`Cannot perform bitwise AND on ${mm} and ${o}`)}),"FlowGraphBitwiseAndBlock",mm)}}(0,f.c)("FlowGraphBitwiseAndBlock",Nm);class Sm extends O.e{constructor(mm){super((0,B.O)((null===mm||void 0===mm?void 0:mm.valueType)||"FlowGraphInteger"),(0,B.O)((null===mm||void 0===mm?void 0:mm.valueType)||"FlowGraphInteger"),(0,B.O)((null===mm||void 0===mm?void 0:mm.valueType)||"FlowGraphInteger"),((mm,o)=>{if("boolean"===typeof mm&&"boolean"===typeof o)return mm||o;if("number"===typeof mm&&"number"===typeof o)return mm|o;if("object"===typeof mm&&"object"===typeof o)return new Y.d(mm.value|o.value);throw new Error(`Cannot perform bitwise OR on ${mm} and ${o}`)}),"FlowGraphBitwiseOrBlock",mm)}}(0,f.c)("FlowGraphBitwiseOrBlock",Sm);class Pm extends O.e{constructor(mm){super((0,B.O)((null===mm||void 0===mm?void 0:mm.valueType)||"FlowGraphInteger"),(0,B.O)((null===mm||void 0===mm?void 0:mm.valueType)||"FlowGraphInteger"),(0,B.O)((null===mm||void 0===mm?void 0:mm.valueType)||"FlowGraphInteger"),((mm,o)=>{if("boolean"===typeof mm&&"boolean"===typeof o)return mm!==o;if("number"===typeof mm&&"number"===typeof o)return mm^o;if("object"===typeof mm&&"object"===typeof o)return new Y.d(mm.value^o.value);throw new Error(`Cannot perform bitwise XOR on ${mm} and ${o}`)}),"FlowGraphBitwiseXorBlock",mm)}}(0,f.c)("FlowGraphBitwiseXorBlock",Pm);class Rm extends O.e{constructor(mm){super(B.j,B.j,B.j,((mm,o)=>new Y.d(mm.value<<o.value)),"FlowGraphBitwiseLeftShiftBlock",mm)}}(0,f.c)("FlowGraphBitwiseLeftShiftBlock",Rm);class gm extends O.e{constructor(mm){super(B.j,B.j,B.j,((mm,o)=>new Y.d(mm.value>>o.value)),"FlowGraphBitwiseRightShiftBlock",mm)}}(0,f.c)("FlowGraphBitwiseRightShiftBlock",gm);class Wm extends K.c{constructor(mm){super(B.j,B.j,(mm=>new Y.d(Math.clz32(mm.value))),"FlowGraphLeadingZerosBlock",mm)}}(0,f.c)("FlowGraphLeadingZerosBlock",Wm);class Fm extends K.c{constructor(mm){super(B.j,B.j,(mm=>new Y.d(mm.value?31-Math.clz32(mm.value&-mm.value):32)),"FlowGraphTrailingZerosBlock",mm)}}(0,f.c)("FlowGraphTrailingZerosBlock",Fm);class cm extends K.c{constructor(mm){super(B.j,B.j,(mm=>new Y.d(function(mm){let o=0;for(;mm;)o+=1&mm,mm>>=1;return o}(mm.value))),"FlowGraphOneBitsCounterBlock",mm)}}(0,f.c)("FlowGraphOneBitsCounterBlock",cm)},15816:(mm,o,u)=>{u.d(o,{e:()=>B});var f=u(15821);class B extends f.d{constructor(mm,o,u,f,B,O){super(u,O),this._operation=f,this._className=B,this.a=this.registerDataInput("a",mm),this.b=this.registerDataInput("b",o)}_doOperation(mm){const o=this.a.getValue(mm),u=this.b.getValue(mm);return this._operation(o,u)}getClassName(){return this._className}}},15821:(mm,o,u)=>{u.d(o,{d:()=>w});var f=u(14280),B=u(14257);const O="cachedOperationValue",r="cachedExecutionId";class w extends f.e{constructor(mm,o){super(o),this.value=this.registerDataOutput("value",mm),this.isValid=this.registerDataOutput("isValid",B.f)}_updateOutputs(mm){const o=mm._getExecutionVariable(this,r,-1),u=mm._getExecutionVariable(this,O,null);if(void 0!==u&&null!==u&&o===mm.executionId)this.isValid.setValue(!0,mm),this.value.setValue(u,mm);else try{const o=this._doOperation(mm);if(void 0===o||null===o)return void this.isValid.setValue(!1,mm);mm._setExecutionVariable(this,O,o),mm._setExecutionVariable(this,r,mm.executionId),this.value.setValue(o,mm),this.isValid.setValue(!0,mm)}catch(f){this.isValid.setValue(!1,mm)}}}},15828:(mm,o,u)=>{u.d(o,{c:()=>B});var f=u(15821);class B extends f.d{constructor(mm,o,u,f,B){super(o,B),this._operation=u,this._className=f,this.a=this.registerDataInput("a",mm)}_doOperation(mm){return this._operation(this.a.getValue(mm))}getClassName(){return this._className}}}}]);