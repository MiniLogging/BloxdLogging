"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[28,29],{12858:(B,I,C)=>{var M=C(11129),x=C(11027),y=C(11062),f=C(11156),L=C(11096),e=C(11137);L.e.prototype._partialLoadFile=function(B,I,C,M){let x=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(B,(B=>{C[I]=B,C._internalCount++,6===C._internalCount&&M(C)}),void 0,void 0,!0,((B,I)=>{x&&B&&x(B.status+" "+B.statusText,I)}))},L.e.prototype._cascadeLoadFiles=function(B,I,C){let M=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const x=[];x._internalCount=0;for(let y=0;y<6;y++)this._partialLoadFile(C[y],y,x,I,M)},L.e.prototype._cascadeLoadImgs=function(B,I,C,M){let x=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,y=arguments.length>5?arguments[5]:void 0;const f=[];f._internalCount=0;for(let L=0;L<6;L++)this._partialLoadImg(M[L],L,f,B,I,C,x,y)},L.e.prototype._partialLoadImg=function(B,I,C,M,x,L){let e=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,g=arguments.length>7?arguments[7]:void 0;const N=(0,f.c)();(0,y.q)(B,(B=>{C[I]=B,C._internalCount++,M&&M.removePendingData(N),6===C._internalCount&&L&&L(x,C)}),((B,I)=>{M&&M.removePendingData(N),e&&e(B,I)}),M?M.offlineProvider:null,g),M&&M.addPendingData(N)},L.e.prototype.createCubeTextureBase=function(B,I,C,y){let f=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,L=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,g=arguments.length>6?arguments[6]:void 0,N=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,R=arguments.length>8&&void 0!==arguments[8]&&arguments[8],H=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,F=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,k=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,q=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,S=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,o=arguments.length>14&&void 0!==arguments[14]&&arguments[14],U=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const G=k||new M.b(this,7);G.isCube=!0,G.url=B,G.generateMipMaps=!y,G._lodGenerationScale=H,G._lodGenerationOffset=F,G._useSRGBBuffer=!!o&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!y),G!==k&&(G.label=B.substring(0,60)),this._doNotHandleContextLost||(G._extension=N,G._files=C,G._buffer=U);const V=B;this._transformTextureUrl&&!k&&(B=this._transformTextureUrl(B));const c=N??function(B){const I=B.split("?")[0],C=I.lastIndexOf(".");return C>-1?I.substring(C).toLowerCase():""}(B),t=(0,e.c)(c),r=(B,I)=>{G.dispose(),L?L(B,I):B&&x.b.Warn(B)},A=(M,L)=>{B===V?M&&r(M.status+" "+M.statusText,L):(x.b.Warn(`Failed to load ${B}, falling back to the ${V}`),this.createCubeTextureBase(V,I,C,!!y,f,r,g,N,R,H,F,G,q,S,o,U))};if(t)t.then((M=>{const x=B=>{q&&q(G,B),M.loadCubeData(B,G,R,f,((B,I)=>{r(B,I)}))};U?x(U):C&&6===C.length?M.supportCascades?this._cascadeLoadFiles(I,(B=>x(B.map((B=>new Uint8Array(B))))),C,r):r("Textures type does not support cascades."):this._loadFile(B,(B=>x(new Uint8Array(B))),void 0,void 0,!0,A)}));else{if(!C||0===C.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(I,G,((B,I)=>{S&&S(B,I)}),C,r)}return this._internalTexturesCache.push(G),G}},13626:(B,I,C)=>{C.r(I),C.d(I,{_DDSTextureLoader:()=>y});var M=C(11383),x=C(13630);class y{constructor(){this.supportCascades=!0}loadCubeData(B,I,C,y){const f=I.getEngine();let L,e=!1,g=1e3;if(Array.isArray(B))for(let M=0;M<B.length;M++){const C=B[M];L=x.DDSTools.GetDDSInfo(C),I.width=L.width,I.height=L.height,e=(L.isRGB||L.isLuminance||L.mipmapCount>1)&&I.generateMipMaps,f._unpackFlipY(L.isCompressed),x.DDSTools.UploadDDSLevels(f,I,C,L,e,6,-1,M),L.isFourCC||1!==L.mipmapCount?g=L.mipmapCount-1:f.generateMipMapsForCubemap(I)}else{const y=B;L=x.DDSTools.GetDDSInfo(y),I.width=L.width,I.height=L.height,C&&(L.sphericalPolynomial=new M.f),e=(L.isRGB||L.isLuminance||L.mipmapCount>1)&&I.generateMipMaps,f._unpackFlipY(L.isCompressed),x.DDSTools.UploadDDSLevels(f,I,y,L,e,6),L.isFourCC||1!==L.mipmapCount?g=L.mipmapCount-1:f.generateMipMapsForCubemap(I,!1)}f._setCubeMapTextureParams(I,e,g),I.isReady=!0,I.onLoadedObservable.notifyObservers(I),I.onLoadedObservable.clear(),y&&y({isDDS:!0,width:I.width,info:L,data:B,texture:I})}loadData(B,I,C){const M=x.DDSTools.GetDDSInfo(B),y=(M.isRGB||M.isLuminance||M.mipmapCount>1)&&I.generateMipMaps&&Math.max(M.width,M.height)>>M.mipmapCount-1===1;C(M.width,M.height,y,M.isFourCC,(()=>{x.DDSTools.UploadDDSLevels(I.getEngine(),I,B,M,y,1)}))}}},11703:(B,I,C)=>{C.d(I,{e:()=>g});var M=C(11194),x=C(11212),y=C(11383),f=C(11197),L=C(11239);class e{constructor(B,I,C,M){this.name=B,this.worldAxisForNormal=I,this.worldAxisForFileX=C,this.worldAxisForFileY=M}}class g{static ConvertCubeMapTextureToSphericalPolynomial(B){var I;if(!B.isCube)return null;null===(I=B.rB())||void 0===I||I.getEngine().flushFramebuffer();const C=B.getSize().width,M=B.readPixels(0,void 0,void 0,!1),x=B.readPixels(1,void 0,void 0,!1);let y,f;B.isRenderTarget?(y=B.readPixels(3,void 0,void 0,!1),f=B.readPixels(2,void 0,void 0,!1)):(y=B.readPixels(2,void 0,void 0,!1),f=B.readPixels(3,void 0,void 0,!1));const L=B.readPixels(4,void 0,void 0,!1),e=B.readPixels(5,void 0,void 0,!1),g=B.gammaSpace;let N=0;return 1!=B.textureType&&2!=B.textureType||(N=1),new Promise((B=>{Promise.all([x,M,y,f,L,e]).then((I=>{let[M,x,y,f,L,e]=I;const R={size:C,right:x,left:M,up:y,down:f,front:L,back:e,format:5,type:N,gammaSpace:g};B(this.ConvertCubeMapToSphericalPolynomial(R))}))}))}static _AreaElement(B,I){return Math.atan2(B*I,Math.sqrt(B*B+I*I+1))}static ConvertCubeMapToSphericalPolynomial(B){const I=new y.c;let C=0;const M=2/B.size,e=M,g=.5*M,N=g-1;for(let y=0;y<6;y++){const R=this._FileFaces[y],H=B[R.name];let F=N;const k=5===B.format?4:3;for(let y=0;y<B.size;y++){let q=N;for(let e=0;e<B.size;e++){const N=R.worldAxisForFileX.scale(q).add(R.worldAxisForFileY.scale(F)).add(R.worldAxisForNormal);N.normalize();const S=this._AreaElement(q-g,F-g)-this._AreaElement(q-g,F+g)-this._AreaElement(q+g,F-g)+this._AreaElement(q+g,F+g);let o=H[y*B.size*k+e*k+0],U=H[y*B.size*k+e*k+1],G=H[y*B.size*k+e*k+2];isNaN(o)&&(o=0),isNaN(U)&&(U=0),isNaN(G)&&(G=0),0===B.type&&(o/=255,U/=255,G/=255),B.gammaSpace&&(o=Math.pow((0,x.Clamp)(o),f.i),U=Math.pow((0,x.Clamp)(U),f.i),G=Math.pow((0,x.Clamp)(G),f.i));const V=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const B=Math.max(o,U,G);if(B>V){const I=V/B;o*=I,U*=I,G*=I}}else o=(0,x.Clamp)(o,0,V),U=(0,x.Clamp)(U,0,V),G=(0,x.Clamp)(G,0,V);const c=new L.SI(o,U,G);I.addLight(N,c,S),C+=S,q+=M}F+=e}}const R=6*(4*Math.PI)/6/C;return I.scaleInPlace(R),I.convertIncidentRadianceToIrradiance(),I.convertIrradianceToLambertianRadiance(),y.f.FromHarmonics(I)}}g._FileFaces=[new e("right",new M.HI(1,0,0),new M.HI(0,0,-1),new M.HI(0,-1,0)),new e("left",new M.HI(-1,0,0),new M.HI(0,0,1),new M.HI(0,-1,0)),new e("up",new M.HI(0,1,0),new M.HI(1,0,0),new M.HI(0,0,1)),new e("down",new M.HI(0,-1,0),new M.HI(1,0,0),new M.HI(0,0,-1)),new e("front",new M.HI(0,0,1),new M.HI(1,0,0),new M.HI(0,-1,0)),new e("back",new M.HI(0,0,-1),new M.HI(-1,0,0),new M.HI(0,-1,0))],g.MAX_HDRI_VALUE=4096,g.PRESERVE_CLAMPED_COLORS=!1},13630:(B,I,C)=>{C.d(I,{DDSTools:()=>k});var M=C(11212),x=C(11027),y=C(11703),f=C(11426);C(12858);const L=131072,e=131072;function g(B){return B.charCodeAt(0)+(B.charCodeAt(1)<<8)+(B.charCodeAt(2)<<16)+(B.charCodeAt(3)<<24)}const N=g("DXT1"),R=g("DXT3"),H=g("DXT5"),F=g("DX10");class k{static GetDDSInfo(B){const I=new Int32Array(B.buffer,B.byteOffset,31),C=new Int32Array(B.buffer,B.byteOffset,35);let M=1;I[2]&L&&(M=Math.max(1,I[7]));const x=I[21],y=x===F?C[32]:0;let f=0;switch(x){case 113:f=2;break;case 116:f=1;break;case F:if(10===y){f=2;break}if(2===y){f=1;break}}return{width:I[4],height:I[3],mipmapCount:M,isFourCC:4===(4&I[20]),isRGB:64===(64&I[20]),isLuminance:(I[20]&e)===e,isCube:512===(512&I[28]),isCompressed:x===N||x===R||x===H,dxgiFormat:y,textureType:f}}static _GetHalfFloatAsFloatRGBAArrayBuffer(B,I,C,M,x,y){const L=new Float32Array(M),e=new Uint16Array(x,C);let g=0;for(let N=0;N<I;N++)for(let I=0;I<B;I++){const C=4*(I+N*B);L[g]=(0,f.f)(e[C]),L[g+1]=(0,f.f)(e[C+1]),L[g+2]=(0,f.f)(e[C+2]),k.StoreLODInAlphaChannel?L[g+3]=y:L[g+3]=(0,f.f)(e[C+3]),g+=4}return L}static _GetHalfFloatRGBAArrayBuffer(B,I,C,M,x,y){if(k.StoreLODInAlphaChannel){const L=new Uint16Array(M),e=new Uint16Array(x,C);let g=0;for(let C=0;C<I;C++)for(let I=0;I<B;I++){const M=4*(I+C*B);L[g]=e[M],L[g+1]=e[M+1],L[g+2]=e[M+2],L[g+3]=(0,f.m)(y),g+=4}return L}return new Uint16Array(x,C,M)}static _GetFloatRGBAArrayBuffer(B,I,C,M,x,y){if(k.StoreLODInAlphaChannel){const f=new Float32Array(M),L=new Float32Array(x,C);let e=0;for(let C=0;C<I;C++)for(let I=0;I<B;I++){const M=4*(I+C*B);f[e]=L[M],f[e+1]=L[M+1],f[e+2]=L[M+2],f[e+3]=y,e+=4}return f}return new Float32Array(x,C,M)}static _GetFloatAsHalfFloatRGBAArrayBuffer(B,I,C,M,x,y){const L=new Uint16Array(M),e=new Float32Array(x,C);let g=0;for(let N=0;N<I;N++)for(let I=0;I<B;I++)L[g]=(0,f.m)(e[g]),L[g+1]=(0,f.m)(e[g+1]),L[g+2]=(0,f.m)(e[g+2]),k.StoreLODInAlphaChannel?L[g+3]=(0,f.m)(y):L[g+3]=(0,f.m)(e[g+3]),g+=4;return L}static _GetFloatAsUIntRGBAArrayBuffer(B,I,C,x,y,f){const L=new Uint8Array(x),e=new Float32Array(y,C);let g=0;for(let N=0;N<I;N++)for(let I=0;I<B;I++){const C=4*(I+N*B);L[g]=255*(0,M.Clamp)(e[C]),L[g+1]=255*(0,M.Clamp)(e[C+1]),L[g+2]=255*(0,M.Clamp)(e[C+2]),k.StoreLODInAlphaChannel?L[g+3]=f:L[g+3]=255*(0,M.Clamp)(e[C+3]),g+=4}return L}static _GetHalfFloatAsUIntRGBAArrayBuffer(B,I,C,x,y,L){const e=new Uint8Array(x),g=new Uint16Array(y,C);let N=0;for(let R=0;R<I;R++)for(let I=0;I<B;I++){const C=4*(I+R*B);e[N]=255*(0,M.Clamp)((0,f.f)(g[C])),e[N+1]=255*(0,M.Clamp)((0,f.f)(g[C+1])),e[N+2]=255*(0,M.Clamp)((0,f.f)(g[C+2])),k.StoreLODInAlphaChannel?e[N+3]=L:e[N+3]=255*(0,M.Clamp)((0,f.f)(g[C+3])),N+=4}return e}static _GetRGBAArrayBuffer(B,I,C,M,x,y,f,L,e){const g=new Uint8Array(M),N=new Uint8Array(x,C);let R=0;for(let H=0;H<I;H++)for(let I=0;I<B;I++){const C=4*(I+H*B);g[R]=N[C+y],g[R+1]=N[C+f],g[R+2]=N[C+L],g[R+3]=N[C+e],R+=4}return g}static _ExtractLongWordOrder(B){return 0===B||255===B||-16777216===B?0:1+k._ExtractLongWordOrder(B>>8)}static _GetRGBArrayBuffer(B,I,C,M,x,y,f,L){const e=new Uint8Array(M),g=new Uint8Array(x,C);let N=0;for(let R=0;R<I;R++)for(let I=0;I<B;I++){const C=3*(I+R*B);e[N]=g[C+y],e[N+1]=g[C+f],e[N+2]=g[C+L],N+=3}return e}static _GetLuminanceArrayBuffer(B,I,C,M,x){const y=new Uint8Array(M),f=new Uint8Array(x,C);let L=0;for(let e=0;e<I;e++)for(let I=0;I<B;I++){const C=I+e*B;y[L]=f[C],L++}return y}static UploadDDSLevels(B,I,C,M,f,e){let g=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,q=arguments.length>7?arguments[7]:void 0,S=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],o=null;M.sphericalPolynomial&&(o=[]);const U=!!B.getCaps().s3tc;I.generateMipMaps=f;const G=new Int32Array(C.buffer,C.byteOffset,31);let V,c,t,r,A,D,J,i=0,u=0,p=1;if(542327876!==G[0])return void x.b.Error("Invalid magic number in DDS header");if(!M.isFourCC&&!M.isRGB&&!M.isLuminance)return void x.b.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(M.isCompressed&&!U)return void x.b.Error("Compressed textures are not supported on this platform.");let n=G[22];r=G[1]+4;let O=!1;if(M.isFourCC)switch(V=G[21],V){case N:p=8,u=33777;break;case R:p=16,u=33778;break;case H:p=16,u=33779;break;case 113:O=!0,n=64;break;case 116:O=!0,n=128;break;case F:{r+=20;let B=!1;switch(M.dxgiFormat){case 10:O=!0,n=64,B=!0;break;case 2:O=!0,n=128,B=!0;break;case 88:M.isRGB=!0,M.isFourCC=!1,n=32,B=!0}if(B)break}default:return void x.b.Error(["Unsupported FourCC code:",(a=V,String.fromCharCode(255&a,a>>8&255,a>>16&255,a>>24&255))])}var a;const W=k._ExtractLongWordOrder(G[23]),d=k._ExtractLongWordOrder(G[24]),l=k._ExtractLongWordOrder(G[25]),E=k._ExtractLongWordOrder(G[26]);O&&(u=B._getRGBABufferInternalSizedFormat(M.textureType)),D=1,G[2]&L&&!1!==f&&(D=Math.max(1,G[7]));const Q=q||0,Z=B.getCaps();for(let x=Q;x<e;x++){for(c=G[4],t=G[3],J=0;J<D;++J){if(-1===g||g===J){const y=-1===g?J:0;if(!M.isCompressed&&M.isFourCC){I.format=5,i=c*t*4;let M=null;if(B._badOS||B._badDesktopOS||!Z.textureHalfFloat&&!Z.textureFloat)128===n?(M=k._GetFloatAsUIntRGBAArrayBuffer(c,t,C.byteOffset+r,i,C.buffer,y),o&&0==y&&o.push(k._GetFloatRGBAArrayBuffer(c,t,C.byteOffset+r,i,C.buffer,y))):64===n&&(M=k._GetHalfFloatAsUIntRGBAArrayBuffer(c,t,C.byteOffset+r,i,C.buffer,y),o&&0==y&&o.push(k._GetHalfFloatAsFloatRGBAArrayBuffer(c,t,C.byteOffset+r,i,C.buffer,y))),I.type=0;else{const B=Z.textureFloat&&(S&&Z.textureFloatLinearFiltering||!S),x=Z.textureHalfFloat&&(S&&Z.textureHalfFloatLinearFiltering||!S),f=(128===n||64===n&&!x)&&B?1:(64===n||128===n&&!B)&&x?2:0;let L,e=null;if(128===n)switch(f){case 1:L=k._GetFloatRGBAArrayBuffer,e=null;break;case 2:L=k._GetFloatAsHalfFloatRGBAArrayBuffer,e=k._GetFloatRGBAArrayBuffer;break;case 0:L=k._GetFloatAsUIntRGBAArrayBuffer,e=k._GetFloatRGBAArrayBuffer}else switch(f){case 1:L=k._GetHalfFloatAsFloatRGBAArrayBuffer,e=null;break;case 2:L=k._GetHalfFloatRGBAArrayBuffer,e=k._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:L=k._GetHalfFloatAsUIntRGBAArrayBuffer,e=k._GetHalfFloatAsFloatRGBAArrayBuffer}I.type=f,M=L(c,t,C.byteOffset+r,i,C.buffer,y),o&&0==y&&o.push(e?e(c,t,C.byteOffset+r,i,C.buffer,y):M)}M&&B._uploadDataToTextureDirectly(I,M,x,y)}else if(M.isRGB)I.type=0,24===n?(I.format=4,i=c*t*3,A=k._GetRGBArrayBuffer(c,t,C.byteOffset+r,i,C.buffer,W,d,l),B._uploadDataToTextureDirectly(I,A,x,y)):(I.format=5,i=c*t*4,A=k._GetRGBAArrayBuffer(c,t,C.byteOffset+r,i,C.buffer,W,d,l,E),B._uploadDataToTextureDirectly(I,A,x,y));else if(M.isLuminance){const M=B._getUnpackAlignement(),f=c;i=Math.floor((c+M-1)/M)*M*(t-1)+f,A=k._GetLuminanceArrayBuffer(c,t,C.byteOffset+r,i,C.buffer),I.format=1,I.type=0,B._uploadDataToTextureDirectly(I,A,x,y)}else i=Math.max(4,c)/4*Math.max(4,t)/4*p,A=new Uint8Array(C.buffer,C.byteOffset+r,i),I.type=0,B._uploadCompressedDataToTextureDirectly(I,u,c,t,A,x,y)}r+=n?c*t*(n/8):i,c*=.5,t*=.5,c=Math.max(1,c),t=Math.max(1,t)}if(void 0!==q)break}o&&o.length>0?M.sphericalPolynomial=y.e.ConvertCubeMapToSphericalPolynomial({size:G[4],right:o[0],left:o[1],up:o[2],down:o[3],front:o[4],back:o[5],format:5,type:1,gammaSpace:!1}):M.sphericalPolynomial=void 0}}k.StoreLODInAlphaChannel=!1}}]);