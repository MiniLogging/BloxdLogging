"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[28],{13645:(V,I,m)=>{m.r(I),m.d(I,{_IESTextureLoader:()=>k});var C=m(11074);function l(V){return V.split(" ").filter((V=>""!==V)).map((V=>parseFloat(V)))}function s(V,I,m){for(;m.length!==I;){const I=l(V.lines[V.index++]);m.push(...I)}}function F(V,I,m){let l=0,s=0,F=0,k=0,j=0,E=0;for(let C=0;C<V.numberOfHorizontalAngles-1;C++)if(m<V.horizontalAngles[C+1]||C===V.numberOfHorizontalAngles-2){s=C,F=V.horizontalAngles[C],k=V.horizontalAngles[C+1];break}for(let C=0;C<V.numberOfVerticalAngles-1;C++)if(I<V.verticalAngles[C+1]||C===V.numberOfVerticalAngles-2){l=C,j=V.verticalAngles[C],E=V.verticalAngles[C+1];break}const K=k-F,Y=E-j;if(0===Y)return 0;const X=0===K?0:(m-F)/K,O=(I-j)/Y,v=0===K?s:s+1,N=(0,C.Lerp)(V.candelaValues[s][l],V.candelaValues[v][l],X),t=(0,C.Lerp)(V.candelaValues[s][l+1],V.candelaValues[v][l+1],X);return(0,C.Lerp)(N,t,O)}class k{constructor(){this.supportCascades=!1}loadCubeData(){throw".ies not supported in Cube."}loadData(V,I,m){const C=function(V){const I={lines:new TextDecoder("utf-8").decode(V).split("\n"),index:0},m={version:I.lines[0],candelaValues:[],horizontalAngles:[],verticalAngles:[],numberOfHorizontalAngles:0,numberOfVerticalAngles:0};for(I.index=1;I.lines.length>0&&!I.lines[I.index].includes("TILT=");)I.index++;I.lines[I.index].includes("INCLUDE"),I.index++;const C=l(I.lines[I.index++]);m.numberOfLights=C[0],m.lumensPerLamp=C[1],m.candelaMultiplier=C[2],m.numberOfVerticalAngles=C[3],m.numberOfHorizontalAngles=C[4],m.photometricType=C[5],m.unitsType=C[6],m.width=C[7],m.length=C[8],m.height=C[9];const k=l(I.lines[I.index++]);m.ballastFactor=k[0],m.fileGenerationType=k[1],m.inputWatts=k[2];for(let l=0;l<m.numberOfHorizontalAngles;l++)m.candelaValues[l]=[];s(I,m.numberOfVerticalAngles,m.verticalAngles),s(I,m.numberOfHorizontalAngles,m.horizontalAngles);for(let l=0;l<m.numberOfHorizontalAngles;l++)s(I,m.numberOfVerticalAngles,m.candelaValues[l]);let j=-1;for(let l=0;l<m.numberOfHorizontalAngles;l++)for(let V=0;V<m.numberOfVerticalAngles;V++)m.candelaValues[l][V]*=m.candelaValues[l][V]*m.candelaMultiplier*m.ballastFactor*m.fileGenerationType,j=Math.max(j,m.candelaValues[l][V]);if(j>0)for(let l=0;l<m.numberOfHorizontalAngles;l++)for(let V=0;V<m.numberOfVerticalAngles;V++)m.candelaValues[l][V]/=j;const E=180,K=360,Y=new Float32Array(64800),X=m.horizontalAngles[0],O=m.horizontalAngles[m.numberOfHorizontalAngles-1];for(let l=0;l<64800;l++){let V=l%K;const I=Math.floor(l/K);O-X!==0&&(V<X||V>=O)&&(V%=2*O,V>O&&(V=2*O-V)),Y[I+V*E]=F(m,I,V)}return{width:180,height:1,data:Y}}(new Uint8Array(V.buffer,V.byteOffset,V.byteLength));m(C.width,C.height,!1,!1,(()=>{const V=I.getEngine();I.type=1,I.format=6,I._gammaSpace=!1,V._uploadDataToTextureDirectly(I,C.data)}))}}}}]);