"use strict";(self.k9ivgwsw3f=self.k9ivgwsw3f||[]).push([[28,29],{14394:(Y,b,C)=>{var R=C(12767),q=C(12669),A=C(12709),E=C(12799),B=C(12733),g=C(12779);B.b.prototype._partialLoadFile=function(Y,b,C,R){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(Y,(Y=>{C[b]=Y,C._internalCount++,6===C._internalCount&&R(C)}),void 0,void 0,!0,((Y,b)=>{q&&Y&&q(Y.status+" "+Y.statusText,b)}))},B.b.prototype._cascadeLoadFiles=function(Y,b,C){let R=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const q=[];q._internalCount=0;for(let A=0;A<6;A++)this._partialLoadFile(C[A],A,q,b,R)},B.b.prototype._cascadeLoadImgs=function(Y,b,C,R){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,A=arguments.length>5?arguments[5]:void 0;const E=[];E._internalCount=0;for(let B=0;B<6;B++)this._partialLoadImg(R[B],B,E,Y,b,C,q,A)},B.b.prototype._partialLoadImg=function(Y,b,C,R,q,B){let g=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,r=arguments.length>7?arguments[7]:void 0;const O=(0,E.e)();(0,A.x)(Y,(Y=>{C[b]=Y,C._internalCount++,R&&R.removePendingData(O),6===C._internalCount&&B&&B(q,C)}),((Y,b)=>{R&&R.removePendingData(O),g&&g(Y,b)}),R?R.offlineProvider:null,r),R&&R.addPendingData(O)},B.b.prototype.createCubeTextureBase=function(Y,b,C,A){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,B=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,r=arguments.length>6?arguments[6]:void 0,O=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,F=arguments.length>8&&void 0!==arguments[8]&&arguments[8],y=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,S=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,n=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,t=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,I=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,w=arguments.length>14&&void 0!==arguments[14]&&arguments[14],Q=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const N=n||new R.b(this,7);N.isCube=!0,N.url=Y,N.generateMipMaps=!A,N._lodGenerationScale=y,N._lodGenerationOffset=S,N._useSRGBBuffer=!!w&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!A),N!==n&&(N.label=Y.substring(0,60)),this._doNotHandleContextLost||(N._extension=O,N._files=C,N._buffer=Q);const p=Y;this._transformTextureUrl&&!n&&(Y=this._transformTextureUrl(Y));const mY=O??function(Y){const b=Y.split("?")[0],C=b.lastIndexOf(".");return C>-1?b.substring(C).toLowerCase():""}(Y),L=(0,g.c)(mY),u=(Y,b)=>{N.dispose(),B?B(Y,b):Y&&q.e.Warn(Y)},c=(R,B)=>{Y===p?R&&u(R.status+" "+R.statusText,B):(q.e.Warn(`Failed to load ${Y}, falling back to the ${p}`),this.createCubeTextureBase(p,b,C,!!A,E,u,r,O,F,y,S,N,t,I,w,Q))};if(L)L.then((R=>{const q=Y=>{t&&t(N,Y),R.loadCubeData(Y,N,F,E,((Y,b)=>{u(Y,b)}))};Q?q(Q):C&&6===C.length?R.supportCascades?this._cascadeLoadFiles(b,(Y=>q(Y.map((Y=>new Uint8Array(Y))))),C,u):u("Textures type does not support cascades."):this._loadFile(Y,(Y=>q(new Uint8Array(Y))),void 0,void 0,!0,c)}));else{if(!C||0===C.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(b,N,((Y,b)=>{I&&I(Y,b)}),C,u)}return this._internalTexturesCache.push(N),N}},15357:(Y,b,C)=>{C.r(b),C.d(b,{_DDSTextureLoader:()=>A});var R=C(13015),q=C(15361);class A{constructor(){this.supportCascades=!0}loadCubeData(Y,b,C,A){const E=b.getEngine();let B,g=!1,r=1e3;if(Array.isArray(Y))for(let R=0;R<Y.length;R++){const C=Y[R];B=q.DDSTools.GetDDSInfo(C),b.width=B.width,b.height=B.height,g=(B.isRGB||B.isLuminance||B.mipmapCount>1)&&b.generateMipMaps,E._unpackFlipY(B.isCompressed),q.DDSTools.UploadDDSLevels(E,b,C,B,g,6,-1,R),B.isFourCC||1!==B.mipmapCount?r=B.mipmapCount-1:E.generateMipMapsForCubemap(b)}else{const A=Y;B=q.DDSTools.GetDDSInfo(A),b.width=B.width,b.height=B.height,C&&(B.sphericalPolynomial=new R.g),g=(B.isRGB||B.isLuminance||B.mipmapCount>1)&&b.generateMipMaps,E._unpackFlipY(B.isCompressed),q.DDSTools.UploadDDSLevels(E,b,A,B,g,6),B.isFourCC||1!==B.mipmapCount?r=B.mipmapCount-1:E.generateMipMapsForCubemap(b,!1)}E._setCubeMapTextureParams(b,g,r),b.isReady=!0,b.onLoadedObservable.notifyObservers(b),b.onLoadedObservable.clear(),A&&A({isDDS:!0,width:b.width,info:B,data:Y,texture:b})}loadData(Y,b,C){const R=q.DDSTools.GetDDSInfo(Y),A=(R.isRGB||R.isLuminance||R.mipmapCount>1)&&b.generateMipMaps&&Math.max(R.width,R.height)>>R.mipmapCount-1===1;C(R.width,R.height,A,R.isFourCC,(()=>{q.DDSTools.UploadDDSLevels(b.getEngine(),b,Y,R,A,1)}))}}},13345:(Y,b,C)=>{C.d(b,{c:()=>r});var R=C(12831),q=C(12852),A=C(13015),E=C(12837),B=C(12880);class g{constructor(Y,b,C,R){this.name=Y,this.worldAxisForNormal=b,this.worldAxisForFileX=C,this.worldAxisForFileY=R}}class r{static ConvertCubeMapTextureToSphericalPolynomial(Y){var b;if(!Y.isCube)return null;null===(b=Y.uY())||void 0===b||b.getEngine().flushFramebuffer();const C=Y.getSize().width,R=Y.readPixels(0,void 0,void 0,!1),q=Y.readPixels(1,void 0,void 0,!1);let A,E;Y.isRenderTarget?(A=Y.readPixels(3,void 0,void 0,!1),E=Y.readPixels(2,void 0,void 0,!1)):(A=Y.readPixels(2,void 0,void 0,!1),E=Y.readPixels(3,void 0,void 0,!1));const B=Y.readPixels(4,void 0,void 0,!1),g=Y.readPixels(5,void 0,void 0,!1),r=Y.gammaSpace;let O=0;return 1!=Y.textureType&&2!=Y.textureType||(O=1),new Promise((Y=>{Promise.all([q,R,A,E,B,g]).then((b=>{let[R,q,A,E,B,g]=b;const F={size:C,right:q,left:R,up:A,down:E,front:B,back:g,format:5,type:O,gammaSpace:r};Y(this.ConvertCubeMapToSphericalPolynomial(F))}))}))}static _AreaElement(Y,b){return Math.atan2(Y*b,Math.sqrt(Y*Y+b*b+1))}static ConvertCubeMapToSphericalPolynomial(Y){const b=new A.c;let C=0;const R=2/Y.size,g=R,r=.5*R,O=r-1;for(let A=0;A<6;A++){const F=this._FileFaces[A],y=Y[F.name];let S=O;const n=5===Y.format?4:3;for(let A=0;A<Y.size;A++){let t=O;for(let g=0;g<Y.size;g++){const O=F.worldAxisForFileX.scale(t).add(F.worldAxisForFileY.scale(S)).add(F.worldAxisForNormal);O.normalize();const I=this._AreaElement(t-r,S-r)-this._AreaElement(t-r,S+r)-this._AreaElement(t+r,S-r)+this._AreaElement(t+r,S+r);let w=y[A*Y.size*n+g*n+0],Q=y[A*Y.size*n+g*n+1],N=y[A*Y.size*n+g*n+2];isNaN(w)&&(w=0),isNaN(Q)&&(Q=0),isNaN(N)&&(N=0),0===Y.type&&(w/=255,Q/=255,N/=255),Y.gammaSpace&&(w=Math.pow((0,q.Clamp)(w),E.n),Q=Math.pow((0,q.Clamp)(Q),E.n),N=Math.pow((0,q.Clamp)(N),E.n));const p=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const Y=Math.max(w,Q,N);if(Y>p){const b=p/Y;w*=b,Q*=b,N*=b}}else w=(0,q.Clamp)(w,0,p),Q=(0,q.Clamp)(Q,0,p),N=(0,q.Clamp)(N,0,p);const mY=new B.rC(w,Q,N);b.addLight(O,mY,I),C+=I,t+=R}S+=g}}const F=6*(4*Math.PI)/6/C;return b.scaleInPlace(F),b.convertIncidentRadianceToIrradiance(),b.convertIrradianceToLambertianRadiance(),A.g.FromHarmonics(b)}}r._FileFaces=[new g("right",new R.AC(1,0,0),new R.AC(0,0,-1),new R.AC(0,-1,0)),new g("left",new R.AC(-1,0,0),new R.AC(0,0,1),new R.AC(0,-1,0)),new g("up",new R.AC(0,1,0),new R.AC(1,0,0),new R.AC(0,0,1)),new g("down",new R.AC(0,-1,0),new R.AC(1,0,0),new R.AC(0,0,-1)),new g("front",new R.AC(0,0,1),new R.AC(1,0,0),new R.AC(0,-1,0)),new g("back",new R.AC(0,0,-1),new R.AC(-1,0,0),new R.AC(0,-1,0))],r.MAX_HDRI_VALUE=4096,r.PRESERVE_CLAMPED_COLORS=!1},15361:(Y,b,C)=>{C.d(b,{DDSTools:()=>n});var R=C(12852),q=C(12669),A=C(13345),E=C(13062);C(14394);const B=131072,g=131072;function r(Y){return Y.charCodeAt(0)+(Y.charCodeAt(1)<<8)+(Y.charCodeAt(2)<<16)+(Y.charCodeAt(3)<<24)}const O=r("DXT1"),F=r("DXT3"),y=r("DXT5"),S=r("DX10");class n{static GetDDSInfo(Y){const b=new Int32Array(Y.buffer,Y.byteOffset,31),C=new Int32Array(Y.buffer,Y.byteOffset,35);let R=1;b[2]&B&&(R=Math.max(1,b[7]));const q=b[21],A=q===S?C[32]:0;let E=0;switch(q){case 113:E=2;break;case 116:E=1;break;case S:if(10===A){E=2;break}if(2===A){E=1;break}}return{width:b[4],height:b[3],mipmapCount:R,isFourCC:4===(4&b[20]),isRGB:64===(64&b[20]),isLuminance:(b[20]&g)===g,isCube:512===(512&b[28]),isCompressed:q===O||q===F||q===y,dxgiFormat:A,textureType:E}}static _GetHalfFloatAsFloatRGBAArrayBuffer(Y,b,C,R,q,A){const B=new Float32Array(R),g=new Uint16Array(q,C);let r=0;for(let O=0;O<b;O++)for(let b=0;b<Y;b++){const C=4*(b+O*Y);B[r]=(0,E.h)(g[C]),B[r+1]=(0,E.h)(g[C+1]),B[r+2]=(0,E.h)(g[C+2]),n.StoreLODInAlphaChannel?B[r+3]=A:B[r+3]=(0,E.h)(g[C+3]),r+=4}return B}static _GetHalfFloatRGBAArrayBuffer(Y,b,C,R,q,A){if(n.StoreLODInAlphaChannel){const B=new Uint16Array(R),g=new Uint16Array(q,C);let r=0;for(let C=0;C<b;C++)for(let b=0;b<Y;b++){const R=4*(b+C*Y);B[r]=g[R],B[r+1]=g[R+1],B[r+2]=g[R+2],B[r+3]=(0,E.o)(A),r+=4}return B}return new Uint16Array(q,C,R)}static _GetFloatRGBAArrayBuffer(Y,b,C,R,q,A){if(n.StoreLODInAlphaChannel){const E=new Float32Array(R),B=new Float32Array(q,C);let g=0;for(let C=0;C<b;C++)for(let b=0;b<Y;b++){const R=4*(b+C*Y);E[g]=B[R],E[g+1]=B[R+1],E[g+2]=B[R+2],E[g+3]=A,g+=4}return E}return new Float32Array(q,C,R)}static _GetFloatAsHalfFloatRGBAArrayBuffer(Y,b,C,R,q,A){const B=new Uint16Array(R),g=new Float32Array(q,C);let r=0;for(let O=0;O<b;O++)for(let b=0;b<Y;b++)B[r]=(0,E.o)(g[r]),B[r+1]=(0,E.o)(g[r+1]),B[r+2]=(0,E.o)(g[r+2]),n.StoreLODInAlphaChannel?B[r+3]=(0,E.o)(A):B[r+3]=(0,E.o)(g[r+3]),r+=4;return B}static _GetFloatAsUIntRGBAArrayBuffer(Y,b,C,q,A,E){const B=new Uint8Array(q),g=new Float32Array(A,C);let r=0;for(let O=0;O<b;O++)for(let b=0;b<Y;b++){const C=4*(b+O*Y);B[r]=255*(0,R.Clamp)(g[C]),B[r+1]=255*(0,R.Clamp)(g[C+1]),B[r+2]=255*(0,R.Clamp)(g[C+2]),n.StoreLODInAlphaChannel?B[r+3]=E:B[r+3]=255*(0,R.Clamp)(g[C+3]),r+=4}return B}static _GetHalfFloatAsUIntRGBAArrayBuffer(Y,b,C,q,A,B){const g=new Uint8Array(q),r=new Uint16Array(A,C);let O=0;for(let F=0;F<b;F++)for(let b=0;b<Y;b++){const C=4*(b+F*Y);g[O]=255*(0,R.Clamp)((0,E.h)(r[C])),g[O+1]=255*(0,R.Clamp)((0,E.h)(r[C+1])),g[O+2]=255*(0,R.Clamp)((0,E.h)(r[C+2])),n.StoreLODInAlphaChannel?g[O+3]=B:g[O+3]=255*(0,R.Clamp)((0,E.h)(r[C+3])),O+=4}return g}static _GetRGBAArrayBuffer(Y,b,C,R,q,A,E,B,g){const r=new Uint8Array(R),O=new Uint8Array(q,C);let F=0;for(let y=0;y<b;y++)for(let b=0;b<Y;b++){const C=4*(b+y*Y);r[F]=O[C+A],r[F+1]=O[C+E],r[F+2]=O[C+B],r[F+3]=O[C+g],F+=4}return r}static _ExtractLongWordOrder(Y){return 0===Y||255===Y||-16777216===Y?0:1+n._ExtractLongWordOrder(Y>>8)}static _GetRGBArrayBuffer(Y,b,C,R,q,A,E,B){const g=new Uint8Array(R),r=new Uint8Array(q,C);let O=0;for(let F=0;F<b;F++)for(let b=0;b<Y;b++){const C=3*(b+F*Y);g[O]=r[C+A],g[O+1]=r[C+E],g[O+2]=r[C+B],O+=3}return g}static _GetLuminanceArrayBuffer(Y,b,C,R,q){const A=new Uint8Array(R),E=new Uint8Array(q,C);let B=0;for(let g=0;g<b;g++)for(let b=0;b<Y;b++){const C=b+g*Y;A[B]=E[C],B++}return A}static UploadDDSLevels(Y,b,C,R,E,g){let r=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,t=arguments.length>7?arguments[7]:void 0,I=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],w=null;R.sphericalPolynomial&&(w=[]);const Q=!!Y.getCaps().s3tc;b.generateMipMaps=E;const N=new Int32Array(C.buffer,C.byteOffset,31);let p,mY,L,u,c,l,X,j=0,T=0,P=1;if(542327876!==N[0])return void q.e.Error("Invalid magic number in DDS header");if(!R.isFourCC&&!R.isRGB&&!R.isLuminance)return void q.e.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(R.isCompressed&&!Q)return void q.e.Error("Compressed textures are not supported on this platform.");let v=N[22];u=N[1]+4;let z=!1;if(R.isFourCC)switch(p=N[21],p){case O:P=8,T=33777;break;case F:P=16,T=33778;break;case y:P=16,T=33779;break;case 113:z=!0,v=64;break;case 116:z=!0,v=128;break;case S:{u+=20;let Y=!1;switch(R.dxgiFormat){case 10:z=!0,v=64,Y=!0;break;case 2:z=!0,v=128,Y=!0;break;case 88:R.isRGB=!0,R.isFourCC=!1,v=32,Y=!0}if(Y)break}default:return void q.e.Error(["Unsupported FourCC code:",(J=p,String.fromCharCode(255&J,J>>8&255,J>>16&255,J>>24&255))])}var J;const U=n._ExtractLongWordOrder(N[23]),o=n._ExtractLongWordOrder(N[24]),G=n._ExtractLongWordOrder(N[25]),h=n._ExtractLongWordOrder(N[26]);z&&(T=Y._getRGBABufferInternalSizedFormat(R.textureType)),l=1,N[2]&B&&!1!==E&&(l=Math.max(1,N[7]));const e=t||0,H=Y.getCaps();for(let q=e;q<g;q++){for(mY=N[4],L=N[3],X=0;X<l;++X){if(-1===r||r===X){const A=-1===r?X:0;if(!R.isCompressed&&R.isFourCC){b.format=5,j=mY*L*4;let R=null;if(Y._badOS||Y._badDesktopOS||!H.textureHalfFloat&&!H.textureFloat)128===v?(R=n._GetFloatAsUIntRGBAArrayBuffer(mY,L,C.byteOffset+u,j,C.buffer,A),w&&0==A&&w.push(n._GetFloatRGBAArrayBuffer(mY,L,C.byteOffset+u,j,C.buffer,A))):64===v&&(R=n._GetHalfFloatAsUIntRGBAArrayBuffer(mY,L,C.byteOffset+u,j,C.buffer,A),w&&0==A&&w.push(n._GetHalfFloatAsFloatRGBAArrayBuffer(mY,L,C.byteOffset+u,j,C.buffer,A))),b.type=0;else{const Y=H.textureFloat&&(I&&H.textureFloatLinearFiltering||!I),q=H.textureHalfFloat&&(I&&H.textureHalfFloatLinearFiltering||!I),E=(128===v||64===v&&!q)&&Y?1:(64===v||128===v&&!Y)&&q?2:0;let B,g=null;if(128===v)switch(E){case 1:B=n._GetFloatRGBAArrayBuffer,g=null;break;case 2:B=n._GetFloatAsHalfFloatRGBAArrayBuffer,g=n._GetFloatRGBAArrayBuffer;break;case 0:B=n._GetFloatAsUIntRGBAArrayBuffer,g=n._GetFloatRGBAArrayBuffer}else switch(E){case 1:B=n._GetHalfFloatAsFloatRGBAArrayBuffer,g=null;break;case 2:B=n._GetHalfFloatRGBAArrayBuffer,g=n._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:B=n._GetHalfFloatAsUIntRGBAArrayBuffer,g=n._GetHalfFloatAsFloatRGBAArrayBuffer}b.type=E,R=B(mY,L,C.byteOffset+u,j,C.buffer,A),w&&0==A&&w.push(g?g(mY,L,C.byteOffset+u,j,C.buffer,A):R)}R&&Y._uploadDataToTextureDirectly(b,R,q,A)}else if(R.isRGB)b.type=0,24===v?(b.format=4,j=mY*L*3,c=n._GetRGBArrayBuffer(mY,L,C.byteOffset+u,j,C.buffer,U,o,G),Y._uploadDataToTextureDirectly(b,c,q,A)):(b.format=5,j=mY*L*4,c=n._GetRGBAArrayBuffer(mY,L,C.byteOffset+u,j,C.buffer,U,o,G,h),Y._uploadDataToTextureDirectly(b,c,q,A));else if(R.isLuminance){const R=Y._getUnpackAlignement(),E=mY;j=Math.floor((mY+R-1)/R)*R*(L-1)+E,c=n._GetLuminanceArrayBuffer(mY,L,C.byteOffset+u,j,C.buffer),b.format=1,b.type=0,Y._uploadDataToTextureDirectly(b,c,q,A)}else j=Math.max(4,mY)/4*Math.max(4,L)/4*P,c=new Uint8Array(C.buffer,C.byteOffset+u,j),b.type=0,Y._uploadCompressedDataToTextureDirectly(b,T,mY,L,c,q,A)}u+=v?mY*L*(v/8):j,mY*=.5,L*=.5,mY=Math.max(1,mY),L=Math.max(1,L)}if(void 0!==t)break}w&&w.length>0?R.sphericalPolynomial=A.c.ConvertCubeMapToSphericalPolynomial({size:N[4],right:w[0],left:w[1],up:w[2],down:w[3],front:w[4],back:w[5],format:5,type:1,gammaSpace:!1}):R.sphericalPolynomial=void 0}}n.StoreLODInAlphaChannel=!1}}]);