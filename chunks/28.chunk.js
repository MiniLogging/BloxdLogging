"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[28,29],{12914:(Z,x,F)=>{var u=F(11117),G=F(11012),f=F(11041),Y=F(11144),j=F(11081),d=F(11129);j.d.prototype._partialLoadFile=function(Z,x,F,u){let G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(Z,(Z=>{F[x]=Z,F._internalCount++,6===F._internalCount&&u(F)}),void 0,void 0,!0,((Z,x)=>{G&&Z&&G(Z.status+" "+Z.statusText,x)}))},j.d.prototype._cascadeLoadFiles=function(Z,x,F){let u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const G=[];G._internalCount=0;for(let f=0;f<6;f++)this._partialLoadFile(F[f],f,G,x,u)},j.d.prototype._cascadeLoadImgs=function(Z,x,F,u){let G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,f=arguments.length>5?arguments[5]:void 0;const Y=[];Y._internalCount=0;for(let j=0;j<6;j++)this._partialLoadImg(u[j],j,Y,Z,x,F,G,f)},j.d.prototype._partialLoadImg=function(Z,x,F,u,G,j){let d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,t=arguments.length>7?arguments[7]:void 0;const o=(0,Y.c)();(0,f.q)(Z,(Z=>{F[x]=Z,F._internalCount++,u&&u.removePendingData(o),6===F._internalCount&&j&&j(G,F)}),((Z,x)=>{u&&u.removePendingData(o),d&&d(Z,x)}),u?u.offlineProvider:null,t),u&&u.addPendingData(o)},j.d.prototype.createCubeTextureBase=function(Z,x,F,f){let Y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,j=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,t=arguments.length>6?arguments[6]:void 0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,c=arguments.length>8&&void 0!==arguments[8]&&arguments[8],s=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,J=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,p=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,U=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,k=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,M=arguments.length>14&&void 0!==arguments[14]&&arguments[14],m=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const C=p||new u.e(this,7);C.isCube=!0,C.url=Z,C.generateMipMaps=!f,C._lodGenerationScale=s,C._lodGenerationOffset=J,C._useSRGBBuffer=!!M&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!f),C!==p&&(C.label=Z.substring(0,60)),this._doNotHandleContextLost||(C._extension=o,C._files=F,C._buffer=m);const L=Z;this._transformTextureUrl&&!p&&(Z=this._transformTextureUrl(Z));const H=o??function(Z){const x=Z.split("?")[0],F=x.lastIndexOf(".");return F>-1?x.substring(F).toLowerCase():""}(Z),S=(0,d.b)(H),K=(Z,x)=>{C.dispose(),j?j(Z,x):Z&&G.d.Warn(Z)},y=(u,j)=>{Z===L?u&&K(u.status+" "+u.statusText,j):(G.d.Warn(`Failed to load ${Z}, falling back to the ${L}`),this.createCubeTextureBase(L,x,F,!!f,Y,K,t,o,c,s,J,C,U,k,M,m))};if(S)S.then((u=>{const G=Z=>{U&&U(C,Z),u.loadCubeData(Z,C,c,Y,((Z,x)=>{K(Z,x)}))};m?G(m):F&&6===F.length?u.supportCascades?this._cascadeLoadFiles(x,(Z=>G(Z.map((Z=>new Uint8Array(Z))))),F,K):K("Textures type does not support cascades."):this._loadFile(Z,(Z=>G(new Uint8Array(Z))),void 0,void 0,!0,y)}));else{if(!F||0===F.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(x,C,((Z,x)=>{k&&k(Z,x)}),F,K)}return this._internalTexturesCache.push(C),C}},13687:(Z,x,F)=>{F.r(x),F.d(x,{_DDSTextureLoader:()=>f});var u=F(11399),G=F(13694);class f{constructor(){this.supportCascades=!0}loadCubeData(Z,x,F,f){const Y=x.getEngine();let j,d=!1,t=1e3;if(Array.isArray(Z))for(let u=0;u<Z.length;u++){const F=Z[u];j=G.DDSTools.GetDDSInfo(F),x.width=j.width,x.height=j.height,d=(j.isRGB||j.isLuminance||j.mipmapCount>1)&&x.generateMipMaps,Y._unpackFlipY(j.isCompressed),G.DDSTools.UploadDDSLevels(Y,x,F,j,d,6,-1,u),j.isFourCC||1!==j.mipmapCount?t=j.mipmapCount-1:Y.generateMipMapsForCubemap(x)}else{const f=Z;j=G.DDSTools.GetDDSInfo(f),x.width=j.width,x.height=j.height,F&&(j.sphericalPolynomial=new u.f),d=(j.isRGB||j.isLuminance||j.mipmapCount>1)&&x.generateMipMaps,Y._unpackFlipY(j.isCompressed),G.DDSTools.UploadDDSLevels(Y,x,f,j,d,6),j.isFourCC||1!==j.mipmapCount?t=j.mipmapCount-1:Y.generateMipMapsForCubemap(x,!1)}Y._setCubeMapTextureParams(x,d,t),x.isReady=!0,x.onLoadedObservable.notifyObservers(x),x.onLoadedObservable.clear(),f&&f({isDDS:!0,width:x.width,info:j,data:Z,texture:x})}loadData(Z,x,F){const u=G.DDSTools.GetDDSInfo(Z),f=(u.isRGB||u.isLuminance||u.mipmapCount>1)&&x.generateMipMaps&&Math.max(u.width,u.height)>>u.mipmapCount-1===1;F(u.width,u.height,f,u.isFourCC,(()=>{G.DDSTools.UploadDDSLevels(x.getEngine(),x,Z,u,f,1)}))}}},11736:(Z,x,F)=>{F.d(x,{e:()=>t});var u=F(11179),G=F(11194),f=F(11399),Y=F(11188),j=F(11230);class d{constructor(Z,x,F,u){this.name=Z,this.worldAxisForNormal=x,this.worldAxisForFileX=F,this.worldAxisForFileY=u}}class t{static ConvertCubeMapTextureToSphericalPolynomial(Z){var x;if(!Z.isCube)return null;null===(x=Z.KZ())||void 0===x||x.getEngine().flushFramebuffer();const F=Z.getSize().width,u=Z.readPixels(0,void 0,void 0,!1),G=Z.readPixels(1,void 0,void 0,!1);let f,Y;Z.isRenderTarget?(f=Z.readPixels(3,void 0,void 0,!1),Y=Z.readPixels(2,void 0,void 0,!1)):(f=Z.readPixels(2,void 0,void 0,!1),Y=Z.readPixels(3,void 0,void 0,!1));const j=Z.readPixels(4,void 0,void 0,!1),d=Z.readPixels(5,void 0,void 0,!1),t=Z.gammaSpace;let o=0;return 1!=Z.textureType&&2!=Z.textureType||(o=1),new Promise((Z=>{Promise.all([G,u,f,Y,j,d]).then((x=>{let[u,G,f,Y,j,d]=x;const c={size:F,right:G,left:u,up:f,down:Y,front:j,back:d,format:5,type:o,gammaSpace:t};Z(this.ConvertCubeMapToSphericalPolynomial(c))}))}))}static _AreaElement(Z,x){return Math.atan2(Z*x,Math.sqrt(Z*Z+x*x+1))}static ConvertCubeMapToSphericalPolynomial(Z){const x=new f.e;let F=0;const u=2/Z.size,d=u,t=.5*u,o=t-1;for(let f=0;f<6;f++){const c=this._FileFaces[f],s=Z[c.name];let J=o;const p=5===Z.format?4:3;for(let f=0;f<Z.size;f++){let U=o;for(let d=0;d<Z.size;d++){const o=c.worldAxisForFileX.scale(U).add(c.worldAxisForFileY.scale(J)).add(c.worldAxisForNormal);o.normalize();const k=this._AreaElement(U-t,J-t)-this._AreaElement(U-t,J+t)-this._AreaElement(U+t,J-t)+this._AreaElement(U+t,J+t);let M=s[f*Z.size*p+d*p+0],m=s[f*Z.size*p+d*p+1],C=s[f*Z.size*p+d*p+2];isNaN(M)&&(M=0),isNaN(m)&&(m=0),isNaN(C)&&(C=0),0===Z.type&&(M/=255,m/=255,C/=255),Z.gammaSpace&&(M=Math.pow((0,G.Clamp)(M),Y.l),m=Math.pow((0,G.Clamp)(m),Y.l),C=Math.pow((0,G.Clamp)(C),Y.l));const L=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const Z=Math.max(M,m,C);if(Z>L){const x=L/Z;M*=x,m*=x,C*=x}}else M=(0,G.Clamp)(M,0,L),m=(0,G.Clamp)(m,0,L),C=(0,G.Clamp)(C,0,L);const H=new j.Lx(M,m,C);x.addLight(o,H,k),F+=k,U+=u}J+=d}}const c=6*(4*Math.PI)/6/F;return x.scaleInPlace(c),x.convertIncidentRadianceToIrradiance(),x.convertIrradianceToLambertianRadiance(),f.f.FromHarmonics(x)}}t._FileFaces=[new d("right",new u.kx(1,0,0),new u.kx(0,0,-1),new u.kx(0,-1,0)),new d("left",new u.kx(-1,0,0),new u.kx(0,0,1),new u.kx(0,-1,0)),new d("up",new u.kx(0,1,0),new u.kx(1,0,0),new u.kx(0,0,1)),new d("down",new u.kx(0,-1,0),new u.kx(1,0,0),new u.kx(0,0,-1)),new d("front",new u.kx(0,0,1),new u.kx(1,0,0),new u.kx(0,-1,0)),new d("back",new u.kx(0,0,-1),new u.kx(-1,0,0),new u.kx(0,-1,0))],t.MAX_HDRI_VALUE=4096,t.PRESERVE_CLAMPED_COLORS=!1},13694:(Z,x,F)=>{F.d(x,{DDSTools:()=>p});var u=F(11194),G=F(11012),f=F(11736),Y=F(11442);F(12914);const j=131072,d=131072;function t(Z){return Z.charCodeAt(0)+(Z.charCodeAt(1)<<8)+(Z.charCodeAt(2)<<16)+(Z.charCodeAt(3)<<24)}const o=t("DXT1"),c=t("DXT3"),s=t("DXT5"),J=t("DX10");class p{static GetDDSInfo(Z){const x=new Int32Array(Z.buffer,Z.byteOffset,31),F=new Int32Array(Z.buffer,Z.byteOffset,35);let u=1;x[2]&j&&(u=Math.max(1,x[7]));const G=x[21],f=G===J?F[32]:0;let Y=0;switch(G){case 113:Y=2;break;case 116:Y=1;break;case J:if(10===f){Y=2;break}if(2===f){Y=1;break}}return{width:x[4],height:x[3],mipmapCount:u,isFourCC:4===(4&x[20]),isRGB:64===(64&x[20]),isLuminance:(x[20]&d)===d,isCube:512===(512&x[28]),isCompressed:G===o||G===c||G===s,dxgiFormat:f,textureType:Y}}static _GetHalfFloatAsFloatRGBAArrayBuffer(Z,x,F,u,G,f){const j=new Float32Array(u),d=new Uint16Array(G,F);let t=0;for(let o=0;o<x;o++)for(let x=0;x<Z;x++){const F=4*(x+o*Z);j[t]=(0,Y.d)(d[F]),j[t+1]=(0,Y.d)(d[F+1]),j[t+2]=(0,Y.d)(d[F+2]),p.StoreLODInAlphaChannel?j[t+3]=f:j[t+3]=(0,Y.d)(d[F+3]),t+=4}return j}static _GetHalfFloatRGBAArrayBuffer(Z,x,F,u,G,f){if(p.StoreLODInAlphaChannel){const j=new Uint16Array(u),d=new Uint16Array(G,F);let t=0;for(let F=0;F<x;F++)for(let x=0;x<Z;x++){const u=4*(x+F*Z);j[t]=d[u],j[t+1]=d[u+1],j[t+2]=d[u+2],j[t+3]=(0,Y.l)(f),t+=4}return j}return new Uint16Array(G,F,u)}static _GetFloatRGBAArrayBuffer(Z,x,F,u,G,f){if(p.StoreLODInAlphaChannel){const Y=new Float32Array(u),j=new Float32Array(G,F);let d=0;for(let F=0;F<x;F++)for(let x=0;x<Z;x++){const u=4*(x+F*Z);Y[d]=j[u],Y[d+1]=j[u+1],Y[d+2]=j[u+2],Y[d+3]=f,d+=4}return Y}return new Float32Array(G,F,u)}static _GetFloatAsHalfFloatRGBAArrayBuffer(Z,x,F,u,G,f){const j=new Uint16Array(u),d=new Float32Array(G,F);let t=0;for(let o=0;o<x;o++)for(let x=0;x<Z;x++)j[t]=(0,Y.l)(d[t]),j[t+1]=(0,Y.l)(d[t+1]),j[t+2]=(0,Y.l)(d[t+2]),p.StoreLODInAlphaChannel?j[t+3]=(0,Y.l)(f):j[t+3]=(0,Y.l)(d[t+3]),t+=4;return j}static _GetFloatAsUIntRGBAArrayBuffer(Z,x,F,G,f,Y){const j=new Uint8Array(G),d=new Float32Array(f,F);let t=0;for(let o=0;o<x;o++)for(let x=0;x<Z;x++){const F=4*(x+o*Z);j[t]=255*(0,u.Clamp)(d[F]),j[t+1]=255*(0,u.Clamp)(d[F+1]),j[t+2]=255*(0,u.Clamp)(d[F+2]),p.StoreLODInAlphaChannel?j[t+3]=Y:j[t+3]=255*(0,u.Clamp)(d[F+3]),t+=4}return j}static _GetHalfFloatAsUIntRGBAArrayBuffer(Z,x,F,G,f,j){const d=new Uint8Array(G),t=new Uint16Array(f,F);let o=0;for(let c=0;c<x;c++)for(let x=0;x<Z;x++){const F=4*(x+c*Z);d[o]=255*(0,u.Clamp)((0,Y.d)(t[F])),d[o+1]=255*(0,u.Clamp)((0,Y.d)(t[F+1])),d[o+2]=255*(0,u.Clamp)((0,Y.d)(t[F+2])),p.StoreLODInAlphaChannel?d[o+3]=j:d[o+3]=255*(0,u.Clamp)((0,Y.d)(t[F+3])),o+=4}return d}static _GetRGBAArrayBuffer(Z,x,F,u,G,f,Y,j,d){const t=new Uint8Array(u),o=new Uint8Array(G,F);let c=0;for(let s=0;s<x;s++)for(let x=0;x<Z;x++){const F=4*(x+s*Z);t[c]=o[F+f],t[c+1]=o[F+Y],t[c+2]=o[F+j],t[c+3]=o[F+d],c+=4}return t}static _ExtractLongWordOrder(Z){return 0===Z||255===Z||-16777216===Z?0:1+p._ExtractLongWordOrder(Z>>8)}static _GetRGBArrayBuffer(Z,x,F,u,G,f,Y,j){const d=new Uint8Array(u),t=new Uint8Array(G,F);let o=0;for(let c=0;c<x;c++)for(let x=0;x<Z;x++){const F=3*(x+c*Z);d[o]=t[F+f],d[o+1]=t[F+Y],d[o+2]=t[F+j],o+=3}return d}static _GetLuminanceArrayBuffer(Z,x,F,u,G){const f=new Uint8Array(u),Y=new Uint8Array(G,F);let j=0;for(let d=0;d<x;d++)for(let x=0;x<Z;x++){const F=x+d*Z;f[j]=Y[F],j++}return f}static UploadDDSLevels(Z,x,F,u,Y,d){let t=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,U=arguments.length>7?arguments[7]:void 0,k=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],M=null;u.sphericalPolynomial&&(M=[]);const m=!!Z.getCaps().s3tc;x.generateMipMaps=Y;const C=new Int32Array(F.buffer,F.byteOffset,31);let L,H,S,K,y,q,R,B=0,v=0,l=1;if(542327876!==C[0])return void G.d.Error("Invalid magic number in DDS header");if(!u.isFourCC&&!u.isRGB&&!u.isLuminance)return void G.d.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(u.isCompressed&&!m)return void G.d.Error("Compressed textures are not supported on this platform.");let i=C[22];K=C[1]+4;let e=!1;if(u.isFourCC)switch(L=C[21],L){case o:l=8,v=33777;break;case c:l=16,v=33778;break;case s:l=16,v=33779;break;case 113:e=!0,i=64;break;case 116:e=!0,i=128;break;case J:{K+=20;let Z=!1;switch(u.dxgiFormat){case 10:e=!0,i=64,Z=!0;break;case 2:e=!0,i=128,Z=!0;break;case 88:u.isRGB=!0,u.isFourCC=!1,i=32,Z=!0}if(Z)break}default:return void G.d.Error(["Unsupported FourCC code:",(b=L,String.fromCharCode(255&b,b>>8&255,b>>16&255,b>>24&255))])}var b;const E=p._ExtractLongWordOrder(C[23]),w=p._ExtractLongWordOrder(C[24]),T=p._ExtractLongWordOrder(C[25]),N=p._ExtractLongWordOrder(C[26]);e&&(v=Z._getRGBABufferInternalSizedFormat(u.textureType)),q=1,C[2]&j&&!1!==Y&&(q=Math.max(1,C[7]));const W=U||0,A=Z.getCaps();for(let G=W;G<d;G++){for(H=C[4],S=C[3],R=0;R<q;++R){if(-1===t||t===R){const f=-1===t?R:0;if(!u.isCompressed&&u.isFourCC){x.format=5,B=H*S*4;let u=null;if(Z._badOS||Z._badDesktopOS||!A.textureHalfFloat&&!A.textureFloat)128===i?(u=p._GetFloatAsUIntRGBAArrayBuffer(H,S,F.byteOffset+K,B,F.buffer,f),M&&0==f&&M.push(p._GetFloatRGBAArrayBuffer(H,S,F.byteOffset+K,B,F.buffer,f))):64===i&&(u=p._GetHalfFloatAsUIntRGBAArrayBuffer(H,S,F.byteOffset+K,B,F.buffer,f),M&&0==f&&M.push(p._GetHalfFloatAsFloatRGBAArrayBuffer(H,S,F.byteOffset+K,B,F.buffer,f))),x.type=0;else{const Z=A.textureFloat&&(k&&A.textureFloatLinearFiltering||!k),G=A.textureHalfFloat&&(k&&A.textureHalfFloatLinearFiltering||!k),Y=(128===i||64===i&&!G)&&Z?1:(64===i||128===i&&!Z)&&G?2:0;let j,d=null;if(128===i)switch(Y){case 1:j=p._GetFloatRGBAArrayBuffer,d=null;break;case 2:j=p._GetFloatAsHalfFloatRGBAArrayBuffer,d=p._GetFloatRGBAArrayBuffer;break;case 0:j=p._GetFloatAsUIntRGBAArrayBuffer,d=p._GetFloatRGBAArrayBuffer}else switch(Y){case 1:j=p._GetHalfFloatAsFloatRGBAArrayBuffer,d=null;break;case 2:j=p._GetHalfFloatRGBAArrayBuffer,d=p._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:j=p._GetHalfFloatAsUIntRGBAArrayBuffer,d=p._GetHalfFloatAsFloatRGBAArrayBuffer}x.type=Y,u=j(H,S,F.byteOffset+K,B,F.buffer,f),M&&0==f&&M.push(d?d(H,S,F.byteOffset+K,B,F.buffer,f):u)}u&&Z._uploadDataToTextureDirectly(x,u,G,f)}else if(u.isRGB)x.type=0,24===i?(x.format=4,B=H*S*3,y=p._GetRGBArrayBuffer(H,S,F.byteOffset+K,B,F.buffer,E,w,T),Z._uploadDataToTextureDirectly(x,y,G,f)):(x.format=5,B=H*S*4,y=p._GetRGBAArrayBuffer(H,S,F.byteOffset+K,B,F.buffer,E,w,T,N),Z._uploadDataToTextureDirectly(x,y,G,f));else if(u.isLuminance){const u=Z._getUnpackAlignement(),Y=H;B=Math.floor((H+u-1)/u)*u*(S-1)+Y,y=p._GetLuminanceArrayBuffer(H,S,F.byteOffset+K,B,F.buffer),x.format=1,x.type=0,Z._uploadDataToTextureDirectly(x,y,G,f)}else B=Math.max(4,H)/4*Math.max(4,S)/4*l,y=new Uint8Array(F.buffer,F.byteOffset+K,B),x.type=0,Z._uploadCompressedDataToTextureDirectly(x,v,H,S,y,G,f)}K+=i?H*S*(i/8):B,H*=.5,S*=.5,H=Math.max(1,H),S=Math.max(1,S)}if(void 0!==U)break}M&&M.length>0?u.sphericalPolynomial=f.e.ConvertCubeMapToSphericalPolynomial({size:C[4],right:M[0],left:M[1],up:M[2],down:M[3],front:M[4],back:M[5],format:5,type:1,gammaSpace:!1}):u.sphericalPolynomial=void 0}}p.StoreLODInAlphaChannel=!1}}]);