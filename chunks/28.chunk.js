"use strict";(self.ra6kpa9z1sg=self.ra6kpa9z1sg||[]).push([[28,29],{14284:(p,b,M)=>{var h=M(12711),Q=M(12622),mp=M(12655),y=M(12739),P=M(12682),w=M(12721);P.b.prototype._partialLoadFile=function(p,b,M,h){let Q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(p,(p=>{M[b]=p,M._internalCount++,6===M._internalCount&&h(M)}),void 0,void 0,!0,((p,b)=>{Q&&p&&Q(p.status+" "+p.statusText,b)}))},P.b.prototype._cascadeLoadFiles=function(p,b,M){let h=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const Q=[];Q._internalCount=0;for(let mp=0;mp<6;mp++)this._partialLoadFile(M[mp],mp,Q,b,h)},P.b.prototype._cascadeLoadImgs=function(p,b,M,h){let Q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,mp=arguments.length>5?arguments[5]:void 0;const y=[];y._internalCount=0;for(let P=0;P<6;P++)this._partialLoadImg(h[P],P,y,p,b,M,Q,mp)},P.b.prototype._partialLoadImg=function(p,b,M,h,Q,P){let w=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,t=arguments.length>7?arguments[7]:void 0;const z=(0,y.c)();(0,mp.o)(p,(p=>{M[b]=p,M._internalCount++,h&&h.removePendingData(z),6===M._internalCount&&P&&P(Q,M)}),((p,b)=>{h&&h.removePendingData(z),w&&w(p,b)}),h?h.offlineProvider:null,t),h&&h.addPendingData(z)},P.b.prototype.createCubeTextureBase=function(p,b,M,mp){let y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,P=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,t=arguments.length>6?arguments[6]:void 0,z=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,x=arguments.length>8&&void 0!==arguments[8]&&arguments[8],S=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,X=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,c=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,J=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,g=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,f=arguments.length>14&&void 0!==arguments[14]&&arguments[14],Y=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const a=c||new h.e(this,7);a.isCube=!0,a.url=p,a.generateMipMaps=!mp,a._lodGenerationScale=S,a._lodGenerationOffset=X,a._useSRGBBuffer=!!f&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!mp),a!==c&&(a.label=p.substring(0,60)),this._doNotHandleContextLost||(a._extension=z,a._files=M,a._buffer=Y);const o=p;this._transformTextureUrl&&!c&&(p=this._transformTextureUrl(p));const l=z??function(p){const b=p.split("?")[0],M=b.lastIndexOf(".");return M>-1?b.substring(M).toLowerCase():""}(p),L=(0,w.c)(l),u=(p,b)=>{a.dispose(),P?P(p,b):p&&Q.d.Warn(p)},e=(h,P)=>{p===o?h&&u(h.status+" "+h.statusText,P):(Q.d.Warn(`Failed to load ${p}, falling back to the ${o}`),this.createCubeTextureBase(o,b,M,!!mp,y,u,t,z,x,S,X,a,J,g,f,Y))};if(L)L.then((h=>{const Q=p=>{J&&J(a,p),h.loadCubeData(p,a,x,y,((p,b)=>{u(p,b)}))};Y?Q(Y):M&&6===M.length?h.supportCascades?this._cascadeLoadFiles(b,(p=>Q(p.map((p=>new Uint8Array(p))))),M,u):u("Textures type does not support cascades."):this._loadFile(p,(p=>Q(new Uint8Array(p))),void 0,void 0,!0,e)}));else{if(!M||0===M.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(b,a,((p,b)=>{g&&g(p,b)}),M,u)}return this._internalTexturesCache.push(a),a}},15201:(p,b,M)=>{M.r(b),M.d(b,{_DDSTextureLoader:()=>mp});var h=M(12957),Q=M(15209);class mp{constructor(){this.supportCascades=!0}loadCubeData(p,b,M,mp){const y=b.getEngine();let P,w=!1,t=1e3;if(Array.isArray(p))for(let h=0;h<p.length;h++){const M=p[h];P=Q.DDSTools.GetDDSInfo(M),b.width=P.width,b.height=P.height,w=(P.isRGB||P.isLuminance||P.mipmapCount>1)&&b.generateMipMaps,y._unpackFlipY(P.isCompressed),Q.DDSTools.UploadDDSLevels(y,b,M,P,w,6,-1,h),P.isFourCC||1!==P.mipmapCount?t=P.mipmapCount-1:y.generateMipMapsForCubemap(b)}else{const mp=p;P=Q.DDSTools.GetDDSInfo(mp),b.width=P.width,b.height=P.height,M&&(P.sphericalPolynomial=new h.f),w=(P.isRGB||P.isLuminance||P.mipmapCount>1)&&b.generateMipMaps,y._unpackFlipY(P.isCompressed),Q.DDSTools.UploadDDSLevels(y,b,mp,P,w,6),P.isFourCC||1!==P.mipmapCount?t=P.mipmapCount-1:y.generateMipMapsForCubemap(b,!1)}y._setCubeMapTextureParams(b,w,t),b.isReady=!0,b.onLoadedObservable.notifyObservers(b),b.onLoadedObservable.clear(),mp&&mp({isDDS:!0,width:b.width,info:P,data:p,texture:b})}loadData(p,b,M){const h=Q.DDSTools.GetDDSInfo(p),mp=(h.isRGB||h.isLuminance||h.mipmapCount>1)&&b.generateMipMaps&&Math.max(h.width,h.height)>>h.mipmapCount-1===1;M(h.width,h.height,mp,h.isFourCC,(()=>{Q.DDSTools.UploadDDSLevels(b.getEngine(),b,p,h,mp,1)}))}}},13302:(p,b,M)=>{M.d(b,{c:()=>t});var h=M(12777),Q=M(12789),mp=M(12957),y=M(12779),P=M(12820);class w{constructor(p,b,M,h){this.name=p,this.worldAxisForNormal=b,this.worldAxisForFileX=M,this.worldAxisForFileY=h}}class t{static ConvertCubeMapTextureToSphericalPolynomial(p){var b;if(!p.isCube)return null;null===(b=p.upp())||void 0===b||b.getEngine().flushFramebuffer();const M=p.getSize().width,h=p.readPixels(0,void 0,void 0,!1),Q=p.readPixels(1,void 0,void 0,!1);let mp,y;p.isRenderTarget?(mp=p.readPixels(3,void 0,void 0,!1),y=p.readPixels(2,void 0,void 0,!1)):(mp=p.readPixels(2,void 0,void 0,!1),y=p.readPixels(3,void 0,void 0,!1));const P=p.readPixels(4,void 0,void 0,!1),w=p.readPixels(5,void 0,void 0,!1),t=p.gammaSpace;let z=0;return 1!=p.textureType&&2!=p.textureType||(z=1),new Promise((p=>{Promise.all([Q,h,mp,y,P,w]).then((b=>{let[h,Q,mp,y,P,w]=b;const x={size:M,right:Q,left:h,up:mp,down:y,front:P,back:w,format:5,type:z,gammaSpace:t};p(this.ConvertCubeMapToSphericalPolynomial(x))}))}))}static _AreaElement(p,b){return Math.atan2(p*b,Math.sqrt(p*p+b*b+1))}static ConvertCubeMapToSphericalPolynomial(p){const b=new mp.e;let M=0;const h=2/p.size,w=h,t=.5*h,z=t-1;for(let mp=0;mp<6;mp++){const x=this._FileFaces[mp],S=p[x.name];let X=z;const c=5===p.format?4:3;for(let mp=0;mp<p.size;mp++){let J=z;for(let w=0;w<p.size;w++){const z=x.worldAxisForFileX.scale(J).add(x.worldAxisForFileY.scale(X)).add(x.worldAxisForNormal);z.normalize();const g=this._AreaElement(J-t,X-t)-this._AreaElement(J-t,X+t)-this._AreaElement(J+t,X-t)+this._AreaElement(J+t,X+t);let f=S[mp*p.size*c+w*c+0],Y=S[mp*p.size*c+w*c+1],a=S[mp*p.size*c+w*c+2];isNaN(f)&&(f=0),isNaN(Y)&&(Y=0),isNaN(a)&&(a=0),0===p.type&&(f/=255,Y/=255,a/=255),p.gammaSpace&&(f=Math.pow((0,Q.Clamp)(f),y.m),Y=Math.pow((0,Q.Clamp)(Y),y.m),a=Math.pow((0,Q.Clamp)(a),y.m));const o=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const p=Math.max(f,Y,a);if(p>o){const b=o/p;f*=b,Y*=b,a*=b}}else f=(0,Q.Clamp)(f,0,o),Y=(0,Q.Clamp)(Y,0,o),a=(0,Q.Clamp)(a,0,o);const l=new P.wM(f,Y,a);b.addLight(z,l,g),M+=g,J+=h}X+=w}}const x=6*(4*Math.PI)/6/M;return b.scaleInPlace(x),b.convertIncidentRadianceToIrradiance(),b.convertIrradianceToLambertianRadiance(),mp.f.FromHarmonics(b)}}t._FileFaces=[new w("right",new h.QM(1,0,0),new h.QM(0,0,-1),new h.QM(0,-1,0)),new w("left",new h.QM(-1,0,0),new h.QM(0,0,1),new h.QM(0,-1,0)),new w("up",new h.QM(0,1,0),new h.QM(1,0,0),new h.QM(0,0,1)),new w("down",new h.QM(0,-1,0),new h.QM(1,0,0),new h.QM(0,0,-1)),new w("front",new h.QM(0,0,1),new h.QM(1,0,0),new h.QM(0,-1,0)),new w("back",new h.QM(0,0,-1),new h.QM(-1,0,0),new h.QM(0,-1,0))],t.MAX_HDRI_VALUE=4096,t.PRESERVE_CLAMPED_COLORS=!1},15209:(p,b,M)=>{M.d(b,{DDSTools:()=>c});var h=M(12789),Q=M(12622),mp=M(13302),y=M(13001);M(14284);const P=131072,w=131072;function t(p){return p.charCodeAt(0)+(p.charCodeAt(1)<<8)+(p.charCodeAt(2)<<16)+(p.charCodeAt(3)<<24)}const z=t("DXT1"),x=t("DXT3"),S=t("DXT5"),X=t("DX10");class c{static GetDDSInfo(p){const b=new Int32Array(p.buffer,p.byteOffset,31),M=new Int32Array(p.buffer,p.byteOffset,35);let h=1;b[2]&P&&(h=Math.max(1,b[7]));const Q=b[21],mp=Q===X?M[32]:0;let y=0;switch(Q){case 113:y=2;break;case 116:y=1;break;case X:if(10===mp){y=2;break}if(2===mp){y=1;break}}return{width:b[4],height:b[3],mipmapCount:h,isFourCC:4===(4&b[20]),isRGB:64===(64&b[20]),isLuminance:(b[20]&w)===w,isCube:512===(512&b[28]),isCompressed:Q===z||Q===x||Q===S,dxgiFormat:mp,textureType:y}}static _GetHalfFloatAsFloatRGBAArrayBuffer(p,b,M,h,Q,mp){const P=new Float32Array(h),w=new Uint16Array(Q,M);let t=0;for(let z=0;z<b;z++)for(let b=0;b<p;b++){const M=4*(b+z*p);P[t]=(0,y.e)(w[M]),P[t+1]=(0,y.e)(w[M+1]),P[t+2]=(0,y.e)(w[M+2]),c.StoreLODInAlphaChannel?P[t+3]=mp:P[t+3]=(0,y.e)(w[M+3]),t+=4}return P}static _GetHalfFloatRGBAArrayBuffer(p,b,M,h,Q,mp){if(c.StoreLODInAlphaChannel){const P=new Uint16Array(h),w=new Uint16Array(Q,M);let t=0;for(let M=0;M<b;M++)for(let b=0;b<p;b++){const h=4*(b+M*p);P[t]=w[h],P[t+1]=w[h+1],P[t+2]=w[h+2],P[t+3]=(0,y.l)(mp),t+=4}return P}return new Uint16Array(Q,M,h)}static _GetFloatRGBAArrayBuffer(p,b,M,h,Q,mp){if(c.StoreLODInAlphaChannel){const y=new Float32Array(h),P=new Float32Array(Q,M);let w=0;for(let M=0;M<b;M++)for(let b=0;b<p;b++){const h=4*(b+M*p);y[w]=P[h],y[w+1]=P[h+1],y[w+2]=P[h+2],y[w+3]=mp,w+=4}return y}return new Float32Array(Q,M,h)}static _GetFloatAsHalfFloatRGBAArrayBuffer(p,b,M,h,Q,mp){const P=new Uint16Array(h),w=new Float32Array(Q,M);let t=0;for(let z=0;z<b;z++)for(let b=0;b<p;b++)P[t]=(0,y.l)(w[t]),P[t+1]=(0,y.l)(w[t+1]),P[t+2]=(0,y.l)(w[t+2]),c.StoreLODInAlphaChannel?P[t+3]=(0,y.l)(mp):P[t+3]=(0,y.l)(w[t+3]),t+=4;return P}static _GetFloatAsUIntRGBAArrayBuffer(p,b,M,Q,mp,y){const P=new Uint8Array(Q),w=new Float32Array(mp,M);let t=0;for(let z=0;z<b;z++)for(let b=0;b<p;b++){const M=4*(b+z*p);P[t]=255*(0,h.Clamp)(w[M]),P[t+1]=255*(0,h.Clamp)(w[M+1]),P[t+2]=255*(0,h.Clamp)(w[M+2]),c.StoreLODInAlphaChannel?P[t+3]=y:P[t+3]=255*(0,h.Clamp)(w[M+3]),t+=4}return P}static _GetHalfFloatAsUIntRGBAArrayBuffer(p,b,M,Q,mp,P){const w=new Uint8Array(Q),t=new Uint16Array(mp,M);let z=0;for(let x=0;x<b;x++)for(let b=0;b<p;b++){const M=4*(b+x*p);w[z]=255*(0,h.Clamp)((0,y.e)(t[M])),w[z+1]=255*(0,h.Clamp)((0,y.e)(t[M+1])),w[z+2]=255*(0,h.Clamp)((0,y.e)(t[M+2])),c.StoreLODInAlphaChannel?w[z+3]=P:w[z+3]=255*(0,h.Clamp)((0,y.e)(t[M+3])),z+=4}return w}static _GetRGBAArrayBuffer(p,b,M,h,Q,mp,y,P,w){const t=new Uint8Array(h),z=new Uint8Array(Q,M);let x=0;for(let S=0;S<b;S++)for(let b=0;b<p;b++){const M=4*(b+S*p);t[x]=z[M+mp],t[x+1]=z[M+y],t[x+2]=z[M+P],t[x+3]=z[M+w],x+=4}return t}static _ExtractLongWordOrder(p){return 0===p||255===p||-16777216===p?0:1+c._ExtractLongWordOrder(p>>8)}static _GetRGBArrayBuffer(p,b,M,h,Q,mp,y,P){const w=new Uint8Array(h),t=new Uint8Array(Q,M);let z=0;for(let x=0;x<b;x++)for(let b=0;b<p;b++){const M=3*(b+x*p);w[z]=t[M+mp],w[z+1]=t[M+y],w[z+2]=t[M+P],z+=3}return w}static _GetLuminanceArrayBuffer(p,b,M,h,Q){const mp=new Uint8Array(h),y=new Uint8Array(Q,M);let P=0;for(let w=0;w<b;w++)for(let b=0;b<p;b++){const M=b+w*p;mp[P]=y[M],P++}return mp}static UploadDDSLevels(p,b,M,h,y,w){let t=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,J=arguments.length>7?arguments[7]:void 0,g=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],f=null;h.sphericalPolynomial&&(f=[]);const Y=!!p.getCaps().s3tc;b.generateMipMaps=y;const a=new Int32Array(M.buffer,M.byteOffset,31);let o,l,L,u,e,d,I,G=0,v=0,Z=1;if(542327876!==a[0])return void Q.d.Error("Invalid magic number in DDS header");if(!h.isFourCC&&!h.isRGB&&!h.isLuminance)return void Q.d.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(h.isCompressed&&!Y)return void Q.d.Error("Compressed textures are not supported on this platform.");let U=a[22];u=a[1]+4;let q=!1;if(h.isFourCC)switch(o=a[21],o){case z:Z=8,v=33777;break;case x:Z=16,v=33778;break;case S:Z=16,v=33779;break;case 113:q=!0,U=64;break;case 116:q=!0,U=128;break;case X:{u+=20;let p=!1;switch(h.dxgiFormat){case 10:q=!0,U=64,p=!0;break;case 2:q=!0,U=128,p=!0;break;case 88:h.isRGB=!0,h.isFourCC=!1,U=32,p=!0}if(p)break}default:return void Q.d.Error(["Unsupported FourCC code:",(B=o,String.fromCharCode(255&B,B>>8&255,B>>16&255,B>>24&255))])}var B;const s=c._ExtractLongWordOrder(a[23]),i=c._ExtractLongWordOrder(a[24]),T=c._ExtractLongWordOrder(a[25]),W=c._ExtractLongWordOrder(a[26]);q&&(v=p._getRGBABufferInternalSizedFormat(h.textureType)),d=1,a[2]&P&&!1!==y&&(d=Math.max(1,a[7]));const H=J||0,E=p.getCaps();for(let Q=H;Q<w;Q++){for(l=a[4],L=a[3],I=0;I<d;++I){if(-1===t||t===I){const mp=-1===t?I:0;if(!h.isCompressed&&h.isFourCC){b.format=5,G=l*L*4;let h=null;if(p._badOS||p._badDesktopOS||!E.textureHalfFloat&&!E.textureFloat)128===U?(h=c._GetFloatAsUIntRGBAArrayBuffer(l,L,M.byteOffset+u,G,M.buffer,mp),f&&0==mp&&f.push(c._GetFloatRGBAArrayBuffer(l,L,M.byteOffset+u,G,M.buffer,mp))):64===U&&(h=c._GetHalfFloatAsUIntRGBAArrayBuffer(l,L,M.byteOffset+u,G,M.buffer,mp),f&&0==mp&&f.push(c._GetHalfFloatAsFloatRGBAArrayBuffer(l,L,M.byteOffset+u,G,M.buffer,mp))),b.type=0;else{const p=E.textureFloat&&(g&&E.textureFloatLinearFiltering||!g),Q=E.textureHalfFloat&&(g&&E.textureHalfFloatLinearFiltering||!g),y=(128===U||64===U&&!Q)&&p?1:(64===U||128===U&&!p)&&Q?2:0;let P,w=null;if(128===U)switch(y){case 1:P=c._GetFloatRGBAArrayBuffer,w=null;break;case 2:P=c._GetFloatAsHalfFloatRGBAArrayBuffer,w=c._GetFloatRGBAArrayBuffer;break;case 0:P=c._GetFloatAsUIntRGBAArrayBuffer,w=c._GetFloatRGBAArrayBuffer}else switch(y){case 1:P=c._GetHalfFloatAsFloatRGBAArrayBuffer,w=null;break;case 2:P=c._GetHalfFloatRGBAArrayBuffer,w=c._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:P=c._GetHalfFloatAsUIntRGBAArrayBuffer,w=c._GetHalfFloatAsFloatRGBAArrayBuffer}b.type=y,h=P(l,L,M.byteOffset+u,G,M.buffer,mp),f&&0==mp&&f.push(w?w(l,L,M.byteOffset+u,G,M.buffer,mp):h)}h&&p._uploadDataToTextureDirectly(b,h,Q,mp)}else if(h.isRGB)b.type=0,24===U?(b.format=4,G=l*L*3,e=c._GetRGBArrayBuffer(l,L,M.byteOffset+u,G,M.buffer,s,i,T),p._uploadDataToTextureDirectly(b,e,Q,mp)):(b.format=5,G=l*L*4,e=c._GetRGBAArrayBuffer(l,L,M.byteOffset+u,G,M.buffer,s,i,T,W),p._uploadDataToTextureDirectly(b,e,Q,mp));else if(h.isLuminance){const h=p._getUnpackAlignement(),y=l;G=Math.floor((l+h-1)/h)*h*(L-1)+y,e=c._GetLuminanceArrayBuffer(l,L,M.byteOffset+u,G,M.buffer),b.format=1,b.type=0,p._uploadDataToTextureDirectly(b,e,Q,mp)}else G=Math.max(4,l)/4*Math.max(4,L)/4*Z,e=new Uint8Array(M.buffer,M.byteOffset+u,G),b.type=0,p._uploadCompressedDataToTextureDirectly(b,v,l,L,e,Q,mp)}u+=U?l*L*(U/8):G,l*=.5,L*=.5,l=Math.max(1,l),L=Math.max(1,L)}if(void 0!==J)break}f&&f.length>0?h.sphericalPolynomial=mp.c.ConvertCubeMapToSphericalPolynomial({size:a[4],right:f[0],left:f[1],up:f[2],down:f[3],front:f[4],back:f[5],format:5,type:1,gammaSpace:!1}):h.sphericalPolynomial=void 0}}c.StoreLODInAlphaChannel=!1}}]);