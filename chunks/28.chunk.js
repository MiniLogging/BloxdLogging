"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[28],{13435:(x,O,Q)=>{Q.r(O),Q.d(O,{_IESTextureLoader:()=>o});var X=Q(10889);function Z(x){return x.split(" ").filter((x=>""!==x)).map((x=>parseFloat(x)))}function n(x,O,Q){for(;Q.length!==O;){const O=Z(x.lines[x.index++]);Q.push(...O)}}function V(x,O,Q){let Z=0,n=0,V=0,o=0,l=0,C=0;for(let X=0;X<x.numberOfHorizontalAngles-1;X++)if(Q<x.horizontalAngles[X+1]||X===x.numberOfHorizontalAngles-2){n=X,V=x.horizontalAngles[X],o=x.horizontalAngles[X+1];break}for(let X=0;X<x.numberOfVerticalAngles-1;X++)if(O<x.verticalAngles[X+1]||X===x.numberOfVerticalAngles-2){Z=X,l=x.verticalAngles[X],C=x.verticalAngles[X+1];break}const U=o-V,L=C-l;if(0===L)return 0;const h=0===U?0:(Q-V)/U,N=(O-l)/L,a=0===U?n:n+1,K=(0,X.Lerp)(x.candelaValues[n][Z],x.candelaValues[a][Z],h),M=(0,X.Lerp)(x.candelaValues[n][Z+1],x.candelaValues[a][Z+1],h);return(0,X.Lerp)(K,M,N)}class o{constructor(){this.supportCascades=!1}loadCubeData(){throw".ies not supported in Cube."}loadData(x,O,Q){const X=function(x){const O={lines:new TextDecoder("utf-8").decode(x).split("\n"),index:0},Q={version:O.lines[0],candelaValues:[],horizontalAngles:[],verticalAngles:[],numberOfHorizontalAngles:0,numberOfVerticalAngles:0};for(O.index=1;O.lines.length>0&&!O.lines[O.index].includes("TILT=");)O.index++;O.lines[O.index].includes("INCLUDE"),O.index++;const X=Z(O.lines[O.index++]);Q.numberOfLights=X[0],Q.lumensPerLamp=X[1],Q.candelaMultiplier=X[2],Q.numberOfVerticalAngles=X[3],Q.numberOfHorizontalAngles=X[4],Q.photometricType=X[5],Q.unitsType=X[6],Q.width=X[7],Q.length=X[8],Q.height=X[9];const o=Z(O.lines[O.index++]);Q.ballastFactor=o[0],Q.fileGenerationType=o[1],Q.inputWatts=o[2];for(let Z=0;Z<Q.numberOfHorizontalAngles;Z++)Q.candelaValues[Z]=[];n(O,Q.numberOfVerticalAngles,Q.verticalAngles),n(O,Q.numberOfHorizontalAngles,Q.horizontalAngles);for(let Z=0;Z<Q.numberOfHorizontalAngles;Z++)n(O,Q.numberOfVerticalAngles,Q.candelaValues[Z]);let l=-1;for(let Z=0;Z<Q.numberOfHorizontalAngles;Z++)for(let x=0;x<Q.numberOfVerticalAngles;x++)Q.candelaValues[Z][x]*=Q.candelaValues[Z][x]*Q.candelaMultiplier*Q.ballastFactor*Q.fileGenerationType,l=Math.max(l,Q.candelaValues[Z][x]);if(l>0)for(let Z=0;Z<Q.numberOfHorizontalAngles;Z++)for(let x=0;x<Q.numberOfVerticalAngles;x++)Q.candelaValues[Z][x]/=l;const C=180,U=360,L=new Float32Array(64800),h=Q.horizontalAngles[0],N=Q.horizontalAngles[Q.numberOfHorizontalAngles-1];for(let Z=0;Z<64800;Z++){let x=Z%U;const O=Math.floor(Z/U);N-h!==0&&(x<h||x>=N)&&(x%=2*N,x>N&&(x=2*N-x)),L[O+x*C]=V(Q,O,x)}return{width:180,height:1,data:L}}(new Uint8Array(x.buffer,x.byteOffset,x.byteLength));Q(X.width,X.height,!1,!1,(()=>{const x=O.getEngine();O.type=1,O.format=6,O._gammaSpace=!1,x._uploadDataToTextureDirectly(O,X.data)}))}}}}]);