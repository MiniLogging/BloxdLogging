"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[28],{13756:(G,V,W)=>{W.r(V),W.d(V,{_IESTextureLoader:()=>z});var J=W(11182);function R(G){return G.split(" ").filter((G=>""!==G)).map((G=>parseFloat(G)))}function d(G,V,W){for(;W.length!==V;){const V=R(G.lines[G.index++]);W.push(...V)}}function k(G,V,W){let R=0,d=0,k=0,z=0,X=0,P=0;for(let J=0;J<G.numberOfHorizontalAngles-1;J++)if(W<G.horizontalAngles[J+1]||J===G.numberOfHorizontalAngles-2){d=J,k=G.horizontalAngles[J],z=G.horizontalAngles[J+1];break}for(let J=0;J<G.numberOfVerticalAngles-1;J++)if(V<G.verticalAngles[J+1]||J===G.numberOfVerticalAngles-2){R=J,X=G.verticalAngles[J],P=G.verticalAngles[J+1];break}const A=z-k,x=P-X;if(0===x)return 0;const q=0===A?0:(W-k)/A,L=(V-X)/x,t=0===A?d:d+1,Y=(0,J.Lerp)(G.candelaValues[d][R],G.candelaValues[t][R],q),g=(0,J.Lerp)(G.candelaValues[d][R+1],G.candelaValues[t][R+1],q);return(0,J.Lerp)(Y,g,L)}class z{constructor(){this.supportCascades=!1}loadCubeData(){throw".ies not supported in Cube."}loadData(G,V,W){const J=function(G){const V={lines:new TextDecoder("utf-8").decode(G).split("\n"),index:0},W={version:V.lines[0],candelaValues:[],horizontalAngles:[],verticalAngles:[],numberOfHorizontalAngles:0,numberOfVerticalAngles:0};for(V.index=1;V.lines.length>0&&!V.lines[V.index].includes("TILT=");)V.index++;V.lines[V.index].includes("INCLUDE"),V.index++;const J=R(V.lines[V.index++]);W.numberOfLights=J[0],W.lumensPerLamp=J[1],W.candelaMultiplier=J[2],W.numberOfVerticalAngles=J[3],W.numberOfHorizontalAngles=J[4],W.photometricType=J[5],W.unitsType=J[6],W.width=J[7],W.length=J[8],W.height=J[9];const z=R(V.lines[V.index++]);W.ballastFactor=z[0],W.fileGenerationType=z[1],W.inputWatts=z[2];for(let R=0;R<W.numberOfHorizontalAngles;R++)W.candelaValues[R]=[];d(V,W.numberOfVerticalAngles,W.verticalAngles),d(V,W.numberOfHorizontalAngles,W.horizontalAngles);for(let R=0;R<W.numberOfHorizontalAngles;R++)d(V,W.numberOfVerticalAngles,W.candelaValues[R]);let X=-1;for(let R=0;R<W.numberOfHorizontalAngles;R++)for(let G=0;G<W.numberOfVerticalAngles;G++)W.candelaValues[R][G]*=W.candelaValues[R][G]*W.candelaMultiplier*W.ballastFactor*W.fileGenerationType,X=Math.max(X,W.candelaValues[R][G]);if(X>0)for(let R=0;R<W.numberOfHorizontalAngles;R++)for(let G=0;G<W.numberOfVerticalAngles;G++)W.candelaValues[R][G]/=X;const P=180,A=360,x=new Float32Array(64800),q=W.horizontalAngles[0],L=W.horizontalAngles[W.numberOfHorizontalAngles-1];for(let R=0;R<64800;R++){let G=R%A;const V=Math.floor(R/A);L-q!==0&&(G<q||G>=L)&&(G%=2*L,G>L&&(G=2*L-G)),x[V+G*P]=k(W,V,G)}return{width:180,height:1,data:x}}(new Uint8Array(G.buffer,G.byteOffset,G.byteLength));W(J.width,J.height,!1,!1,(()=>{const G=V.getEngine();V.type=1,V.format=6,V._gammaSpace=!1,G._uploadDataToTextureDirectly(V,J.data)}))}}}}]);