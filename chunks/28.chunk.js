"use strict";(self["2fwzcez286e"]=self["2fwzcez286e"]||[]).push([[28,29],{14668:(B,u,F)=>{var Z=F(12925),V=F(12822),p=F(12861),G=F(12955),R=F(12888),e=F(12937);R.c.prototype._partialLoadFile=function(B,u,F,Z){let V=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(B,(B=>{F[u]=B,F._internalCount++,6===F._internalCount&&Z(F)}),void 0,void 0,!0,((B,u)=>{V&&B&&V(B.status+" "+B.statusText,u)}))},R.c.prototype._cascadeLoadFiles=function(B,u,F){let Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const V=[];V._internalCount=0;for(let p=0;p<6;p++)this._partialLoadFile(F[p],p,V,u,Z)},R.c.prototype._cascadeLoadImgs=function(B,u,F,Z){let V=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,p=arguments.length>5?arguments[5]:void 0;const G=[];G._internalCount=0;for(let R=0;R<6;R++)this._partialLoadImg(Z[R],R,G,B,u,F,V,p)},R.c.prototype._partialLoadImg=function(B,u,F,Z,V,R){let e=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,s=arguments.length>7?arguments[7]:void 0;const Y=(0,G.d)();(0,p.n)(B,(B=>{F[u]=B,F._internalCount++,Z&&Z.removePendingData(Y),6===F._internalCount&&R&&R(V,F)}),((B,u)=>{Z&&Z.removePendingData(Y),e&&e(B,u)}),Z?Z.offlineProvider:null,s),Z&&Z.addPendingData(Y)},R.c.prototype.createCubeTextureBase=function(B,u,F,p){let G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,R=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=arguments.length>6?arguments[6]:void 0,Y=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,Q=arguments.length>8&&void 0!==arguments[8]&&arguments[8],t=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,v=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,D=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,L=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,q=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,W=arguments.length>14&&void 0!==arguments[14]&&arguments[14],X=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const f=D||new Z.b(this,7);f.isCube=!0,f.url=B,f.generateMipMaps=!p,f._lodGenerationScale=t,f._lodGenerationOffset=v,f._useSRGBBuffer=!!W&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!p),f!==D&&(f.label=B.substring(0,60)),this._doNotHandleContextLost||(f._extension=Y,f._files=F,f._buffer=X);const C=B;this._transformTextureUrl&&!D&&(B=this._transformTextureUrl(B));const x=Y??function(B){const u=B.split("?")[0],F=u.lastIndexOf(".");return F>-1?u.substring(F).toLowerCase():""}(B),U=(0,e.e)(x),y=(B,u)=>{f.dispose(),R?R(B,u):B&&V.d.Warn(B)},O=(Z,R)=>{B===C?Z&&y(Z.status+" "+Z.statusText,R):(V.d.Warn(`Failed to load ${B}, falling back to the ${C}`),this.createCubeTextureBase(C,u,F,!!p,G,y,s,Y,Q,t,v,f,L,q,W,X))};if(U)U.then((Z=>{const V=B=>{L&&L(f,B),Z.loadCubeData(B,f,Q,G,((B,u)=>{y(B,u)}))};X?V(X):F&&6===F.length?Z.supportCascades?this._cascadeLoadFiles(u,(B=>V(B.map((B=>new Uint8Array(B))))),F,y):y("Textures type does not support cascades."):this._loadFile(B,(B=>V(new Uint8Array(B))),void 0,void 0,!0,O)}));else{if(!F||0===F.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(u,f,((B,u)=>{q&&q(B,u)}),F,y)}return this._internalTexturesCache.push(f),f}},15462:(B,u,F)=>{F.r(u),F.d(u,{_DDSTextureLoader:()=>p});var Z=F(13172),V=F(15469);class p{constructor(){this.supportCascades=!0}loadCubeData(B,u,F,p){const G=u.getEngine();let R,e=!1,s=1e3;if(Array.isArray(B))for(let Z=0;Z<B.length;Z++){const F=B[Z];R=V.DDSTools.GetDDSInfo(F),u.width=R.width,u.height=R.height,e=(R.isRGB||R.isLuminance||R.mipmapCount>1)&&u.generateMipMaps,G._unpackFlipY(R.isCompressed),V.DDSTools.UploadDDSLevels(G,u,F,R,e,6,-1,Z),R.isFourCC||1!==R.mipmapCount?s=R.mipmapCount-1:G.generateMipMapsForCubemap(u)}else{const p=B;R=V.DDSTools.GetDDSInfo(p),u.width=R.width,u.height=R.height,F&&(R.sphericalPolynomial=new Z.g),e=(R.isRGB||R.isLuminance||R.mipmapCount>1)&&u.generateMipMaps,G._unpackFlipY(R.isCompressed),V.DDSTools.UploadDDSLevels(G,u,p,R,e,6),R.isFourCC||1!==R.mipmapCount?s=R.mipmapCount-1:G.generateMipMapsForCubemap(u,!1)}G._setCubeMapTextureParams(u,e,s),u.isReady=!0,u.onLoadedObservable.notifyObservers(u),u.onLoadedObservable.clear(),p&&p({isDDS:!0,width:u.width,info:R,data:B,texture:u})}loadData(B,u,F){const Z=V.DDSTools.GetDDSInfo(B),p=(Z.isRGB||Z.isLuminance||Z.mipmapCount>1)&&u.generateMipMaps&&Math.max(Z.width,Z.height)>>Z.mipmapCount-1===1;F(Z.width,Z.height,p,Z.isFourCC,(()=>{V.DDSTools.UploadDDSLevels(u.getEngine(),u,B,Z,p,1)}))}}},13485:(B,u,F)=>{F.d(u,{d:()=>s});var Z=F(12979),V=F(12994),p=F(13172),G=F(12982),R=F(13023);class e{constructor(B,u,F,Z){this.name=B,this.worldAxisForNormal=u,this.worldAxisForFileX=F,this.worldAxisForFileY=Z}}class s{static ConvertCubeMapTextureToSphericalPolynomial(B){var u;if(!B.isCube)return null;null===(u=B.yB())||void 0===u||u.getEngine().flushFramebuffer();const F=B.getSize().width,Z=B.readPixels(0,void 0,void 0,!1),V=B.readPixels(1,void 0,void 0,!1);let p,G;B.isRenderTarget?(p=B.readPixels(3,void 0,void 0,!1),G=B.readPixels(2,void 0,void 0,!1)):(p=B.readPixels(2,void 0,void 0,!1),G=B.readPixels(3,void 0,void 0,!1));const R=B.readPixels(4,void 0,void 0,!1),e=B.readPixels(5,void 0,void 0,!1),s=B.gammaSpace;let Y=0;return 1!=B.textureType&&2!=B.textureType||(Y=1),new Promise((B=>{Promise.all([V,Z,p,G,R,e]).then((u=>{let[Z,V,p,G,R,e]=u;const Q={size:F,right:V,left:Z,up:p,down:G,front:R,back:e,format:5,type:Y,gammaSpace:s};B(this.ConvertCubeMapToSphericalPolynomial(Q))}))}))}static _AreaElement(B,u){return Math.atan2(B*u,Math.sqrt(B*B+u*u+1))}static ConvertCubeMapToSphericalPolynomial(B){const u=new p.c;let F=0;const Z=2/B.size,e=Z,s=.5*Z,Y=s-1;for(let p=0;p<6;p++){const Q=this._FileFaces[p],t=B[Q.name];let v=Y;const D=5===B.format?4:3;for(let p=0;p<B.size;p++){let L=Y;for(let e=0;e<B.size;e++){const Y=Q.worldAxisForFileX.scale(L).add(Q.worldAxisForFileY.scale(v)).add(Q.worldAxisForNormal);Y.normalize();const q=this._AreaElement(L-s,v-s)-this._AreaElement(L-s,v+s)-this._AreaElement(L+s,v-s)+this._AreaElement(L+s,v+s);let W=t[p*B.size*D+e*D+0],X=t[p*B.size*D+e*D+1],f=t[p*B.size*D+e*D+2];isNaN(W)&&(W=0),isNaN(X)&&(X=0),isNaN(f)&&(f=0),0===B.type&&(W/=255,X/=255,f/=255),B.gammaSpace&&(W=Math.pow((0,V.Clamp)(W),G.m),X=Math.pow((0,V.Clamp)(X),G.m),f=Math.pow((0,V.Clamp)(f),G.m));const C=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const B=Math.max(W,X,f);if(B>C){const u=C/B;W*=u,X*=u,f*=u}}else W=(0,V.Clamp)(W,0,C),X=(0,V.Clamp)(X,0,C),f=(0,V.Clamp)(f,0,C);const x=new R.Xu(W,X,f);u.addLight(Y,x,q),F+=q,L+=Z}v+=e}}const Q=6*(4*Math.PI)/6/F;return u.scaleInPlace(Q),u.convertIncidentRadianceToIrradiance(),u.convertIrradianceToLambertianRadiance(),p.g.FromHarmonics(u)}}s._FileFaces=[new e("right",new Z.Du(1,0,0),new Z.Du(0,0,-1),new Z.Du(0,-1,0)),new e("left",new Z.Du(-1,0,0),new Z.Du(0,0,1),new Z.Du(0,-1,0)),new e("up",new Z.Du(0,1,0),new Z.Du(1,0,0),new Z.Du(0,0,1)),new e("down",new Z.Du(0,-1,0),new Z.Du(1,0,0),new Z.Du(0,0,-1)),new e("front",new Z.Du(0,0,1),new Z.Du(1,0,0),new Z.Du(0,-1,0)),new e("back",new Z.Du(0,0,-1),new Z.Du(-1,0,0),new Z.Du(0,-1,0))],s.MAX_HDRI_VALUE=4096,s.PRESERVE_CLAMPED_COLORS=!1},15469:(B,u,F)=>{F.d(u,{DDSTools:()=>D});var Z=F(12994),V=F(12822),p=F(13485),G=F(13215);F(14668);const R=131072,e=131072;function s(B){return B.charCodeAt(0)+(B.charCodeAt(1)<<8)+(B.charCodeAt(2)<<16)+(B.charCodeAt(3)<<24)}const Y=s("DXT1"),Q=s("DXT3"),t=s("DXT5"),v=s("DX10");class D{static GetDDSInfo(B){const u=new Int32Array(B.buffer,B.byteOffset,31),F=new Int32Array(B.buffer,B.byteOffset,35);let Z=1;u[2]&R&&(Z=Math.max(1,u[7]));const V=u[21],p=V===v?F[32]:0;let G=0;switch(V){case 113:G=2;break;case 116:G=1;break;case v:if(10===p){G=2;break}if(2===p){G=1;break}}return{width:u[4],height:u[3],mipmapCount:Z,isFourCC:4===(4&u[20]),isRGB:64===(64&u[20]),isLuminance:(u[20]&e)===e,isCube:512===(512&u[28]),isCompressed:V===Y||V===Q||V===t,dxgiFormat:p,textureType:G}}static _GetHalfFloatAsFloatRGBAArrayBuffer(B,u,F,Z,V,p){const R=new Float32Array(Z),e=new Uint16Array(V,F);let s=0;for(let Y=0;Y<u;Y++)for(let u=0;u<B;u++){const F=4*(u+Y*B);R[s]=(0,G.f)(e[F]),R[s+1]=(0,G.f)(e[F+1]),R[s+2]=(0,G.f)(e[F+2]),D.StoreLODInAlphaChannel?R[s+3]=p:R[s+3]=(0,G.f)(e[F+3]),s+=4}return R}static _GetHalfFloatRGBAArrayBuffer(B,u,F,Z,V,p){if(D.StoreLODInAlphaChannel){const R=new Uint16Array(Z),e=new Uint16Array(V,F);let s=0;for(let F=0;F<u;F++)for(let u=0;u<B;u++){const Z=4*(u+F*B);R[s]=e[Z],R[s+1]=e[Z+1],R[s+2]=e[Z+2],R[s+3]=(0,G.k)(p),s+=4}return R}return new Uint16Array(V,F,Z)}static _GetFloatRGBAArrayBuffer(B,u,F,Z,V,p){if(D.StoreLODInAlphaChannel){const G=new Float32Array(Z),R=new Float32Array(V,F);let e=0;for(let F=0;F<u;F++)for(let u=0;u<B;u++){const Z=4*(u+F*B);G[e]=R[Z],G[e+1]=R[Z+1],G[e+2]=R[Z+2],G[e+3]=p,e+=4}return G}return new Float32Array(V,F,Z)}static _GetFloatAsHalfFloatRGBAArrayBuffer(B,u,F,Z,V,p){const R=new Uint16Array(Z),e=new Float32Array(V,F);let s=0;for(let Y=0;Y<u;Y++)for(let u=0;u<B;u++)R[s]=(0,G.k)(e[s]),R[s+1]=(0,G.k)(e[s+1]),R[s+2]=(0,G.k)(e[s+2]),D.StoreLODInAlphaChannel?R[s+3]=(0,G.k)(p):R[s+3]=(0,G.k)(e[s+3]),s+=4;return R}static _GetFloatAsUIntRGBAArrayBuffer(B,u,F,V,p,G){const R=new Uint8Array(V),e=new Float32Array(p,F);let s=0;for(let Y=0;Y<u;Y++)for(let u=0;u<B;u++){const F=4*(u+Y*B);R[s]=255*(0,Z.Clamp)(e[F]),R[s+1]=255*(0,Z.Clamp)(e[F+1]),R[s+2]=255*(0,Z.Clamp)(e[F+2]),D.StoreLODInAlphaChannel?R[s+3]=G:R[s+3]=255*(0,Z.Clamp)(e[F+3]),s+=4}return R}static _GetHalfFloatAsUIntRGBAArrayBuffer(B,u,F,V,p,R){const e=new Uint8Array(V),s=new Uint16Array(p,F);let Y=0;for(let Q=0;Q<u;Q++)for(let u=0;u<B;u++){const F=4*(u+Q*B);e[Y]=255*(0,Z.Clamp)((0,G.f)(s[F])),e[Y+1]=255*(0,Z.Clamp)((0,G.f)(s[F+1])),e[Y+2]=255*(0,Z.Clamp)((0,G.f)(s[F+2])),D.StoreLODInAlphaChannel?e[Y+3]=R:e[Y+3]=255*(0,Z.Clamp)((0,G.f)(s[F+3])),Y+=4}return e}static _GetRGBAArrayBuffer(B,u,F,Z,V,p,G,R,e){const s=new Uint8Array(Z),Y=new Uint8Array(V,F);let Q=0;for(let t=0;t<u;t++)for(let u=0;u<B;u++){const F=4*(u+t*B);s[Q]=Y[F+p],s[Q+1]=Y[F+G],s[Q+2]=Y[F+R],s[Q+3]=Y[F+e],Q+=4}return s}static _ExtractLongWordOrder(B){return 0===B||255===B||-16777216===B?0:1+D._ExtractLongWordOrder(B>>8)}static _GetRGBArrayBuffer(B,u,F,Z,V,p,G,R){const e=new Uint8Array(Z),s=new Uint8Array(V,F);let Y=0;for(let Q=0;Q<u;Q++)for(let u=0;u<B;u++){const F=3*(u+Q*B);e[Y]=s[F+p],e[Y+1]=s[F+G],e[Y+2]=s[F+R],Y+=3}return e}static _GetLuminanceArrayBuffer(B,u,F,Z,V){const p=new Uint8Array(Z),G=new Uint8Array(V,F);let R=0;for(let e=0;e<u;e++)for(let u=0;u<B;u++){const F=u+e*B;p[R]=G[F],R++}return p}static UploadDDSLevels(B,u,F,Z,G,e){let s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,L=arguments.length>7?arguments[7]:void 0,q=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],W=null;Z.sphericalPolynomial&&(W=[]);const X=!!B.getCaps().s3tc;u.generateMipMaps=G;const f=new Int32Array(F.buffer,F.byteOffset,31);let C,x,U,y,O,g,J,a=0,T=0,z=1;if(542327876!==f[0])return void V.d.Error("Invalid magic number in DDS header");if(!Z.isFourCC&&!Z.isRGB&&!Z.isLuminance)return void V.d.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(Z.isCompressed&&!X)return void V.d.Error("Compressed textures are not supported on this platform.");let M=f[22];y=f[1]+4;let j=!1;if(Z.isFourCC)switch(C=f[21],C){case Y:z=8,T=33777;break;case Q:z=16,T=33778;break;case t:z=16,T=33779;break;case 113:j=!0,M=64;break;case 116:j=!0,M=128;break;case v:{y+=20;let B=!1;switch(Z.dxgiFormat){case 10:j=!0,M=64,B=!0;break;case 2:j=!0,M=128,B=!0;break;case 88:Z.isRGB=!0,Z.isFourCC=!1,M=32,B=!0}if(B)break}default:return void V.d.Error(["Unsupported FourCC code:",(o=C,String.fromCharCode(255&o,o>>8&255,o>>16&255,o>>24&255))])}var o;const I=D._ExtractLongWordOrder(f[23]),mB=D._ExtractLongWordOrder(f[24]),E=D._ExtractLongWordOrder(f[25]),w=D._ExtractLongWordOrder(f[26]);j&&(T=B._getRGBABufferInternalSizedFormat(Z.textureType)),g=1,f[2]&R&&!1!==G&&(g=Math.max(1,f[7]));const H=L||0,n=B.getCaps();for(let V=H;V<e;V++){for(x=f[4],U=f[3],J=0;J<g;++J){if(-1===s||s===J){const p=-1===s?J:0;if(!Z.isCompressed&&Z.isFourCC){u.format=5,a=x*U*4;let Z=null;if(B._badOS||B._badDesktopOS||!n.textureHalfFloat&&!n.textureFloat)128===M?(Z=D._GetFloatAsUIntRGBAArrayBuffer(x,U,F.byteOffset+y,a,F.buffer,p),W&&0==p&&W.push(D._GetFloatRGBAArrayBuffer(x,U,F.byteOffset+y,a,F.buffer,p))):64===M&&(Z=D._GetHalfFloatAsUIntRGBAArrayBuffer(x,U,F.byteOffset+y,a,F.buffer,p),W&&0==p&&W.push(D._GetHalfFloatAsFloatRGBAArrayBuffer(x,U,F.byteOffset+y,a,F.buffer,p))),u.type=0;else{const B=n.textureFloat&&(q&&n.textureFloatLinearFiltering||!q),V=n.textureHalfFloat&&(q&&n.textureHalfFloatLinearFiltering||!q),G=(128===M||64===M&&!V)&&B?1:(64===M||128===M&&!B)&&V?2:0;let R,e=null;if(128===M)switch(G){case 1:R=D._GetFloatRGBAArrayBuffer,e=null;break;case 2:R=D._GetFloatAsHalfFloatRGBAArrayBuffer,e=D._GetFloatRGBAArrayBuffer;break;case 0:R=D._GetFloatAsUIntRGBAArrayBuffer,e=D._GetFloatRGBAArrayBuffer}else switch(G){case 1:R=D._GetHalfFloatAsFloatRGBAArrayBuffer,e=null;break;case 2:R=D._GetHalfFloatRGBAArrayBuffer,e=D._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:R=D._GetHalfFloatAsUIntRGBAArrayBuffer,e=D._GetHalfFloatAsFloatRGBAArrayBuffer}u.type=G,Z=R(x,U,F.byteOffset+y,a,F.buffer,p),W&&0==p&&W.push(e?e(x,U,F.byteOffset+y,a,F.buffer,p):Z)}Z&&B._uploadDataToTextureDirectly(u,Z,V,p)}else if(Z.isRGB)u.type=0,24===M?(u.format=4,a=x*U*3,O=D._GetRGBArrayBuffer(x,U,F.byteOffset+y,a,F.buffer,I,mB,E),B._uploadDataToTextureDirectly(u,O,V,p)):(u.format=5,a=x*U*4,O=D._GetRGBAArrayBuffer(x,U,F.byteOffset+y,a,F.buffer,I,mB,E,w),B._uploadDataToTextureDirectly(u,O,V,p));else if(Z.isLuminance){const Z=B._getUnpackAlignement(),G=x;a=Math.floor((x+Z-1)/Z)*Z*(U-1)+G,O=D._GetLuminanceArrayBuffer(x,U,F.byteOffset+y,a,F.buffer),u.format=1,u.type=0,B._uploadDataToTextureDirectly(u,O,V,p)}else a=Math.max(4,x)/4*Math.max(4,U)/4*z,O=new Uint8Array(F.buffer,F.byteOffset+y,a),u.type=0,B._uploadCompressedDataToTextureDirectly(u,T,x,U,O,V,p)}y+=M?x*U*(M/8):a,x*=.5,U*=.5,x=Math.max(1,x),U=Math.max(1,U)}if(void 0!==L)break}W&&W.length>0?Z.sphericalPolynomial=p.d.ConvertCubeMapToSphericalPolynomial({size:f[4],right:W[0],left:W[1],up:W[2],down:W[3],front:W[4],back:W[5],format:5,type:1,gammaSpace:!1}):Z.sphericalPolynomial=void 0}}D.StoreLODInAlphaChannel=!1}}]);