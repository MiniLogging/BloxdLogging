"use strict";(self.xeuzlpp225k=self.xeuzlpp225k||[]).push([[28,29],{13030:(k,Q,i)=>{var Z=i(11235),U=i(11134),C=i(11163),B=i(11255),o=i(11195),m=i(11245);o.b.prototype._partialLoadFile=function(k,Q,i,Z){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(k,(k=>{i[Q]=k,i._internalCount++,6===i._internalCount&&Z(i)}),void 0,void 0,!0,((k,Q)=>{U&&k&&U(k.status+" "+k.statusText,Q)}))},o.b.prototype._cascadeLoadFiles=function(k,Q,i){let Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const U=[];U._internalCount=0;for(let C=0;C<6;C++)this._partialLoadFile(i[C],C,U,Q,Z)},o.b.prototype._cascadeLoadImgs=function(k,Q,i,Z){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,C=arguments.length>5?arguments[5]:void 0;const B=[];B._internalCount=0;for(let o=0;o<6;o++)this._partialLoadImg(Z[o],o,B,k,Q,i,U,C)},o.b.prototype._partialLoadImg=function(k,Q,i,Z,U,o){let m=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,O=arguments.length>7?arguments[7]:void 0;const J=(0,B.b)();(0,C.r)(k,(k=>{i[Q]=k,i._internalCount++,Z&&Z.removePendingData(J),6===i._internalCount&&o&&o(U,i)}),((k,Q)=>{Z&&Z.removePendingData(J),m&&m(k,Q)}),Z?Z.offlineProvider:null,O),Z&&Z.addPendingData(J)},o.b.prototype.createCubeTextureBase=function(k,Q,i,C){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,O=arguments.length>6?arguments[6]:void 0,J=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,G=arguments.length>8&&void 0!==arguments[8]&&arguments[8],H=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,e=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,F=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,z=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,E=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,l=arguments.length>14&&void 0!==arguments[14]&&arguments[14],h=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const c=F||new Z.c(this,7);c.isCube=!0,c.url=k,c.generateMipMaps=!C,c._lodGenerationScale=H,c._lodGenerationOffset=e,c._useSRGBBuffer=!!l&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!C),c!==F&&(c.label=k.substring(0,60)),this._doNotHandleContextLost||(c._extension=J,c._files=i,c._buffer=h);const f=k;this._transformTextureUrl&&!F&&(k=this._transformTextureUrl(k));const Y=J??function(k){const Q=k.split("?")[0],i=Q.lastIndexOf(".");return i>-1?Q.substring(i).toLowerCase():""}(k),y=(0,m.b)(Y),L=(k,Q)=>{c.dispose(),o?o(k,Q):k&&U.c.Warn(k)},s=(Z,o)=>{k===f?Z&&L(Z.status+" "+Z.statusText,o):(U.c.Warn(`Failed to load ${k}, falling back to the ${f}`),this.createCubeTextureBase(f,Q,i,!!C,B,L,O,J,G,H,e,c,z,E,l,h))};if(y)y.then((Z=>{const U=k=>{z&&z(c,k),Z.loadCubeData(k,c,G,B,((k,Q)=>{L(k,Q)}))};h?U(h):i&&6===i.length?Z.supportCascades?this._cascadeLoadFiles(Q,(k=>U(k.map((k=>new Uint8Array(k))))),i,L):L("Textures type does not support cascades."):this._loadFile(k,(k=>U(new Uint8Array(k))),void 0,void 0,!0,s)}));else{if(!i||0===i.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(Q,c,((k,Q)=>{E&&E(k,Q)}),i,L)}return this._internalTexturesCache.push(c),c}},13803:(k,Q,i)=>{i.r(Q),i.d(Q,{_DDSTextureLoader:()=>C});var Z=i(11481),U=i(13805);class C{constructor(){this.supportCascades=!0}loadCubeData(k,Q,i,C){const B=Q.getEngine();let o,m=!1,O=1e3;if(Array.isArray(k))for(let Z=0;Z<k.length;Z++){const i=k[Z];o=U.DDSTools.GetDDSInfo(i),Q.width=o.width,Q.height=o.height,m=(o.isRGB||o.isLuminance||o.mipmapCount>1)&&Q.generateMipMaps,B._unpackFlipY(o.isCompressed),U.DDSTools.UploadDDSLevels(B,Q,i,o,m,6,-1,Z),o.isFourCC||1!==o.mipmapCount?O=o.mipmapCount-1:B.generateMipMapsForCubemap(Q)}else{const C=k;o=U.DDSTools.GetDDSInfo(C),Q.width=o.width,Q.height=o.height,i&&(o.sphericalPolynomial=new Z.h),m=(o.isRGB||o.isLuminance||o.mipmapCount>1)&&Q.generateMipMaps,B._unpackFlipY(o.isCompressed),U.DDSTools.UploadDDSLevels(B,Q,C,o,m,6),o.isFourCC||1!==o.mipmapCount?O=o.mipmapCount-1:B.generateMipMapsForCubemap(Q,!1)}B._setCubeMapTextureParams(Q,m,O),Q.isReady=!0,Q.onLoadedObservable.notifyObservers(Q),Q.onLoadedObservable.clear(),C&&C({isDDS:!0,width:Q.width,info:o,data:k,texture:Q})}loadData(k,Q,i){const Z=U.DDSTools.GetDDSInfo(k),C=(Z.isRGB||Z.isLuminance||Z.mipmapCount>1)&&Q.generateMipMaps&&Math.max(Z.width,Z.height)>>Z.mipmapCount-1===1;i(Z.width,Z.height,C,Z.isFourCC,(()=>{U.DDSTools.UploadDDSLevels(Q.getEngine(),Q,k,Z,C,1)}))}}},11797:(k,Q,i)=>{i.d(Q,{c:()=>O});var Z=i(11298),U=i(11311),C=i(11481),B=i(11304),o=i(11348);class m{constructor(k,Q,i,Z){this.name=k,this.worldAxisForNormal=Q,this.worldAxisForFileX=i,this.worldAxisForFileY=Z}}class O{static ConvertCubeMapTextureToSphericalPolynomial(k){var Q;if(!k.isCube)return null;null===(Q=k.sk())||void 0===Q||Q.getEngine().flushFramebuffer();const i=k.getSize().width,Z=k.readPixels(0,void 0,void 0,!1),U=k.readPixels(1,void 0,void 0,!1);let C,B;k.isRenderTarget?(C=k.readPixels(3,void 0,void 0,!1),B=k.readPixels(2,void 0,void 0,!1)):(C=k.readPixels(2,void 0,void 0,!1),B=k.readPixels(3,void 0,void 0,!1));const o=k.readPixels(4,void 0,void 0,!1),m=k.readPixels(5,void 0,void 0,!1),O=k.gammaSpace;let J=0;return 1!=k.textureType&&2!=k.textureType||(J=1),new Promise((k=>{Promise.all([U,Z,C,B,o,m]).then((Q=>{let[Z,U,C,B,o,m]=Q;const G={size:i,right:U,left:Z,up:C,down:B,front:o,back:m,format:5,type:J,gammaSpace:O};k(this.ConvertCubeMapToSphericalPolynomial(G))}))}))}static _AreaElement(k,Q){return Math.atan2(k*Q,Math.sqrt(k*k+Q*Q+1))}static ConvertCubeMapToSphericalPolynomial(k){const Q=new C.d;let i=0;const Z=2/k.size,m=Z,O=.5*Z,J=O-1;for(let C=0;C<6;C++){const G=this._FileFaces[C],H=k[G.name];let e=J;const F=5===k.format?4:3;for(let C=0;C<k.size;C++){let z=J;for(let m=0;m<k.size;m++){const J=G.worldAxisForFileX.scale(z).add(G.worldAxisForFileY.scale(e)).add(G.worldAxisForNormal);J.normalize();const E=this._AreaElement(z-O,e-O)-this._AreaElement(z-O,e+O)-this._AreaElement(z+O,e-O)+this._AreaElement(z+O,e+O);let l=H[C*k.size*F+m*F+0],h=H[C*k.size*F+m*F+1],c=H[C*k.size*F+m*F+2];isNaN(l)&&(l=0),isNaN(h)&&(h=0),isNaN(c)&&(c=0),0===k.type&&(l/=255,h/=255,c/=255),k.gammaSpace&&(l=Math.pow((0,U.Clamp)(l),B.m),h=Math.pow((0,U.Clamp)(h),B.m),c=Math.pow((0,U.Clamp)(c),B.m));const f=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const k=Math.max(l,h,c);if(k>f){const Q=f/k;l*=Q,h*=Q,c*=Q}}else l=(0,U.Clamp)(l,0,f),h=(0,U.Clamp)(h,0,f),c=(0,U.Clamp)(c,0,f);const Y=new o.cQ(l,h,c);Q.addLight(J,Y,E),i+=E,z+=Z}e+=m}}const G=6*(4*Math.PI)/6/i;return Q.scaleInPlace(G),Q.convertIncidentRadianceToIrradiance(),Q.convertIrradianceToLambertianRadiance(),C.h.FromHarmonics(Q)}}O._FileFaces=[new m("right",new Z.zQ(1,0,0),new Z.zQ(0,0,-1),new Z.zQ(0,-1,0)),new m("left",new Z.zQ(-1,0,0),new Z.zQ(0,0,1),new Z.zQ(0,-1,0)),new m("up",new Z.zQ(0,1,0),new Z.zQ(1,0,0),new Z.zQ(0,0,1)),new m("down",new Z.zQ(0,-1,0),new Z.zQ(1,0,0),new Z.zQ(0,0,-1)),new m("front",new Z.zQ(0,0,1),new Z.zQ(1,0,0),new Z.zQ(0,-1,0)),new m("back",new Z.zQ(0,0,-1),new Z.zQ(-1,0,0),new Z.zQ(0,-1,0))],O.MAX_HDRI_VALUE=4096,O.PRESERVE_CLAMPED_COLORS=!1},13805:(k,Q,i)=>{i.d(Q,{DDSTools:()=>F});var Z=i(11311),U=i(11134),C=i(11797),B=i(11529);i(13030);const o=131072,m=131072;function O(k){return k.charCodeAt(0)+(k.charCodeAt(1)<<8)+(k.charCodeAt(2)<<16)+(k.charCodeAt(3)<<24)}const J=O("DXT1"),G=O("DXT3"),H=O("DXT5"),e=O("DX10");class F{static GetDDSInfo(k){const Q=new Int32Array(k.buffer,k.byteOffset,31),i=new Int32Array(k.buffer,k.byteOffset,35);let Z=1;Q[2]&o&&(Z=Math.max(1,Q[7]));const U=Q[21],C=U===e?i[32]:0;let B=0;switch(U){case 113:B=2;break;case 116:B=1;break;case e:if(10===C){B=2;break}if(2===C){B=1;break}}return{width:Q[4],height:Q[3],mipmapCount:Z,isFourCC:4===(4&Q[20]),isRGB:64===(64&Q[20]),isLuminance:(Q[20]&m)===m,isCube:512===(512&Q[28]),isCompressed:U===J||U===G||U===H,dxgiFormat:C,textureType:B}}static _GetHalfFloatAsFloatRGBAArrayBuffer(k,Q,i,Z,U,C){const o=new Float32Array(Z),m=new Uint16Array(U,i);let O=0;for(let J=0;J<Q;J++)for(let Q=0;Q<k;Q++){const i=4*(Q+J*k);o[O]=(0,B.g)(m[i]),o[O+1]=(0,B.g)(m[i+1]),o[O+2]=(0,B.g)(m[i+2]),F.StoreLODInAlphaChannel?o[O+3]=C:o[O+3]=(0,B.g)(m[i+3]),O+=4}return o}static _GetHalfFloatRGBAArrayBuffer(k,Q,i,Z,U,C){if(F.StoreLODInAlphaChannel){const o=new Uint16Array(Z),m=new Uint16Array(U,i);let O=0;for(let i=0;i<Q;i++)for(let Q=0;Q<k;Q++){const Z=4*(Q+i*k);o[O]=m[Z],o[O+1]=m[Z+1],o[O+2]=m[Z+2],o[O+3]=(0,B.p)(C),O+=4}return o}return new Uint16Array(U,i,Z)}static _GetFloatRGBAArrayBuffer(k,Q,i,Z,U,C){if(F.StoreLODInAlphaChannel){const B=new Float32Array(Z),o=new Float32Array(U,i);let m=0;for(let i=0;i<Q;i++)for(let Q=0;Q<k;Q++){const Z=4*(Q+i*k);B[m]=o[Z],B[m+1]=o[Z+1],B[m+2]=o[Z+2],B[m+3]=C,m+=4}return B}return new Float32Array(U,i,Z)}static _GetFloatAsHalfFloatRGBAArrayBuffer(k,Q,i,Z,U,C){const o=new Uint16Array(Z),m=new Float32Array(U,i);let O=0;for(let J=0;J<Q;J++)for(let Q=0;Q<k;Q++)o[O]=(0,B.p)(m[O]),o[O+1]=(0,B.p)(m[O+1]),o[O+2]=(0,B.p)(m[O+2]),F.StoreLODInAlphaChannel?o[O+3]=(0,B.p)(C):o[O+3]=(0,B.p)(m[O+3]),O+=4;return o}static _GetFloatAsUIntRGBAArrayBuffer(k,Q,i,U,C,B){const o=new Uint8Array(U),m=new Float32Array(C,i);let O=0;for(let J=0;J<Q;J++)for(let Q=0;Q<k;Q++){const i=4*(Q+J*k);o[O]=255*(0,Z.Clamp)(m[i]),o[O+1]=255*(0,Z.Clamp)(m[i+1]),o[O+2]=255*(0,Z.Clamp)(m[i+2]),F.StoreLODInAlphaChannel?o[O+3]=B:o[O+3]=255*(0,Z.Clamp)(m[i+3]),O+=4}return o}static _GetHalfFloatAsUIntRGBAArrayBuffer(k,Q,i,U,C,o){const m=new Uint8Array(U),O=new Uint16Array(C,i);let J=0;for(let G=0;G<Q;G++)for(let Q=0;Q<k;Q++){const i=4*(Q+G*k);m[J]=255*(0,Z.Clamp)((0,B.g)(O[i])),m[J+1]=255*(0,Z.Clamp)((0,B.g)(O[i+1])),m[J+2]=255*(0,Z.Clamp)((0,B.g)(O[i+2])),F.StoreLODInAlphaChannel?m[J+3]=o:m[J+3]=255*(0,Z.Clamp)((0,B.g)(O[i+3])),J+=4}return m}static _GetRGBAArrayBuffer(k,Q,i,Z,U,C,B,o,m){const O=new Uint8Array(Z),J=new Uint8Array(U,i);let G=0;for(let H=0;H<Q;H++)for(let Q=0;Q<k;Q++){const i=4*(Q+H*k);O[G]=J[i+C],O[G+1]=J[i+B],O[G+2]=J[i+o],O[G+3]=J[i+m],G+=4}return O}static _ExtractLongWordOrder(k){return 0===k||255===k||-16777216===k?0:1+F._ExtractLongWordOrder(k>>8)}static _GetRGBArrayBuffer(k,Q,i,Z,U,C,B,o){const m=new Uint8Array(Z),O=new Uint8Array(U,i);let J=0;for(let G=0;G<Q;G++)for(let Q=0;Q<k;Q++){const i=3*(Q+G*k);m[J]=O[i+C],m[J+1]=O[i+B],m[J+2]=O[i+o],J+=3}return m}static _GetLuminanceArrayBuffer(k,Q,i,Z,U){const C=new Uint8Array(Z),B=new Uint8Array(U,i);let o=0;for(let m=0;m<Q;m++)for(let Q=0;Q<k;Q++){const i=Q+m*k;C[o]=B[i],o++}return C}static UploadDDSLevels(k,Q,i,Z,B,m){let O=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,z=arguments.length>7?arguments[7]:void 0,E=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],l=null;Z.sphericalPolynomial&&(l=[]);const h=!!k.getCaps().s3tc;Q.generateMipMaps=B;const c=new Int32Array(i.buffer,i.byteOffset,31);let f,Y,y,L,s,u,a,j=0,T=0,K=1;if(542327876!==c[0])return void U.c.Error("Invalid magic number in DDS header");if(!Z.isFourCC&&!Z.isRGB&&!Z.isLuminance)return void U.c.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(Z.isCompressed&&!h)return void U.c.Error("Compressed textures are not supported on this platform.");let v=c[22];L=c[1]+4;let N=!1;if(Z.isFourCC)switch(f=c[21],f){case J:K=8,T=33777;break;case G:K=16,T=33778;break;case H:K=16,T=33779;break;case 113:N=!0,v=64;break;case 116:N=!0,v=128;break;case e:{L+=20;let k=!1;switch(Z.dxgiFormat){case 10:N=!0,v=64,k=!0;break;case 2:N=!0,v=128,k=!0;break;case 88:Z.isRGB=!0,Z.isFourCC=!1,v=32,k=!0}if(k)break}default:return void U.c.Error(["Unsupported FourCC code:",(X=f,String.fromCharCode(255&X,X>>8&255,X>>16&255,X>>24&255))])}var X;const p=F._ExtractLongWordOrder(c[23]),d=F._ExtractLongWordOrder(c[24]),b=F._ExtractLongWordOrder(c[25]),D=F._ExtractLongWordOrder(c[26]);N&&(T=k._getRGBABufferInternalSizedFormat(Z.textureType)),u=1,c[2]&o&&!1!==B&&(u=Math.max(1,c[7]));const M=z||0,W=k.getCaps();for(let U=M;U<m;U++){for(Y=c[4],y=c[3],a=0;a<u;++a){if(-1===O||O===a){const C=-1===O?a:0;if(!Z.isCompressed&&Z.isFourCC){Q.format=5,j=Y*y*4;let Z=null;if(k._badOS||k._badDesktopOS||!W.textureHalfFloat&&!W.textureFloat)128===v?(Z=F._GetFloatAsUIntRGBAArrayBuffer(Y,y,i.byteOffset+L,j,i.buffer,C),l&&0==C&&l.push(F._GetFloatRGBAArrayBuffer(Y,y,i.byteOffset+L,j,i.buffer,C))):64===v&&(Z=F._GetHalfFloatAsUIntRGBAArrayBuffer(Y,y,i.byteOffset+L,j,i.buffer,C),l&&0==C&&l.push(F._GetHalfFloatAsFloatRGBAArrayBuffer(Y,y,i.byteOffset+L,j,i.buffer,C))),Q.type=0;else{const k=W.textureFloat&&(E&&W.textureFloatLinearFiltering||!E),U=W.textureHalfFloat&&(E&&W.textureHalfFloatLinearFiltering||!E),B=(128===v||64===v&&!U)&&k?1:(64===v||128===v&&!k)&&U?2:0;let o,m=null;if(128===v)switch(B){case 1:o=F._GetFloatRGBAArrayBuffer,m=null;break;case 2:o=F._GetFloatAsHalfFloatRGBAArrayBuffer,m=F._GetFloatRGBAArrayBuffer;break;case 0:o=F._GetFloatAsUIntRGBAArrayBuffer,m=F._GetFloatRGBAArrayBuffer}else switch(B){case 1:o=F._GetHalfFloatAsFloatRGBAArrayBuffer,m=null;break;case 2:o=F._GetHalfFloatRGBAArrayBuffer,m=F._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:o=F._GetHalfFloatAsUIntRGBAArrayBuffer,m=F._GetHalfFloatAsFloatRGBAArrayBuffer}Q.type=B,Z=o(Y,y,i.byteOffset+L,j,i.buffer,C),l&&0==C&&l.push(m?m(Y,y,i.byteOffset+L,j,i.buffer,C):Z)}Z&&k._uploadDataToTextureDirectly(Q,Z,U,C)}else if(Z.isRGB)Q.type=0,24===v?(Q.format=4,j=Y*y*3,s=F._GetRGBArrayBuffer(Y,y,i.byteOffset+L,j,i.buffer,p,d,b),k._uploadDataToTextureDirectly(Q,s,U,C)):(Q.format=5,j=Y*y*4,s=F._GetRGBAArrayBuffer(Y,y,i.byteOffset+L,j,i.buffer,p,d,b,D),k._uploadDataToTextureDirectly(Q,s,U,C));else if(Z.isLuminance){const Z=k._getUnpackAlignement(),B=Y;j=Math.floor((Y+Z-1)/Z)*Z*(y-1)+B,s=F._GetLuminanceArrayBuffer(Y,y,i.byteOffset+L,j,i.buffer),Q.format=1,Q.type=0,k._uploadDataToTextureDirectly(Q,s,U,C)}else j=Math.max(4,Y)/4*Math.max(4,y)/4*K,s=new Uint8Array(i.buffer,i.byteOffset+L,j),Q.type=0,k._uploadCompressedDataToTextureDirectly(Q,T,Y,y,s,U,C)}L+=v?Y*y*(v/8):j,Y*=.5,y*=.5,Y=Math.max(1,Y),y=Math.max(1,y)}if(void 0!==z)break}l&&l.length>0?Z.sphericalPolynomial=C.c.ConvertCubeMapToSphericalPolynomial({size:c[4],right:l[0],left:l[1],up:l[2],down:l[3],front:l[4],back:l[5],format:5,type:1,gammaSpace:!1}):Z.sphericalPolynomial=void 0}}F.StoreLODInAlphaChannel=!1}}]);