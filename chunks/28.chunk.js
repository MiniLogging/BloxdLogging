"use strict";(self.fwuvyyymhp8=self.fwuvyyymhp8||[]).push([[28,29],{14006:(N,U,V)=>{var A=V(12319),t=V(12193),n=V(12232),q=V(12351),i=V(12272),z=V(12335);i.c.prototype._partialLoadFile=function(N,U,V,A){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(N,(N=>{V[U]=N,V._internalCount++,6===V._internalCount&&A(V)}),void 0,void 0,!0,((N,U)=>{t&&N&&t(N.status+" "+N.statusText,U)}))},i.c.prototype._cascadeLoadFiles=function(N,U,V){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const t=[];t._internalCount=0;for(let n=0;n<6;n++)this._partialLoadFile(V[n],n,t,U,A)},i.c.prototype._cascadeLoadImgs=function(N,U,V,A){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,n=arguments.length>5?arguments[5]:void 0;const q=[];q._internalCount=0;for(let i=0;i<6;i++)this._partialLoadImg(A[i],i,q,N,U,V,t,n)},i.c.prototype._partialLoadImg=function(N,U,V,A,t,i){let z=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,S=arguments.length>7?arguments[7]:void 0;const E=(0,q.b)();(0,n.s)(N,(N=>{V[U]=N,V._internalCount++,A&&A.removePendingData(E),6===V._internalCount&&i&&i(t,V)}),((N,U)=>{A&&A.removePendingData(E),z&&z(N,U)}),A?A.offlineProvider:null,S),A&&A.addPendingData(E)},i.c.prototype.createCubeTextureBase=function(N,U,V,n){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,S=arguments.length>6?arguments[6]:void 0,E=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,p=arguments.length>8&&void 0!==arguments[8]&&arguments[8],k=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,B=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,C=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,x=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,J=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,d=arguments.length>14&&void 0!==arguments[14]&&arguments[14],r=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const v=C||new A.d(this,7);v.isCube=!0,v.url=N,v.generateMipMaps=!n,v._lodGenerationScale=k,v._lodGenerationOffset=B,v._useSRGBBuffer=!!d&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!n),v!==C&&(v.label=N.substring(0,60)),this._doNotHandleContextLost||(v._extension=E,v._files=V,v._buffer=r);const h=N;this._transformTextureUrl&&!C&&(N=this._transformTextureUrl(N));const c=E??function(N){const U=N.split("?")[0],V=U.lastIndexOf(".");return V>-1?U.substring(V).toLowerCase():""}(N),H=(0,z.d)(c),Y=(N,U)=>{v.dispose(),i?i(N,U):N&&t.b.Warn(N)},W=(A,i)=>{N===h?A&&Y(A.status+" "+A.statusText,i):(t.b.Warn(`Failed to load ${N}, falling back to the ${h}`),this.createCubeTextureBase(h,U,V,!!n,q,Y,S,E,p,k,B,v,x,J,d,r))};if(H)H.then((A=>{const t=N=>{x&&x(v,N),A.loadCubeData(N,v,p,q,((N,U)=>{Y(N,U)}))};r?t(r):V&&6===V.length?A.supportCascades?this._cascadeLoadFiles(U,(N=>t(N.map((N=>new Uint8Array(N))))),V,Y):Y("Textures type does not support cascades."):this._loadFile(N,(N=>t(new Uint8Array(N))),void 0,void 0,!0,W)}));else{if(!V||0===V.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(U,v,((N,U)=>{J&&J(N,U)}),V,Y)}return this._internalTexturesCache.push(v),v}},14785:(N,U,V)=>{V.r(U),V.d(U,{_DDSTextureLoader:()=>n});var A=V(12559),t=V(14790);class n{constructor(){this.supportCascades=!0}loadCubeData(N,U,V,n){const q=U.getEngine();let i,z=!1,S=1e3;if(Array.isArray(N))for(let A=0;A<N.length;A++){const V=N[A];i=t.DDSTools.GetDDSInfo(V),U.width=i.width,U.height=i.height,z=(i.isRGB||i.isLuminance||i.mipmapCount>1)&&U.generateMipMaps,q._unpackFlipY(i.isCompressed),t.DDSTools.UploadDDSLevels(q,U,V,i,z,6,-1,A),i.isFourCC||1!==i.mipmapCount?S=i.mipmapCount-1:q.generateMipMapsForCubemap(U)}else{const n=N;i=t.DDSTools.GetDDSInfo(n),U.width=i.width,U.height=i.height,V&&(i.sphericalPolynomial=new A.d),z=(i.isRGB||i.isLuminance||i.mipmapCount>1)&&U.generateMipMaps,q._unpackFlipY(i.isCompressed),t.DDSTools.UploadDDSLevels(q,U,n,i,z,6),i.isFourCC||1!==i.mipmapCount?S=i.mipmapCount-1:q.generateMipMapsForCubemap(U,!1)}q._setCubeMapTextureParams(U,z,S),U.isReady=!0,U.onLoadedObservable.notifyObservers(U),U.onLoadedObservable.clear(),n&&n({isDDS:!0,width:U.width,info:i,data:N,texture:U})}loadData(N,U,V){const A=t.DDSTools.GetDDSInfo(N),n=(A.isRGB||A.isLuminance||A.mipmapCount>1)&&U.generateMipMaps&&Math.max(A.width,A.height)>>A.mipmapCount-1===1;V(A.width,A.height,n,A.isFourCC,(()=>{t.DDSTools.UploadDDSLevels(U.getEngine(),U,N,A,n,1)}))}}},12871:(N,U,V)=>{V.d(U,{d:()=>S});var A=V(12383),t=V(12395),n=V(12559),q=V(12389),i=V(12426);class z{constructor(N,U,V,A){this.name=N,this.worldAxisForNormal=U,this.worldAxisForFileX=V,this.worldAxisForFileY=A}}class S{static ConvertCubeMapTextureToSphericalPolynomial(N){var U;if(!N.isCube)return null;null===(U=N.YN())||void 0===U||U.getEngine().flushFramebuffer();const V=N.getSize().width,A=N.readPixels(0,void 0,void 0,!1),t=N.readPixels(1,void 0,void 0,!1);let n,q;N.isRenderTarget?(n=N.readPixels(3,void 0,void 0,!1),q=N.readPixels(2,void 0,void 0,!1)):(n=N.readPixels(2,void 0,void 0,!1),q=N.readPixels(3,void 0,void 0,!1));const i=N.readPixels(4,void 0,void 0,!1),z=N.readPixels(5,void 0,void 0,!1),S=N.gammaSpace;let E=0;return 1!=N.textureType&&2!=N.textureType||(E=1),new Promise((N=>{Promise.all([t,A,n,q,i,z]).then((U=>{let[A,t,n,q,i,z]=U;const p={size:V,right:t,left:A,up:n,down:q,front:i,back:z,format:5,type:E,gammaSpace:S};N(this.ConvertCubeMapToSphericalPolynomial(p))}))}))}static _AreaElement(N,U){return Math.atan2(N*U,Math.sqrt(N*N+U*U+1))}static ConvertCubeMapToSphericalPolynomial(N){const U=new n.c;let V=0;const A=2/N.size,z=A,S=.5*A,E=S-1;for(let n=0;n<6;n++){const p=this._FileFaces[n],k=N[p.name];let B=E;const C=5===N.format?4:3;for(let n=0;n<N.size;n++){let x=E;for(let z=0;z<N.size;z++){const E=p.worldAxisForFileX.scale(x).add(p.worldAxisForFileY.scale(B)).add(p.worldAxisForNormal);E.normalize();const J=this._AreaElement(x-S,B-S)-this._AreaElement(x-S,B+S)-this._AreaElement(x+S,B-S)+this._AreaElement(x+S,B+S);let d=k[n*N.size*C+z*C+0],r=k[n*N.size*C+z*C+1],v=k[n*N.size*C+z*C+2];isNaN(d)&&(d=0),isNaN(r)&&(r=0),isNaN(v)&&(v=0),0===N.type&&(d/=255,r/=255,v/=255),N.gammaSpace&&(d=Math.pow((0,t.Clamp)(d),q.n),r=Math.pow((0,t.Clamp)(r),q.n),v=Math.pow((0,t.Clamp)(v),q.n));const h=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const N=Math.max(d,r,v);if(N>h){const U=h/N;d*=U,r*=U,v*=U}}else d=(0,t.Clamp)(d,0,h),r=(0,t.Clamp)(r,0,h),v=(0,t.Clamp)(v,0,h);const c=new i.rU(d,r,v);U.addLight(E,c,J),V+=J,x+=A}B+=z}}const p=6*(4*Math.PI)/6/V;return U.scaleInPlace(p),U.convertIncidentRadianceToIrradiance(),U.convertIrradianceToLambertianRadiance(),n.d.FromHarmonics(U)}}S._FileFaces=[new z("right",new A.CU(1,0,0),new A.CU(0,0,-1),new A.CU(0,-1,0)),new z("left",new A.CU(-1,0,0),new A.CU(0,0,1),new A.CU(0,-1,0)),new z("up",new A.CU(0,1,0),new A.CU(1,0,0),new A.CU(0,0,1)),new z("down",new A.CU(0,-1,0),new A.CU(1,0,0),new A.CU(0,0,-1)),new z("front",new A.CU(0,0,1),new A.CU(1,0,0),new A.CU(0,-1,0)),new z("back",new A.CU(0,0,-1),new A.CU(-1,0,0),new A.CU(0,-1,0))],S.MAX_HDRI_VALUE=4096,S.PRESERVE_CLAMPED_COLORS=!1},14790:(N,U,V)=>{V.d(U,{DDSTools:()=>C});var A=V(12395),t=V(12193),n=V(12871),q=V(12593);V(14006);const i=131072,z=131072;function S(N){return N.charCodeAt(0)+(N.charCodeAt(1)<<8)+(N.charCodeAt(2)<<16)+(N.charCodeAt(3)<<24)}const E=S("DXT1"),p=S("DXT3"),k=S("DXT5"),B=S("DX10");class C{static GetDDSInfo(N){const U=new Int32Array(N.buffer,N.byteOffset,31),V=new Int32Array(N.buffer,N.byteOffset,35);let A=1;U[2]&i&&(A=Math.max(1,U[7]));const t=U[21],n=t===B?V[32]:0;let q=0;switch(t){case 113:q=2;break;case 116:q=1;break;case B:if(10===n){q=2;break}if(2===n){q=1;break}}return{width:U[4],height:U[3],mipmapCount:A,isFourCC:4===(4&U[20]),isRGB:64===(64&U[20]),isLuminance:(U[20]&z)===z,isCube:512===(512&U[28]),isCompressed:t===E||t===p||t===k,dxgiFormat:n,textureType:q}}static _GetHalfFloatAsFloatRGBAArrayBuffer(N,U,V,A,t,n){const i=new Float32Array(A),z=new Uint16Array(t,V);let S=0;for(let E=0;E<U;E++)for(let U=0;U<N;U++){const V=4*(U+E*N);i[S]=(0,q.c)(z[V]),i[S+1]=(0,q.c)(z[V+1]),i[S+2]=(0,q.c)(z[V+2]),C.StoreLODInAlphaChannel?i[S+3]=n:i[S+3]=(0,q.c)(z[V+3]),S+=4}return i}static _GetHalfFloatRGBAArrayBuffer(N,U,V,A,t,n){if(C.StoreLODInAlphaChannel){const i=new Uint16Array(A),z=new Uint16Array(t,V);let S=0;for(let V=0;V<U;V++)for(let U=0;U<N;U++){const A=4*(U+V*N);i[S]=z[A],i[S+1]=z[A+1],i[S+2]=z[A+2],i[S+3]=(0,q.l)(n),S+=4}return i}return new Uint16Array(t,V,A)}static _GetFloatRGBAArrayBuffer(N,U,V,A,t,n){if(C.StoreLODInAlphaChannel){const q=new Float32Array(A),i=new Float32Array(t,V);let z=0;for(let V=0;V<U;V++)for(let U=0;U<N;U++){const A=4*(U+V*N);q[z]=i[A],q[z+1]=i[A+1],q[z+2]=i[A+2],q[z+3]=n,z+=4}return q}return new Float32Array(t,V,A)}static _GetFloatAsHalfFloatRGBAArrayBuffer(N,U,V,A,t,n){const i=new Uint16Array(A),z=new Float32Array(t,V);let S=0;for(let E=0;E<U;E++)for(let U=0;U<N;U++)i[S]=(0,q.l)(z[S]),i[S+1]=(0,q.l)(z[S+1]),i[S+2]=(0,q.l)(z[S+2]),C.StoreLODInAlphaChannel?i[S+3]=(0,q.l)(n):i[S+3]=(0,q.l)(z[S+3]),S+=4;return i}static _GetFloatAsUIntRGBAArrayBuffer(N,U,V,t,n,q){const i=new Uint8Array(t),z=new Float32Array(n,V);let S=0;for(let E=0;E<U;E++)for(let U=0;U<N;U++){const V=4*(U+E*N);i[S]=255*(0,A.Clamp)(z[V]),i[S+1]=255*(0,A.Clamp)(z[V+1]),i[S+2]=255*(0,A.Clamp)(z[V+2]),C.StoreLODInAlphaChannel?i[S+3]=q:i[S+3]=255*(0,A.Clamp)(z[V+3]),S+=4}return i}static _GetHalfFloatAsUIntRGBAArrayBuffer(N,U,V,t,n,i){const z=new Uint8Array(t),S=new Uint16Array(n,V);let E=0;for(let p=0;p<U;p++)for(let U=0;U<N;U++){const V=4*(U+p*N);z[E]=255*(0,A.Clamp)((0,q.c)(S[V])),z[E+1]=255*(0,A.Clamp)((0,q.c)(S[V+1])),z[E+2]=255*(0,A.Clamp)((0,q.c)(S[V+2])),C.StoreLODInAlphaChannel?z[E+3]=i:z[E+3]=255*(0,A.Clamp)((0,q.c)(S[V+3])),E+=4}return z}static _GetRGBAArrayBuffer(N,U,V,A,t,n,q,i,z){const S=new Uint8Array(A),E=new Uint8Array(t,V);let p=0;for(let k=0;k<U;k++)for(let U=0;U<N;U++){const V=4*(U+k*N);S[p]=E[V+n],S[p+1]=E[V+q],S[p+2]=E[V+i],S[p+3]=E[V+z],p+=4}return S}static _ExtractLongWordOrder(N){return 0===N||255===N||-16777216===N?0:1+C._ExtractLongWordOrder(N>>8)}static _GetRGBArrayBuffer(N,U,V,A,t,n,q,i){const z=new Uint8Array(A),S=new Uint8Array(t,V);let E=0;for(let p=0;p<U;p++)for(let U=0;U<N;U++){const V=3*(U+p*N);z[E]=S[V+n],z[E+1]=S[V+q],z[E+2]=S[V+i],E+=3}return z}static _GetLuminanceArrayBuffer(N,U,V,A,t){const n=new Uint8Array(A),q=new Uint8Array(t,V);let i=0;for(let z=0;z<U;z++)for(let U=0;U<N;U++){const V=U+z*N;n[i]=q[V],i++}return n}static UploadDDSLevels(N,U,V,A,q,z){let S=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,x=arguments.length>7?arguments[7]:void 0,J=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],d=null;A.sphericalPolynomial&&(d=[]);const r=!!N.getCaps().s3tc;U.generateMipMaps=q;const v=new Int32Array(V.buffer,V.byteOffset,31);let h,c,H,Y,W,s,M,a=0,mN=0,w=1;if(542327876!==v[0])return void t.b.Error("Invalid magic number in DDS header");if(!A.isFourCC&&!A.isRGB&&!A.isLuminance)return void t.b.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(A.isCompressed&&!r)return void t.b.Error("Compressed textures are not supported on this platform.");let X=v[22];Y=v[1]+4;let e=!1;if(A.isFourCC)switch(h=v[21],h){case E:w=8,mN=33777;break;case p:w=16,mN=33778;break;case k:w=16,mN=33779;break;case 113:e=!0,X=64;break;case 116:e=!0,X=128;break;case B:{Y+=20;let N=!1;switch(A.dxgiFormat){case 10:e=!0,X=64,N=!0;break;case 2:e=!0,X=128,N=!0;break;case 88:A.isRGB=!0,A.isFourCC=!1,X=32,N=!0}if(N)break}default:return void t.b.Error(["Unsupported FourCC code:",(Q=h,String.fromCharCode(255&Q,Q>>8&255,Q>>16&255,Q>>24&255))])}var Q;const u=C._ExtractLongWordOrder(v[23]),L=C._ExtractLongWordOrder(v[24]),I=C._ExtractLongWordOrder(v[25]),o=C._ExtractLongWordOrder(v[26]);e&&(mN=N._getRGBABufferInternalSizedFormat(A.textureType)),s=1,v[2]&i&&!1!==q&&(s=Math.max(1,v[7]));const R=x||0,D=N.getCaps();for(let t=R;t<z;t++){for(c=v[4],H=v[3],M=0;M<s;++M){if(-1===S||S===M){const n=-1===S?M:0;if(!A.isCompressed&&A.isFourCC){U.format=5,a=c*H*4;let A=null;if(N._badOS||N._badDesktopOS||!D.textureHalfFloat&&!D.textureFloat)128===X?(A=C._GetFloatAsUIntRGBAArrayBuffer(c,H,V.byteOffset+Y,a,V.buffer,n),d&&0==n&&d.push(C._GetFloatRGBAArrayBuffer(c,H,V.byteOffset+Y,a,V.buffer,n))):64===X&&(A=C._GetHalfFloatAsUIntRGBAArrayBuffer(c,H,V.byteOffset+Y,a,V.buffer,n),d&&0==n&&d.push(C._GetHalfFloatAsFloatRGBAArrayBuffer(c,H,V.byteOffset+Y,a,V.buffer,n))),U.type=0;else{const N=D.textureFloat&&(J&&D.textureFloatLinearFiltering||!J),t=D.textureHalfFloat&&(J&&D.textureHalfFloatLinearFiltering||!J),q=(128===X||64===X&&!t)&&N?1:(64===X||128===X&&!N)&&t?2:0;let i,z=null;if(128===X)switch(q){case 1:i=C._GetFloatRGBAArrayBuffer,z=null;break;case 2:i=C._GetFloatAsHalfFloatRGBAArrayBuffer,z=C._GetFloatRGBAArrayBuffer;break;case 0:i=C._GetFloatAsUIntRGBAArrayBuffer,z=C._GetFloatRGBAArrayBuffer}else switch(q){case 1:i=C._GetHalfFloatAsFloatRGBAArrayBuffer,z=null;break;case 2:i=C._GetHalfFloatRGBAArrayBuffer,z=C._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:i=C._GetHalfFloatAsUIntRGBAArrayBuffer,z=C._GetHalfFloatAsFloatRGBAArrayBuffer}U.type=q,A=i(c,H,V.byteOffset+Y,a,V.buffer,n),d&&0==n&&d.push(z?z(c,H,V.byteOffset+Y,a,V.buffer,n):A)}A&&N._uploadDataToTextureDirectly(U,A,t,n)}else if(A.isRGB)U.type=0,24===X?(U.format=4,a=c*H*3,W=C._GetRGBArrayBuffer(c,H,V.byteOffset+Y,a,V.buffer,u,L,I),N._uploadDataToTextureDirectly(U,W,t,n)):(U.format=5,a=c*H*4,W=C._GetRGBAArrayBuffer(c,H,V.byteOffset+Y,a,V.buffer,u,L,I,o),N._uploadDataToTextureDirectly(U,W,t,n));else if(A.isLuminance){const A=N._getUnpackAlignement(),q=c;a=Math.floor((c+A-1)/A)*A*(H-1)+q,W=C._GetLuminanceArrayBuffer(c,H,V.byteOffset+Y,a,V.buffer),U.format=1,U.type=0,N._uploadDataToTextureDirectly(U,W,t,n)}else a=Math.max(4,c)/4*Math.max(4,H)/4*w,W=new Uint8Array(V.buffer,V.byteOffset+Y,a),U.type=0,N._uploadCompressedDataToTextureDirectly(U,mN,c,H,W,t,n)}Y+=X?c*H*(X/8):a,c*=.5,H*=.5,c=Math.max(1,c),H=Math.max(1,H)}if(void 0!==x)break}d&&d.length>0?A.sphericalPolynomial=n.d.ConvertCubeMapToSphericalPolynomial({size:v[4],right:d[0],left:d[1],up:d[2],down:d[3],front:d[4],back:d[5],format:5,type:1,gammaSpace:!1}):A.sphericalPolynomial=void 0}}C.StoreLODInAlphaChannel=!1}}]);