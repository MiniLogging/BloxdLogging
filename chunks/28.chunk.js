"use strict";(self.gpkvekif0vo=self.gpkvekif0vo||[]).push([[28,29],{14088:(a,O,i)=>{var H=i(12317),b=i(12209),G=i(12243),q=i(12350),Q=i(12273),k=i(12334);Q.c.prototype._partialLoadFile=function(a,O,i,H){let b=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(a,(a=>{i[O]=a,i._internalCount++,6===i._internalCount&&H(i)}),void 0,void 0,!0,((a,O)=>{b&&a&&b(a.status+" "+a.statusText,O)}))},Q.c.prototype._cascadeLoadFiles=function(a,O,i){let H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const b=[];b._internalCount=0;for(let G=0;G<6;G++)this._partialLoadFile(i[G],G,b,O,H)},Q.c.prototype._cascadeLoadImgs=function(a,O,i,H){let b=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,G=arguments.length>5?arguments[5]:void 0;const q=[];q._internalCount=0;for(let Q=0;Q<6;Q++)this._partialLoadImg(H[Q],Q,q,a,O,i,b,G)},Q.c.prototype._partialLoadImg=function(a,O,i,H,b,Q){let k=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,I=arguments.length>7?arguments[7]:void 0;const P=(0,q.c)();(0,G.u)(a,(a=>{i[O]=a,i._internalCount++,H&&H.removePendingData(P),6===i._internalCount&&Q&&Q(b,i)}),((a,O)=>{H&&H.removePendingData(P),k&&k(a,O)}),H?H.offlineProvider:null,I),H&&H.addPendingData(P)},Q.c.prototype.createCubeTextureBase=function(a,O,i,G){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,Q=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,I=arguments.length>6?arguments[6]:void 0,P=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,e=arguments.length>8&&void 0!==arguments[8]&&arguments[8],h=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,j=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,Z=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,F=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,r=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,J=arguments.length>14&&void 0!==arguments[14]&&arguments[14],ma=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const M=Z||new H.c(this,7);M.isCube=!0,M.url=a,M.generateMipMaps=!G,M._lodGenerationScale=h,M._lodGenerationOffset=j,M._useSRGBBuffer=!!J&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!G),M!==Z&&(M.label=a.substring(0,60)),this._doNotHandleContextLost||(M._extension=P,M._files=i,M._buffer=ma);const C=a;this._transformTextureUrl&&!Z&&(a=this._transformTextureUrl(a));const n=P??function(a){const O=a.split("?")[0],i=O.lastIndexOf(".");return i>-1?O.substring(i).toLowerCase():""}(a),D=(0,k.e)(n),U=(a,O)=>{M.dispose(),Q?Q(a,O):a&&b.c.Warn(a)},y=(H,Q)=>{a===C?H&&U(H.status+" "+H.statusText,Q):(b.c.Warn(`Failed to load ${a}, falling back to the ${C}`),this.createCubeTextureBase(C,O,i,!!G,q,U,I,P,e,h,j,M,F,r,J,ma))};if(D)D.then((H=>{const b=a=>{F&&F(M,a),H.loadCubeData(a,M,e,q,((a,O)=>{U(a,O)}))};ma?b(ma):i&&6===i.length?H.supportCascades?this._cascadeLoadFiles(O,(a=>b(a.map((a=>new Uint8Array(a))))),i,U):U("Textures type does not support cascades."):this._loadFile(a,(a=>b(new Uint8Array(a))),void 0,void 0,!0,y)}));else{if(!i||0===i.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(O,M,((a,O)=>{r&&r(a,O)}),i,U)}return this._internalTexturesCache.push(M),M}},14842:(a,O,i)=>{i.r(O),i.d(O,{_DDSTextureLoader:()=>G});var H=i(12593),b=i(14848);class G{constructor(){this.supportCascades=!0}loadCubeData(a,O,i,G){const q=O.getEngine();let Q,k=!1,I=1e3;if(Array.isArray(a))for(let H=0;H<a.length;H++){const i=a[H];Q=b.DDSTools.GetDDSInfo(i),O.width=Q.width,O.height=Q.height,k=(Q.isRGB||Q.isLuminance||Q.mipmapCount>1)&&O.generateMipMaps,q._unpackFlipY(Q.isCompressed),b.DDSTools.UploadDDSLevels(q,O,i,Q,k,6,-1,H),Q.isFourCC||1!==Q.mipmapCount?I=Q.mipmapCount-1:q.generateMipMapsForCubemap(O)}else{const G=a;Q=b.DDSTools.GetDDSInfo(G),O.width=Q.width,O.height=Q.height,i&&(Q.sphericalPolynomial=new H.d),k=(Q.isRGB||Q.isLuminance||Q.mipmapCount>1)&&O.generateMipMaps,q._unpackFlipY(Q.isCompressed),b.DDSTools.UploadDDSLevels(q,O,G,Q,k,6),Q.isFourCC||1!==Q.mipmapCount?I=Q.mipmapCount-1:q.generateMipMapsForCubemap(O,!1)}q._setCubeMapTextureParams(O,k,I),O.isReady=!0,O.onLoadedObservable.notifyObservers(O),O.onLoadedObservable.clear(),G&&G({isDDS:!0,width:O.width,info:Q,data:a,texture:O})}loadData(a,O,i){const H=b.DDSTools.GetDDSInfo(a),G=(H.isRGB||H.isLuminance||H.mipmapCount>1)&&O.generateMipMaps&&Math.max(H.width,H.height)>>H.mipmapCount-1===1;i(H.width,H.height,G,H.isFourCC,(()=>{b.DDSTools.UploadDDSLevels(O.getEngine(),O,a,H,G,1)}))}}},12913:(a,O,i)=>{i.d(O,{e:()=>I});var H=i(12395),b=i(12412),G=i(12593),q=i(12397),Q=i(12436);class k{constructor(a,O,i,H){this.name=a,this.worldAxisForNormal=O,this.worldAxisForFileX=i,this.worldAxisForFileY=H}}class I{static ConvertCubeMapTextureToSphericalPolynomial(a){var O;if(!a.isCube)return null;null===(O=a.Ua())||void 0===O||O.getEngine().flushFramebuffer();const i=a.getSize().width,H=a.readPixels(0,void 0,void 0,!1),b=a.readPixels(1,void 0,void 0,!1);let G,q;a.isRenderTarget?(G=a.readPixels(3,void 0,void 0,!1),q=a.readPixels(2,void 0,void 0,!1)):(G=a.readPixels(2,void 0,void 0,!1),q=a.readPixels(3,void 0,void 0,!1));const Q=a.readPixels(4,void 0,void 0,!1),k=a.readPixels(5,void 0,void 0,!1),I=a.gammaSpace;let P=0;return 1!=a.textureType&&2!=a.textureType||(P=1),new Promise((a=>{Promise.all([b,H,G,q,Q,k]).then((O=>{let[H,b,G,q,Q,k]=O;const e={size:i,right:b,left:H,up:G,down:q,front:Q,back:k,format:5,type:P,gammaSpace:I};a(this.ConvertCubeMapToSphericalPolynomial(e))}))}))}static _AreaElement(a,O){return Math.atan2(a*O,Math.sqrt(a*a+O*O+1))}static ConvertCubeMapToSphericalPolynomial(a){const O=new G.b;let i=0;const H=2/a.size,k=H,I=.5*H,P=I-1;for(let G=0;G<6;G++){const e=this._FileFaces[G],h=a[e.name];let j=P;const Z=5===a.format?4:3;for(let G=0;G<a.size;G++){let F=P;for(let k=0;k<a.size;k++){const P=e.worldAxisForFileX.scale(F).add(e.worldAxisForFileY.scale(j)).add(e.worldAxisForNormal);P.normalize();const r=this._AreaElement(F-I,j-I)-this._AreaElement(F-I,j+I)-this._AreaElement(F+I,j-I)+this._AreaElement(F+I,j+I);let J=h[G*a.size*Z+k*Z+0],ma=h[G*a.size*Z+k*Z+1],M=h[G*a.size*Z+k*Z+2];isNaN(J)&&(J=0),isNaN(ma)&&(ma=0),isNaN(M)&&(M=0),0===a.type&&(J/=255,ma/=255,M/=255),a.gammaSpace&&(J=Math.pow((0,b.Clamp)(J),q.i),ma=Math.pow((0,b.Clamp)(ma),q.i),M=Math.pow((0,b.Clamp)(M),q.i));const C=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const a=Math.max(J,ma,M);if(a>C){const O=C/a;J*=O,ma*=O,M*=O}}else J=(0,b.Clamp)(J,0,C),ma=(0,b.Clamp)(ma,0,C),M=(0,b.Clamp)(M,0,C);const n=new Q.mi(J,ma,M);O.addLight(P,n,r),i+=r,F+=H}j+=k}}const e=6*(4*Math.PI)/6/i;return O.scaleInPlace(e),O.convertIncidentRadianceToIrradiance(),O.convertIrradianceToLambertianRadiance(),G.d.FromHarmonics(O)}}I._FileFaces=[new k("right",new H.ZO(1,0,0),new H.ZO(0,0,-1),new H.ZO(0,-1,0)),new k("left",new H.ZO(-1,0,0),new H.ZO(0,0,1),new H.ZO(0,-1,0)),new k("up",new H.ZO(0,1,0),new H.ZO(1,0,0),new H.ZO(0,0,1)),new k("down",new H.ZO(0,-1,0),new H.ZO(1,0,0),new H.ZO(0,0,-1)),new k("front",new H.ZO(0,0,1),new H.ZO(1,0,0),new H.ZO(0,-1,0)),new k("back",new H.ZO(0,0,-1),new H.ZO(-1,0,0),new H.ZO(0,-1,0))],I.MAX_HDRI_VALUE=4096,I.PRESERVE_CLAMPED_COLORS=!1},14848:(a,O,i)=>{i.d(O,{DDSTools:()=>Z});var H=i(12412),b=i(12209),G=i(12913),q=i(12638);i(14088);const Q=131072,k=131072;function I(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}const P=I("DXT1"),e=I("DXT3"),h=I("DXT5"),j=I("DX10");class Z{static GetDDSInfo(a){const O=new Int32Array(a.buffer,a.byteOffset,31),i=new Int32Array(a.buffer,a.byteOffset,35);let H=1;O[2]&Q&&(H=Math.max(1,O[7]));const b=O[21],G=b===j?i[32]:0;let q=0;switch(b){case 113:q=2;break;case 116:q=1;break;case j:if(10===G){q=2;break}if(2===G){q=1;break}}return{width:O[4],height:O[3],mipmapCount:H,isFourCC:4===(4&O[20]),isRGB:64===(64&O[20]),isLuminance:(O[20]&k)===k,isCube:512===(512&O[28]),isCompressed:b===P||b===e||b===h,dxgiFormat:G,textureType:q}}static _GetHalfFloatAsFloatRGBAArrayBuffer(a,O,i,H,b,G){const Q=new Float32Array(H),k=new Uint16Array(b,i);let I=0;for(let P=0;P<O;P++)for(let O=0;O<a;O++){const i=4*(O+P*a);Q[I]=(0,q.d)(k[i]),Q[I+1]=(0,q.d)(k[i+1]),Q[I+2]=(0,q.d)(k[i+2]),Z.StoreLODInAlphaChannel?Q[I+3]=G:Q[I+3]=(0,q.d)(k[i+3]),I+=4}return Q}static _GetHalfFloatRGBAArrayBuffer(a,O,i,H,b,G){if(Z.StoreLODInAlphaChannel){const Q=new Uint16Array(H),k=new Uint16Array(b,i);let I=0;for(let i=0;i<O;i++)for(let O=0;O<a;O++){const H=4*(O+i*a);Q[I]=k[H],Q[I+1]=k[H+1],Q[I+2]=k[H+2],Q[I+3]=(0,q.m)(G),I+=4}return Q}return new Uint16Array(b,i,H)}static _GetFloatRGBAArrayBuffer(a,O,i,H,b,G){if(Z.StoreLODInAlphaChannel){const q=new Float32Array(H),Q=new Float32Array(b,i);let k=0;for(let i=0;i<O;i++)for(let O=0;O<a;O++){const H=4*(O+i*a);q[k]=Q[H],q[k+1]=Q[H+1],q[k+2]=Q[H+2],q[k+3]=G,k+=4}return q}return new Float32Array(b,i,H)}static _GetFloatAsHalfFloatRGBAArrayBuffer(a,O,i,H,b,G){const Q=new Uint16Array(H),k=new Float32Array(b,i);let I=0;for(let P=0;P<O;P++)for(let O=0;O<a;O++)Q[I]=(0,q.m)(k[I]),Q[I+1]=(0,q.m)(k[I+1]),Q[I+2]=(0,q.m)(k[I+2]),Z.StoreLODInAlphaChannel?Q[I+3]=(0,q.m)(G):Q[I+3]=(0,q.m)(k[I+3]),I+=4;return Q}static _GetFloatAsUIntRGBAArrayBuffer(a,O,i,b,G,q){const Q=new Uint8Array(b),k=new Float32Array(G,i);let I=0;for(let P=0;P<O;P++)for(let O=0;O<a;O++){const i=4*(O+P*a);Q[I]=255*(0,H.Clamp)(k[i]),Q[I+1]=255*(0,H.Clamp)(k[i+1]),Q[I+2]=255*(0,H.Clamp)(k[i+2]),Z.StoreLODInAlphaChannel?Q[I+3]=q:Q[I+3]=255*(0,H.Clamp)(k[i+3]),I+=4}return Q}static _GetHalfFloatAsUIntRGBAArrayBuffer(a,O,i,b,G,Q){const k=new Uint8Array(b),I=new Uint16Array(G,i);let P=0;for(let e=0;e<O;e++)for(let O=0;O<a;O++){const i=4*(O+e*a);k[P]=255*(0,H.Clamp)((0,q.d)(I[i])),k[P+1]=255*(0,H.Clamp)((0,q.d)(I[i+1])),k[P+2]=255*(0,H.Clamp)((0,q.d)(I[i+2])),Z.StoreLODInAlphaChannel?k[P+3]=Q:k[P+3]=255*(0,H.Clamp)((0,q.d)(I[i+3])),P+=4}return k}static _GetRGBAArrayBuffer(a,O,i,H,b,G,q,Q,k){const I=new Uint8Array(H),P=new Uint8Array(b,i);let e=0;for(let h=0;h<O;h++)for(let O=0;O<a;O++){const i=4*(O+h*a);I[e]=P[i+G],I[e+1]=P[i+q],I[e+2]=P[i+Q],I[e+3]=P[i+k],e+=4}return I}static _ExtractLongWordOrder(a){return 0===a||255===a||-16777216===a?0:1+Z._ExtractLongWordOrder(a>>8)}static _GetRGBArrayBuffer(a,O,i,H,b,G,q,Q){const k=new Uint8Array(H),I=new Uint8Array(b,i);let P=0;for(let e=0;e<O;e++)for(let O=0;O<a;O++){const i=3*(O+e*a);k[P]=I[i+G],k[P+1]=I[i+q],k[P+2]=I[i+Q],P+=3}return k}static _GetLuminanceArrayBuffer(a,O,i,H,b){const G=new Uint8Array(H),q=new Uint8Array(b,i);let Q=0;for(let k=0;k<O;k++)for(let O=0;O<a;O++){const i=O+k*a;G[Q]=q[i],Q++}return G}static UploadDDSLevels(a,O,i,H,q,k){let I=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,F=arguments.length>7?arguments[7]:void 0,r=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],J=null;H.sphericalPolynomial&&(J=[]);const ma=!!a.getCaps().s3tc;O.generateMipMaps=q;const M=new Int32Array(i.buffer,i.byteOffset,31);let C,n,D,U,y,w,K,S=0,f=0,B=1;if(542327876!==M[0])return void b.c.Error("Invalid magic number in DDS header");if(!H.isFourCC&&!H.isRGB&&!H.isLuminance)return void b.c.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(H.isCompressed&&!ma)return void b.c.Error("Compressed textures are not supported on this platform.");let T=M[22];U=M[1]+4;let A=!1;if(H.isFourCC)switch(C=M[21],C){case P:B=8,f=33777;break;case e:B=16,f=33778;break;case h:B=16,f=33779;break;case 113:A=!0,T=64;break;case 116:A=!0,T=128;break;case j:{U+=20;let a=!1;switch(H.dxgiFormat){case 10:A=!0,T=64,a=!0;break;case 2:A=!0,T=128,a=!0;break;case 88:H.isRGB=!0,H.isFourCC=!1,T=32,a=!0}if(a)break}default:return void b.c.Error(["Unsupported FourCC code:",(E=C,String.fromCharCode(255&E,E>>8&255,E>>16&255,E>>24&255))])}var E;const l=Z._ExtractLongWordOrder(M[23]),W=Z._ExtractLongWordOrder(M[24]),u=Z._ExtractLongWordOrder(M[25]),c=Z._ExtractLongWordOrder(M[26]);A&&(f=a._getRGBABufferInternalSizedFormat(H.textureType)),w=1,M[2]&Q&&!1!==q&&(w=Math.max(1,M[7]));const R=F||0,z=a.getCaps();for(let b=R;b<k;b++){for(n=M[4],D=M[3],K=0;K<w;++K){if(-1===I||I===K){const G=-1===I?K:0;if(!H.isCompressed&&H.isFourCC){O.format=5,S=n*D*4;let H=null;if(a._badOS||a._badDesktopOS||!z.textureHalfFloat&&!z.textureFloat)128===T?(H=Z._GetFloatAsUIntRGBAArrayBuffer(n,D,i.byteOffset+U,S,i.buffer,G),J&&0==G&&J.push(Z._GetFloatRGBAArrayBuffer(n,D,i.byteOffset+U,S,i.buffer,G))):64===T&&(H=Z._GetHalfFloatAsUIntRGBAArrayBuffer(n,D,i.byteOffset+U,S,i.buffer,G),J&&0==G&&J.push(Z._GetHalfFloatAsFloatRGBAArrayBuffer(n,D,i.byteOffset+U,S,i.buffer,G))),O.type=0;else{const a=z.textureFloat&&(r&&z.textureFloatLinearFiltering||!r),b=z.textureHalfFloat&&(r&&z.textureHalfFloatLinearFiltering||!r),q=(128===T||64===T&&!b)&&a?1:(64===T||128===T&&!a)&&b?2:0;let Q,k=null;if(128===T)switch(q){case 1:Q=Z._GetFloatRGBAArrayBuffer,k=null;break;case 2:Q=Z._GetFloatAsHalfFloatRGBAArrayBuffer,k=Z._GetFloatRGBAArrayBuffer;break;case 0:Q=Z._GetFloatAsUIntRGBAArrayBuffer,k=Z._GetFloatRGBAArrayBuffer}else switch(q){case 1:Q=Z._GetHalfFloatAsFloatRGBAArrayBuffer,k=null;break;case 2:Q=Z._GetHalfFloatRGBAArrayBuffer,k=Z._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:Q=Z._GetHalfFloatAsUIntRGBAArrayBuffer,k=Z._GetHalfFloatAsFloatRGBAArrayBuffer}O.type=q,H=Q(n,D,i.byteOffset+U,S,i.buffer,G),J&&0==G&&J.push(k?k(n,D,i.byteOffset+U,S,i.buffer,G):H)}H&&a._uploadDataToTextureDirectly(O,H,b,G)}else if(H.isRGB)O.type=0,24===T?(O.format=4,S=n*D*3,y=Z._GetRGBArrayBuffer(n,D,i.byteOffset+U,S,i.buffer,l,W,u),a._uploadDataToTextureDirectly(O,y,b,G)):(O.format=5,S=n*D*4,y=Z._GetRGBAArrayBuffer(n,D,i.byteOffset+U,S,i.buffer,l,W,u,c),a._uploadDataToTextureDirectly(O,y,b,G));else if(H.isLuminance){const H=a._getUnpackAlignement(),q=n;S=Math.floor((n+H-1)/H)*H*(D-1)+q,y=Z._GetLuminanceArrayBuffer(n,D,i.byteOffset+U,S,i.buffer),O.format=1,O.type=0,a._uploadDataToTextureDirectly(O,y,b,G)}else S=Math.max(4,n)/4*Math.max(4,D)/4*B,y=new Uint8Array(i.buffer,i.byteOffset+U,S),O.type=0,a._uploadCompressedDataToTextureDirectly(O,f,n,D,y,b,G)}U+=T?n*D*(T/8):S,n*=.5,D*=.5,n=Math.max(1,n),D=Math.max(1,D)}if(void 0!==F)break}J&&J.length>0?H.sphericalPolynomial=G.e.ConvertCubeMapToSphericalPolynomial({size:M[4],right:J[0],left:J[1],up:J[2],down:J[3],front:J[4],back:J[5],format:5,type:1,gammaSpace:!1}):H.sphericalPolynomial=void 0}}Z.StoreLODInAlphaChannel=!1}}]);