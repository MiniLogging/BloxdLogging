"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[28],{13330:(h,d,m)=>{m.r(d),m.d(d,{_IESTextureLoader:()=>a});var j=m(11099);function A(h){return h.split(" ").filter((h=>""!==h)).map((h=>parseFloat(h)))}function b(h,d,m){for(;m.length!==d;){const d=A(h.lines[h.index++]);m.push(...d)}}function w(h,d,m){let A=0,b=0,w=0,a=0,D=0,S=0;for(let j=0;j<h.numberOfHorizontalAngles-1;j++)if(m<h.horizontalAngles[j+1]||j===h.numberOfHorizontalAngles-2){b=j,w=h.horizontalAngles[j],a=h.horizontalAngles[j+1];break}for(let j=0;j<h.numberOfVerticalAngles-1;j++)if(d<h.verticalAngles[j+1]||j===h.numberOfVerticalAngles-2){A=j,D=h.verticalAngles[j],S=h.verticalAngles[j+1];break}const M=a-w,q=S-D;if(0===q)return 0;const E=0===M?0:(m-w)/M,I=(d-D)/q,R=0===M?b:b+1,Z=(0,j.Lerp)(h.candelaValues[b][A],h.candelaValues[R][A],E),L=(0,j.Lerp)(h.candelaValues[b][A+1],h.candelaValues[R][A+1],E);return(0,j.Lerp)(Z,L,I)}class a{constructor(){this.supportCascades=!1}loadCubeData(){throw".ies not supported in Cube."}loadData(h,d,m){const j=function(h){const d={lines:new TextDecoder("utf-8").decode(h).split("\n"),index:0},m={version:d.lines[0],candelaValues:[],horizontalAngles:[],verticalAngles:[],numberOfHorizontalAngles:0,numberOfVerticalAngles:0};for(d.index=1;d.lines.length>0&&!d.lines[d.index].includes("TILT=");)d.index++;d.lines[d.index].includes("INCLUDE"),d.index++;const j=A(d.lines[d.index++]);m.numberOfLights=j[0],m.lumensPerLamp=j[1],m.candelaMultiplier=j[2],m.numberOfVerticalAngles=j[3],m.numberOfHorizontalAngles=j[4],m.photometricType=j[5],m.unitsType=j[6],m.width=j[7],m.length=j[8],m.height=j[9];const a=A(d.lines[d.index++]);m.ballastFactor=a[0],m.fileGenerationType=a[1],m.inputWatts=a[2];for(let A=0;A<m.numberOfHorizontalAngles;A++)m.candelaValues[A]=[];b(d,m.numberOfVerticalAngles,m.verticalAngles),b(d,m.numberOfHorizontalAngles,m.horizontalAngles);for(let A=0;A<m.numberOfHorizontalAngles;A++)b(d,m.numberOfVerticalAngles,m.candelaValues[A]);let D=-1;for(let A=0;A<m.numberOfHorizontalAngles;A++)for(let h=0;h<m.numberOfVerticalAngles;h++)m.candelaValues[A][h]*=m.candelaValues[A][h]*m.candelaMultiplier*m.ballastFactor*m.fileGenerationType,D=Math.max(D,m.candelaValues[A][h]);if(D>0)for(let A=0;A<m.numberOfHorizontalAngles;A++)for(let h=0;h<m.numberOfVerticalAngles;h++)m.candelaValues[A][h]/=D;const S=180,M=360,q=new Float32Array(64800),E=m.horizontalAngles[0],I=m.horizontalAngles[m.numberOfHorizontalAngles-1];for(let A=0;A<64800;A++){let h=A%M;const d=Math.floor(A/M);I-E!==0&&(h<E||h>=I)&&(h%=2*I,h>I&&(h=2*I-h)),q[d+h*S]=w(m,d,h)}return{width:180,height:1,data:q}}(new Uint8Array(h.buffer,h.byteOffset,h.byteLength));m(j.width,j.height,!1,!1,(()=>{const h=d.getEngine();d.type=1,d.format=6,d._gammaSpace=!1,h._uploadDataToTextureDirectly(d,j.data)}))}}}}]);