"use strict";(self.ipz2em9uj1g=self.ipz2em9uj1g||[]).push([[28,29],{14237:(r,O,W)=>{var q=W(12540),Q=W(12453),C=W(12486),T=W(12565),h=W(12511),J=W(12551);h.c.prototype._partialLoadFile=function(r,O,W,q){let Q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(r,(r=>{W[O]=r,W._internalCount++,6===W._internalCount&&q(W)}),void 0,void 0,!0,((r,O)=>{Q&&r&&Q(r.status+" "+r.statusText,O)}))},h.c.prototype._cascadeLoadFiles=function(r,O,W){let q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const Q=[];Q._internalCount=0;for(let C=0;C<6;C++)this._partialLoadFile(W[C],C,Q,O,q)},h.c.prototype._cascadeLoadImgs=function(r,O,W,q){let Q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,C=arguments.length>5?arguments[5]:void 0;const T=[];T._internalCount=0;for(let h=0;h<6;h++)this._partialLoadImg(q[h],h,T,r,O,W,Q,C)},h.c.prototype._partialLoadImg=function(r,O,W,q,Q,h){let J=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,mr=arguments.length>7?arguments[7]:void 0;const d=(0,T.d)();(0,C.p)(r,(r=>{W[O]=r,W._internalCount++,q&&q.removePendingData(d),6===W._internalCount&&h&&h(Q,W)}),((r,O)=>{q&&q.removePendingData(d),J&&J(r,O)}),q?q.offlineProvider:null,mr),q&&q.addPendingData(d)},h.c.prototype.createCubeTextureBase=function(r,O,W,C){let T=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,mr=arguments.length>6?arguments[6]:void 0,d=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,v=arguments.length>8&&void 0!==arguments[8]&&arguments[8],g=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,K=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,U=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,P=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,b=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,e=arguments.length>14&&void 0!==arguments[14]&&arguments[14],Y=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const G=U||new q.e(this,7);G.isCube=!0,G.url=r,G.generateMipMaps=!C,G._lodGenerationScale=g,G._lodGenerationOffset=K,G._useSRGBBuffer=!!e&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!C),G!==U&&(G.label=r.substring(0,60)),this._doNotHandleContextLost||(G._extension=d,G._files=W,G._buffer=Y);const X=r;this._transformTextureUrl&&!U&&(r=this._transformTextureUrl(r));const S=d??function(r){const O=r.split("?")[0],W=O.lastIndexOf(".");return W>-1?O.substring(W).toLowerCase():""}(r),o=(0,J.c)(S),N=(r,O)=>{G.dispose(),h?h(r,O):r&&Q.b.Warn(r)},D=(q,h)=>{r===X?q&&N(q.status+" "+q.statusText,h):(Q.b.Warn(`Failed to load ${r}, falling back to the ${X}`),this.createCubeTextureBase(X,O,W,!!C,T,N,mr,d,v,g,K,G,P,b,e,Y))};if(o)o.then((q=>{const Q=r=>{P&&P(G,r),q.loadCubeData(r,G,v,T,((r,O)=>{N(r,O)}))};Y?Q(Y):W&&6===W.length?q.supportCascades?this._cascadeLoadFiles(O,(r=>Q(r.map((r=>new Uint8Array(r))))),W,N):N("Textures type does not support cascades."):this._loadFile(r,(r=>Q(new Uint8Array(r))),void 0,void 0,!0,D)}));else{if(!W||0===W.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(O,G,((r,O)=>{b&&b(r,O)}),W,N)}return this._internalTexturesCache.push(G),G}},15053:(r,O,W)=>{W.r(O),W.d(O,{_DDSTextureLoader:()=>C});var q=W(12768),Q=W(15056);class C{constructor(){this.supportCascades=!0}loadCubeData(r,O,W,C){const T=O.getEngine();let h,J=!1,mr=1e3;if(Array.isArray(r))for(let q=0;q<r.length;q++){const W=r[q];h=Q.DDSTools.GetDDSInfo(W),O.width=h.width,O.height=h.height,J=(h.isRGB||h.isLuminance||h.mipmapCount>1)&&O.generateMipMaps,T._unpackFlipY(h.isCompressed),Q.DDSTools.UploadDDSLevels(T,O,W,h,J,6,-1,q),h.isFourCC||1!==h.mipmapCount?mr=h.mipmapCount-1:T.generateMipMapsForCubemap(O)}else{const C=r;h=Q.DDSTools.GetDDSInfo(C),O.width=h.width,O.height=h.height,W&&(h.sphericalPolynomial=new q.g),J=(h.isRGB||h.isLuminance||h.mipmapCount>1)&&O.generateMipMaps,T._unpackFlipY(h.isCompressed),Q.DDSTools.UploadDDSLevels(T,O,C,h,J,6),h.isFourCC||1!==h.mipmapCount?mr=h.mipmapCount-1:T.generateMipMapsForCubemap(O,!1)}T._setCubeMapTextureParams(O,J,mr),O.isReady=!0,O.onLoadedObservable.notifyObservers(O),O.onLoadedObservable.clear(),C&&C({isDDS:!0,width:O.width,info:h,data:r,texture:O})}loadData(r,O,W){const q=Q.DDSTools.GetDDSInfo(r),C=(q.isRGB||q.isLuminance||q.mipmapCount>1)&&O.generateMipMaps&&Math.max(q.width,q.height)>>q.mipmapCount-1===1;W(q.width,q.height,C,q.isFourCC,(()=>{Q.DDSTools.UploadDDSLevels(O.getEngine(),O,r,q,C,1)}))}}},13054:(r,O,W)=>{W.d(O,{b:()=>mr});var q=W(12591),Q=W(12602),C=W(12768),T=W(12595),h=W(12631);class J{constructor(r,O,W,q){this.name=r,this.worldAxisForNormal=O,this.worldAxisForFileX=W,this.worldAxisForFileY=q}}class mr{static ConvertCubeMapTextureToSphericalPolynomial(r){var O;if(!r.isCube)return null;null===(O=r.Dr())||void 0===O||O.getEngine().flushFramebuffer();const W=r.getSize().width,q=r.readPixels(0,void 0,void 0,!1),Q=r.readPixels(1,void 0,void 0,!1);let C,T;r.isRenderTarget?(C=r.readPixels(3,void 0,void 0,!1),T=r.readPixels(2,void 0,void 0,!1)):(C=r.readPixels(2,void 0,void 0,!1),T=r.readPixels(3,void 0,void 0,!1));const h=r.readPixels(4,void 0,void 0,!1),J=r.readPixels(5,void 0,void 0,!1),mr=r.gammaSpace;let d=0;return 1!=r.textureType&&2!=r.textureType||(d=1),new Promise((r=>{Promise.all([Q,q,C,T,h,J]).then((O=>{let[q,Q,C,T,h,J]=O;const v={size:W,right:Q,left:q,up:C,down:T,front:h,back:J,format:5,type:d,gammaSpace:mr};r(this.ConvertCubeMapToSphericalPolynomial(v))}))}))}static _AreaElement(r,O){return Math.atan2(r*O,Math.sqrt(r*r+O*O+1))}static ConvertCubeMapToSphericalPolynomial(r){const O=new C.e;let W=0;const q=2/r.size,J=q,mr=.5*q,d=mr-1;for(let C=0;C<6;C++){const v=this._FileFaces[C],g=r[v.name];let K=d;const U=5===r.format?4:3;for(let C=0;C<r.size;C++){let P=d;for(let J=0;J<r.size;J++){const d=v.worldAxisForFileX.scale(P).add(v.worldAxisForFileY.scale(K)).add(v.worldAxisForNormal);d.normalize();const b=this._AreaElement(P-mr,K-mr)-this._AreaElement(P-mr,K+mr)-this._AreaElement(P+mr,K-mr)+this._AreaElement(P+mr,K+mr);let e=g[C*r.size*U+J*U+0],Y=g[C*r.size*U+J*U+1],G=g[C*r.size*U+J*U+2];isNaN(e)&&(e=0),isNaN(Y)&&(Y=0),isNaN(G)&&(G=0),0===r.type&&(e/=255,Y/=255,G/=255),r.gammaSpace&&(e=Math.pow((0,Q.Clamp)(e),T.i),Y=Math.pow((0,Q.Clamp)(Y),T.i),G=Math.pow((0,Q.Clamp)(G),T.i));const X=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const r=Math.max(e,Y,G);if(r>X){const O=X/r;e*=O,Y*=O,G*=O}}else e=(0,Q.Clamp)(e,0,X),Y=(0,Q.Clamp)(Y,0,X),G=(0,Q.Clamp)(G,0,X);const S=new h.SO(e,Y,G);O.addLight(d,S,b),W+=b,P+=q}K+=J}}const v=6*(4*Math.PI)/6/W;return O.scaleInPlace(v),O.convertIncidentRadianceToIrradiance(),O.convertIrradianceToLambertianRadiance(),C.g.FromHarmonics(O)}}mr._FileFaces=[new J("right",new q.eO(1,0,0),new q.eO(0,0,-1),new q.eO(0,-1,0)),new J("left",new q.eO(-1,0,0),new q.eO(0,0,1),new q.eO(0,-1,0)),new J("up",new q.eO(0,1,0),new q.eO(1,0,0),new q.eO(0,0,1)),new J("down",new q.eO(0,-1,0),new q.eO(1,0,0),new q.eO(0,0,-1)),new J("front",new q.eO(0,0,1),new q.eO(1,0,0),new q.eO(0,-1,0)),new J("back",new q.eO(0,0,-1),new q.eO(-1,0,0),new q.eO(0,-1,0))],mr.MAX_HDRI_VALUE=4096,mr.PRESERVE_CLAMPED_COLORS=!1},15056:(r,O,W)=>{W.d(O,{DDSTools:()=>U});var q=W(12602),Q=W(12453),C=W(13054),T=W(12796);W(14237);const h=131072,J=131072;function mr(r){return r.charCodeAt(0)+(r.charCodeAt(1)<<8)+(r.charCodeAt(2)<<16)+(r.charCodeAt(3)<<24)}const d=mr("DXT1"),v=mr("DXT3"),g=mr("DXT5"),K=mr("DX10");class U{static GetDDSInfo(r){const O=new Int32Array(r.buffer,r.byteOffset,31),W=new Int32Array(r.buffer,r.byteOffset,35);let q=1;O[2]&h&&(q=Math.max(1,O[7]));const Q=O[21],C=Q===K?W[32]:0;let T=0;switch(Q){case 113:T=2;break;case 116:T=1;break;case K:if(10===C){T=2;break}if(2===C){T=1;break}}return{width:O[4],height:O[3],mipmapCount:q,isFourCC:4===(4&O[20]),isRGB:64===(64&O[20]),isLuminance:(O[20]&J)===J,isCube:512===(512&O[28]),isCompressed:Q===d||Q===v||Q===g,dxgiFormat:C,textureType:T}}static _GetHalfFloatAsFloatRGBAArrayBuffer(r,O,W,q,Q,C){const h=new Float32Array(q),J=new Uint16Array(Q,W);let mr=0;for(let d=0;d<O;d++)for(let O=0;O<r;O++){const W=4*(O+d*r);h[mr]=(0,T.c)(J[W]),h[mr+1]=(0,T.c)(J[W+1]),h[mr+2]=(0,T.c)(J[W+2]),U.StoreLODInAlphaChannel?h[mr+3]=C:h[mr+3]=(0,T.c)(J[W+3]),mr+=4}return h}static _GetHalfFloatRGBAArrayBuffer(r,O,W,q,Q,C){if(U.StoreLODInAlphaChannel){const h=new Uint16Array(q),J=new Uint16Array(Q,W);let mr=0;for(let W=0;W<O;W++)for(let O=0;O<r;O++){const q=4*(O+W*r);h[mr]=J[q],h[mr+1]=J[q+1],h[mr+2]=J[q+2],h[mr+3]=(0,T.l)(C),mr+=4}return h}return new Uint16Array(Q,W,q)}static _GetFloatRGBAArrayBuffer(r,O,W,q,Q,C){if(U.StoreLODInAlphaChannel){const T=new Float32Array(q),h=new Float32Array(Q,W);let J=0;for(let W=0;W<O;W++)for(let O=0;O<r;O++){const q=4*(O+W*r);T[J]=h[q],T[J+1]=h[q+1],T[J+2]=h[q+2],T[J+3]=C,J+=4}return T}return new Float32Array(Q,W,q)}static _GetFloatAsHalfFloatRGBAArrayBuffer(r,O,W,q,Q,C){const h=new Uint16Array(q),J=new Float32Array(Q,W);let mr=0;for(let d=0;d<O;d++)for(let O=0;O<r;O++)h[mr]=(0,T.l)(J[mr]),h[mr+1]=(0,T.l)(J[mr+1]),h[mr+2]=(0,T.l)(J[mr+2]),U.StoreLODInAlphaChannel?h[mr+3]=(0,T.l)(C):h[mr+3]=(0,T.l)(J[mr+3]),mr+=4;return h}static _GetFloatAsUIntRGBAArrayBuffer(r,O,W,Q,C,T){const h=new Uint8Array(Q),J=new Float32Array(C,W);let mr=0;for(let d=0;d<O;d++)for(let O=0;O<r;O++){const W=4*(O+d*r);h[mr]=255*(0,q.Clamp)(J[W]),h[mr+1]=255*(0,q.Clamp)(J[W+1]),h[mr+2]=255*(0,q.Clamp)(J[W+2]),U.StoreLODInAlphaChannel?h[mr+3]=T:h[mr+3]=255*(0,q.Clamp)(J[W+3]),mr+=4}return h}static _GetHalfFloatAsUIntRGBAArrayBuffer(r,O,W,Q,C,h){const J=new Uint8Array(Q),mr=new Uint16Array(C,W);let d=0;for(let v=0;v<O;v++)for(let O=0;O<r;O++){const W=4*(O+v*r);J[d]=255*(0,q.Clamp)((0,T.c)(mr[W])),J[d+1]=255*(0,q.Clamp)((0,T.c)(mr[W+1])),J[d+2]=255*(0,q.Clamp)((0,T.c)(mr[W+2])),U.StoreLODInAlphaChannel?J[d+3]=h:J[d+3]=255*(0,q.Clamp)((0,T.c)(mr[W+3])),d+=4}return J}static _GetRGBAArrayBuffer(r,O,W,q,Q,C,T,h,J){const mr=new Uint8Array(q),d=new Uint8Array(Q,W);let v=0;for(let g=0;g<O;g++)for(let O=0;O<r;O++){const W=4*(O+g*r);mr[v]=d[W+C],mr[v+1]=d[W+T],mr[v+2]=d[W+h],mr[v+3]=d[W+J],v+=4}return mr}static _ExtractLongWordOrder(r){return 0===r||255===r||-16777216===r?0:1+U._ExtractLongWordOrder(r>>8)}static _GetRGBArrayBuffer(r,O,W,q,Q,C,T,h){const J=new Uint8Array(q),mr=new Uint8Array(Q,W);let d=0;for(let v=0;v<O;v++)for(let O=0;O<r;O++){const W=3*(O+v*r);J[d]=mr[W+C],J[d+1]=mr[W+T],J[d+2]=mr[W+h],d+=3}return J}static _GetLuminanceArrayBuffer(r,O,W,q,Q){const C=new Uint8Array(q),T=new Uint8Array(Q,W);let h=0;for(let J=0;J<O;J++)for(let O=0;O<r;O++){const W=O+J*r;C[h]=T[W],h++}return C}static UploadDDSLevels(r,O,W,q,T,J){let mr=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,P=arguments.length>7?arguments[7]:void 0,b=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],e=null;q.sphericalPolynomial&&(e=[]);const Y=!!r.getCaps().s3tc;O.generateMipMaps=T;const G=new Int32Array(W.buffer,W.byteOffset,31);let X,S,o,N,D,p,z,L=0,M=0,k=1;if(542327876!==G[0])return void Q.b.Error("Invalid magic number in DDS header");if(!q.isFourCC&&!q.isRGB&&!q.isLuminance)return void Q.b.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(q.isCompressed&&!Y)return void Q.b.Error("Compressed textures are not supported on this platform.");let s=G[22];N=G[1]+4;let B=!1;if(q.isFourCC)switch(X=G[21],X){case d:k=8,M=33777;break;case v:k=16,M=33778;break;case g:k=16,M=33779;break;case 113:B=!0,s=64;break;case 116:B=!0,s=128;break;case K:{N+=20;let r=!1;switch(q.dxgiFormat){case 10:B=!0,s=64,r=!0;break;case 2:B=!0,s=128,r=!0;break;case 88:q.isRGB=!0,q.isFourCC=!1,s=32,r=!0}if(r)break}default:return void Q.b.Error(["Unsupported FourCC code:",(Z=X,String.fromCharCode(255&Z,Z>>8&255,Z>>16&255,Z>>24&255))])}var Z;const E=U._ExtractLongWordOrder(G[23]),R=U._ExtractLongWordOrder(G[24]),V=U._ExtractLongWordOrder(G[25]),a=U._ExtractLongWordOrder(G[26]);B&&(M=r._getRGBABufferInternalSizedFormat(q.textureType)),p=1,G[2]&h&&!1!==T&&(p=Math.max(1,G[7]));const t=P||0,i=r.getCaps();for(let Q=t;Q<J;Q++){for(S=G[4],o=G[3],z=0;z<p;++z){if(-1===mr||mr===z){const C=-1===mr?z:0;if(!q.isCompressed&&q.isFourCC){O.format=5,L=S*o*4;let q=null;if(r._badOS||r._badDesktopOS||!i.textureHalfFloat&&!i.textureFloat)128===s?(q=U._GetFloatAsUIntRGBAArrayBuffer(S,o,W.byteOffset+N,L,W.buffer,C),e&&0==C&&e.push(U._GetFloatRGBAArrayBuffer(S,o,W.byteOffset+N,L,W.buffer,C))):64===s&&(q=U._GetHalfFloatAsUIntRGBAArrayBuffer(S,o,W.byteOffset+N,L,W.buffer,C),e&&0==C&&e.push(U._GetHalfFloatAsFloatRGBAArrayBuffer(S,o,W.byteOffset+N,L,W.buffer,C))),O.type=0;else{const r=i.textureFloat&&(b&&i.textureFloatLinearFiltering||!b),Q=i.textureHalfFloat&&(b&&i.textureHalfFloatLinearFiltering||!b),T=(128===s||64===s&&!Q)&&r?1:(64===s||128===s&&!r)&&Q?2:0;let h,J=null;if(128===s)switch(T){case 1:h=U._GetFloatRGBAArrayBuffer,J=null;break;case 2:h=U._GetFloatAsHalfFloatRGBAArrayBuffer,J=U._GetFloatRGBAArrayBuffer;break;case 0:h=U._GetFloatAsUIntRGBAArrayBuffer,J=U._GetFloatRGBAArrayBuffer}else switch(T){case 1:h=U._GetHalfFloatAsFloatRGBAArrayBuffer,J=null;break;case 2:h=U._GetHalfFloatRGBAArrayBuffer,J=U._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:h=U._GetHalfFloatAsUIntRGBAArrayBuffer,J=U._GetHalfFloatAsFloatRGBAArrayBuffer}O.type=T,q=h(S,o,W.byteOffset+N,L,W.buffer,C),e&&0==C&&e.push(J?J(S,o,W.byteOffset+N,L,W.buffer,C):q)}q&&r._uploadDataToTextureDirectly(O,q,Q,C)}else if(q.isRGB)O.type=0,24===s?(O.format=4,L=S*o*3,D=U._GetRGBArrayBuffer(S,o,W.byteOffset+N,L,W.buffer,E,R,V),r._uploadDataToTextureDirectly(O,D,Q,C)):(O.format=5,L=S*o*4,D=U._GetRGBAArrayBuffer(S,o,W.byteOffset+N,L,W.buffer,E,R,V,a),r._uploadDataToTextureDirectly(O,D,Q,C));else if(q.isLuminance){const q=r._getUnpackAlignement(),T=S;L=Math.floor((S+q-1)/q)*q*(o-1)+T,D=U._GetLuminanceArrayBuffer(S,o,W.byteOffset+N,L,W.buffer),O.format=1,O.type=0,r._uploadDataToTextureDirectly(O,D,Q,C)}else L=Math.max(4,S)/4*Math.max(4,o)/4*k,D=new Uint8Array(W.buffer,W.byteOffset+N,L),O.type=0,r._uploadCompressedDataToTextureDirectly(O,M,S,o,D,Q,C)}N+=s?S*o*(s/8):L,S*=.5,o*=.5,S=Math.max(1,S),o=Math.max(1,o)}if(void 0!==P)break}e&&e.length>0?q.sphericalPolynomial=C.b.ConvertCubeMapToSphericalPolynomial({size:G[4],right:e[0],left:e[1],up:e[2],down:e[3],front:e[4],back:e[5],format:5,type:1,gammaSpace:!1}):q.sphericalPolynomial=void 0}}U.StoreLODInAlphaChannel=!1}}]);