"use strict";(self["5dou0t7wntc"]=self["5dou0t7wntc"]||[]).push([[28,29],{13415:(K,O,F)=>{var f=F(11636),r=F(11534),l=F(11565),q=F(11664),J=F(11597),c=F(11649);J.c.prototype._partialLoadFile=function(K,O,F,f){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(K,(K=>{F[O]=K,F._internalCount++,6===F._internalCount&&f(F)}),void 0,void 0,!0,((K,O)=>{r&&K&&r(K.status+" "+K.statusText,O)}))},J.c.prototype._cascadeLoadFiles=function(K,O,F){let f=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=[];r._internalCount=0;for(let l=0;l<6;l++)this._partialLoadFile(F[l],l,r,O,f)},J.c.prototype._cascadeLoadImgs=function(K,O,F,f){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,l=arguments.length>5?arguments[5]:void 0;const q=[];q._internalCount=0;for(let J=0;J<6;J++)this._partialLoadImg(f[J],J,q,K,O,F,r,l)},J.c.prototype._partialLoadImg=function(K,O,F,f,r,J){let c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,E=arguments.length>7?arguments[7]:void 0;const M=(0,q.d)();(0,l.z)(K,(K=>{F[O]=K,F._internalCount++,f&&f.removePendingData(M),6===F._internalCount&&J&&J(r,F)}),((K,O)=>{f&&f.removePendingData(M),c&&c(K,O)}),f?f.offlineProvider:null,E),f&&f.addPendingData(M)},J.c.prototype.createCubeTextureBase=function(K,O,F,l){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,J=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,E=arguments.length>6?arguments[6]:void 0,M=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,t=arguments.length>8&&void 0!==arguments[8]&&arguments[8],j=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,X=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,u=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,T=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,o=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,k=arguments.length>14&&void 0!==arguments[14]&&arguments[14],N=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const Z=u||new f.e(this,7);Z.isCube=!0,Z.url=K,Z.generateMipMaps=!l,Z._lodGenerationScale=j,Z._lodGenerationOffset=X,Z._useSRGBBuffer=!!k&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!l),Z!==u&&(Z.label=K.substring(0,60)),this._doNotHandleContextLost||(Z._extension=M,Z._files=F,Z._buffer=N);const L=K;this._transformTextureUrl&&!u&&(K=this._transformTextureUrl(K));const d=M??function(K){const O=K.split("?")[0],F=O.lastIndexOf(".");return F>-1?O.substring(F).toLowerCase():""}(K),a=(0,c.d)(d),g=(K,O)=>{Z.dispose(),J?J(K,O):K&&r.c.Warn(K)},H=(f,J)=>{K===L?f&&g(f.status+" "+f.statusText,J):(r.c.Warn(`Failed to load ${K}, falling back to the ${L}`),this.createCubeTextureBase(L,O,F,!!l,q,g,E,M,t,j,X,Z,T,o,k,N))};if(a)a.then((f=>{const r=K=>{T&&T(Z,K),f.loadCubeData(K,Z,t,q,((K,O)=>{g(K,O)}))};N?r(N):F&&6===F.length?f.supportCascades?this._cascadeLoadFiles(O,(K=>r(K.map((K=>new Uint8Array(K))))),F,g):g("Textures type does not support cascades."):this._loadFile(K,(K=>r(new Uint8Array(K))),void 0,void 0,!0,H)}));else{if(!F||0===F.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(O,Z,((K,O)=>{o&&o(K,O)}),F,g)}return this._internalTexturesCache.push(Z),Z}},14160:(K,O,F)=>{F.r(O),F.d(O,{_DDSTextureLoader:()=>l});var f=F(11924),r=F(14165);class l{constructor(){this.supportCascades=!0}loadCubeData(K,O,F,l){const q=O.getEngine();let J,c=!1,E=1e3;if(Array.isArray(K))for(let f=0;f<K.length;f++){const F=K[f];J=r.DDSTools.GetDDSInfo(F),O.width=J.width,O.height=J.height,c=(J.isRGB||J.isLuminance||J.mipmapCount>1)&&O.generateMipMaps,q._unpackFlipY(J.isCompressed),r.DDSTools.UploadDDSLevels(q,O,F,J,c,6,-1,f),J.isFourCC||1!==J.mipmapCount?E=J.mipmapCount-1:q.generateMipMapsForCubemap(O)}else{const l=K;J=r.DDSTools.GetDDSInfo(l),O.width=J.width,O.height=J.height,F&&(J.sphericalPolynomial=new f.e),c=(J.isRGB||J.isLuminance||J.mipmapCount>1)&&O.generateMipMaps,q._unpackFlipY(J.isCompressed),r.DDSTools.UploadDDSLevels(q,O,l,J,c,6),J.isFourCC||1!==J.mipmapCount?E=J.mipmapCount-1:q.generateMipMapsForCubemap(O,!1)}q._setCubeMapTextureParams(O,c,E),O.isReady=!0,O.onLoadedObservable.notifyObservers(O),O.onLoadedObservable.clear(),l&&l({isDDS:!0,width:O.width,info:J,data:K,texture:O})}loadData(K,O,F){const f=r.DDSTools.GetDDSInfo(K),l=(f.isRGB||f.isLuminance||f.mipmapCount>1)&&O.generateMipMaps&&Math.max(f.width,f.height)>>f.mipmapCount-1===1;F(f.width,f.height,l,f.isFourCC,(()=>{r.DDSTools.UploadDDSLevels(O.getEngine(),O,K,f,l,1)}))}}},12257:(K,O,F)=>{F.d(O,{d:()=>E});var f=F(11713),r=F(11734),l=F(11924),q=F(11721),J=F(11764);class c{constructor(K,O,F,f){this.name=K,this.worldAxisForNormal=O,this.worldAxisForFileX=F,this.worldAxisForFileY=f}}class E{static ConvertCubeMapTextureToSphericalPolynomial(K){var O;if(!K.isCube)return null;null===(O=K.HK())||void 0===O||O.getEngine().flushFramebuffer();const F=K.getSize().width,f=K.readPixels(0,void 0,void 0,!1),r=K.readPixels(1,void 0,void 0,!1);let l,q;K.isRenderTarget?(l=K.readPixels(3,void 0,void 0,!1),q=K.readPixels(2,void 0,void 0,!1)):(l=K.readPixels(2,void 0,void 0,!1),q=K.readPixels(3,void 0,void 0,!1));const J=K.readPixels(4,void 0,void 0,!1),c=K.readPixels(5,void 0,void 0,!1),E=K.gammaSpace;let M=0;return 1!=K.textureType&&2!=K.textureType||(M=1),new Promise((K=>{Promise.all([r,f,l,q,J,c]).then((O=>{let[f,r,l,q,J,c]=O;const t={size:F,right:r,left:f,up:l,down:q,front:J,back:c,format:5,type:M,gammaSpace:E};K(this.ConvertCubeMapToSphericalPolynomial(t))}))}))}static _AreaElement(K,O){return Math.atan2(K*O,Math.sqrt(K*K+O*O+1))}static ConvertCubeMapToSphericalPolynomial(K){const O=new l.b;let F=0;const f=2/K.size,c=f,E=.5*f,M=E-1;for(let l=0;l<6;l++){const t=this._FileFaces[l],j=K[t.name];let X=M;const u=5===K.format?4:3;for(let l=0;l<K.size;l++){let T=M;for(let c=0;c<K.size;c++){const M=t.worldAxisForFileX.scale(T).add(t.worldAxisForFileY.scale(X)).add(t.worldAxisForNormal);M.normalize();const o=this._AreaElement(T-E,X-E)-this._AreaElement(T-E,X+E)-this._AreaElement(T+E,X-E)+this._AreaElement(T+E,X+E);let k=j[l*K.size*u+c*u+0],N=j[l*K.size*u+c*u+1],Z=j[l*K.size*u+c*u+2];isNaN(k)&&(k=0),isNaN(N)&&(N=0),isNaN(Z)&&(Z=0),0===K.type&&(k/=255,N/=255,Z/=255),K.gammaSpace&&(k=Math.pow((0,r.Clamp)(k),q.o),N=Math.pow((0,r.Clamp)(N),q.o),Z=Math.pow((0,r.Clamp)(Z),q.o));const L=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const K=Math.max(k,N,Z);if(K>L){const O=L/K;k*=O,N*=O,Z*=O}}else k=(0,r.Clamp)(k,0,L),N=(0,r.Clamp)(N,0,L),Z=(0,r.Clamp)(Z,0,L);const d=new J.ZO(k,N,Z);O.addLight(M,d,o),F+=o,T+=f}X+=c}}const t=6*(4*Math.PI)/6/F;return O.scaleInPlace(t),O.convertIncidentRadianceToIrradiance(),O.convertIrradianceToLambertianRadiance(),l.e.FromHarmonics(O)}}E._FileFaces=[new c("right",new f.TO(1,0,0),new f.TO(0,0,-1),new f.TO(0,-1,0)),new c("left",new f.TO(-1,0,0),new f.TO(0,0,1),new f.TO(0,-1,0)),new c("up",new f.TO(0,1,0),new f.TO(1,0,0),new f.TO(0,0,1)),new c("down",new f.TO(0,-1,0),new f.TO(1,0,0),new f.TO(0,0,-1)),new c("front",new f.TO(0,0,1),new f.TO(1,0,0),new f.TO(0,-1,0)),new c("back",new f.TO(0,0,-1),new f.TO(-1,0,0),new f.TO(0,-1,0))],E.MAX_HDRI_VALUE=4096,E.PRESERVE_CLAMPED_COLORS=!1},14165:(K,O,F)=>{F.d(O,{DDSTools:()=>u});var f=F(11734),r=F(11534),l=F(12257),q=F(11959);F(13415);const J=131072,c=131072;function E(K){return K.charCodeAt(0)+(K.charCodeAt(1)<<8)+(K.charCodeAt(2)<<16)+(K.charCodeAt(3)<<24)}const M=E("DXT1"),t=E("DXT3"),j=E("DXT5"),X=E("DX10");class u{static GetDDSInfo(K){const O=new Int32Array(K.buffer,K.byteOffset,31),F=new Int32Array(K.buffer,K.byteOffset,35);let f=1;O[2]&J&&(f=Math.max(1,O[7]));const r=O[21],l=r===X?F[32]:0;let q=0;switch(r){case 113:q=2;break;case 116:q=1;break;case X:if(10===l){q=2;break}if(2===l){q=1;break}}return{width:O[4],height:O[3],mipmapCount:f,isFourCC:4===(4&O[20]),isRGB:64===(64&O[20]),isLuminance:(O[20]&c)===c,isCube:512===(512&O[28]),isCompressed:r===M||r===t||r===j,dxgiFormat:l,textureType:q}}static _GetHalfFloatAsFloatRGBAArrayBuffer(K,O,F,f,r,l){const J=new Float32Array(f),c=new Uint16Array(r,F);let E=0;for(let M=0;M<O;M++)for(let O=0;O<K;O++){const F=4*(O+M*K);J[E]=(0,q.e)(c[F]),J[E+1]=(0,q.e)(c[F+1]),J[E+2]=(0,q.e)(c[F+2]),u.StoreLODInAlphaChannel?J[E+3]=l:J[E+3]=(0,q.e)(c[F+3]),E+=4}return J}static _GetHalfFloatRGBAArrayBuffer(K,O,F,f,r,l){if(u.StoreLODInAlphaChannel){const J=new Uint16Array(f),c=new Uint16Array(r,F);let E=0;for(let F=0;F<O;F++)for(let O=0;O<K;O++){const f=4*(O+F*K);J[E]=c[f],J[E+1]=c[f+1],J[E+2]=c[f+2],J[E+3]=(0,q.n)(l),E+=4}return J}return new Uint16Array(r,F,f)}static _GetFloatRGBAArrayBuffer(K,O,F,f,r,l){if(u.StoreLODInAlphaChannel){const q=new Float32Array(f),J=new Float32Array(r,F);let c=0;for(let F=0;F<O;F++)for(let O=0;O<K;O++){const f=4*(O+F*K);q[c]=J[f],q[c+1]=J[f+1],q[c+2]=J[f+2],q[c+3]=l,c+=4}return q}return new Float32Array(r,F,f)}static _GetFloatAsHalfFloatRGBAArrayBuffer(K,O,F,f,r,l){const J=new Uint16Array(f),c=new Float32Array(r,F);let E=0;for(let M=0;M<O;M++)for(let O=0;O<K;O++)J[E]=(0,q.n)(c[E]),J[E+1]=(0,q.n)(c[E+1]),J[E+2]=(0,q.n)(c[E+2]),u.StoreLODInAlphaChannel?J[E+3]=(0,q.n)(l):J[E+3]=(0,q.n)(c[E+3]),E+=4;return J}static _GetFloatAsUIntRGBAArrayBuffer(K,O,F,r,l,q){const J=new Uint8Array(r),c=new Float32Array(l,F);let E=0;for(let M=0;M<O;M++)for(let O=0;O<K;O++){const F=4*(O+M*K);J[E]=255*(0,f.Clamp)(c[F]),J[E+1]=255*(0,f.Clamp)(c[F+1]),J[E+2]=255*(0,f.Clamp)(c[F+2]),u.StoreLODInAlphaChannel?J[E+3]=q:J[E+3]=255*(0,f.Clamp)(c[F+3]),E+=4}return J}static _GetHalfFloatAsUIntRGBAArrayBuffer(K,O,F,r,l,J){const c=new Uint8Array(r),E=new Uint16Array(l,F);let M=0;for(let t=0;t<O;t++)for(let O=0;O<K;O++){const F=4*(O+t*K);c[M]=255*(0,f.Clamp)((0,q.e)(E[F])),c[M+1]=255*(0,f.Clamp)((0,q.e)(E[F+1])),c[M+2]=255*(0,f.Clamp)((0,q.e)(E[F+2])),u.StoreLODInAlphaChannel?c[M+3]=J:c[M+3]=255*(0,f.Clamp)((0,q.e)(E[F+3])),M+=4}return c}static _GetRGBAArrayBuffer(K,O,F,f,r,l,q,J,c){const E=new Uint8Array(f),M=new Uint8Array(r,F);let t=0;for(let j=0;j<O;j++)for(let O=0;O<K;O++){const F=4*(O+j*K);E[t]=M[F+l],E[t+1]=M[F+q],E[t+2]=M[F+J],E[t+3]=M[F+c],t+=4}return E}static _ExtractLongWordOrder(K){return 0===K||255===K||-16777216===K?0:1+u._ExtractLongWordOrder(K>>8)}static _GetRGBArrayBuffer(K,O,F,f,r,l,q,J){const c=new Uint8Array(f),E=new Uint8Array(r,F);let M=0;for(let t=0;t<O;t++)for(let O=0;O<K;O++){const F=3*(O+t*K);c[M]=E[F+l],c[M+1]=E[F+q],c[M+2]=E[F+J],M+=3}return c}static _GetLuminanceArrayBuffer(K,O,F,f,r){const l=new Uint8Array(f),q=new Uint8Array(r,F);let J=0;for(let c=0;c<O;c++)for(let O=0;O<K;O++){const F=O+c*K;l[J]=q[F],J++}return l}static UploadDDSLevels(K,O,F,f,q,c){let E=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,T=arguments.length>7?arguments[7]:void 0,o=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],k=null;f.sphericalPolynomial&&(k=[]);const N=!!K.getCaps().s3tc;O.generateMipMaps=q;const Z=new Int32Array(F.buffer,F.byteOffset,31);let L,d,a,g,H,e,W,p=0,y=0,A=1;if(542327876!==Z[0])return void r.c.Error("Invalid magic number in DDS header");if(!f.isFourCC&&!f.isRGB&&!f.isLuminance)return void r.c.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(f.isCompressed&&!N)return void r.c.Error("Compressed textures are not supported on this platform.");let Q=Z[22];g=Z[1]+4;let R=!1;if(f.isFourCC)switch(L=Z[21],L){case M:A=8,y=33777;break;case t:A=16,y=33778;break;case j:A=16,y=33779;break;case 113:R=!0,Q=64;break;case 116:R=!0,Q=128;break;case X:{g+=20;let K=!1;switch(f.dxgiFormat){case 10:R=!0,Q=64,K=!0;break;case 2:R=!0,Q=128,K=!0;break;case 88:f.isRGB=!0,f.isFourCC=!1,Q=32,K=!0}if(K)break}default:return void r.c.Error(["Unsupported FourCC code:",(G=L,String.fromCharCode(255&G,G>>8&255,G>>16&255,G>>24&255))])}var G;const z=u._ExtractLongWordOrder(Z[23]),m=u._ExtractLongWordOrder(Z[24]),x=u._ExtractLongWordOrder(Z[25]),V=u._ExtractLongWordOrder(Z[26]);R&&(y=K._getRGBABufferInternalSizedFormat(f.textureType)),e=1,Z[2]&J&&!1!==q&&(e=Math.max(1,Z[7]));const v=T||0,Y=K.getCaps();for(let r=v;r<c;r++){for(d=Z[4],a=Z[3],W=0;W<e;++W){if(-1===E||E===W){const l=-1===E?W:0;if(!f.isCompressed&&f.isFourCC){O.format=5,p=d*a*4;let f=null;if(K._badOS||K._badDesktopOS||!Y.textureHalfFloat&&!Y.textureFloat)128===Q?(f=u._GetFloatAsUIntRGBAArrayBuffer(d,a,F.byteOffset+g,p,F.buffer,l),k&&0==l&&k.push(u._GetFloatRGBAArrayBuffer(d,a,F.byteOffset+g,p,F.buffer,l))):64===Q&&(f=u._GetHalfFloatAsUIntRGBAArrayBuffer(d,a,F.byteOffset+g,p,F.buffer,l),k&&0==l&&k.push(u._GetHalfFloatAsFloatRGBAArrayBuffer(d,a,F.byteOffset+g,p,F.buffer,l))),O.type=0;else{const K=Y.textureFloat&&(o&&Y.textureFloatLinearFiltering||!o),r=Y.textureHalfFloat&&(o&&Y.textureHalfFloatLinearFiltering||!o),q=(128===Q||64===Q&&!r)&&K?1:(64===Q||128===Q&&!K)&&r?2:0;let J,c=null;if(128===Q)switch(q){case 1:J=u._GetFloatRGBAArrayBuffer,c=null;break;case 2:J=u._GetFloatAsHalfFloatRGBAArrayBuffer,c=u._GetFloatRGBAArrayBuffer;break;case 0:J=u._GetFloatAsUIntRGBAArrayBuffer,c=u._GetFloatRGBAArrayBuffer}else switch(q){case 1:J=u._GetHalfFloatAsFloatRGBAArrayBuffer,c=null;break;case 2:J=u._GetHalfFloatRGBAArrayBuffer,c=u._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:J=u._GetHalfFloatAsUIntRGBAArrayBuffer,c=u._GetHalfFloatAsFloatRGBAArrayBuffer}O.type=q,f=J(d,a,F.byteOffset+g,p,F.buffer,l),k&&0==l&&k.push(c?c(d,a,F.byteOffset+g,p,F.buffer,l):f)}f&&K._uploadDataToTextureDirectly(O,f,r,l)}else if(f.isRGB)O.type=0,24===Q?(O.format=4,p=d*a*3,H=u._GetRGBArrayBuffer(d,a,F.byteOffset+g,p,F.buffer,z,m,x),K._uploadDataToTextureDirectly(O,H,r,l)):(O.format=5,p=d*a*4,H=u._GetRGBAArrayBuffer(d,a,F.byteOffset+g,p,F.buffer,z,m,x,V),K._uploadDataToTextureDirectly(O,H,r,l));else if(f.isLuminance){const f=K._getUnpackAlignement(),q=d;p=Math.floor((d+f-1)/f)*f*(a-1)+q,H=u._GetLuminanceArrayBuffer(d,a,F.byteOffset+g,p,F.buffer),O.format=1,O.type=0,K._uploadDataToTextureDirectly(O,H,r,l)}else p=Math.max(4,d)/4*Math.max(4,a)/4*A,H=new Uint8Array(F.buffer,F.byteOffset+g,p),O.type=0,K._uploadCompressedDataToTextureDirectly(O,y,d,a,H,r,l)}g+=Q?d*a*(Q/8):p,d*=.5,a*=.5,d=Math.max(1,d),a=Math.max(1,a)}if(void 0!==T)break}k&&k.length>0?f.sphericalPolynomial=l.d.ConvertCubeMapToSphericalPolynomial({size:Z[4],right:k[0],left:k[1],up:k[2],down:k[3],front:k[4],back:k[5],format:5,type:1,gammaSpace:!1}):f.sphericalPolynomial=void 0}}u.StoreLODInAlphaChannel=!1}}]);