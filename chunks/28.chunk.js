"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[28,29],{12905:(o,H,n)=>{var E=n(11120),k=n(11038),g=n(11066),O=n(11149),Y=n(11093),y=n(11134);Y.e.prototype._partialLoadFile=function(o,H,n,E){let k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(o,(o=>{n[H]=o,n._internalCount++,6===n._internalCount&&E(n)}),void 0,void 0,!0,((o,H)=>{k&&o&&k(o.status+" "+o.statusText,H)}))},Y.e.prototype._cascadeLoadFiles=function(o,H,n){let E=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const k=[];k._internalCount=0;for(let g=0;g<6;g++)this._partialLoadFile(n[g],g,k,H,E)},Y.e.prototype._cascadeLoadImgs=function(o,H,n,E){let k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,g=arguments.length>5?arguments[5]:void 0;const O=[];O._internalCount=0;for(let Y=0;Y<6;Y++)this._partialLoadImg(E[Y],Y,O,o,H,n,k,g)},Y.e.prototype._partialLoadImg=function(o,H,n,E,k,Y){let y=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,S=arguments.length>7?arguments[7]:void 0;const G=(0,O.b)();(0,g.n)(o,(o=>{n[H]=o,n._internalCount++,E&&E.removePendingData(G),6===n._internalCount&&Y&&Y(k,n)}),((o,H)=>{E&&E.removePendingData(G),y&&y(o,H)}),E?E.offlineProvider:null,S),E&&E.addPendingData(G)},Y.e.prototype.createCubeTextureBase=function(o,H,n,g){let O=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,Y=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,S=arguments.length>6?arguments[6]:void 0,G=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,c=arguments.length>8&&void 0!==arguments[8]&&arguments[8],A=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,l=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,x=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,z=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,V=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,J=arguments.length>14&&void 0!==arguments[14]&&arguments[14],N=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const h=x||new E.d(this,7);h.isCube=!0,h.url=o,h.generateMipMaps=!g,h._lodGenerationScale=A,h._lodGenerationOffset=l,h._useSRGBBuffer=!!J&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!g),h!==x&&(h.label=o.substring(0,60)),this._doNotHandleContextLost||(h._extension=G,h._files=n,h._buffer=N);const Q=o;this._transformTextureUrl&&!x&&(o=this._transformTextureUrl(o));const p=G??function(o){const H=o.split("?")[0],n=H.lastIndexOf(".");return n>-1?H.substring(n).toLowerCase():""}(o),j=(0,y.b)(p),m=(o,H)=>{h.dispose(),Y?Y(o,H):o&&k.d.Warn(o)},P=(E,Y)=>{o===Q?E&&m(E.status+" "+E.statusText,Y):(k.d.Warn(`Failed to load ${o}, falling back to the ${Q}`),this.createCubeTextureBase(Q,H,n,!!g,O,m,S,G,c,A,l,h,z,V,J,N))};if(j)j.then((E=>{const k=o=>{z&&z(h,o),E.loadCubeData(o,h,c,O,((o,H)=>{m(o,H)}))};N?k(N):n&&6===n.length?E.supportCascades?this._cascadeLoadFiles(H,(o=>k(o.map((o=>new Uint8Array(o))))),n,m):m("Textures type does not support cascades."):this._loadFile(o,(o=>k(new Uint8Array(o))),void 0,void 0,!0,P)}));else{if(!n||0===n.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(H,h,((o,H)=>{V&&V(o,H)}),n,m)}return this._internalTexturesCache.push(h),h}},13655:(o,H,n)=>{n.r(H),n.d(H,{_DDSTextureLoader:()=>g});var E=n(11380),k=n(13664);class g{constructor(){this.supportCascades=!0}loadCubeData(o,H,n,g){const O=H.getEngine();let Y,y=!1,S=1e3;if(Array.isArray(o))for(let E=0;E<o.length;E++){const n=o[E];Y=k.DDSTools.GetDDSInfo(n),H.width=Y.width,H.height=Y.height,y=(Y.isRGB||Y.isLuminance||Y.mipmapCount>1)&&H.generateMipMaps,O._unpackFlipY(Y.isCompressed),k.DDSTools.UploadDDSLevels(O,H,n,Y,y,6,-1,E),Y.isFourCC||1!==Y.mipmapCount?S=Y.mipmapCount-1:O.generateMipMapsForCubemap(H)}else{const g=o;Y=k.DDSTools.GetDDSInfo(g),H.width=Y.width,H.height=Y.height,n&&(Y.sphericalPolynomial=new E.f),y=(Y.isRGB||Y.isLuminance||Y.mipmapCount>1)&&H.generateMipMaps,O._unpackFlipY(Y.isCompressed),k.DDSTools.UploadDDSLevels(O,H,g,Y,y,6),Y.isFourCC||1!==Y.mipmapCount?S=Y.mipmapCount-1:O.generateMipMapsForCubemap(H,!1)}O._setCubeMapTextureParams(H,y,S),H.isReady=!0,H.onLoadedObservable.notifyObservers(H),H.onLoadedObservable.clear(),g&&g({isDDS:!0,width:H.width,info:Y,data:o,texture:H})}loadData(o,H,n){const E=k.DDSTools.GetDDSInfo(o),g=(E.isRGB||E.isLuminance||E.mipmapCount>1)&&H.generateMipMaps&&Math.max(E.width,E.height)>>E.mipmapCount-1===1;n(E.width,E.height,g,E.isFourCC,(()=>{k.DDSTools.UploadDDSLevels(H.getEngine(),H,o,E,g,1)}))}}},11712:(o,H,n)=>{n.d(H,{b:()=>S});var E=n(11189),k=n(11205),g=n(11380),O=n(11196),Y=n(11238);class y{constructor(o,H,n,E){this.name=o,this.worldAxisForNormal=H,this.worldAxisForFileX=n,this.worldAxisForFileY=E}}class S{static ConvertCubeMapTextureToSphericalPolynomial(o){var H;if(!o.isCube)return null;null===(H=o.bo())||void 0===H||H.getEngine().flushFramebuffer();const n=o.getSize().width,E=o.readPixels(0,void 0,void 0,!1),k=o.readPixels(1,void 0,void 0,!1);let g,O;o.isRenderTarget?(g=o.readPixels(3,void 0,void 0,!1),O=o.readPixels(2,void 0,void 0,!1)):(g=o.readPixels(2,void 0,void 0,!1),O=o.readPixels(3,void 0,void 0,!1));const Y=o.readPixels(4,void 0,void 0,!1),y=o.readPixels(5,void 0,void 0,!1),S=o.gammaSpace;let G=0;return 1!=o.textureType&&2!=o.textureType||(G=1),new Promise((o=>{Promise.all([k,E,g,O,Y,y]).then((H=>{let[E,k,g,O,Y,y]=H;const c={size:n,right:k,left:E,up:g,down:O,front:Y,back:y,format:5,type:G,gammaSpace:S};o(this.ConvertCubeMapToSphericalPolynomial(c))}))}))}static _AreaElement(o,H){return Math.atan2(o*H,Math.sqrt(o*o+H*H+1))}static ConvertCubeMapToSphericalPolynomial(o){const H=new g.e;let n=0;const E=2/o.size,y=E,S=.5*E,G=S-1;for(let g=0;g<6;g++){const c=this._FileFaces[g],A=o[c.name];let l=G;const x=5===o.format?4:3;for(let g=0;g<o.size;g++){let z=G;for(let y=0;y<o.size;y++){const G=c.worldAxisForFileX.scale(z).add(c.worldAxisForFileY.scale(l)).add(c.worldAxisForNormal);G.normalize();const V=this._AreaElement(z-S,l-S)-this._AreaElement(z-S,l+S)-this._AreaElement(z+S,l-S)+this._AreaElement(z+S,l+S);let J=A[g*o.size*x+y*x+0],N=A[g*o.size*x+y*x+1],h=A[g*o.size*x+y*x+2];isNaN(J)&&(J=0),isNaN(N)&&(N=0),isNaN(h)&&(h=0),0===o.type&&(J/=255,N/=255,h/=255),o.gammaSpace&&(J=Math.pow((0,k.Clamp)(J),O.p),N=Math.pow((0,k.Clamp)(N),O.p),h=Math.pow((0,k.Clamp)(h),O.p));const Q=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const o=Math.max(J,N,h);if(o>Q){const H=Q/o;J*=H,N*=H,h*=H}}else J=(0,k.Clamp)(J,0,Q),N=(0,k.Clamp)(N,0,Q),h=(0,k.Clamp)(h,0,Q);const p=new Y.NH(J,N,h);H.addLight(G,p,V),n+=V,z+=E}l+=y}}const c=6*(4*Math.PI)/6/n;return H.scaleInPlace(c),H.convertIncidentRadianceToIrradiance(),H.convertIrradianceToLambertianRadiance(),g.f.FromHarmonics(H)}}S._FileFaces=[new y("right",new E.xH(1,0,0),new E.xH(0,0,-1),new E.xH(0,-1,0)),new y("left",new E.xH(-1,0,0),new E.xH(0,0,1),new E.xH(0,-1,0)),new y("up",new E.xH(0,1,0),new E.xH(1,0,0),new E.xH(0,0,1)),new y("down",new E.xH(0,-1,0),new E.xH(1,0,0),new E.xH(0,0,-1)),new y("front",new E.xH(0,0,1),new E.xH(1,0,0),new E.xH(0,-1,0)),new y("back",new E.xH(0,0,-1),new E.xH(-1,0,0),new E.xH(0,-1,0))],S.MAX_HDRI_VALUE=4096,S.PRESERVE_CLAMPED_COLORS=!1},13664:(o,H,n)=>{n.d(H,{DDSTools:()=>x});var E=n(11205),k=n(11038),g=n(11712),O=n(11422);n(12905);const Y=131072,y=131072;function S(o){return o.charCodeAt(0)+(o.charCodeAt(1)<<8)+(o.charCodeAt(2)<<16)+(o.charCodeAt(3)<<24)}const G=S("DXT1"),c=S("DXT3"),A=S("DXT5"),l=S("DX10");class x{static GetDDSInfo(o){const H=new Int32Array(o.buffer,o.byteOffset,31),n=new Int32Array(o.buffer,o.byteOffset,35);let E=1;H[2]&Y&&(E=Math.max(1,H[7]));const k=H[21],g=k===l?n[32]:0;let O=0;switch(k){case 113:O=2;break;case 116:O=1;break;case l:if(10===g){O=2;break}if(2===g){O=1;break}}return{width:H[4],height:H[3],mipmapCount:E,isFourCC:4===(4&H[20]),isRGB:64===(64&H[20]),isLuminance:(H[20]&y)===y,isCube:512===(512&H[28]),isCompressed:k===G||k===c||k===A,dxgiFormat:g,textureType:O}}static _GetHalfFloatAsFloatRGBAArrayBuffer(o,H,n,E,k,g){const Y=new Float32Array(E),y=new Uint16Array(k,n);let S=0;for(let G=0;G<H;G++)for(let H=0;H<o;H++){const n=4*(H+G*o);Y[S]=(0,O.e)(y[n]),Y[S+1]=(0,O.e)(y[n+1]),Y[S+2]=(0,O.e)(y[n+2]),x.StoreLODInAlphaChannel?Y[S+3]=g:Y[S+3]=(0,O.e)(y[n+3]),S+=4}return Y}static _GetHalfFloatRGBAArrayBuffer(o,H,n,E,k,g){if(x.StoreLODInAlphaChannel){const Y=new Uint16Array(E),y=new Uint16Array(k,n);let S=0;for(let n=0;n<H;n++)for(let H=0;H<o;H++){const E=4*(H+n*o);Y[S]=y[E],Y[S+1]=y[E+1],Y[S+2]=y[E+2],Y[S+3]=(0,O.l)(g),S+=4}return Y}return new Uint16Array(k,n,E)}static _GetFloatRGBAArrayBuffer(o,H,n,E,k,g){if(x.StoreLODInAlphaChannel){const O=new Float32Array(E),Y=new Float32Array(k,n);let y=0;for(let n=0;n<H;n++)for(let H=0;H<o;H++){const E=4*(H+n*o);O[y]=Y[E],O[y+1]=Y[E+1],O[y+2]=Y[E+2],O[y+3]=g,y+=4}return O}return new Float32Array(k,n,E)}static _GetFloatAsHalfFloatRGBAArrayBuffer(o,H,n,E,k,g){const Y=new Uint16Array(E),y=new Float32Array(k,n);let S=0;for(let G=0;G<H;G++)for(let H=0;H<o;H++)Y[S]=(0,O.l)(y[S]),Y[S+1]=(0,O.l)(y[S+1]),Y[S+2]=(0,O.l)(y[S+2]),x.StoreLODInAlphaChannel?Y[S+3]=(0,O.l)(g):Y[S+3]=(0,O.l)(y[S+3]),S+=4;return Y}static _GetFloatAsUIntRGBAArrayBuffer(o,H,n,k,g,O){const Y=new Uint8Array(k),y=new Float32Array(g,n);let S=0;for(let G=0;G<H;G++)for(let H=0;H<o;H++){const n=4*(H+G*o);Y[S]=255*(0,E.Clamp)(y[n]),Y[S+1]=255*(0,E.Clamp)(y[n+1]),Y[S+2]=255*(0,E.Clamp)(y[n+2]),x.StoreLODInAlphaChannel?Y[S+3]=O:Y[S+3]=255*(0,E.Clamp)(y[n+3]),S+=4}return Y}static _GetHalfFloatAsUIntRGBAArrayBuffer(o,H,n,k,g,Y){const y=new Uint8Array(k),S=new Uint16Array(g,n);let G=0;for(let c=0;c<H;c++)for(let H=0;H<o;H++){const n=4*(H+c*o);y[G]=255*(0,E.Clamp)((0,O.e)(S[n])),y[G+1]=255*(0,E.Clamp)((0,O.e)(S[n+1])),y[G+2]=255*(0,E.Clamp)((0,O.e)(S[n+2])),x.StoreLODInAlphaChannel?y[G+3]=Y:y[G+3]=255*(0,E.Clamp)((0,O.e)(S[n+3])),G+=4}return y}static _GetRGBAArrayBuffer(o,H,n,E,k,g,O,Y,y){const S=new Uint8Array(E),G=new Uint8Array(k,n);let c=0;for(let A=0;A<H;A++)for(let H=0;H<o;H++){const n=4*(H+A*o);S[c]=G[n+g],S[c+1]=G[n+O],S[c+2]=G[n+Y],S[c+3]=G[n+y],c+=4}return S}static _ExtractLongWordOrder(o){return 0===o||255===o||-16777216===o?0:1+x._ExtractLongWordOrder(o>>8)}static _GetRGBArrayBuffer(o,H,n,E,k,g,O,Y){const y=new Uint8Array(E),S=new Uint8Array(k,n);let G=0;for(let c=0;c<H;c++)for(let H=0;H<o;H++){const n=3*(H+c*o);y[G]=S[n+g],y[G+1]=S[n+O],y[G+2]=S[n+Y],G+=3}return y}static _GetLuminanceArrayBuffer(o,H,n,E,k){const g=new Uint8Array(E),O=new Uint8Array(k,n);let Y=0;for(let y=0;y<H;y++)for(let H=0;H<o;H++){const n=H+y*o;g[Y]=O[n],Y++}return g}static UploadDDSLevels(o,H,n,E,O,y){let S=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,z=arguments.length>7?arguments[7]:void 0,V=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],J=null;E.sphericalPolynomial&&(J=[]);const N=!!o.getCaps().s3tc;H.generateMipMaps=O;const h=new Int32Array(n.buffer,n.byteOffset,31);let Q,p,j,m,P,b,e,Z=0,M=0,K=1;if(542327876!==h[0])return void k.d.Error("Invalid magic number in DDS header");if(!E.isFourCC&&!E.isRGB&&!E.isLuminance)return void k.d.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(E.isCompressed&&!N)return void k.d.Error("Compressed textures are not supported on this platform.");let f=h[22];m=h[1]+4;let B=!1;if(E.isFourCC)switch(Q=h[21],Q){case G:K=8,M=33777;break;case c:K=16,M=33778;break;case A:K=16,M=33779;break;case 113:B=!0,f=64;break;case 116:B=!0,f=128;break;case l:{m+=20;let o=!1;switch(E.dxgiFormat){case 10:B=!0,f=64,o=!0;break;case 2:B=!0,f=128,o=!0;break;case 88:E.isRGB=!0,E.isFourCC=!1,f=32,o=!0}if(o)break}default:return void k.d.Error(["Unsupported FourCC code:",(q=Q,String.fromCharCode(255&q,q>>8&255,q>>16&255,q>>24&255))])}var q;const D=x._ExtractLongWordOrder(h[23]),T=x._ExtractLongWordOrder(h[24]),a=x._ExtractLongWordOrder(h[25]),F=x._ExtractLongWordOrder(h[26]);B&&(M=o._getRGBABufferInternalSizedFormat(E.textureType)),b=1,h[2]&Y&&!1!==O&&(b=Math.max(1,h[7]));const C=z||0,t=o.getCaps();for(let k=C;k<y;k++){for(p=h[4],j=h[3],e=0;e<b;++e){if(-1===S||S===e){const g=-1===S?e:0;if(!E.isCompressed&&E.isFourCC){H.format=5,Z=p*j*4;let E=null;if(o._badOS||o._badDesktopOS||!t.textureHalfFloat&&!t.textureFloat)128===f?(E=x._GetFloatAsUIntRGBAArrayBuffer(p,j,n.byteOffset+m,Z,n.buffer,g),J&&0==g&&J.push(x._GetFloatRGBAArrayBuffer(p,j,n.byteOffset+m,Z,n.buffer,g))):64===f&&(E=x._GetHalfFloatAsUIntRGBAArrayBuffer(p,j,n.byteOffset+m,Z,n.buffer,g),J&&0==g&&J.push(x._GetHalfFloatAsFloatRGBAArrayBuffer(p,j,n.byteOffset+m,Z,n.buffer,g))),H.type=0;else{const o=t.textureFloat&&(V&&t.textureFloatLinearFiltering||!V),k=t.textureHalfFloat&&(V&&t.textureHalfFloatLinearFiltering||!V),O=(128===f||64===f&&!k)&&o?1:(64===f||128===f&&!o)&&k?2:0;let Y,y=null;if(128===f)switch(O){case 1:Y=x._GetFloatRGBAArrayBuffer,y=null;break;case 2:Y=x._GetFloatAsHalfFloatRGBAArrayBuffer,y=x._GetFloatRGBAArrayBuffer;break;case 0:Y=x._GetFloatAsUIntRGBAArrayBuffer,y=x._GetFloatRGBAArrayBuffer}else switch(O){case 1:Y=x._GetHalfFloatAsFloatRGBAArrayBuffer,y=null;break;case 2:Y=x._GetHalfFloatRGBAArrayBuffer,y=x._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:Y=x._GetHalfFloatAsUIntRGBAArrayBuffer,y=x._GetHalfFloatAsFloatRGBAArrayBuffer}H.type=O,E=Y(p,j,n.byteOffset+m,Z,n.buffer,g),J&&0==g&&J.push(y?y(p,j,n.byteOffset+m,Z,n.buffer,g):E)}E&&o._uploadDataToTextureDirectly(H,E,k,g)}else if(E.isRGB)H.type=0,24===f?(H.format=4,Z=p*j*3,P=x._GetRGBArrayBuffer(p,j,n.byteOffset+m,Z,n.buffer,D,T,a),o._uploadDataToTextureDirectly(H,P,k,g)):(H.format=5,Z=p*j*4,P=x._GetRGBAArrayBuffer(p,j,n.byteOffset+m,Z,n.buffer,D,T,a,F),o._uploadDataToTextureDirectly(H,P,k,g));else if(E.isLuminance){const E=o._getUnpackAlignement(),O=p;Z=Math.floor((p+E-1)/E)*E*(j-1)+O,P=x._GetLuminanceArrayBuffer(p,j,n.byteOffset+m,Z,n.buffer),H.format=1,H.type=0,o._uploadDataToTextureDirectly(H,P,k,g)}else Z=Math.max(4,p)/4*Math.max(4,j)/4*K,P=new Uint8Array(n.buffer,n.byteOffset+m,Z),H.type=0,o._uploadCompressedDataToTextureDirectly(H,M,p,j,P,k,g)}m+=f?p*j*(f/8):Z,p*=.5,j*=.5,p=Math.max(1,p),j=Math.max(1,j)}if(void 0!==z)break}J&&J.length>0?E.sphericalPolynomial=g.b.ConvertCubeMapToSphericalPolynomial({size:h[4],right:J[0],left:J[1],up:J[2],down:J[3],front:J[4],back:J[5],format:5,type:1,gammaSpace:!1}):E.sphericalPolynomial=void 0}}x.StoreLODInAlphaChannel=!1}}]);