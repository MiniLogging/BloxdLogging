"use strict";(self.nyfa010khv=self.nyfa010khv||[]).push([[28,29],{13826:(L,r,p)=>{var J=p(12060),i=p(11975),n=p(12014),j=p(12091),z=p(12037),G=p(12077);z.e.prototype._partialLoadFile=function(L,r,p,J){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(L,(L=>{p[r]=L,p._internalCount++,6===p._internalCount&&J(p)}),void 0,void 0,!0,((L,r)=>{i&&L&&i(L.status+" "+L.statusText,r)}))},z.e.prototype._cascadeLoadFiles=function(L,r,p){let J=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const i=[];i._internalCount=0;for(let n=0;n<6;n++)this._partialLoadFile(p[n],n,i,r,J)},z.e.prototype._cascadeLoadImgs=function(L,r,p,J){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,n=arguments.length>5?arguments[5]:void 0;const j=[];j._internalCount=0;for(let z=0;z<6;z++)this._partialLoadImg(J[z],z,j,L,r,p,i,n)},z.e.prototype._partialLoadImg=function(L,r,p,J,i,z){let G=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,C=arguments.length>7?arguments[7]:void 0;const t=(0,j.d)();(0,n.t)(L,(L=>{p[r]=L,p._internalCount++,J&&J.removePendingData(t),6===p._internalCount&&z&&z(i,p)}),((L,r)=>{J&&J.removePendingData(t),G&&G(L,r)}),J?J.offlineProvider:null,C),J&&J.addPendingData(t)},z.e.prototype.createCubeTextureBase=function(L,r,p,n){let j=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,C=arguments.length>6?arguments[6]:void 0,t=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,E=arguments.length>8&&void 0!==arguments[8]&&arguments[8],x=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,w=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,g=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,b=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,c=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,P=arguments.length>14&&void 0!==arguments[14]&&arguments[14],O=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const h=g||new J.b(this,7);h.isCube=!0,h.url=L,h.generateMipMaps=!n,h._lodGenerationScale=x,h._lodGenerationOffset=w,h._useSRGBBuffer=!!P&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!n),h!==g&&(h.label=L.substring(0,60)),this._doNotHandleContextLost||(h._extension=t,h._files=p,h._buffer=O);const U=L;this._transformTextureUrl&&!g&&(L=this._transformTextureUrl(L));const W=t??function(L){const r=L.split("?")[0],p=r.lastIndexOf(".");return p>-1?r.substring(p).toLowerCase():""}(L),B=(0,G.d)(W),F=(L,r)=>{h.dispose(),z?z(L,r):L&&i.d.Warn(L)},Q=(J,z)=>{L===U?J&&F(J.status+" "+J.statusText,z):(i.d.Warn(`Failed to load ${L}, falling back to the ${U}`),this.createCubeTextureBase(U,r,p,!!n,j,F,C,t,E,x,w,h,b,c,P,O))};if(B)B.then((J=>{const i=L=>{b&&b(h,L),J.loadCubeData(L,h,E,j,((L,r)=>{F(L,r)}))};O?i(O):p&&6===p.length?J.supportCascades?this._cascadeLoadFiles(r,(L=>i(L.map((L=>new Uint8Array(L))))),p,F):F("Textures type does not support cascades."):this._loadFile(L,(L=>i(new Uint8Array(L))),void 0,void 0,!0,Q)}));else{if(!p||0===p.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(r,h,((L,r)=>{c&&c(L,r)}),p,F)}return this._internalTexturesCache.push(h),h}},14592:(L,r,p)=>{p.r(r),p.d(r,{_DDSTextureLoader:()=>n});var J=p(12299),i=p(14594);class n{constructor(){this.supportCascades=!0}loadCubeData(L,r,p,n){const j=r.getEngine();let z,G=!1,C=1e3;if(Array.isArray(L))for(let J=0;J<L.length;J++){const p=L[J];z=i.DDSTools.GetDDSInfo(p),r.width=z.width,r.height=z.height,G=(z.isRGB||z.isLuminance||z.mipmapCount>1)&&r.generateMipMaps,j._unpackFlipY(z.isCompressed),i.DDSTools.UploadDDSLevels(j,r,p,z,G,6,-1,J),z.isFourCC||1!==z.mipmapCount?C=z.mipmapCount-1:j.generateMipMapsForCubemap(r)}else{const n=L;z=i.DDSTools.GetDDSInfo(n),r.width=z.width,r.height=z.height,p&&(z.sphericalPolynomial=new J.h),G=(z.isRGB||z.isLuminance||z.mipmapCount>1)&&r.generateMipMaps,j._unpackFlipY(z.isCompressed),i.DDSTools.UploadDDSLevels(j,r,n,z,G,6),z.isFourCC||1!==z.mipmapCount?C=z.mipmapCount-1:j.generateMipMapsForCubemap(r,!1)}j._setCubeMapTextureParams(r,G,C),r.isReady=!0,r.onLoadedObservable.notifyObservers(r),r.onLoadedObservable.clear(),n&&n({isDDS:!0,width:r.width,info:z,data:L,texture:r})}loadData(L,r,p){const J=i.DDSTools.GetDDSInfo(L),n=(J.isRGB||J.isLuminance||J.mipmapCount>1)&&r.generateMipMaps&&Math.max(J.width,J.height)>>J.mipmapCount-1===1;p(J.width,J.height,n,J.isFourCC,(()=>{i.DDSTools.UploadDDSLevels(r.getEngine(),r,L,J,n,1)}))}}},12639:(L,r,p)=>{p.d(r,{b:()=>C});var J=p(12136),i=p(12154),n=p(12299),j=p(12140),z=p(12170);class G{constructor(L,r,p,J){this.name=L,this.worldAxisForNormal=r,this.worldAxisForFileX=p,this.worldAxisForFileY=J}}class C{static ConvertCubeMapTextureToSphericalPolynomial(L){var r;if(!L.isCube)return null;null===(r=L.FL())||void 0===r||r.getEngine().flushFramebuffer();const p=L.getSize().width,J=L.readPixels(0,void 0,void 0,!1),i=L.readPixels(1,void 0,void 0,!1);let n,j;L.isRenderTarget?(n=L.readPixels(3,void 0,void 0,!1),j=L.readPixels(2,void 0,void 0,!1)):(n=L.readPixels(2,void 0,void 0,!1),j=L.readPixels(3,void 0,void 0,!1));const z=L.readPixels(4,void 0,void 0,!1),G=L.readPixels(5,void 0,void 0,!1),C=L.gammaSpace;let t=0;return 1!=L.textureType&&2!=L.textureType||(t=1),new Promise((L=>{Promise.all([i,J,n,j,z,G]).then((r=>{let[J,i,n,j,z,G]=r;const E={size:p,right:i,left:J,up:n,down:j,front:z,back:G,format:5,type:t,gammaSpace:C};L(this.ConvertCubeMapToSphericalPolynomial(E))}))}))}static _AreaElement(L,r){return Math.atan2(L*r,Math.sqrt(L*L+r*r+1))}static ConvertCubeMapToSphericalPolynomial(L){const r=new n.d;let p=0;const J=2/L.size,G=J,C=.5*J,t=C-1;for(let n=0;n<6;n++){const E=this._FileFaces[n],x=L[E.name];let w=t;const g=5===L.format?4:3;for(let n=0;n<L.size;n++){let b=t;for(let G=0;G<L.size;G++){const t=E.worldAxisForFileX.scale(b).add(E.worldAxisForFileY.scale(w)).add(E.worldAxisForNormal);t.normalize();const c=this._AreaElement(b-C,w-C)-this._AreaElement(b-C,w+C)-this._AreaElement(b+C,w-C)+this._AreaElement(b+C,w+C);let P=x[n*L.size*g+G*g+0],O=x[n*L.size*g+G*g+1],h=x[n*L.size*g+G*g+2];isNaN(P)&&(P=0),isNaN(O)&&(O=0),isNaN(h)&&(h=0),0===L.type&&(P/=255,O/=255,h/=255),L.gammaSpace&&(P=Math.pow((0,i.Clamp)(P),j.i),O=Math.pow((0,i.Clamp)(O),j.i),h=Math.pow((0,i.Clamp)(h),j.i));const U=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const L=Math.max(P,O,h);if(L>U){const r=U/L;P*=r,O*=r,h*=r}}else P=(0,i.Clamp)(P,0,U),O=(0,i.Clamp)(O,0,U),h=(0,i.Clamp)(h,0,U);const W=new z.Wr(P,O,h);r.addLight(t,W,c),p+=c,b+=J}w+=G}}const E=6*(4*Math.PI)/6/p;return r.scaleInPlace(E),r.convertIncidentRadianceToIrradiance(),r.convertIrradianceToLambertianRadiance(),n.h.FromHarmonics(r)}}C._FileFaces=[new G("right",new J.cr(1,0,0),new J.cr(0,0,-1),new J.cr(0,-1,0)),new G("left",new J.cr(-1,0,0),new J.cr(0,0,1),new J.cr(0,-1,0)),new G("up",new J.cr(0,1,0),new J.cr(1,0,0),new J.cr(0,0,1)),new G("down",new J.cr(0,-1,0),new J.cr(1,0,0),new J.cr(0,0,-1)),new G("front",new J.cr(0,0,1),new J.cr(1,0,0),new J.cr(0,-1,0)),new G("back",new J.cr(0,0,-1),new J.cr(-1,0,0),new J.cr(0,-1,0))],C.MAX_HDRI_VALUE=4096,C.PRESERVE_CLAMPED_COLORS=!1},14594:(L,r,p)=>{p.d(r,{DDSTools:()=>g});var J=p(12154),i=p(11975),n=p(12639),j=p(12343);p(13826);const z=131072,G=131072;function C(L){return L.charCodeAt(0)+(L.charCodeAt(1)<<8)+(L.charCodeAt(2)<<16)+(L.charCodeAt(3)<<24)}const t=C("DXT1"),E=C("DXT3"),x=C("DXT5"),w=C("DX10");class g{static GetDDSInfo(L){const r=new Int32Array(L.buffer,L.byteOffset,31),p=new Int32Array(L.buffer,L.byteOffset,35);let J=1;r[2]&z&&(J=Math.max(1,r[7]));const i=r[21],n=i===w?p[32]:0;let j=0;switch(i){case 113:j=2;break;case 116:j=1;break;case w:if(10===n){j=2;break}if(2===n){j=1;break}}return{width:r[4],height:r[3],mipmapCount:J,isFourCC:4===(4&r[20]),isRGB:64===(64&r[20]),isLuminance:(r[20]&G)===G,isCube:512===(512&r[28]),isCompressed:i===t||i===E||i===x,dxgiFormat:n,textureType:j}}static _GetHalfFloatAsFloatRGBAArrayBuffer(L,r,p,J,i,n){const z=new Float32Array(J),G=new Uint16Array(i,p);let C=0;for(let t=0;t<r;t++)for(let r=0;r<L;r++){const p=4*(r+t*L);z[C]=(0,j.g)(G[p]),z[C+1]=(0,j.g)(G[p+1]),z[C+2]=(0,j.g)(G[p+2]),g.StoreLODInAlphaChannel?z[C+3]=n:z[C+3]=(0,j.g)(G[p+3]),C+=4}return z}static _GetHalfFloatRGBAArrayBuffer(L,r,p,J,i,n){if(g.StoreLODInAlphaChannel){const z=new Uint16Array(J),G=new Uint16Array(i,p);let C=0;for(let p=0;p<r;p++)for(let r=0;r<L;r++){const J=4*(r+p*L);z[C]=G[J],z[C+1]=G[J+1],z[C+2]=G[J+2],z[C+3]=(0,j.m)(n),C+=4}return z}return new Uint16Array(i,p,J)}static _GetFloatRGBAArrayBuffer(L,r,p,J,i,n){if(g.StoreLODInAlphaChannel){const j=new Float32Array(J),z=new Float32Array(i,p);let G=0;for(let p=0;p<r;p++)for(let r=0;r<L;r++){const J=4*(r+p*L);j[G]=z[J],j[G+1]=z[J+1],j[G+2]=z[J+2],j[G+3]=n,G+=4}return j}return new Float32Array(i,p,J)}static _GetFloatAsHalfFloatRGBAArrayBuffer(L,r,p,J,i,n){const z=new Uint16Array(J),G=new Float32Array(i,p);let C=0;for(let t=0;t<r;t++)for(let r=0;r<L;r++)z[C]=(0,j.m)(G[C]),z[C+1]=(0,j.m)(G[C+1]),z[C+2]=(0,j.m)(G[C+2]),g.StoreLODInAlphaChannel?z[C+3]=(0,j.m)(n):z[C+3]=(0,j.m)(G[C+3]),C+=4;return z}static _GetFloatAsUIntRGBAArrayBuffer(L,r,p,i,n,j){const z=new Uint8Array(i),G=new Float32Array(n,p);let C=0;for(let t=0;t<r;t++)for(let r=0;r<L;r++){const p=4*(r+t*L);z[C]=255*(0,J.Clamp)(G[p]),z[C+1]=255*(0,J.Clamp)(G[p+1]),z[C+2]=255*(0,J.Clamp)(G[p+2]),g.StoreLODInAlphaChannel?z[C+3]=j:z[C+3]=255*(0,J.Clamp)(G[p+3]),C+=4}return z}static _GetHalfFloatAsUIntRGBAArrayBuffer(L,r,p,i,n,z){const G=new Uint8Array(i),C=new Uint16Array(n,p);let t=0;for(let E=0;E<r;E++)for(let r=0;r<L;r++){const p=4*(r+E*L);G[t]=255*(0,J.Clamp)((0,j.g)(C[p])),G[t+1]=255*(0,J.Clamp)((0,j.g)(C[p+1])),G[t+2]=255*(0,J.Clamp)((0,j.g)(C[p+2])),g.StoreLODInAlphaChannel?G[t+3]=z:G[t+3]=255*(0,J.Clamp)((0,j.g)(C[p+3])),t+=4}return G}static _GetRGBAArrayBuffer(L,r,p,J,i,n,j,z,G){const C=new Uint8Array(J),t=new Uint8Array(i,p);let E=0;for(let x=0;x<r;x++)for(let r=0;r<L;r++){const p=4*(r+x*L);C[E]=t[p+n],C[E+1]=t[p+j],C[E+2]=t[p+z],C[E+3]=t[p+G],E+=4}return C}static _ExtractLongWordOrder(L){return 0===L||255===L||-16777216===L?0:1+g._ExtractLongWordOrder(L>>8)}static _GetRGBArrayBuffer(L,r,p,J,i,n,j,z){const G=new Uint8Array(J),C=new Uint8Array(i,p);let t=0;for(let E=0;E<r;E++)for(let r=0;r<L;r++){const p=3*(r+E*L);G[t]=C[p+n],G[t+1]=C[p+j],G[t+2]=C[p+z],t+=3}return G}static _GetLuminanceArrayBuffer(L,r,p,J,i){const n=new Uint8Array(J),j=new Uint8Array(i,p);let z=0;for(let G=0;G<r;G++)for(let r=0;r<L;r++){const p=r+G*L;n[z]=j[p],z++}return n}static UploadDDSLevels(L,r,p,J,j,G){let C=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,b=arguments.length>7?arguments[7]:void 0,c=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],P=null;J.sphericalPolynomial&&(P=[]);const O=!!L.getCaps().s3tc;r.generateMipMaps=j;const h=new Int32Array(p.buffer,p.byteOffset,31);let U,W,B,F,Q,e,v,y=0,A=0,u=1;if(542327876!==h[0])return void i.d.Error("Invalid magic number in DDS header");if(!J.isFourCC&&!J.isRGB&&!J.isLuminance)return void i.d.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(J.isCompressed&&!O)return void i.d.Error("Compressed textures are not supported on this platform.");let a=h[22];F=h[1]+4;let q=!1;if(J.isFourCC)switch(U=h[21],U){case t:u=8,A=33777;break;case E:u=16,A=33778;break;case x:u=16,A=33779;break;case 113:q=!0,a=64;break;case 116:q=!0,a=128;break;case w:{F+=20;let L=!1;switch(J.dxgiFormat){case 10:q=!0,a=64,L=!0;break;case 2:q=!0,a=128,L=!0;break;case 88:J.isRGB=!0,J.isFourCC=!1,a=32,L=!0}if(L)break}default:return void i.d.Error(["Unsupported FourCC code:",(Z=U,String.fromCharCode(255&Z,Z>>8&255,Z>>16&255,Z>>24&255))])}var Z;const X=g._ExtractLongWordOrder(h[23]),D=g._ExtractLongWordOrder(h[24]),l=g._ExtractLongWordOrder(h[25]),T=g._ExtractLongWordOrder(h[26]);q&&(A=L._getRGBABufferInternalSizedFormat(J.textureType)),e=1,h[2]&z&&!1!==j&&(e=Math.max(1,h[7]));const Y=b||0,M=L.getCaps();for(let i=Y;i<G;i++){for(W=h[4],B=h[3],v=0;v<e;++v){if(-1===C||C===v){const n=-1===C?v:0;if(!J.isCompressed&&J.isFourCC){r.format=5,y=W*B*4;let J=null;if(L._badOS||L._badDesktopOS||!M.textureHalfFloat&&!M.textureFloat)128===a?(J=g._GetFloatAsUIntRGBAArrayBuffer(W,B,p.byteOffset+F,y,p.buffer,n),P&&0==n&&P.push(g._GetFloatRGBAArrayBuffer(W,B,p.byteOffset+F,y,p.buffer,n))):64===a&&(J=g._GetHalfFloatAsUIntRGBAArrayBuffer(W,B,p.byteOffset+F,y,p.buffer,n),P&&0==n&&P.push(g._GetHalfFloatAsFloatRGBAArrayBuffer(W,B,p.byteOffset+F,y,p.buffer,n))),r.type=0;else{const L=M.textureFloat&&(c&&M.textureFloatLinearFiltering||!c),i=M.textureHalfFloat&&(c&&M.textureHalfFloatLinearFiltering||!c),j=(128===a||64===a&&!i)&&L?1:(64===a||128===a&&!L)&&i?2:0;let z,G=null;if(128===a)switch(j){case 1:z=g._GetFloatRGBAArrayBuffer,G=null;break;case 2:z=g._GetFloatAsHalfFloatRGBAArrayBuffer,G=g._GetFloatRGBAArrayBuffer;break;case 0:z=g._GetFloatAsUIntRGBAArrayBuffer,G=g._GetFloatRGBAArrayBuffer}else switch(j){case 1:z=g._GetHalfFloatAsFloatRGBAArrayBuffer,G=null;break;case 2:z=g._GetHalfFloatRGBAArrayBuffer,G=g._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:z=g._GetHalfFloatAsUIntRGBAArrayBuffer,G=g._GetHalfFloatAsFloatRGBAArrayBuffer}r.type=j,J=z(W,B,p.byteOffset+F,y,p.buffer,n),P&&0==n&&P.push(G?G(W,B,p.byteOffset+F,y,p.buffer,n):J)}J&&L._uploadDataToTextureDirectly(r,J,i,n)}else if(J.isRGB)r.type=0,24===a?(r.format=4,y=W*B*3,Q=g._GetRGBArrayBuffer(W,B,p.byteOffset+F,y,p.buffer,X,D,l),L._uploadDataToTextureDirectly(r,Q,i,n)):(r.format=5,y=W*B*4,Q=g._GetRGBAArrayBuffer(W,B,p.byteOffset+F,y,p.buffer,X,D,l,T),L._uploadDataToTextureDirectly(r,Q,i,n));else if(J.isLuminance){const J=L._getUnpackAlignement(),j=W;y=Math.floor((W+J-1)/J)*J*(B-1)+j,Q=g._GetLuminanceArrayBuffer(W,B,p.byteOffset+F,y,p.buffer),r.format=1,r.type=0,L._uploadDataToTextureDirectly(r,Q,i,n)}else y=Math.max(4,W)/4*Math.max(4,B)/4*u,Q=new Uint8Array(p.buffer,p.byteOffset+F,y),r.type=0,L._uploadCompressedDataToTextureDirectly(r,A,W,B,Q,i,n)}F+=a?W*B*(a/8):y,W*=.5,B*=.5,W=Math.max(1,W),B=Math.max(1,B)}if(void 0!==b)break}P&&P.length>0?J.sphericalPolynomial=n.b.ConvertCubeMapToSphericalPolynomial({size:h[4],right:P[0],left:P[1],up:P[2],down:P[3],front:P[4],back:P[5],format:5,type:1,gammaSpace:!1}):J.sphericalPolynomial=void 0}}g.StoreLODInAlphaChannel=!1}}]);