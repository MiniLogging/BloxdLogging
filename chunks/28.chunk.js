"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[28,29],{12801:(q,S,b)=>{var z=b(11033),C=b(10943),v=b(10977),U=b(11060),g=b(11006),r=b(11045);g.c.prototype._partialLoadFile=function(q,S,b,z){let C=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(q,(q=>{b[S]=q,b._internalCount++,6===b._internalCount&&z(b)}),void 0,void 0,!0,((q,S)=>{C&&q&&C(q.status+" "+q.statusText,S)}))},g.c.prototype._cascadeLoadFiles=function(q,S,b){let z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const C=[];C._internalCount=0;for(let v=0;v<6;v++)this._partialLoadFile(b[v],v,C,S,z)},g.c.prototype._cascadeLoadImgs=function(q,S,b,z){let C=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,v=arguments.length>5?arguments[5]:void 0;const U=[];U._internalCount=0;for(let g=0;g<6;g++)this._partialLoadImg(z[g],g,U,q,S,b,C,v)},g.c.prototype._partialLoadImg=function(q,S,b,z,C,g){let r=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,I=arguments.length>7?arguments[7]:void 0;const V=(0,U.d)();(0,v.t)(q,(q=>{b[S]=q,b._internalCount++,z&&z.removePendingData(V),6===b._internalCount&&g&&g(C,b)}),((q,S)=>{z&&z.removePendingData(V),r&&r(q,S)}),z?z.offlineProvider:null,I),z&&z.addPendingData(V)},g.c.prototype.createCubeTextureBase=function(q,S,b,v){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,g=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,I=arguments.length>6?arguments[6]:void 0,V=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,l=arguments.length>8&&void 0!==arguments[8]&&arguments[8],y=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,R=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,G=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,Z=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,H=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,Q=arguments.length>14&&void 0!==arguments[14]&&arguments[14],k=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const W=G||new z.d(this,7);W.isCube=!0,W.url=q,W.generateMipMaps=!v,W._lodGenerationScale=y,W._lodGenerationOffset=R,W._useSRGBBuffer=!!Q&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!v),W!==G&&(W.label=q.substring(0,60)),this._doNotHandleContextLost||(W._extension=V,W._files=b,W._buffer=k);const N=q;this._transformTextureUrl&&!G&&(q=this._transformTextureUrl(q));const u=V??function(q){const S=q.split("?")[0],b=S.lastIndexOf(".");return b>-1?S.substring(b).toLowerCase():""}(q),X=(0,r.d)(u),T=(q,S)=>{W.dispose(),g?g(q,S):q&&C.b.Warn(q)},B=(z,g)=>{q===N?z&&T(z.status+" "+z.statusText,g):(C.b.Warn(`Failed to load ${q}, falling back to the ${N}`),this.createCubeTextureBase(N,S,b,!!v,U,T,I,V,l,y,R,W,Z,H,Q,k))};if(X)X.then((z=>{const C=q=>{Z&&Z(W,q),z.loadCubeData(q,W,l,U,((q,S)=>{T(q,S)}))};k?C(k):b&&6===b.length?z.supportCascades?this._cascadeLoadFiles(S,(q=>C(q.map((q=>new Uint8Array(q))))),b,T):T("Textures type does not support cascades."):this._loadFile(q,(q=>C(new Uint8Array(q))),void 0,void 0,!0,B)}));else{if(!b||0===b.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(S,W,((q,S)=>{H&&H(q,S)}),b,T)}return this._internalTexturesCache.push(W),W}},13541:(q,S,b)=>{b.r(S),b.d(S,{_DDSTextureLoader:()=>v});var z=b(11291),C=b(13544);class v{constructor(){this.supportCascades=!0}loadCubeData(q,S,b,v){const U=S.getEngine();let g,r=!1,I=1e3;if(Array.isArray(q))for(let z=0;z<q.length;z++){const b=q[z];g=C.DDSTools.GetDDSInfo(b),S.width=g.width,S.height=g.height,r=(g.isRGB||g.isLuminance||g.mipmapCount>1)&&S.generateMipMaps,U._unpackFlipY(g.isCompressed),C.DDSTools.UploadDDSLevels(U,S,b,g,r,6,-1,z),g.isFourCC||1!==g.mipmapCount?I=g.mipmapCount-1:U.generateMipMapsForCubemap(S)}else{const v=q;g=C.DDSTools.GetDDSInfo(v),S.width=g.width,S.height=g.height,b&&(g.sphericalPolynomial=new z.c),r=(g.isRGB||g.isLuminance||g.mipmapCount>1)&&S.generateMipMaps,U._unpackFlipY(g.isCompressed),C.DDSTools.UploadDDSLevels(U,S,v,g,r,6),g.isFourCC||1!==g.mipmapCount?I=g.mipmapCount-1:U.generateMipMapsForCubemap(S,!1)}U._setCubeMapTextureParams(S,r,I),S.isReady=!0,S.onLoadedObservable.notifyObservers(S),S.onLoadedObservable.clear(),v&&v({isDDS:!0,width:S.width,info:g,data:q,texture:S})}loadData(q,S,b){const z=C.DDSTools.GetDDSInfo(q),v=(z.isRGB||z.isLuminance||z.mipmapCount>1)&&S.generateMipMaps&&Math.max(z.width,z.height)>>z.mipmapCount-1===1;b(z.width,z.height,v,z.isFourCC,(()=>{C.DDSTools.UploadDDSLevels(S.getEngine(),S,q,z,v,1)}))}}},11625:(q,S,b)=>{b.d(S,{d:()=>I});var z=b(11103),C=b(11121),v=b(11291),U=b(11109),g=b(11150);class r{constructor(q,S,b,z){this.name=q,this.worldAxisForNormal=S,this.worldAxisForFileX=b,this.worldAxisForFileY=z}}class I{static ConvertCubeMapTextureToSphericalPolynomial(q){var S;if(!q.isCube)return null;null===(S=q.Tq())||void 0===S||S.getEngine().flushFramebuffer();const b=q.getSize().width,z=q.readPixels(0,void 0,void 0,!1),C=q.readPixels(1,void 0,void 0,!1);let v,U;q.isRenderTarget?(v=q.readPixels(3,void 0,void 0,!1),U=q.readPixels(2,void 0,void 0,!1)):(v=q.readPixels(2,void 0,void 0,!1),U=q.readPixels(3,void 0,void 0,!1));const g=q.readPixels(4,void 0,void 0,!1),r=q.readPixels(5,void 0,void 0,!1),I=q.gammaSpace;let V=0;return 1!=q.textureType&&2!=q.textureType||(V=1),new Promise((q=>{Promise.all([C,z,v,U,g,r]).then((S=>{let[z,C,v,U,g,r]=S;const l={size:b,right:C,left:z,up:v,down:U,front:g,back:r,format:5,type:V,gammaSpace:I};q(this.ConvertCubeMapToSphericalPolynomial(l))}))}))}static _AreaElement(q,S){return Math.atan2(q*S,Math.sqrt(q*q+S*S+1))}static ConvertCubeMapToSphericalPolynomial(q){const S=new v.b;let b=0;const z=2/q.size,r=z,I=.5*z,V=I-1;for(let v=0;v<6;v++){const l=this._FileFaces[v],y=q[l.name];let R=V;const G=5===q.format?4:3;for(let v=0;v<q.size;v++){let Z=V;for(let r=0;r<q.size;r++){const V=l.worldAxisForFileX.scale(Z).add(l.worldAxisForFileY.scale(R)).add(l.worldAxisForNormal);V.normalize();const H=this._AreaElement(Z-I,R-I)-this._AreaElement(Z-I,R+I)-this._AreaElement(Z+I,R-I)+this._AreaElement(Z+I,R+I);let Q=y[v*q.size*G+r*G+0],k=y[v*q.size*G+r*G+1],W=y[v*q.size*G+r*G+2];isNaN(Q)&&(Q=0),isNaN(k)&&(k=0),isNaN(W)&&(W=0),0===q.type&&(Q/=255,k/=255,W/=255),q.gammaSpace&&(Q=Math.pow((0,C.Clamp)(Q),U.j),k=Math.pow((0,C.Clamp)(k),U.j),W=Math.pow((0,C.Clamp)(W),U.j));const N=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const q=Math.max(Q,k,W);if(q>N){const S=N/q;Q*=S,k*=S,W*=S}}else Q=(0,C.Clamp)(Q,0,N),k=(0,C.Clamp)(k,0,N),W=(0,C.Clamp)(W,0,N);const u=new g.HS(Q,k,W);S.addLight(V,u,H),b+=H,Z+=z}R+=r}}const l=6*(4*Math.PI)/6/b;return S.scaleInPlace(l),S.convertIncidentRadianceToIrradiance(),S.convertIrradianceToLambertianRadiance(),v.c.FromHarmonics(S)}}I._FileFaces=[new r("right",new z.yS(1,0,0),new z.yS(0,0,-1),new z.yS(0,-1,0)),new r("left",new z.yS(-1,0,0),new z.yS(0,0,1),new z.yS(0,-1,0)),new r("up",new z.yS(0,1,0),new z.yS(1,0,0),new z.yS(0,0,1)),new r("down",new z.yS(0,-1,0),new z.yS(1,0,0),new z.yS(0,0,-1)),new r("front",new z.yS(0,0,1),new z.yS(1,0,0),new z.yS(0,-1,0)),new r("back",new z.yS(0,0,-1),new z.yS(-1,0,0),new z.yS(0,-1,0))],I.MAX_HDRI_VALUE=4096,I.PRESERVE_CLAMPED_COLORS=!1},13544:(q,S,b)=>{b.d(S,{DDSTools:()=>G});var z=b(11121),C=b(10943),v=b(11625),U=b(11329);b(12801);const g=131072,r=131072;function I(q){return q.charCodeAt(0)+(q.charCodeAt(1)<<8)+(q.charCodeAt(2)<<16)+(q.charCodeAt(3)<<24)}const V=I("DXT1"),l=I("DXT3"),y=I("DXT5"),R=I("DX10");class G{static GetDDSInfo(q){const S=new Int32Array(q.buffer,q.byteOffset,31),b=new Int32Array(q.buffer,q.byteOffset,35);let z=1;S[2]&g&&(z=Math.max(1,S[7]));const C=S[21],v=C===R?b[32]:0;let U=0;switch(C){case 113:U=2;break;case 116:U=1;break;case R:if(10===v){U=2;break}if(2===v){U=1;break}}return{width:S[4],height:S[3],mipmapCount:z,isFourCC:4===(4&S[20]),isRGB:64===(64&S[20]),isLuminance:(S[20]&r)===r,isCube:512===(512&S[28]),isCompressed:C===V||C===l||C===y,dxgiFormat:v,textureType:U}}static _GetHalfFloatAsFloatRGBAArrayBuffer(q,S,b,z,C,v){const g=new Float32Array(z),r=new Uint16Array(C,b);let I=0;for(let V=0;V<S;V++)for(let S=0;S<q;S++){const b=4*(S+V*q);g[I]=(0,U.e)(r[b]),g[I+1]=(0,U.e)(r[b+1]),g[I+2]=(0,U.e)(r[b+2]),G.StoreLODInAlphaChannel?g[I+3]=v:g[I+3]=(0,U.e)(r[b+3]),I+=4}return g}static _GetHalfFloatRGBAArrayBuffer(q,S,b,z,C,v){if(G.StoreLODInAlphaChannel){const g=new Uint16Array(z),r=new Uint16Array(C,b);let I=0;for(let b=0;b<S;b++)for(let S=0;S<q;S++){const z=4*(S+b*q);g[I]=r[z],g[I+1]=r[z+1],g[I+2]=r[z+2],g[I+3]=(0,U.n)(v),I+=4}return g}return new Uint16Array(C,b,z)}static _GetFloatRGBAArrayBuffer(q,S,b,z,C,v){if(G.StoreLODInAlphaChannel){const U=new Float32Array(z),g=new Float32Array(C,b);let r=0;for(let b=0;b<S;b++)for(let S=0;S<q;S++){const z=4*(S+b*q);U[r]=g[z],U[r+1]=g[z+1],U[r+2]=g[z+2],U[r+3]=v,r+=4}return U}return new Float32Array(C,b,z)}static _GetFloatAsHalfFloatRGBAArrayBuffer(q,S,b,z,C,v){const g=new Uint16Array(z),r=new Float32Array(C,b);let I=0;for(let V=0;V<S;V++)for(let S=0;S<q;S++)g[I]=(0,U.n)(r[I]),g[I+1]=(0,U.n)(r[I+1]),g[I+2]=(0,U.n)(r[I+2]),G.StoreLODInAlphaChannel?g[I+3]=(0,U.n)(v):g[I+3]=(0,U.n)(r[I+3]),I+=4;return g}static _GetFloatAsUIntRGBAArrayBuffer(q,S,b,C,v,U){const g=new Uint8Array(C),r=new Float32Array(v,b);let I=0;for(let V=0;V<S;V++)for(let S=0;S<q;S++){const b=4*(S+V*q);g[I]=255*(0,z.Clamp)(r[b]),g[I+1]=255*(0,z.Clamp)(r[b+1]),g[I+2]=255*(0,z.Clamp)(r[b+2]),G.StoreLODInAlphaChannel?g[I+3]=U:g[I+3]=255*(0,z.Clamp)(r[b+3]),I+=4}return g}static _GetHalfFloatAsUIntRGBAArrayBuffer(q,S,b,C,v,g){const r=new Uint8Array(C),I=new Uint16Array(v,b);let V=0;for(let l=0;l<S;l++)for(let S=0;S<q;S++){const b=4*(S+l*q);r[V]=255*(0,z.Clamp)((0,U.e)(I[b])),r[V+1]=255*(0,z.Clamp)((0,U.e)(I[b+1])),r[V+2]=255*(0,z.Clamp)((0,U.e)(I[b+2])),G.StoreLODInAlphaChannel?r[V+3]=g:r[V+3]=255*(0,z.Clamp)((0,U.e)(I[b+3])),V+=4}return r}static _GetRGBAArrayBuffer(q,S,b,z,C,v,U,g,r){const I=new Uint8Array(z),V=new Uint8Array(C,b);let l=0;for(let y=0;y<S;y++)for(let S=0;S<q;S++){const b=4*(S+y*q);I[l]=V[b+v],I[l+1]=V[b+U],I[l+2]=V[b+g],I[l+3]=V[b+r],l+=4}return I}static _ExtractLongWordOrder(q){return 0===q||255===q||-16777216===q?0:1+G._ExtractLongWordOrder(q>>8)}static _GetRGBArrayBuffer(q,S,b,z,C,v,U,g){const r=new Uint8Array(z),I=new Uint8Array(C,b);let V=0;for(let l=0;l<S;l++)for(let S=0;S<q;S++){const b=3*(S+l*q);r[V]=I[b+v],r[V+1]=I[b+U],r[V+2]=I[b+g],V+=3}return r}static _GetLuminanceArrayBuffer(q,S,b,z,C){const v=new Uint8Array(z),U=new Uint8Array(C,b);let g=0;for(let r=0;r<S;r++)for(let S=0;S<q;S++){const b=S+r*q;v[g]=U[b],g++}return v}static UploadDDSLevels(q,S,b,z,U,r){let I=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,Z=arguments.length>7?arguments[7]:void 0,H=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],Q=null;z.sphericalPolynomial&&(Q=[]);const k=!!q.getCaps().s3tc;S.generateMipMaps=U;const W=new Int32Array(b.buffer,b.byteOffset,31);let N,u,X,T,B,t,f,m=0,E=0,e=1;if(542327876!==W[0])return void C.b.Error("Invalid magic number in DDS header");if(!z.isFourCC&&!z.isRGB&&!z.isLuminance)return void C.b.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(z.isCompressed&&!k)return void C.b.Error("Compressed textures are not supported on this platform.");let i=W[22];T=W[1]+4;let J=!1;if(z.isFourCC)switch(N=W[21],N){case V:e=8,E=33777;break;case l:e=16,E=33778;break;case y:e=16,E=33779;break;case 113:J=!0,i=64;break;case 116:J=!0,i=128;break;case R:{T+=20;let q=!1;switch(z.dxgiFormat){case 10:J=!0,i=64,q=!0;break;case 2:J=!0,i=128,q=!0;break;case 88:z.isRGB=!0,z.isFourCC=!1,i=32,q=!0}if(q)break}default:return void C.b.Error(["Unsupported FourCC code:",(L=N,String.fromCharCode(255&L,L>>8&255,L>>16&255,L>>24&255))])}var L;const d=G._ExtractLongWordOrder(W[23]),K=G._ExtractLongWordOrder(W[24]),D=G._ExtractLongWordOrder(W[25]),x=G._ExtractLongWordOrder(W[26]);J&&(E=q._getRGBABufferInternalSizedFormat(z.textureType)),t=1,W[2]&g&&!1!==U&&(t=Math.max(1,W[7]));const F=Z||0,a=q.getCaps();for(let C=F;C<r;C++){for(u=W[4],X=W[3],f=0;f<t;++f){if(-1===I||I===f){const v=-1===I?f:0;if(!z.isCompressed&&z.isFourCC){S.format=5,m=u*X*4;let z=null;if(q._badOS||q._badDesktopOS||!a.textureHalfFloat&&!a.textureFloat)128===i?(z=G._GetFloatAsUIntRGBAArrayBuffer(u,X,b.byteOffset+T,m,b.buffer,v),Q&&0==v&&Q.push(G._GetFloatRGBAArrayBuffer(u,X,b.byteOffset+T,m,b.buffer,v))):64===i&&(z=G._GetHalfFloatAsUIntRGBAArrayBuffer(u,X,b.byteOffset+T,m,b.buffer,v),Q&&0==v&&Q.push(G._GetHalfFloatAsFloatRGBAArrayBuffer(u,X,b.byteOffset+T,m,b.buffer,v))),S.type=0;else{const q=a.textureFloat&&(H&&a.textureFloatLinearFiltering||!H),C=a.textureHalfFloat&&(H&&a.textureHalfFloatLinearFiltering||!H),U=(128===i||64===i&&!C)&&q?1:(64===i||128===i&&!q)&&C?2:0;let g,r=null;if(128===i)switch(U){case 1:g=G._GetFloatRGBAArrayBuffer,r=null;break;case 2:g=G._GetFloatAsHalfFloatRGBAArrayBuffer,r=G._GetFloatRGBAArrayBuffer;break;case 0:g=G._GetFloatAsUIntRGBAArrayBuffer,r=G._GetFloatRGBAArrayBuffer}else switch(U){case 1:g=G._GetHalfFloatAsFloatRGBAArrayBuffer,r=null;break;case 2:g=G._GetHalfFloatRGBAArrayBuffer,r=G._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:g=G._GetHalfFloatAsUIntRGBAArrayBuffer,r=G._GetHalfFloatAsFloatRGBAArrayBuffer}S.type=U,z=g(u,X,b.byteOffset+T,m,b.buffer,v),Q&&0==v&&Q.push(r?r(u,X,b.byteOffset+T,m,b.buffer,v):z)}z&&q._uploadDataToTextureDirectly(S,z,C,v)}else if(z.isRGB)S.type=0,24===i?(S.format=4,m=u*X*3,B=G._GetRGBArrayBuffer(u,X,b.byteOffset+T,m,b.buffer,d,K,D),q._uploadDataToTextureDirectly(S,B,C,v)):(S.format=5,m=u*X*4,B=G._GetRGBAArrayBuffer(u,X,b.byteOffset+T,m,b.buffer,d,K,D,x),q._uploadDataToTextureDirectly(S,B,C,v));else if(z.isLuminance){const z=q._getUnpackAlignement(),U=u;m=Math.floor((u+z-1)/z)*z*(X-1)+U,B=G._GetLuminanceArrayBuffer(u,X,b.byteOffset+T,m,b.buffer),S.format=1,S.type=0,q._uploadDataToTextureDirectly(S,B,C,v)}else m=Math.max(4,u)/4*Math.max(4,X)/4*e,B=new Uint8Array(b.buffer,b.byteOffset+T,m),S.type=0,q._uploadCompressedDataToTextureDirectly(S,E,u,X,B,C,v)}T+=i?u*X*(i/8):m,u*=.5,X*=.5,u=Math.max(1,u),X=Math.max(1,X)}if(void 0!==Z)break}Q&&Q.length>0?z.sphericalPolynomial=v.d.ConvertCubeMapToSphericalPolynomial({size:W[4],right:Q[0],left:Q[1],up:Q[2],down:Q[3],front:Q[4],back:Q[5],format:5,type:1,gammaSpace:!1}):z.sphericalPolynomial=void 0}}G.StoreLODInAlphaChannel=!1}}]);