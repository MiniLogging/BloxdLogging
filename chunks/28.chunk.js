"use strict";(self["9d4d30r2sf"]=self["9d4d30r2sf"]||[]).push([[28,29],{14211:(o,v,V)=>{var g=V(12418),E=V(12308),I=V(12347),Q=V(12452),U=V(12381),n=V(12436);U.c.prototype._partialLoadFile=function(o,v,V,g){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(o,(o=>{V[v]=o,V._internalCount++,6===V._internalCount&&g(V)}),void 0,void 0,!0,((o,v)=>{E&&o&&E(o.status+" "+o.statusText,v)}))},U.c.prototype._cascadeLoadFiles=function(o,v,V){let g=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const E=[];E._internalCount=0;for(let I=0;I<6;I++)this._partialLoadFile(V[I],I,E,v,g)},U.c.prototype._cascadeLoadImgs=function(o,v,V,g){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,I=arguments.length>5?arguments[5]:void 0;const Q=[];Q._internalCount=0;for(let U=0;U<6;U++)this._partialLoadImg(g[U],U,Q,o,v,V,E,I)},U.c.prototype._partialLoadImg=function(o,v,V,g,E,U){let n=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,O=arguments.length>7?arguments[7]:void 0;const h=(0,Q.b)();(0,I.m)(o,(o=>{V[v]=o,V._internalCount++,g&&g.removePendingData(h),6===V._internalCount&&U&&U(E,V)}),((o,v)=>{g&&g.removePendingData(h),n&&n(o,v)}),g?g.offlineProvider:null,O),g&&g.addPendingData(h)},U.c.prototype.createCubeTextureBase=function(o,v,V,I){let Q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,U=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,O=arguments.length>6?arguments[6]:void 0,h=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,x=arguments.length>8&&void 0!==arguments[8]&&arguments[8],f=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,l=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,S=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,T=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,c=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,R=arguments.length>14&&void 0!==arguments[14]&&arguments[14],j=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const t=S||new g.c(this,7);t.isCube=!0,t.url=o,t.generateMipMaps=!I,t._lodGenerationScale=f,t._lodGenerationOffset=l,t._useSRGBBuffer=!!R&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!I),t!==S&&(t.label=o.substring(0,60)),this._doNotHandleContextLost||(t._extension=h,t._files=V,t._buffer=j);const s=o;this._transformTextureUrl&&!S&&(o=this._transformTextureUrl(o));const L=h??function(o){const v=o.split("?")[0],V=v.lastIndexOf(".");return V>-1?v.substring(V).toLowerCase():""}(o),b=(0,n.b)(L),u=(o,v)=>{t.dispose(),U?U(o,v):o&&E.b.Warn(o)},mo=(g,U)=>{o===s?g&&u(g.status+" "+g.statusText,U):(E.b.Warn(`Failed to load ${o}, falling back to the ${s}`),this.createCubeTextureBase(s,v,V,!!I,Q,u,O,h,x,f,l,t,T,c,R,j))};if(b)b.then((g=>{const E=o=>{T&&T(t,o),g.loadCubeData(o,t,x,Q,((o,v)=>{u(o,v)}))};j?E(j):V&&6===V.length?g.supportCascades?this._cascadeLoadFiles(v,(o=>E(o.map((o=>new Uint8Array(o))))),V,u):u("Textures type does not support cascades."):this._loadFile(o,(o=>E(new Uint8Array(o))),void 0,void 0,!0,mo)}));else{if(!V||0===V.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(v,t,((o,v)=>{c&&c(o,v)}),V,u)}return this._internalTexturesCache.push(t),t}},14970:(o,v,V)=>{V.r(v),V.d(v,{_DDSTextureLoader:()=>I});var g=V(12692),E=V(14975);class I{constructor(){this.supportCascades=!0}loadCubeData(o,v,V,I){const Q=v.getEngine();let U,n=!1,O=1e3;if(Array.isArray(o))for(let g=0;g<o.length;g++){const V=o[g];U=E.DDSTools.GetDDSInfo(V),v.width=U.width,v.height=U.height,n=(U.isRGB||U.isLuminance||U.mipmapCount>1)&&v.generateMipMaps,Q._unpackFlipY(U.isCompressed),E.DDSTools.UploadDDSLevels(Q,v,V,U,n,6,-1,g),U.isFourCC||1!==U.mipmapCount?O=U.mipmapCount-1:Q.generateMipMapsForCubemap(v)}else{const I=o;U=E.DDSTools.GetDDSInfo(I),v.width=U.width,v.height=U.height,V&&(U.sphericalPolynomial=new g.c),n=(U.isRGB||U.isLuminance||U.mipmapCount>1)&&v.generateMipMaps,Q._unpackFlipY(U.isCompressed),E.DDSTools.UploadDDSLevels(Q,v,I,U,n,6),U.isFourCC||1!==U.mipmapCount?O=U.mipmapCount-1:Q.generateMipMapsForCubemap(v,!1)}Q._setCubeMapTextureParams(v,n,O),v.isReady=!0,v.onLoadedObservable.notifyObservers(v),v.onLoadedObservable.clear(),I&&I({isDDS:!0,width:v.width,info:U,data:o,texture:v})}loadData(o,v,V){const g=E.DDSTools.GetDDSInfo(o),I=(g.isRGB||g.isLuminance||g.mipmapCount>1)&&v.generateMipMaps&&Math.max(g.width,g.height)>>g.mipmapCount-1===1;V(g.width,g.height,I,g.isFourCC,(()=>{E.DDSTools.UploadDDSLevels(v.getEngine(),v,o,g,I,1)}))}}},13031:(o,v,V)=>{V.d(v,{b:()=>O});var g=V(12488),E=V(12511),I=V(12692),Q=V(12497),U=V(12547);class n{constructor(o,v,V,g){this.name=o,this.worldAxisForNormal=v,this.worldAxisForFileX=V,this.worldAxisForFileY=g}}class O{static ConvertCubeMapTextureToSphericalPolynomial(o){var v;if(!o.isCube)return null;null===(v=o.Fo())||void 0===v||v.getEngine().flushFramebuffer();const V=o.getSize().width,g=o.readPixels(0,void 0,void 0,!1),E=o.readPixels(1,void 0,void 0,!1);let I,Q;o.isRenderTarget?(I=o.readPixels(3,void 0,void 0,!1),Q=o.readPixels(2,void 0,void 0,!1)):(I=o.readPixels(2,void 0,void 0,!1),Q=o.readPixels(3,void 0,void 0,!1));const U=o.readPixels(4,void 0,void 0,!1),n=o.readPixels(5,void 0,void 0,!1),O=o.gammaSpace;let h=0;return 1!=o.textureType&&2!=o.textureType||(h=1),new Promise((o=>{Promise.all([E,g,I,Q,U,n]).then((v=>{let[g,E,I,Q,U,n]=v;const x={size:V,right:E,left:g,up:I,down:Q,front:U,back:n,format:5,type:h,gammaSpace:O};o(this.ConvertCubeMapToSphericalPolynomial(x))}))}))}static _AreaElement(o,v){return Math.atan2(o*v,Math.sqrt(o*o+v*v+1))}static ConvertCubeMapToSphericalPolynomial(o){const v=new I.b;let V=0;const g=2/o.size,n=g,O=.5*g,h=O-1;for(let I=0;I<6;I++){const x=this._FileFaces[I],f=o[x.name];let l=h;const S=5===o.format?4:3;for(let I=0;I<o.size;I++){let T=h;for(let n=0;n<o.size;n++){const h=x.worldAxisForFileX.scale(T).add(x.worldAxisForFileY.scale(l)).add(x.worldAxisForNormal);h.normalize();const c=this._AreaElement(T-O,l-O)-this._AreaElement(T-O,l+O)-this._AreaElement(T+O,l-O)+this._AreaElement(T+O,l+O);let R=f[I*o.size*S+n*S+0],j=f[I*o.size*S+n*S+1],t=f[I*o.size*S+n*S+2];isNaN(R)&&(R=0),isNaN(j)&&(j=0),isNaN(t)&&(t=0),0===o.type&&(R/=255,j/=255,t/=255),o.gammaSpace&&(R=Math.pow((0,E.Clamp)(R),Q.k),j=Math.pow((0,E.Clamp)(j),Q.k),t=Math.pow((0,E.Clamp)(t),Q.k));const s=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const o=Math.max(R,j,t);if(o>s){const v=s/o;R*=v,j*=v,t*=v}}else R=(0,E.Clamp)(R,0,s),j=(0,E.Clamp)(j,0,s),t=(0,E.Clamp)(t,0,s);const L=new U.Lv(R,j,t);v.addLight(h,L,c),V+=c,T+=g}l+=n}}const x=6*(4*Math.PI)/6/V;return v.scaleInPlace(x),v.convertIncidentRadianceToIrradiance(),v.convertIrradianceToLambertianRadiance(),I.c.FromHarmonics(v)}}O._FileFaces=[new n("right",new g.cv(1,0,0),new g.cv(0,0,-1),new g.cv(0,-1,0)),new n("left",new g.cv(-1,0,0),new g.cv(0,0,1),new g.cv(0,-1,0)),new n("up",new g.cv(0,1,0),new g.cv(1,0,0),new g.cv(0,0,1)),new n("down",new g.cv(0,-1,0),new g.cv(1,0,0),new g.cv(0,0,-1)),new n("front",new g.cv(0,0,1),new g.cv(1,0,0),new g.cv(0,-1,0)),new n("back",new g.cv(0,0,-1),new g.cv(-1,0,0),new g.cv(0,-1,0))],O.MAX_HDRI_VALUE=4096,O.PRESERVE_CLAMPED_COLORS=!1},14975:(o,v,V)=>{V.d(v,{DDSTools:()=>S});var g=V(12511),E=V(12308),I=V(13031),Q=V(12737);V(14211);const U=131072,n=131072;function O(o){return o.charCodeAt(0)+(o.charCodeAt(1)<<8)+(o.charCodeAt(2)<<16)+(o.charCodeAt(3)<<24)}const h=O("DXT1"),x=O("DXT3"),f=O("DXT5"),l=O("DX10");class S{static GetDDSInfo(o){const v=new Int32Array(o.buffer,o.byteOffset,31),V=new Int32Array(o.buffer,o.byteOffset,35);let g=1;v[2]&U&&(g=Math.max(1,v[7]));const E=v[21],I=E===l?V[32]:0;let Q=0;switch(E){case 113:Q=2;break;case 116:Q=1;break;case l:if(10===I){Q=2;break}if(2===I){Q=1;break}}return{width:v[4],height:v[3],mipmapCount:g,isFourCC:4===(4&v[20]),isRGB:64===(64&v[20]),isLuminance:(v[20]&n)===n,isCube:512===(512&v[28]),isCompressed:E===h||E===x||E===f,dxgiFormat:I,textureType:Q}}static _GetHalfFloatAsFloatRGBAArrayBuffer(o,v,V,g,E,I){const U=new Float32Array(g),n=new Uint16Array(E,V);let O=0;for(let h=0;h<v;h++)for(let v=0;v<o;v++){const V=4*(v+h*o);U[O]=(0,Q.f)(n[V]),U[O+1]=(0,Q.f)(n[V+1]),U[O+2]=(0,Q.f)(n[V+2]),S.StoreLODInAlphaChannel?U[O+3]=I:U[O+3]=(0,Q.f)(n[V+3]),O+=4}return U}static _GetHalfFloatRGBAArrayBuffer(o,v,V,g,E,I){if(S.StoreLODInAlphaChannel){const U=new Uint16Array(g),n=new Uint16Array(E,V);let O=0;for(let V=0;V<v;V++)for(let v=0;v<o;v++){const g=4*(v+V*o);U[O]=n[g],U[O+1]=n[g+1],U[O+2]=n[g+2],U[O+3]=(0,Q.n)(I),O+=4}return U}return new Uint16Array(E,V,g)}static _GetFloatRGBAArrayBuffer(o,v,V,g,E,I){if(S.StoreLODInAlphaChannel){const Q=new Float32Array(g),U=new Float32Array(E,V);let n=0;for(let V=0;V<v;V++)for(let v=0;v<o;v++){const g=4*(v+V*o);Q[n]=U[g],Q[n+1]=U[g+1],Q[n+2]=U[g+2],Q[n+3]=I,n+=4}return Q}return new Float32Array(E,V,g)}static _GetFloatAsHalfFloatRGBAArrayBuffer(o,v,V,g,E,I){const U=new Uint16Array(g),n=new Float32Array(E,V);let O=0;for(let h=0;h<v;h++)for(let v=0;v<o;v++)U[O]=(0,Q.n)(n[O]),U[O+1]=(0,Q.n)(n[O+1]),U[O+2]=(0,Q.n)(n[O+2]),S.StoreLODInAlphaChannel?U[O+3]=(0,Q.n)(I):U[O+3]=(0,Q.n)(n[O+3]),O+=4;return U}static _GetFloatAsUIntRGBAArrayBuffer(o,v,V,E,I,Q){const U=new Uint8Array(E),n=new Float32Array(I,V);let O=0;for(let h=0;h<v;h++)for(let v=0;v<o;v++){const V=4*(v+h*o);U[O]=255*(0,g.Clamp)(n[V]),U[O+1]=255*(0,g.Clamp)(n[V+1]),U[O+2]=255*(0,g.Clamp)(n[V+2]),S.StoreLODInAlphaChannel?U[O+3]=Q:U[O+3]=255*(0,g.Clamp)(n[V+3]),O+=4}return U}static _GetHalfFloatAsUIntRGBAArrayBuffer(o,v,V,E,I,U){const n=new Uint8Array(E),O=new Uint16Array(I,V);let h=0;for(let x=0;x<v;x++)for(let v=0;v<o;v++){const V=4*(v+x*o);n[h]=255*(0,g.Clamp)((0,Q.f)(O[V])),n[h+1]=255*(0,g.Clamp)((0,Q.f)(O[V+1])),n[h+2]=255*(0,g.Clamp)((0,Q.f)(O[V+2])),S.StoreLODInAlphaChannel?n[h+3]=U:n[h+3]=255*(0,g.Clamp)((0,Q.f)(O[V+3])),h+=4}return n}static _GetRGBAArrayBuffer(o,v,V,g,E,I,Q,U,n){const O=new Uint8Array(g),h=new Uint8Array(E,V);let x=0;for(let f=0;f<v;f++)for(let v=0;v<o;v++){const V=4*(v+f*o);O[x]=h[V+I],O[x+1]=h[V+Q],O[x+2]=h[V+U],O[x+3]=h[V+n],x+=4}return O}static _ExtractLongWordOrder(o){return 0===o||255===o||-16777216===o?0:1+S._ExtractLongWordOrder(o>>8)}static _GetRGBArrayBuffer(o,v,V,g,E,I,Q,U){const n=new Uint8Array(g),O=new Uint8Array(E,V);let h=0;for(let x=0;x<v;x++)for(let v=0;v<o;v++){const V=3*(v+x*o);n[h]=O[V+I],n[h+1]=O[V+Q],n[h+2]=O[V+U],h+=3}return n}static _GetLuminanceArrayBuffer(o,v,V,g,E){const I=new Uint8Array(g),Q=new Uint8Array(E,V);let U=0;for(let n=0;n<v;n++)for(let v=0;v<o;v++){const V=v+n*o;I[U]=Q[V],U++}return I}static UploadDDSLevels(o,v,V,g,Q,n){let O=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,T=arguments.length>7?arguments[7]:void 0,c=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],R=null;g.sphericalPolynomial&&(R=[]);const j=!!o.getCaps().s3tc;v.generateMipMaps=Q;const t=new Int32Array(V.buffer,V.byteOffset,31);let s,L,b,u,mo,a,F,i=0,J=0,d=1;if(542327876!==t[0])return void E.b.Error("Invalid magic number in DDS header");if(!g.isFourCC&&!g.isRGB&&!g.isLuminance)return void E.b.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(g.isCompressed&&!j)return void E.b.Error("Compressed textures are not supported on this platform.");let N=t[22];u=t[1]+4;let Y=!1;if(g.isFourCC)switch(s=t[21],s){case h:d=8,J=33777;break;case x:d=16,J=33778;break;case f:d=16,J=33779;break;case 113:Y=!0,N=64;break;case 116:Y=!0,N=128;break;case l:{u+=20;let o=!1;switch(g.dxgiFormat){case 10:Y=!0,N=64,o=!0;break;case 2:Y=!0,N=128,o=!0;break;case 88:g.isRGB=!0,g.isFourCC=!1,N=32,o=!0}if(o)break}default:return void E.b.Error(["Unsupported FourCC code:",(q=s,String.fromCharCode(255&q,q>>8&255,q>>16&255,q>>24&255))])}var q;const P=S._ExtractLongWordOrder(t[23]),M=S._ExtractLongWordOrder(t[24]),W=S._ExtractLongWordOrder(t[25]),w=S._ExtractLongWordOrder(t[26]);Y&&(J=o._getRGBABufferInternalSizedFormat(g.textureType)),a=1,t[2]&U&&!1!==Q&&(a=Math.max(1,t[7]));const z=T||0,y=o.getCaps();for(let E=z;E<n;E++){for(L=t[4],b=t[3],F=0;F<a;++F){if(-1===O||O===F){const I=-1===O?F:0;if(!g.isCompressed&&g.isFourCC){v.format=5,i=L*b*4;let g=null;if(o._badOS||o._badDesktopOS||!y.textureHalfFloat&&!y.textureFloat)128===N?(g=S._GetFloatAsUIntRGBAArrayBuffer(L,b,V.byteOffset+u,i,V.buffer,I),R&&0==I&&R.push(S._GetFloatRGBAArrayBuffer(L,b,V.byteOffset+u,i,V.buffer,I))):64===N&&(g=S._GetHalfFloatAsUIntRGBAArrayBuffer(L,b,V.byteOffset+u,i,V.buffer,I),R&&0==I&&R.push(S._GetHalfFloatAsFloatRGBAArrayBuffer(L,b,V.byteOffset+u,i,V.buffer,I))),v.type=0;else{const o=y.textureFloat&&(c&&y.textureFloatLinearFiltering||!c),E=y.textureHalfFloat&&(c&&y.textureHalfFloatLinearFiltering||!c),Q=(128===N||64===N&&!E)&&o?1:(64===N||128===N&&!o)&&E?2:0;let U,n=null;if(128===N)switch(Q){case 1:U=S._GetFloatRGBAArrayBuffer,n=null;break;case 2:U=S._GetFloatAsHalfFloatRGBAArrayBuffer,n=S._GetFloatRGBAArrayBuffer;break;case 0:U=S._GetFloatAsUIntRGBAArrayBuffer,n=S._GetFloatRGBAArrayBuffer}else switch(Q){case 1:U=S._GetHalfFloatAsFloatRGBAArrayBuffer,n=null;break;case 2:U=S._GetHalfFloatRGBAArrayBuffer,n=S._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:U=S._GetHalfFloatAsUIntRGBAArrayBuffer,n=S._GetHalfFloatAsFloatRGBAArrayBuffer}v.type=Q,g=U(L,b,V.byteOffset+u,i,V.buffer,I),R&&0==I&&R.push(n?n(L,b,V.byteOffset+u,i,V.buffer,I):g)}g&&o._uploadDataToTextureDirectly(v,g,E,I)}else if(g.isRGB)v.type=0,24===N?(v.format=4,i=L*b*3,mo=S._GetRGBArrayBuffer(L,b,V.byteOffset+u,i,V.buffer,P,M,W),o._uploadDataToTextureDirectly(v,mo,E,I)):(v.format=5,i=L*b*4,mo=S._GetRGBAArrayBuffer(L,b,V.byteOffset+u,i,V.buffer,P,M,W,w),o._uploadDataToTextureDirectly(v,mo,E,I));else if(g.isLuminance){const g=o._getUnpackAlignement(),Q=L;i=Math.floor((L+g-1)/g)*g*(b-1)+Q,mo=S._GetLuminanceArrayBuffer(L,b,V.byteOffset+u,i,V.buffer),v.format=1,v.type=0,o._uploadDataToTextureDirectly(v,mo,E,I)}else i=Math.max(4,L)/4*Math.max(4,b)/4*d,mo=new Uint8Array(V.buffer,V.byteOffset+u,i),v.type=0,o._uploadCompressedDataToTextureDirectly(v,J,L,b,mo,E,I)}u+=N?L*b*(N/8):i,L*=.5,b*=.5,L=Math.max(1,L),b=Math.max(1,b)}if(void 0!==T)break}R&&R.length>0?g.sphericalPolynomial=I.b.ConvertCubeMapToSphericalPolynomial({size:t[4],right:R[0],left:R[1],up:R[2],down:R[3],front:R[4],back:R[5],format:5,type:1,gammaSpace:!1}):g.sphericalPolynomial=void 0}}S.StoreLODInAlphaChannel=!1}}]);