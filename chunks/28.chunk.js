"use strict";(self["3nlrbof8msu"]=self["3nlrbof8msu"]||[]).push([[28,29],{14368:(t,b,Z)=>{var J=Z(12663),S=Z(12557),P=Z(12593),v=Z(12693),h=Z(12623),C=Z(12674);h.e.prototype._partialLoadFile=function(t,b,Z,J){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(t,(t=>{Z[b]=t,Z._internalCount++,6===Z._internalCount&&J(Z)}),void 0,void 0,!0,((t,b)=>{S&&t&&S(t.status+" "+t.statusText,b)}))},h.e.prototype._cascadeLoadFiles=function(t,b,Z){let J=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const S=[];S._internalCount=0;for(let P=0;P<6;P++)this._partialLoadFile(Z[P],P,S,b,J)},h.e.prototype._cascadeLoadImgs=function(t,b,Z,J){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,P=arguments.length>5?arguments[5]:void 0;const v=[];v._internalCount=0;for(let h=0;h<6;h++)this._partialLoadImg(J[h],h,v,t,b,Z,S,P)},h.e.prototype._partialLoadImg=function(t,b,Z,J,S,h){let C=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,Y=arguments.length>7?arguments[7]:void 0;const g=(0,v.c)();(0,P.r)(t,(t=>{Z[b]=t,Z._internalCount++,J&&J.removePendingData(g),6===Z._internalCount&&h&&h(S,Z)}),((t,b)=>{J&&J.removePendingData(g),C&&C(t,b)}),J?J.offlineProvider:null,Y),J&&J.addPendingData(g)},h.e.prototype.createCubeTextureBase=function(t,b,Z,P){let v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,Y=arguments.length>6?arguments[6]:void 0,g=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,I=arguments.length>8&&void 0!==arguments[8]&&arguments[8],r=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,M=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,T=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,a=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,k=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,u=arguments.length>14&&void 0!==arguments[14]&&arguments[14],l=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const U=T||new J.d(this,7);U.isCube=!0,U.url=t,U.generateMipMaps=!P,U._lodGenerationScale=r,U._lodGenerationOffset=M,U._useSRGBBuffer=!!u&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!P),U!==T&&(U.label=t.substring(0,60)),this._doNotHandleContextLost||(U._extension=g,U._files=Z,U._buffer=l);const E=t;this._transformTextureUrl&&!T&&(t=this._transformTextureUrl(t));const c=g??function(t){const b=t.split("?")[0],Z=b.lastIndexOf(".");return Z>-1?b.substring(Z).toLowerCase():""}(t),H=(0,C.b)(c),o=(t,b)=>{U.dispose(),h?h(t,b):t&&S.c.Warn(t)},O=(J,h)=>{t===E?J&&o(J.status+" "+J.statusText,h):(S.c.Warn(`Failed to load ${t}, falling back to the ${E}`),this.createCubeTextureBase(E,b,Z,!!P,v,o,Y,g,I,r,M,U,a,k,u,l))};if(H)H.then((J=>{const S=t=>{a&&a(U,t),J.loadCubeData(t,U,I,v,((t,b)=>{o(t,b)}))};l?S(l):Z&&6===Z.length?J.supportCascades?this._cascadeLoadFiles(b,(t=>S(t.map((t=>new Uint8Array(t))))),Z,o):o("Textures type does not support cascades."):this._loadFile(t,(t=>S(new Uint8Array(t))),void 0,void 0,!0,O)}));else{if(!Z||0===Z.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(b,U,((t,b)=>{k&&k(t,b)}),Z,o)}return this._internalTexturesCache.push(U),U}},15163:(t,b,Z)=>{Z.r(b),Z.d(b,{_DDSTextureLoader:()=>P});var J=Z(12923),S=Z(15167);class P{constructor(){this.supportCascades=!0}loadCubeData(t,b,Z,P){const v=b.getEngine();let h,C=!1,Y=1e3;if(Array.isArray(t))for(let J=0;J<t.length;J++){const Z=t[J];h=S.DDSTools.GetDDSInfo(Z),b.width=h.width,b.height=h.height,C=(h.isRGB||h.isLuminance||h.mipmapCount>1)&&b.generateMipMaps,v._unpackFlipY(h.isCompressed),S.DDSTools.UploadDDSLevels(v,b,Z,h,C,6,-1,J),h.isFourCC||1!==h.mipmapCount?Y=h.mipmapCount-1:v.generateMipMapsForCubemap(b)}else{const P=t;h=S.DDSTools.GetDDSInfo(P),b.width=h.width,b.height=h.height,Z&&(h.sphericalPolynomial=new J.f),C=(h.isRGB||h.isLuminance||h.mipmapCount>1)&&b.generateMipMaps,v._unpackFlipY(h.isCompressed),S.DDSTools.UploadDDSLevels(v,b,P,h,C,6),h.isFourCC||1!==h.mipmapCount?Y=h.mipmapCount-1:v.generateMipMapsForCubemap(b,!1)}v._setCubeMapTextureParams(b,C,Y),b.isReady=!0,b.onLoadedObservable.notifyObservers(b),b.onLoadedObservable.clear(),P&&P({isDDS:!0,width:b.width,info:h,data:t,texture:b})}loadData(t,b,Z){const J=S.DDSTools.GetDDSInfo(t),P=(J.isRGB||J.isLuminance||J.mipmapCount>1)&&b.generateMipMaps&&Math.max(J.width,J.height)>>J.mipmapCount-1===1;Z(J.width,J.height,P,J.isFourCC,(()=>{S.DDSTools.UploadDDSLevels(b.getEngine(),b,t,J,P,1)}))}}},13253:(t,b,Z)=>{Z.d(b,{e:()=>Y});var J=Z(12735),S=Z(12745),P=Z(12923),v=Z(12737),h=Z(12775);class C{constructor(t,b,Z,J){this.name=t,this.worldAxisForNormal=b,this.worldAxisForFileX=Z,this.worldAxisForFileY=J}}class Y{static ConvertCubeMapTextureToSphericalPolynomial(t){var b;if(!t.isCube)return null;null===(b=t.et())||void 0===b||b.getEngine().flushFramebuffer();const Z=t.getSize().width,J=t.readPixels(0,void 0,void 0,!1),S=t.readPixels(1,void 0,void 0,!1);let P,v;t.isRenderTarget?(P=t.readPixels(3,void 0,void 0,!1),v=t.readPixels(2,void 0,void 0,!1)):(P=t.readPixels(2,void 0,void 0,!1),v=t.readPixels(3,void 0,void 0,!1));const h=t.readPixels(4,void 0,void 0,!1),C=t.readPixels(5,void 0,void 0,!1),Y=t.gammaSpace;let g=0;return 1!=t.textureType&&2!=t.textureType||(g=1),new Promise((t=>{Promise.all([S,J,P,v,h,C]).then((b=>{let[J,S,P,v,h,C]=b;const I={size:Z,right:S,left:J,up:P,down:v,front:h,back:C,format:5,type:g,gammaSpace:Y};t(this.ConvertCubeMapToSphericalPolynomial(I))}))}))}static _AreaElement(t,b){return Math.atan2(t*b,Math.sqrt(t*t+b*b+1))}static ConvertCubeMapToSphericalPolynomial(t){const b=new P.e;let Z=0;const J=2/t.size,C=J,Y=.5*J,g=Y-1;for(let P=0;P<6;P++){const I=this._FileFaces[P],r=t[I.name];let M=g;const T=5===t.format?4:3;for(let P=0;P<t.size;P++){let a=g;for(let C=0;C<t.size;C++){const g=I.worldAxisForFileX.scale(a).add(I.worldAxisForFileY.scale(M)).add(I.worldAxisForNormal);g.normalize();const k=this._AreaElement(a-Y,M-Y)-this._AreaElement(a-Y,M+Y)-this._AreaElement(a+Y,M-Y)+this._AreaElement(a+Y,M+Y);let u=r[P*t.size*T+C*T+0],l=r[P*t.size*T+C*T+1],U=r[P*t.size*T+C*T+2];isNaN(u)&&(u=0),isNaN(l)&&(l=0),isNaN(U)&&(U=0),0===t.type&&(u/=255,l/=255,U/=255),t.gammaSpace&&(u=Math.pow((0,S.Clamp)(u),v.m),l=Math.pow((0,S.Clamp)(l),v.m),U=Math.pow((0,S.Clamp)(U),v.m));const E=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const t=Math.max(u,l,U);if(t>E){const b=E/t;u*=b,l*=b,U*=b}}else u=(0,S.Clamp)(u,0,E),l=(0,S.Clamp)(l,0,E),U=(0,S.Clamp)(U,0,E);const c=new h.hZ(u,l,U);b.addLight(g,c,k),Z+=k,a+=J}M+=C}}const I=6*(4*Math.PI)/6/Z;return b.scaleInPlace(I),b.convertIncidentRadianceToIrradiance(),b.convertIrradianceToLambertianRadiance(),P.f.FromHarmonics(b)}}Y._FileFaces=[new C("right",new J.JZ(1,0,0),new J.JZ(0,0,-1),new J.JZ(0,-1,0)),new C("left",new J.JZ(-1,0,0),new J.JZ(0,0,1),new J.JZ(0,-1,0)),new C("up",new J.JZ(0,1,0),new J.JZ(1,0,0),new J.JZ(0,0,1)),new C("down",new J.JZ(0,-1,0),new J.JZ(1,0,0),new J.JZ(0,0,-1)),new C("front",new J.JZ(0,0,1),new J.JZ(1,0,0),new J.JZ(0,-1,0)),new C("back",new J.JZ(0,0,-1),new J.JZ(-1,0,0),new J.JZ(0,-1,0))],Y.MAX_HDRI_VALUE=4096,Y.PRESERVE_CLAMPED_COLORS=!1},15167:(t,b,Z)=>{Z.d(b,{DDSTools:()=>T});var J=Z(12745),S=Z(12557),P=Z(13253),v=Z(12964);Z(14368);const h=131072,C=131072;function Y(t){return t.charCodeAt(0)+(t.charCodeAt(1)<<8)+(t.charCodeAt(2)<<16)+(t.charCodeAt(3)<<24)}const g=Y("DXT1"),I=Y("DXT3"),r=Y("DXT5"),M=Y("DX10");class T{static GetDDSInfo(t){const b=new Int32Array(t.buffer,t.byteOffset,31),Z=new Int32Array(t.buffer,t.byteOffset,35);let J=1;b[2]&h&&(J=Math.max(1,b[7]));const S=b[21],P=S===M?Z[32]:0;let v=0;switch(S){case 113:v=2;break;case 116:v=1;break;case M:if(10===P){v=2;break}if(2===P){v=1;break}}return{width:b[4],height:b[3],mipmapCount:J,isFourCC:4===(4&b[20]),isRGB:64===(64&b[20]),isLuminance:(b[20]&C)===C,isCube:512===(512&b[28]),isCompressed:S===g||S===I||S===r,dxgiFormat:P,textureType:v}}static _GetHalfFloatAsFloatRGBAArrayBuffer(t,b,Z,J,S,P){const h=new Float32Array(J),C=new Uint16Array(S,Z);let Y=0;for(let g=0;g<b;g++)for(let b=0;b<t;b++){const Z=4*(b+g*t);h[Y]=(0,v.f)(C[Z]),h[Y+1]=(0,v.f)(C[Z+1]),h[Y+2]=(0,v.f)(C[Z+2]),T.StoreLODInAlphaChannel?h[Y+3]=P:h[Y+3]=(0,v.f)(C[Z+3]),Y+=4}return h}static _GetHalfFloatRGBAArrayBuffer(t,b,Z,J,S,P){if(T.StoreLODInAlphaChannel){const h=new Uint16Array(J),C=new Uint16Array(S,Z);let Y=0;for(let Z=0;Z<b;Z++)for(let b=0;b<t;b++){const J=4*(b+Z*t);h[Y]=C[J],h[Y+1]=C[J+1],h[Y+2]=C[J+2],h[Y+3]=(0,v.m)(P),Y+=4}return h}return new Uint16Array(S,Z,J)}static _GetFloatRGBAArrayBuffer(t,b,Z,J,S,P){if(T.StoreLODInAlphaChannel){const v=new Float32Array(J),h=new Float32Array(S,Z);let C=0;for(let Z=0;Z<b;Z++)for(let b=0;b<t;b++){const J=4*(b+Z*t);v[C]=h[J],v[C+1]=h[J+1],v[C+2]=h[J+2],v[C+3]=P,C+=4}return v}return new Float32Array(S,Z,J)}static _GetFloatAsHalfFloatRGBAArrayBuffer(t,b,Z,J,S,P){const h=new Uint16Array(J),C=new Float32Array(S,Z);let Y=0;for(let g=0;g<b;g++)for(let b=0;b<t;b++)h[Y]=(0,v.m)(C[Y]),h[Y+1]=(0,v.m)(C[Y+1]),h[Y+2]=(0,v.m)(C[Y+2]),T.StoreLODInAlphaChannel?h[Y+3]=(0,v.m)(P):h[Y+3]=(0,v.m)(C[Y+3]),Y+=4;return h}static _GetFloatAsUIntRGBAArrayBuffer(t,b,Z,S,P,v){const h=new Uint8Array(S),C=new Float32Array(P,Z);let Y=0;for(let g=0;g<b;g++)for(let b=0;b<t;b++){const Z=4*(b+g*t);h[Y]=255*(0,J.Clamp)(C[Z]),h[Y+1]=255*(0,J.Clamp)(C[Z+1]),h[Y+2]=255*(0,J.Clamp)(C[Z+2]),T.StoreLODInAlphaChannel?h[Y+3]=v:h[Y+3]=255*(0,J.Clamp)(C[Z+3]),Y+=4}return h}static _GetHalfFloatAsUIntRGBAArrayBuffer(t,b,Z,S,P,h){const C=new Uint8Array(S),Y=new Uint16Array(P,Z);let g=0;for(let I=0;I<b;I++)for(let b=0;b<t;b++){const Z=4*(b+I*t);C[g]=255*(0,J.Clamp)((0,v.f)(Y[Z])),C[g+1]=255*(0,J.Clamp)((0,v.f)(Y[Z+1])),C[g+2]=255*(0,J.Clamp)((0,v.f)(Y[Z+2])),T.StoreLODInAlphaChannel?C[g+3]=h:C[g+3]=255*(0,J.Clamp)((0,v.f)(Y[Z+3])),g+=4}return C}static _GetRGBAArrayBuffer(t,b,Z,J,S,P,v,h,C){const Y=new Uint8Array(J),g=new Uint8Array(S,Z);let I=0;for(let r=0;r<b;r++)for(let b=0;b<t;b++){const Z=4*(b+r*t);Y[I]=g[Z+P],Y[I+1]=g[Z+v],Y[I+2]=g[Z+h],Y[I+3]=g[Z+C],I+=4}return Y}static _ExtractLongWordOrder(t){return 0===t||255===t||-16777216===t?0:1+T._ExtractLongWordOrder(t>>8)}static _GetRGBArrayBuffer(t,b,Z,J,S,P,v,h){const C=new Uint8Array(J),Y=new Uint8Array(S,Z);let g=0;for(let I=0;I<b;I++)for(let b=0;b<t;b++){const Z=3*(b+I*t);C[g]=Y[Z+P],C[g+1]=Y[Z+v],C[g+2]=Y[Z+h],g+=3}return C}static _GetLuminanceArrayBuffer(t,b,Z,J,S){const P=new Uint8Array(J),v=new Uint8Array(S,Z);let h=0;for(let C=0;C<b;C++)for(let b=0;b<t;b++){const Z=b+C*t;P[h]=v[Z],h++}return P}static UploadDDSLevels(t,b,Z,J,v,C){let Y=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,a=arguments.length>7?arguments[7]:void 0,k=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],u=null;J.sphericalPolynomial&&(u=[]);const l=!!t.getCaps().s3tc;b.generateMipMaps=v;const U=new Int32Array(Z.buffer,Z.byteOffset,31);let E,c,H,o,O,p,e,W=0,j=0,V=1;if(542327876!==U[0])return void S.c.Error("Invalid magic number in DDS header");if(!J.isFourCC&&!J.isRGB&&!J.isLuminance)return void S.c.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(J.isCompressed&&!l)return void S.c.Error("Compressed textures are not supported on this platform.");let n=U[22];o=U[1]+4;let y=!1;if(J.isFourCC)switch(E=U[21],E){case g:V=8,j=33777;break;case I:V=16,j=33778;break;case r:V=16,j=33779;break;case 113:y=!0,n=64;break;case 116:y=!0,n=128;break;case M:{o+=20;let t=!1;switch(J.dxgiFormat){case 10:y=!0,n=64,t=!0;break;case 2:y=!0,n=128,t=!0;break;case 88:J.isRGB=!0,J.isFourCC=!1,n=32,t=!0}if(t)break}default:return void S.c.Error(["Unsupported FourCC code:",(d=E,String.fromCharCode(255&d,d>>8&255,d>>16&255,d>>24&255))])}var d;const s=T._ExtractLongWordOrder(U[23]),q=T._ExtractLongWordOrder(U[24]),Q=T._ExtractLongWordOrder(U[25]),N=T._ExtractLongWordOrder(U[26]);y&&(j=t._getRGBABufferInternalSizedFormat(J.textureType)),p=1,U[2]&h&&!1!==v&&(p=Math.max(1,U[7]));const A=a||0,K=t.getCaps();for(let S=A;S<C;S++){for(c=U[4],H=U[3],e=0;e<p;++e){if(-1===Y||Y===e){const P=-1===Y?e:0;if(!J.isCompressed&&J.isFourCC){b.format=5,W=c*H*4;let J=null;if(t._badOS||t._badDesktopOS||!K.textureHalfFloat&&!K.textureFloat)128===n?(J=T._GetFloatAsUIntRGBAArrayBuffer(c,H,Z.byteOffset+o,W,Z.buffer,P),u&&0==P&&u.push(T._GetFloatRGBAArrayBuffer(c,H,Z.byteOffset+o,W,Z.buffer,P))):64===n&&(J=T._GetHalfFloatAsUIntRGBAArrayBuffer(c,H,Z.byteOffset+o,W,Z.buffer,P),u&&0==P&&u.push(T._GetHalfFloatAsFloatRGBAArrayBuffer(c,H,Z.byteOffset+o,W,Z.buffer,P))),b.type=0;else{const t=K.textureFloat&&(k&&K.textureFloatLinearFiltering||!k),S=K.textureHalfFloat&&(k&&K.textureHalfFloatLinearFiltering||!k),v=(128===n||64===n&&!S)&&t?1:(64===n||128===n&&!t)&&S?2:0;let h,C=null;if(128===n)switch(v){case 1:h=T._GetFloatRGBAArrayBuffer,C=null;break;case 2:h=T._GetFloatAsHalfFloatRGBAArrayBuffer,C=T._GetFloatRGBAArrayBuffer;break;case 0:h=T._GetFloatAsUIntRGBAArrayBuffer,C=T._GetFloatRGBAArrayBuffer}else switch(v){case 1:h=T._GetHalfFloatAsFloatRGBAArrayBuffer,C=null;break;case 2:h=T._GetHalfFloatRGBAArrayBuffer,C=T._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:h=T._GetHalfFloatAsUIntRGBAArrayBuffer,C=T._GetHalfFloatAsFloatRGBAArrayBuffer}b.type=v,J=h(c,H,Z.byteOffset+o,W,Z.buffer,P),u&&0==P&&u.push(C?C(c,H,Z.byteOffset+o,W,Z.buffer,P):J)}J&&t._uploadDataToTextureDirectly(b,J,S,P)}else if(J.isRGB)b.type=0,24===n?(b.format=4,W=c*H*3,O=T._GetRGBArrayBuffer(c,H,Z.byteOffset+o,W,Z.buffer,s,q,Q),t._uploadDataToTextureDirectly(b,O,S,P)):(b.format=5,W=c*H*4,O=T._GetRGBAArrayBuffer(c,H,Z.byteOffset+o,W,Z.buffer,s,q,Q,N),t._uploadDataToTextureDirectly(b,O,S,P));else if(J.isLuminance){const J=t._getUnpackAlignement(),v=c;W=Math.floor((c+J-1)/J)*J*(H-1)+v,O=T._GetLuminanceArrayBuffer(c,H,Z.byteOffset+o,W,Z.buffer),b.format=1,b.type=0,t._uploadDataToTextureDirectly(b,O,S,P)}else W=Math.max(4,c)/4*Math.max(4,H)/4*V,O=new Uint8Array(Z.buffer,Z.byteOffset+o,W),b.type=0,t._uploadCompressedDataToTextureDirectly(b,j,c,H,O,S,P)}o+=n?c*H*(n/8):W,c*=.5,H*=.5,c=Math.max(1,c),H=Math.max(1,H)}if(void 0!==a)break}u&&u.length>0?J.sphericalPolynomial=P.e.ConvertCubeMapToSphericalPolynomial({size:U[4],right:u[0],left:u[1],up:u[2],down:u[3],front:u[4],back:u[5],format:5,type:1,gammaSpace:!1}):J.sphericalPolynomial=void 0}}T.StoreLODInAlphaChannel=!1}}]);