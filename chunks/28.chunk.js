"use strict";(self.mo7o6813fhb=self.mo7o6813fhb||[]).push([[28,29],{13812:(t,U,y)=>{var I=y(12320),r=y(12221),Y=y(12253),mt=y(12341),X=y(12285),P=y(12328);X.e.prototype._partialLoadFile=function(t,U,y,I){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(t,(t=>{y[U]=t,y._internalCount++,6===y._internalCount&&I(y)}),void 0,void 0,!0,((t,U)=>{r&&t&&r(t.status+" "+t.statusText,U)}))},X.e.prototype._cascadeLoadFiles=function(t,U,y){let I=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=[];r._internalCount=0;for(let Y=0;Y<6;Y++)this._partialLoadFile(y[Y],Y,r,U,I)},X.e.prototype._cascadeLoadImgs=function(t,U,y,I){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,Y=arguments.length>5?arguments[5]:void 0;const mt=[];mt._internalCount=0;for(let X=0;X<6;X++)this._partialLoadImg(I[X],X,mt,t,U,y,r,Y)},X.e.prototype._partialLoadImg=function(t,U,y,I,r,X){let P=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,G=arguments.length>7?arguments[7]:void 0;const M=(0,mt.b)();(0,Y.v)(t,(t=>{y[U]=t,y._internalCount++,I&&I.removePendingData(M),6===y._internalCount&&X&&X(r,y)}),((t,U)=>{I&&I.removePendingData(M),P&&P(t,U)}),I?I.offlineProvider:null,G),I&&I.addPendingData(M)},X.e.prototype.createCubeTextureBase=function(t,U,y,Y){let mt=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,X=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,G=arguments.length>6?arguments[6]:void 0,M=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,L=arguments.length>8&&void 0!==arguments[8]&&arguments[8],h=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,Q=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,F=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,E=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,w=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,D=arguments.length>14&&void 0!==arguments[14]&&arguments[14],l=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const g=F||new I.e(this,7);g.isCube=!0,g.url=t,g.generateMipMaps=!Y,g._lodGenerationScale=h,g._lodGenerationOffset=Q,g._useSRGBBuffer=!!D&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!Y),g!==F&&(g.label=t.substring(0,60)),this._doNotHandleContextLost||(g._extension=M,g._files=y,g._buffer=l);const B=t;this._transformTextureUrl&&!F&&(t=this._transformTextureUrl(t));const b=M??function(t){const U=t.split("?")[0],y=U.lastIndexOf(".");return y>-1?U.substring(y).toLowerCase():""}(t),p=(0,P.b)(b),c=(t,U)=>{g.dispose(),X?X(t,U):t&&r.b.Warn(t)},f=(I,X)=>{t===B?I&&c(I.status+" "+I.statusText,X):(r.b.Warn(`Failed to load ${t}, falling back to the ${B}`),this.createCubeTextureBase(B,U,y,!!Y,mt,c,G,M,L,h,Q,g,E,w,D,l))};if(p)p.then((I=>{const r=t=>{E&&E(g,t),I.loadCubeData(t,g,L,mt,((t,U)=>{c(t,U)}))};l?r(l):y&&6===y.length?I.supportCascades?this._cascadeLoadFiles(U,(t=>r(t.map((t=>new Uint8Array(t))))),y,c):c("Textures type does not support cascades."):this._loadFile(t,(t=>r(new Uint8Array(t))),void 0,void 0,!0,f)}));else{if(!y||0===y.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(U,g,((t,U)=>{w&&w(t,U)}),y,c)}return this._internalTexturesCache.push(g),g}},14598:(t,U,y)=>{y.r(U),y.d(U,{_DDSTextureLoader:()=>Y});var I=y(12597),r=y(14605);class Y{constructor(){this.supportCascades=!0}loadCubeData(t,U,y,Y){const mt=U.getEngine();let X,P=!1,G=1e3;if(Array.isArray(t))for(let I=0;I<t.length;I++){const y=t[I];X=r.DDSTools.GetDDSInfo(y),U.width=X.width,U.height=X.height,P=(X.isRGB||X.isLuminance||X.mipmapCount>1)&&U.generateMipMaps,mt._unpackFlipY(X.isCompressed),r.DDSTools.UploadDDSLevels(mt,U,y,X,P,6,-1,I),X.isFourCC||1!==X.mipmapCount?G=X.mipmapCount-1:mt.generateMipMapsForCubemap(U)}else{const Y=t;X=r.DDSTools.GetDDSInfo(Y),U.width=X.width,U.height=X.height,y&&(X.sphericalPolynomial=new I.e),P=(X.isRGB||X.isLuminance||X.mipmapCount>1)&&U.generateMipMaps,mt._unpackFlipY(X.isCompressed),r.DDSTools.UploadDDSLevels(mt,U,Y,X,P,6),X.isFourCC||1!==X.mipmapCount?G=X.mipmapCount-1:mt.generateMipMapsForCubemap(U,!1)}mt._setCubeMapTextureParams(U,P,G),U.isReady=!0,U.onLoadedObservable.notifyObservers(U),U.onLoadedObservable.clear(),Y&&Y({isDDS:!0,width:U.width,info:X,data:t,texture:U})}loadData(t,U,y){const I=r.DDSTools.GetDDSInfo(t),Y=(I.isRGB||I.isLuminance||I.mipmapCount>1)&&U.generateMipMaps&&Math.max(I.width,I.height)>>I.mipmapCount-1===1;y(I.width,I.height,Y,I.isFourCC,(()=>{r.DDSTools.UploadDDSLevels(U.getEngine(),U,t,I,Y,1)}))}}},12950:(t,U,y)=>{y.d(U,{e:()=>G});var I=y(12386),r=y(12404),Y=y(12597),mt=y(12392),X=y(12442);class P{constructor(t,U,y,I){this.name=t,this.worldAxisForNormal=U,this.worldAxisForFileX=y,this.worldAxisForFileY=I}}class G{static ConvertCubeMapTextureToSphericalPolynomial(t){var U;if(!t.isCube)return null;null===(U=t.St())||void 0===U||U.getEngine().flushFramebuffer();const y=t.getSize().width,I=t.readPixels(0,void 0,void 0,!1),r=t.readPixels(1,void 0,void 0,!1);let Y,mt;t.isRenderTarget?(Y=t.readPixels(3,void 0,void 0,!1),mt=t.readPixels(2,void 0,void 0,!1)):(Y=t.readPixels(2,void 0,void 0,!1),mt=t.readPixels(3,void 0,void 0,!1));const X=t.readPixels(4,void 0,void 0,!1),P=t.readPixels(5,void 0,void 0,!1),G=t.gammaSpace;let M=0;return 1!=t.textureType&&2!=t.textureType||(M=1),new Promise((t=>{Promise.all([r,I,Y,mt,X,P]).then((U=>{let[I,r,Y,mt,X,P]=U;const L={size:y,right:r,left:I,up:Y,down:mt,front:X,back:P,format:5,type:M,gammaSpace:G};t(this.ConvertCubeMapToSphericalPolynomial(L))}))}))}static _AreaElement(t,U){return Math.atan2(t*U,Math.sqrt(t*t+U*U+1))}static ConvertCubeMapToSphericalPolynomial(t){const U=new Y.b;let y=0;const I=2/t.size,P=I,G=.5*I,M=G-1;for(let Y=0;Y<6;Y++){const L=this._FileFaces[Y],h=t[L.name];let Q=M;const F=5===t.format?4:3;for(let Y=0;Y<t.size;Y++){let E=M;for(let P=0;P<t.size;P++){const M=L.worldAxisForFileX.scale(E).add(L.worldAxisForFileY.scale(Q)).add(L.worldAxisForNormal);M.normalize();const w=this._AreaElement(E-G,Q-G)-this._AreaElement(E-G,Q+G)-this._AreaElement(E+G,Q-G)+this._AreaElement(E+G,Q+G);let D=h[Y*t.size*F+P*F+0],l=h[Y*t.size*F+P*F+1],g=h[Y*t.size*F+P*F+2];isNaN(D)&&(D=0),isNaN(l)&&(l=0),isNaN(g)&&(g=0),0===t.type&&(D/=255,l/=255,g/=255),t.gammaSpace&&(D=Math.pow((0,r.Clamp)(D),mt.g),l=Math.pow((0,r.Clamp)(l),mt.g),g=Math.pow((0,r.Clamp)(g),mt.g));const B=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const t=Math.max(D,l,g);if(t>B){const U=B/t;D*=U,l*=U,g*=U}}else D=(0,r.Clamp)(D,0,B),l=(0,r.Clamp)(l,0,B),g=(0,r.Clamp)(g,0,B);const b=new X.bU(D,l,g);U.addLight(M,b,w),y+=w,E+=I}Q+=P}}const L=6*(4*Math.PI)/6/y;return U.scaleInPlace(L),U.convertIncidentRadianceToIrradiance(),U.convertIrradianceToLambertianRadiance(),Y.e.FromHarmonics(U)}}G._FileFaces=[new P("right",new I.DU(1,0,0),new I.DU(0,0,-1),new I.DU(0,-1,0)),new P("left",new I.DU(-1,0,0),new I.DU(0,0,1),new I.DU(0,-1,0)),new P("up",new I.DU(0,1,0),new I.DU(1,0,0),new I.DU(0,0,1)),new P("down",new I.DU(0,-1,0),new I.DU(1,0,0),new I.DU(0,0,-1)),new P("front",new I.DU(0,0,1),new I.DU(1,0,0),new I.DU(0,-1,0)),new P("back",new I.DU(0,0,-1),new I.DU(-1,0,0),new I.DU(0,-1,0))],G.MAX_HDRI_VALUE=4096,G.PRESERVE_CLAMPED_COLORS=!1},14605:(t,U,y)=>{y.d(U,{DDSTools:()=>F});var I=y(12404),r=y(12221),Y=y(12950),mt=y(12640);y(13812);const X=131072,P=131072;function G(t){return t.charCodeAt(0)+(t.charCodeAt(1)<<8)+(t.charCodeAt(2)<<16)+(t.charCodeAt(3)<<24)}const M=G("DXT1"),L=G("DXT3"),h=G("DXT5"),Q=G("DX10");class F{static GetDDSInfo(t){const U=new Int32Array(t.buffer,t.byteOffset,31),y=new Int32Array(t.buffer,t.byteOffset,35);let I=1;U[2]&X&&(I=Math.max(1,U[7]));const r=U[21],Y=r===Q?y[32]:0;let mt=0;switch(r){case 113:mt=2;break;case 116:mt=1;break;case Q:if(10===Y){mt=2;break}if(2===Y){mt=1;break}}return{width:U[4],height:U[3],mipmapCount:I,isFourCC:4===(4&U[20]),isRGB:64===(64&U[20]),isLuminance:(U[20]&P)===P,isCube:512===(512&U[28]),isCompressed:r===M||r===L||r===h,dxgiFormat:Y,textureType:mt}}static _GetHalfFloatAsFloatRGBAArrayBuffer(t,U,y,I,r,Y){const X=new Float32Array(I),P=new Uint16Array(r,y);let G=0;for(let M=0;M<U;M++)for(let U=0;U<t;U++){const y=4*(U+M*t);X[G]=(0,mt.e)(P[y]),X[G+1]=(0,mt.e)(P[y+1]),X[G+2]=(0,mt.e)(P[y+2]),F.StoreLODInAlphaChannel?X[G+3]=Y:X[G+3]=(0,mt.e)(P[y+3]),G+=4}return X}static _GetHalfFloatRGBAArrayBuffer(t,U,y,I,r,Y){if(F.StoreLODInAlphaChannel){const X=new Uint16Array(I),P=new Uint16Array(r,y);let G=0;for(let y=0;y<U;y++)for(let U=0;U<t;U++){const I=4*(U+y*t);X[G]=P[I],X[G+1]=P[I+1],X[G+2]=P[I+2],X[G+3]=(0,mt.n)(Y),G+=4}return X}return new Uint16Array(r,y,I)}static _GetFloatRGBAArrayBuffer(t,U,y,I,r,Y){if(F.StoreLODInAlphaChannel){const mt=new Float32Array(I),X=new Float32Array(r,y);let P=0;for(let y=0;y<U;y++)for(let U=0;U<t;U++){const I=4*(U+y*t);mt[P]=X[I],mt[P+1]=X[I+1],mt[P+2]=X[I+2],mt[P+3]=Y,P+=4}return mt}return new Float32Array(r,y,I)}static _GetFloatAsHalfFloatRGBAArrayBuffer(t,U,y,I,r,Y){const X=new Uint16Array(I),P=new Float32Array(r,y);let G=0;for(let M=0;M<U;M++)for(let U=0;U<t;U++)X[G]=(0,mt.n)(P[G]),X[G+1]=(0,mt.n)(P[G+1]),X[G+2]=(0,mt.n)(P[G+2]),F.StoreLODInAlphaChannel?X[G+3]=(0,mt.n)(Y):X[G+3]=(0,mt.n)(P[G+3]),G+=4;return X}static _GetFloatAsUIntRGBAArrayBuffer(t,U,y,r,Y,mt){const X=new Uint8Array(r),P=new Float32Array(Y,y);let G=0;for(let M=0;M<U;M++)for(let U=0;U<t;U++){const y=4*(U+M*t);X[G]=255*(0,I.Clamp)(P[y]),X[G+1]=255*(0,I.Clamp)(P[y+1]),X[G+2]=255*(0,I.Clamp)(P[y+2]),F.StoreLODInAlphaChannel?X[G+3]=mt:X[G+3]=255*(0,I.Clamp)(P[y+3]),G+=4}return X}static _GetHalfFloatAsUIntRGBAArrayBuffer(t,U,y,r,Y,X){const P=new Uint8Array(r),G=new Uint16Array(Y,y);let M=0;for(let L=0;L<U;L++)for(let U=0;U<t;U++){const y=4*(U+L*t);P[M]=255*(0,I.Clamp)((0,mt.e)(G[y])),P[M+1]=255*(0,I.Clamp)((0,mt.e)(G[y+1])),P[M+2]=255*(0,I.Clamp)((0,mt.e)(G[y+2])),F.StoreLODInAlphaChannel?P[M+3]=X:P[M+3]=255*(0,I.Clamp)((0,mt.e)(G[y+3])),M+=4}return P}static _GetRGBAArrayBuffer(t,U,y,I,r,Y,mt,X,P){const G=new Uint8Array(I),M=new Uint8Array(r,y);let L=0;for(let h=0;h<U;h++)for(let U=0;U<t;U++){const y=4*(U+h*t);G[L]=M[y+Y],G[L+1]=M[y+mt],G[L+2]=M[y+X],G[L+3]=M[y+P],L+=4}return G}static _ExtractLongWordOrder(t){return 0===t||255===t||-16777216===t?0:1+F._ExtractLongWordOrder(t>>8)}static _GetRGBArrayBuffer(t,U,y,I,r,Y,mt,X){const P=new Uint8Array(I),G=new Uint8Array(r,y);let M=0;for(let L=0;L<U;L++)for(let U=0;U<t;U++){const y=3*(U+L*t);P[M]=G[y+Y],P[M+1]=G[y+mt],P[M+2]=G[y+X],M+=3}return P}static _GetLuminanceArrayBuffer(t,U,y,I,r){const Y=new Uint8Array(I),mt=new Uint8Array(r,y);let X=0;for(let P=0;P<U;P++)for(let U=0;U<t;U++){const y=U+P*t;Y[X]=mt[y],X++}return Y}static UploadDDSLevels(t,U,y,I,mt,P){let G=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,E=arguments.length>7?arguments[7]:void 0,w=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],D=null;I.sphericalPolynomial&&(D=[]);const l=!!t.getCaps().s3tc;U.generateMipMaps=mt;const g=new Int32Array(y.buffer,y.byteOffset,31);let B,b,p,c,f,S,N,j=0,J=0,a=1;if(542327876!==g[0])return void r.b.Error("Invalid magic number in DDS header");if(!I.isFourCC&&!I.isRGB&&!I.isLuminance)return void r.b.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(I.isCompressed&&!l)return void r.b.Error("Compressed textures are not supported on this platform.");let d=g[22];c=g[1]+4;let q=!1;if(I.isFourCC)switch(B=g[21],B){case M:a=8,J=33777;break;case L:a=16,J=33778;break;case h:a=16,J=33779;break;case 113:q=!0,d=64;break;case 116:q=!0,d=128;break;case Q:{c+=20;let t=!1;switch(I.dxgiFormat){case 10:q=!0,d=64,t=!0;break;case 2:q=!0,d=128,t=!0;break;case 88:I.isRGB=!0,I.isFourCC=!1,d=32,t=!0}if(t)break}default:return void r.b.Error(["Unsupported FourCC code:",(H=B,String.fromCharCode(255&H,H>>8&255,H>>16&255,H>>24&255))])}var H;const e=F._ExtractLongWordOrder(g[23]),o=F._ExtractLongWordOrder(g[24]),V=F._ExtractLongWordOrder(g[25]),n=F._ExtractLongWordOrder(g[26]);q&&(J=t._getRGBABufferInternalSizedFormat(I.textureType)),S=1,g[2]&X&&!1!==mt&&(S=Math.max(1,g[7]));const i=E||0,v=t.getCaps();for(let r=i;r<P;r++){for(b=g[4],p=g[3],N=0;N<S;++N){if(-1===G||G===N){const Y=-1===G?N:0;if(!I.isCompressed&&I.isFourCC){U.format=5,j=b*p*4;let I=null;if(t._badOS||t._badDesktopOS||!v.textureHalfFloat&&!v.textureFloat)128===d?(I=F._GetFloatAsUIntRGBAArrayBuffer(b,p,y.byteOffset+c,j,y.buffer,Y),D&&0==Y&&D.push(F._GetFloatRGBAArrayBuffer(b,p,y.byteOffset+c,j,y.buffer,Y))):64===d&&(I=F._GetHalfFloatAsUIntRGBAArrayBuffer(b,p,y.byteOffset+c,j,y.buffer,Y),D&&0==Y&&D.push(F._GetHalfFloatAsFloatRGBAArrayBuffer(b,p,y.byteOffset+c,j,y.buffer,Y))),U.type=0;else{const t=v.textureFloat&&(w&&v.textureFloatLinearFiltering||!w),r=v.textureHalfFloat&&(w&&v.textureHalfFloatLinearFiltering||!w),mt=(128===d||64===d&&!r)&&t?1:(64===d||128===d&&!t)&&r?2:0;let X,P=null;if(128===d)switch(mt){case 1:X=F._GetFloatRGBAArrayBuffer,P=null;break;case 2:X=F._GetFloatAsHalfFloatRGBAArrayBuffer,P=F._GetFloatRGBAArrayBuffer;break;case 0:X=F._GetFloatAsUIntRGBAArrayBuffer,P=F._GetFloatRGBAArrayBuffer}else switch(mt){case 1:X=F._GetHalfFloatAsFloatRGBAArrayBuffer,P=null;break;case 2:X=F._GetHalfFloatRGBAArrayBuffer,P=F._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:X=F._GetHalfFloatAsUIntRGBAArrayBuffer,P=F._GetHalfFloatAsFloatRGBAArrayBuffer}U.type=mt,I=X(b,p,y.byteOffset+c,j,y.buffer,Y),D&&0==Y&&D.push(P?P(b,p,y.byteOffset+c,j,y.buffer,Y):I)}I&&t._uploadDataToTextureDirectly(U,I,r,Y)}else if(I.isRGB)U.type=0,24===d?(U.format=4,j=b*p*3,f=F._GetRGBArrayBuffer(b,p,y.byteOffset+c,j,y.buffer,e,o,V),t._uploadDataToTextureDirectly(U,f,r,Y)):(U.format=5,j=b*p*4,f=F._GetRGBAArrayBuffer(b,p,y.byteOffset+c,j,y.buffer,e,o,V,n),t._uploadDataToTextureDirectly(U,f,r,Y));else if(I.isLuminance){const I=t._getUnpackAlignement(),mt=b;j=Math.floor((b+I-1)/I)*I*(p-1)+mt,f=F._GetLuminanceArrayBuffer(b,p,y.byteOffset+c,j,y.buffer),U.format=1,U.type=0,t._uploadDataToTextureDirectly(U,f,r,Y)}else j=Math.max(4,b)/4*Math.max(4,p)/4*a,f=new Uint8Array(y.buffer,y.byteOffset+c,j),U.type=0,t._uploadCompressedDataToTextureDirectly(U,J,b,p,f,r,Y)}c+=d?b*p*(d/8):j,b*=.5,p*=.5,b=Math.max(1,b),p=Math.max(1,p)}if(void 0!==E)break}D&&D.length>0?I.sphericalPolynomial=Y.e.ConvertCubeMapToSphericalPolynomial({size:g[4],right:D[0],left:D[1],up:D[2],down:D[3],front:D[4],back:D[5],format:5,type:1,gammaSpace:!1}):I.sphericalPolynomial=void 0}}F.StoreLODInAlphaChannel=!1}}]);