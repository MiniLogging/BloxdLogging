"use strict";(self.b15p7b72fr8=self.b15p7b72fr8||[]).push([[28,29],{14275:(s,k,h)=>{var A=h(12515),g=h(12422),ms=h(12448),i=h(12552),K=h(12481),H=h(12527);K.e.prototype._partialLoadFile=function(s,k,h,A){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(s,(s=>{h[k]=s,h._internalCount++,6===h._internalCount&&A(h)}),void 0,void 0,!0,((s,k)=>{g&&s&&g(s.status+" "+s.statusText,k)}))},K.e.prototype._cascadeLoadFiles=function(s,k,h){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const g=[];g._internalCount=0;for(let ms=0;ms<6;ms++)this._partialLoadFile(h[ms],ms,g,k,A)},K.e.prototype._cascadeLoadImgs=function(s,k,h,A){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,ms=arguments.length>5?arguments[5]:void 0;const i=[];i._internalCount=0;for(let K=0;K<6;K++)this._partialLoadImg(A[K],K,i,s,k,h,g,ms)},K.e.prototype._partialLoadImg=function(s,k,h,A,g,K){let H=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,O=arguments.length>7?arguments[7]:void 0;const c=(0,i.d)();(0,ms.k)(s,(s=>{h[k]=s,h._internalCount++,A&&A.removePendingData(c),6===h._internalCount&&K&&K(g,h)}),((s,k)=>{A&&A.removePendingData(c),H&&H(s,k)}),A?A.offlineProvider:null,O),A&&A.addPendingData(c)},K.e.prototype.createCubeTextureBase=function(s,k,h,ms){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,K=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,O=arguments.length>6?arguments[6]:void 0,c=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,S=arguments.length>8&&void 0!==arguments[8]&&arguments[8],a=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,r=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,d=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,E=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,j=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,P=arguments.length>14&&void 0!==arguments[14]&&arguments[14],R=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const D=d||new A.c(this,7);D.isCube=!0,D.url=s,D.generateMipMaps=!ms,D._lodGenerationScale=a,D._lodGenerationOffset=r,D._useSRGBBuffer=!!P&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!ms),D!==d&&(D.label=s.substring(0,60)),this._doNotHandleContextLost||(D._extension=c,D._files=h,D._buffer=R);const w=s;this._transformTextureUrl&&!d&&(s=this._transformTextureUrl(s));const B=c??function(s){const k=s.split("?")[0],h=k.lastIndexOf(".");return h>-1?k.substring(h).toLowerCase():""}(s),u=(0,H.c)(B),G=(s,k)=>{D.dispose(),K?K(s,k):s&&g.c.Warn(s)},Q=(A,K)=>{s===w?A&&G(A.status+" "+A.statusText,K):(g.c.Warn(`Failed to load ${s}, falling back to the ${w}`),this.createCubeTextureBase(w,k,h,!!ms,i,G,O,c,S,a,r,D,E,j,P,R))};if(u)u.then((A=>{const g=s=>{E&&E(D,s),A.loadCubeData(s,D,S,i,((s,k)=>{G(s,k)}))};R?g(R):h&&6===h.length?A.supportCascades?this._cascadeLoadFiles(k,(s=>g(s.map((s=>new Uint8Array(s))))),h,G):G("Textures type does not support cascades."):this._loadFile(s,(s=>g(new Uint8Array(s))),void 0,void 0,!0,Q)}));else{if(!h||0===h.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(k,D,((s,k)=>{j&&j(s,k)}),h,G)}return this._internalTexturesCache.push(D),D}},15033:(s,k,h)=>{h.r(k),h.d(k,{_DDSTextureLoader:()=>ms});var A=h(12788),g=h(15039);class ms{constructor(){this.supportCascades=!0}loadCubeData(s,k,h,ms){const i=k.getEngine();let K,H=!1,O=1e3;if(Array.isArray(s))for(let A=0;A<s.length;A++){const h=s[A];K=g.DDSTools.GetDDSInfo(h),k.width=K.width,k.height=K.height,H=(K.isRGB||K.isLuminance||K.mipmapCount>1)&&k.generateMipMaps,i._unpackFlipY(K.isCompressed),g.DDSTools.UploadDDSLevels(i,k,h,K,H,6,-1,A),K.isFourCC||1!==K.mipmapCount?O=K.mipmapCount-1:i.generateMipMapsForCubemap(k)}else{const ms=s;K=g.DDSTools.GetDDSInfo(ms),k.width=K.width,k.height=K.height,h&&(K.sphericalPolynomial=new A.f),H=(K.isRGB||K.isLuminance||K.mipmapCount>1)&&k.generateMipMaps,i._unpackFlipY(K.isCompressed),g.DDSTools.UploadDDSLevels(i,k,ms,K,H,6),K.isFourCC||1!==K.mipmapCount?O=K.mipmapCount-1:i.generateMipMapsForCubemap(k,!1)}i._setCubeMapTextureParams(k,H,O),k.isReady=!0,k.onLoadedObservable.notifyObservers(k),k.onLoadedObservable.clear(),ms&&ms({isDDS:!0,width:k.width,info:K,data:s,texture:k})}loadData(s,k,h){const A=g.DDSTools.GetDDSInfo(s),ms=(A.isRGB||A.isLuminance||A.mipmapCount>1)&&k.generateMipMaps&&Math.max(A.width,A.height)>>A.mipmapCount-1===1;h(A.width,A.height,ms,A.isFourCC,(()=>{g.DDSTools.UploadDDSLevels(k.getEngine(),k,s,A,ms,1)}))}}},13121:(s,k,h)=>{h.d(k,{d:()=>O});var A=h(12590),g=h(12607),ms=h(12788),i=h(12598),K=h(12636);class H{constructor(s,k,h,A){this.name=s,this.worldAxisForNormal=k,this.worldAxisForFileX=h,this.worldAxisForFileY=A}}class O{static ConvertCubeMapTextureToSphericalPolynomial(s){var k;if(!s.isCube)return null;null===(k=s.Is())||void 0===k||k.getEngine().flushFramebuffer();const h=s.getSize().width,A=s.readPixels(0,void 0,void 0,!1),g=s.readPixels(1,void 0,void 0,!1);let ms,i;s.isRenderTarget?(ms=s.readPixels(3,void 0,void 0,!1),i=s.readPixels(2,void 0,void 0,!1)):(ms=s.readPixels(2,void 0,void 0,!1),i=s.readPixels(3,void 0,void 0,!1));const K=s.readPixels(4,void 0,void 0,!1),H=s.readPixels(5,void 0,void 0,!1),O=s.gammaSpace;let c=0;return 1!=s.textureType&&2!=s.textureType||(c=1),new Promise((s=>{Promise.all([g,A,ms,i,K,H]).then((k=>{let[A,g,ms,i,K,H]=k;const S={size:h,right:g,left:A,up:ms,down:i,front:K,back:H,format:5,type:c,gammaSpace:O};s(this.ConvertCubeMapToSphericalPolynomial(S))}))}))}static _AreaElement(s,k){return Math.atan2(s*k,Math.sqrt(s*s+k*k+1))}static ConvertCubeMapToSphericalPolynomial(s){const k=new ms.c;let h=0;const A=2/s.size,H=A,O=.5*A,c=O-1;for(let ms=0;ms<6;ms++){const S=this._FileFaces[ms],a=s[S.name];let r=c;const d=5===s.format?4:3;for(let ms=0;ms<s.size;ms++){let E=c;for(let H=0;H<s.size;H++){const c=S.worldAxisForFileX.scale(E).add(S.worldAxisForFileY.scale(r)).add(S.worldAxisForNormal);c.normalize();const j=this._AreaElement(E-O,r-O)-this._AreaElement(E-O,r+O)-this._AreaElement(E+O,r-O)+this._AreaElement(E+O,r+O);let P=a[ms*s.size*d+H*d+0],R=a[ms*s.size*d+H*d+1],D=a[ms*s.size*d+H*d+2];isNaN(P)&&(P=0),isNaN(R)&&(R=0),isNaN(D)&&(D=0),0===s.type&&(P/=255,R/=255,D/=255),s.gammaSpace&&(P=Math.pow((0,g.Clamp)(P),i.j),R=Math.pow((0,g.Clamp)(R),i.j),D=Math.pow((0,g.Clamp)(D),i.j));const w=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const s=Math.max(P,R,D);if(s>w){const k=w/s;P*=k,R*=k,D*=k}}else P=(0,g.Clamp)(P,0,w),R=(0,g.Clamp)(R,0,w),D=(0,g.Clamp)(D,0,w);const B=new K.Bk(P,R,D);k.addLight(c,B,j),h+=j,E+=A}r+=H}}const S=6*(4*Math.PI)/6/h;return k.scaleInPlace(S),k.convertIncidentRadianceToIrradiance(),k.convertIrradianceToLambertianRadiance(),ms.f.FromHarmonics(k)}}O._FileFaces=[new H("right",new A.Pk(1,0,0),new A.Pk(0,0,-1),new A.Pk(0,-1,0)),new H("left",new A.Pk(-1,0,0),new A.Pk(0,0,1),new A.Pk(0,-1,0)),new H("up",new A.Pk(0,1,0),new A.Pk(1,0,0),new A.Pk(0,0,1)),new H("down",new A.Pk(0,-1,0),new A.Pk(1,0,0),new A.Pk(0,0,-1)),new H("front",new A.Pk(0,0,1),new A.Pk(1,0,0),new A.Pk(0,-1,0)),new H("back",new A.Pk(0,0,-1),new A.Pk(-1,0,0),new A.Pk(0,-1,0))],O.MAX_HDRI_VALUE=4096,O.PRESERVE_CLAMPED_COLORS=!1},15039:(s,k,h)=>{h.d(k,{DDSTools:()=>d});var A=h(12607),g=h(12422),ms=h(13121),i=h(12823);h(14275);const K=131072,H=131072;function O(s){return s.charCodeAt(0)+(s.charCodeAt(1)<<8)+(s.charCodeAt(2)<<16)+(s.charCodeAt(3)<<24)}const c=O("DXT1"),S=O("DXT3"),a=O("DXT5"),r=O("DX10");class d{static GetDDSInfo(s){const k=new Int32Array(s.buffer,s.byteOffset,31),h=new Int32Array(s.buffer,s.byteOffset,35);let A=1;k[2]&K&&(A=Math.max(1,k[7]));const g=k[21],ms=g===r?h[32]:0;let i=0;switch(g){case 113:i=2;break;case 116:i=1;break;case r:if(10===ms){i=2;break}if(2===ms){i=1;break}}return{width:k[4],height:k[3],mipmapCount:A,isFourCC:4===(4&k[20]),isRGB:64===(64&k[20]),isLuminance:(k[20]&H)===H,isCube:512===(512&k[28]),isCompressed:g===c||g===S||g===a,dxgiFormat:ms,textureType:i}}static _GetHalfFloatAsFloatRGBAArrayBuffer(s,k,h,A,g,ms){const K=new Float32Array(A),H=new Uint16Array(g,h);let O=0;for(let c=0;c<k;c++)for(let k=0;k<s;k++){const h=4*(k+c*s);K[O]=(0,i.g)(H[h]),K[O+1]=(0,i.g)(H[h+1]),K[O+2]=(0,i.g)(H[h+2]),d.StoreLODInAlphaChannel?K[O+3]=ms:K[O+3]=(0,i.g)(H[h+3]),O+=4}return K}static _GetHalfFloatRGBAArrayBuffer(s,k,h,A,g,ms){if(d.StoreLODInAlphaChannel){const K=new Uint16Array(A),H=new Uint16Array(g,h);let O=0;for(let h=0;h<k;h++)for(let k=0;k<s;k++){const A=4*(k+h*s);K[O]=H[A],K[O+1]=H[A+1],K[O+2]=H[A+2],K[O+3]=(0,i.r)(ms),O+=4}return K}return new Uint16Array(g,h,A)}static _GetFloatRGBAArrayBuffer(s,k,h,A,g,ms){if(d.StoreLODInAlphaChannel){const i=new Float32Array(A),K=new Float32Array(g,h);let H=0;for(let h=0;h<k;h++)for(let k=0;k<s;k++){const A=4*(k+h*s);i[H]=K[A],i[H+1]=K[A+1],i[H+2]=K[A+2],i[H+3]=ms,H+=4}return i}return new Float32Array(g,h,A)}static _GetFloatAsHalfFloatRGBAArrayBuffer(s,k,h,A,g,ms){const K=new Uint16Array(A),H=new Float32Array(g,h);let O=0;for(let c=0;c<k;c++)for(let k=0;k<s;k++)K[O]=(0,i.r)(H[O]),K[O+1]=(0,i.r)(H[O+1]),K[O+2]=(0,i.r)(H[O+2]),d.StoreLODInAlphaChannel?K[O+3]=(0,i.r)(ms):K[O+3]=(0,i.r)(H[O+3]),O+=4;return K}static _GetFloatAsUIntRGBAArrayBuffer(s,k,h,g,ms,i){const K=new Uint8Array(g),H=new Float32Array(ms,h);let O=0;for(let c=0;c<k;c++)for(let k=0;k<s;k++){const h=4*(k+c*s);K[O]=255*(0,A.Clamp)(H[h]),K[O+1]=255*(0,A.Clamp)(H[h+1]),K[O+2]=255*(0,A.Clamp)(H[h+2]),d.StoreLODInAlphaChannel?K[O+3]=i:K[O+3]=255*(0,A.Clamp)(H[h+3]),O+=4}return K}static _GetHalfFloatAsUIntRGBAArrayBuffer(s,k,h,g,ms,K){const H=new Uint8Array(g),O=new Uint16Array(ms,h);let c=0;for(let S=0;S<k;S++)for(let k=0;k<s;k++){const h=4*(k+S*s);H[c]=255*(0,A.Clamp)((0,i.g)(O[h])),H[c+1]=255*(0,A.Clamp)((0,i.g)(O[h+1])),H[c+2]=255*(0,A.Clamp)((0,i.g)(O[h+2])),d.StoreLODInAlphaChannel?H[c+3]=K:H[c+3]=255*(0,A.Clamp)((0,i.g)(O[h+3])),c+=4}return H}static _GetRGBAArrayBuffer(s,k,h,A,g,ms,i,K,H){const O=new Uint8Array(A),c=new Uint8Array(g,h);let S=0;for(let a=0;a<k;a++)for(let k=0;k<s;k++){const h=4*(k+a*s);O[S]=c[h+ms],O[S+1]=c[h+i],O[S+2]=c[h+K],O[S+3]=c[h+H],S+=4}return O}static _ExtractLongWordOrder(s){return 0===s||255===s||-16777216===s?0:1+d._ExtractLongWordOrder(s>>8)}static _GetRGBArrayBuffer(s,k,h,A,g,ms,i,K){const H=new Uint8Array(A),O=new Uint8Array(g,h);let c=0;for(let S=0;S<k;S++)for(let k=0;k<s;k++){const h=3*(k+S*s);H[c]=O[h+ms],H[c+1]=O[h+i],H[c+2]=O[h+K],c+=3}return H}static _GetLuminanceArrayBuffer(s,k,h,A,g){const ms=new Uint8Array(A),i=new Uint8Array(g,h);let K=0;for(let H=0;H<k;H++)for(let k=0;k<s;k++){const h=k+H*s;ms[K]=i[h],K++}return ms}static UploadDDSLevels(s,k,h,A,i,H){let O=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,E=arguments.length>7?arguments[7]:void 0,j=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],P=null;A.sphericalPolynomial&&(P=[]);const R=!!s.getCaps().s3tc;k.generateMipMaps=i;const D=new Int32Array(h.buffer,h.byteOffset,31);let w,B,u,G,Q,p,I,N=0,b=0,t=1;if(542327876!==D[0])return void g.c.Error("Invalid magic number in DDS header");if(!A.isFourCC&&!A.isRGB&&!A.isLuminance)return void g.c.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(A.isCompressed&&!R)return void g.c.Error("Compressed textures are not supported on this platform.");let z=D[22];G=D[1]+4;let C=!1;if(A.isFourCC)switch(w=D[21],w){case c:t=8,b=33777;break;case S:t=16,b=33778;break;case a:t=16,b=33779;break;case 113:C=!0,z=64;break;case 116:C=!0,z=128;break;case r:{G+=20;let s=!1;switch(A.dxgiFormat){case 10:C=!0,z=64,s=!0;break;case 2:C=!0,z=128,s=!0;break;case 88:A.isRGB=!0,A.isFourCC=!1,z=32,s=!0}if(s)break}default:return void g.c.Error(["Unsupported FourCC code:",(v=w,String.fromCharCode(255&v,v>>8&255,v>>16&255,v>>24&255))])}var v;const Y=d._ExtractLongWordOrder(D[23]),n=d._ExtractLongWordOrder(D[24]),T=d._ExtractLongWordOrder(D[25]),U=d._ExtractLongWordOrder(D[26]);C&&(b=s._getRGBABufferInternalSizedFormat(A.textureType)),p=1,D[2]&K&&!1!==i&&(p=Math.max(1,D[7]));const q=E||0,M=s.getCaps();for(let g=q;g<H;g++){for(B=D[4],u=D[3],I=0;I<p;++I){if(-1===O||O===I){const ms=-1===O?I:0;if(!A.isCompressed&&A.isFourCC){k.format=5,N=B*u*4;let A=null;if(s._badOS||s._badDesktopOS||!M.textureHalfFloat&&!M.textureFloat)128===z?(A=d._GetFloatAsUIntRGBAArrayBuffer(B,u,h.byteOffset+G,N,h.buffer,ms),P&&0==ms&&P.push(d._GetFloatRGBAArrayBuffer(B,u,h.byteOffset+G,N,h.buffer,ms))):64===z&&(A=d._GetHalfFloatAsUIntRGBAArrayBuffer(B,u,h.byteOffset+G,N,h.buffer,ms),P&&0==ms&&P.push(d._GetHalfFloatAsFloatRGBAArrayBuffer(B,u,h.byteOffset+G,N,h.buffer,ms))),k.type=0;else{const s=M.textureFloat&&(j&&M.textureFloatLinearFiltering||!j),g=M.textureHalfFloat&&(j&&M.textureHalfFloatLinearFiltering||!j),i=(128===z||64===z&&!g)&&s?1:(64===z||128===z&&!s)&&g?2:0;let K,H=null;if(128===z)switch(i){case 1:K=d._GetFloatRGBAArrayBuffer,H=null;break;case 2:K=d._GetFloatAsHalfFloatRGBAArrayBuffer,H=d._GetFloatRGBAArrayBuffer;break;case 0:K=d._GetFloatAsUIntRGBAArrayBuffer,H=d._GetFloatRGBAArrayBuffer}else switch(i){case 1:K=d._GetHalfFloatAsFloatRGBAArrayBuffer,H=null;break;case 2:K=d._GetHalfFloatRGBAArrayBuffer,H=d._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:K=d._GetHalfFloatAsUIntRGBAArrayBuffer,H=d._GetHalfFloatAsFloatRGBAArrayBuffer}k.type=i,A=K(B,u,h.byteOffset+G,N,h.buffer,ms),P&&0==ms&&P.push(H?H(B,u,h.byteOffset+G,N,h.buffer,ms):A)}A&&s._uploadDataToTextureDirectly(k,A,g,ms)}else if(A.isRGB)k.type=0,24===z?(k.format=4,N=B*u*3,Q=d._GetRGBArrayBuffer(B,u,h.byteOffset+G,N,h.buffer,Y,n,T),s._uploadDataToTextureDirectly(k,Q,g,ms)):(k.format=5,N=B*u*4,Q=d._GetRGBAArrayBuffer(B,u,h.byteOffset+G,N,h.buffer,Y,n,T,U),s._uploadDataToTextureDirectly(k,Q,g,ms));else if(A.isLuminance){const A=s._getUnpackAlignement(),i=B;N=Math.floor((B+A-1)/A)*A*(u-1)+i,Q=d._GetLuminanceArrayBuffer(B,u,h.byteOffset+G,N,h.buffer),k.format=1,k.type=0,s._uploadDataToTextureDirectly(k,Q,g,ms)}else N=Math.max(4,B)/4*Math.max(4,u)/4*t,Q=new Uint8Array(h.buffer,h.byteOffset+G,N),k.type=0,s._uploadCompressedDataToTextureDirectly(k,b,B,u,Q,g,ms)}G+=z?B*u*(z/8):N,B*=.5,u*=.5,B=Math.max(1,B),u=Math.max(1,u)}if(void 0!==E)break}P&&P.length>0?A.sphericalPolynomial=ms.d.ConvertCubeMapToSphericalPolynomial({size:D[4],right:P[0],left:P[1],up:P[2],down:P[3],front:P[4],back:P[5],format:5,type:1,gammaSpace:!1}):A.sphericalPolynomial=void 0}}d.StoreLODInAlphaChannel=!1}}]);