"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[28],{13361:(q,c,U)=>{U.r(c),U.d(c,{_IESTextureLoader:()=>X});var J=U(10870);function Q(q){return q.split(" ").filter((q=>""!==q)).map((q=>parseFloat(q)))}function s(q,c,U){for(;U.length!==c;){const c=Q(q.lines[q.index++]);U.push(...c)}}function g(q,c,U){let Q=0,s=0,g=0,X=0,n=0,W=0;for(let J=0;J<q.numberOfHorizontalAngles-1;J++)if(U<q.horizontalAngles[J+1]||J===q.numberOfHorizontalAngles-2){s=J,g=q.horizontalAngles[J],X=q.horizontalAngles[J+1];break}for(let J=0;J<q.numberOfVerticalAngles-1;J++)if(c<q.verticalAngles[J+1]||J===q.numberOfVerticalAngles-2){Q=J,n=q.verticalAngles[J],W=q.verticalAngles[J+1];break}const D=X-g,u=W-n;if(0===u)return 0;const K=0===D?0:(U-g)/D,r=(c-n)/u,H=0===D?s:s+1,b=(0,J.Lerp)(q.candelaValues[s][Q],q.candelaValues[H][Q],K),h=(0,J.Lerp)(q.candelaValues[s][Q+1],q.candelaValues[H][Q+1],K);return(0,J.Lerp)(b,h,r)}class X{constructor(){this.supportCascades=!1}loadCubeData(){throw".ies not supported in Cube."}loadData(q,c,U){const J=function(q){const c={lines:new TextDecoder("utf-8").decode(q).split("\n"),index:0},U={version:c.lines[0],candelaValues:[],horizontalAngles:[],verticalAngles:[],numberOfHorizontalAngles:0,numberOfVerticalAngles:0};for(c.index=1;c.lines.length>0&&!c.lines[c.index].includes("TILT=");)c.index++;c.lines[c.index].includes("INCLUDE"),c.index++;const J=Q(c.lines[c.index++]);U.numberOfLights=J[0],U.lumensPerLamp=J[1],U.candelaMultiplier=J[2],U.numberOfVerticalAngles=J[3],U.numberOfHorizontalAngles=J[4],U.photometricType=J[5],U.unitsType=J[6],U.width=J[7],U.length=J[8],U.height=J[9];const X=Q(c.lines[c.index++]);U.ballastFactor=X[0],U.fileGenerationType=X[1],U.inputWatts=X[2];for(let Q=0;Q<U.numberOfHorizontalAngles;Q++)U.candelaValues[Q]=[];s(c,U.numberOfVerticalAngles,U.verticalAngles),s(c,U.numberOfHorizontalAngles,U.horizontalAngles);for(let Q=0;Q<U.numberOfHorizontalAngles;Q++)s(c,U.numberOfVerticalAngles,U.candelaValues[Q]);let n=-1;for(let Q=0;Q<U.numberOfHorizontalAngles;Q++)for(let q=0;q<U.numberOfVerticalAngles;q++)U.candelaValues[Q][q]*=U.candelaValues[Q][q]*U.candelaMultiplier*U.ballastFactor*U.fileGenerationType,n=Math.max(n,U.candelaValues[Q][q]);if(n>0)for(let Q=0;Q<U.numberOfHorizontalAngles;Q++)for(let q=0;q<U.numberOfVerticalAngles;q++)U.candelaValues[Q][q]/=n;const W=180,D=360,u=new Float32Array(64800),K=U.horizontalAngles[0],r=U.horizontalAngles[U.numberOfHorizontalAngles-1];for(let Q=0;Q<64800;Q++){let q=Q%D;const c=Math.floor(Q/D);r-K!==0&&(q<K||q>=r)&&(q%=2*r,q>r&&(q=2*r-q)),u[c+q*W]=g(U,c,q)}return{width:180,height:1,data:u}}(new Uint8Array(q.buffer,q.byteOffset,q.byteLength));U(J.width,J.height,!1,!1,(()=>{const q=c.getEngine();c.type=1,c.format=6,c._gammaSpace=!1,q._uploadDataToTextureDirectly(c,J.data)}))}}}}]);