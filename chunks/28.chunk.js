"use strict";(self.dwifukwnts=self.dwifukwnts||[]).push([[28,29],{13250:(U,X,b)=>{var F=b(11528),E=b(11408),w=b(11448),Q=b(11555),z=b(11487),q=b(11543);z.e.prototype._partialLoadFile=function(U,X,b,F){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(U,(U=>{b[X]=U,b._internalCount++,6===b._internalCount&&F(b)}),void 0,void 0,!0,((U,X)=>{E&&U&&E(U.status+" "+U.statusText,X)}))},z.e.prototype._cascadeLoadFiles=function(U,X,b){let F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const E=[];E._internalCount=0;for(let w=0;w<6;w++)this._partialLoadFile(b[w],w,E,X,F)},z.e.prototype._cascadeLoadImgs=function(U,X,b,F){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,w=arguments.length>5?arguments[5]:void 0;const Q=[];Q._internalCount=0;for(let z=0;z<6;z++)this._partialLoadImg(F[z],z,Q,U,X,b,E,w)},z.e.prototype._partialLoadImg=function(U,X,b,F,E,z){let q=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,p=arguments.length>7?arguments[7]:void 0;const S=(0,Q.c)();(0,w.p)(U,(U=>{b[X]=U,b._internalCount++,F&&F.removePendingData(S),6===b._internalCount&&z&&z(E,b)}),((U,X)=>{F&&F.removePendingData(S),q&&q(U,X)}),F?F.offlineProvider:null,p),F&&F.addPendingData(S)},z.e.prototype.createCubeTextureBase=function(U,X,b,w){let Q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,p=arguments.length>6?arguments[6]:void 0,S=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,R=arguments.length>8&&void 0!==arguments[8]&&arguments[8],n=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,a=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,J=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,m=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,x=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,I=arguments.length>14&&void 0!==arguments[14]&&arguments[14],O=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const N=J||new F.e(this,7);N.isCube=!0,N.url=U,N.generateMipMaps=!w,N._lodGenerationScale=n,N._lodGenerationOffset=a,N._useSRGBBuffer=!!I&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!w),N!==J&&(N.label=U.substring(0,60)),this._doNotHandleContextLost||(N._extension=S,N._files=b,N._buffer=O);const u=U;this._transformTextureUrl&&!J&&(U=this._transformTextureUrl(U));const i=S??function(U){const X=U.split("?")[0],b=X.lastIndexOf(".");return b>-1?X.substring(b).toLowerCase():""}(U),P=(0,q.e)(i),f=(U,X)=>{N.dispose(),z?z(U,X):U&&E.e.Warn(U)},j=(F,z)=>{U===u?F&&f(F.status+" "+F.statusText,z):(E.e.Warn(`Failed to load ${U}, falling back to the ${u}`),this.createCubeTextureBase(u,X,b,!!w,Q,f,p,S,R,n,a,N,m,x,I,O))};if(P)P.then((F=>{const E=U=>{m&&m(N,U),F.loadCubeData(U,N,R,Q,((U,X)=>{f(U,X)}))};O?E(O):b&&6===b.length?F.supportCascades?this._cascadeLoadFiles(X,(U=>E(U.map((U=>new Uint8Array(U))))),b,f):f("Textures type does not support cascades."):this._loadFile(U,(U=>E(new Uint8Array(U))),void 0,void 0,!0,j)}));else{if(!b||0===b.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(X,N,((U,X)=>{x&&x(U,X)}),b,f)}return this._internalTexturesCache.push(N),N}},14019:(U,X,b)=>{b.r(X),b.d(X,{_DDSTextureLoader:()=>w});var F=b(11774),E=b(14027);class w{constructor(){this.supportCascades=!0}loadCubeData(U,X,b,w){const Q=X.getEngine();let z,q=!1,p=1e3;if(Array.isArray(U))for(let F=0;F<U.length;F++){const b=U[F];z=E.DDSTools.GetDDSInfo(b),X.width=z.width,X.height=z.height,q=(z.isRGB||z.isLuminance||z.mipmapCount>1)&&X.generateMipMaps,Q._unpackFlipY(z.isCompressed),E.DDSTools.UploadDDSLevels(Q,X,b,z,q,6,-1,F),z.isFourCC||1!==z.mipmapCount?p=z.mipmapCount-1:Q.generateMipMapsForCubemap(X)}else{const w=U;z=E.DDSTools.GetDDSInfo(w),X.width=z.width,X.height=z.height,b&&(z.sphericalPolynomial=new F.f),q=(z.isRGB||z.isLuminance||z.mipmapCount>1)&&X.generateMipMaps,Q._unpackFlipY(z.isCompressed),E.DDSTools.UploadDDSLevels(Q,X,w,z,q,6),z.isFourCC||1!==z.mipmapCount?p=z.mipmapCount-1:Q.generateMipMapsForCubemap(X,!1)}Q._setCubeMapTextureParams(X,q,p),X.isReady=!0,X.onLoadedObservable.notifyObservers(X),X.onLoadedObservable.clear(),w&&w({isDDS:!0,width:X.width,info:z,data:U,texture:X})}loadData(U,X,b){const F=E.DDSTools.GetDDSInfo(U),w=(F.isRGB||F.isLuminance||F.mipmapCount>1)&&X.generateMipMaps&&Math.max(F.width,F.height)>>F.mipmapCount-1===1;b(F.width,F.height,w,F.isFourCC,(()=>{E.DDSTools.UploadDDSLevels(X.getEngine(),X,U,F,w,1)}))}}},12140:(U,X,b)=>{b.d(X,{d:()=>p});var F=b(11593),E=b(11608),w=b(11774),Q=b(11597),z=b(11636);class q{constructor(U,X,b,F){this.name=U,this.worldAxisForNormal=X,this.worldAxisForFileX=b,this.worldAxisForFileY=F}}class p{static ConvertCubeMapTextureToSphericalPolynomial(U){var X;if(!U.isCube)return null;null===(X=U.fU())||void 0===X||X.getEngine().flushFramebuffer();const b=U.getSize().width,F=U.readPixels(0,void 0,void 0,!1),E=U.readPixels(1,void 0,void 0,!1);let w,Q;U.isRenderTarget?(w=U.readPixels(3,void 0,void 0,!1),Q=U.readPixels(2,void 0,void 0,!1)):(w=U.readPixels(2,void 0,void 0,!1),Q=U.readPixels(3,void 0,void 0,!1));const z=U.readPixels(4,void 0,void 0,!1),q=U.readPixels(5,void 0,void 0,!1),p=U.gammaSpace;let S=0;return 1!=U.textureType&&2!=U.textureType||(S=1),new Promise((U=>{Promise.all([E,F,w,Q,z,q]).then((X=>{let[F,E,w,Q,z,q]=X;const R={size:b,right:E,left:F,up:w,down:Q,front:z,back:q,format:5,type:S,gammaSpace:p};U(this.ConvertCubeMapToSphericalPolynomial(R))}))}))}static _AreaElement(U,X){return Math.atan2(U*X,Math.sqrt(U*U+X*X+1))}static ConvertCubeMapToSphericalPolynomial(U){const X=new w.b;let b=0;const F=2/U.size,q=F,p=.5*F,S=p-1;for(let w=0;w<6;w++){const R=this._FileFaces[w],n=U[R.name];let a=S;const J=5===U.format?4:3;for(let w=0;w<U.size;w++){let m=S;for(let q=0;q<U.size;q++){const S=R.worldAxisForFileX.scale(m).add(R.worldAxisForFileY.scale(a)).add(R.worldAxisForNormal);S.normalize();const x=this._AreaElement(m-p,a-p)-this._AreaElement(m-p,a+p)-this._AreaElement(m+p,a-p)+this._AreaElement(m+p,a+p);let I=n[w*U.size*J+q*J+0],O=n[w*U.size*J+q*J+1],N=n[w*U.size*J+q*J+2];isNaN(I)&&(I=0),isNaN(O)&&(O=0),isNaN(N)&&(N=0),0===U.type&&(I/=255,O/=255,N/=255),U.gammaSpace&&(I=Math.pow((0,E.Clamp)(I),Q.k),O=Math.pow((0,E.Clamp)(O),Q.k),N=Math.pow((0,E.Clamp)(N),Q.k));const u=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const U=Math.max(I,O,N);if(U>u){const X=u/U;I*=X,O*=X,N*=X}}else I=(0,E.Clamp)(I,0,u),O=(0,E.Clamp)(O,0,u),N=(0,E.Clamp)(N,0,u);const i=new z.NX(I,O,N);X.addLight(S,i,x),b+=x,m+=F}a+=q}}const R=6*(4*Math.PI)/6/b;return X.scaleInPlace(R),X.convertIncidentRadianceToIrradiance(),X.convertIrradianceToLambertianRadiance(),w.f.FromHarmonics(X)}}p._FileFaces=[new q("right",new F.JX(1,0,0),new F.JX(0,0,-1),new F.JX(0,-1,0)),new q("left",new F.JX(-1,0,0),new F.JX(0,0,1),new F.JX(0,-1,0)),new q("up",new F.JX(0,1,0),new F.JX(1,0,0),new F.JX(0,0,1)),new q("down",new F.JX(0,-1,0),new F.JX(1,0,0),new F.JX(0,0,-1)),new q("front",new F.JX(0,0,1),new F.JX(1,0,0),new F.JX(0,-1,0)),new q("back",new F.JX(0,0,-1),new F.JX(-1,0,0),new F.JX(0,-1,0))],p.MAX_HDRI_VALUE=4096,p.PRESERVE_CLAMPED_COLORS=!1},14027:(U,X,b)=>{b.d(X,{DDSTools:()=>J});var F=b(11608),E=b(11408),w=b(12140),Q=b(11821);b(13250);const z=131072,q=131072;function p(U){return U.charCodeAt(0)+(U.charCodeAt(1)<<8)+(U.charCodeAt(2)<<16)+(U.charCodeAt(3)<<24)}const S=p("DXT1"),R=p("DXT3"),n=p("DXT5"),a=p("DX10");class J{static GetDDSInfo(U){const X=new Int32Array(U.buffer,U.byteOffset,31),b=new Int32Array(U.buffer,U.byteOffset,35);let F=1;X[2]&z&&(F=Math.max(1,X[7]));const E=X[21],w=E===a?b[32]:0;let Q=0;switch(E){case 113:Q=2;break;case 116:Q=1;break;case a:if(10===w){Q=2;break}if(2===w){Q=1;break}}return{width:X[4],height:X[3],mipmapCount:F,isFourCC:4===(4&X[20]),isRGB:64===(64&X[20]),isLuminance:(X[20]&q)===q,isCube:512===(512&X[28]),isCompressed:E===S||E===R||E===n,dxgiFormat:w,textureType:Q}}static _GetHalfFloatAsFloatRGBAArrayBuffer(U,X,b,F,E,w){const z=new Float32Array(F),q=new Uint16Array(E,b);let p=0;for(let S=0;S<X;S++)for(let X=0;X<U;X++){const b=4*(X+S*U);z[p]=(0,Q.f)(q[b]),z[p+1]=(0,Q.f)(q[b+1]),z[p+2]=(0,Q.f)(q[b+2]),J.StoreLODInAlphaChannel?z[p+3]=w:z[p+3]=(0,Q.f)(q[b+3]),p+=4}return z}static _GetHalfFloatRGBAArrayBuffer(U,X,b,F,E,w){if(J.StoreLODInAlphaChannel){const z=new Uint16Array(F),q=new Uint16Array(E,b);let p=0;for(let b=0;b<X;b++)for(let X=0;X<U;X++){const F=4*(X+b*U);z[p]=q[F],z[p+1]=q[F+1],z[p+2]=q[F+2],z[p+3]=(0,Q.n)(w),p+=4}return z}return new Uint16Array(E,b,F)}static _GetFloatRGBAArrayBuffer(U,X,b,F,E,w){if(J.StoreLODInAlphaChannel){const Q=new Float32Array(F),z=new Float32Array(E,b);let q=0;for(let b=0;b<X;b++)for(let X=0;X<U;X++){const F=4*(X+b*U);Q[q]=z[F],Q[q+1]=z[F+1],Q[q+2]=z[F+2],Q[q+3]=w,q+=4}return Q}return new Float32Array(E,b,F)}static _GetFloatAsHalfFloatRGBAArrayBuffer(U,X,b,F,E,w){const z=new Uint16Array(F),q=new Float32Array(E,b);let p=0;for(let S=0;S<X;S++)for(let X=0;X<U;X++)z[p]=(0,Q.n)(q[p]),z[p+1]=(0,Q.n)(q[p+1]),z[p+2]=(0,Q.n)(q[p+2]),J.StoreLODInAlphaChannel?z[p+3]=(0,Q.n)(w):z[p+3]=(0,Q.n)(q[p+3]),p+=4;return z}static _GetFloatAsUIntRGBAArrayBuffer(U,X,b,E,w,Q){const z=new Uint8Array(E),q=new Float32Array(w,b);let p=0;for(let S=0;S<X;S++)for(let X=0;X<U;X++){const b=4*(X+S*U);z[p]=255*(0,F.Clamp)(q[b]),z[p+1]=255*(0,F.Clamp)(q[b+1]),z[p+2]=255*(0,F.Clamp)(q[b+2]),J.StoreLODInAlphaChannel?z[p+3]=Q:z[p+3]=255*(0,F.Clamp)(q[b+3]),p+=4}return z}static _GetHalfFloatAsUIntRGBAArrayBuffer(U,X,b,E,w,z){const q=new Uint8Array(E),p=new Uint16Array(w,b);let S=0;for(let R=0;R<X;R++)for(let X=0;X<U;X++){const b=4*(X+R*U);q[S]=255*(0,F.Clamp)((0,Q.f)(p[b])),q[S+1]=255*(0,F.Clamp)((0,Q.f)(p[b+1])),q[S+2]=255*(0,F.Clamp)((0,Q.f)(p[b+2])),J.StoreLODInAlphaChannel?q[S+3]=z:q[S+3]=255*(0,F.Clamp)((0,Q.f)(p[b+3])),S+=4}return q}static _GetRGBAArrayBuffer(U,X,b,F,E,w,Q,z,q){const p=new Uint8Array(F),S=new Uint8Array(E,b);let R=0;for(let n=0;n<X;n++)for(let X=0;X<U;X++){const b=4*(X+n*U);p[R]=S[b+w],p[R+1]=S[b+Q],p[R+2]=S[b+z],p[R+3]=S[b+q],R+=4}return p}static _ExtractLongWordOrder(U){return 0===U||255===U||-16777216===U?0:1+J._ExtractLongWordOrder(U>>8)}static _GetRGBArrayBuffer(U,X,b,F,E,w,Q,z){const q=new Uint8Array(F),p=new Uint8Array(E,b);let S=0;for(let R=0;R<X;R++)for(let X=0;X<U;X++){const b=3*(X+R*U);q[S]=p[b+w],q[S+1]=p[b+Q],q[S+2]=p[b+z],S+=3}return q}static _GetLuminanceArrayBuffer(U,X,b,F,E){const w=new Uint8Array(F),Q=new Uint8Array(E,b);let z=0;for(let q=0;q<X;q++)for(let X=0;X<U;X++){const b=X+q*U;w[z]=Q[b],z++}return w}static UploadDDSLevels(U,X,b,F,Q,q){let p=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,m=arguments.length>7?arguments[7]:void 0,x=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],I=null;F.sphericalPolynomial&&(I=[]);const O=!!U.getCaps().s3tc;X.generateMipMaps=Q;const N=new Int32Array(b.buffer,b.byteOffset,31);let u,i,P,f,j,e,l,d=0,k=0,v=1;if(542327876!==N[0])return void E.e.Error("Invalid magic number in DDS header");if(!F.isFourCC&&!F.isRGB&&!F.isLuminance)return void E.e.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(F.isCompressed&&!O)return void E.e.Error("Compressed textures are not supported on this platform.");let A=N[22];f=N[1]+4;let s=!1;if(F.isFourCC)switch(u=N[21],u){case S:v=8,k=33777;break;case R:v=16,k=33778;break;case n:v=16,k=33779;break;case 113:s=!0,A=64;break;case 116:s=!0,A=128;break;case a:{f+=20;let U=!1;switch(F.dxgiFormat){case 10:s=!0,A=64,U=!0;break;case 2:s=!0,A=128,U=!0;break;case 88:F.isRGB=!0,F.isFourCC=!1,A=32,U=!0}if(U)break}default:return void E.e.Error(["Unsupported FourCC code:",(h=u,String.fromCharCode(255&h,h>>8&255,h>>16&255,h>>24&255))])}var h;const B=J._ExtractLongWordOrder(N[23]),o=J._ExtractLongWordOrder(N[24]),y=J._ExtractLongWordOrder(N[25]),t=J._ExtractLongWordOrder(N[26]);s&&(k=U._getRGBABufferInternalSizedFormat(F.textureType)),e=1,N[2]&z&&!1!==Q&&(e=Math.max(1,N[7]));const W=m||0,Y=U.getCaps();for(let E=W;E<q;E++){for(i=N[4],P=N[3],l=0;l<e;++l){if(-1===p||p===l){const w=-1===p?l:0;if(!F.isCompressed&&F.isFourCC){X.format=5,d=i*P*4;let F=null;if(U._badOS||U._badDesktopOS||!Y.textureHalfFloat&&!Y.textureFloat)128===A?(F=J._GetFloatAsUIntRGBAArrayBuffer(i,P,b.byteOffset+f,d,b.buffer,w),I&&0==w&&I.push(J._GetFloatRGBAArrayBuffer(i,P,b.byteOffset+f,d,b.buffer,w))):64===A&&(F=J._GetHalfFloatAsUIntRGBAArrayBuffer(i,P,b.byteOffset+f,d,b.buffer,w),I&&0==w&&I.push(J._GetHalfFloatAsFloatRGBAArrayBuffer(i,P,b.byteOffset+f,d,b.buffer,w))),X.type=0;else{const U=Y.textureFloat&&(x&&Y.textureFloatLinearFiltering||!x),E=Y.textureHalfFloat&&(x&&Y.textureHalfFloatLinearFiltering||!x),Q=(128===A||64===A&&!E)&&U?1:(64===A||128===A&&!U)&&E?2:0;let z,q=null;if(128===A)switch(Q){case 1:z=J._GetFloatRGBAArrayBuffer,q=null;break;case 2:z=J._GetFloatAsHalfFloatRGBAArrayBuffer,q=J._GetFloatRGBAArrayBuffer;break;case 0:z=J._GetFloatAsUIntRGBAArrayBuffer,q=J._GetFloatRGBAArrayBuffer}else switch(Q){case 1:z=J._GetHalfFloatAsFloatRGBAArrayBuffer,q=null;break;case 2:z=J._GetHalfFloatRGBAArrayBuffer,q=J._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:z=J._GetHalfFloatAsUIntRGBAArrayBuffer,q=J._GetHalfFloatAsFloatRGBAArrayBuffer}X.type=Q,F=z(i,P,b.byteOffset+f,d,b.buffer,w),I&&0==w&&I.push(q?q(i,P,b.byteOffset+f,d,b.buffer,w):F)}F&&U._uploadDataToTextureDirectly(X,F,E,w)}else if(F.isRGB)X.type=0,24===A?(X.format=4,d=i*P*3,j=J._GetRGBArrayBuffer(i,P,b.byteOffset+f,d,b.buffer,B,o,y),U._uploadDataToTextureDirectly(X,j,E,w)):(X.format=5,d=i*P*4,j=J._GetRGBAArrayBuffer(i,P,b.byteOffset+f,d,b.buffer,B,o,y,t),U._uploadDataToTextureDirectly(X,j,E,w));else if(F.isLuminance){const F=U._getUnpackAlignement(),Q=i;d=Math.floor((i+F-1)/F)*F*(P-1)+Q,j=J._GetLuminanceArrayBuffer(i,P,b.byteOffset+f,d,b.buffer),X.format=1,X.type=0,U._uploadDataToTextureDirectly(X,j,E,w)}else d=Math.max(4,i)/4*Math.max(4,P)/4*v,j=new Uint8Array(b.buffer,b.byteOffset+f,d),X.type=0,U._uploadCompressedDataToTextureDirectly(X,k,i,P,j,E,w)}f+=A?i*P*(A/8):d,i*=.5,P*=.5,i=Math.max(1,i),P=Math.max(1,P)}if(void 0!==m)break}I&&I.length>0?F.sphericalPolynomial=w.d.ConvertCubeMapToSphericalPolynomial({size:N[4],right:I[0],left:I[1],up:I[2],down:I[3],front:I[4],back:I[5],format:5,type:1,gammaSpace:!1}):F.sphericalPolynomial=void 0}}J.StoreLODInAlphaChannel=!1}}]);