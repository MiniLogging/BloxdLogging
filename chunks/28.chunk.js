"use strict";(self["686i8587bmi"]=self["686i8587bmi"]||[]).push([[28,29],{14494:(h,d,T)=>{var Y=T(12684),y=T(12596),C=T(12627),n=T(12722),X=T(12656),F=T(12701);X.c.prototype._partialLoadFile=function(h,d,T,Y){let y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(h,(h=>{T[d]=h,T._internalCount++,6===T._internalCount&&Y(T)}),void 0,void 0,!0,((h,d)=>{y&&h&&y(h.status+" "+h.statusText,d)}))},X.c.prototype._cascadeLoadFiles=function(h,d,T){let Y=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const y=[];y._internalCount=0;for(let C=0;C<6;C++)this._partialLoadFile(T[C],C,y,d,Y)},X.c.prototype._cascadeLoadImgs=function(h,d,T,Y){let y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,C=arguments.length>5?arguments[5]:void 0;const n=[];n._internalCount=0;for(let X=0;X<6;X++)this._partialLoadImg(Y[X],X,n,h,d,T,y,C)},X.c.prototype._partialLoadImg=function(h,d,T,Y,y,X){let F=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,U=arguments.length>7?arguments[7]:void 0;const Z=(0,n.b)();(0,C.s)(h,(h=>{T[d]=h,T._internalCount++,Y&&Y.removePendingData(Z),6===T._internalCount&&X&&X(y,T)}),((h,d)=>{Y&&Y.removePendingData(Z),F&&F(h,d)}),Y?Y.offlineProvider:null,U),Y&&Y.addPendingData(Z)},X.c.prototype.createCubeTextureBase=function(h,d,T,C){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,X=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,U=arguments.length>6?arguments[6]:void 0,Z=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,S=arguments.length>8&&void 0!==arguments[8]&&arguments[8],r=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,c=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,O=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,f=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,J=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,W=arguments.length>14&&void 0!==arguments[14]&&arguments[14],L=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const D=O||new Y.e(this,7);D.isCube=!0,D.url=h,D.generateMipMaps=!C,D._lodGenerationScale=r,D._lodGenerationOffset=c,D._useSRGBBuffer=!!W&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!C),D!==O&&(D.label=h.substring(0,60)),this._doNotHandleContextLost||(D._extension=Z,D._files=T,D._buffer=L);const V=h;this._transformTextureUrl&&!O&&(h=this._transformTextureUrl(h));const i=Z??function(h){const d=h.split("?")[0],T=d.lastIndexOf(".");return T>-1?d.substring(T).toLowerCase():""}(h),w=(0,F.b)(i),s=(h,d)=>{D.dispose(),X?X(h,d):h&&y.c.Warn(h)},E=(Y,X)=>{h===V?Y&&s(Y.status+" "+Y.statusText,X):(y.c.Warn(`Failed to load ${h}, falling back to the ${V}`),this.createCubeTextureBase(V,d,T,!!C,n,s,U,Z,S,r,c,D,f,J,W,L))};if(w)w.then((Y=>{const y=h=>{f&&f(D,h),Y.loadCubeData(h,D,S,n,((h,d)=>{s(h,d)}))};L?y(L):T&&6===T.length?Y.supportCascades?this._cascadeLoadFiles(d,(h=>y(h.map((h=>new Uint8Array(h))))),T,s):s("Textures type does not support cascades."):this._loadFile(h,(h=>y(new Uint8Array(h))),void 0,void 0,!0,E)}));else{if(!T||0===T.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(d,D,((h,d)=>{J&&J(h,d)}),T,s)}return this._internalTexturesCache.push(D),D}},15251:(h,d,T)=>{T.r(d),T.d(d,{_DDSTextureLoader:()=>C});var Y=T(12939),y=T(15256);class C{constructor(){this.supportCascades=!0}loadCubeData(h,d,T,C){const n=d.getEngine();let X,F=!1,U=1e3;if(Array.isArray(h))for(let Y=0;Y<h.length;Y++){const T=h[Y];X=y.DDSTools.GetDDSInfo(T),d.width=X.width,d.height=X.height,F=(X.isRGB||X.isLuminance||X.mipmapCount>1)&&d.generateMipMaps,n._unpackFlipY(X.isCompressed),y.DDSTools.UploadDDSLevels(n,d,T,X,F,6,-1,Y),X.isFourCC||1!==X.mipmapCount?U=X.mipmapCount-1:n.generateMipMapsForCubemap(d)}else{const C=h;X=y.DDSTools.GetDDSInfo(C),d.width=X.width,d.height=X.height,T&&(X.sphericalPolynomial=new Y.g),F=(X.isRGB||X.isLuminance||X.mipmapCount>1)&&d.generateMipMaps,n._unpackFlipY(X.isCompressed),y.DDSTools.UploadDDSLevels(n,d,C,X,F,6),X.isFourCC||1!==X.mipmapCount?U=X.mipmapCount-1:n.generateMipMapsForCubemap(d,!1)}n._setCubeMapTextureParams(d,F,U),d.isReady=!0,d.onLoadedObservable.notifyObservers(d),d.onLoadedObservable.clear(),C&&C({isDDS:!0,width:d.width,info:X,data:h,texture:d})}loadData(h,d,T){const Y=y.DDSTools.GetDDSInfo(h),C=(Y.isRGB||Y.isLuminance||Y.mipmapCount>1)&&d.generateMipMaps&&Math.max(Y.width,Y.height)>>Y.mipmapCount-1===1;T(Y.width,Y.height,C,Y.isFourCC,(()=>{y.DDSTools.UploadDDSLevels(d.getEngine(),d,h,Y,C,1)}))}}},13293:(h,d,T)=>{T.d(d,{e:()=>U});var Y=T(12765),y=T(12787),C=T(12939),n=T(12772),X=T(12812);class F{constructor(h,d,T,Y){this.name=h,this.worldAxisForNormal=d,this.worldAxisForFileX=T,this.worldAxisForFileY=Y}}class U{static ConvertCubeMapTextureToSphericalPolynomial(h){var d;if(!h.isCube)return null;null===(d=h.Eh())||void 0===d||d.getEngine().flushFramebuffer();const T=h.getSize().width,Y=h.readPixels(0,void 0,void 0,!1),y=h.readPixels(1,void 0,void 0,!1);let C,n;h.isRenderTarget?(C=h.readPixels(3,void 0,void 0,!1),n=h.readPixels(2,void 0,void 0,!1)):(C=h.readPixels(2,void 0,void 0,!1),n=h.readPixels(3,void 0,void 0,!1));const X=h.readPixels(4,void 0,void 0,!1),F=h.readPixels(5,void 0,void 0,!1),U=h.gammaSpace;let Z=0;return 1!=h.textureType&&2!=h.textureType||(Z=1),new Promise((h=>{Promise.all([y,Y,C,n,X,F]).then((d=>{let[Y,y,C,n,X,F]=d;const S={size:T,right:y,left:Y,up:C,down:n,front:X,back:F,format:5,type:Z,gammaSpace:U};h(this.ConvertCubeMapToSphericalPolynomial(S))}))}))}static _AreaElement(h,d){return Math.atan2(h*d,Math.sqrt(h*h+d*d+1))}static ConvertCubeMapToSphericalPolynomial(h){const d=new C.d;let T=0;const Y=2/h.size,F=Y,U=.5*Y,Z=U-1;for(let C=0;C<6;C++){const S=this._FileFaces[C],r=h[S.name];let c=Z;const O=5===h.format?4:3;for(let C=0;C<h.size;C++){let f=Z;for(let F=0;F<h.size;F++){const Z=S.worldAxisForFileX.scale(f).add(S.worldAxisForFileY.scale(c)).add(S.worldAxisForNormal);Z.normalize();const J=this._AreaElement(f-U,c-U)-this._AreaElement(f-U,c+U)-this._AreaElement(f+U,c-U)+this._AreaElement(f+U,c+U);let W=r[C*h.size*O+F*O+0],L=r[C*h.size*O+F*O+1],D=r[C*h.size*O+F*O+2];isNaN(W)&&(W=0),isNaN(L)&&(L=0),isNaN(D)&&(D=0),0===h.type&&(W/=255,L/=255,D/=255),h.gammaSpace&&(W=Math.pow((0,y.Clamp)(W),n.l),L=Math.pow((0,y.Clamp)(L),n.l),D=Math.pow((0,y.Clamp)(D),n.l));const V=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const h=Math.max(W,L,D);if(h>V){const d=V/h;W*=d,L*=d,D*=d}}else W=(0,y.Clamp)(W,0,V),L=(0,y.Clamp)(L,0,V),D=(0,y.Clamp)(D,0,V);const i=new X.ed(W,L,D);d.addLight(Z,i,J),T+=J,f+=Y}c+=F}}const S=6*(4*Math.PI)/6/T;return d.scaleInPlace(S),d.convertIncidentRadianceToIrradiance(),d.convertIrradianceToLambertianRadiance(),C.g.FromHarmonics(d)}}U._FileFaces=[new F("right",new Y.pd(1,0,0),new Y.pd(0,0,-1),new Y.pd(0,-1,0)),new F("left",new Y.pd(-1,0,0),new Y.pd(0,0,1),new Y.pd(0,-1,0)),new F("up",new Y.pd(0,1,0),new Y.pd(1,0,0),new Y.pd(0,0,1)),new F("down",new Y.pd(0,-1,0),new Y.pd(1,0,0),new Y.pd(0,0,-1)),new F("front",new Y.pd(0,0,1),new Y.pd(1,0,0),new Y.pd(0,-1,0)),new F("back",new Y.pd(0,0,-1),new Y.pd(-1,0,0),new Y.pd(0,-1,0))],U.MAX_HDRI_VALUE=4096,U.PRESERVE_CLAMPED_COLORS=!1},15256:(h,d,T)=>{T.d(d,{DDSTools:()=>O});var Y=T(12787),y=T(12596),C=T(13293),n=T(12979);T(14494);const X=131072,F=131072;function U(h){return h.charCodeAt(0)+(h.charCodeAt(1)<<8)+(h.charCodeAt(2)<<16)+(h.charCodeAt(3)<<24)}const Z=U("DXT1"),S=U("DXT3"),r=U("DXT5"),c=U("DX10");class O{static GetDDSInfo(h){const d=new Int32Array(h.buffer,h.byteOffset,31),T=new Int32Array(h.buffer,h.byteOffset,35);let Y=1;d[2]&X&&(Y=Math.max(1,d[7]));const y=d[21],C=y===c?T[32]:0;let n=0;switch(y){case 113:n=2;break;case 116:n=1;break;case c:if(10===C){n=2;break}if(2===C){n=1;break}}return{width:d[4],height:d[3],mipmapCount:Y,isFourCC:4===(4&d[20]),isRGB:64===(64&d[20]),isLuminance:(d[20]&F)===F,isCube:512===(512&d[28]),isCompressed:y===Z||y===S||y===r,dxgiFormat:C,textureType:n}}static _GetHalfFloatAsFloatRGBAArrayBuffer(h,d,T,Y,y,C){const X=new Float32Array(Y),F=new Uint16Array(y,T);let U=0;for(let Z=0;Z<d;Z++)for(let d=0;d<h;d++){const T=4*(d+Z*h);X[U]=(0,n.e)(F[T]),X[U+1]=(0,n.e)(F[T+1]),X[U+2]=(0,n.e)(F[T+2]),O.StoreLODInAlphaChannel?X[U+3]=C:X[U+3]=(0,n.e)(F[T+3]),U+=4}return X}static _GetHalfFloatRGBAArrayBuffer(h,d,T,Y,y,C){if(O.StoreLODInAlphaChannel){const X=new Uint16Array(Y),F=new Uint16Array(y,T);let U=0;for(let T=0;T<d;T++)for(let d=0;d<h;d++){const Y=4*(d+T*h);X[U]=F[Y],X[U+1]=F[Y+1],X[U+2]=F[Y+2],X[U+3]=(0,n.j)(C),U+=4}return X}return new Uint16Array(y,T,Y)}static _GetFloatRGBAArrayBuffer(h,d,T,Y,y,C){if(O.StoreLODInAlphaChannel){const n=new Float32Array(Y),X=new Float32Array(y,T);let F=0;for(let T=0;T<d;T++)for(let d=0;d<h;d++){const Y=4*(d+T*h);n[F]=X[Y],n[F+1]=X[Y+1],n[F+2]=X[Y+2],n[F+3]=C,F+=4}return n}return new Float32Array(y,T,Y)}static _GetFloatAsHalfFloatRGBAArrayBuffer(h,d,T,Y,y,C){const X=new Uint16Array(Y),F=new Float32Array(y,T);let U=0;for(let Z=0;Z<d;Z++)for(let d=0;d<h;d++)X[U]=(0,n.j)(F[U]),X[U+1]=(0,n.j)(F[U+1]),X[U+2]=(0,n.j)(F[U+2]),O.StoreLODInAlphaChannel?X[U+3]=(0,n.j)(C):X[U+3]=(0,n.j)(F[U+3]),U+=4;return X}static _GetFloatAsUIntRGBAArrayBuffer(h,d,T,y,C,n){const X=new Uint8Array(y),F=new Float32Array(C,T);let U=0;for(let Z=0;Z<d;Z++)for(let d=0;d<h;d++){const T=4*(d+Z*h);X[U]=255*(0,Y.Clamp)(F[T]),X[U+1]=255*(0,Y.Clamp)(F[T+1]),X[U+2]=255*(0,Y.Clamp)(F[T+2]),O.StoreLODInAlphaChannel?X[U+3]=n:X[U+3]=255*(0,Y.Clamp)(F[T+3]),U+=4}return X}static _GetHalfFloatAsUIntRGBAArrayBuffer(h,d,T,y,C,X){const F=new Uint8Array(y),U=new Uint16Array(C,T);let Z=0;for(let S=0;S<d;S++)for(let d=0;d<h;d++){const T=4*(d+S*h);F[Z]=255*(0,Y.Clamp)((0,n.e)(U[T])),F[Z+1]=255*(0,Y.Clamp)((0,n.e)(U[T+1])),F[Z+2]=255*(0,Y.Clamp)((0,n.e)(U[T+2])),O.StoreLODInAlphaChannel?F[Z+3]=X:F[Z+3]=255*(0,Y.Clamp)((0,n.e)(U[T+3])),Z+=4}return F}static _GetRGBAArrayBuffer(h,d,T,Y,y,C,n,X,F){const U=new Uint8Array(Y),Z=new Uint8Array(y,T);let S=0;for(let r=0;r<d;r++)for(let d=0;d<h;d++){const T=4*(d+r*h);U[S]=Z[T+C],U[S+1]=Z[T+n],U[S+2]=Z[T+X],U[S+3]=Z[T+F],S+=4}return U}static _ExtractLongWordOrder(h){return 0===h||255===h||-16777216===h?0:1+O._ExtractLongWordOrder(h>>8)}static _GetRGBArrayBuffer(h,d,T,Y,y,C,n,X){const F=new Uint8Array(Y),U=new Uint8Array(y,T);let Z=0;for(let S=0;S<d;S++)for(let d=0;d<h;d++){const T=3*(d+S*h);F[Z]=U[T+C],F[Z+1]=U[T+n],F[Z+2]=U[T+X],Z+=3}return F}static _GetLuminanceArrayBuffer(h,d,T,Y,y){const C=new Uint8Array(Y),n=new Uint8Array(y,T);let X=0;for(let F=0;F<d;F++)for(let d=0;d<h;d++){const T=d+F*h;C[X]=n[T],X++}return C}static UploadDDSLevels(h,d,T,Y,n,F){let U=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,f=arguments.length>7?arguments[7]:void 0,J=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],W=null;Y.sphericalPolynomial&&(W=[]);const L=!!h.getCaps().s3tc;d.generateMipMaps=n;const D=new Int32Array(T.buffer,T.byteOffset,31);let V,i,w,s,E,z,x,g=0,H=0,p=1;if(542327876!==D[0])return void y.c.Error("Invalid magic number in DDS header");if(!Y.isFourCC&&!Y.isRGB&&!Y.isLuminance)return void y.c.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(Y.isCompressed&&!L)return void y.c.Error("Compressed textures are not supported on this platform.");let k=D[22];s=D[1]+4;let o=!1;if(Y.isFourCC)switch(V=D[21],V){case Z:p=8,H=33777;break;case S:p=16,H=33778;break;case r:p=16,H=33779;break;case 113:o=!0,k=64;break;case 116:o=!0,k=128;break;case c:{s+=20;let h=!1;switch(Y.dxgiFormat){case 10:o=!0,k=64,h=!0;break;case 2:o=!0,k=128,h=!0;break;case 88:Y.isRGB=!0,Y.isFourCC=!1,k=32,h=!0}if(h)break}default:return void y.c.Error(["Unsupported FourCC code:",(u=V,String.fromCharCode(255&u,u>>8&255,u>>16&255,u>>24&255))])}var u;const N=O._ExtractLongWordOrder(D[23]),K=O._ExtractLongWordOrder(D[24]),l=O._ExtractLongWordOrder(D[25]),q=O._ExtractLongWordOrder(D[26]);o&&(H=h._getRGBABufferInternalSizedFormat(Y.textureType)),z=1,D[2]&X&&!1!==n&&(z=Math.max(1,D[7]));const j=f||0,a=h.getCaps();for(let y=j;y<F;y++){for(i=D[4],w=D[3],x=0;x<z;++x){if(-1===U||U===x){const C=-1===U?x:0;if(!Y.isCompressed&&Y.isFourCC){d.format=5,g=i*w*4;let Y=null;if(h._badOS||h._badDesktopOS||!a.textureHalfFloat&&!a.textureFloat)128===k?(Y=O._GetFloatAsUIntRGBAArrayBuffer(i,w,T.byteOffset+s,g,T.buffer,C),W&&0==C&&W.push(O._GetFloatRGBAArrayBuffer(i,w,T.byteOffset+s,g,T.buffer,C))):64===k&&(Y=O._GetHalfFloatAsUIntRGBAArrayBuffer(i,w,T.byteOffset+s,g,T.buffer,C),W&&0==C&&W.push(O._GetHalfFloatAsFloatRGBAArrayBuffer(i,w,T.byteOffset+s,g,T.buffer,C))),d.type=0;else{const h=a.textureFloat&&(J&&a.textureFloatLinearFiltering||!J),y=a.textureHalfFloat&&(J&&a.textureHalfFloatLinearFiltering||!J),n=(128===k||64===k&&!y)&&h?1:(64===k||128===k&&!h)&&y?2:0;let X,F=null;if(128===k)switch(n){case 1:X=O._GetFloatRGBAArrayBuffer,F=null;break;case 2:X=O._GetFloatAsHalfFloatRGBAArrayBuffer,F=O._GetFloatRGBAArrayBuffer;break;case 0:X=O._GetFloatAsUIntRGBAArrayBuffer,F=O._GetFloatRGBAArrayBuffer}else switch(n){case 1:X=O._GetHalfFloatAsFloatRGBAArrayBuffer,F=null;break;case 2:X=O._GetHalfFloatRGBAArrayBuffer,F=O._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:X=O._GetHalfFloatAsUIntRGBAArrayBuffer,F=O._GetHalfFloatAsFloatRGBAArrayBuffer}d.type=n,Y=X(i,w,T.byteOffset+s,g,T.buffer,C),W&&0==C&&W.push(F?F(i,w,T.byteOffset+s,g,T.buffer,C):Y)}Y&&h._uploadDataToTextureDirectly(d,Y,y,C)}else if(Y.isRGB)d.type=0,24===k?(d.format=4,g=i*w*3,E=O._GetRGBArrayBuffer(i,w,T.byteOffset+s,g,T.buffer,N,K,l),h._uploadDataToTextureDirectly(d,E,y,C)):(d.format=5,g=i*w*4,E=O._GetRGBAArrayBuffer(i,w,T.byteOffset+s,g,T.buffer,N,K,l,q),h._uploadDataToTextureDirectly(d,E,y,C));else if(Y.isLuminance){const Y=h._getUnpackAlignement(),n=i;g=Math.floor((i+Y-1)/Y)*Y*(w-1)+n,E=O._GetLuminanceArrayBuffer(i,w,T.byteOffset+s,g,T.buffer),d.format=1,d.type=0,h._uploadDataToTextureDirectly(d,E,y,C)}else g=Math.max(4,i)/4*Math.max(4,w)/4*p,E=new Uint8Array(T.buffer,T.byteOffset+s,g),d.type=0,h._uploadCompressedDataToTextureDirectly(d,H,i,w,E,y,C)}s+=k?i*w*(k/8):g,i*=.5,w*=.5,i=Math.max(1,i),w=Math.max(1,w)}if(void 0!==f)break}W&&W.length>0?Y.sphericalPolynomial=C.e.ConvertCubeMapToSphericalPolynomial({size:D[4],right:W[0],left:W[1],up:W[2],down:W[3],front:W[4],back:W[5],format:5,type:1,gammaSpace:!1}):Y.sphericalPolynomial=void 0}}O.StoreLODInAlphaChannel=!1}}]);