"use strict";(self.n52dyox90qa=self.n52dyox90qa||[]).push([[28,29],{13434:(E,t,z)=>{var A=z(11751),X=z(11640),R=z(11674),u=z(11772),p=z(11712),C=z(11759);p.b.prototype._partialLoadFile=function(E,t,z,A){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(E,(E=>{z[t]=E,z._internalCount++,6===z._internalCount&&A(z)}),void 0,void 0,!0,((E,t)=>{X&&E&&X(E.status+" "+E.statusText,t)}))},p.b.prototype._cascadeLoadFiles=function(E,t,z){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const X=[];X._internalCount=0;for(let R=0;R<6;R++)this._partialLoadFile(z[R],R,X,t,A)},p.b.prototype._cascadeLoadImgs=function(E,t,z,A){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,R=arguments.length>5?arguments[5]:void 0;const u=[];u._internalCount=0;for(let p=0;p<6;p++)this._partialLoadImg(A[p],p,u,E,t,z,X,R)},p.b.prototype._partialLoadImg=function(E,t,z,A,X,p){let C=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,Z=arguments.length>7?arguments[7]:void 0;const H=(0,u.d)();(0,R.p)(E,(E=>{z[t]=E,z._internalCount++,A&&A.removePendingData(H),6===z._internalCount&&p&&p(X,z)}),((E,t)=>{A&&A.removePendingData(H),C&&C(E,t)}),A?A.offlineProvider:null,Z),A&&A.addPendingData(H)},p.b.prototype.createCubeTextureBase=function(E,t,z,R){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,p=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,Z=arguments.length>6?arguments[6]:void 0,H=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,h=arguments.length>8&&void 0!==arguments[8]&&arguments[8],d=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,y=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,O=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,c=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,a=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,L=arguments.length>14&&void 0!==arguments[14]&&arguments[14],mE=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const W=O||new A.e(this,7);W.isCube=!0,W.url=E,W.generateMipMaps=!R,W._lodGenerationScale=d,W._lodGenerationOffset=y,W._useSRGBBuffer=!!L&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!R),W!==O&&(W.label=E.substring(0,60)),this._doNotHandleContextLost||(W._extension=H,W._files=z,W._buffer=mE);const I=E;this._transformTextureUrl&&!O&&(E=this._transformTextureUrl(E));const e=H??function(E){const t=E.split("?")[0],z=t.lastIndexOf(".");return z>-1?t.substring(z).toLowerCase():""}(E),D=(0,C.d)(e),S=(E,t)=>{W.dispose(),p?p(E,t):E&&X.d.Warn(E)},l=(A,p)=>{E===I?A&&S(A.status+" "+A.statusText,p):(X.d.Warn(`Failed to load ${E}, falling back to the ${I}`),this.createCubeTextureBase(I,t,z,!!R,u,S,Z,H,h,d,y,W,c,a,L,mE))};if(D)D.then((A=>{const X=E=>{c&&c(W,E),A.loadCubeData(E,W,h,u,((E,t)=>{S(E,t)}))};mE?X(mE):z&&6===z.length?A.supportCascades?this._cascadeLoadFiles(t,(E=>X(E.map((E=>new Uint8Array(E))))),z,S):S("Textures type does not support cascades."):this._loadFile(E,(E=>X(new Uint8Array(E))),void 0,void 0,!0,l)}));else{if(!z||0===z.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(t,W,((E,t)=>{a&&a(E,t)}),z,S)}return this._internalTexturesCache.push(W),W}},14195:(E,t,z)=>{z.r(t),z.d(t,{_DDSTextureLoader:()=>R});var A=z(11999),X=z(14198);class R{constructor(){this.supportCascades=!0}loadCubeData(E,t,z,R){const u=t.getEngine();let p,C=!1,Z=1e3;if(Array.isArray(E))for(let A=0;A<E.length;A++){const z=E[A];p=X.DDSTools.GetDDSInfo(z),t.width=p.width,t.height=p.height,C=(p.isRGB||p.isLuminance||p.mipmapCount>1)&&t.generateMipMaps,u._unpackFlipY(p.isCompressed),X.DDSTools.UploadDDSLevels(u,t,z,p,C,6,-1,A),p.isFourCC||1!==p.mipmapCount?Z=p.mipmapCount-1:u.generateMipMapsForCubemap(t)}else{const R=E;p=X.DDSTools.GetDDSInfo(R),t.width=p.width,t.height=p.height,z&&(p.sphericalPolynomial=new A.i),C=(p.isRGB||p.isLuminance||p.mipmapCount>1)&&t.generateMipMaps,u._unpackFlipY(p.isCompressed),X.DDSTools.UploadDDSLevels(u,t,R,p,C,6),p.isFourCC||1!==p.mipmapCount?Z=p.mipmapCount-1:u.generateMipMapsForCubemap(t,!1)}u._setCubeMapTextureParams(t,C,Z),t.isReady=!0,t.onLoadedObservable.notifyObservers(t),t.onLoadedObservable.clear(),R&&R({isDDS:!0,width:t.width,info:p,data:E,texture:t})}loadData(E,t,z){const A=X.DDSTools.GetDDSInfo(E),R=(A.isRGB||A.isLuminance||A.mipmapCount>1)&&t.generateMipMaps&&Math.max(A.width,A.height)>>A.mipmapCount-1===1;z(A.width,A.height,R,A.isFourCC,(()=>{X.DDSTools.UploadDDSLevels(t.getEngine(),t,E,A,R,1)}))}}},12333:(E,t,z)=>{z.d(t,{e:()=>Z});var A=z(11812),X=z(11834),R=z(11999),u=z(11817),p=z(11856);class C{constructor(E,t,z,A){this.name=E,this.worldAxisForNormal=t,this.worldAxisForFileX=z,this.worldAxisForFileY=A}}class Z{static ConvertCubeMapTextureToSphericalPolynomial(E){var t;if(!E.isCube)return null;null===(t=E.lE())||void 0===t||t.getEngine().flushFramebuffer();const z=E.getSize().width,A=E.readPixels(0,void 0,void 0,!1),X=E.readPixels(1,void 0,void 0,!1);let R,u;E.isRenderTarget?(R=E.readPixels(3,void 0,void 0,!1),u=E.readPixels(2,void 0,void 0,!1)):(R=E.readPixels(2,void 0,void 0,!1),u=E.readPixels(3,void 0,void 0,!1));const p=E.readPixels(4,void 0,void 0,!1),C=E.readPixels(5,void 0,void 0,!1),Z=E.gammaSpace;let H=0;return 1!=E.textureType&&2!=E.textureType||(H=1),new Promise((E=>{Promise.all([X,A,R,u,p,C]).then((t=>{let[A,X,R,u,p,C]=t;const h={size:z,right:X,left:A,up:R,down:u,front:p,back:C,format:5,type:H,gammaSpace:Z};E(this.ConvertCubeMapToSphericalPolynomial(h))}))}))}static _AreaElement(E,t){return Math.atan2(E*t,Math.sqrt(E*E+t*t+1))}static ConvertCubeMapToSphericalPolynomial(E){const t=new R.e;let z=0;const A=2/E.size,C=A,Z=.5*A,H=Z-1;for(let R=0;R<6;R++){const h=this._FileFaces[R],d=E[h.name];let y=H;const O=5===E.format?4:3;for(let R=0;R<E.size;R++){let c=H;for(let C=0;C<E.size;C++){const H=h.worldAxisForFileX.scale(c).add(h.worldAxisForFileY.scale(y)).add(h.worldAxisForNormal);H.normalize();const a=this._AreaElement(c-Z,y-Z)-this._AreaElement(c-Z,y+Z)-this._AreaElement(c+Z,y-Z)+this._AreaElement(c+Z,y+Z);let L=d[R*E.size*O+C*O+0],mE=d[R*E.size*O+C*O+1],W=d[R*E.size*O+C*O+2];isNaN(L)&&(L=0),isNaN(mE)&&(mE=0),isNaN(W)&&(W=0),0===E.type&&(L/=255,mE/=255,W/=255),E.gammaSpace&&(L=Math.pow((0,X.Clamp)(L),u.j),mE=Math.pow((0,X.Clamp)(mE),u.j),W=Math.pow((0,X.Clamp)(W),u.j));const I=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const E=Math.max(L,mE,W);if(E>I){const t=I/E;L*=t,mE*=t,W*=t}}else L=(0,X.Clamp)(L,0,I),mE=(0,X.Clamp)(mE,0,I),W=(0,X.Clamp)(W,0,I);const e=new p.Dt(L,mE,W);t.addLight(H,e,a),z+=a,c+=A}y+=C}}const h=6*(4*Math.PI)/6/z;return t.scaleInPlace(h),t.convertIncidentRadianceToIrradiance(),t.convertIrradianceToLambertianRadiance(),R.i.FromHarmonics(t)}}Z._FileFaces=[new C("right",new A.Lt(1,0,0),new A.Lt(0,0,-1),new A.Lt(0,-1,0)),new C("left",new A.Lt(-1,0,0),new A.Lt(0,0,1),new A.Lt(0,-1,0)),new C("up",new A.Lt(0,1,0),new A.Lt(1,0,0),new A.Lt(0,0,1)),new C("down",new A.Lt(0,-1,0),new A.Lt(1,0,0),new A.Lt(0,0,-1)),new C("front",new A.Lt(0,0,1),new A.Lt(1,0,0),new A.Lt(0,-1,0)),new C("back",new A.Lt(0,0,-1),new A.Lt(-1,0,0),new A.Lt(0,-1,0))],Z.MAX_HDRI_VALUE=4096,Z.PRESERVE_CLAMPED_COLORS=!1},14198:(E,t,z)=>{z.d(t,{DDSTools:()=>O});var A=z(11834),X=z(11640),R=z(12333),u=z(12044);z(13434);const p=131072,C=131072;function Z(E){return E.charCodeAt(0)+(E.charCodeAt(1)<<8)+(E.charCodeAt(2)<<16)+(E.charCodeAt(3)<<24)}const H=Z("DXT1"),h=Z("DXT3"),d=Z("DXT5"),y=Z("DX10");class O{static GetDDSInfo(E){const t=new Int32Array(E.buffer,E.byteOffset,31),z=new Int32Array(E.buffer,E.byteOffset,35);let A=1;t[2]&p&&(A=Math.max(1,t[7]));const X=t[21],R=X===y?z[32]:0;let u=0;switch(X){case 113:u=2;break;case 116:u=1;break;case y:if(10===R){u=2;break}if(2===R){u=1;break}}return{width:t[4],height:t[3],mipmapCount:A,isFourCC:4===(4&t[20]),isRGB:64===(64&t[20]),isLuminance:(t[20]&C)===C,isCube:512===(512&t[28]),isCompressed:X===H||X===h||X===d,dxgiFormat:R,textureType:u}}static _GetHalfFloatAsFloatRGBAArrayBuffer(E,t,z,A,X,R){const p=new Float32Array(A),C=new Uint16Array(X,z);let Z=0;for(let H=0;H<t;H++)for(let t=0;t<E;t++){const z=4*(t+H*E);p[Z]=(0,u.g)(C[z]),p[Z+1]=(0,u.g)(C[z+1]),p[Z+2]=(0,u.g)(C[z+2]),O.StoreLODInAlphaChannel?p[Z+3]=R:p[Z+3]=(0,u.g)(C[z+3]),Z+=4}return p}static _GetHalfFloatRGBAArrayBuffer(E,t,z,A,X,R){if(O.StoreLODInAlphaChannel){const p=new Uint16Array(A),C=new Uint16Array(X,z);let Z=0;for(let z=0;z<t;z++)for(let t=0;t<E;t++){const A=4*(t+z*E);p[Z]=C[A],p[Z+1]=C[A+1],p[Z+2]=C[A+2],p[Z+3]=(0,u.o)(R),Z+=4}return p}return new Uint16Array(X,z,A)}static _GetFloatRGBAArrayBuffer(E,t,z,A,X,R){if(O.StoreLODInAlphaChannel){const u=new Float32Array(A),p=new Float32Array(X,z);let C=0;for(let z=0;z<t;z++)for(let t=0;t<E;t++){const A=4*(t+z*E);u[C]=p[A],u[C+1]=p[A+1],u[C+2]=p[A+2],u[C+3]=R,C+=4}return u}return new Float32Array(X,z,A)}static _GetFloatAsHalfFloatRGBAArrayBuffer(E,t,z,A,X,R){const p=new Uint16Array(A),C=new Float32Array(X,z);let Z=0;for(let H=0;H<t;H++)for(let t=0;t<E;t++)p[Z]=(0,u.o)(C[Z]),p[Z+1]=(0,u.o)(C[Z+1]),p[Z+2]=(0,u.o)(C[Z+2]),O.StoreLODInAlphaChannel?p[Z+3]=(0,u.o)(R):p[Z+3]=(0,u.o)(C[Z+3]),Z+=4;return p}static _GetFloatAsUIntRGBAArrayBuffer(E,t,z,X,R,u){const p=new Uint8Array(X),C=new Float32Array(R,z);let Z=0;for(let H=0;H<t;H++)for(let t=0;t<E;t++){const z=4*(t+H*E);p[Z]=255*(0,A.Clamp)(C[z]),p[Z+1]=255*(0,A.Clamp)(C[z+1]),p[Z+2]=255*(0,A.Clamp)(C[z+2]),O.StoreLODInAlphaChannel?p[Z+3]=u:p[Z+3]=255*(0,A.Clamp)(C[z+3]),Z+=4}return p}static _GetHalfFloatAsUIntRGBAArrayBuffer(E,t,z,X,R,p){const C=new Uint8Array(X),Z=new Uint16Array(R,z);let H=0;for(let h=0;h<t;h++)for(let t=0;t<E;t++){const z=4*(t+h*E);C[H]=255*(0,A.Clamp)((0,u.g)(Z[z])),C[H+1]=255*(0,A.Clamp)((0,u.g)(Z[z+1])),C[H+2]=255*(0,A.Clamp)((0,u.g)(Z[z+2])),O.StoreLODInAlphaChannel?C[H+3]=p:C[H+3]=255*(0,A.Clamp)((0,u.g)(Z[z+3])),H+=4}return C}static _GetRGBAArrayBuffer(E,t,z,A,X,R,u,p,C){const Z=new Uint8Array(A),H=new Uint8Array(X,z);let h=0;for(let d=0;d<t;d++)for(let t=0;t<E;t++){const z=4*(t+d*E);Z[h]=H[z+R],Z[h+1]=H[z+u],Z[h+2]=H[z+p],Z[h+3]=H[z+C],h+=4}return Z}static _ExtractLongWordOrder(E){return 0===E||255===E||-16777216===E?0:1+O._ExtractLongWordOrder(E>>8)}static _GetRGBArrayBuffer(E,t,z,A,X,R,u,p){const C=new Uint8Array(A),Z=new Uint8Array(X,z);let H=0;for(let h=0;h<t;h++)for(let t=0;t<E;t++){const z=3*(t+h*E);C[H]=Z[z+R],C[H+1]=Z[z+u],C[H+2]=Z[z+p],H+=3}return C}static _GetLuminanceArrayBuffer(E,t,z,A,X){const R=new Uint8Array(A),u=new Uint8Array(X,z);let p=0;for(let C=0;C<t;C++)for(let t=0;t<E;t++){const z=t+C*E;R[p]=u[z],p++}return R}static UploadDDSLevels(E,t,z,A,u,C){let Z=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,c=arguments.length>7?arguments[7]:void 0,a=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],L=null;A.sphericalPolynomial&&(L=[]);const mE=!!E.getCaps().s3tc;t.generateMipMaps=u;const W=new Int32Array(z.buffer,z.byteOffset,31);let I,e,D,S,l,f,K,F=0,B=0,b=1;if(542327876!==W[0])return void X.d.Error("Invalid magic number in DDS header");if(!A.isFourCC&&!A.isRGB&&!A.isLuminance)return void X.d.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(A.isCompressed&&!mE)return void X.d.Error("Compressed textures are not supported on this platform.");let x=W[22];S=W[1]+4;let J=!1;if(A.isFourCC)switch(I=W[21],I){case H:b=8,B=33777;break;case h:b=16,B=33778;break;case d:b=16,B=33779;break;case 113:J=!0,x=64;break;case 116:J=!0,x=128;break;case y:{S+=20;let E=!1;switch(A.dxgiFormat){case 10:J=!0,x=64,E=!0;break;case 2:J=!0,x=128,E=!0;break;case 88:A.isRGB=!0,A.isFourCC=!1,x=32,E=!0}if(E)break}default:return void X.d.Error(["Unsupported FourCC code:",(V=I,String.fromCharCode(255&V,V>>8&255,V>>16&255,V>>24&255))])}var V;const r=O._ExtractLongWordOrder(W[23]),i=O._ExtractLongWordOrder(W[24]),g=O._ExtractLongWordOrder(W[25]),o=O._ExtractLongWordOrder(W[26]);J&&(B=E._getRGBABufferInternalSizedFormat(A.textureType)),f=1,W[2]&p&&!1!==u&&(f=Math.max(1,W[7]));const Q=c||0,T=E.getCaps();for(let X=Q;X<C;X++){for(e=W[4],D=W[3],K=0;K<f;++K){if(-1===Z||Z===K){const R=-1===Z?K:0;if(!A.isCompressed&&A.isFourCC){t.format=5,F=e*D*4;let A=null;if(E._badOS||E._badDesktopOS||!T.textureHalfFloat&&!T.textureFloat)128===x?(A=O._GetFloatAsUIntRGBAArrayBuffer(e,D,z.byteOffset+S,F,z.buffer,R),L&&0==R&&L.push(O._GetFloatRGBAArrayBuffer(e,D,z.byteOffset+S,F,z.buffer,R))):64===x&&(A=O._GetHalfFloatAsUIntRGBAArrayBuffer(e,D,z.byteOffset+S,F,z.buffer,R),L&&0==R&&L.push(O._GetHalfFloatAsFloatRGBAArrayBuffer(e,D,z.byteOffset+S,F,z.buffer,R))),t.type=0;else{const E=T.textureFloat&&(a&&T.textureFloatLinearFiltering||!a),X=T.textureHalfFloat&&(a&&T.textureHalfFloatLinearFiltering||!a),u=(128===x||64===x&&!X)&&E?1:(64===x||128===x&&!E)&&X?2:0;let p,C=null;if(128===x)switch(u){case 1:p=O._GetFloatRGBAArrayBuffer,C=null;break;case 2:p=O._GetFloatAsHalfFloatRGBAArrayBuffer,C=O._GetFloatRGBAArrayBuffer;break;case 0:p=O._GetFloatAsUIntRGBAArrayBuffer,C=O._GetFloatRGBAArrayBuffer}else switch(u){case 1:p=O._GetHalfFloatAsFloatRGBAArrayBuffer,C=null;break;case 2:p=O._GetHalfFloatRGBAArrayBuffer,C=O._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:p=O._GetHalfFloatAsUIntRGBAArrayBuffer,C=O._GetHalfFloatAsFloatRGBAArrayBuffer}t.type=u,A=p(e,D,z.byteOffset+S,F,z.buffer,R),L&&0==R&&L.push(C?C(e,D,z.byteOffset+S,F,z.buffer,R):A)}A&&E._uploadDataToTextureDirectly(t,A,X,R)}else if(A.isRGB)t.type=0,24===x?(t.format=4,F=e*D*3,l=O._GetRGBArrayBuffer(e,D,z.byteOffset+S,F,z.buffer,r,i,g),E._uploadDataToTextureDirectly(t,l,X,R)):(t.format=5,F=e*D*4,l=O._GetRGBAArrayBuffer(e,D,z.byteOffset+S,F,z.buffer,r,i,g,o),E._uploadDataToTextureDirectly(t,l,X,R));else if(A.isLuminance){const A=E._getUnpackAlignement(),u=e;F=Math.floor((e+A-1)/A)*A*(D-1)+u,l=O._GetLuminanceArrayBuffer(e,D,z.byteOffset+S,F,z.buffer),t.format=1,t.type=0,E._uploadDataToTextureDirectly(t,l,X,R)}else F=Math.max(4,e)/4*Math.max(4,D)/4*b,l=new Uint8Array(z.buffer,z.byteOffset+S,F),t.type=0,E._uploadCompressedDataToTextureDirectly(t,B,e,D,l,X,R)}S+=x?e*D*(x/8):F,e*=.5,D*=.5,e=Math.max(1,e),D=Math.max(1,D)}if(void 0!==c)break}L&&L.length>0?A.sphericalPolynomial=R.e.ConvertCubeMapToSphericalPolynomial({size:W[4],right:L[0],left:L[1],up:L[2],down:L[3],front:L[4],back:L[5],format:5,type:1,gammaSpace:!1}):A.sphericalPolynomial=void 0}}O.StoreLODInAlphaChannel=!1}}]);