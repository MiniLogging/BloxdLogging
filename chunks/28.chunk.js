"use strict";(self["3gghkoft8x"]=self["3gghkoft8x"]||[]).push([[28,29],{14001:(y,S,I)=>{var V=I(12265),i=I(12151),A=I(12193),B=I(12286),d=I(12223),F=I(12276);d.c.prototype._partialLoadFile=function(y,S,I,V){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(y,(y=>{I[S]=y,I._internalCount++,6===I._internalCount&&V(I)}),void 0,void 0,!0,((y,S)=>{i&&y&&i(y.status+" "+y.statusText,S)}))},d.c.prototype._cascadeLoadFiles=function(y,S,I){let V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const i=[];i._internalCount=0;for(let A=0;A<6;A++)this._partialLoadFile(I[A],A,i,S,V)},d.c.prototype._cascadeLoadImgs=function(y,S,I,V){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,A=arguments.length>5?arguments[5]:void 0;const B=[];B._internalCount=0;for(let d=0;d<6;d++)this._partialLoadImg(V[d],d,B,y,S,I,i,A)},d.c.prototype._partialLoadImg=function(y,S,I,V,i,d){let F=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,J=arguments.length>7?arguments[7]:void 0;const u=(0,B.d)();(0,A.w)(y,(y=>{I[S]=y,I._internalCount++,V&&V.removePendingData(u),6===I._internalCount&&d&&d(i,I)}),((y,S)=>{V&&V.removePendingData(u),F&&F(y,S)}),V?V.offlineProvider:null,J),V&&V.addPendingData(u)},d.c.prototype.createCubeTextureBase=function(y,S,I,A){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,J=arguments.length>6?arguments[6]:void 0,u=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,K=arguments.length>8&&void 0!==arguments[8]&&arguments[8],G=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,p=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,L=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,T=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,l=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,j=arguments.length>14&&void 0!==arguments[14]&&arguments[14],s=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const O=L||new V.c(this,7);O.isCube=!0,O.url=y,O.generateMipMaps=!A,O._lodGenerationScale=G,O._lodGenerationOffset=p,O._useSRGBBuffer=!!j&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!A),O!==L&&(O.label=y.substring(0,60)),this._doNotHandleContextLost||(O._extension=u,O._files=I,O._buffer=s);const f=y;this._transformTextureUrl&&!L&&(y=this._transformTextureUrl(y));const my=u??function(y){const S=y.split("?")[0],I=S.lastIndexOf(".");return I>-1?S.substring(I).toLowerCase():""}(y),C=(0,F.c)(my),D=(y,S)=>{O.dispose(),d?d(y,S):y&&i.b.Warn(y)},o=(V,d)=>{y===f?V&&D(V.status+" "+V.statusText,d):(i.b.Warn(`Failed to load ${y}, falling back to the ${f}`),this.createCubeTextureBase(f,S,I,!!A,B,D,J,u,K,G,p,O,T,l,j,s))};if(C)C.then((V=>{const i=y=>{T&&T(O,y),V.loadCubeData(y,O,K,B,((y,S)=>{D(y,S)}))};s?i(s):I&&6===I.length?V.supportCascades?this._cascadeLoadFiles(S,(y=>i(y.map((y=>new Uint8Array(y))))),I,D):D("Textures type does not support cascades."):this._loadFile(y,(y=>i(new Uint8Array(y))),void 0,void 0,!0,o)}));else{if(!I||0===I.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(S,O,((y,S)=>{l&&l(y,S)}),I,D)}return this._internalTexturesCache.push(O),O}},14771:(y,S,I)=>{I.r(S),I.d(S,{_DDSTextureLoader:()=>A});var V=I(12511),i=I(14776);class A{constructor(){this.supportCascades=!0}loadCubeData(y,S,I,A){const B=S.getEngine();let d,F=!1,J=1e3;if(Array.isArray(y))for(let V=0;V<y.length;V++){const I=y[V];d=i.DDSTools.GetDDSInfo(I),S.width=d.width,S.height=d.height,F=(d.isRGB||d.isLuminance||d.mipmapCount>1)&&S.generateMipMaps,B._unpackFlipY(d.isCompressed),i.DDSTools.UploadDDSLevels(B,S,I,d,F,6,-1,V),d.isFourCC||1!==d.mipmapCount?J=d.mipmapCount-1:B.generateMipMapsForCubemap(S)}else{const A=y;d=i.DDSTools.GetDDSInfo(A),S.width=d.width,S.height=d.height,I&&(d.sphericalPolynomial=new V.h),F=(d.isRGB||d.isLuminance||d.mipmapCount>1)&&S.generateMipMaps,B._unpackFlipY(d.isCompressed),i.DDSTools.UploadDDSLevels(B,S,A,d,F,6),d.isFourCC||1!==d.mipmapCount?J=d.mipmapCount-1:B.generateMipMapsForCubemap(S,!1)}B._setCubeMapTextureParams(S,F,J),S.isReady=!0,S.onLoadedObservable.notifyObservers(S),S.onLoadedObservable.clear(),A&&A({isDDS:!0,width:S.width,info:d,data:y,texture:S})}loadData(y,S,I){const V=i.DDSTools.GetDDSInfo(y),A=(V.isRGB||V.isLuminance||V.mipmapCount>1)&&S.generateMipMaps&&Math.max(V.width,V.height)>>V.mipmapCount-1===1;I(V.width,V.height,A,V.isFourCC,(()=>{i.DDSTools.UploadDDSLevels(S.getEngine(),S,y,V,A,1)}))}}},12829:(y,S,I)=>{I.d(S,{e:()=>J});var V=I(12321),i=I(12338),A=I(12511),B=I(12325),d=I(12362);class F{constructor(y,S,I,V){this.name=y,this.worldAxisForNormal=S,this.worldAxisForFileX=I,this.worldAxisForFileY=V}}class J{static ConvertCubeMapTextureToSphericalPolynomial(y){var S;if(!y.isCube)return null;null===(S=y.Ey())||void 0===S||S.getEngine().flushFramebuffer();const I=y.getSize().width,V=y.readPixels(0,void 0,void 0,!1),i=y.readPixels(1,void 0,void 0,!1);let A,B;y.isRenderTarget?(A=y.readPixels(3,void 0,void 0,!1),B=y.readPixels(2,void 0,void 0,!1)):(A=y.readPixels(2,void 0,void 0,!1),B=y.readPixels(3,void 0,void 0,!1));const d=y.readPixels(4,void 0,void 0,!1),F=y.readPixels(5,void 0,void 0,!1),J=y.gammaSpace;let u=0;return 1!=y.textureType&&2!=y.textureType||(u=1),new Promise((y=>{Promise.all([i,V,A,B,d,F]).then((S=>{let[V,i,A,B,d,F]=S;const K={size:I,right:i,left:V,up:A,down:B,front:d,back:F,format:5,type:u,gammaSpace:J};y(this.ConvertCubeMapToSphericalPolynomial(K))}))}))}static _AreaElement(y,S){return Math.atan2(y*S,Math.sqrt(y*y+S*S+1))}static ConvertCubeMapToSphericalPolynomial(y){const S=new A.e;let I=0;const V=2/y.size,F=V,J=.5*V,u=J-1;for(let A=0;A<6;A++){const K=this._FileFaces[A],G=y[K.name];let p=u;const L=5===y.format?4:3;for(let A=0;A<y.size;A++){let T=u;for(let F=0;F<y.size;F++){const u=K.worldAxisForFileX.scale(T).add(K.worldAxisForFileY.scale(p)).add(K.worldAxisForNormal);u.normalize();const l=this._AreaElement(T-J,p-J)-this._AreaElement(T-J,p+J)-this._AreaElement(T+J,p-J)+this._AreaElement(T+J,p+J);let j=G[A*y.size*L+F*L+0],s=G[A*y.size*L+F*L+1],O=G[A*y.size*L+F*L+2];isNaN(j)&&(j=0),isNaN(s)&&(s=0),isNaN(O)&&(O=0),0===y.type&&(j/=255,s/=255,O/=255),y.gammaSpace&&(j=Math.pow((0,i.Clamp)(j),B.h),s=Math.pow((0,i.Clamp)(s),B.h),O=Math.pow((0,i.Clamp)(O),B.h));const f=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const y=Math.max(j,s,O);if(y>f){const S=f/y;j*=S,s*=S,O*=S}}else j=(0,i.Clamp)(j,0,f),s=(0,i.Clamp)(s,0,f),O=(0,i.Clamp)(O,0,f);const my=new d.DS(j,s,O);S.addLight(u,my,l),I+=l,T+=V}p+=F}}const K=6*(4*Math.PI)/6/I;return S.scaleInPlace(K),S.convertIncidentRadianceToIrradiance(),S.convertIrradianceToLambertianRadiance(),A.h.FromHarmonics(S)}}J._FileFaces=[new F("right",new V.OS(1,0,0),new V.OS(0,0,-1),new V.OS(0,-1,0)),new F("left",new V.OS(-1,0,0),new V.OS(0,0,1),new V.OS(0,-1,0)),new F("up",new V.OS(0,1,0),new V.OS(1,0,0),new V.OS(0,0,1)),new F("down",new V.OS(0,-1,0),new V.OS(1,0,0),new V.OS(0,0,-1)),new F("front",new V.OS(0,0,1),new V.OS(1,0,0),new V.OS(0,-1,0)),new F("back",new V.OS(0,0,-1),new V.OS(-1,0,0),new V.OS(0,-1,0))],J.MAX_HDRI_VALUE=4096,J.PRESERVE_CLAMPED_COLORS=!1},14776:(y,S,I)=>{I.d(S,{DDSTools:()=>L});var V=I(12338),i=I(12151),A=I(12829),B=I(12550);I(14001);const d=131072,F=131072;function J(y){return y.charCodeAt(0)+(y.charCodeAt(1)<<8)+(y.charCodeAt(2)<<16)+(y.charCodeAt(3)<<24)}const u=J("DXT1"),K=J("DXT3"),G=J("DXT5"),p=J("DX10");class L{static GetDDSInfo(y){const S=new Int32Array(y.buffer,y.byteOffset,31),I=new Int32Array(y.buffer,y.byteOffset,35);let V=1;S[2]&d&&(V=Math.max(1,S[7]));const i=S[21],A=i===p?I[32]:0;let B=0;switch(i){case 113:B=2;break;case 116:B=1;break;case p:if(10===A){B=2;break}if(2===A){B=1;break}}return{width:S[4],height:S[3],mipmapCount:V,isFourCC:4===(4&S[20]),isRGB:64===(64&S[20]),isLuminance:(S[20]&F)===F,isCube:512===(512&S[28]),isCompressed:i===u||i===K||i===G,dxgiFormat:A,textureType:B}}static _GetHalfFloatAsFloatRGBAArrayBuffer(y,S,I,V,i,A){const d=new Float32Array(V),F=new Uint16Array(i,I);let J=0;for(let u=0;u<S;u++)for(let S=0;S<y;S++){const I=4*(S+u*y);d[J]=(0,B.h)(F[I]),d[J+1]=(0,B.h)(F[I+1]),d[J+2]=(0,B.h)(F[I+2]),L.StoreLODInAlphaChannel?d[J+3]=A:d[J+3]=(0,B.h)(F[I+3]),J+=4}return d}static _GetHalfFloatRGBAArrayBuffer(y,S,I,V,i,A){if(L.StoreLODInAlphaChannel){const d=new Uint16Array(V),F=new Uint16Array(i,I);let J=0;for(let I=0;I<S;I++)for(let S=0;S<y;S++){const V=4*(S+I*y);d[J]=F[V],d[J+1]=F[V+1],d[J+2]=F[V+2],d[J+3]=(0,B.q)(A),J+=4}return d}return new Uint16Array(i,I,V)}static _GetFloatRGBAArrayBuffer(y,S,I,V,i,A){if(L.StoreLODInAlphaChannel){const B=new Float32Array(V),d=new Float32Array(i,I);let F=0;for(let I=0;I<S;I++)for(let S=0;S<y;S++){const V=4*(S+I*y);B[F]=d[V],B[F+1]=d[V+1],B[F+2]=d[V+2],B[F+3]=A,F+=4}return B}return new Float32Array(i,I,V)}static _GetFloatAsHalfFloatRGBAArrayBuffer(y,S,I,V,i,A){const d=new Uint16Array(V),F=new Float32Array(i,I);let J=0;for(let u=0;u<S;u++)for(let S=0;S<y;S++)d[J]=(0,B.q)(F[J]),d[J+1]=(0,B.q)(F[J+1]),d[J+2]=(0,B.q)(F[J+2]),L.StoreLODInAlphaChannel?d[J+3]=(0,B.q)(A):d[J+3]=(0,B.q)(F[J+3]),J+=4;return d}static _GetFloatAsUIntRGBAArrayBuffer(y,S,I,i,A,B){const d=new Uint8Array(i),F=new Float32Array(A,I);let J=0;for(let u=0;u<S;u++)for(let S=0;S<y;S++){const I=4*(S+u*y);d[J]=255*(0,V.Clamp)(F[I]),d[J+1]=255*(0,V.Clamp)(F[I+1]),d[J+2]=255*(0,V.Clamp)(F[I+2]),L.StoreLODInAlphaChannel?d[J+3]=B:d[J+3]=255*(0,V.Clamp)(F[I+3]),J+=4}return d}static _GetHalfFloatAsUIntRGBAArrayBuffer(y,S,I,i,A,d){const F=new Uint8Array(i),J=new Uint16Array(A,I);let u=0;for(let K=0;K<S;K++)for(let S=0;S<y;S++){const I=4*(S+K*y);F[u]=255*(0,V.Clamp)((0,B.h)(J[I])),F[u+1]=255*(0,V.Clamp)((0,B.h)(J[I+1])),F[u+2]=255*(0,V.Clamp)((0,B.h)(J[I+2])),L.StoreLODInAlphaChannel?F[u+3]=d:F[u+3]=255*(0,V.Clamp)((0,B.h)(J[I+3])),u+=4}return F}static _GetRGBAArrayBuffer(y,S,I,V,i,A,B,d,F){const J=new Uint8Array(V),u=new Uint8Array(i,I);let K=0;for(let G=0;G<S;G++)for(let S=0;S<y;S++){const I=4*(S+G*y);J[K]=u[I+A],J[K+1]=u[I+B],J[K+2]=u[I+d],J[K+3]=u[I+F],K+=4}return J}static _ExtractLongWordOrder(y){return 0===y||255===y||-16777216===y?0:1+L._ExtractLongWordOrder(y>>8)}static _GetRGBArrayBuffer(y,S,I,V,i,A,B,d){const F=new Uint8Array(V),J=new Uint8Array(i,I);let u=0;for(let K=0;K<S;K++)for(let S=0;S<y;S++){const I=3*(S+K*y);F[u]=J[I+A],F[u+1]=J[I+B],F[u+2]=J[I+d],u+=3}return F}static _GetLuminanceArrayBuffer(y,S,I,V,i){const A=new Uint8Array(V),B=new Uint8Array(i,I);let d=0;for(let F=0;F<S;F++)for(let S=0;S<y;S++){const I=S+F*y;A[d]=B[I],d++}return A}static UploadDDSLevels(y,S,I,V,B,F){let J=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,T=arguments.length>7?arguments[7]:void 0,l=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],j=null;V.sphericalPolynomial&&(j=[]);const s=!!y.getCaps().s3tc;S.generateMipMaps=B;const O=new Int32Array(I.buffer,I.byteOffset,31);let f,my,C,D,o,E,z,r=0,h=0,n=1;if(542327876!==O[0])return void i.b.Error("Invalid magic number in DDS header");if(!V.isFourCC&&!V.isRGB&&!V.isLuminance)return void i.b.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(V.isCompressed&&!s)return void i.b.Error("Compressed textures are not supported on this platform.");let v=O[22];D=O[1]+4;let P=!1;if(V.isFourCC)switch(f=O[21],f){case u:n=8,h=33777;break;case K:n=16,h=33778;break;case G:n=16,h=33779;break;case 113:P=!0,v=64;break;case 116:P=!0,v=128;break;case p:{D+=20;let y=!1;switch(V.dxgiFormat){case 10:P=!0,v=64,y=!0;break;case 2:P=!0,v=128,y=!0;break;case 88:V.isRGB=!0,V.isFourCC=!1,v=32,y=!0}if(y)break}default:return void i.b.Error(["Unsupported FourCC code:",(q=f,String.fromCharCode(255&q,q>>8&255,q>>16&255,q>>24&255))])}var q;const g=L._ExtractLongWordOrder(O[23]),k=L._ExtractLongWordOrder(O[24]),R=L._ExtractLongWordOrder(O[25]),b=L._ExtractLongWordOrder(O[26]);P&&(h=y._getRGBABufferInternalSizedFormat(V.textureType)),E=1,O[2]&d&&!1!==B&&(E=Math.max(1,O[7]));const U=T||0,W=y.getCaps();for(let i=U;i<F;i++){for(my=O[4],C=O[3],z=0;z<E;++z){if(-1===J||J===z){const A=-1===J?z:0;if(!V.isCompressed&&V.isFourCC){S.format=5,r=my*C*4;let V=null;if(y._badOS||y._badDesktopOS||!W.textureHalfFloat&&!W.textureFloat)128===v?(V=L._GetFloatAsUIntRGBAArrayBuffer(my,C,I.byteOffset+D,r,I.buffer,A),j&&0==A&&j.push(L._GetFloatRGBAArrayBuffer(my,C,I.byteOffset+D,r,I.buffer,A))):64===v&&(V=L._GetHalfFloatAsUIntRGBAArrayBuffer(my,C,I.byteOffset+D,r,I.buffer,A),j&&0==A&&j.push(L._GetHalfFloatAsFloatRGBAArrayBuffer(my,C,I.byteOffset+D,r,I.buffer,A))),S.type=0;else{const y=W.textureFloat&&(l&&W.textureFloatLinearFiltering||!l),i=W.textureHalfFloat&&(l&&W.textureHalfFloatLinearFiltering||!l),B=(128===v||64===v&&!i)&&y?1:(64===v||128===v&&!y)&&i?2:0;let d,F=null;if(128===v)switch(B){case 1:d=L._GetFloatRGBAArrayBuffer,F=null;break;case 2:d=L._GetFloatAsHalfFloatRGBAArrayBuffer,F=L._GetFloatRGBAArrayBuffer;break;case 0:d=L._GetFloatAsUIntRGBAArrayBuffer,F=L._GetFloatRGBAArrayBuffer}else switch(B){case 1:d=L._GetHalfFloatAsFloatRGBAArrayBuffer,F=null;break;case 2:d=L._GetHalfFloatRGBAArrayBuffer,F=L._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:d=L._GetHalfFloatAsUIntRGBAArrayBuffer,F=L._GetHalfFloatAsFloatRGBAArrayBuffer}S.type=B,V=d(my,C,I.byteOffset+D,r,I.buffer,A),j&&0==A&&j.push(F?F(my,C,I.byteOffset+D,r,I.buffer,A):V)}V&&y._uploadDataToTextureDirectly(S,V,i,A)}else if(V.isRGB)S.type=0,24===v?(S.format=4,r=my*C*3,o=L._GetRGBArrayBuffer(my,C,I.byteOffset+D,r,I.buffer,g,k,R),y._uploadDataToTextureDirectly(S,o,i,A)):(S.format=5,r=my*C*4,o=L._GetRGBAArrayBuffer(my,C,I.byteOffset+D,r,I.buffer,g,k,R,b),y._uploadDataToTextureDirectly(S,o,i,A));else if(V.isLuminance){const V=y._getUnpackAlignement(),B=my;r=Math.floor((my+V-1)/V)*V*(C-1)+B,o=L._GetLuminanceArrayBuffer(my,C,I.byteOffset+D,r,I.buffer),S.format=1,S.type=0,y._uploadDataToTextureDirectly(S,o,i,A)}else r=Math.max(4,my)/4*Math.max(4,C)/4*n,o=new Uint8Array(I.buffer,I.byteOffset+D,r),S.type=0,y._uploadCompressedDataToTextureDirectly(S,h,my,C,o,i,A)}D+=v?my*C*(v/8):r,my*=.5,C*=.5,my=Math.max(1,my),C=Math.max(1,C)}if(void 0!==T)break}j&&j.length>0?V.sphericalPolynomial=A.e.ConvertCubeMapToSphericalPolynomial({size:O[4],right:j[0],left:j[1],up:j[2],down:j[3],front:j[4],back:j[5],format:5,type:1,gammaSpace:!1}):V.sphericalPolynomial=void 0}}L.StoreLODInAlphaChannel=!1}}]);