"use strict";(self["9jl1vn4ei5r"]=self["9jl1vn4ei5r"]||[]).push([[28,29],{13437:(M,p,b)=>{var Q=b(11729),q=b(11637),B=b(11671),k=b(11764),u=b(11700),T=b(11742);u.c.prototype._partialLoadFile=function(M,p,b,Q){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(M,(M=>{b[p]=M,b._internalCount++,6===b._internalCount&&Q(b)}),void 0,void 0,!0,((M,p)=>{q&&M&&q(M.status+" "+M.statusText,p)}))},u.c.prototype._cascadeLoadFiles=function(M,p,b){let Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const q=[];q._internalCount=0;for(let B=0;B<6;B++)this._partialLoadFile(b[B],B,q,p,Q)},u.c.prototype._cascadeLoadImgs=function(M,p,b,Q){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,B=arguments.length>5?arguments[5]:void 0;const k=[];k._internalCount=0;for(let u=0;u<6;u++)this._partialLoadImg(Q[u],u,k,M,p,b,q,B)},u.c.prototype._partialLoadImg=function(M,p,b,Q,q,u){let T=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,O=arguments.length>7?arguments[7]:void 0;const H=(0,k.c)();(0,B.p)(M,(M=>{b[p]=M,b._internalCount++,Q&&Q.removePendingData(H),6===b._internalCount&&u&&u(q,b)}),((M,p)=>{Q&&Q.removePendingData(H),T&&T(M,p)}),Q?Q.offlineProvider:null,O),Q&&Q.addPendingData(H)},u.c.prototype.createCubeTextureBase=function(M,p,b,B){let k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,O=arguments.length>6?arguments[6]:void 0,H=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,F=arguments.length>8&&void 0!==arguments[8]&&arguments[8],o=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,W=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,i=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,A=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,j=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,K=arguments.length>14&&void 0!==arguments[14]&&arguments[14],D=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const a=i||new Q.b(this,7);a.isCube=!0,a.url=M,a.generateMipMaps=!B,a._lodGenerationScale=o,a._lodGenerationOffset=W,a._useSRGBBuffer=!!K&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!B),a!==i&&(a.label=M.substring(0,60)),this._doNotHandleContextLost||(a._extension=H,a._files=b,a._buffer=D);const s=M;this._transformTextureUrl&&!i&&(M=this._transformTextureUrl(M));const S=H??function(M){const p=M.split("?")[0],b=p.lastIndexOf(".");return b>-1?p.substring(b).toLowerCase():""}(M),f=(0,T.d)(S),R=(M,p)=>{a.dispose(),u?u(M,p):M&&q.c.Warn(M)},y=(Q,u)=>{M===s?Q&&R(Q.status+" "+Q.statusText,u):(q.c.Warn(`Failed to load ${M}, falling back to the ${s}`),this.createCubeTextureBase(s,p,b,!!B,k,R,O,H,F,o,W,a,A,j,K,D))};if(f)f.then((Q=>{const q=M=>{A&&A(a,M),Q.loadCubeData(M,a,F,k,((M,p)=>{R(M,p)}))};D?q(D):b&&6===b.length?Q.supportCascades?this._cascadeLoadFiles(p,(M=>q(M.map((M=>new Uint8Array(M))))),b,R):R("Textures type does not support cascades."):this._loadFile(M,(M=>q(new Uint8Array(M))),void 0,void 0,!0,y)}));else{if(!b||0===b.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(p,a,((M,p)=>{j&&j(M,p)}),b,R)}return this._internalTexturesCache.push(a),a}},14149:(M,p,b)=>{b.r(p),b.d(p,{_DDSTextureLoader:()=>B});var Q=b(11976),q=b(14158);class B{constructor(){this.supportCascades=!0}loadCubeData(M,p,b,B){const k=p.getEngine();let u,T=!1,O=1e3;if(Array.isArray(M))for(let Q=0;Q<M.length;Q++){const b=M[Q];u=q.DDSTools.GetDDSInfo(b),p.width=u.width,p.height=u.height,T=(u.isRGB||u.isLuminance||u.mipmapCount>1)&&p.generateMipMaps,k._unpackFlipY(u.isCompressed),q.DDSTools.UploadDDSLevels(k,p,b,u,T,6,-1,Q),u.isFourCC||1!==u.mipmapCount?O=u.mipmapCount-1:k.generateMipMapsForCubemap(p)}else{const B=M;u=q.DDSTools.GetDDSInfo(B),p.width=u.width,p.height=u.height,b&&(u.sphericalPolynomial=new Q.f),T=(u.isRGB||u.isLuminance||u.mipmapCount>1)&&p.generateMipMaps,k._unpackFlipY(u.isCompressed),q.DDSTools.UploadDDSLevels(k,p,B,u,T,6),u.isFourCC||1!==u.mipmapCount?O=u.mipmapCount-1:k.generateMipMapsForCubemap(p,!1)}k._setCubeMapTextureParams(p,T,O),p.isReady=!0,p.onLoadedObservable.notifyObservers(p),p.onLoadedObservable.clear(),B&&B({isDDS:!0,width:p.width,info:u,data:M,texture:p})}loadData(M,p,b){const Q=q.DDSTools.GetDDSInfo(M),B=(Q.isRGB||Q.isLuminance||Q.mipmapCount>1)&&p.generateMipMaps&&Math.max(Q.width,Q.height)>>Q.mipmapCount-1===1;b(Q.width,Q.height,B,Q.isFourCC,(()=>{q.DDSTools.UploadDDSLevels(p.getEngine(),p,M,Q,B,1)}))}}},12335:(M,p,b)=>{b.d(p,{c:()=>O});var Q=b(11796),q=b(11806),B=b(11976),k=b(11798),u=b(11833);class T{constructor(M,p,b,Q){this.name=M,this.worldAxisForNormal=p,this.worldAxisForFileX=b,this.worldAxisForFileY=Q}}class O{static ConvertCubeMapTextureToSphericalPolynomial(M){var p;if(!M.isCube)return null;null===(p=M.RM())||void 0===p||p.getEngine().flushFramebuffer();const b=M.getSize().width,Q=M.readPixels(0,void 0,void 0,!1),q=M.readPixels(1,void 0,void 0,!1);let B,k;M.isRenderTarget?(B=M.readPixels(3,void 0,void 0,!1),k=M.readPixels(2,void 0,void 0,!1)):(B=M.readPixels(2,void 0,void 0,!1),k=M.readPixels(3,void 0,void 0,!1));const u=M.readPixels(4,void 0,void 0,!1),T=M.readPixels(5,void 0,void 0,!1),O=M.gammaSpace;let H=0;return 1!=M.textureType&&2!=M.textureType||(H=1),new Promise((M=>{Promise.all([q,Q,B,k,u,T]).then((p=>{let[Q,q,B,k,u,T]=p;const F={size:b,right:q,left:Q,up:B,down:k,front:u,back:T,format:5,type:H,gammaSpace:O};M(this.ConvertCubeMapToSphericalPolynomial(F))}))}))}static _AreaElement(M,p){return Math.atan2(M*p,Math.sqrt(M*M+p*p+1))}static ConvertCubeMapToSphericalPolynomial(M){const p=new B.e;let b=0;const Q=2/M.size,T=Q,O=.5*Q,H=O-1;for(let B=0;B<6;B++){const F=this._FileFaces[B],o=M[F.name];let W=H;const i=5===M.format?4:3;for(let B=0;B<M.size;B++){let A=H;for(let T=0;T<M.size;T++){const H=F.worldAxisForFileX.scale(A).add(F.worldAxisForFileY.scale(W)).add(F.worldAxisForNormal);H.normalize();const j=this._AreaElement(A-O,W-O)-this._AreaElement(A-O,W+O)-this._AreaElement(A+O,W-O)+this._AreaElement(A+O,W+O);let K=o[B*M.size*i+T*i+0],D=o[B*M.size*i+T*i+1],a=o[B*M.size*i+T*i+2];isNaN(K)&&(K=0),isNaN(D)&&(D=0),isNaN(a)&&(a=0),0===M.type&&(K/=255,D/=255,a/=255),M.gammaSpace&&(K=Math.pow((0,q.Clamp)(K),k.l),D=Math.pow((0,q.Clamp)(D),k.l),a=Math.pow((0,q.Clamp)(a),k.l));const s=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const M=Math.max(K,D,a);if(M>s){const p=s/M;K*=p,D*=p,a*=p}}else K=(0,q.Clamp)(K,0,s),D=(0,q.Clamp)(D,0,s),a=(0,q.Clamp)(a,0,s);const S=new u.ap(K,D,a);p.addLight(H,S,j),b+=j,A+=Q}W+=T}}const F=6*(4*Math.PI)/6/b;return p.scaleInPlace(F),p.convertIncidentRadianceToIrradiance(),p.convertIrradianceToLambertianRadiance(),B.f.FromHarmonics(p)}}O._FileFaces=[new T("right",new Q.Ap(1,0,0),new Q.Ap(0,0,-1),new Q.Ap(0,-1,0)),new T("left",new Q.Ap(-1,0,0),new Q.Ap(0,0,1),new Q.Ap(0,-1,0)),new T("up",new Q.Ap(0,1,0),new Q.Ap(1,0,0),new Q.Ap(0,0,1)),new T("down",new Q.Ap(0,-1,0),new Q.Ap(1,0,0),new Q.Ap(0,0,-1)),new T("front",new Q.Ap(0,0,1),new Q.Ap(1,0,0),new Q.Ap(0,-1,0)),new T("back",new Q.Ap(0,0,-1),new Q.Ap(-1,0,0),new Q.Ap(0,-1,0))],O.MAX_HDRI_VALUE=4096,O.PRESERVE_CLAMPED_COLORS=!1},14158:(M,p,b)=>{b.d(p,{DDSTools:()=>i});var Q=b(11806),q=b(11637),B=b(12335),k=b(12022);b(13437);const u=131072,T=131072;function O(M){return M.charCodeAt(0)+(M.charCodeAt(1)<<8)+(M.charCodeAt(2)<<16)+(M.charCodeAt(3)<<24)}const H=O("DXT1"),F=O("DXT3"),o=O("DXT5"),W=O("DX10");class i{static GetDDSInfo(M){const p=new Int32Array(M.buffer,M.byteOffset,31),b=new Int32Array(M.buffer,M.byteOffset,35);let Q=1;p[2]&u&&(Q=Math.max(1,p[7]));const q=p[21],B=q===W?b[32]:0;let k=0;switch(q){case 113:k=2;break;case 116:k=1;break;case W:if(10===B){k=2;break}if(2===B){k=1;break}}return{width:p[4],height:p[3],mipmapCount:Q,isFourCC:4===(4&p[20]),isRGB:64===(64&p[20]),isLuminance:(p[20]&T)===T,isCube:512===(512&p[28]),isCompressed:q===H||q===F||q===o,dxgiFormat:B,textureType:k}}static _GetHalfFloatAsFloatRGBAArrayBuffer(M,p,b,Q,q,B){const u=new Float32Array(Q),T=new Uint16Array(q,b);let O=0;for(let H=0;H<p;H++)for(let p=0;p<M;p++){const b=4*(p+H*M);u[O]=(0,k.i)(T[b]),u[O+1]=(0,k.i)(T[b+1]),u[O+2]=(0,k.i)(T[b+2]),i.StoreLODInAlphaChannel?u[O+3]=B:u[O+3]=(0,k.i)(T[b+3]),O+=4}return u}static _GetHalfFloatRGBAArrayBuffer(M,p,b,Q,q,B){if(i.StoreLODInAlphaChannel){const u=new Uint16Array(Q),T=new Uint16Array(q,b);let O=0;for(let b=0;b<p;b++)for(let p=0;p<M;p++){const Q=4*(p+b*M);u[O]=T[Q],u[O+1]=T[Q+1],u[O+2]=T[Q+2],u[O+3]=(0,k.l)(B),O+=4}return u}return new Uint16Array(q,b,Q)}static _GetFloatRGBAArrayBuffer(M,p,b,Q,q,B){if(i.StoreLODInAlphaChannel){const k=new Float32Array(Q),u=new Float32Array(q,b);let T=0;for(let b=0;b<p;b++)for(let p=0;p<M;p++){const Q=4*(p+b*M);k[T]=u[Q],k[T+1]=u[Q+1],k[T+2]=u[Q+2],k[T+3]=B,T+=4}return k}return new Float32Array(q,b,Q)}static _GetFloatAsHalfFloatRGBAArrayBuffer(M,p,b,Q,q,B){const u=new Uint16Array(Q),T=new Float32Array(q,b);let O=0;for(let H=0;H<p;H++)for(let p=0;p<M;p++)u[O]=(0,k.l)(T[O]),u[O+1]=(0,k.l)(T[O+1]),u[O+2]=(0,k.l)(T[O+2]),i.StoreLODInAlphaChannel?u[O+3]=(0,k.l)(B):u[O+3]=(0,k.l)(T[O+3]),O+=4;return u}static _GetFloatAsUIntRGBAArrayBuffer(M,p,b,q,B,k){const u=new Uint8Array(q),T=new Float32Array(B,b);let O=0;for(let H=0;H<p;H++)for(let p=0;p<M;p++){const b=4*(p+H*M);u[O]=255*(0,Q.Clamp)(T[b]),u[O+1]=255*(0,Q.Clamp)(T[b+1]),u[O+2]=255*(0,Q.Clamp)(T[b+2]),i.StoreLODInAlphaChannel?u[O+3]=k:u[O+3]=255*(0,Q.Clamp)(T[b+3]),O+=4}return u}static _GetHalfFloatAsUIntRGBAArrayBuffer(M,p,b,q,B,u){const T=new Uint8Array(q),O=new Uint16Array(B,b);let H=0;for(let F=0;F<p;F++)for(let p=0;p<M;p++){const b=4*(p+F*M);T[H]=255*(0,Q.Clamp)((0,k.i)(O[b])),T[H+1]=255*(0,Q.Clamp)((0,k.i)(O[b+1])),T[H+2]=255*(0,Q.Clamp)((0,k.i)(O[b+2])),i.StoreLODInAlphaChannel?T[H+3]=u:T[H+3]=255*(0,Q.Clamp)((0,k.i)(O[b+3])),H+=4}return T}static _GetRGBAArrayBuffer(M,p,b,Q,q,B,k,u,T){const O=new Uint8Array(Q),H=new Uint8Array(q,b);let F=0;for(let o=0;o<p;o++)for(let p=0;p<M;p++){const b=4*(p+o*M);O[F]=H[b+B],O[F+1]=H[b+k],O[F+2]=H[b+u],O[F+3]=H[b+T],F+=4}return O}static _ExtractLongWordOrder(M){return 0===M||255===M||-16777216===M?0:1+i._ExtractLongWordOrder(M>>8)}static _GetRGBArrayBuffer(M,p,b,Q,q,B,k,u){const T=new Uint8Array(Q),O=new Uint8Array(q,b);let H=0;for(let F=0;F<p;F++)for(let p=0;p<M;p++){const b=3*(p+F*M);T[H]=O[b+B],T[H+1]=O[b+k],T[H+2]=O[b+u],H+=3}return T}static _GetLuminanceArrayBuffer(M,p,b,Q,q){const B=new Uint8Array(Q),k=new Uint8Array(q,b);let u=0;for(let T=0;T<p;T++)for(let p=0;p<M;p++){const b=p+T*M;B[u]=k[b],u++}return B}static UploadDDSLevels(M,p,b,Q,k,T){let O=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,A=arguments.length>7?arguments[7]:void 0,j=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],K=null;Q.sphericalPolynomial&&(K=[]);const D=!!M.getCaps().s3tc;p.generateMipMaps=k;const a=new Int32Array(b.buffer,b.byteOffset,31);let s,S,f,R,y,x,P,L=0,N=0,r=1;if(542327876!==a[0])return void q.c.Error("Invalid magic number in DDS header");if(!Q.isFourCC&&!Q.isRGB&&!Q.isLuminance)return void q.c.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(Q.isCompressed&&!D)return void q.c.Error("Compressed textures are not supported on this platform.");let Y=a[22];R=a[1]+4;let w=!1;if(Q.isFourCC)switch(s=a[21],s){case H:r=8,N=33777;break;case F:r=16,N=33778;break;case o:r=16,N=33779;break;case 113:w=!0,Y=64;break;case 116:w=!0,Y=128;break;case W:{R+=20;let M=!1;switch(Q.dxgiFormat){case 10:w=!0,Y=64,M=!0;break;case 2:w=!0,Y=128,M=!0;break;case 88:Q.isRGB=!0,Q.isFourCC=!1,Y=32,M=!0}if(M)break}default:return void q.c.Error(["Unsupported FourCC code:",(E=s,String.fromCharCode(255&E,E>>8&255,E>>16&255,E>>24&255))])}var E;const n=i._ExtractLongWordOrder(a[23]),g=i._ExtractLongWordOrder(a[24]),U=i._ExtractLongWordOrder(a[25]),c=i._ExtractLongWordOrder(a[26]);w&&(N=M._getRGBABufferInternalSizedFormat(Q.textureType)),x=1,a[2]&u&&!1!==k&&(x=Math.max(1,a[7]));const d=A||0,V=M.getCaps();for(let q=d;q<T;q++){for(S=a[4],f=a[3],P=0;P<x;++P){if(-1===O||O===P){const B=-1===O?P:0;if(!Q.isCompressed&&Q.isFourCC){p.format=5,L=S*f*4;let Q=null;if(M._badOS||M._badDesktopOS||!V.textureHalfFloat&&!V.textureFloat)128===Y?(Q=i._GetFloatAsUIntRGBAArrayBuffer(S,f,b.byteOffset+R,L,b.buffer,B),K&&0==B&&K.push(i._GetFloatRGBAArrayBuffer(S,f,b.byteOffset+R,L,b.buffer,B))):64===Y&&(Q=i._GetHalfFloatAsUIntRGBAArrayBuffer(S,f,b.byteOffset+R,L,b.buffer,B),K&&0==B&&K.push(i._GetHalfFloatAsFloatRGBAArrayBuffer(S,f,b.byteOffset+R,L,b.buffer,B))),p.type=0;else{const M=V.textureFloat&&(j&&V.textureFloatLinearFiltering||!j),q=V.textureHalfFloat&&(j&&V.textureHalfFloatLinearFiltering||!j),k=(128===Y||64===Y&&!q)&&M?1:(64===Y||128===Y&&!M)&&q?2:0;let u,T=null;if(128===Y)switch(k){case 1:u=i._GetFloatRGBAArrayBuffer,T=null;break;case 2:u=i._GetFloatAsHalfFloatRGBAArrayBuffer,T=i._GetFloatRGBAArrayBuffer;break;case 0:u=i._GetFloatAsUIntRGBAArrayBuffer,T=i._GetFloatRGBAArrayBuffer}else switch(k){case 1:u=i._GetHalfFloatAsFloatRGBAArrayBuffer,T=null;break;case 2:u=i._GetHalfFloatRGBAArrayBuffer,T=i._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:u=i._GetHalfFloatAsUIntRGBAArrayBuffer,T=i._GetHalfFloatAsFloatRGBAArrayBuffer}p.type=k,Q=u(S,f,b.byteOffset+R,L,b.buffer,B),K&&0==B&&K.push(T?T(S,f,b.byteOffset+R,L,b.buffer,B):Q)}Q&&M._uploadDataToTextureDirectly(p,Q,q,B)}else if(Q.isRGB)p.type=0,24===Y?(p.format=4,L=S*f*3,y=i._GetRGBArrayBuffer(S,f,b.byteOffset+R,L,b.buffer,n,g,U),M._uploadDataToTextureDirectly(p,y,q,B)):(p.format=5,L=S*f*4,y=i._GetRGBAArrayBuffer(S,f,b.byteOffset+R,L,b.buffer,n,g,U,c),M._uploadDataToTextureDirectly(p,y,q,B));else if(Q.isLuminance){const Q=M._getUnpackAlignement(),k=S;L=Math.floor((S+Q-1)/Q)*Q*(f-1)+k,y=i._GetLuminanceArrayBuffer(S,f,b.byteOffset+R,L,b.buffer),p.format=1,p.type=0,M._uploadDataToTextureDirectly(p,y,q,B)}else L=Math.max(4,S)/4*Math.max(4,f)/4*r,y=new Uint8Array(b.buffer,b.byteOffset+R,L),p.type=0,M._uploadCompressedDataToTextureDirectly(p,N,S,f,y,q,B)}R+=Y?S*f*(Y/8):L,S*=.5,f*=.5,S=Math.max(1,S),f=Math.max(1,f)}if(void 0!==A)break}K&&K.length>0?Q.sphericalPolynomial=B.c.ConvertCubeMapToSphericalPolynomial({size:a[4],right:K[0],left:K[1],up:K[2],down:K[3],front:K[4],back:K[5],format:5,type:1,gammaSpace:!1}):Q.sphericalPolynomial=void 0}}i.StoreLODInAlphaChannel=!1}}]);