"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[28,29],{12762:(h,V,i)=>{var S=i(11064),l=i(10967),Y=i(10993),g=i(11100),q=i(11028),B=i(11077);q.b.prototype._partialLoadFile=function(h,V,i,S){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(h,(h=>{i[V]=h,i._internalCount++,6===i._internalCount&&S(i)}),void 0,void 0,!0,((h,V)=>{l&&h&&l(h.status+" "+h.statusText,V)}))},q.b.prototype._cascadeLoadFiles=function(h,V,i){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const l=[];l._internalCount=0;for(let Y=0;Y<6;Y++)this._partialLoadFile(i[Y],Y,l,V,S)},q.b.prototype._cascadeLoadImgs=function(h,V,i,S){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,Y=arguments.length>5?arguments[5]:void 0;const g=[];g._internalCount=0;for(let q=0;q<6;q++)this._partialLoadImg(S[q],q,g,h,V,i,l,Y)},q.b.prototype._partialLoadImg=function(h,V,i,S,l,q){let B=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,J=arguments.length>7?arguments[7]:void 0;const I=(0,g.e)();(0,Y.s)(h,(h=>{i[V]=h,i._internalCount++,S&&S.removePendingData(I),6===i._internalCount&&q&&q(l,i)}),((h,V)=>{S&&S.removePendingData(I),B&&B(h,V)}),S?S.offlineProvider:null,J),S&&S.addPendingData(I)},q.b.prototype.createCubeTextureBase=function(h,V,i,Y){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,q=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,J=arguments.length>6?arguments[6]:void 0,I=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,v=arguments.length>8&&void 0!==arguments[8]&&arguments[8],s=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,t=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,T=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,e=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,n=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,c=arguments.length>14&&void 0!==arguments[14]&&arguments[14],f=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const P=T||new S.c(this,7);P.isCube=!0,P.url=h,P.generateMipMaps=!Y,P._lodGenerationScale=s,P._lodGenerationOffset=t,P._useSRGBBuffer=!!c&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!Y),P!==T&&(P.label=h.substring(0,60)),this._doNotHandleContextLost||(P._extension=I,P._files=i,P._buffer=f);const L=h;this._transformTextureUrl&&!T&&(h=this._transformTextureUrl(h));const U=I??function(h){const V=h.split("?")[0],i=V.lastIndexOf(".");return i>-1?V.substring(i).toLowerCase():""}(h),X=(0,B.b)(U),D=(h,V)=>{P.dispose(),q?q(h,V):h&&l.d.Warn(h)},O=(S,q)=>{h===L?S&&D(S.status+" "+S.statusText,q):(l.d.Warn(`Failed to load ${h}, falling back to the ${L}`),this.createCubeTextureBase(L,V,i,!!Y,g,D,J,I,v,s,t,P,e,n,c,f))};if(X)X.then((S=>{const l=h=>{e&&e(P,h),S.loadCubeData(h,P,v,g,((h,V)=>{D(h,V)}))};f?l(f):i&&6===i.length?S.supportCascades?this._cascadeLoadFiles(V,(h=>l(h.map((h=>new Uint8Array(h))))),i,D):D("Textures type does not support cascades."):this._loadFile(h,(h=>l(new Uint8Array(h))),void 0,void 0,!0,O)}));else{if(!i||0===i.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(V,P,((h,V)=>{n&&n(h,V)}),i,D)}return this._internalTexturesCache.push(P),P}},13535:(h,V,i)=>{i.r(V),i.d(V,{_DDSTextureLoader:()=>Y});var S=i(11335),l=i(13537);class Y{constructor(){this.supportCascades=!0}loadCubeData(h,V,i,Y){const g=V.getEngine();let q,B=!1,J=1e3;if(Array.isArray(h))for(let S=0;S<h.length;S++){const i=h[S];q=l.DDSTools.GetDDSInfo(i),V.width=q.width,V.height=q.height,B=(q.isRGB||q.isLuminance||q.mipmapCount>1)&&V.generateMipMaps,g._unpackFlipY(q.isCompressed),l.DDSTools.UploadDDSLevels(g,V,i,q,B,6,-1,S),q.isFourCC||1!==q.mipmapCount?J=q.mipmapCount-1:g.generateMipMapsForCubemap(V)}else{const Y=h;q=l.DDSTools.GetDDSInfo(Y),V.width=q.width,V.height=q.height,i&&(q.sphericalPolynomial=new S.e),B=(q.isRGB||q.isLuminance||q.mipmapCount>1)&&V.generateMipMaps,g._unpackFlipY(q.isCompressed),l.DDSTools.UploadDDSLevels(g,V,Y,q,B,6),q.isFourCC||1!==q.mipmapCount?J=q.mipmapCount-1:g.generateMipMapsForCubemap(V,!1)}g._setCubeMapTextureParams(V,B,J),V.isReady=!0,V.onLoadedObservable.notifyObservers(V),V.onLoadedObservable.clear(),Y&&Y({isDDS:!0,width:V.width,info:q,data:h,texture:V})}loadData(h,V,i){const S=l.DDSTools.GetDDSInfo(h),Y=(S.isRGB||S.isLuminance||S.mipmapCount>1)&&V.generateMipMaps&&Math.max(S.width,S.height)>>S.mipmapCount-1===1;i(S.width,S.height,Y,S.isFourCC,(()=>{l.DDSTools.UploadDDSLevels(V.getEngine(),V,h,S,Y,1)}))}}},11659:(h,V,i)=>{i.d(V,{e:()=>J});var S=i(11138),l=i(11162),Y=i(11335),g=i(11147),q=i(11189);class B{constructor(h,V,i,S){this.name=h,this.worldAxisForNormal=V,this.worldAxisForFileX=i,this.worldAxisForFileY=S}}class J{static ConvertCubeMapTextureToSphericalPolynomial(h){var V;if(!h.isCube)return null;null===(V=h.Mh())||void 0===V||V.getEngine().flushFramebuffer();const i=h.getSize().width,S=h.readPixels(0,void 0,void 0,!1),l=h.readPixels(1,void 0,void 0,!1);let Y,g;h.isRenderTarget?(Y=h.readPixels(3,void 0,void 0,!1),g=h.readPixels(2,void 0,void 0,!1)):(Y=h.readPixels(2,void 0,void 0,!1),g=h.readPixels(3,void 0,void 0,!1));const q=h.readPixels(4,void 0,void 0,!1),B=h.readPixels(5,void 0,void 0,!1),J=h.gammaSpace;let I=0;return 1!=h.textureType&&2!=h.textureType||(I=1),new Promise((h=>{Promise.all([l,S,Y,g,q,B]).then((V=>{let[S,l,Y,g,q,B]=V;const v={size:i,right:l,left:S,up:Y,down:g,front:q,back:B,format:5,type:I,gammaSpace:J};h(this.ConvertCubeMapToSphericalPolynomial(v))}))}))}static _AreaElement(h,V){return Math.atan2(h*V,Math.sqrt(h*h+V*V+1))}static ConvertCubeMapToSphericalPolynomial(h){const V=new Y.b;let i=0;const S=2/h.size,B=S,J=.5*S,I=J-1;for(let Y=0;Y<6;Y++){const v=this._FileFaces[Y],s=h[v.name];let t=I;const T=5===h.format?4:3;for(let Y=0;Y<h.size;Y++){let e=I;for(let B=0;B<h.size;B++){const I=v.worldAxisForFileX.scale(e).add(v.worldAxisForFileY.scale(t)).add(v.worldAxisForNormal);I.normalize();const n=this._AreaElement(e-J,t-J)-this._AreaElement(e-J,t+J)-this._AreaElement(e+J,t-J)+this._AreaElement(e+J,t+J);let c=s[Y*h.size*T+B*T+0],f=s[Y*h.size*T+B*T+1],P=s[Y*h.size*T+B*T+2];isNaN(c)&&(c=0),isNaN(f)&&(f=0),isNaN(P)&&(P=0),0===h.type&&(c/=255,f/=255,P/=255),h.gammaSpace&&(c=Math.pow((0,l.Clamp)(c),g.j),f=Math.pow((0,l.Clamp)(f),g.j),P=Math.pow((0,l.Clamp)(P),g.j));const L=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const h=Math.max(c,f,P);if(h>L){const V=L/h;c*=V,f*=V,P*=V}}else c=(0,l.Clamp)(c,0,L),f=(0,l.Clamp)(f,0,L),P=(0,l.Clamp)(P,0,L);const U=new q.LV(c,f,P);V.addLight(I,U,n),i+=n,e+=S}t+=B}}const v=6*(4*Math.PI)/6/i;return V.scaleInPlace(v),V.convertIncidentRadianceToIrradiance(),V.convertIrradianceToLambertianRadiance(),Y.e.FromHarmonics(V)}}J._FileFaces=[new B("right",new S.nV(1,0,0),new S.nV(0,0,-1),new S.nV(0,-1,0)),new B("left",new S.nV(-1,0,0),new S.nV(0,0,1),new S.nV(0,-1,0)),new B("up",new S.nV(0,1,0),new S.nV(1,0,0),new S.nV(0,0,1)),new B("down",new S.nV(0,-1,0),new S.nV(1,0,0),new S.nV(0,0,-1)),new B("front",new S.nV(0,0,1),new S.nV(1,0,0),new S.nV(0,-1,0)),new B("back",new S.nV(0,0,-1),new S.nV(-1,0,0),new S.nV(0,-1,0))],J.MAX_HDRI_VALUE=4096,J.PRESERVE_CLAMPED_COLORS=!1},13537:(h,V,i)=>{i.d(V,{DDSTools:()=>T});var S=i(11162),l=i(10967),Y=i(11659),g=i(11371);i(12762);const q=131072,B=131072;function J(h){return h.charCodeAt(0)+(h.charCodeAt(1)<<8)+(h.charCodeAt(2)<<16)+(h.charCodeAt(3)<<24)}const I=J("DXT1"),v=J("DXT3"),s=J("DXT5"),t=J("DX10");class T{static GetDDSInfo(h){const V=new Int32Array(h.buffer,h.byteOffset,31),i=new Int32Array(h.buffer,h.byteOffset,35);let S=1;V[2]&q&&(S=Math.max(1,V[7]));const l=V[21],Y=l===t?i[32]:0;let g=0;switch(l){case 113:g=2;break;case 116:g=1;break;case t:if(10===Y){g=2;break}if(2===Y){g=1;break}}return{width:V[4],height:V[3],mipmapCount:S,isFourCC:4===(4&V[20]),isRGB:64===(64&V[20]),isLuminance:(V[20]&B)===B,isCube:512===(512&V[28]),isCompressed:l===I||l===v||l===s,dxgiFormat:Y,textureType:g}}static _GetHalfFloatAsFloatRGBAArrayBuffer(h,V,i,S,l,Y){const q=new Float32Array(S),B=new Uint16Array(l,i);let J=0;for(let I=0;I<V;I++)for(let V=0;V<h;V++){const i=4*(V+I*h);q[J]=(0,g.g)(B[i]),q[J+1]=(0,g.g)(B[i+1]),q[J+2]=(0,g.g)(B[i+2]),T.StoreLODInAlphaChannel?q[J+3]=Y:q[J+3]=(0,g.g)(B[i+3]),J+=4}return q}static _GetHalfFloatRGBAArrayBuffer(h,V,i,S,l,Y){if(T.StoreLODInAlphaChannel){const q=new Uint16Array(S),B=new Uint16Array(l,i);let J=0;for(let i=0;i<V;i++)for(let V=0;V<h;V++){const S=4*(V+i*h);q[J]=B[S],q[J+1]=B[S+1],q[J+2]=B[S+2],q[J+3]=(0,g.l)(Y),J+=4}return q}return new Uint16Array(l,i,S)}static _GetFloatRGBAArrayBuffer(h,V,i,S,l,Y){if(T.StoreLODInAlphaChannel){const g=new Float32Array(S),q=new Float32Array(l,i);let B=0;for(let i=0;i<V;i++)for(let V=0;V<h;V++){const S=4*(V+i*h);g[B]=q[S],g[B+1]=q[S+1],g[B+2]=q[S+2],g[B+3]=Y,B+=4}return g}return new Float32Array(l,i,S)}static _GetFloatAsHalfFloatRGBAArrayBuffer(h,V,i,S,l,Y){const q=new Uint16Array(S),B=new Float32Array(l,i);let J=0;for(let I=0;I<V;I++)for(let V=0;V<h;V++)q[J]=(0,g.l)(B[J]),q[J+1]=(0,g.l)(B[J+1]),q[J+2]=(0,g.l)(B[J+2]),T.StoreLODInAlphaChannel?q[J+3]=(0,g.l)(Y):q[J+3]=(0,g.l)(B[J+3]),J+=4;return q}static _GetFloatAsUIntRGBAArrayBuffer(h,V,i,l,Y,g){const q=new Uint8Array(l),B=new Float32Array(Y,i);let J=0;for(let I=0;I<V;I++)for(let V=0;V<h;V++){const i=4*(V+I*h);q[J]=255*(0,S.Clamp)(B[i]),q[J+1]=255*(0,S.Clamp)(B[i+1]),q[J+2]=255*(0,S.Clamp)(B[i+2]),T.StoreLODInAlphaChannel?q[J+3]=g:q[J+3]=255*(0,S.Clamp)(B[i+3]),J+=4}return q}static _GetHalfFloatAsUIntRGBAArrayBuffer(h,V,i,l,Y,q){const B=new Uint8Array(l),J=new Uint16Array(Y,i);let I=0;for(let v=0;v<V;v++)for(let V=0;V<h;V++){const i=4*(V+v*h);B[I]=255*(0,S.Clamp)((0,g.g)(J[i])),B[I+1]=255*(0,S.Clamp)((0,g.g)(J[i+1])),B[I+2]=255*(0,S.Clamp)((0,g.g)(J[i+2])),T.StoreLODInAlphaChannel?B[I+3]=q:B[I+3]=255*(0,S.Clamp)((0,g.g)(J[i+3])),I+=4}return B}static _GetRGBAArrayBuffer(h,V,i,S,l,Y,g,q,B){const J=new Uint8Array(S),I=new Uint8Array(l,i);let v=0;for(let s=0;s<V;s++)for(let V=0;V<h;V++){const i=4*(V+s*h);J[v]=I[i+Y],J[v+1]=I[i+g],J[v+2]=I[i+q],J[v+3]=I[i+B],v+=4}return J}static _ExtractLongWordOrder(h){return 0===h||255===h||-16777216===h?0:1+T._ExtractLongWordOrder(h>>8)}static _GetRGBArrayBuffer(h,V,i,S,l,Y,g,q){const B=new Uint8Array(S),J=new Uint8Array(l,i);let I=0;for(let v=0;v<V;v++)for(let V=0;V<h;V++){const i=3*(V+v*h);B[I]=J[i+Y],B[I+1]=J[i+g],B[I+2]=J[i+q],I+=3}return B}static _GetLuminanceArrayBuffer(h,V,i,S,l){const Y=new Uint8Array(S),g=new Uint8Array(l,i);let q=0;for(let B=0;B<V;B++)for(let V=0;V<h;V++){const i=V+B*h;Y[q]=g[i],q++}return Y}static UploadDDSLevels(h,V,i,S,g,B){let J=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,e=arguments.length>7?arguments[7]:void 0,n=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],c=null;S.sphericalPolynomial&&(c=[]);const f=!!h.getCaps().s3tc;V.generateMipMaps=g;const P=new Int32Array(i.buffer,i.byteOffset,31);let L,U,X,D,O,o,M,F=0,E=0,H=1;if(542327876!==P[0])return void l.d.Error("Invalid magic number in DDS header");if(!S.isFourCC&&!S.isRGB&&!S.isLuminance)return void l.d.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(S.isCompressed&&!f)return void l.d.Error("Compressed textures are not supported on this platform.");let j=P[22];D=P[1]+4;let m=!1;if(S.isFourCC)switch(L=P[21],L){case I:H=8,E=33777;break;case v:H=16,E=33778;break;case s:H=16,E=33779;break;case 113:m=!0,j=64;break;case 116:m=!0,j=128;break;case t:{D+=20;let h=!1;switch(S.dxgiFormat){case 10:m=!0,j=64,h=!0;break;case 2:m=!0,j=128,h=!0;break;case 88:S.isRGB=!0,S.isFourCC=!1,j=32,h=!0}if(h)break}default:return void l.d.Error(["Unsupported FourCC code:",(G=L,String.fromCharCode(255&G,G>>8&255,G>>16&255,G>>24&255))])}var G;const w=T._ExtractLongWordOrder(P[23]),N=T._ExtractLongWordOrder(P[24]),r=T._ExtractLongWordOrder(P[25]),k=T._ExtractLongWordOrder(P[26]);m&&(E=h._getRGBABufferInternalSizedFormat(S.textureType)),o=1,P[2]&q&&!1!==g&&(o=Math.max(1,P[7]));const R=e||0,Z=h.getCaps();for(let l=R;l<B;l++){for(U=P[4],X=P[3],M=0;M<o;++M){if(-1===J||J===M){const Y=-1===J?M:0;if(!S.isCompressed&&S.isFourCC){V.format=5,F=U*X*4;let S=null;if(h._badOS||h._badDesktopOS||!Z.textureHalfFloat&&!Z.textureFloat)128===j?(S=T._GetFloatAsUIntRGBAArrayBuffer(U,X,i.byteOffset+D,F,i.buffer,Y),c&&0==Y&&c.push(T._GetFloatRGBAArrayBuffer(U,X,i.byteOffset+D,F,i.buffer,Y))):64===j&&(S=T._GetHalfFloatAsUIntRGBAArrayBuffer(U,X,i.byteOffset+D,F,i.buffer,Y),c&&0==Y&&c.push(T._GetHalfFloatAsFloatRGBAArrayBuffer(U,X,i.byteOffset+D,F,i.buffer,Y))),V.type=0;else{const h=Z.textureFloat&&(n&&Z.textureFloatLinearFiltering||!n),l=Z.textureHalfFloat&&(n&&Z.textureHalfFloatLinearFiltering||!n),g=(128===j||64===j&&!l)&&h?1:(64===j||128===j&&!h)&&l?2:0;let q,B=null;if(128===j)switch(g){case 1:q=T._GetFloatRGBAArrayBuffer,B=null;break;case 2:q=T._GetFloatAsHalfFloatRGBAArrayBuffer,B=T._GetFloatRGBAArrayBuffer;break;case 0:q=T._GetFloatAsUIntRGBAArrayBuffer,B=T._GetFloatRGBAArrayBuffer}else switch(g){case 1:q=T._GetHalfFloatAsFloatRGBAArrayBuffer,B=null;break;case 2:q=T._GetHalfFloatRGBAArrayBuffer,B=T._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:q=T._GetHalfFloatAsUIntRGBAArrayBuffer,B=T._GetHalfFloatAsFloatRGBAArrayBuffer}V.type=g,S=q(U,X,i.byteOffset+D,F,i.buffer,Y),c&&0==Y&&c.push(B?B(U,X,i.byteOffset+D,F,i.buffer,Y):S)}S&&h._uploadDataToTextureDirectly(V,S,l,Y)}else if(S.isRGB)V.type=0,24===j?(V.format=4,F=U*X*3,O=T._GetRGBArrayBuffer(U,X,i.byteOffset+D,F,i.buffer,w,N,r),h._uploadDataToTextureDirectly(V,O,l,Y)):(V.format=5,F=U*X*4,O=T._GetRGBAArrayBuffer(U,X,i.byteOffset+D,F,i.buffer,w,N,r,k),h._uploadDataToTextureDirectly(V,O,l,Y));else if(S.isLuminance){const S=h._getUnpackAlignement(),g=U;F=Math.floor((U+S-1)/S)*S*(X-1)+g,O=T._GetLuminanceArrayBuffer(U,X,i.byteOffset+D,F,i.buffer),V.format=1,V.type=0,h._uploadDataToTextureDirectly(V,O,l,Y)}else F=Math.max(4,U)/4*Math.max(4,X)/4*H,O=new Uint8Array(i.buffer,i.byteOffset+D,F),V.type=0,h._uploadCompressedDataToTextureDirectly(V,E,U,X,O,l,Y)}D+=j?U*X*(j/8):F,U*=.5,X*=.5,U=Math.max(1,U),X=Math.max(1,X)}if(void 0!==e)break}c&&c.length>0?S.sphericalPolynomial=Y.e.ConvertCubeMapToSphericalPolynomial({size:P[4],right:c[0],left:c[1],up:c[2],down:c[3],front:c[4],back:c[5],format:5,type:1,gammaSpace:!1}):S.sphericalPolynomial=void 0}}T.StoreLODInAlphaChannel=!1}}]);