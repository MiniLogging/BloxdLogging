"use strict";(self.qbp2s7qydk=self.qbp2s7qydk||[]).push([[28,29],{14203:(M,A,O)=>{var S=O(12888),z=O(12783),Q=O(12813),X=O(12927),c=O(12852),j=O(12905);c.e.prototype._partialLoadFile=function(M,A,O,S){let z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(M,(M=>{O[A]=M,O._internalCount++,6===O._internalCount&&S(O)}),void 0,void 0,!0,((M,A)=>{z&&M&&z(M.status+" "+M.statusText,A)}))},c.e.prototype._cascadeLoadFiles=function(M,A,O){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const z=[];z._internalCount=0;for(let Q=0;Q<6;Q++)this._partialLoadFile(O[Q],Q,z,A,S)},c.e.prototype._cascadeLoadImgs=function(M,A,O,S){let z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,Q=arguments.length>5?arguments[5]:void 0;const X=[];X._internalCount=0;for(let c=0;c<6;c++)this._partialLoadImg(S[c],c,X,M,A,O,z,Q)},c.e.prototype._partialLoadImg=function(M,A,O,S,z,c){let j=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,B=arguments.length>7?arguments[7]:void 0;const g=(0,X.b)();(0,Q.s)(M,(M=>{O[A]=M,O._internalCount++,S&&S.removePendingData(g),6===O._internalCount&&c&&c(z,O)}),((M,A)=>{S&&S.removePendingData(g),j&&j(M,A)}),S?S.offlineProvider:null,B),S&&S.addPendingData(g)},c.e.prototype.createCubeTextureBase=function(M,A,O,Q){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,B=arguments.length>6?arguments[6]:void 0,g=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,e=arguments.length>8&&void 0!==arguments[8]&&arguments[8],T=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,J=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,K=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,G=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,d=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,w=arguments.length>14&&void 0!==arguments[14]&&arguments[14],I=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const b=K||new S.b(this,7);b.isCube=!0,b.url=M,b.generateMipMaps=!Q,b._lodGenerationScale=T,b._lodGenerationOffset=J,b._useSRGBBuffer=!!w&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!Q),b!==K&&(b.label=M.substring(0,60)),this._doNotHandleContextLost||(b._extension=g,b._files=O,b._buffer=I);const s=M;this._transformTextureUrl&&!K&&(M=this._transformTextureUrl(M));const Y=null!==g&&void 0!==g?g:function(M){const A=M.split("?")[0],O=A.lastIndexOf(".");return O>-1?A.substring(O).toLowerCase():""}(M),E=(0,j.e)(Y),H=(M,A)=>{b.dispose(),c?c(M,A):M&&z.c.Warn(M)},C=(S,c)=>{M===s?S&&H(S.status+" "+S.statusText,c):(z.c.Warn("Failed to load ".concat(M,", falling back to the ").concat(s)),this.createCubeTextureBase(s,A,O,!!Q,X,H,B,g,e,T,J,b,G,d,w,I))};if(E)E.then((S=>{const z=M=>{G&&G(b,M),S.loadCubeData(M,b,e,X,((M,A)=>{H(M,A)}))};I?z(I):O&&6===O.length?S.supportCascades?this._cascadeLoadFiles(A,(M=>z(M.map((M=>new Uint8Array(M))))),O,H):H("Textures type does not support cascades."):this._loadFile(M,(M=>z(new Uint8Array(M))),void 0,void 0,!0,C)}));else{if(!O||0===O.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(A,b,((M,A)=>{d&&d(M,A)}),O,H)}return this._internalTexturesCache.push(b),b}},15068:(M,A,O)=>{O.r(A),O.d(A,{_DDSTextureLoader:()=>Q});var S=O(13177),z=O(15072);class Q{constructor(){this.supportCascades=!0}loadCubeData(M,A,O,Q){const X=A.getEngine();let c,j=!1,B=1e3;if(Array.isArray(M))for(let S=0;S<M.length;S++){const O=M[S];c=z.DDSTools.GetDDSInfo(O),A.width=c.width,A.height=c.height,j=(c.isRGB||c.isLuminance||c.mipmapCount>1)&&A.generateMipMaps,X._unpackFlipY(c.isCompressed),z.DDSTools.UploadDDSLevels(X,A,O,c,j,6,-1,S),c.isFourCC||1!==c.mipmapCount?B=c.mipmapCount-1:X.generateMipMapsForCubemap(A)}else{const Q=M;c=z.DDSTools.GetDDSInfo(Q),A.width=c.width,A.height=c.height,O&&(c.sphericalPolynomial=new S.g),j=(c.isRGB||c.isLuminance||c.mipmapCount>1)&&A.generateMipMaps,X._unpackFlipY(c.isCompressed),z.DDSTools.UploadDDSLevels(X,A,Q,c,j,6),c.isFourCC||1!==c.mipmapCount?B=c.mipmapCount-1:X.generateMipMapsForCubemap(A,!1)}X._setCubeMapTextureParams(A,j,B),A.isReady=!0,A.onLoadedObservable.notifyObservers(A),A.onLoadedObservable.clear(),Q&&Q({isDDS:!0,width:A.width,info:c,data:M,texture:A})}loadData(M,A,O){const S=z.DDSTools.GetDDSInfo(M),Q=(S.isRGB||S.isLuminance||S.mipmapCount>1)&&A.generateMipMaps&&Math.max(S.width,S.height)>>S.mipmapCount-1===1;O(S.width,S.height,Q,S.isFourCC,(()=>{z.DDSTools.UploadDDSLevels(A.getEngine(),A,M,S,Q,1)}))}}},13497:(M,A,O)=>{O.d(A,{d:()=>B});var S=O(12970),z=O(12980),Q=O(13177),X=O(12974),c=O(13010);class j{constructor(M,A,O,S){this.name=M,this.worldAxisForNormal=A,this.worldAxisForFileX=O,this.worldAxisForFileY=S}}class B{static ConvertCubeMapTextureToSphericalPolynomial(M){var A;if(!M.isCube)return null;null===(A=M.HM())||void 0===A||A.getEngine().flushFramebuffer();const O=M.getSize().width,S=M.readPixels(0,void 0,void 0,!1),z=M.readPixels(1,void 0,void 0,!1);let Q,X;M.isRenderTarget?(Q=M.readPixels(3,void 0,void 0,!1),X=M.readPixels(2,void 0,void 0,!1)):(Q=M.readPixels(2,void 0,void 0,!1),X=M.readPixels(3,void 0,void 0,!1));const c=M.readPixels(4,void 0,void 0,!1),j=M.readPixels(5,void 0,void 0,!1),B=M.gammaSpace;let g=0;return 1!=M.textureType&&2!=M.textureType||(g=1),new Promise((M=>{Promise.all([z,S,Q,X,c,j]).then((A=>{let[S,z,Q,X,c,j]=A;const e={size:O,right:z,left:S,up:Q,down:X,front:c,back:j,format:5,type:g,gammaSpace:B};M(this.ConvertCubeMapToSphericalPolynomial(e))}))}))}static _AreaElement(M,A){return Math.atan2(M*A,Math.sqrt(M*M+A*A+1))}static ConvertCubeMapToSphericalPolynomial(M){const A=new Q.e;let O=0;const S=2/M.size,j=S,B=.5*S,g=B-1;for(let Q=0;Q<6;Q++){const e=this._FileFaces[Q],T=M[e.name];let J=g;const K=5===M.format?4:3;for(let Q=0;Q<M.size;Q++){let G=g;for(let j=0;j<M.size;j++){const g=e.worldAxisForFileX.scale(G).add(e.worldAxisForFileY.scale(J)).add(e.worldAxisForNormal);g.normalize();const d=this._AreaElement(G-B,J-B)-this._AreaElement(G-B,J+B)-this._AreaElement(G+B,J-B)+this._AreaElement(G+B,J+B);let w=T[Q*M.size*K+j*K+0],I=T[Q*M.size*K+j*K+1],b=T[Q*M.size*K+j*K+2];isNaN(w)&&(w=0),isNaN(I)&&(I=0),isNaN(b)&&(b=0),0===M.type&&(w/=255,I/=255,b/=255),M.gammaSpace&&(w=Math.pow((0,z.Clamp)(w),X.n),I=Math.pow((0,z.Clamp)(I),X.n),b=Math.pow((0,z.Clamp)(b),X.n));const s=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const M=Math.max(w,I,b);if(M>s){const A=s/M;w*=A,I*=A,b*=A}}else w=(0,z.Clamp)(w,0,s),I=(0,z.Clamp)(I,0,s),b=(0,z.Clamp)(b,0,s);const Y=new c.bA(w,I,b);A.addLight(g,Y,d),O+=d,G+=S}J+=j}}const e=6*(4*Math.PI)/6/O;return A.scaleInPlace(e),A.convertIncidentRadianceToIrradiance(),A.convertIrradianceToLambertianRadiance(),Q.g.FromHarmonics(A)}}B._FileFaces=[new j("right",new S.GA(1,0,0),new S.GA(0,0,-1),new S.GA(0,-1,0)),new j("left",new S.GA(-1,0,0),new S.GA(0,0,1),new S.GA(0,-1,0)),new j("up",new S.GA(0,1,0),new S.GA(1,0,0),new S.GA(0,0,1)),new j("down",new S.GA(0,-1,0),new S.GA(1,0,0),new S.GA(0,0,-1)),new j("front",new S.GA(0,0,1),new S.GA(1,0,0),new S.GA(0,-1,0)),new j("back",new S.GA(0,0,-1),new S.GA(-1,0,0),new S.GA(0,-1,0))],B.MAX_HDRI_VALUE=4096,B.PRESERVE_CLAMPED_COLORS=!1},15072:(M,A,O)=>{O.d(A,{DDSTools:()=>K});var S=O(12980),z=O(12783),Q=O(13497),X=O(13203);O(14203);const c=131072,j=131072;function B(M){return M.charCodeAt(0)+(M.charCodeAt(1)<<8)+(M.charCodeAt(2)<<16)+(M.charCodeAt(3)<<24)}const g=B("DXT1"),e=B("DXT3"),T=B("DXT5"),J=B("DX10");class K{static GetDDSInfo(M){const A=new Int32Array(M.buffer,M.byteOffset,31),O=new Int32Array(M.buffer,M.byteOffset,35);let S=1;A[2]&c&&(S=Math.max(1,A[7]));const z=A[21],Q=z===J?O[32]:0;let X=0;switch(z){case 113:X=2;break;case 116:X=1;break;case J:if(10===Q){X=2;break}if(2===Q){X=1;break}}return{width:A[4],height:A[3],mipmapCount:S,isFourCC:4===(4&A[20]),isRGB:64===(64&A[20]),isLuminance:(A[20]&j)===j,isCube:512===(512&A[28]),isCompressed:z===g||z===e||z===T,dxgiFormat:Q,textureType:X}}static _GetHalfFloatAsFloatRGBAArrayBuffer(M,A,O,S,z,Q){const c=new Float32Array(S),j=new Uint16Array(z,O);let B=0;for(let g=0;g<A;g++)for(let A=0;A<M;A++){const O=4*(A+g*M);c[B]=(0,X.e)(j[O]),c[B+1]=(0,X.e)(j[O+1]),c[B+2]=(0,X.e)(j[O+2]),K.StoreLODInAlphaChannel?c[B+3]=Q:c[B+3]=(0,X.e)(j[O+3]),B+=4}return c}static _GetHalfFloatRGBAArrayBuffer(M,A,O,S,z,Q){if(K.StoreLODInAlphaChannel){const c=new Uint16Array(S),j=new Uint16Array(z,O);let B=0;for(let O=0;O<A;O++)for(let A=0;A<M;A++){const S=4*(A+O*M);c[B]=j[S],c[B+1]=j[S+1],c[B+2]=j[S+2],c[B+3]=(0,X.n)(Q),B+=4}return c}return new Uint16Array(z,O,S)}static _GetFloatRGBAArrayBuffer(M,A,O,S,z,Q){if(K.StoreLODInAlphaChannel){const X=new Float32Array(S),c=new Float32Array(z,O);let j=0;for(let O=0;O<A;O++)for(let A=0;A<M;A++){const S=4*(A+O*M);X[j]=c[S],X[j+1]=c[S+1],X[j+2]=c[S+2],X[j+3]=Q,j+=4}return X}return new Float32Array(z,O,S)}static _GetFloatAsHalfFloatRGBAArrayBuffer(M,A,O,S,z,Q){const c=new Uint16Array(S),j=new Float32Array(z,O);let B=0;for(let g=0;g<A;g++)for(let A=0;A<M;A++)c[B]=(0,X.n)(j[B]),c[B+1]=(0,X.n)(j[B+1]),c[B+2]=(0,X.n)(j[B+2]),K.StoreLODInAlphaChannel?c[B+3]=(0,X.n)(Q):c[B+3]=(0,X.n)(j[B+3]),B+=4;return c}static _GetFloatAsUIntRGBAArrayBuffer(M,A,O,z,Q,X){const c=new Uint8Array(z),j=new Float32Array(Q,O);let B=0;for(let g=0;g<A;g++)for(let A=0;A<M;A++){const O=4*(A+g*M);c[B]=255*(0,S.Clamp)(j[O]),c[B+1]=255*(0,S.Clamp)(j[O+1]),c[B+2]=255*(0,S.Clamp)(j[O+2]),K.StoreLODInAlphaChannel?c[B+3]=X:c[B+3]=255*(0,S.Clamp)(j[O+3]),B+=4}return c}static _GetHalfFloatAsUIntRGBAArrayBuffer(M,A,O,z,Q,c){const j=new Uint8Array(z),B=new Uint16Array(Q,O);let g=0;for(let e=0;e<A;e++)for(let A=0;A<M;A++){const O=4*(A+e*M);j[g]=255*(0,S.Clamp)((0,X.e)(B[O])),j[g+1]=255*(0,S.Clamp)((0,X.e)(B[O+1])),j[g+2]=255*(0,S.Clamp)((0,X.e)(B[O+2])),K.StoreLODInAlphaChannel?j[g+3]=c:j[g+3]=255*(0,S.Clamp)((0,X.e)(B[O+3])),g+=4}return j}static _GetRGBAArrayBuffer(M,A,O,S,z,Q,X,c,j){const B=new Uint8Array(S),g=new Uint8Array(z,O);let e=0;for(let T=0;T<A;T++)for(let A=0;A<M;A++){const O=4*(A+T*M);B[e]=g[O+Q],B[e+1]=g[O+X],B[e+2]=g[O+c],B[e+3]=g[O+j],e+=4}return B}static _ExtractLongWordOrder(M){return 0===M||255===M||-16777216===M?0:1+K._ExtractLongWordOrder(M>>8)}static _GetRGBArrayBuffer(M,A,O,S,z,Q,X,c){const j=new Uint8Array(S),B=new Uint8Array(z,O);let g=0;for(let e=0;e<A;e++)for(let A=0;A<M;A++){const O=3*(A+e*M);j[g]=B[O+Q],j[g+1]=B[O+X],j[g+2]=B[O+c],g+=3}return j}static _GetLuminanceArrayBuffer(M,A,O,S,z){const Q=new Uint8Array(S),X=new Uint8Array(z,O);let c=0;for(let j=0;j<A;j++)for(let A=0;A<M;A++){const O=A+j*M;Q[c]=X[O],c++}return Q}static UploadDDSLevels(M,A,O,S,X,j){let B=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,G=arguments.length>7?arguments[7]:void 0,d=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],w=null;S.sphericalPolynomial&&(w=[]);const I=!!M.getCaps().s3tc;A.generateMipMaps=X;const b=new Int32Array(O.buffer,O.byteOffset,31);let s,Y,E,H,C,f,D,F=0,N=0,y=1;if(542327876!==b[0])return void z.c.Error("Invalid magic number in DDS header");if(!S.isFourCC&&!S.isRGB&&!S.isLuminance)return void z.c.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(S.isCompressed&&!I)return void z.c.Error("Compressed textures are not supported on this platform.");let h=b[22];H=b[1]+4;let u=!1;if(S.isFourCC)switch(s=b[21],s){case g:y=8,N=33777;break;case e:y=16,N=33778;break;case T:y=16,N=33779;break;case 113:u=!0,h=64;break;case 116:u=!0,h=128;break;case J:{H+=20;let M=!1;switch(S.dxgiFormat){case 10:u=!0,h=64,M=!0;break;case 2:u=!0,h=128,M=!0;break;case 88:S.isRGB=!0,S.isFourCC=!1,h=32,M=!0}if(M)break}default:return void z.c.Error(["Unsupported FourCC code:",(i=s,String.fromCharCode(255&i,i>>8&255,i>>16&255,i>>24&255))])}var i;const U=K._ExtractLongWordOrder(b[23]),L=K._ExtractLongWordOrder(b[24]),t=K._ExtractLongWordOrder(b[25]),x=K._ExtractLongWordOrder(b[26]);u&&(N=M._getRGBABufferInternalSizedFormat(S.textureType)),f=1,b[2]&c&&!1!==X&&(f=Math.max(1,b[7]));const o=G||0,p=M.getCaps();for(let z=o;z<j;z++){for(Y=b[4],E=b[3],D=0;D<f;++D){if(-1===B||B===D){const Q=-1===B?D:0;if(!S.isCompressed&&S.isFourCC){A.format=5,F=Y*E*4;let S=null;if(M._badOS||M._badDesktopOS||!p.textureHalfFloat&&!p.textureFloat)128===h?(S=K._GetFloatAsUIntRGBAArrayBuffer(Y,E,O.byteOffset+H,F,O.buffer,Q),w&&0==Q&&w.push(K._GetFloatRGBAArrayBuffer(Y,E,O.byteOffset+H,F,O.buffer,Q))):64===h&&(S=K._GetHalfFloatAsUIntRGBAArrayBuffer(Y,E,O.byteOffset+H,F,O.buffer,Q),w&&0==Q&&w.push(K._GetHalfFloatAsFloatRGBAArrayBuffer(Y,E,O.byteOffset+H,F,O.buffer,Q))),A.type=0;else{const M=p.textureFloat&&(d&&p.textureFloatLinearFiltering||!d),z=p.textureHalfFloat&&(d&&p.textureHalfFloatLinearFiltering||!d),X=(128===h||64===h&&!z)&&M?1:(64===h||128===h&&!M)&&z?2:0;let c,j=null;if(128===h)switch(X){case 1:c=K._GetFloatRGBAArrayBuffer,j=null;break;case 2:c=K._GetFloatAsHalfFloatRGBAArrayBuffer,j=K._GetFloatRGBAArrayBuffer;break;case 0:c=K._GetFloatAsUIntRGBAArrayBuffer,j=K._GetFloatRGBAArrayBuffer}else switch(X){case 1:c=K._GetHalfFloatAsFloatRGBAArrayBuffer,j=null;break;case 2:c=K._GetHalfFloatRGBAArrayBuffer,j=K._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:c=K._GetHalfFloatAsUIntRGBAArrayBuffer,j=K._GetHalfFloatAsFloatRGBAArrayBuffer}A.type=X,S=c(Y,E,O.byteOffset+H,F,O.buffer,Q),w&&0==Q&&w.push(j?j(Y,E,O.byteOffset+H,F,O.buffer,Q):S)}S&&M._uploadDataToTextureDirectly(A,S,z,Q)}else if(S.isRGB)A.type=0,24===h?(A.format=4,F=Y*E*3,C=K._GetRGBArrayBuffer(Y,E,O.byteOffset+H,F,O.buffer,U,L,t),M._uploadDataToTextureDirectly(A,C,z,Q)):(A.format=5,F=Y*E*4,C=K._GetRGBAArrayBuffer(Y,E,O.byteOffset+H,F,O.buffer,U,L,t,x),M._uploadDataToTextureDirectly(A,C,z,Q));else if(S.isLuminance){const S=M._getUnpackAlignement(),X=Y;F=Math.floor((Y+S-1)/S)*S*(E-1)+X,C=K._GetLuminanceArrayBuffer(Y,E,O.byteOffset+H,F,O.buffer),A.format=1,A.type=0,M._uploadDataToTextureDirectly(A,C,z,Q)}else F=Math.max(4,Y)/4*Math.max(4,E)/4*y,C=new Uint8Array(O.buffer,O.byteOffset+H,F),A.type=0,M._uploadCompressedDataToTextureDirectly(A,N,Y,E,C,z,Q)}H+=h?Y*E*(h/8):F,Y*=.5,E*=.5,Y=Math.max(1,Y),E=Math.max(1,E)}if(void 0!==G)break}w&&w.length>0?S.sphericalPolynomial=Q.d.ConvertCubeMapToSphericalPolynomial({size:b[4],right:w[0],left:w[1],up:w[2],down:w[3],front:w[4],back:w[5],format:5,type:1,gammaSpace:!1}):S.sphericalPolynomial=void 0}}K.StoreLODInAlphaChannel=!1}}]);