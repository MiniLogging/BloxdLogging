/*! For license information please see 09wkk.6.abcbe813.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6],{10594:(R,q,L)=>{L.r(q),L.d(q,{getAnalytics:()=>JR,getGoogleAnalyticsClientId:()=>bR,initializeAnalytics:()=>sR,isSupported:()=>AR,logEvent:()=>Lq,setAnalyticsCollectionEnabled:()=>Rq,setConsent:()=>Bq,setCurrentScreen:()=>MR,setDefaultEventParameters:()=>qq,setUserId:()=>XR,setUserProperties:()=>uR,settings:()=>wR});var B=L(10570),N=L(10588),h=L(10580),Z=L(10572);let z,Y;const F=new WeakMap,C=new WeakMap,e=new WeakMap,y=new WeakMap,U=new WeakMap;let n={get(R,q,L){if(R instanceof IDBTransaction){if("done"===q)return C.get(R);if("objectStoreNames"===q)return R.objectStoreNames||e.get(R);if("store"===q)return L.objectStoreNames[1]?void 0:L.objectStore(L.objectStoreNames[0])}return c(R[q])},set:(R,q,L)=>(R[q]=L,!0),has:(R,q)=>R instanceof IDBTransaction&&("done"===q||"store"===q)||q in R};function r(R){return R!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(Y||(Y=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(R)?function(){for(var q=arguments.length,L=new Array(q),B=0;B<q;B++)L[B]=arguments[B];return R.apply(d(this),L),c(F.get(this))}:function(){for(var q=arguments.length,L=new Array(q),B=0;B<q;B++)L[B]=arguments[B];return c(R.apply(d(this),L))}:function(q){for(var L=arguments.length,B=new Array(L>1?L-1:0),N=1;N<L;N++)B[N-1]=arguments[N];const h=R.call(d(this),q,...B);return e.set(h,q.sort?q.sort():[q]),c(h)}}function p(R){return"function"===typeof R?r(R):(R instanceof IDBTransaction&&function(R){if(C.has(R))return;const q=new Promise(((q,L)=>{const B=()=>{R.removeEventListener("complete",N),R.removeEventListener("error",h),R.removeEventListener("abort",h)},N=()=>{q(),B()},h=()=>{L(R.error||new DOMException("AbortError","AbortError")),B()};R.addEventListener("complete",N),R.addEventListener("error",h),R.addEventListener("abort",h)}));C.set(R,q)}(R),q=R,(z||(z=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((R=>q instanceof R))?new Proxy(R,n):R);var q}function c(R){if(R instanceof IDBRequest)return function(R){const q=new Promise(((q,L)=>{const B=()=>{R.removeEventListener("success",N),R.removeEventListener("error",h)},N=()=>{q(c(R.result)),B()},h=()=>{L(R.error),B()};R.addEventListener("success",N),R.addEventListener("error",h)}));return q.then((q=>{q instanceof IDBCursor&&F.set(q,R)})).catch((()=>{})),U.set(q,R),q}(R);if(y.has(R))return y.get(R);const q=p(R);return q!==R&&(y.set(R,q),U.set(q,R)),q}const d=R=>U.get(R);const f=["get","getKey","getAll","getAllKeys","count"],v=["put","add","delete","clear"],T=new Map;function t(R,q){if(!(R instanceof IDBDatabase)||q in R||"string"!==typeof q)return;if(T.get(q))return T.get(q);const L=q.replace(/FromIndex$/,""),B=q!==L,N=v.includes(L);if(!(L in(B?IDBIndex:IDBObjectStore).prototype)||!N&&!f.includes(L))return;const h=async function(R){const q=this.transaction(R,N?"readwrite":"readonly");let h=q.store;for(var Z=arguments.length,z=new Array(Z>1?Z-1:0),Y=1;Y<Z;Y++)z[Y-1]=arguments[Y];return B&&(h=h.index(z.shift())),(await Promise.all([h[L](...z),N&&q.done]))[0]};return T.set(q,h),h}n=(R=>({...R,get:(q,L,B)=>t(q,L)||R.get(q,L,B),has:(q,L)=>!!t(q,L)||R.has(q,L)}))(n);const D="@firebase/installations",S="0.6.4",I=1e4,K=`w:${S}`,m="FIS_v2",o=36e5,l={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},G=new h.e("installations","Installations",l);function W(R){return R instanceof h.i&&R.code.includes("request-failed")}function H(R){let{projectId:q}=R;return`https://firebaseinstallations.googleapis.com/v1/projects/${q}/installations`}function P(R){return{token:R.token,requestStatus:2,expiresIn:(q=R.expiresIn,Number(q.replace("s","000"))),creationTime:Date.now()};var q}async function O(R,q){const L=(await q.json()).error;return G.create("request-failed",{requestName:R,serverCode:L.code,serverMessage:L.message,serverStatus:L.status})}function E(R){let{apiKey:q}=R;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":q})}function a(R,q){let{refreshToken:L}=q;const B=E(R);return B.append("Authorization",function(R){return`${m} ${R}`}(L)),B}async function g(R){const q=await R();return q.status>=500&&q.status<600?R():q}function Q(R){return new Promise((q=>{setTimeout(q,R)}))}const i=/^[cdef][\w-]{21}$/;function k(){try{const R=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(R),R[0]=112+R[0]%16;const q=function(R){const q=(L=R,btoa(String.fromCharCode(...L)).replace(/\+/g,"-").replace(/\//g,"_"));var L;return q.substr(0,22)}(R);return i.test(q)?q:""}catch(R){return""}}function V(R){return`${R.appName}!${R.appId}`}const x=new Map;function w(R,q){const L=V(R);j(L,q),function(R,q){const L=s();L&&L.postMessage({key:R,fid:q});A()}(L,q)}function j(R,q){const L=x.get(R);if(L)for(const B of L)B(q)}let J=null;function s(){return!J&&"BroadcastChannel"in self&&(J=new BroadcastChannel("[Firebase] FID Change"),J.onmessage=R=>{j(R.data.key,R.data.fid)}),J}function A(){0===x.size&&J&&(J.close(),J=null)}const M="firebase-installations-store";let b=null;function X(){return b||(b=function(R,q){let{blocked:L,upgrade:B,blocking:N,terminated:h}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const Z=indexedDB.open(R,q),z=c(Z);return B&&Z.addEventListener("upgradeneeded",(R=>{B(c(Z.result),R.oldVersion,R.newVersion,c(Z.transaction))})),L&&Z.addEventListener("blocked",(()=>L())),z.then((R=>{h&&R.addEventListener("close",(()=>h())),N&&R.addEventListener("versionchange",(()=>N()))})).catch((()=>{})),z}("firebase-installations-database",1,{upgrade:(R,q)=>{if(0===q)R.createObjectStore(M)}})),b}async function u(R,q){const L=V(R),B=(await X()).transaction(M,"readwrite"),N=B.objectStore(M),h=await N.get(L);return await N.put(q,L),await B.done,h&&h.fid===q.fid||w(R,q.fid),q}async function RR(R){const q=V(R),L=(await X()).transaction(M,"readwrite");await L.objectStore(M).delete(q),await L.done}async function qR(R,q){const L=V(R),B=(await X()).transaction(M,"readwrite"),N=B.objectStore(M),h=await N.get(L),Z=q(h);return void 0===Z?await N.delete(L):await N.put(Z,L),await B.done,!Z||h&&h.fid===Z.fid||w(R,Z.fid),Z}async function LR(R){let q;const L=await qR(R.appConfig,(L=>{const B=function(R){const q=R||{fid:k(),registrationStatus:0};return hR(q)}(L),N=function(R,q){if(0===q.registrationStatus){if(!navigator.onLine){return{installationEntry:q,registrationPromise:Promise.reject(G.create("app-offline"))}}const L={fid:q.fid,registrationStatus:1,registrationTime:Date.now()},B=async function(R,q){try{const L=await async function(R,q){let{appConfig:L,heartbeatServiceProvider:B}=R,{fid:N}=q;const h=H(L),Z=E(L),z=B.getImmediate({optional:!0});if(z){const R=await z.getHeartbeatsHeader();R&&Z.append("x-firebase-client",R)}const Y={fid:N,authVersion:m,appId:L.appId,sdkVersion:K},F={method:"POST",headers:Z,body:JSON.stringify(Y)},C=await g((()=>fetch(h,F)));if(C.ok){const R=await C.json();return{fid:R.fid||N,registrationStatus:2,refreshToken:R.refreshToken,authToken:P(R.authToken)}}throw await O("Create Installation",C)}(R,q);return u(R.appConfig,L)}catch(L){throw W(L)&&409===L.customData.serverCode?await RR(R.appConfig):await u(R.appConfig,{fid:q.fid,registrationStatus:0}),L}}(R,L);return{installationEntry:L,registrationPromise:B}}return 1===q.registrationStatus?{installationEntry:q,registrationPromise:BR(R)}:{installationEntry:q}}(R,B);return q=N.registrationPromise,N.installationEntry}));return""===L.fid?{installationEntry:await q}:{installationEntry:L,registrationPromise:q}}async function BR(R){let q=await NR(R.appConfig);for(;1===q.registrationStatus;)await Q(100),q=await NR(R.appConfig);if(0===q.registrationStatus){const{installationEntry:q,registrationPromise:L}=await LR(R);return L||q}return q}function NR(R){return qR(R,(R=>{if(!R)throw G.create("installation-not-found");return hR(R)}))}function hR(R){return 1===(q=R).registrationStatus&&q.registrationTime+I<Date.now()?{fid:R.fid,registrationStatus:0}:R;var q}async function ZR(R,q){let{appConfig:L,heartbeatServiceProvider:B}=R;const N=function(R,q){let{fid:L}=q;return`${H(R)}/${L}/authTokens:generate`}(L,q),h=a(L,q),Z=B.getImmediate({optional:!0});if(Z){const R=await Z.getHeartbeatsHeader();R&&h.append("x-firebase-client",R)}const z={installation:{sdkVersion:K,appId:L.appId}},Y={method:"POST",headers:h,body:JSON.stringify(z)},F=await g((()=>fetch(N,Y)));if(F.ok){return P(await F.json())}throw await O("Generate Auth Token",F)}async function zR(R){let q,L=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const B=await qR(R.appConfig,(B=>{if(!FR(B))throw G.create("not-registered");const N=B.authToken;if(!L&&function(R){return 2===R.requestStatus&&!function(R){const q=Date.now();return q<R.creationTime||R.creationTime+R.expiresIn<q+o}(R)}(N))return B;if(1===N.requestStatus)return q=async function(R,q){let L=await YR(R.appConfig);for(;1===L.authToken.requestStatus;)await Q(100),L=await YR(R.appConfig);const B=L.authToken;return 0===B.requestStatus?zR(R,q):B}(R,L),B;{if(!navigator.onLine)throw G.create("app-offline");const L=function(R){const q={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},R),{authToken:q})}(B);return q=async function(R,q){try{const L=await ZR(R,q),B=Object.assign(Object.assign({},q),{authToken:L});return await u(R.appConfig,B),L}catch(L){if(!W(L)||401!==L.customData.serverCode&&404!==L.customData.serverCode){const L=Object.assign(Object.assign({},q),{authToken:{requestStatus:0}});await u(R.appConfig,L)}else await RR(R.appConfig);throw L}}(R,L),L}}));return q?await q:B.authToken}function YR(R){return qR(R,(R=>{if(!FR(R))throw G.create("not-registered");const q=R.authToken;return 1===(L=q).requestStatus&&L.requestTime+I<Date.now()?Object.assign(Object.assign({},R),{authToken:{requestStatus:0}}):R;var L}))}function FR(R){return void 0!==R&&2===R.registrationStatus}async function CR(R){let q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const L=R;await async function(R){const{registrationPromise:q}=await LR(R);q&&await q}(L);return(await zR(L,q)).token}function eR(R){return G.create("missing-app-config-values",{valueName:R})}const yR="installations",UR=R=>{const q=R.getProvider("app").getImmediate(),L=function(R){if(!R||!R.options)throw eR("App Configuration");if(!R.name)throw eR("App Name");const q=["projectId","apiKey","appId"];for(const L of q)if(!R.options[L])throw eR(L);return{appName:R.name,projectId:R.options.projectId,apiKey:R.options.apiKey,appId:R.options.appId}}(q);return{app:q,appConfig:L,heartbeatServiceProvider:(0,B.u)(q,"heartbeat"),_delete:()=>Promise.resolve()}},nR=R=>{const q=R.getProvider("app").getImmediate(),L=(0,B.u)(q,yR).getImmediate();return{getId:()=>async function(R){const q=R,{installationEntry:L,registrationPromise:B}=await LR(q);return B?B.catch(console.error):zR(q).catch(console.error),L.fid}(L),getToken:R=>CR(L,R)}};(0,B.x)(new Z.f(yR,UR,"PUBLIC")),(0,B.x)(new Z.f("installations-internal",nR,"PRIVATE")),(0,B.K)(D,S),(0,B.K)(D,S,"esm2017");const rR="analytics",pR="https://www.googletagmanager.com/gtag/js",cR=new N.g("@firebase/analytics"),dR={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},fR=new h.e("analytics","Analytics",dR);function vR(R){if(!R.startsWith(pR)){const q=fR.create("invalid-gtag-resource",{gtagURL:R});return cR.warn(q.message),""}return R}function TR(R){return Promise.all(R.map((R=>R.catch((R=>R)))))}function tR(R,q){const L=function(R,q){let L;return window.trustedTypes&&(L=window.trustedTypes.createPolicy(R,q)),L}("firebase-js-sdk-policy",{createScriptURL:vR}),B=document.createElement("script"),N=`${pR}?l=${R}&id=${q}`;B.src=L?null===L||void 0===L?void 0:L.createScriptURL(N):N,B.async=!0,document.head.appendChild(B)}function DR(R,q,L,B){return async function(N){try{for(var h=arguments.length,Z=new Array(h>1?h-1:0),z=1;z<h;z++)Z[z-1]=arguments[z];if("event"===N){const[B,N]=Z;await async function(R,q,L,B,N){try{let h=[];if(N&&N.send_to){let R=N.send_to;Array.isArray(R)||(R=[R]);const B=await TR(L);for(const L of R){const R=B.find((R=>R.measurementId===L)),N=R&&q[R.appId];if(!N){h=[];break}h.push(N)}}0===h.length&&(h=Object.values(q)),await Promise.all(h),R("event",B,N||{})}catch(h){cR.error(h)}}(R,q,L,B,N)}else if("config"===N){const[N,h]=Z;await async function(R,q,L,B,N,h){const Z=B[N];try{if(Z)await q[Z];else{const R=(await TR(L)).find((R=>R.measurementId===N));R&&await q[R.appId]}}catch(z){cR.error(z)}R("config",N,h)}(R,q,L,B,N,h)}else if("consent"===N){const[q]=Z;R("consent","update",q)}else if("get"===N){const[q,L,B]=Z;R("get",q,L,B)}else if("set"===N){const[q]=Z;R("set",q)}else R(N,...Z)}catch(Y){cR.error(Y)}}}const SR=new class{constructor(){let R=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=R,this.intervalMillis=q}getThrottleMetadata(R){return this.throttleMetadata[R]}setThrottleMetadata(R,q){this.throttleMetadata[R]=q}deleteThrottleMetadata(R){delete this.throttleMetadata[R]}};function IR(R){return new Headers({Accept:"application/json","x-goog-api-key":R})}async function KR(R){let q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:SR,L=arguments.length>2?arguments[2]:void 0;const{appId:B,apiKey:N,measurementId:h}=R.options;if(!B)throw fR.create("no-app-id");if(!N){if(h)return{measurementId:h,appId:B};throw fR.create("no-api-key")}const Z=q.getThrottleMetadata(B)||{backoffCount:0,throttleEndTimeMillis:Date.now()},z=new oR;return setTimeout((async()=>{z.abort()}),void 0!==L?L:6e4),mR({appId:B,apiKey:N,measurementId:h},Z,z,q)}async function mR(R,q,L){let{throttleEndTimeMillis:B,backoffCount:N}=q,Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:SR;var z;const{appId:Y,measurementId:F}=R;try{await function(R,q){return new Promise(((L,B)=>{const N=Math.max(q-Date.now(),0),h=setTimeout(L,N);R.addEventListener((()=>{clearTimeout(h),B(fR.create("fetch-throttle",{throttleEndTimeMillis:q}))}))}))}(L,B)}catch(C){if(F)return cR.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${F} provided in the "measurementId" field in the local Firebase config. [${null===C||void 0===C?void 0:C.message}]`),{appId:Y,measurementId:F};throw C}try{const q=await async function(R){var q;const{appId:L,apiKey:B}=R,N={method:"GET",headers:IR(B)},h="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",L),Z=await fetch(h,N);if(200!==Z.status&&304!==Z.status){let R="";try{const L=await Z.json();(null===(q=L.error)||void 0===q?void 0:q.message)&&(R=L.error.message)}catch(z){}throw fR.create("config-fetch-failed",{httpStatus:Z.status,responseMessage:R})}return Z.json()}(R);return Z.deleteThrottleMetadata(Y),q}catch(C){const q=C;if(!function(R){if(!(R instanceof h.i)||!R.customData)return!1;const q=Number(R.customData.httpStatus);return 429===q||500===q||503===q||504===q}(q)){if(Z.deleteThrottleMetadata(Y),F)return cR.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${F} provided in the "measurementId" field in the local Firebase config. [${null===q||void 0===q?void 0:q.message}]`),{appId:Y,measurementId:F};throw C}const B=503===Number(null===(z=null===q||void 0===q?void 0:q.customData)||void 0===z?void 0:z.httpStatus)?(0,h.s)(N,Z.intervalMillis,30):(0,h.s)(N,Z.intervalMillis),e={throttleEndTimeMillis:Date.now()+B,backoffCount:N+1};return Z.setThrottleMetadata(Y,e),cR.debug(`Calling attemptFetch again in ${B} millis`),mR(R,e,L,Z)}}class oR{constructor(){this.listeners=[]}addEventListener(R){this.listeners.push(R)}abort(){this.listeners.forEach((R=>R()))}}let lR,GR;function WR(R){GR=R}function HR(R){lR=R}async function PR(R,q,L,B,N,Z,z){var Y;const F=KR(R);F.then((q=>{L[q.measurementId]=q.appId,R.options.measurementId&&q.measurementId!==R.options.measurementId&&cR.warn(`The measurement ID in the local Firebase config (${R.options.measurementId}) does not match the measurement ID fetched from the server (${q.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((R=>cR.error(R))),q.push(F);const C=async function(){if(!(0,h.R)())return cR.warn(fR.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,h.eb)()}catch(R){return cR.warn(fR.create("indexeddb-unavailable",{errorInfo:null===R||void 0===R?void 0:R.toString()}).message),!1}return!0}().then((R=>R?B.getId():void 0)),[e,y]=await Promise.all([F,C]);(function(R){const q=window.document.getElementsByTagName("script");for(const L of Object.values(q))if(L.src&&L.src.includes(pR)&&L.src.includes(R))return L;return null})(Z)||tR(Z,e.measurementId),GR&&(N("consent","default",GR),WR(void 0)),N("js",new Date);const U=null!==(Y=null===z||void 0===z?void 0:z.config)&&void 0!==Y?Y:{};return U.origin="firebase",U.update=!0,null!=y&&(U.firebase_id=y),N("config",e.measurementId,U),lR&&(N("set",lR),HR(void 0)),e.measurementId}class OR{constructor(R){this.app=R}_delete(){return delete ER[this.app.options.appId],Promise.resolve()}}let ER={},aR=[];const gR={};let QR,iR,kR="dataLayer",VR="gtag",xR=!1;function wR(R){if(xR)throw fR.create("already-initialized");R.dataLayerName&&(kR=R.dataLayerName),R.gtagName&&(VR=R.gtagName)}function jR(R,q,L){!function(){const R=[];if((0,h.I)()&&R.push("This is a browser extension environment."),(0,h.l)()||R.push("Cookies are not available."),R.length>0){const q=R.map(((R,q)=>`(${q+1}) ${R}`)).join(" "),L=fR.create("invalid-analytics-context",{errorInfo:q});cR.warn(L.message)}}();const B=R.options.appId;if(!B)throw fR.create("no-app-id");if(!R.options.apiKey){if(!R.options.measurementId)throw fR.create("no-api-key");cR.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${R.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=ER[B])throw fR.create("already-exists",{id:B});if(!xR){!function(R){let q=[];Array.isArray(window[R])?q=window[R]:window[R]=q}(kR);const{wrappedGtag:R,gtagCore:q}=function(R,q,L,B,N){let h=function(){for(var R=arguments.length,q=new Array(R),L=0;L<R;L++)q[L]=arguments[L];window[B].push(arguments)};return window[N]&&"function"===typeof window[N]&&(h=window[N]),window[N]=DR(h,R,q,L),{gtagCore:h,wrappedGtag:window[N]}}(ER,aR,gR,kR,VR);iR=R,QR=q,xR=!0}ER[B]=PR(R,aR,gR,q,QR,kR,L);return new OR(R)}function JR(){let R=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,B.E)();R=(0,h.F)(R);const q=(0,B.u)(R,rR);return q.isInitialized()?q.getImmediate():sR(R)}function sR(R){let q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const L=(0,B.u)(R,rR);if(L.isInitialized()){const R=L.getImmediate();if((0,h.w)(q,L.getOptions()))return R;throw fR.create("already-initialized")}return L.initialize({options:q})}async function AR(){if((0,h.I)())return!1;if(!(0,h.l)())return!1;if(!(0,h.R)())return!1;try{return await(0,h.eb)()}catch(R){return!1}}function MR(R,q,L){R=(0,h.F)(R),async function(R,q,L,B){if(B&&B.global)return R("set",{screen_name:L}),Promise.resolve();R("config",await q,{update:!0,screen_name:L})}(iR,ER[R.app.options.appId],q,L).catch((R=>cR.error(R)))}async function bR(R){return R=(0,h.F)(R),async function(R,q){const L=await q;return new Promise(((q,B)=>{R("get",L,"client_id",(R=>{R||B(fR.create("no-client-id")),q(R)}))}))}(iR,ER[R.app.options.appId])}function XR(R,q,L){R=(0,h.F)(R),async function(R,q,L,B){if(B&&B.global)return R("set",{user_id:L}),Promise.resolve();R("config",await q,{update:!0,user_id:L})}(iR,ER[R.app.options.appId],q,L).catch((R=>cR.error(R)))}function uR(R,q,L){R=(0,h.F)(R),async function(R,q,L,B){if(B&&B.global){const q={};for(const R of Object.keys(L))q[`user_properties.${R}`]=L[R];return R("set",q),Promise.resolve()}R("config",await q,{update:!0,user_properties:L})}(iR,ER[R.app.options.appId],q,L).catch((R=>cR.error(R)))}function Rq(R,q){R=(0,h.F)(R),async function(R,q){const L=await R;window[`ga-disable-${L}`]=!q}(ER[R.app.options.appId],q).catch((R=>cR.error(R)))}function qq(R){iR?iR("set",R):HR(R)}function Lq(R,q,L,B){R=(0,h.F)(R),async function(R,q,L,B,N){if(N&&N.global)R("event",L,B);else{const N=await q;R("event",L,Object.assign(Object.assign({},B),{send_to:N}))}}(iR,ER[R.app.options.appId],q,L,B).catch((R=>cR.error(R)))}function Bq(R){iR?iR("consent","update",R):WR(R)}const Nq="@firebase/analytics",hq="0.10.0";(0,B.x)(new Z.f(rR,((R,q)=>{let{options:L}=q;return jR(R.getProvider("app").getImmediate(),R.getProvider("installations-internal").getImmediate(),L)}),"PUBLIC")),(0,B.x)(new Z.f("analytics-internal",(function(R){try{const q=R.getProvider(rR).getImmediate();return{logEvent:(R,L,B)=>Lq(q,R,L,B)}}catch(q){throw fR.create("interop-component-reg-failed",{reason:q})}}),"PRIVATE")),(0,B.K)(Nq,hq),(0,B.K)(Nq,hq,"esm2017")}}]);