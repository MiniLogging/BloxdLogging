"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6,7],{10247:(B,q,C)=>{var v=C(1460),m=C(983);m.c.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(m.c.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=v.c.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((B=>{this._texture._sphericalPolynomial=B,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(B){this._texture&&(this._texture._sphericalPolynomial=B)},enumerable:!0,configurable:!0})},10255:(B,q,C)=>{C.r(q),C.d(q,{Dispose:()=>W,DumpData:()=>z,DumpDataAsync:()=>l,DumpFramebuffer:()=>T,DumpTools:()=>Z});var v=C(1487),m=C(1161),O=C(981),S=C(978);let D,R=null;async function T(B,q,C,v){let m=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",O=arguments.length>5?arguments[5]:void 0,S=arguments.length>6?arguments[6]:void 0;const D=await C.readPixels(0,0,B,q);z(B,q,new Uint8Array(D.buffer),v,m,O,!0,void 0,S)}function l(B,q,C){let v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",m=arguments.length>4?arguments[4]:void 0,O=arguments.length>5&&void 0!==arguments[5]&&arguments[5],S=arguments.length>6&&void 0!==arguments[6]&&arguments[6],D=arguments.length>7?arguments[7]:void 0;return new Promise((R=>{z(B,q,C,(B=>R(B)),v,m,O,S,D)}))}function z(B,q,T,l){let z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Z=arguments.length>5?arguments[5]:void 0,G=arguments.length>6&&void 0!==arguments[6]&&arguments[6],y=arguments.length>7&&void 0!==arguments[7]&&arguments[7],e=arguments.length>8?arguments[8]:void 0;(async function(){return R||(R=new Promise(((B,q)=>{let m,O=null;const R={af:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(C.bind(C,1387)).then((T=>{let{ThinEngine:l}=T;try{m=new OffscreenCanvas(100,100),O=new l(m,!1,R)}catch(Z){m=document.createElement("canvas"),O=new l(m,!1,R)}S.e.Instances.pop(),S.e.OnEnginesDisposedObservable.add((B=>{O&&B!==O&&!O.u&&0===S.e.Instances.length&&W()})),O.getCaps().parallelShaderCompile=void 0;const z=new v.e(O);C.e(32).then(C.bind(C,10912)).then((C=>{let{passPixelShader:S}=C;if(!O)return void q("Engine is not defined");const R=new v.g({Fb:O,name:S.name,fragmentShader:S.shader,samplerNames:["textureSampler"]});D={canvas:m,Fb:O,renderer:z,wrapper:R},B(D)}))})).catch(q)}))),await R})().then((C=>{if(C.Fb.setSize(B,q,!0),T instanceof Float32Array){const B=new Uint8Array(T.length);let q=T.length;for(;q--;){const C=T[q];B[q]=Math.round(255*(0,O.c)(C))}T=B}const v=C.Fb.createRawTexture(T,B,q,5,!1,!G,1);C.renderer.setViewport(),C.renderer.applyEffectWrapper(C.wrapper),C.wrapper.effect._bindTexture("textureSampler",v),C.renderer.draw(),y?m.f.ToBlob(C.canvas,(B=>{const q=new FileReader;q.onload=B=>{const q=B.target.result;l&&l(q)},q.readAsArrayBuffer(B)}),z,e):m.f.EncodeScreenshotCanvasData(C.canvas,l,z,Z,e),v.dispose()}))}function W(){var B;D?(D.wrapper.dispose(),D.renderer.dispose(),D.Fb.dispose()):null===(B=R)||void 0===B||B.then((B=>{B.wrapper.dispose(),B.renderer.dispose(),B.Fb.dispose()}));R=null,D=null}const Z={DumpData:z,DumpDataAsync:l,DumpFramebuffer:T,Dispose:W};m.f.DumpData=z,m.f.DumpDataAsync=l,m.f.DumpFramebuffer=T},10238:(B,q,C)=>{C.d(q,{c:()=>G,f:()=>U,j:()=>r,l:()=>X});var v=C(1161),m=C(946),O=C(981),S=C(1431),D=C(1089),R=C(983),T=(C(1158),C(1478)),l=C(1040);C(10241),C(10247),C(10255);const z="image/png",W=2,Z=[134,22,135,150,246,214,150,54];function G(B){const q=new DataView(B.buffer,B.byteOffset,B.byteLength);let C=0;for(let S=0;S<Z.length;S++)if(q.getUint8(C++)!==Z[S])return l.d.Error("Not a babylon environment map"),null;let v="",m=0;for(;m=q.getUint8(C++);)v+=String.fromCharCode(m);let O=JSON.parse(v);return O=y(O),O.Je&&(O.Je.specularDataPosition=C,O.Je.lodGenerationScale=O.Je.lodGenerationScale||.8),O}function y(B){if(B.version>W)throw new Error(`Unsupported babylon environment map version "${B.version}". Latest supported version is "${W}".`);return 2===B.version?B:B={...B,version:2,imageType:z}}function e(B,q){const C=(q=y(q)).Je;let v=Math.log2(q.width);if(v=Math.round(v)+1,C.mipmaps.length!==6*v)throw new Error(`Unsupported specular mipmaps number "${C.mipmaps.length}"`);const m=new Array(v);for(let O=0;O<v;O++){m[O]=new Array(6);for(let q=0;q<6;q++){const v=C.mipmaps[6*O+q];m[O][q]=new Uint8Array(B.buffer,B.byteOffset+C.specularDataPosition+v.position,v.length)}}return m}function U(B,q,C){const v=(C=y(C)).Je;if(!v)return Promise.resolve();B._lodGenerationScale=v.lodGenerationScale;return A(B,e(q,C),C.imageType)}function s(B,q,C,v,m,O,S,D,R,T,l){return new Promise(((z,W)=>{if(C){const C=q.createTexture(null,!0,!0,null,1,null,(B=>{W(B)}),B);null===v||void 0===v||v.onEffectCreatedObservable.addOnce((D=>{D.executeWhenCompiled((()=>{v.externalTextureSamplerBinding=!0,v.onApply=v=>{v._bindTexture("textureSampler",C),v.setFloat2("scale",1,q._features.needsInvertingBitmap&&B instanceof ImageBitmap?-1:1)},q.scenes.length&&(q.scenes[0].postProcessManager.directRender([v],T,!0,O,S),q.restoreDefaultFramebuffer(),C.dispose(),URL.revokeObjectURL(m),z())}))}))}else{if(q._uploadImageToTexture(l,B,O,S),D){const C=R[S];C&&q._uploadImageToTexture(C._texture,B,O,0)}z()}}))}async function A(B,q){let m=arguments.length>2&&void 0!==arguments[2]?arguments[2]:z;if(!v.f.IsExponentOfTwo(B.width))throw new Error("Texture size must be a power of two");const S=(0,O.h)(B.width)+1,l=B.getEngine();let W=!1,Z=!1,G=null,y=null,e=null;const U=l.getCaps();B.format=5,B.type=0,B.generateMipMaps=!0,B._cachedAnisotropicFilteringLevel=null,l.updateTextureSamplingMode(3,B),U.textureLOD?l._features.supportRenderAndCopyToLodForFloatTextures?U.textureHalfFloatRender&&U.textureHalfFloatLinearFiltering?(W=!0,B.type=2):U.textureFloatRender&&U.textureFloatLinearFiltering&&(W=!0,B.type=1):W=!1:(W=!1,Z=!0,e={});let A=0;if(W)l.isWebGPU?(A=1,await C.e(17).then(C.bind(C,12175))):await C.e(24).then(C.bind(C,12179)),G=new T.e("rgbdDecode","rgbdDecode",null,null,1,null,3,l,!1,void 0,B.type,void 0,null,!1,void 0,A),B._isRGBD=!1,B.invertY=!1,y=l.createRenderTargetCubeTexture(B.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:B.type,format:5});else if(B._isRGBD=!0,B.invertY=!0,Z){const q=3,C=B._lodGenerationScale,v=B._lodGenerationOffset;for(let m=0;m<q;m++){const O=(S-1)*C+v,T=v+(O-v)*(1-m/(q-1)),z=Math.round(Math.min(Math.max(T,0),O)),W=new D.e(l,2);W.isCube=!0,W.invertY=!0,W.generateMipMaps=!1,l.updateTextureSamplingMode(2,W);const Z=new R.c(null);switch(Z._isCube=!0,Z._texture=W,e[z]=Z,m){case 0:B._lodTextureLow=Z;break;case 1:B._lodTextureMid=Z;break;case 2:B._lodTextureHigh=Z}}}const r=[];for(let C=0;C<q.length;C++)for(let v=0;v<6;v++){const O=q[C][v],S=new Blob([O],{type:m}),D=URL.createObjectURL(S);let R;if(l._features.forceBitmapOverHTMLImageElement)R=l.createImageBitmap(S,{premultiplyAlpha:"none"}).then((q=>s(q,l,W,G,D,v,C,Z,e,y,B)));else{const q=new Image;q.src=D,R=new Promise(((m,O)=>{q.onload=()=>{s(q,l,W,G,D,v,C,Z,e,y,B).then((()=>m())).catch((B=>{O(B)}))},q.onerror=B=>{O(B)}}))}r.push(R)}if(q.length<S){let C;const v=Math.pow(2,S-1-q.length),m=v*v*4;switch(B.type){case 0:C=new Uint8Array(m);break;case 2:C=new Uint16Array(m);break;case 1:C=new Float32Array(m)}for(let O=q.length;O<S;O++)for(let q=0;q<6;q++)l._uploadArrayBufferViewToTexture(B,C,q,O)}return Promise.all(r).then((()=>{y&&(l._releaseTexture(B),y._swapAndDie(B)),G&&G.dispose(),Z&&(B._lodTextureHigh&&B._lodTextureHigh._texture&&(B._lodTextureHigh._texture.isReady=!0),B._lodTextureMid&&B._lodTextureMid._texture&&(B._lodTextureMid._texture.isReady=!0),B._lodTextureLow&&B._lodTextureLow._texture&&(B._lodTextureLow._texture.isReady=!0))}))}function r(B,q){const C=(q=y(q)).irradiance;if(!C)return;const v=new S.h;m.i.FromArrayToRef(C.x,0,v.x),m.i.FromArrayToRef(C.y,0,v.y),m.i.FromArrayToRef(C.z,0,v.z),m.i.FromArrayToRef(C.xx,0,v.xx),m.i.FromArrayToRef(C.yy,0,v.yy),m.i.FromArrayToRef(C.zz,0,v.zz),m.i.FromArrayToRef(C.yz,0,v.yz),m.i.FromArrayToRef(C.zx,0,v.zx),m.i.FromArrayToRef(C.xy,0,v.xy),B._sphericalPolynomial=v}function X(B,q,C,v,m){const O=A(B.getEngine().createRawCubeTexture(null,B.width,B.format,B.type,B.generateMipMaps,B.invertY,B.samplingMode,B._compression),q).then((()=>B));return B.onRebuildCallback=B=>({proxy:O,isReady:!0,isAsync:!0}),B._source=13,B._bufferViewArrayArray=q,B._lodGenerationScale=v,B._lodGenerationOffset=m,B._sphericalPolynomial=C,A(B,q).then((()=>(B.isReady=!0,B)))}},10241:(B,q,C)=>{C.d(q,{d:()=>O});var v=C(1478),m=C(1468);class O{static ExpandRGBDTexture(B){const q=B._texture;if(!q||!B.isRGBD)return;const m=q.getEngine(),O=m.getCaps(),S=q.isReady;let D=!1;O.textureHalfFloatRender&&O.textureHalfFloatLinearFiltering?(D=!0,q.type=2):O.textureFloatRender&&O.textureFloatLinearFiltering&&(D=!0,q.type=1),D&&(q.isReady=!1,q._isRGBD=!1,q.invertY=!1);const R=async()=>{const O=m.isWebGPU,S=O?1:0;q.isReady=!1,O?await Promise.all([C.e(17).then(C.bind(C,12175)),C.e(18).then(C.bind(C,12187))]):await Promise.all([C.e(24).then(C.bind(C,12179)),C.e(25).then(C.bind(C,12191))]);const D=new v.e("rgbdDecode","rgbdDecode",null,null,1,null,3,m,!1,void 0,q.type,void 0,null,!1,void 0,S);D.externalTextureSamplerBinding=!0;const R=m.createRenderTargetTexture(q.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:q.samplingMode,type:q.type,format:5});D.onEffectCreatedObservable.addOnce((C=>{C.executeWhenCompiled((()=>{D.onApply=B=>{B._bindTexture("textureSampler",q),B.setFloat2("scale",1,1)},B.va().postProcessManager.directRender([D],R,!0),m.restoreDefaultFramebuffer(),m._releaseTexture(q),D&&D.dispose(),R._swapAndDie(q),q.isReady=!0}))}))};D&&(S?R():B.onLoadObservable.addOnce(R))}static EncodeTextureToRGBD(B,q){let C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,m.b)("rgbdEncode",B,q,C,1,5)}}}}]);