"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6,7],{10678:(C,M,x)=>{var f=x(1464),T=x(1019);T.e.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(T.e.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=f.b.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((C=>{this._texture._sphericalPolynomial=C,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(C){this._texture&&(this._texture._sphericalPolynomial=C)},enumerable:!0,configurable:!0})},10682:(C,M,x)=>{x.r(M),x.d(M,{Dispose:()=>U,DumpData:()=>y,DumpDataAsync:()=>V,DumpFramebuffer:()=>Q,DumpTools:()=>O});var f=x(1482),T=x(1192),z=x(1015),s=x(1008);let S,m=null;async function Q(C,M,x,f){let T=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",z=arguments.length>5?arguments[5]:void 0,s=arguments.length>6?arguments[6]:void 0;const S=await x.readPixels(0,0,C,M);y(C,M,new Uint8Array(S.buffer),f,T,z,!0,void 0,s)}function V(C,M,x){let f=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",T=arguments.length>4?arguments[4]:void 0,z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],S=arguments.length>7?arguments[7]:void 0;return new Promise((m=>{y(C,M,x,(C=>m(C)),f,T,z,s,S)}))}function y(C,M,Q,V){let y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",O=arguments.length>5?arguments[5]:void 0,d=arguments.length>6&&void 0!==arguments[6]&&arguments[6],D=arguments.length>7&&void 0!==arguments[7]&&arguments[7],o=arguments.length>8?arguments[8]:void 0;(async function(){return m||(m=new Promise(((C,M)=>{let T,z=null;const m={kf:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(x.bind(x,1386)).then((Q=>{let{ThinEngine:V}=Q;try{T=new OffscreenCanvas(100,100),z=new V(T,!1,m)}catch(O){T=document.createElement("canvas"),z=new V(T,!1,m)}s.c.Instances.pop(),s.c.OnEnginesDisposedObservable.add((C=>{z&&C!==z&&!z.u&&0===s.c.Instances.length&&U()})),z.getCaps().parallelShaderCompile=void 0;const y=new f.c(z);x.e(32).then(x.bind(x,11355)).then((x=>{let{passPixelShader:s}=x;if(!z)return void M("Engine is not defined");const m=new f.e({Ib:z,name:s.name,fragmentShader:s.shader,samplerNames:["textureSampler"]});S={canvas:T,Ib:z,renderer:y,wrapper:m},C(S)}))})).catch(M)}))),await m})().then((x=>{if(x.Ib.setSize(C,M,!0),Q instanceof Float32Array){const C=new Uint8Array(Q.length);let M=Q.length;for(;M--;){const x=Q[M];C[M]=Math.round(255*(0,z.d)(x))}Q=C}const f=x.Ib.createRawTexture(Q,C,M,5,!1,!d,1);x.renderer.setViewport(),x.renderer.applyEffectWrapper(x.wrapper),x.wrapper.effect._bindTexture("textureSampler",f),x.renderer.draw(),D?T.i.ToBlob(x.canvas,(C=>{const M=new FileReader;M.onload=C=>{const M=C.target.result;V&&V(M)},M.readAsArrayBuffer(C)}),y,o):T.i.EncodeScreenshotCanvasData(x.canvas,V,y,O,o),f.dispose()}))}function U(){var C;S?(S.wrapper.dispose(),S.renderer.dispose(),S.Ib.dispose()):null===(C=m)||void 0===C||C.then((C=>{C.wrapper.dispose(),C.renderer.dispose(),C.Ib.dispose()}));m=null,S=null}const O={DumpData:y,DumpDataAsync:V,DumpFramebuffer:Q,Dispose:U};T.i.DumpData=y,T.i.DumpDataAsync=V,T.i.DumpFramebuffer=Q},10662:(C,M,x)=>{x.d(M,{e:()=>d,f:()=>L,i:()=>H,m:()=>j});var f=x(1192),T=x(978),z=x(1015),s=x(1434),S=x(1121),m=x(1019),Q=(x(1190),x(1480)),V=x(1078);x(10669),x(10678),x(10682);const y="image/png",U=2,O=[134,22,135,150,246,214,150,54];function d(C){const M=new DataView(C.buffer,C.byteOffset,C.byteLength);let x=0;for(let s=0;s<O.length;s++)if(M.getUint8(x++)!==O[s])return V.e.Error("Not a babylon environment map"),null;let f="",T=0;for(;T=M.getUint8(x++);)f+=String.fromCharCode(T);let z=JSON.parse(f);return z=D(z),z.Se&&(z.Se.specularDataPosition=x,z.Se.lodGenerationScale=z.Se.lodGenerationScale||.8),z}function D(C){if(C.version>U)throw new Error(`Unsupported babylon environment map version "${C.version}". Latest supported version is "${U}".`);return 2===C.version?C:C={...C,version:2,imageType:y}}function o(C,M){const x=(M=D(M)).Se;let f=Math.log2(M.width);if(f=Math.round(f)+1,x.mipmaps.length!==6*f)throw new Error(`Unsupported specular mipmaps number "${x.mipmaps.length}"`);const T=new Array(f);for(let z=0;z<f;z++){T[z]=new Array(6);for(let M=0;M<6;M++){const f=x.mipmaps[6*z+M];T[z][M]=new Uint8Array(C.buffer,C.byteOffset+x.specularDataPosition+f.position,f.length)}}return T}function L(C,M,x){const f=(x=D(x)).Se;if(!f)return Promise.resolve();C._lodGenerationScale=f.lodGenerationScale;return A(C,o(M,x),x.imageType)}function t(C,M,x,f,T,z,s,S,m,Q,V){return new Promise(((y,U)=>{if(x){const x=M.createTexture(null,!0,!0,null,1,null,(C=>{U(C)}),C);null===f||void 0===f||f.onEffectCreatedObservable.addOnce((S=>{S.executeWhenCompiled((()=>{f.externalTextureSamplerBinding=!0,f.onApply=f=>{f._bindTexture("textureSampler",x),f.setFloat2("scale",1,M._features.needsInvertingBitmap&&C instanceof ImageBitmap?-1:1)},M.scenes.length&&(M.scenes[0].postProcessManager.directRender([f],Q,!0,z,s),M.restoreDefaultFramebuffer(),x.dispose(),URL.revokeObjectURL(T),y())}))}))}else{if(M._uploadImageToTexture(V,C,z,s),S){const x=m[s];x&&M._uploadImageToTexture(x._texture,C,z,0)}y()}}))}async function A(C,M){let T=arguments.length>2&&void 0!==arguments[2]?arguments[2]:y;if(!f.i.IsExponentOfTwo(C.width))throw new Error("Texture size must be a power of two");const s=(0,z.m)(C.width)+1,V=C.getEngine();let U=!1,O=!1,d=null,D=null,o=null;const L=V.getCaps();C.format=5,C.type=0,C.generateMipMaps=!0,C._cachedAnisotropicFilteringLevel=null,V.updateTextureSamplingMode(3,C),L.textureLOD?V._features.supportRenderAndCopyToLodForFloatTextures?L.textureHalfFloatRender&&L.textureHalfFloatLinearFiltering?(U=!0,C.type=2):L.textureFloatRender&&L.textureFloatLinearFiltering&&(U=!0,C.type=1):U=!1:(U=!1,O=!0,o={});let A=0;if(U)V.isWebGPU?(A=1,await x.e(17).then(x.bind(x,12983))):await x.e(24).then(x.bind(x,12991)),d=new Q.c("rgbdDecode","rgbdDecode",null,null,1,null,3,V,!1,void 0,C.type,void 0,null,!1,void 0,A),C._isRGBD=!1,C.invertY=!1,D=V.createRenderTargetCubeTexture(C.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:C.type,format:5});else if(C._isRGBD=!0,C.invertY=!0,O){const M=3,x=C._lodGenerationScale,f=C._lodGenerationOffset;for(let T=0;T<M;T++){const z=(s-1)*x+f,Q=f+(z-f)*(1-T/(M-1)),y=Math.round(Math.min(Math.max(Q,0),z)),U=new S.c(V,2);U.isCube=!0,U.invertY=!0,U.generateMipMaps=!1,V.updateTextureSamplingMode(2,U);const O=new m.e(null);switch(O._isCube=!0,O._texture=U,o[y]=O,T){case 0:C._lodTextureLow=O;break;case 1:C._lodTextureMid=O;break;case 2:C._lodTextureHigh=O}}}const H=[];for(let x=0;x<M.length;x++)for(let f=0;f<6;f++){const z=M[x][f],s=new Blob([z],{type:T}),S=URL.createObjectURL(s);let m;if(V._features.forceBitmapOverHTMLImageElement)m=V.createImageBitmap(s,{premultiplyAlpha:"none"}).then((M=>t(M,V,U,d,S,f,x,O,o,D,C)));else{const M=new Image;M.src=S,m=new Promise(((T,z)=>{M.onload=()=>{t(M,V,U,d,S,f,x,O,o,D,C).then((()=>T())).catch((C=>{z(C)}))},M.onerror=C=>{z(C)}}))}H.push(m)}if(M.length<s){let x;const f=Math.pow(2,s-1-M.length),T=f*f*4;switch(C.type){case 0:x=new Uint8Array(T);break;case 2:x=new Uint16Array(T);break;case 1:x=new Float32Array(T)}for(let z=M.length;z<s;z++)for(let M=0;M<6;M++)V._uploadArrayBufferViewToTexture(C,x,M,z)}return Promise.all(H).then((()=>{D&&(V._releaseTexture(C),D._swapAndDie(C)),d&&d.dispose(),O&&(C._lodTextureHigh&&C._lodTextureHigh._texture&&(C._lodTextureHigh._texture.isReady=!0),C._lodTextureMid&&C._lodTextureMid._texture&&(C._lodTextureMid._texture.isReady=!0),C._lodTextureLow&&C._lodTextureLow._texture&&(C._lodTextureLow._texture.isReady=!0))}))}function H(C,M){const x=(M=D(M)).irradiance;if(!x)return;const f=new s.e;T.m.FromArrayToRef(x.x,0,f.x),T.m.FromArrayToRef(x.y,0,f.y),T.m.FromArrayToRef(x.z,0,f.z),T.m.FromArrayToRef(x.xx,0,f.xx),T.m.FromArrayToRef(x.yy,0,f.yy),T.m.FromArrayToRef(x.zz,0,f.zz),T.m.FromArrayToRef(x.yz,0,f.yz),T.m.FromArrayToRef(x.zx,0,f.zx),T.m.FromArrayToRef(x.xy,0,f.xy),C._sphericalPolynomial=f}function j(C,M,x,f,T){const z=A(C.getEngine().createRawCubeTexture(null,C.width,C.format,C.type,C.generateMipMaps,C.invertY,C.samplingMode,C._compression),M).then((()=>C));return C.onRebuildCallback=C=>({proxy:z,isReady:!0,isAsync:!0}),C._source=13,C._bufferViewArrayArray=M,C._lodGenerationScale=f,C._lodGenerationOffset=T,C._sphericalPolynomial=x,A(C,M).then((()=>(C.isReady=!0,C)))}},10669:(C,M,x)=>{x.d(M,{b:()=>z});var f=x(1480),T=x(1471);class z{static ExpandRGBDTexture(C){const M=C._texture;if(!M||!C.isRGBD)return;const T=M.getEngine(),z=T.getCaps(),s=M.isReady;let S=!1;z.textureHalfFloatRender&&z.textureHalfFloatLinearFiltering?(S=!0,M.type=2):z.textureFloatRender&&z.textureFloatLinearFiltering&&(S=!0,M.type=1),S&&(M.isReady=!1,M._isRGBD=!1,M.invertY=!1);const m=async()=>{const z=T.isWebGPU,s=z?1:0;M.isReady=!1,z?await Promise.all([x.e(17).then(x.bind(x,12983)),x.e(18).then(x.bind(x,12995))]):await Promise.all([x.e(24).then(x.bind(x,12991)),x.e(25).then(x.bind(x,12998))]);const S=new f.c("rgbdDecode","rgbdDecode",null,null,1,null,3,T,!1,void 0,M.type,void 0,null,!1,void 0,s);S.externalTextureSamplerBinding=!0;const m=T.createRenderTargetTexture(M.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:M.samplingMode,type:M.type,format:5});S.onEffectCreatedObservable.addOnce((x=>{x.executeWhenCompiled((()=>{S.onApply=C=>{C._bindTexture("textureSampler",M),C.setFloat2("scale",1,1)},C.va().postProcessManager.directRender([S],m,!0),T.restoreDefaultFramebuffer(),T._releaseTexture(M),S&&S.dispose(),m._swapAndDie(M),M.isReady=!0}))}))};S&&(s?m():C.onLoadObservable.addOnce(m))}static EncodeTextureToRGBD(C,M){let x=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,T.d)("rgbdEncode",C,M,x,1,5)}}}}]);