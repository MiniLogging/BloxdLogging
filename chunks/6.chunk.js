/*! For license information please see 18k1w.6.fb4cc51e.chunk.js.LICENSE.txt */
"use strict";(self.rvold1i0ywi=self.rvold1i0ywi||[]).push([[6],{11119:(F,b,Q)=>{Q.r(b),Q.d(b,{getAnalytics:()=>JF,getGoogleAnalyticsClientId:()=>HF,initializeAnalytics:()=>IF,isSupported:()=>MF,logEvent:()=>Qb,setAnalyticsCollectionEnabled:()=>Fb,setConsent:()=>Cb,setCurrentScreen:()=>rF,setDefaultEventParameters:()=>bb,setUserId:()=>BF,setUserProperties:()=>dF,settings:()=>uF});var C=Q(11095),z=Q(11113),t=Q(11108),g=Q(11100);let W,Z;const q=new WeakMap,G=new WeakMap,K=new WeakMap,e=new WeakMap,N=new WeakMap;let y={get(F,b,Q){if(F instanceof IDBTransaction){if("done"===b)return G.get(F);if("objectStoreNames"===b)return F.objectStoreNames||K.get(F);if("store"===b)return Q.objectStoreNames[1]?void 0:Q.objectStore(Q.objectStoreNames[0])}return X(F[b])},set:(F,b,Q)=>(F[b]=Q,!0),has:(F,b)=>F instanceof IDBTransaction&&("done"===b||"store"===b)||b in F};function E(F){return F!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(Z||(Z=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(F)?function(){for(var b=arguments.length,Q=new Array(b),C=0;C<b;C++)Q[C]=arguments[C];return F.apply(L(this),Q),X(q.get(this))}:function(){for(var b=arguments.length,Q=new Array(b),C=0;C<b;C++)Q[C]=arguments[C];return X(F.apply(L(this),Q))}:function(b){for(var Q=arguments.length,C=new Array(Q>1?Q-1:0),z=1;z<Q;z++)C[z-1]=arguments[z];const t=F.call(L(this),b,...C);return K.set(t,b.sort?b.sort():[b]),X(t)}}function c(F){return"function"===typeof F?E(F):(F instanceof IDBTransaction&&function(F){if(G.has(F))return;const b=new Promise(((b,Q)=>{const C=()=>{F.removeEventListener("complete",z),F.removeEventListener("error",t),F.removeEventListener("abort",t)},z=()=>{b(),C()},t=()=>{Q(F.error||new DOMException("AbortError","AbortError")),C()};F.addEventListener("complete",z),F.addEventListener("error",t),F.addEventListener("abort",t)}));G.set(F,b)}(F),b=F,(W||(W=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((F=>b instanceof F))?new Proxy(F,y):F);var b}function X(F){if(F instanceof IDBRequest)return function(F){const b=new Promise(((b,Q)=>{const C=()=>{F.removeEventListener("success",z),F.removeEventListener("error",t)},z=()=>{b(X(F.result)),C()},t=()=>{Q(F.error),C()};F.addEventListener("success",z),F.addEventListener("error",t)}));return b.then((b=>{b instanceof IDBCursor&&q.set(b,F)})).catch((()=>{})),N.set(b,F),b}(F);if(e.has(F))return e.get(F);const b=c(F);return b!==F&&(e.set(F,b),N.set(b,F)),b}const L=F=>N.get(F);const i=["get","getKey","getAll","getAllKeys","count"],f=["put","add","delete","clear"],k=new Map;function m(F,b){if(!(F instanceof IDBDatabase)||b in F||"string"!==typeof b)return;if(k.get(b))return k.get(b);const Q=b.replace(/FromIndex$/,""),C=b!==Q,z=f.includes(Q);if(!(Q in(C?IDBIndex:IDBObjectStore).prototype)||!z&&!i.includes(Q))return;const t=async function(F){const b=this.transaction(F,z?"readwrite":"readonly");let t=b.store;for(var g=arguments.length,W=new Array(g>1?g-1:0),Z=1;Z<g;Z++)W[Z-1]=arguments[Z];return C&&(t=t.index(W.shift())),(await Promise.all([t[Q](...W),z&&b.done]))[0]};return k.set(b,t),t}y=(F=>({...F,get:(b,Q,C)=>m(b,Q)||F.get(b,Q,C),has:(b,Q)=>!!m(b,Q)||F.has(b,Q)}))(y);const R="@firebase/installations",p="0.6.4",D=1e4,P=`w:${p}`,n="FIS_v2",j=36e5,w={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},Y=new t.f("installations","Installations",w);function s(F){return F instanceof t.h&&F.code.includes("request-failed")}function V(F){let{projectId:b}=F;return`https://firebaseinstallations.googleapis.com/v1/projects/${b}/installations`}function h(F){return{token:F.token,requestStatus:2,expiresIn:(b=F.expiresIn,Number(b.replace("s","000"))),creationTime:Date.now()};var b}async function l(F,b){const Q=(await b.json()).error;return Y.create("request-failed",{requestName:F,serverCode:Q.code,serverMessage:Q.message,serverStatus:Q.status})}function T(F){let{apiKey:b}=F;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":b})}function o(F,b){let{refreshToken:Q}=b;const C=T(F);return C.append("Authorization",function(F){return`${n} ${F}`}(Q)),C}async function S(F){const b=await F();return b.status>=500&&b.status<600?F():b}function O(F){return new Promise((b=>{setTimeout(b,F)}))}const x=/^[cdef][\w-]{21}$/;function a(){try{const F=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(F),F[0]=112+F[0]%16;const b=function(F){const b=(Q=F,btoa(String.fromCharCode(...Q)).replace(/\+/g,"-").replace(/\//g,"_"));var Q;return b.substr(0,22)}(F);return x.test(b)?b:""}catch(F){return""}}function A(F){return`${F.appName}!${F.appId}`}const U=new Map;function u(F,b){const Q=A(F);v(Q,b),function(F,b){const Q=I();Q&&Q.postMessage({key:F,fid:b});M()}(Q,b)}function v(F,b){const Q=U.get(F);if(Q)for(const C of Q)C(b)}let J=null;function I(){return!J&&"BroadcastChannel"in self&&(J=new BroadcastChannel("[Firebase] FID Change"),J.onmessage=F=>{v(F.data.key,F.data.fid)}),J}function M(){0===U.size&&J&&(J.close(),J=null)}const r="firebase-installations-store";let H=null;function B(){return H||(H=function(F,b){let{blocked:Q,upgrade:C,blocking:z,terminated:t}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const g=indexedDB.open(F,b),W=X(g);return C&&g.addEventListener("upgradeneeded",(F=>{C(X(g.result),F.oldVersion,F.newVersion,X(g.transaction))})),Q&&g.addEventListener("blocked",(()=>Q())),W.then((F=>{t&&F.addEventListener("close",(()=>t())),z&&F.addEventListener("versionchange",(()=>z()))})).catch((()=>{})),W}("firebase-installations-database",1,{upgrade:(F,b)=>{if(0===b)F.createObjectStore(r)}})),H}async function d(F,b){const Q=A(F),C=(await B()).transaction(r,"readwrite"),z=C.objectStore(r),t=await z.get(Q);return await z.put(b,Q),await C.done,t&&t.fid===b.fid||u(F,b.fid),b}async function FF(F){const b=A(F),Q=(await B()).transaction(r,"readwrite");await Q.objectStore(r).delete(b),await Q.done}async function bF(F,b){const Q=A(F),C=(await B()).transaction(r,"readwrite"),z=C.objectStore(r),t=await z.get(Q),g=b(t);return void 0===g?await z.delete(Q):await z.put(g,Q),await C.done,!g||t&&t.fid===g.fid||u(F,g.fid),g}async function QF(F){let b;const Q=await bF(F.appConfig,(Q=>{const C=function(F){const b=F||{fid:a(),registrationStatus:0};return tF(b)}(Q),z=function(F,b){if(0===b.registrationStatus){if(!navigator.onLine){return{installationEntry:b,registrationPromise:Promise.reject(Y.create("app-offline"))}}const Q={fid:b.fid,registrationStatus:1,registrationTime:Date.now()},C=async function(F,b){try{const Q=await async function(F,b){let{appConfig:Q,heartbeatServiceProvider:C}=F,{fid:z}=b;const t=V(Q),g=T(Q),W=C.getImmediate({optional:!0});if(W){const F=await W.getHeartbeatsHeader();F&&g.append("x-firebase-client",F)}const Z={fid:z,authVersion:n,appId:Q.appId,sdkVersion:P},q={method:"POST",headers:g,body:JSON.stringify(Z)},G=await S((()=>fetch(t,q)));if(G.ok){const F=await G.json();return{fid:F.fid||z,registrationStatus:2,refreshToken:F.refreshToken,authToken:h(F.authToken)}}throw await l("Create Installation",G)}(F,b);return d(F.appConfig,Q)}catch(Q){throw s(Q)&&409===Q.customData.serverCode?await FF(F.appConfig):await d(F.appConfig,{fid:b.fid,registrationStatus:0}),Q}}(F,Q);return{installationEntry:Q,registrationPromise:C}}return 1===b.registrationStatus?{installationEntry:b,registrationPromise:CF(F)}:{installationEntry:b}}(F,C);return b=z.registrationPromise,z.installationEntry}));return""===Q.fid?{installationEntry:await b}:{installationEntry:Q,registrationPromise:b}}async function CF(F){let b=await zF(F.appConfig);for(;1===b.registrationStatus;)await O(100),b=await zF(F.appConfig);if(0===b.registrationStatus){const{installationEntry:b,registrationPromise:Q}=await QF(F);return Q||b}return b}function zF(F){return bF(F,(F=>{if(!F)throw Y.create("installation-not-found");return tF(F)}))}function tF(F){return 1===(b=F).registrationStatus&&b.registrationTime+D<Date.now()?{fid:F.fid,registrationStatus:0}:F;var b}async function gF(F,b){let{appConfig:Q,heartbeatServiceProvider:C}=F;const z=function(F,b){let{fid:Q}=b;return`${V(F)}/${Q}/authTokens:generate`}(Q,b),t=o(Q,b),g=C.getImmediate({optional:!0});if(g){const F=await g.getHeartbeatsHeader();F&&t.append("x-firebase-client",F)}const W={installation:{sdkVersion:P,appId:Q.appId}},Z={method:"POST",headers:t,body:JSON.stringify(W)},q=await S((()=>fetch(z,Z)));if(q.ok){return h(await q.json())}throw await l("Generate Auth Token",q)}async function WF(F){let b,Q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const C=await bF(F.appConfig,(C=>{if(!qF(C))throw Y.create("not-registered");const z=C.authToken;if(!Q&&function(F){return 2===F.requestStatus&&!function(F){const b=Date.now();return b<F.creationTime||F.creationTime+F.expiresIn<b+j}(F)}(z))return C;if(1===z.requestStatus)return b=async function(F,b){let Q=await ZF(F.appConfig);for(;1===Q.authToken.requestStatus;)await O(100),Q=await ZF(F.appConfig);const C=Q.authToken;return 0===C.requestStatus?WF(F,b):C}(F,Q),C;{if(!navigator.onLine)throw Y.create("app-offline");const Q=function(F){const b={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},F),{authToken:b})}(C);return b=async function(F,b){try{const Q=await gF(F,b),C=Object.assign(Object.assign({},b),{authToken:Q});return await d(F.appConfig,C),Q}catch(Q){if(!s(Q)||401!==Q.customData.serverCode&&404!==Q.customData.serverCode){const Q=Object.assign(Object.assign({},b),{authToken:{requestStatus:0}});await d(F.appConfig,Q)}else await FF(F.appConfig);throw Q}}(F,Q),Q}}));return b?await b:C.authToken}function ZF(F){return bF(F,(F=>{if(!qF(F))throw Y.create("not-registered");const b=F.authToken;return 1===(Q=b).requestStatus&&Q.requestTime+D<Date.now()?Object.assign(Object.assign({},F),{authToken:{requestStatus:0}}):F;var Q}))}function qF(F){return void 0!==F&&2===F.registrationStatus}async function GF(F){let b=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const Q=F;await async function(F){const{registrationPromise:b}=await QF(F);b&&await b}(Q);return(await WF(Q,b)).token}function KF(F){return Y.create("missing-app-config-values",{valueName:F})}const eF="installations",NF=F=>{const b=F.getProvider("app").getImmediate(),Q=function(F){if(!F||!F.options)throw KF("App Configuration");if(!F.name)throw KF("App Name");const b=["projectId","apiKey","appId"];for(const Q of b)if(!F.options[Q])throw KF(Q);return{appName:F.name,projectId:F.options.projectId,apiKey:F.options.apiKey,appId:F.options.appId}}(b);return{app:b,appConfig:Q,heartbeatServiceProvider:(0,C.w)(b,"heartbeat"),_delete:()=>Promise.resolve()}},yF=F=>{const b=F.getProvider("app").getImmediate(),Q=(0,C.w)(b,eF).getImmediate();return{getId:()=>async function(F){const b=F,{installationEntry:Q,registrationPromise:C}=await QF(b);return C?C.catch(console.error):WF(b).catch(console.error),Q.fid}(Q),getToken:F=>GF(Q,F)}};(0,C.x)(new g.c(eF,NF,"PUBLIC")),(0,C.x)(new g.c("installations-internal",yF,"PRIVATE")),(0,C.S)(R,p),(0,C.S)(R,p,"esm2017");const EF="analytics",cF="https://www.googletagmanager.com/gtag/js",XF=new z.g("@firebase/analytics"),LF={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},iF=new t.f("analytics","Analytics",LF);function fF(F){if(!F.startsWith(cF)){const b=iF.create("invalid-gtag-resource",{gtagURL:F});return XF.warn(b.message),""}return F}function kF(F){return Promise.all(F.map((F=>F.catch((F=>F)))))}function mF(F,b){const Q=function(F,b){let Q;return window.trustedTypes&&(Q=window.trustedTypes.createPolicy(F,b)),Q}("firebase-js-sdk-policy",{createScriptURL:fF}),C=document.createElement("script"),z=`${cF}?l=${F}&id=${b}`;C.src=Q?null===Q||void 0===Q?void 0:Q.createScriptURL(z):z,C.async=!0,document.head.appendChild(C)}function RF(F,b,Q,C){return async function(z){try{for(var t=arguments.length,g=new Array(t>1?t-1:0),W=1;W<t;W++)g[W-1]=arguments[W];if("event"===z){const[C,z]=g;await async function(F,b,Q,C,z){try{let t=[];if(z&&z.send_to){let F=z.send_to;Array.isArray(F)||(F=[F]);const C=await kF(Q);for(const Q of F){const F=C.find((F=>F.measurementId===Q)),z=F&&b[F.appId];if(!z){t=[];break}t.push(z)}}0===t.length&&(t=Object.values(b)),await Promise.all(t),F("event",C,z||{})}catch(t){XF.error(t)}}(F,b,Q,C,z)}else if("config"===z){const[z,t]=g;await async function(F,b,Q,C,z,t){const g=C[z];try{if(g)await b[g];else{const F=(await kF(Q)).find((F=>F.measurementId===z));F&&await b[F.appId]}}catch(W){XF.error(W)}F("config",z,t)}(F,b,Q,C,z,t)}else if("consent"===z){const[b]=g;F("consent","update",b)}else if("get"===z){const[b,Q,C]=g;F("get",b,Q,C)}else if("set"===z){const[b]=g;F("set",b)}else F(z,...g)}catch(Z){XF.error(Z)}}}const pF=new class{constructor(){let F=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=F,this.intervalMillis=b}getThrottleMetadata(F){return this.throttleMetadata[F]}setThrottleMetadata(F,b){this.throttleMetadata[F]=b}deleteThrottleMetadata(F){delete this.throttleMetadata[F]}};function DF(F){return new Headers({Accept:"application/json","x-goog-api-key":F})}async function PF(F){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:pF,Q=arguments.length>2?arguments[2]:void 0;const{appId:C,apiKey:z,measurementId:t}=F.options;if(!C)throw iF.create("no-app-id");if(!z){if(t)return{measurementId:t,appId:C};throw iF.create("no-api-key")}const g=b.getThrottleMetadata(C)||{backoffCount:0,throttleEndTimeMillis:Date.now()},W=new jF;return setTimeout((async()=>{W.abort()}),void 0!==Q?Q:6e4),nF({appId:C,apiKey:z,measurementId:t},g,W,b)}async function nF(F,b,Q){let{throttleEndTimeMillis:C,backoffCount:z}=b,g=arguments.length>3&&void 0!==arguments[3]?arguments[3]:pF;var W;const{appId:Z,measurementId:q}=F;try{await function(F,b){return new Promise(((Q,C)=>{const z=Math.max(b-Date.now(),0),t=setTimeout(Q,z);F.addEventListener((()=>{clearTimeout(t),C(iF.create("fetch-throttle",{throttleEndTimeMillis:b}))}))}))}(Q,C)}catch(G){if(q)return XF.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${q} provided in the "measurementId" field in the local Firebase config. [${null===G||void 0===G?void 0:G.message}]`),{appId:Z,measurementId:q};throw G}try{const b=await async function(F){var b;const{appId:Q,apiKey:C}=F,z={method:"GET",headers:DF(C)},t="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",Q),g=await fetch(t,z);if(200!==g.status&&304!==g.status){let F="";try{const Q=await g.json();(null===(b=Q.error)||void 0===b?void 0:b.message)&&(F=Q.error.message)}catch(W){}throw iF.create("config-fetch-failed",{httpStatus:g.status,responseMessage:F})}return g.json()}(F);return g.deleteThrottleMetadata(Z),b}catch(G){const b=G;if(!function(F){if(!(F instanceof t.h)||!F.customData)return!1;const b=Number(F.customData.httpStatus);return 429===b||500===b||503===b||504===b}(b)){if(g.deleteThrottleMetadata(Z),q)return XF.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${q} provided in the "measurementId" field in the local Firebase config. [${null===b||void 0===b?void 0:b.message}]`),{appId:Z,measurementId:q};throw G}const C=503===Number(null===(W=null===b||void 0===b?void 0:b.customData)||void 0===W?void 0:W.httpStatus)?(0,t.r)(z,g.intervalMillis,30):(0,t.r)(z,g.intervalMillis),K={throttleEndTimeMillis:Date.now()+C,backoffCount:z+1};return g.setThrottleMetadata(Z,K),XF.debug(`Calling attemptFetch again in ${C} millis`),nF(F,K,Q,g)}}class jF{constructor(){this.listeners=[]}addEventListener(F){this.listeners.push(F)}abort(){this.listeners.forEach((F=>F()))}}let wF,YF;function sF(F){YF=F}function VF(F){wF=F}async function hF(F,b,Q,C,z,g,W){var Z;const q=PF(F);q.then((b=>{Q[b.measurementId]=b.appId,F.options.measurementId&&b.measurementId!==F.options.measurementId&&XF.warn(`The measurement ID in the local Firebase config (${F.options.measurementId}) does not match the measurement ID fetched from the server (${b.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((F=>XF.error(F))),b.push(q);const G=async function(){if(!(0,t.V)())return XF.warn(iF.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,t.eb)()}catch(F){return XF.warn(iF.create("indexeddb-unavailable",{errorInfo:null===F||void 0===F?void 0:F.toString()}).message),!1}return!0}().then((F=>F?C.getId():void 0)),[K,e]=await Promise.all([q,G]);(function(F){const b=window.document.getElementsByTagName("script");for(const Q of Object.values(b))if(Q.src&&Q.src.includes(cF)&&Q.src.includes(F))return Q;return null})(g)||mF(g,K.measurementId),YF&&(z("consent","default",YF),sF(void 0)),z("js",new Date);const N=null!==(Z=null===W||void 0===W?void 0:W.config)&&void 0!==Z?Z:{};return N.origin="firebase",N.update=!0,null!=e&&(N.firebase_id=e),z("config",K.measurementId,N),wF&&(z("set",wF),VF(void 0)),K.measurementId}class lF{constructor(F){this.app=F}_delete(){return delete TF[this.app.options.appId],Promise.resolve()}}let TF={},oF=[];const SF={};let OF,xF,aF="dataLayer",AF="gtag",UF=!1;function uF(F){if(UF)throw iF.create("already-initialized");F.dataLayerName&&(aF=F.dataLayerName),F.gtagName&&(AF=F.gtagName)}function vF(F,b,Q){!function(){const F=[];if((0,t.M)()&&F.push("This is a browser extension environment."),(0,t.i)()||F.push("Cookies are not available."),F.length>0){const b=F.map(((F,b)=>`(${b+1}) ${F}`)).join(" "),Q=iF.create("invalid-analytics-context",{errorInfo:b});XF.warn(Q.message)}}();const C=F.options.appId;if(!C)throw iF.create("no-app-id");if(!F.options.apiKey){if(!F.options.measurementId)throw iF.create("no-api-key");XF.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${F.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=TF[C])throw iF.create("already-exists",{id:C});if(!UF){!function(F){let b=[];Array.isArray(window[F])?b=window[F]:window[F]=b}(aF);const{wrappedGtag:F,gtagCore:b}=function(F,b,Q,C,z){let t=function(){for(var F=arguments.length,b=new Array(F),Q=0;Q<F;Q++)b[Q]=arguments[Q];window[C].push(arguments)};return window[z]&&"function"===typeof window[z]&&(t=window[z]),window[z]=RF(t,F,b,Q),{gtagCore:t,wrappedGtag:window[z]}}(TF,oF,SF,aF,AF);xF=F,OF=b,UF=!0}TF[C]=hF(F,oF,SF,b,OF,aF,Q);return new lF(F)}function JF(){let F=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,C.J)();F=(0,t.J)(F);const b=(0,C.w)(F,EF);return b.isInitialized()?b.getImmediate():IF(F)}function IF(F){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const Q=(0,C.w)(F,EF);if(Q.isInitialized()){const F=Q.getImmediate();if((0,t.x)(b,Q.getOptions()))return F;throw iF.create("already-initialized")}return Q.initialize({options:b})}async function MF(){if((0,t.M)())return!1;if(!(0,t.i)())return!1;if(!(0,t.V)())return!1;try{return await(0,t.eb)()}catch(F){return!1}}function rF(F,b,Q){F=(0,t.J)(F),async function(F,b,Q,C){if(C&&C.global)return F("set",{screen_name:Q}),Promise.resolve();F("config",await b,{update:!0,screen_name:Q})}(xF,TF[F.app.options.appId],b,Q).catch((F=>XF.error(F)))}async function HF(F){return F=(0,t.J)(F),async function(F,b){const Q=await b;return new Promise(((b,C)=>{F("get",Q,"client_id",(F=>{F||C(iF.create("no-client-id")),b(F)}))}))}(xF,TF[F.app.options.appId])}function BF(F,b,Q){F=(0,t.J)(F),async function(F,b,Q,C){if(C&&C.global)return F("set",{user_id:Q}),Promise.resolve();F("config",await b,{update:!0,user_id:Q})}(xF,TF[F.app.options.appId],b,Q).catch((F=>XF.error(F)))}function dF(F,b,Q){F=(0,t.J)(F),async function(F,b,Q,C){if(C&&C.global){const b={};for(const F of Object.keys(Q))b[`user_properties.${F}`]=Q[F];return F("set",b),Promise.resolve()}F("config",await b,{update:!0,user_properties:Q})}(xF,TF[F.app.options.appId],b,Q).catch((F=>XF.error(F)))}function Fb(F,b){F=(0,t.J)(F),async function(F,b){const Q=await F;window[`ga-disable-${Q}`]=!b}(TF[F.app.options.appId],b).catch((F=>XF.error(F)))}function bb(F){xF?xF("set",F):VF(F)}function Qb(F,b,Q,C){F=(0,t.J)(F),async function(F,b,Q,C,z){if(z&&z.global)F("event",Q,C);else{const z=await b;F("event",Q,Object.assign(Object.assign({},C),{send_to:z}))}}(xF,TF[F.app.options.appId],b,Q,C).catch((F=>XF.error(F)))}function Cb(F){xF?xF("consent","update",F):sF(F)}const zb="@firebase/analytics",tb="0.10.0";(0,C.x)(new g.c(EF,((F,b)=>{let{options:Q}=b;return vF(F.getProvider("app").getImmediate(),F.getProvider("installations-internal").getImmediate(),Q)}),"PUBLIC")),(0,C.x)(new g.c("analytics-internal",(function(F){try{const b=F.getProvider(EF).getImmediate();return{logEvent:(F,Q,C)=>Qb(b,F,Q,C)}}catch(b){throw iF.create("interop-component-reg-failed",{reason:b})}}),"PRIVATE")),(0,C.S)(zb,tb),(0,C.S)(zb,tb,"esm2017")}}]);