"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6,7],{10420:(A,I,y)=>{var X=y(1538),F=y(1058);F.d.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(F.d.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=X.e.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((A=>{this._texture._sphericalPolynomial=A,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(A){this._texture&&(this._texture._sphericalPolynomial=A)},enumerable:!0,configurable:!0})},10423:(A,I,y)=>{y.r(I),y.d(I,{Dispose:()=>f,DumpData:()=>P,DumpDataAsync:()=>U,DumpFramebuffer:()=>k,DumpTools:()=>z});var X=y(1564),F=y(1213),M=y(1055),g=y(1049);let d,V=null;async function k(A,I,y,X){let F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",M=arguments.length>5?arguments[5]:void 0,g=arguments.length>6?arguments[6]:void 0;const d=await y.readPixels(0,0,A,I);P(A,I,new Uint8Array(d.buffer),X,F,M,!0,void 0,g)}function U(A,I,y){let X=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",F=arguments.length>4?arguments[4]:void 0,M=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6&&void 0!==arguments[6]&&arguments[6],d=arguments.length>7?arguments[7]:void 0;return new Promise((V=>{P(A,I,y,(A=>V(A)),X,F,M,g,d)}))}function P(A,I,k,U){let P=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",z=arguments.length>5?arguments[5]:void 0,l=arguments.length>6&&void 0!==arguments[6]&&arguments[6],u=arguments.length>7&&void 0!==arguments[7]&&arguments[7],K=arguments.length>8?arguments[8]:void 0;(async function(){return V||(V=new Promise(((A,I)=>{let F,M=null;const V={if:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(y.bind(y,1453)).then((k=>{let{ThinEngine:U}=k;try{F=new OffscreenCanvas(100,100),M=new U(F,!1,V)}catch(z){F=document.createElement("canvas"),M=new U(F,!1,V)}g.c.Instances.pop(),g.c.OnEnginesDisposedObservable.add((A=>{M&&A!==M&&!M.u&&0===g.c.Instances.length&&f()})),M.getCaps().parallelShaderCompile=void 0;const P=new X.e(M);y.e(32).then(y.bind(y,11055)).then((y=>{let{passPixelShader:g}=y;if(!M)return void I("Engine is not defined");const V=new X.i({Nb:M,name:g.name,fragmentShader:g.shader,samplerNames:["textureSampler"]});d={canvas:F,Nb:M,renderer:P,wrapper:V},A(d)}))})).catch(I)}))),await V})().then((y=>{if(y.Nb.setSize(A,I,!0),k instanceof Float32Array){const A=new Uint8Array(k.length);let I=k.length;for(;I--;){const y=k[I];A[I]=Math.round(255*(0,M.b)(y))}k=A}const X=y.Nb.createRawTexture(k,A,I,5,!1,!l,1);y.renderer.setViewport(),y.renderer.applyEffectWrapper(y.wrapper),y.wrapper.effect._bindTexture("textureSampler",X),y.renderer.draw(),u?F.e.ToBlob(y.canvas,(A=>{const I=new FileReader;I.onload=A=>{const I=A.target.result;U&&U(I)},I.readAsArrayBuffer(A)}),P,K):F.e.EncodeScreenshotCanvasData(y.canvas,U,P,z,K),X.dispose()}))}function f(){var A;d?(d.wrapper.dispose(),d.renderer.dispose(),d.Nb.dispose()):null===(A=V)||void 0===A||A.then((A=>{A.wrapper.dispose(),A.renderer.dispose(),A.Nb.dispose()}));V=null,d=null}const z={DumpData:P,DumpDataAsync:U,DumpFramebuffer:k,Dispose:f};F.e.DumpData=P,F.e.DumpDataAsync=U,F.e.DumpFramebuffer=k},10405:(A,I,y)=>{y.d(I,{c:()=>l,d:()=>x,e:()=>R,h:()=>Z});var X=y(1213),F=y(1021),M=y(1055),g=y(1505),d=y(1139),V=y(1058),k=(y(1208),y(1556)),U=y(1098);y(10411),y(10420),y(10423);const P="image/png",f=2,z=[134,22,135,150,246,214,150,54];function l(A){const I=new DataView(A.buffer,A.byteOffset,A.byteLength);let y=0;for(let g=0;g<z.length;g++)if(I.getUint8(y++)!==z[g])return U.e.Error("Not a babylon environment map"),null;let X="",F=0;for(;F=I.getUint8(y++);)X+=String.fromCharCode(F);let M=JSON.parse(X);return M=u(M),M.Re&&(M.Re.specularDataPosition=y,M.Re.lodGenerationScale=M.Re.lodGenerationScale||.8),M}function u(A){if(A.version>f)throw new Error(`Unsupported babylon environment map version "${A.version}". Latest supported version is "${f}".`);return 2===A.version?A:A={...A,version:2,imageType:P}}function K(A,I){const y=(I=u(I)).Re;let X=Math.log2(I.width);if(X=Math.round(X)+1,y.mipmaps.length!==6*X)throw new Error(`Unsupported specular mipmaps number "${y.mipmaps.length}"`);const F=new Array(X);for(let M=0;M<X;M++){F[M]=new Array(6);for(let I=0;I<6;I++){const X=y.mipmaps[6*M+I];F[M][I]=new Uint8Array(A.buffer,A.byteOffset+y.specularDataPosition+X.position,X.length)}}return F}function x(A,I,y){const X=(y=u(y)).Re;if(!X)return Promise.resolve();A._lodGenerationScale=X.lodGenerationScale;return N(A,K(I,y),y.imageType)}function t(A,I,y,X,F,M,g,d,V,k,U){return new Promise(((P,f)=>{if(y){const y=I.createTexture(null,!0,!0,null,1,null,(A=>{f(A)}),A);null===X||void 0===X||X.onEffectCreatedObservable.addOnce((d=>{d.executeWhenCompiled((()=>{X.externalTextureSamplerBinding=!0,X.onApply=X=>{X._bindTexture("textureSampler",y),X.setFloat2("scale",1,I._features.needsInvertingBitmap&&A instanceof ImageBitmap?-1:1)},I.scenes.length&&(I.scenes[0].postProcessManager.directRender([X],k,!0,M,g),I.restoreDefaultFramebuffer(),y.dispose(),URL.revokeObjectURL(F),P())}))}))}else{if(I._uploadImageToTexture(U,A,M,g),d){const y=V[g];y&&I._uploadImageToTexture(y._texture,A,M,0)}P()}}))}async function N(A,I){let F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:P;if(!X.e.IsExponentOfTwo(A.width))throw new Error("Texture size must be a power of two");const g=(0,M.j)(A.width)+1,U=A.getEngine();let f=!1,z=!1,l=null,u=null,K=null;const x=U.getCaps();A.format=5,A.type=0,A.generateMipMaps=!0,A._cachedAnisotropicFilteringLevel=null,U.updateTextureSamplingMode(3,A),x.textureLOD?U._features.supportRenderAndCopyToLodForFloatTextures?x.textureHalfFloatRender&&x.textureHalfFloatLinearFiltering?(f=!0,A.type=2):x.textureFloatRender&&x.textureFloatLinearFiltering&&(f=!0,A.type=1):f=!1:(f=!1,z=!0,K={});let N=0;if(f)U.isWebGPU?(N=1,await y.e(17).then(y.bind(y,12673))):await y.e(24).then(y.bind(y,12678)),l=new k.e("rgbdDecode","rgbdDecode",null,null,1,null,3,U,!1,void 0,A.type,void 0,null,!1,void 0,N),A._isRGBD=!1,A.invertY=!1,u=U.createRenderTargetCubeTexture(A.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:A.type,format:5});else if(A._isRGBD=!0,A.invertY=!0,z){const I=3,y=A._lodGenerationScale,X=A._lodGenerationOffset;for(let F=0;F<I;F++){const M=(g-1)*y+X,k=X+(M-X)*(1-F/(I-1)),P=Math.round(Math.min(Math.max(k,0),M)),f=new d.b(U,2);f.isCube=!0,f.invertY=!0,f.generateMipMaps=!1,U.updateTextureSamplingMode(2,f);const z=new V.d(null);switch(z._isCube=!0,z._texture=f,K[P]=z,F){case 0:A._lodTextureLow=z;break;case 1:A._lodTextureMid=z;break;case 2:A._lodTextureHigh=z}}}const R=[];for(let y=0;y<I.length;y++)for(let X=0;X<6;X++){const M=I[y][X],g=new Blob([M],{type:F}),d=URL.createObjectURL(g);let V;if(U._features.forceBitmapOverHTMLImageElement)V=U.createImageBitmap(g,{premultiplyAlpha:"none"}).then((I=>t(I,U,f,l,d,X,y,z,K,u,A)));else{const I=new Image;I.src=d,V=new Promise(((F,M)=>{I.onload=()=>{t(I,U,f,l,d,X,y,z,K,u,A).then((()=>F())).catch((A=>{M(A)}))},I.onerror=A=>{M(A)}}))}R.push(V)}if(I.length<g){let y;const X=Math.pow(2,g-1-I.length),F=X*X*4;switch(A.type){case 0:y=new Uint8Array(F);break;case 2:y=new Uint16Array(F);break;case 1:y=new Float32Array(F)}for(let M=I.length;M<g;M++)for(let I=0;I<6;I++)U._uploadArrayBufferViewToTexture(A,y,I,M)}return Promise.all(R).then((()=>{u&&(U._releaseTexture(A),u._swapAndDie(A)),l&&l.dispose(),z&&(A._lodTextureHigh&&A._lodTextureHigh._texture&&(A._lodTextureHigh._texture.isReady=!0),A._lodTextureMid&&A._lodTextureMid._texture&&(A._lodTextureMid._texture.isReady=!0),A._lodTextureLow&&A._lodTextureLow._texture&&(A._lodTextureLow._texture.isReady=!0))}))}function R(A,I){const y=(I=u(I)).irradiance;if(!y)return;const X=new g.e;F.j.FromArrayToRef(y.x,0,X.x),F.j.FromArrayToRef(y.y,0,X.y),F.j.FromArrayToRef(y.z,0,X.z),F.j.FromArrayToRef(y.xx,0,X.xx),F.j.FromArrayToRef(y.yy,0,X.yy),F.j.FromArrayToRef(y.zz,0,X.zz),F.j.FromArrayToRef(y.yz,0,X.yz),F.j.FromArrayToRef(y.zx,0,X.zx),F.j.FromArrayToRef(y.xy,0,X.xy),A._sphericalPolynomial=X}function Z(A,I,y,X,F){const M=N(A.getEngine().createRawCubeTexture(null,A.width,A.format,A.type,A.generateMipMaps,A.invertY,A.samplingMode,A._compression),I).then((()=>A));return A.onRebuildCallback=A=>({proxy:M,isReady:!0,isAsync:!0}),A._source=13,A._bufferViewArrayArray=I,A._lodGenerationScale=X,A._lodGenerationOffset=F,A._sphericalPolynomial=y,N(A,I).then((()=>(A.isReady=!0,A)))}},10411:(A,I,y)=>{y.d(I,{c:()=>M});var X=y(1556),F=y(1545);class M{static ExpandRGBDTexture(A){const I=A._texture;if(!I||!A.isRGBD)return;const F=I.getEngine(),M=F.getCaps(),g=I.isReady;let d=!1;M.textureHalfFloatRender&&M.textureHalfFloatLinearFiltering?(d=!0,I.type=2):M.textureFloatRender&&M.textureFloatLinearFiltering&&(d=!0,I.type=1),d&&(I.isReady=!1,I._isRGBD=!1,I.invertY=!1);const V=async()=>{const M=F.isWebGPU,g=M?1:0;I.isReady=!1,M?await Promise.all([y.e(17).then(y.bind(y,12673)),y.e(18).then(y.bind(y,12686))]):await Promise.all([y.e(24).then(y.bind(y,12678)),y.e(25).then(y.bind(y,12688))]);const d=new X.e("rgbdDecode","rgbdDecode",null,null,1,null,3,F,!1,void 0,I.type,void 0,null,!1,void 0,g);d.externalTextureSamplerBinding=!0;const V=F.createRenderTargetTexture(I.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:I.samplingMode,type:I.type,format:5});d.onEffectCreatedObservable.addOnce((y=>{y.executeWhenCompiled((()=>{d.onApply=A=>{A._bindTexture("textureSampler",I),A.setFloat2("scale",1,1)},A.va().postProcessManager.directRender([d],V,!0),F.restoreDefaultFramebuffer(),F._releaseTexture(I),d&&d.dispose(),V._swapAndDie(I),I.isReady=!0}))}))};d&&(g?V():A.onLoadObservable.addOnce(V))}static EncodeTextureToRGBD(A,I){let y=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,F.d)("rgbdEncode",A,I,y,1,5)}}}}]);