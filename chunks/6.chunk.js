/*! For license information please see eq249d.6.69af5cc2.chunk.js.LICENSE.txt */
"use strict";(self["6xhfpmwgjr5"]=self["6xhfpmwgjr5"]||[]).push([[6],{12211:(P,a,R)=>{R.r(a),R.d(a,{getAnalytics:()=>iP,getGoogleAnalyticsClientId:()=>KP,initializeAnalytics:()=>XP,isSupported:()=>CP,logEvent:()=>Ra,setAnalyticsCollectionEnabled:()=>Pa,setConsent:()=>Sa,setCurrentScreen:()=>zP,setDefaultEventParameters:()=>aa,setUserId:()=>FP,setUserProperties:()=>gP,settings:()=>TP});var S=R(12193),A=R(12209),Z=R(12207),p=R(12198);let j,U;const Q=new WeakMap,h=new WeakMap,l=new WeakMap,V=new WeakMap,f=new WeakMap;let O={get(P,a,R){if(P instanceof IDBTransaction){if("done"===a)return h.get(P);if("objectStoreNames"===a)return P.objectStoreNames||l.get(P);if("store"===a)return R.objectStoreNames[1]?void 0:R.objectStore(R.objectStoreNames[0])}return t(P[a])},set:(P,a,R)=>(P[a]=R,!0),has:(P,a)=>P instanceof IDBTransaction&&("done"===a||"store"===a)||a in P};function q(P){return P!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(U||(U=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(P)?function(){for(var a=arguments.length,R=new Array(a),S=0;S<a;S++)R[S]=arguments[S];return P.apply(W(this),R),t(Q.get(this))}:function(){for(var a=arguments.length,R=new Array(a),S=0;S<a;S++)R[S]=arguments[S];return t(P.apply(W(this),R))}:function(a){for(var R=arguments.length,S=new Array(R>1?R-1:0),A=1;A<R;A++)S[A-1]=arguments[A];const Z=P.call(W(this),a,...S);return l.set(Z,a.sort?a.sort():[a]),t(Z)}}function y(P){return"function"===typeof P?q(P):(P instanceof IDBTransaction&&function(P){if(h.has(P))return;const a=new Promise(((a,R)=>{const S=()=>{P.removeEventListener("complete",A),P.removeEventListener("error",Z),P.removeEventListener("abort",Z)},A=()=>{a(),S()},Z=()=>{R(P.error||new DOMException("AbortError","AbortError")),S()};P.addEventListener("complete",A),P.addEventListener("error",Z),P.addEventListener("abort",Z)}));h.set(P,a)}(P),a=P,(j||(j=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((P=>a instanceof P))?new Proxy(P,O):P);var a}function t(P){if(P instanceof IDBRequest)return function(P){const a=new Promise(((a,R)=>{const S=()=>{P.removeEventListener("success",A),P.removeEventListener("error",Z)},A=()=>{a(t(P.result)),S()},Z=()=>{R(P.error),S()};P.addEventListener("success",A),P.addEventListener("error",Z)}));return a.then((a=>{a instanceof IDBCursor&&Q.set(a,P)})).catch((()=>{})),f.set(a,P),a}(P);if(V.has(P))return V.get(P);const a=y(P);return a!==P&&(V.set(P,a),f.set(a,P)),a}const W=P=>f.get(P);const k=["get","getKey","getAll","getAllKeys","count"],x=["put","add","delete","clear"],s=new Map;function d(P,a){if(!(P instanceof IDBDatabase)||a in P||"string"!==typeof a)return;if(s.get(a))return s.get(a);const R=a.replace(/FromIndex$/,""),S=a!==R,A=x.includes(R);if(!(R in(S?IDBIndex:IDBObjectStore).prototype)||!A&&!k.includes(R))return;const Z=async function(P){const a=this.transaction(P,A?"readwrite":"readonly");let Z=a.store;for(var p=arguments.length,j=new Array(p>1?p-1:0),U=1;U<p;U++)j[U-1]=arguments[U];return S&&(Z=Z.index(j.shift())),(await Promise.all([Z[R](...j),A&&a.done]))[0]};return s.set(a,Z),Z}O=(P=>({...P,get:(a,R,S)=>d(a,R)||P.get(a,R,S),has:(a,R)=>!!d(a,R)||P.has(a,R)}))(O);const G="@firebase/installations",H="0.6.4",mP=1e4,N=`w:${H}`,D="FIS_v2",L=36e5,c={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},u=new Z.f("installations","Installations",c);function Y(P){return P instanceof Z.g&&P.code.includes("request-failed")}function J(P){let{projectId:a}=P;return`https://firebaseinstallations.googleapis.com/v1/projects/${a}/installations`}function n(P){return{token:P.token,requestStatus:2,expiresIn:(a=P.expiresIn,Number(a.replace("s","000"))),creationTime:Date.now()};var a}async function b(P,a){const R=(await a.json()).error;return u.create("request-failed",{requestName:P,serverCode:R.code,serverMessage:R.message,serverStatus:R.status})}function B(P){let{apiKey:a}=P;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":a})}function o(P,a){let{refreshToken:R}=a;const S=B(P);return S.append("Authorization",function(P){return`${D} ${P}`}(R)),S}async function r(P){const a=await P();return a.status>=500&&a.status<600?P():a}function v(P){return new Promise((a=>{setTimeout(a,P)}))}const M=/^[cdef][\w-]{21}$/;function E(){try{const P=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(P),P[0]=112+P[0]%16;const a=function(P){const a=(R=P,btoa(String.fromCharCode(...R)).replace(/\+/g,"-").replace(/\//g,"_"));var R;return a.substr(0,22)}(P);return M.test(a)?a:""}catch(P){return""}}function e(P){return`${P.appName}!${P.appId}`}const w=new Map;function T(P,a){const R=e(P);I(R,a),function(P,a){const R=X();R&&R.postMessage({key:P,fid:a});C()}(R,a)}function I(P,a){const R=w.get(P);if(R)for(const S of R)S(a)}let i=null;function X(){return!i&&"BroadcastChannel"in self&&(i=new BroadcastChannel("[Firebase] FID Change"),i.onmessage=P=>{I(P.data.key,P.data.fid)}),i}function C(){0===w.size&&i&&(i.close(),i=null)}const z="firebase-installations-store";let K=null;function F(){return K||(K=function(P,a){let{blocked:R,upgrade:S,blocking:A,terminated:Z}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const p=indexedDB.open(P,a),j=t(p);return S&&p.addEventListener("upgradeneeded",(P=>{S(t(p.result),P.oldVersion,P.newVersion,t(p.transaction))})),R&&p.addEventListener("blocked",(()=>R())),j.then((P=>{Z&&P.addEventListener("close",(()=>Z())),A&&P.addEventListener("versionchange",(()=>A()))})).catch((()=>{})),j}("firebase-installations-database",1,{upgrade:(P,a)=>{if(0===a)P.createObjectStore(z)}})),K}async function g(P,a){const R=e(P),S=(await F()).transaction(z,"readwrite"),A=S.objectStore(z),Z=await A.get(R);return await A.put(a,R),await S.done,Z&&Z.fid===a.fid||T(P,a.fid),a}async function PP(P){const a=e(P),R=(await F()).transaction(z,"readwrite");await R.objectStore(z).delete(a),await R.done}async function aP(P,a){const R=e(P),S=(await F()).transaction(z,"readwrite"),A=S.objectStore(z),Z=await A.get(R),p=a(Z);return void 0===p?await A.delete(R):await A.put(p,R),await S.done,!p||Z&&Z.fid===p.fid||T(P,p.fid),p}async function RP(P){let a;const R=await aP(P.appConfig,(R=>{const S=function(P){const a=P||{fid:E(),registrationStatus:0};return ZP(a)}(R),A=function(P,a){if(0===a.registrationStatus){if(!navigator.onLine){return{installationEntry:a,registrationPromise:Promise.reject(u.create("app-offline"))}}const R={fid:a.fid,registrationStatus:1,registrationTime:Date.now()},S=async function(P,a){try{const R=await async function(P,a){let{appConfig:R,heartbeatServiceProvider:S}=P,{fid:A}=a;const Z=J(R),p=B(R),j=S.getImmediate({optional:!0});if(j){const P=await j.getHeartbeatsHeader();P&&p.append("x-firebase-client",P)}const U={fid:A,authVersion:D,appId:R.appId,sdkVersion:N},Q={method:"POST",headers:p,body:JSON.stringify(U)},h=await r((()=>fetch(Z,Q)));if(h.ok){const P=await h.json();return{fid:P.fid||A,registrationStatus:2,refreshToken:P.refreshToken,authToken:n(P.authToken)}}throw await b("Create Installation",h)}(P,a);return g(P.appConfig,R)}catch(R){throw Y(R)&&409===R.customData.serverCode?await PP(P.appConfig):await g(P.appConfig,{fid:a.fid,registrationStatus:0}),R}}(P,R);return{installationEntry:R,registrationPromise:S}}return 1===a.registrationStatus?{installationEntry:a,registrationPromise:SP(P)}:{installationEntry:a}}(P,S);return a=A.registrationPromise,A.installationEntry}));return""===R.fid?{installationEntry:await a}:{installationEntry:R,registrationPromise:a}}async function SP(P){let a=await AP(P.appConfig);for(;1===a.registrationStatus;)await v(100),a=await AP(P.appConfig);if(0===a.registrationStatus){const{installationEntry:a,registrationPromise:R}=await RP(P);return R||a}return a}function AP(P){return aP(P,(P=>{if(!P)throw u.create("installation-not-found");return ZP(P)}))}function ZP(P){return 1===(a=P).registrationStatus&&a.registrationTime+mP<Date.now()?{fid:P.fid,registrationStatus:0}:P;var a}async function pP(P,a){let{appConfig:R,heartbeatServiceProvider:S}=P;const A=function(P,a){let{fid:R}=a;return`${J(P)}/${R}/authTokens:generate`}(R,a),Z=o(R,a),p=S.getImmediate({optional:!0});if(p){const P=await p.getHeartbeatsHeader();P&&Z.append("x-firebase-client",P)}const j={installation:{sdkVersion:N,appId:R.appId}},U={method:"POST",headers:Z,body:JSON.stringify(j)},Q=await r((()=>fetch(A,U)));if(Q.ok){return n(await Q.json())}throw await b("Generate Auth Token",Q)}async function jP(P){let a,R=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const S=await aP(P.appConfig,(S=>{if(!QP(S))throw u.create("not-registered");const A=S.authToken;if(!R&&function(P){return 2===P.requestStatus&&!function(P){const a=Date.now();return a<P.creationTime||P.creationTime+P.expiresIn<a+L}(P)}(A))return S;if(1===A.requestStatus)return a=async function(P,a){let R=await UP(P.appConfig);for(;1===R.authToken.requestStatus;)await v(100),R=await UP(P.appConfig);const S=R.authToken;return 0===S.requestStatus?jP(P,a):S}(P,R),S;{if(!navigator.onLine)throw u.create("app-offline");const R=function(P){const a={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},P),{authToken:a})}(S);return a=async function(P,a){try{const R=await pP(P,a),S=Object.assign(Object.assign({},a),{authToken:R});return await g(P.appConfig,S),R}catch(R){if(!Y(R)||401!==R.customData.serverCode&&404!==R.customData.serverCode){const R=Object.assign(Object.assign({},a),{authToken:{requestStatus:0}});await g(P.appConfig,R)}else await PP(P.appConfig);throw R}}(P,R),R}}));return a?await a:S.authToken}function UP(P){return aP(P,(P=>{if(!QP(P))throw u.create("not-registered");const a=P.authToken;return 1===(R=a).requestStatus&&R.requestTime+mP<Date.now()?Object.assign(Object.assign({},P),{authToken:{requestStatus:0}}):P;var R}))}function QP(P){return void 0!==P&&2===P.registrationStatus}async function hP(P){let a=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const R=P;await async function(P){const{registrationPromise:a}=await RP(P);a&&await a}(R);return(await jP(R,a)).token}function lP(P){return u.create("missing-app-config-values",{valueName:P})}const VP="installations",fP=P=>{const a=P.getProvider("app").getImmediate(),R=function(P){if(!P||!P.options)throw lP("App Configuration");if(!P.name)throw lP("App Name");const a=["projectId","apiKey","appId"];for(const R of a)if(!P.options[R])throw lP(R);return{appName:P.name,projectId:P.options.projectId,apiKey:P.options.apiKey,appId:P.options.appId}}(a);return{app:a,appConfig:R,heartbeatServiceProvider:(0,S.u)(a,"heartbeat"),_delete:()=>Promise.resolve()}},OP=P=>{const a=P.getProvider("app").getImmediate(),R=(0,S.u)(a,VP).getImmediate();return{getId:()=>async function(P){const a=P,{installationEntry:R,registrationPromise:S}=await RP(a);return S?S.catch(console.error):jP(a).catch(console.error),R.fid}(R),getToken:P=>hP(R,P)}};(0,S.x)(new p.c(VP,fP,"PUBLIC")),(0,S.x)(new p.c("installations-internal",OP,"PRIVATE")),(0,S.L)(G,H),(0,S.L)(G,H,"esm2017");const qP="analytics",yP="https://www.googletagmanager.com/gtag/js",tP=new A.f("@firebase/analytics"),WP={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},kP=new Z.f("analytics","Analytics",WP);function xP(P){if(!P.startsWith(yP)){const a=kP.create("invalid-gtag-resource",{gtagURL:P});return tP.warn(a.message),""}return P}function sP(P){return Promise.all(P.map((P=>P.catch((P=>P)))))}function dP(P,a){const R=function(P,a){let R;return window.trustedTypes&&(R=window.trustedTypes.createPolicy(P,a)),R}("firebase-js-sdk-policy",{createScriptURL:xP}),S=document.createElement("script"),A=`${yP}?l=${P}&id=${a}`;S.src=R?null===R||void 0===R?void 0:R.createScriptURL(A):A,S.async=!0,document.head.appendChild(S)}function GP(P,a,R,S){return async function(A){try{for(var Z=arguments.length,p=new Array(Z>1?Z-1:0),j=1;j<Z;j++)p[j-1]=arguments[j];if("event"===A){const[S,A]=p;await async function(P,a,R,S,A){try{let Z=[];if(A&&A.send_to){let P=A.send_to;Array.isArray(P)||(P=[P]);const S=await sP(R);for(const R of P){const P=S.find((P=>P.measurementId===R)),A=P&&a[P.appId];if(!A){Z=[];break}Z.push(A)}}0===Z.length&&(Z=Object.values(a)),await Promise.all(Z),P("event",S,A||{})}catch(Z){tP.error(Z)}}(P,a,R,S,A)}else if("config"===A){const[A,Z]=p;await async function(P,a,R,S,A,Z){const p=S[A];try{if(p)await a[p];else{const P=(await sP(R)).find((P=>P.measurementId===A));P&&await a[P.appId]}}catch(j){tP.error(j)}P("config",A,Z)}(P,a,R,S,A,Z)}else if("consent"===A){const[a]=p;P("consent","update",a)}else if("get"===A){const[a,R,S]=p;P("get",a,R,S)}else if("set"===A){const[a]=p;P("set",a)}else P(A,...p)}catch(U){tP.error(U)}}}const HP=new class{constructor(){let P=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=P,this.intervalMillis=a}getThrottleMetadata(P){return this.throttleMetadata[P]}setThrottleMetadata(P,a){this.throttleMetadata[P]=a}deleteThrottleMetadata(P){delete this.throttleMetadata[P]}};function ma(P){return new Headers({Accept:"application/json","x-goog-api-key":P})}async function NP(P){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:HP,R=arguments.length>2?arguments[2]:void 0;const{appId:S,apiKey:A,measurementId:Z}=P.options;if(!S)throw kP.create("no-app-id");if(!A){if(Z)return{measurementId:Z,appId:S};throw kP.create("no-api-key")}const p=a.getThrottleMetadata(S)||{backoffCount:0,throttleEndTimeMillis:Date.now()},j=new LP;return setTimeout((async()=>{j.abort()}),void 0!==R?R:6e4),DP({appId:S,apiKey:A,measurementId:Z},p,j,a)}async function DP(P,a,R){let{throttleEndTimeMillis:S,backoffCount:A}=a,p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:HP;var j;const{appId:U,measurementId:Q}=P;try{await function(P,a){return new Promise(((R,S)=>{const A=Math.max(a-Date.now(),0),Z=setTimeout(R,A);P.addEventListener((()=>{clearTimeout(Z),S(kP.create("fetch-throttle",{throttleEndTimeMillis:a}))}))}))}(R,S)}catch(h){if(Q)return tP.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${Q} provided in the "measurementId" field in the local Firebase config. [${null===h||void 0===h?void 0:h.message}]`),{appId:U,measurementId:Q};throw h}try{const a=await async function(P){var a;const{appId:R,apiKey:S}=P,A={method:"GET",headers:ma(S)},Z="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",R),p=await fetch(Z,A);if(200!==p.status&&304!==p.status){let P="";try{const R=await p.json();(null===(a=R.error)||void 0===a?void 0:a.message)&&(P=R.error.message)}catch(j){}throw kP.create("config-fetch-failed",{httpStatus:p.status,responseMessage:P})}return p.json()}(P);return p.deleteThrottleMetadata(U),a}catch(h){const a=h;if(!function(P){if(!(P instanceof Z.g)||!P.customData)return!1;const a=Number(P.customData.httpStatus);return 429===a||500===a||503===a||504===a}(a)){if(p.deleteThrottleMetadata(U),Q)return tP.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${Q} provided in the "measurementId" field in the local Firebase config. [${null===a||void 0===a?void 0:a.message}]`),{appId:U,measurementId:Q};throw h}const S=503===Number(null===(j=null===a||void 0===a?void 0:a.customData)||void 0===j?void 0:j.httpStatus)?(0,Z.p)(A,p.intervalMillis,30):(0,Z.p)(A,p.intervalMillis),l={throttleEndTimeMillis:Date.now()+S,backoffCount:A+1};return p.setThrottleMetadata(U,l),tP.debug(`Calling attemptFetch again in ${S} millis`),DP(P,l,R,p)}}class LP{constructor(){this.listeners=[]}addEventListener(P){this.listeners.push(P)}abort(){this.listeners.forEach((P=>P()))}}let cP,uP;function YP(P){uP=P}function JP(P){cP=P}async function nP(P,a,R,S,A,p,j){var U;const Q=NP(P);Q.then((a=>{R[a.measurementId]=a.appId,P.options.measurementId&&a.measurementId!==P.options.measurementId&&tP.warn(`The measurement ID in the local Firebase config (${P.options.measurementId}) does not match the measurement ID fetched from the server (${a.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((P=>tP.error(P))),a.push(Q);const h=async function(){if(!(0,Z.Q)())return tP.warn(kP.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,Z.Z)()}catch(P){return tP.warn(kP.create("indexeddb-unavailable",{errorInfo:null===P||void 0===P?void 0:P.toString()}).message),!1}return!0}().then((P=>P?S.getId():void 0)),[l,V]=await Promise.all([Q,h]);(function(P){const a=window.document.getElementsByTagName("script");for(const R of Object.values(a))if(R.src&&R.src.includes(yP)&&R.src.includes(P))return R;return null})(p)||dP(p,l.measurementId),uP&&(A("consent","default",uP),YP(void 0)),A("js",new Date);const f=null!==(U=null===j||void 0===j?void 0:j.config)&&void 0!==U?U:{};return f.origin="firebase",f.update=!0,null!=V&&(f.firebase_id=V),A("config",l.measurementId,f),cP&&(A("set",cP),JP(void 0)),l.measurementId}class bP{constructor(P){this.app=P}_delete(){return delete BP[this.app.options.appId],Promise.resolve()}}let BP={},oP=[];const rP={};let vP,MP,EP="dataLayer",eP="gtag",wP=!1;function TP(P){if(wP)throw kP.create("already-initialized");P.dataLayerName&&(EP=P.dataLayerName),P.gtagName&&(eP=P.gtagName)}function IP(P,a,R){!function(){const P=[];if((0,Z.L)()&&P.push("This is a browser extension environment."),(0,Z.i)()||P.push("Cookies are not available."),P.length>0){const a=P.map(((P,a)=>`(${a+1}) ${P}`)).join(" "),R=kP.create("invalid-analytics-context",{errorInfo:a});tP.warn(R.message)}}();const S=P.options.appId;if(!S)throw kP.create("no-app-id");if(!P.options.apiKey){if(!P.options.measurementId)throw kP.create("no-api-key");tP.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${P.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=BP[S])throw kP.create("already-exists",{id:S});if(!wP){!function(P){let a=[];Array.isArray(window[P])?a=window[P]:window[P]=a}(EP);const{wrappedGtag:P,gtagCore:a}=function(P,a,R,S,A){let Z=function(){for(var P=arguments.length,a=new Array(P),R=0;R<P;R++)a[R]=arguments[R];window[S].push(arguments)};return window[A]&&"function"===typeof window[A]&&(Z=window[A]),window[A]=GP(Z,P,a,R),{gtagCore:Z,wrappedGtag:window[A]}}(BP,oP,rP,EP,eP);MP=P,vP=a,wP=!0}BP[S]=nP(P,oP,rP,a,vP,EP,R);return new bP(P)}function iP(){let P=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,S.E)();P=(0,Z.H)(P);const a=(0,S.u)(P,qP);return a.isInitialized()?a.getImmediate():XP(P)}function XP(P){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const R=(0,S.u)(P,qP);if(R.isInitialized()){const P=R.getImmediate();if((0,Z.u)(a,R.getOptions()))return P;throw kP.create("already-initialized")}return R.initialize({options:a})}async function CP(){if((0,Z.L)())return!1;if(!(0,Z.i)())return!1;if(!(0,Z.Q)())return!1;try{return await(0,Z.Z)()}catch(P){return!1}}function zP(P,a,R){P=(0,Z.H)(P),async function(P,a,R,S){if(S&&S.global)return P("set",{screen_name:R}),Promise.resolve();P("config",await a,{update:!0,screen_name:R})}(MP,BP[P.app.options.appId],a,R).catch((P=>tP.error(P)))}async function KP(P){return P=(0,Z.H)(P),async function(P,a){const R=await a;return new Promise(((a,S)=>{P("get",R,"client_id",(P=>{P||S(kP.create("no-client-id")),a(P)}))}))}(MP,BP[P.app.options.appId])}function FP(P,a,R){P=(0,Z.H)(P),async function(P,a,R,S){if(S&&S.global)return P("set",{user_id:R}),Promise.resolve();P("config",await a,{update:!0,user_id:R})}(MP,BP[P.app.options.appId],a,R).catch((P=>tP.error(P)))}function gP(P,a,R){P=(0,Z.H)(P),async function(P,a,R,S){if(S&&S.global){const a={};for(const P of Object.keys(R))a[`user_properties.${P}`]=R[P];return P("set",a),Promise.resolve()}P("config",await a,{update:!0,user_properties:R})}(MP,BP[P.app.options.appId],a,R).catch((P=>tP.error(P)))}function Pa(P,a){P=(0,Z.H)(P),async function(P,a){const R=await P;window[`ga-disable-${R}`]=!a}(BP[P.app.options.appId],a).catch((P=>tP.error(P)))}function aa(P){MP?MP("set",P):JP(P)}function Ra(P,a,R,S){P=(0,Z.H)(P),async function(P,a,R,S,A){if(A&&A.global)P("event",R,S);else{const A=await a;P("event",R,Object.assign(Object.assign({},S),{send_to:A}))}}(MP,BP[P.app.options.appId],a,R,S).catch((P=>tP.error(P)))}function Sa(P){MP?MP("consent","update",P):YP(P)}const Aa="@firebase/analytics",Za="0.10.0";(0,S.x)(new p.c(qP,((P,a)=>{let{options:R}=a;return IP(P.getProvider("app").getImmediate(),P.getProvider("installations-internal").getImmediate(),R)}),"PUBLIC")),(0,S.x)(new p.c("analytics-internal",(function(P){try{const a=P.getProvider(qP).getImmediate();return{logEvent:(P,R,S)=>Ra(a,P,R,S)}}catch(a){throw kP.create("interop-component-reg-failed",{reason:a})}}),"PRIVATE")),(0,S.L)(Aa,Za),(0,S.L)(Aa,Za,"esm2017")}}]);