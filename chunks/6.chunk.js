/*! For license information please see tnmf9a.6.4c847f59.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6],{11022:(V,I,m)=>{m.r(I),m.d(I,{getAnalytics:()=>wV,getGoogleAnalyticsClientId:()=>eV,initializeAnalytics:()=>AV,isSupported:()=>JV,logEvent:()=>mI,setAnalyticsCollectionEnabled:()=>VI,setConsent:()=>CI,setCurrentScreen:()=>UV,setDefaultEventParameters:()=>II,setUserId:()=>aV,setUserProperties:()=>LV,settings:()=>MV});var C=m(10994),l=m(11017),s=m(11010),F=m(11002);let k,j;const E=new WeakMap,K=new WeakMap,Y=new WeakMap,X=new WeakMap,O=new WeakMap;let v={get(V,I,m){if(V instanceof IDBTransaction){if("done"===I)return K.get(V);if("objectStoreNames"===I)return V.objectStoreNames||Y.get(V);if("store"===I)return m.objectStoreNames[1]?void 0:m.objectStore(m.objectStoreNames[0])}return D(V[I])},set:(V,I,m)=>(V[I]=m,!0),has:(V,I)=>V instanceof IDBTransaction&&("done"===I||"store"===I)||I in V};function N(V){return V!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(j||(j=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(V)?function(){for(var I=arguments.length,m=new Array(I),C=0;C<I;C++)m[C]=arguments[C];return V.apply(b(this),m),D(E.get(this))}:function(){for(var I=arguments.length,m=new Array(I),C=0;C<I;C++)m[C]=arguments[C];return D(V.apply(b(this),m))}:function(I){for(var m=arguments.length,C=new Array(m>1?m-1:0),l=1;l<m;l++)C[l-1]=arguments[l];const s=V.call(b(this),I,...C);return Y.set(s,I.sort?I.sort():[I]),D(s)}}function t(V){return"function"===typeof V?N(V):(V instanceof IDBTransaction&&function(V){if(K.has(V))return;const I=new Promise(((I,m)=>{const C=()=>{V.removeEventListener("complete",l),V.removeEventListener("error",s),V.removeEventListener("abort",s)},l=()=>{I(),C()},s=()=>{m(V.error||new DOMException("AbortError","AbortError")),C()};V.addEventListener("complete",l),V.addEventListener("error",s),V.addEventListener("abort",s)}));K.set(V,I)}(V),I=V,(k||(k=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((V=>I instanceof V))?new Proxy(V,v):V);var I}function D(V){if(V instanceof IDBRequest)return function(V){const I=new Promise(((I,m)=>{const C=()=>{V.removeEventListener("success",l),V.removeEventListener("error",s)},l=()=>{I(D(V.result)),C()},s=()=>{m(V.error),C()};V.addEventListener("success",l),V.addEventListener("error",s)}));return I.then((I=>{I instanceof IDBCursor&&E.set(I,V)})).catch((()=>{})),O.set(I,V),I}(V);if(X.has(V))return X.get(V);const I=t(V);return I!==V&&(X.set(V,I),O.set(I,V)),I}const b=V=>O.get(V);const T=["get","getKey","getAll","getAllKeys","count"],n=["put","add","delete","clear"],x=new Map;function S(V,I){if(!(V instanceof IDBDatabase)||I in V||"string"!==typeof I)return;if(x.get(I))return x.get(I);const m=I.replace(/FromIndex$/,""),C=I!==m,l=n.includes(m);if(!(m in(C?IDBIndex:IDBObjectStore).prototype)||!l&&!T.includes(m))return;const s=async function(V){const I=this.transaction(V,l?"readwrite":"readonly");let s=I.store;for(var F=arguments.length,k=new Array(F>1?F-1:0),j=1;j<F;j++)k[j-1]=arguments[j];return C&&(s=s.index(k.shift())),(await Promise.all([s[m](...k),l&&I.done]))[0]};return x.set(I,s),s}v=(V=>({...V,get:(I,m,C)=>S(I,m)||V.get(I,m,C),has:(I,m)=>!!S(I,m)||V.has(I,m)}))(v);const c="@firebase/installations",H="0.6.4",y=1e4,z=`w:${H}`,Z="FIS_v2",B=36e5,W={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},Q=new s.c("installations","Installations",W);function G(V){return V instanceof s.d&&V.code.includes("request-failed")}function r(V){let{projectId:I}=V;return`https://firebaseinstallations.googleapis.com/v1/projects/${I}/installations`}function g(V){return{token:V.token,requestStatus:2,expiresIn:(I=V.expiresIn,Number(I.replace("s","000"))),creationTime:Date.now()};var I}async function h(V,I){const m=(await I.json()).error;return Q.create("request-failed",{requestName:V,serverCode:m.code,serverMessage:m.message,serverStatus:m.status})}function d(V){let{apiKey:I}=V;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":I})}function R(V,I){let{refreshToken:m}=I;const C=d(V);return C.append("Authorization",function(V){return`${Z} ${V}`}(m)),C}async function i(V){const I=await V();return I.status>=500&&I.status<600?V():I}function q(V){return new Promise((I=>{setTimeout(I,V)}))}const P=/^[cdef][\w-]{21}$/;function u(){try{const V=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(V),V[0]=112+V[0]%16;const I=function(V){const I=(m=V,btoa(String.fromCharCode(...m)).replace(/\+/g,"-").replace(/\//g,"_"));var m;return I.substr(0,22)}(V);return P.test(I)?I:""}catch(V){return""}}function o(V){return`${V.appName}!${V.appId}`}const p=new Map;function M(V,I){const m=o(V);f(m,I),function(V,I){const m=A();m&&m.postMessage({key:V,fid:I});J()}(m,I)}function f(V,I){const m=p.get(V);if(m)for(const C of m)C(I)}let w=null;function A(){return!w&&"BroadcastChannel"in self&&(w=new BroadcastChannel("[Firebase] FID Change"),w.onmessage=V=>{f(V.data.key,V.data.fid)}),w}function J(){0===p.size&&w&&(w.close(),w=null)}const U="firebase-installations-store";let e=null;function a(){return e||(e=function(V,I){let{blocked:m,upgrade:C,blocking:l,terminated:s}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const F=indexedDB.open(V,I),k=D(F);return C&&F.addEventListener("upgradeneeded",(V=>{C(D(F.result),V.oldVersion,V.newVersion,D(F.transaction))})),m&&F.addEventListener("blocked",(()=>m())),k.then((V=>{s&&V.addEventListener("close",(()=>s())),l&&V.addEventListener("versionchange",(()=>l()))})).catch((()=>{})),k}("firebase-installations-database",1,{upgrade:(V,I)=>{if(0===I)V.createObjectStore(U)}})),e}async function L(V,I){const m=o(V),C=(await a()).transaction(U,"readwrite"),l=C.objectStore(U),s=await l.get(m);return await l.put(I,m),await C.done,s&&s.fid===I.fid||M(V,I.fid),I}async function VV(V){const I=o(V),m=(await a()).transaction(U,"readwrite");await m.objectStore(U).delete(I),await m.done}async function IV(V,I){const m=o(V),C=(await a()).transaction(U,"readwrite"),l=C.objectStore(U),s=await l.get(m),F=I(s);return void 0===F?await l.delete(m):await l.put(F,m),await C.done,!F||s&&s.fid===F.fid||M(V,F.fid),F}async function mV(V){let I;const m=await IV(V.appConfig,(m=>{const C=function(V){const I=V||{fid:u(),registrationStatus:0};return sV(I)}(m),l=function(V,I){if(0===I.registrationStatus){if(!navigator.onLine){return{installationEntry:I,registrationPromise:Promise.reject(Q.create("app-offline"))}}const m={fid:I.fid,registrationStatus:1,registrationTime:Date.now()},C=async function(V,I){try{const m=await async function(V,I){let{appConfig:m,heartbeatServiceProvider:C}=V,{fid:l}=I;const s=r(m),F=d(m),k=C.getImmediate({optional:!0});if(k){const V=await k.getHeartbeatsHeader();V&&F.append("x-firebase-client",V)}const j={fid:l,authVersion:Z,appId:m.appId,sdkVersion:z},E={method:"POST",headers:F,body:JSON.stringify(j)},K=await i((()=>fetch(s,E)));if(K.ok){const V=await K.json();return{fid:V.fid||l,registrationStatus:2,refreshToken:V.refreshToken,authToken:g(V.authToken)}}throw await h("Create Installation",K)}(V,I);return L(V.appConfig,m)}catch(m){throw G(m)&&409===m.customData.serverCode?await VV(V.appConfig):await L(V.appConfig,{fid:I.fid,registrationStatus:0}),m}}(V,m);return{installationEntry:m,registrationPromise:C}}return 1===I.registrationStatus?{installationEntry:I,registrationPromise:CV(V)}:{installationEntry:I}}(V,C);return I=l.registrationPromise,l.installationEntry}));return""===m.fid?{installationEntry:await I}:{installationEntry:m,registrationPromise:I}}async function CV(V){let I=await lV(V.appConfig);for(;1===I.registrationStatus;)await q(100),I=await lV(V.appConfig);if(0===I.registrationStatus){const{installationEntry:I,registrationPromise:m}=await mV(V);return m||I}return I}function lV(V){return IV(V,(V=>{if(!V)throw Q.create("installation-not-found");return sV(V)}))}function sV(V){return 1===(I=V).registrationStatus&&I.registrationTime+y<Date.now()?{fid:V.fid,registrationStatus:0}:V;var I}async function FV(V,I){let{appConfig:m,heartbeatServiceProvider:C}=V;const l=function(V,I){let{fid:m}=I;return`${r(V)}/${m}/authTokens:generate`}(m,I),s=R(m,I),F=C.getImmediate({optional:!0});if(F){const V=await F.getHeartbeatsHeader();V&&s.append("x-firebase-client",V)}const k={installation:{sdkVersion:z,appId:m.appId}},j={method:"POST",headers:s,body:JSON.stringify(k)},E=await i((()=>fetch(l,j)));if(E.ok){return g(await E.json())}throw await h("Generate Auth Token",E)}async function kV(V){let I,m=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const C=await IV(V.appConfig,(C=>{if(!EV(C))throw Q.create("not-registered");const l=C.authToken;if(!m&&function(V){return 2===V.requestStatus&&!function(V){const I=Date.now();return I<V.creationTime||V.creationTime+V.expiresIn<I+B}(V)}(l))return C;if(1===l.requestStatus)return I=async function(V,I){let m=await jV(V.appConfig);for(;1===m.authToken.requestStatus;)await q(100),m=await jV(V.appConfig);const C=m.authToken;return 0===C.requestStatus?kV(V,I):C}(V,m),C;{if(!navigator.onLine)throw Q.create("app-offline");const m=function(V){const I={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},V),{authToken:I})}(C);return I=async function(V,I){try{const m=await FV(V,I),C=Object.assign(Object.assign({},I),{authToken:m});return await L(V.appConfig,C),m}catch(m){if(!G(m)||401!==m.customData.serverCode&&404!==m.customData.serverCode){const m=Object.assign(Object.assign({},I),{authToken:{requestStatus:0}});await L(V.appConfig,m)}else await VV(V.appConfig);throw m}}(V,m),m}}));return I?await I:C.authToken}function jV(V){return IV(V,(V=>{if(!EV(V))throw Q.create("not-registered");const I=V.authToken;return 1===(m=I).requestStatus&&m.requestTime+y<Date.now()?Object.assign(Object.assign({},V),{authToken:{requestStatus:0}}):V;var m}))}function EV(V){return void 0!==V&&2===V.registrationStatus}async function KV(V){let I=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const m=V;await async function(V){const{registrationPromise:I}=await mV(V);I&&await I}(m);return(await kV(m,I)).token}function YV(V){return Q.create("missing-app-config-values",{valueName:V})}const XV="installations",OV=V=>{const I=V.getProvider("app").getImmediate(),m=function(V){if(!V||!V.options)throw YV("App Configuration");if(!V.name)throw YV("App Name");const I=["projectId","apiKey","appId"];for(const m of I)if(!V.options[m])throw YV(m);return{appName:V.name,projectId:V.options.projectId,apiKey:V.options.apiKey,appId:V.options.appId}}(I);return{app:I,appConfig:m,heartbeatServiceProvider:(0,C.A)(I,"heartbeat"),_delete:()=>Promise.resolve()}},vV=V=>{const I=V.getProvider("app").getImmediate(),m=(0,C.A)(I,XV).getImmediate();return{getId:()=>async function(V){const I=V,{installationEntry:m,registrationPromise:C}=await mV(I);return C?C.catch(console.error):kV(I).catch(console.error),m.fid}(m),getToken:V=>KV(m,V)}};(0,C.C)(new F.h(XV,OV,"PUBLIC")),(0,C.C)(new F.h("installations-internal",vV,"PRIVATE")),(0,C.X)(c,H),(0,C.X)(c,H,"esm2017");const NV="analytics",tV="https://www.googletagmanager.com/gtag/js",DV=new l.g("@firebase/analytics"),bV={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},TV=new s.c("analytics","Analytics",bV);function nV(V){if(!V.startsWith(tV)){const I=TV.create("invalid-gtag-resource",{gtagURL:V});return DV.warn(I.message),""}return V}function xV(V){return Promise.all(V.map((V=>V.catch((V=>V)))))}function SV(V,I){const m=function(V,I){let m;return window.trustedTypes&&(m=window.trustedTypes.createPolicy(V,I)),m}("firebase-js-sdk-policy",{createScriptURL:nV}),C=document.createElement("script"),l=`${tV}?l=${V}&id=${I}`;C.src=m?null===m||void 0===m?void 0:m.createScriptURL(l):l,C.async=!0,document.head.appendChild(C)}function cV(V,I,m,C){return async function(l){try{for(var s=arguments.length,F=new Array(s>1?s-1:0),k=1;k<s;k++)F[k-1]=arguments[k];if("event"===l){const[C,l]=F;await async function(V,I,m,C,l){try{let s=[];if(l&&l.send_to){let V=l.send_to;Array.isArray(V)||(V=[V]);const C=await xV(m);for(const m of V){const V=C.find((V=>V.measurementId===m)),l=V&&I[V.appId];if(!l){s=[];break}s.push(l)}}0===s.length&&(s=Object.values(I)),await Promise.all(s),V("event",C,l||{})}catch(s){DV.error(s)}}(V,I,m,C,l)}else if("config"===l){const[l,s]=F;await async function(V,I,m,C,l,s){const F=C[l];try{if(F)await I[F];else{const V=(await xV(m)).find((V=>V.measurementId===l));V&&await I[V.appId]}}catch(k){DV.error(k)}V("config",l,s)}(V,I,m,C,l,s)}else if("consent"===l){const[I]=F;V("consent","update",I)}else if("get"===l){const[I,m,C]=F;V("get",I,m,C)}else if("set"===l){const[I]=F;V("set",I)}else V(l,...F)}catch(j){DV.error(j)}}}const HV=new class{constructor(){let V=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=V,this.intervalMillis=I}getThrottleMetadata(V){return this.throttleMetadata[V]}setThrottleMetadata(V,I){this.throttleMetadata[V]=I}deleteThrottleMetadata(V){delete this.throttleMetadata[V]}};function yV(V){return new Headers({Accept:"application/json","x-goog-api-key":V})}async function zV(V){let I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:HV,m=arguments.length>2?arguments[2]:void 0;const{appId:C,apiKey:l,measurementId:s}=V.options;if(!C)throw TV.create("no-app-id");if(!l){if(s)return{measurementId:s,appId:C};throw TV.create("no-api-key")}const F=I.getThrottleMetadata(C)||{backoffCount:0,throttleEndTimeMillis:Date.now()},k=new BV;return setTimeout((async()=>{k.abort()}),void 0!==m?m:6e4),ZV({appId:C,apiKey:l,measurementId:s},F,k,I)}async function ZV(V,I,m){let{throttleEndTimeMillis:C,backoffCount:l}=I,F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:HV;var k;const{appId:j,measurementId:E}=V;try{await function(V,I){return new Promise(((m,C)=>{const l=Math.max(I-Date.now(),0),s=setTimeout(m,l);V.addEventListener((()=>{clearTimeout(s),C(TV.create("fetch-throttle",{throttleEndTimeMillis:I}))}))}))}(m,C)}catch(K){if(E)return DV.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${E} provided in the "measurementId" field in the local Firebase config. [${null===K||void 0===K?void 0:K.message}]`),{appId:j,measurementId:E};throw K}try{const I=await async function(V){var I;const{appId:m,apiKey:C}=V,l={method:"GET",headers:yV(C)},s="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",m),F=await fetch(s,l);if(200!==F.status&&304!==F.status){let V="";try{const m=await F.json();(null===(I=m.error)||void 0===I?void 0:I.message)&&(V=m.error.message)}catch(k){}throw TV.create("config-fetch-failed",{httpStatus:F.status,responseMessage:V})}return F.json()}(V);return F.deleteThrottleMetadata(j),I}catch(K){const I=K;if(!function(V){if(!(V instanceof s.d)||!V.customData)return!1;const I=Number(V.customData.httpStatus);return 429===I||500===I||503===I||504===I}(I)){if(F.deleteThrottleMetadata(j),E)return DV.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${E} provided in the "measurementId" field in the local Firebase config. [${null===I||void 0===I?void 0:I.message}]`),{appId:j,measurementId:E};throw K}const C=503===Number(null===(k=null===I||void 0===I?void 0:I.customData)||void 0===k?void 0:k.httpStatus)?(0,s.m)(l,F.intervalMillis,30):(0,s.m)(l,F.intervalMillis),Y={throttleEndTimeMillis:Date.now()+C,backoffCount:l+1};return F.setThrottleMetadata(j,Y),DV.debug(`Calling attemptFetch again in ${C} millis`),ZV(V,Y,m,F)}}class BV{constructor(){this.listeners=[]}addEventListener(V){this.listeners.push(V)}abort(){this.listeners.forEach((V=>V()))}}let WV,QV;function GV(V){QV=V}function rV(V){WV=V}async function gV(V,I,m,C,l,F,k){var j;const E=zV(V);E.then((I=>{m[I.measurementId]=I.appId,V.options.measurementId&&I.measurementId!==V.options.measurementId&&DV.warn(`The measurement ID in the local Firebase config (${V.options.measurementId}) does not match the measurement ID fetched from the server (${I.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((V=>DV.error(V))),I.push(E);const K=async function(){if(!(0,s.L)())return DV.warn(TV.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,s.Y)()}catch(V){return DV.warn(TV.create("indexeddb-unavailable",{errorInfo:null===V||void 0===V?void 0:V.toString()}).message),!1}return!0}().then((V=>V?C.getId():void 0)),[Y,X]=await Promise.all([E,K]);(function(V){const I=window.document.getElementsByTagName("script");for(const m of Object.values(I))if(m.src&&m.src.includes(tV)&&m.src.includes(V))return m;return null})(F)||SV(F,Y.measurementId),QV&&(l("consent","default",QV),GV(void 0)),l("js",new Date);const O=null!==(j=null===k||void 0===k?void 0:k.config)&&void 0!==j?j:{};return O.origin="firebase",O.update=!0,null!=X&&(O.firebase_id=X),l("config",Y.measurementId,O),WV&&(l("set",WV),rV(void 0)),Y.measurementId}class hV{constructor(V){this.app=V}_delete(){return delete dV[this.app.options.appId],Promise.resolve()}}let dV={},RV=[];const iV={};let qV,PV,uV="dataLayer",oV="gtag",pV=!1;function MV(V){if(pV)throw TV.create("already-initialized");V.dataLayerName&&(uV=V.dataLayerName),V.gtagName&&(oV=V.gtagName)}function fV(V,I,m){!function(){const V=[];if((0,s.D)()&&V.push("This is a browser extension environment."),(0,s.e)()||V.push("Cookies are not available."),V.length>0){const I=V.map(((V,I)=>`(${I+1}) ${V}`)).join(" "),m=TV.create("invalid-analytics-context",{errorInfo:I});DV.warn(m.message)}}();const C=V.options.appId;if(!C)throw TV.create("no-app-id");if(!V.options.apiKey){if(!V.options.measurementId)throw TV.create("no-api-key");DV.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${V.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=dV[C])throw TV.create("already-exists",{id:C});if(!pV){!function(V){let I=[];Array.isArray(window[V])?I=window[V]:window[V]=I}(uV);const{wrappedGtag:V,gtagCore:I}=function(V,I,m,C,l){let s=function(){for(var V=arguments.length,I=new Array(V),m=0;m<V;m++)I[m]=arguments[m];window[C].push(arguments)};return window[l]&&"function"===typeof window[l]&&(s=window[l]),window[l]=cV(s,V,I,m),{gtagCore:s,wrappedGtag:window[l]}}(dV,RV,iV,uV,oV);PV=V,qV=I,pV=!0}dV[C]=gV(V,RV,iV,I,qV,uV,m);return new hV(V)}function wV(){let V=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,C.N)();V=(0,s.z)(V);const I=(0,C.A)(V,NV);return I.isInitialized()?I.getImmediate():AV(V)}function AV(V){let I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const m=(0,C.A)(V,NV);if(m.isInitialized()){const V=m.getImmediate();if((0,s.s)(I,m.getOptions()))return V;throw TV.create("already-initialized")}return m.initialize({options:I})}async function JV(){if((0,s.D)())return!1;if(!(0,s.e)())return!1;if(!(0,s.L)())return!1;try{return await(0,s.Y)()}catch(V){return!1}}function UV(V,I,m){V=(0,s.z)(V),async function(V,I,m,C){if(C&&C.global)return V("set",{screen_name:m}),Promise.resolve();V("config",await I,{update:!0,screen_name:m})}(PV,dV[V.app.options.appId],I,m).catch((V=>DV.error(V)))}async function eV(V){return V=(0,s.z)(V),async function(V,I){const m=await I;return new Promise(((I,C)=>{V("get",m,"client_id",(V=>{V||C(TV.create("no-client-id")),I(V)}))}))}(PV,dV[V.app.options.appId])}function aV(V,I,m){V=(0,s.z)(V),async function(V,I,m,C){if(C&&C.global)return V("set",{user_id:m}),Promise.resolve();V("config",await I,{update:!0,user_id:m})}(PV,dV[V.app.options.appId],I,m).catch((V=>DV.error(V)))}function LV(V,I,m){V=(0,s.z)(V),async function(V,I,m,C){if(C&&C.global){const I={};for(const V of Object.keys(m))I[`user_properties.${V}`]=m[V];return V("set",I),Promise.resolve()}V("config",await I,{update:!0,user_properties:m})}(PV,dV[V.app.options.appId],I,m).catch((V=>DV.error(V)))}function VI(V,I){V=(0,s.z)(V),async function(V,I){const m=await V;window[`ga-disable-${m}`]=!I}(dV[V.app.options.appId],I).catch((V=>DV.error(V)))}function II(V){PV?PV("set",V):rV(V)}function mI(V,I,m,C){V=(0,s.z)(V),async function(V,I,m,C,l){if(l&&l.global)V("event",m,C);else{const l=await I;V("event",m,Object.assign(Object.assign({},C),{send_to:l}))}}(PV,dV[V.app.options.appId],I,m,C).catch((V=>DV.error(V)))}function CI(V){PV?PV("consent","update",V):GV(V)}const lI="@firebase/analytics",sI="0.10.0";(0,C.C)(new F.h(NV,((V,I)=>{let{options:m}=I;return fV(V.getProvider("app").getImmediate(),V.getProvider("installations-internal").getImmediate(),m)}),"PUBLIC")),(0,C.C)(new F.h("analytics-internal",(function(V){try{const I=V.getProvider(NV).getImmediate();return{logEvent:(V,m,C)=>mI(I,V,m,C)}}catch(I){throw TV.create("interop-component-reg-failed",{reason:I})}}),"PRIVATE")),(0,C.X)(lI,sI),(0,C.X)(lI,sI,"esm2017")}}]);