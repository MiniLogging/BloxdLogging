"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6],{2478:(U,M,b)=>{var a=b(591),A=b(497),H=b(531),W=b(614),y=b(562),O=b(601);y.e.prototype._partialLoadFile=function(U,M,b,a){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(U,(U=>{b[M]=U,b._internalCount++,6===b._internalCount&&a(b)}),void 0,void 0,!0,((U,M)=>{A&&U&&A(U.status+" "+U.statusText,M)}))},y.e.prototype._cascadeLoadFiles=function(U,M,b){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const A=[];A._internalCount=0;for(let H=0;H<6;H++)this._partialLoadFile(b[H],H,A,M,a)},y.e.prototype._cascadeLoadImgs=function(U,M,b,a){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,H=arguments.length>5?arguments[5]:void 0;const W=[];W._internalCount=0;for(let y=0;y<6;y++)this._partialLoadImg(a[y],y,W,U,M,b,A,H)},y.e.prototype._partialLoadImg=function(U,M,b,a,A,y){let O=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,e=arguments.length>7?arguments[7]:void 0;const x=(0,W.d)();(0,H.u)(U,(U=>{b[M]=U,b._internalCount++,a&&a.removePendingData(x),6===b._internalCount&&y&&y(A,b)}),((U,M)=>{a&&a.removePendingData(x),O&&O(U,M)}),a?a.offlineProvider:null,e),a&&a.addPendingData(x)},y.e.prototype.createCubeTextureBase=function(U,M,b,H){let W=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,y=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,e=arguments.length>6?arguments[6]:void 0,x=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,P=arguments.length>8&&void 0!==arguments[8]&&arguments[8],Z=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,C=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,r=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,B=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,J=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,F=arguments.length>14&&void 0!==arguments[14]&&arguments[14],f=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const L=r||new a.e(this,7);L.isCube=!0,L.url=U,L.generateMipMaps=!H,L._lodGenerationScale=Z,L._lodGenerationOffset=C,L._useSRGBBuffer=!!F&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!H),L!==r&&(L.label=U.substring(0,60)),this._doNotHandleContextLost||(L._extension=x,L._files=b,L._buffer=f);const z=U;this._transformTextureUrl&&!r&&(U=this._transformTextureUrl(U));const o=x??function(U){const M=U.split("?")[0],b=M.lastIndexOf(".");return b>-1?M.substring(b).toLowerCase():""}(U),S=(0,O.e)(o),h=(U,M)=>{L.dispose(),y?y(U,M):U&&A.b.Warn(U)},i=(a,y)=>{U===z?a&&h(a.status+" "+a.statusText,y):(A.b.Warn(`Failed to load ${U}, falling back to the ${z}`),this.createCubeTextureBase(z,M,b,!!H,W,h,e,x,P,Z,C,L,B,J,F,f))};if(S)S.then((a=>{const A=U=>{B&&B(L,U),a.loadCubeData(U,L,P,W,((U,M)=>{h(U,M)}))};f?A(f):b&&6===b.length?a.supportCascades?this._cascadeLoadFiles(M,(U=>A(U.map((U=>new Uint8Array(U))))),b,h):h("Textures type does not support cascades."):this._loadFile(U,(U=>A(new Uint8Array(U))),void 0,void 0,!0,i)}));else{if(!b||0===b.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(M,L,((U,M)=>{J&&J(U,M)}),b,h)}return this._internalTexturesCache.push(L),L}},2351:(U,M,b)=>{b.d(M,{DDSTools:()=>r});var a=b(682),A=b(497),H=b(2355),W=b(2362);b(2478);const y=131072,O=131072;function e(U){return U.charCodeAt(0)+(U.charCodeAt(1)<<8)+(U.charCodeAt(2)<<16)+(U.charCodeAt(3)<<24)}const x=e("DXT1"),P=e("DXT3"),Z=e("DXT5"),C=e("DX10");class r{static GetDDSInfo(U){const M=new Int32Array(U.buffer,U.byteOffset,31),b=new Int32Array(U.buffer,U.byteOffset,35);let a=1;M[2]&y&&(a=Math.max(1,M[7]));const A=M[21],H=A===C?b[32]:0;let W=0;switch(A){case 113:W=2;break;case 116:W=1;break;case C:if(10===H){W=2;break}if(2===H){W=1;break}}return{width:M[4],height:M[3],mipmapCount:a,isFourCC:4===(4&M[20]),isRGB:64===(64&M[20]),isLuminance:(M[20]&O)===O,isCube:512===(512&M[28]),isCompressed:A===x||A===P||A===Z,dxgiFormat:H,textureType:W}}static _GetHalfFloatAsFloatRGBAArrayBuffer(U,M,b,a,A,H){const y=new Float32Array(a),O=new Uint16Array(A,b);let e=0;for(let x=0;x<M;x++)for(let M=0;M<U;M++){const b=4*(M+x*U);y[e]=(0,W.i)(O[b]),y[e+1]=(0,W.i)(O[b+1]),y[e+2]=(0,W.i)(O[b+2]),r.StoreLODInAlphaChannel?y[e+3]=H:y[e+3]=(0,W.i)(O[b+3]),e+=4}return y}static _GetHalfFloatRGBAArrayBuffer(U,M,b,a,A,H){if(r.StoreLODInAlphaChannel){const y=new Uint16Array(a),O=new Uint16Array(A,b);let e=0;for(let b=0;b<M;b++)for(let M=0;M<U;M++){const a=4*(M+b*U);y[e]=O[a],y[e+1]=O[a+1],y[e+2]=O[a+2],y[e+3]=(0,W.n)(H),e+=4}return y}return new Uint16Array(A,b,a)}static _GetFloatRGBAArrayBuffer(U,M,b,a,A,H){if(r.StoreLODInAlphaChannel){const W=new Float32Array(a),y=new Float32Array(A,b);let O=0;for(let b=0;b<M;b++)for(let M=0;M<U;M++){const a=4*(M+b*U);W[O]=y[a],W[O+1]=y[a+1],W[O+2]=y[a+2],W[O+3]=H,O+=4}return W}return new Float32Array(A,b,a)}static _GetFloatAsHalfFloatRGBAArrayBuffer(U,M,b,a,A,H){const y=new Uint16Array(a),O=new Float32Array(A,b);let e=0;for(let x=0;x<M;x++)for(let M=0;M<U;M++)y[e]=(0,W.n)(O[e]),y[e+1]=(0,W.n)(O[e+1]),y[e+2]=(0,W.n)(O[e+2]),r.StoreLODInAlphaChannel?y[e+3]=(0,W.n)(H):y[e+3]=(0,W.n)(O[e+3]),e+=4;return y}static _GetFloatAsUIntRGBAArrayBuffer(U,M,b,A,H,W){const y=new Uint8Array(A),O=new Float32Array(H,b);let e=0;for(let x=0;x<M;x++)for(let M=0;M<U;M++){const b=4*(M+x*U);y[e]=255*(0,a.b)(O[b]),y[e+1]=255*(0,a.b)(O[b+1]),y[e+2]=255*(0,a.b)(O[b+2]),r.StoreLODInAlphaChannel?y[e+3]=W:y[e+3]=255*(0,a.b)(O[b+3]),e+=4}return y}static _GetHalfFloatAsUIntRGBAArrayBuffer(U,M,b,A,H,y){const O=new Uint8Array(A),e=new Uint16Array(H,b);let x=0;for(let P=0;P<M;P++)for(let M=0;M<U;M++){const b=4*(M+P*U);O[x]=255*(0,a.b)((0,W.i)(e[b])),O[x+1]=255*(0,a.b)((0,W.i)(e[b+1])),O[x+2]=255*(0,a.b)((0,W.i)(e[b+2])),r.StoreLODInAlphaChannel?O[x+3]=y:O[x+3]=255*(0,a.b)((0,W.i)(e[b+3])),x+=4}return O}static _GetRGBAArrayBuffer(U,M,b,a,A,H,W,y,O){const e=new Uint8Array(a),x=new Uint8Array(A,b);let P=0;for(let Z=0;Z<M;Z++)for(let M=0;M<U;M++){const b=4*(M+Z*U);e[P]=x[b+H],e[P+1]=x[b+W],e[P+2]=x[b+y],e[P+3]=x[b+O],P+=4}return e}static _ExtractLongWordOrder(U){return 0===U||255===U||-16777216===U?0:1+r._ExtractLongWordOrder(U>>8)}static _GetRGBArrayBuffer(U,M,b,a,A,H,W,y){const O=new Uint8Array(a),e=new Uint8Array(A,b);let x=0;for(let P=0;P<M;P++)for(let M=0;M<U;M++){const b=3*(M+P*U);O[x]=e[b+H],O[x+1]=e[b+W],O[x+2]=e[b+y],x+=3}return O}static _GetLuminanceArrayBuffer(U,M,b,a,A){const H=new Uint8Array(a),W=new Uint8Array(A,b);let y=0;for(let O=0;O<M;O++)for(let M=0;M<U;M++){const b=M+O*U;H[y]=W[b],y++}return H}static UploadDDSLevels(U,M,b,a,W,O){let e=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,B=arguments.length>7?arguments[7]:void 0,J=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],F=null;a.sphericalPolynomial&&(F=[]);const f=!!U.getCaps().s3tc;M.generateMipMaps=W;const L=new Int32Array(b.buffer,b.byteOffset,31);let z,o,S,h,i,Y,d,s=0,q=0,m=1;if(542327876!==L[0])return void A.b.Error("Invalid magic number in DDS header");if(!a.isFourCC&&!a.isRGB&&!a.isLuminance)return void A.b.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(a.isCompressed&&!f)return void A.b.Error("Compressed textures are not supported on this platform.");let n=L[22];h=L[1]+4;let E=!1;if(a.isFourCC)switch(z=L[21],z){case x:m=8,q=33777;break;case P:m=16,q=33778;break;case Z:m=16,q=33779;break;case 113:E=!0,n=64;break;case 116:E=!0,n=128;break;case C:{h+=20;let U=!1;switch(a.dxgiFormat){case 10:E=!0,n=64,U=!0;break;case 2:E=!0,n=128,U=!0;break;case 88:a.isRGB=!0,a.isFourCC=!1,n=32,U=!0}if(U)break}default:return void A.b.Error(["Unsupported FourCC code:",(X=z,String.fromCharCode(255&X,X>>8&255,X>>16&255,X>>24&255))])}var X;const Q=r._ExtractLongWordOrder(L[23]),I=r._ExtractLongWordOrder(L[24]),v=r._ExtractLongWordOrder(L[25]),t=r._ExtractLongWordOrder(L[26]);E&&(q=U._getRGBABufferInternalSizedFormat(a.textureType)),Y=1,L[2]&y&&!1!==W&&(Y=Math.max(1,L[7]));const V=B||0,k=U.getCaps();for(let A=V;A<O;A++){for(o=L[4],S=L[3],d=0;d<Y;++d){if(-1===e||e===d){const H=-1===e?d:0;if(!a.isCompressed&&a.isFourCC){M.format=5,s=o*S*4;let a=null;if(U._badOS||U._badDesktopOS||!k.textureHalfFloat&&!k.textureFloat)128===n?(a=r._GetFloatAsUIntRGBAArrayBuffer(o,S,b.byteOffset+h,s,b.buffer,H),F&&0==H&&F.push(r._GetFloatRGBAArrayBuffer(o,S,b.byteOffset+h,s,b.buffer,H))):64===n&&(a=r._GetHalfFloatAsUIntRGBAArrayBuffer(o,S,b.byteOffset+h,s,b.buffer,H),F&&0==H&&F.push(r._GetHalfFloatAsFloatRGBAArrayBuffer(o,S,b.byteOffset+h,s,b.buffer,H))),M.type=0;else{const U=k.textureFloat&&(J&&k.textureFloatLinearFiltering||!J),A=k.textureHalfFloat&&(J&&k.textureHalfFloatLinearFiltering||!J),W=(128===n||64===n&&!A)&&U?1:(64===n||128===n&&!U)&&A?2:0;let y,O=null;if(128===n)switch(W){case 1:y=r._GetFloatRGBAArrayBuffer,O=null;break;case 2:y=r._GetFloatAsHalfFloatRGBAArrayBuffer,O=r._GetFloatRGBAArrayBuffer;break;case 0:y=r._GetFloatAsUIntRGBAArrayBuffer,O=r._GetFloatRGBAArrayBuffer}else switch(W){case 1:y=r._GetHalfFloatAsFloatRGBAArrayBuffer,O=null;break;case 2:y=r._GetHalfFloatRGBAArrayBuffer,O=r._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:y=r._GetHalfFloatAsUIntRGBAArrayBuffer,O=r._GetHalfFloatAsFloatRGBAArrayBuffer}M.type=W,a=y(o,S,b.byteOffset+h,s,b.buffer,H),F&&0==H&&F.push(O?O(o,S,b.byteOffset+h,s,b.buffer,H):a)}a&&U._uploadDataToTextureDirectly(M,a,A,H)}else if(a.isRGB)M.type=0,24===n?(M.format=4,s=o*S*3,i=r._GetRGBArrayBuffer(o,S,b.byteOffset+h,s,b.buffer,Q,I,v),U._uploadDataToTextureDirectly(M,i,A,H)):(M.format=5,s=o*S*4,i=r._GetRGBAArrayBuffer(o,S,b.byteOffset+h,s,b.buffer,Q,I,v,t),U._uploadDataToTextureDirectly(M,i,A,H));else if(a.isLuminance){const a=U._getUnpackAlignement(),W=o;s=Math.floor((o+a-1)/a)*a*(S-1)+W,i=r._GetLuminanceArrayBuffer(o,S,b.byteOffset+h,s,b.buffer),M.format=1,M.type=0,U._uploadDataToTextureDirectly(M,i,A,H)}else s=Math.max(4,o)/4*Math.max(4,S)/4*m,i=new Uint8Array(b.buffer,b.byteOffset+h,s),M.type=0,U._uploadCompressedDataToTextureDirectly(M,q,o,S,i,A,H)}h+=n?o*S*(n/8):s,o*=.5,S*=.5,o=Math.max(1,o),S=Math.max(1,S)}if(void 0!==B)break}F&&F.length>0?a.sphericalPolynomial=H.c.ConvertCubeMapToSphericalPolynomial({size:L[4],right:F[0],left:F[1],up:F[2],down:F[3],front:F[4],back:F[5],format:5,type:1,gammaSpace:!1}):a.sphericalPolynomial=void 0}}r.StoreLODInAlphaChannel=!1}}]);