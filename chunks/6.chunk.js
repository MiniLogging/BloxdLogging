"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6,7],{11255:(x,Z,l)=>{var t=l(1595),L=l(1083);L.d.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(L.d.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=t.d.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((x=>{this._texture._sphericalPolynomial=x,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(x){this._texture&&(this._texture._sphericalPolynomial=x)},enumerable:!0,configurable:!0})},11261:(x,Z,l)=>{l.r(Z),l.d(Z,{Dispose:()=>c,DumpData:()=>Q,DumpDataAsync:()=>V,DumpFramebuffer:()=>j,DumpTools:()=>a});var t=l(1617),L=l(1274),z=l(1076),A=l(1070);let P,C=null;async function j(x,Z,l,t){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",z=arguments.length>5?arguments[5]:void 0,A=arguments.length>6?arguments[6]:void 0;const P=await l.readPixels(0,0,x,Z);Q(x,Z,new Uint8Array(P.buffer),t,L,z,!0,void 0,A)}function V(x,Z,l){let t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",L=arguments.length>4?arguments[4]:void 0,z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],A=arguments.length>6&&void 0!==arguments[6]&&arguments[6],P=arguments.length>7?arguments[7]:void 0;return new Promise((C=>{Q(x,Z,l,(x=>C(x)),t,L,z,A,P)}))}function Q(x,Z,j,V){let Q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",a=arguments.length>5?arguments[5]:void 0,I=arguments.length>6&&void 0!==arguments[6]&&arguments[6],u=arguments.length>7&&void 0!==arguments[7]&&arguments[7],n=arguments.length>8?arguments[8]:void 0;(async function(){return C||(C=new Promise(((x,Z)=>{let L,z=null;const C={we:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(l.bind(l,1508)).then((j=>{let{ThinEngine:V}=j;try{L=new OffscreenCanvas(100,100),z=new V(L,!1,C)}catch(a){L=document.createElement("canvas"),z=new V(L,!1,C)}A.d.Instances.pop(),A.d.OnEnginesDisposedObservable.add((x=>{z&&x!==z&&!z.u&&0===A.d.Instances.length&&c()})),z.getCaps().parallelShaderCompile=void 0;const Q=new t.e(z);l.e(32).then(l.bind(l,11906)).then((l=>{let{passPixelShader:A}=l;if(!z)return void Z("Engine is not defined");const C=new t.f({Ld:z,name:A.name,fragmentShader:A.shader,samplerNames:["textureSampler"]});P={canvas:L,Ld:z,renderer:Q,wrapper:C},x(P)}))})).catch(Z)}))),await C})().then((l=>{if(l.Ld.setSize(x,Z,!0),j instanceof Float32Array){const x=new Uint8Array(j.length);let Z=j.length;for(;Z--;){const l=j[Z];x[Z]=Math.round(255*(0,z.d)(l))}j=x}const t=l.Ld.createRawTexture(j,x,Z,5,!1,!I,1);l.renderer.setViewport(),l.renderer.applyEffectWrapper(l.wrapper),l.wrapper.effect._bindTexture("textureSampler",t),l.renderer.draw(),u?L.f.ToBlob(l.canvas,(x=>{const Z=new FileReader;Z.onload=x=>{const Z=x.target.result;V&&V(Z)},Z.readAsArrayBuffer(x)}),Q,n):L.f.EncodeScreenshotCanvasData(l.canvas,V,Q,a,n),t.dispose()}))}function c(){var x;P?(P.wrapper.dispose(),P.renderer.dispose(),P.Ld.dispose()):null===(x=C)||void 0===x||x.then((x=>{x.wrapper.dispose(),x.renderer.dispose(),x.Ld.dispose()}));C=null,P=null}const a={DumpData:Q,DumpDataAsync:V,DumpFramebuffer:j,Dispose:c};L.f.DumpData=Q,L.f.DumpDataAsync=V,L.f.DumpFramebuffer=j},11249:(x,Z,l)=>{l.d(Z,{d:()=>I,h:()=>v,j:()=>f,k:()=>S});var t=l(1274),L=l(1043),z=l(1076),A=l(1560),P=l(1206),C=l(1083),j=(l(1267),l(1614)),V=l(1156);l(11251),l(11255),l(11261);const Q="image/png",c=2,a=[134,22,135,150,246,214,150,54];function I(x){const Z=new DataView(x.buffer,x.byteOffset,x.byteLength);let l=0;for(let A=0;A<a.length;A++)if(Z.getUint8(l++)!==a[A])return V.b.Error("Not a babylon environment map"),null;let t="",L=0;for(;L=Z.getUint8(l++);)t+=String.fromCharCode(L);let z=JSON.parse(t);return z=u(z),z.Pe&&(z.Pe.specularDataPosition=l,z.Pe.lodGenerationScale=z.Pe.lodGenerationScale||.8),z}function u(x){if(x.version>c)throw new Error(`Unsupported babylon environment map version "${x.version}". Latest supported version is "${c}".`);return 2===x.version?x:x={...x,version:2,imageType:Q}}function n(x,Z){const l=(Z=u(Z)).Pe;let t=Math.log2(Z.width);if(t=Math.round(t)+1,l.mipmaps.length!==6*t)throw new Error(`Unsupported specular mipmaps number "${l.mipmaps.length}"`);const L=new Array(t);for(let z=0;z<t;z++){L[z]=new Array(6);for(let Z=0;Z<6;Z++){const t=l.mipmaps[6*z+Z];L[z][Z]=new Uint8Array(x.buffer,x.byteOffset+l.specularDataPosition+t.position,t.length)}}return L}function v(x,Z,l){const t=(l=u(l)).Pe;if(!t)return Promise.resolve();x._lodGenerationScale=t.lodGenerationScale;return W(x,n(Z,l),l.imageType)}function X(x,Z,l,t,L,z,A,P,C,j,V){return new Promise(((Q,c)=>{if(l){const l=Z.createTexture(null,!0,!0,null,1,null,(x=>{c(x)}),x);null===t||void 0===t||t.onEffectCreatedObservable.addOnce((P=>{P.executeWhenCompiled((()=>{t.externalTextureSamplerBinding=!0,t.onApply=t=>{t._bindTexture("textureSampler",l),t.setFloat2("scale",1,Z._features.needsInvertingBitmap&&x instanceof ImageBitmap?-1:1)},Z.scenes.length&&(Z.scenes[0].postProcessManager.directRender([t],j,!0,z,A),Z.restoreDefaultFramebuffer(),l.dispose(),URL.revokeObjectURL(L),Q())}))}))}else{if(Z._uploadImageToTexture(V,x,z,A),P){const l=C[A];l&&Z._uploadImageToTexture(l._texture,x,z,0)}Q()}}))}async function W(x,Z){let L=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Q;if(!t.f.IsExponentOfTwo(x.width))throw new Error("Texture size must be a power of two");const A=(0,z.l)(x.width)+1,V=x.getEngine();let c=!1,a=!1,I=null,u=null,n=null;const v=V.getCaps();x.format=5,x.type=0,x.generateMipMaps=!0,x._cachedAnisotropicFilteringLevel=null,V.updateTextureSamplingMode(3,x),v.textureLOD?V._features.supportRenderAndCopyToLodForFloatTextures?v.textureHalfFloatRender&&v.textureHalfFloatLinearFiltering?(c=!0,x.type=2):v.textureFloatRender&&v.textureFloatLinearFiltering&&(c=!0,x.type=1):c=!1:(c=!1,a=!0,n={});let W=0;if(c)V.isWebGPU?(W=1,await l.e(17).then(l.bind(l,13470))):await l.e(24).then(l.bind(l,13479)),I=new j.d("rgbdDecode","rgbdDecode",null,null,1,null,3,V,!1,void 0,x.type,void 0,null,!1,void 0,W),x._isRGBD=!1,x.invertY=!1,u=V.createRenderTargetCubeTexture(x.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:x.type,format:5});else if(x._isRGBD=!0,x.invertY=!0,a){const Z=3,l=x._lodGenerationScale,t=x._lodGenerationOffset;for(let L=0;L<Z;L++){const z=(A-1)*l+t,j=t+(z-t)*(1-L/(Z-1)),Q=Math.round(Math.min(Math.max(j,0),z)),c=new P.b(V,2);c.isCube=!0,c.invertY=!0,c.generateMipMaps=!1,V.updateTextureSamplingMode(2,c);const a=new C.d(null);switch(a._isCube=!0,a._texture=c,n[Q]=a,L){case 0:x._lodTextureLow=a;break;case 1:x._lodTextureMid=a;break;case 2:x._lodTextureHigh=a}}}const f=[];for(let l=0;l<Z.length;l++)for(let t=0;t<6;t++){const z=Z[l][t],A=new Blob([z],{type:L}),P=URL.createObjectURL(A);let C;if(V._features.forceBitmapOverHTMLImageElement)C=V.createImageBitmap(A,{premultiplyAlpha:"none"}).then((Z=>X(Z,V,c,I,P,t,l,a,n,u,x)));else{const Z=new Image;Z.src=P,C=new Promise(((L,z)=>{Z.onload=()=>{X(Z,V,c,I,P,t,l,a,n,u,x).then((()=>L())).catch((x=>{z(x)}))},Z.onerror=x=>{z(x)}}))}f.push(C)}if(Z.length<A){let l;const t=Math.pow(2,A-1-Z.length),L=t*t*4;switch(x.type){case 0:l=new Uint8Array(L);break;case 2:l=new Uint16Array(L);break;case 1:l=new Float32Array(L)}for(let z=Z.length;z<A;z++)for(let Z=0;Z<6;Z++)V._uploadArrayBufferViewToTexture(x,l,Z,z)}return Promise.all(f).then((()=>{u&&(V._releaseTexture(x),u._swapAndDie(x)),I&&I.dispose(),a&&(x._lodTextureHigh&&x._lodTextureHigh._texture&&(x._lodTextureHigh._texture.isReady=!0),x._lodTextureMid&&x._lodTextureMid._texture&&(x._lodTextureMid._texture.isReady=!0),x._lodTextureLow&&x._lodTextureLow._texture&&(x._lodTextureLow._texture.isReady=!0))}))}function f(x,Z){const l=(Z=u(Z)).irradiance;if(!l)return;const t=new A.g;L.k.FromArrayToRef(l.x,0,t.x),L.k.FromArrayToRef(l.y,0,t.y),L.k.FromArrayToRef(l.z,0,t.z),L.k.FromArrayToRef(l.xx,0,t.xx),L.k.FromArrayToRef(l.yy,0,t.yy),L.k.FromArrayToRef(l.zz,0,t.zz),L.k.FromArrayToRef(l.yz,0,t.yz),L.k.FromArrayToRef(l.zx,0,t.zx),L.k.FromArrayToRef(l.xy,0,t.xy),x._sphericalPolynomial=t}function S(x,Z,l,t,L){const z=W(x.getEngine().createRawCubeTexture(null,x.width,x.format,x.type,x.generateMipMaps,x.invertY,x.samplingMode,x._compression),Z).then((()=>x));return x.onRebuildCallback=x=>({proxy:z,isReady:!0,isAsync:!0}),x._source=13,x._bufferViewArrayArray=Z,x._lodGenerationScale=t,x._lodGenerationOffset=L,x._sphericalPolynomial=l,W(x,Z).then((()=>(x.isReady=!0,x)))}},11251:(x,Z,l)=>{l.d(Z,{c:()=>z});var t=l(1614),L=l(1603);class z{static ExpandRGBDTexture(x){const Z=x._texture;if(!Z||!x.isRGBD)return;const L=Z.getEngine(),z=L.getCaps(),A=Z.isReady;let P=!1;z.textureHalfFloatRender&&z.textureHalfFloatLinearFiltering?(P=!0,Z.type=2):z.textureFloatRender&&z.textureFloatLinearFiltering&&(P=!0,Z.type=1),P&&(Z.isReady=!1,Z._isRGBD=!1,Z.invertY=!1);const C=async()=>{const z=L.isWebGPU,A=z?1:0;Z.isReady=!1,z?await Promise.all([l.e(17).then(l.bind(l,13470)),l.e(18).then(l.bind(l,13487))]):await Promise.all([l.e(24).then(l.bind(l,13479)),l.e(25).then(l.bind(l,13491))]);const P=new t.d("rgbdDecode","rgbdDecode",null,null,1,null,3,L,!1,void 0,Z.type,void 0,null,!1,void 0,A);P.externalTextureSamplerBinding=!0;const C=L.createRenderTargetTexture(Z.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:Z.samplingMode,type:Z.type,format:5});P.onEffectCreatedObservable.addOnce((l=>{l.executeWhenCompiled((()=>{P.onApply=x=>{x._bindTexture("textureSampler",Z),x.setFloat2("scale",1,1)},x.va().postProcessManager.directRender([P],C,!0),L.restoreDefaultFramebuffer(),L._releaseTexture(Z),P&&P.dispose(),C._swapAndDie(Z),Z.isReady=!0}))}))};P&&(A?C():x.onLoadObservable.addOnce(C))}static EncodeTextureToRGBD(x,Z){let l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,L.b)("rgbdEncode",x,Z,l,1,5)}}}}]);