"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6,7],{10052:(a,i,K)=>{var j=K(1565),N=K(1061);N.d.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(N.d.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=j.b.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((a=>{this._texture._sphericalPolynomial=a,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(a){this._texture&&(this._texture._sphericalPolynomial=a)},enumerable:!0,configurable:!0})},10058:(a,i,K)=>{K.r(i),K.d(i,{Dispose:()=>U,DumpData:()=>o,DumpDataAsync:()=>f,DumpFramebuffer:()=>H,DumpTools:()=>q});var j=K(1588),N=K(1225),E=K(1052),v=K(1047);let e,Y=null;async function H(a,i,K,j){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",E=arguments.length>5?arguments[5]:void 0,v=arguments.length>6?arguments[6]:void 0;const e=await K.readPixels(0,0,a,i);o(a,i,new Uint8Array(e.buffer),j,N,E,!0,void 0,v)}function f(a,i,K){let j=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",N=arguments.length>4?arguments[4]:void 0,E=arguments.length>5&&void 0!==arguments[5]&&arguments[5],v=arguments.length>6&&void 0!==arguments[6]&&arguments[6],e=arguments.length>7?arguments[7]:void 0;return new Promise((Y=>{o(a,i,K,(a=>Y(a)),j,N,E,v,e)}))}function o(a,i,H,f){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",q=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&void 0!==arguments[6]&&arguments[6],g=arguments.length>7&&void 0!==arguments[7]&&arguments[7],s=arguments.length>8?arguments[8]:void 0;(async function(){return Y||(Y=new Promise(((a,i)=>{let N,E=null;const Y={Re:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(K.bind(K,1478)).then((H=>{let{ThinEngine:f}=H;try{N=new OffscreenCanvas(100,100),E=new f(N,!1,Y)}catch(q){N=document.createElement("canvas"),E=new f(N,!1,Y)}v.e.Instances.pop(),v.e.OnEnginesDisposedObservable.add((a=>{E&&a!==E&&!E.u&&0===v.e.Instances.length&&U()})),E.getCaps().parallelShaderCompile=void 0;const o=new j.b(E);K.e(32).then(K.bind(K,10762)).then((K=>{let{passPixelShader:v}=K;if(!E)return void i("Engine is not defined");const Y=new j.e({Cb:E,name:v.name,fragmentShader:v.shader,samplerNames:["textureSampler"]});e={canvas:N,Cb:E,renderer:o,wrapper:Y},a(e)}))})).catch(i)}))),await Y})().then((K=>{if(K.Cb.setSize(a,i,!0),H instanceof Float32Array){const a=new Uint8Array(H.length);let i=H.length;for(;i--;){const K=H[i];a[i]=Math.round(255*(0,E.b)(K))}H=a}const j=K.Cb.createRawTexture(H,a,i,5,!1,!u,1);K.renderer.setViewport(),K.renderer.applyEffectWrapper(K.wrapper),K.wrapper.effect._bindTexture("textureSampler",j),K.renderer.draw(),g?N.e.ToBlob(K.canvas,(a=>{const i=new FileReader;i.onload=a=>{const i=a.target.result;f&&f(i)},i.readAsArrayBuffer(a)}),o,s):N.e.EncodeScreenshotCanvasData(K.canvas,f,o,q,s),j.dispose()}))}function U(){var a;e?(e.wrapper.dispose(),e.renderer.dispose(),e.Cb.dispose()):null===(a=Y)||void 0===a||a.then((a=>{a.wrapper.dispose(),a.renderer.dispose(),a.Cb.dispose()}));Y=null,e=null}const q={DumpData:o,DumpDataAsync:f,DumpFramebuffer:H,Dispose:U};N.e.DumpData=o,N.e.DumpDataAsync=f,N.e.DumpFramebuffer=H},10046:(a,i,K)=>{K.d(i,{d:()=>u,e:()=>B,g:()=>T,h:()=>G});var j=K(1225),N=K(1018),E=K(1052),v=K(1533),e=K(1154),Y=K(1061),H=(K(1217),K(1579)),f=K(1112);K(10048),K(10052),K(10058);const o="image/png",U=2,q=[134,22,135,150,246,214,150,54];function u(a){const i=new DataView(a.buffer,a.byteOffset,a.byteLength);let K=0;for(let v=0;v<q.length;v++)if(i.getUint8(K++)!==q[v])return f.c.Error("Not a babylon environment map"),null;let j="",N=0;for(;N=i.getUint8(K++);)j+=String.fromCharCode(N);let E=JSON.parse(j);return E=g(E),E.ve&&(E.ve.specularDataPosition=K,E.ve.lodGenerationScale=E.ve.lodGenerationScale||.8),E}function g(a){if(a.version>U)throw new Error(`Unsupported babylon environment map version "${a.version}". Latest supported version is "${U}".`);return 2===a.version?a:a={...a,version:2,imageType:o}}function s(a,i){const K=(i=g(i)).ve;let j=Math.log2(i.width);if(j=Math.round(j)+1,K.mipmaps.length!==6*j)throw new Error(`Unsupported specular mipmaps number "${K.mipmaps.length}"`);const N=new Array(j);for(let E=0;E<j;E++){N[E]=new Array(6);for(let i=0;i<6;i++){const j=K.mipmaps[6*E+i];N[E][i]=new Uint8Array(a.buffer,a.byteOffset+K.specularDataPosition+j.position,j.length)}}return N}function B(a,i,K){const j=(K=g(K)).ve;if(!j)return Promise.resolve();a._lodGenerationScale=j.lodGenerationScale;return p(a,s(i,K),K.imageType)}function h(a,i,K,j,N,E,v,e,Y,H,f){return new Promise(((o,U)=>{if(K){const K=i.createTexture(null,!0,!0,null,1,null,(a=>{U(a)}),a);null===j||void 0===j||j.onEffectCreatedObservable.addOnce((e=>{e.executeWhenCompiled((()=>{j.externalTextureSamplerBinding=!0,j.onApply=j=>{j._bindTexture("textureSampler",K),j.setFloat2("scale",1,i._features.needsInvertingBitmap&&a instanceof ImageBitmap?-1:1)},i.scenes.length&&(i.scenes[0].postProcessManager.directRender([j],H,!0,E,v),i.restoreDefaultFramebuffer(),K.dispose(),URL.revokeObjectURL(N),o())}))}))}else{if(i._uploadImageToTexture(f,a,E,v),e){const K=Y[v];K&&i._uploadImageToTexture(K._texture,a,E,0)}o()}}))}async function p(a,i){let N=arguments.length>2&&void 0!==arguments[2]?arguments[2]:o;if(!j.e.IsExponentOfTwo(a.width))throw new Error("Texture size must be a power of two");const v=(0,E.h)(a.width)+1,f=a.getEngine();let U=!1,q=!1,u=null,g=null,s=null;const B=f.getCaps();a.format=5,a.type=0,a.generateMipMaps=!0,a._cachedAnisotropicFilteringLevel=null,f.updateTextureSamplingMode(3,a),B.textureLOD?f._features.supportRenderAndCopyToLodForFloatTextures?B.textureHalfFloatRender&&B.textureHalfFloatLinearFiltering?(U=!0,a.type=2):B.textureFloatRender&&B.textureFloatLinearFiltering&&(U=!0,a.type=1):U=!1:(U=!1,q=!0,s={});let p=0;if(U)f.isWebGPU?(p=1,await K.e(17).then(K.bind(K,12342))):await K.e(24).then(K.bind(K,12345)),u=new H.c("rgbdDecode","rgbdDecode",null,null,1,null,3,f,!1,void 0,a.type,void 0,null,!1,void 0,p),a._isRGBD=!1,a.invertY=!1,g=f.createRenderTargetCubeTexture(a.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:a.type,format:5});else if(a._isRGBD=!0,a.invertY=!0,q){const i=3,K=a._lodGenerationScale,j=a._lodGenerationOffset;for(let N=0;N<i;N++){const E=(v-1)*K+j,H=j+(E-j)*(1-N/(i-1)),o=Math.round(Math.min(Math.max(H,0),E)),U=new e.d(f,2);U.isCube=!0,U.invertY=!0,U.generateMipMaps=!1,f.updateTextureSamplingMode(2,U);const q=new Y.d(null);switch(q._isCube=!0,q._texture=U,s[o]=q,N){case 0:a._lodTextureLow=q;break;case 1:a._lodTextureMid=q;break;case 2:a._lodTextureHigh=q}}}const T=[];for(let K=0;K<i.length;K++)for(let j=0;j<6;j++){const E=i[K][j],v=new Blob([E],{type:N}),e=URL.createObjectURL(v);let Y;if(f._features.forceBitmapOverHTMLImageElement)Y=f.createImageBitmap(v,{premultiplyAlpha:"none"}).then((i=>h(i,f,U,u,e,j,K,q,s,g,a)));else{const i=new Image;i.src=e,Y=new Promise(((N,E)=>{i.onload=()=>{h(i,f,U,u,e,j,K,q,s,g,a).then((()=>N())).catch((a=>{E(a)}))},i.onerror=a=>{E(a)}}))}T.push(Y)}if(i.length<v){let K;const j=Math.pow(2,v-1-i.length),N=j*j*4;switch(a.type){case 0:K=new Uint8Array(N);break;case 2:K=new Uint16Array(N);break;case 1:K=new Float32Array(N)}for(let E=i.length;E<v;E++)for(let i=0;i<6;i++)f._uploadArrayBufferViewToTexture(a,K,i,E)}return Promise.all(T).then((()=>{g&&(f._releaseTexture(a),g._swapAndDie(a)),u&&u.dispose(),q&&(a._lodTextureHigh&&a._lodTextureHigh._texture&&(a._lodTextureHigh._texture.isReady=!0),a._lodTextureMid&&a._lodTextureMid._texture&&(a._lodTextureMid._texture.isReady=!0),a._lodTextureLow&&a._lodTextureLow._texture&&(a._lodTextureLow._texture.isReady=!0))}))}function T(a,i){const K=(i=g(i)).irradiance;if(!K)return;const j=new v.f;N.o.FromArrayToRef(K.x,0,j.x),N.o.FromArrayToRef(K.y,0,j.y),N.o.FromArrayToRef(K.z,0,j.z),N.o.FromArrayToRef(K.xx,0,j.xx),N.o.FromArrayToRef(K.yy,0,j.yy),N.o.FromArrayToRef(K.zz,0,j.zz),N.o.FromArrayToRef(K.yz,0,j.yz),N.o.FromArrayToRef(K.zx,0,j.zx),N.o.FromArrayToRef(K.xy,0,j.xy),a._sphericalPolynomial=j}function G(a,i,K,j,N){const E=p(a.getEngine().createRawCubeTexture(null,a.width,a.format,a.type,a.generateMipMaps,a.invertY,a.samplingMode,a._compression),i).then((()=>a));return a.onRebuildCallback=a=>({proxy:E,isReady:!0,isAsync:!0}),a._source=13,a._bufferViewArrayArray=i,a._lodGenerationScale=j,a._lodGenerationOffset=N,a._sphericalPolynomial=K,p(a,i).then((()=>(a.isReady=!0,a)))}},10048:(a,i,K)=>{K.d(i,{e:()=>E});var j=K(1579),N=K(1568);class E{static ExpandRGBDTexture(a){const i=a._texture;if(!i||!a.isRGBD)return;const N=i.getEngine(),E=N.getCaps(),v=i.isReady;let e=!1;E.textureHalfFloatRender&&E.textureHalfFloatLinearFiltering?(e=!0,i.type=2):E.textureFloatRender&&E.textureFloatLinearFiltering&&(e=!0,i.type=1),e&&(i.isReady=!1,i._isRGBD=!1,i.invertY=!1);const Y=async()=>{const E=N.isWebGPU,v=E?1:0;i.isReady=!1,E?await Promise.all([K.e(17).then(K.bind(K,12342)),K.e(18).then(K.bind(K,12349))]):await Promise.all([K.e(24).then(K.bind(K,12345)),K.e(25).then(K.bind(K,12351))]);const e=new j.c("rgbdDecode","rgbdDecode",null,null,1,null,3,N,!1,void 0,i.type,void 0,null,!1,void 0,v);e.externalTextureSamplerBinding=!0;const Y=N.createRenderTargetTexture(i.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:i.samplingMode,type:i.type,format:5});e.onEffectCreatedObservable.addOnce((K=>{K.executeWhenCompiled((()=>{e.onApply=a=>{a._bindTexture("textureSampler",i),a.setFloat2("scale",1,1)},a.va().postProcessManager.directRender([e],Y,!0),N.restoreDefaultFramebuffer(),N._releaseTexture(i),e&&e.dispose(),Y._swapAndDie(i),i.isReady=!0}))}))};e&&(v?Y():a.onLoadObservable.addOnce(Y))}static EncodeTextureToRGBD(a,i){let K=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,N.b)("rgbdEncode",a,i,K,1,5)}}}}]);