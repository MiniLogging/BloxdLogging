/*! For license information please see fblfu.6.fc8c9165.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6],{10835:(x,O,Q)=>{Q.r(O),Q.d(O,{getAnalytics:()=>ix,getGoogleAnalyticsClientId:()=>Px,initializeAnalytics:()=>Hx,isSupported:()=>Sx,logEvent:()=>QO,setAnalyticsCollectionEnabled:()=>xO,setConsent:()=>XO,setCurrentScreen:()=>px,setDefaultEventParameters:()=>OO,setUserId:()=>mx,setUserProperties:()=>wx,settings:()=>ex});var X=Q(10810),Z=Q(10832),n=Q(10824),V=Q(10818);let o,l;const C=new WeakMap,U=new WeakMap,L=new WeakMap,h=new WeakMap,N=new WeakMap;let a={get(x,O,Q){if(x instanceof IDBTransaction){if("done"===O)return U.get(x);if("objectStoreNames"===O)return x.objectStoreNames||L.get(x);if("store"===O)return Q.objectStoreNames[1]?void 0:Q.objectStore(Q.objectStoreNames[0])}return Y(x[O])},set:(x,O,Q)=>(x[O]=Q,!0),has:(x,O)=>x instanceof IDBTransaction&&("done"===O||"store"===O)||O in x};function K(x){return x!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(l||(l=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(x)?function(){for(var O=arguments.length,Q=new Array(O),X=0;X<O;X++)Q[X]=arguments[X];return x.apply(g(this),Q),Y(C.get(this))}:function(){for(var O=arguments.length,Q=new Array(O),X=0;X<O;X++)Q[X]=arguments[X];return Y(x.apply(g(this),Q))}:function(O){for(var Q=arguments.length,X=new Array(Q>1?Q-1:0),Z=1;Z<Q;Z++)X[Z-1]=arguments[Z];const n=x.call(g(this),O,...X);return L.set(n,O.sort?O.sort():[O]),Y(n)}}function M(x){return"function"===typeof x?K(x):(x instanceof IDBTransaction&&function(x){if(U.has(x))return;const O=new Promise(((O,Q)=>{const X=()=>{x.removeEventListener("complete",Z),x.removeEventListener("error",n),x.removeEventListener("abort",n)},Z=()=>{O(),X()},n=()=>{Q(x.error||new DOMException("AbortError","AbortError")),X()};x.addEventListener("complete",Z),x.addEventListener("error",n),x.addEventListener("abort",n)}));U.set(x,O)}(x),O=x,(o||(o=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((x=>O instanceof x))?new Proxy(x,a):x);var O}function Y(x){if(x instanceof IDBRequest)return function(x){const O=new Promise(((O,Q)=>{const X=()=>{x.removeEventListener("success",Z),x.removeEventListener("error",n)},Z=()=>{O(Y(x.result)),X()},n=()=>{Q(x.error),X()};x.addEventListener("success",Z),x.addEventListener("error",n)}));return O.then((O=>{O instanceof IDBCursor&&C.set(O,x)})).catch((()=>{})),N.set(O,x),O}(x);if(h.has(x))return h.get(x);const O=M(x);return O!==x&&(h.set(x,O),N.set(O,x)),O}const g=x=>N.get(x);const v=["get","getKey","getAll","getAllKeys","count"],R=["put","add","delete","clear"],s=new Map;function q(x,O){if(!(x instanceof IDBDatabase)||O in x||"string"!==typeof O)return;if(s.get(O))return s.get(O);const Q=O.replace(/FromIndex$/,""),X=O!==Q,Z=R.includes(Q);if(!(Q in(X?IDBIndex:IDBObjectStore).prototype)||!Z&&!v.includes(Q))return;const n=async function(x){const O=this.transaction(x,Z?"readwrite":"readonly");let n=O.store;for(var V=arguments.length,o=new Array(V>1?V-1:0),l=1;l<V;l++)o[l-1]=arguments[l];return X&&(n=n.index(o.shift())),(await Promise.all([n[Q](...o),Z&&O.done]))[0]};return s.set(O,n),n}a=(x=>({...x,get:(O,Q,X)=>q(O,Q)||x.get(O,Q,X),has:(O,Q)=>!!q(O,Q)||x.has(O,Q)}))(a);const G="@firebase/installations",k="0.6.4",J=1e4,t=`w:${k}`,c="FIS_v2",d=36e5,u={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},A=new n.g("installations","Installations",u);function f(x){return x instanceof n.j&&x.code.includes("request-failed")}function E(x){let{projectId:O}=x;return`https://firebaseinstallations.googleapis.com/v1/projects/${O}/installations`}function z(x){return{token:x.token,requestStatus:2,expiresIn:(O=x.expiresIn,Number(O.replace("s","000"))),creationTime:Date.now()};var O}async function F(x,O){const Q=(await O.json()).error;return A.create("request-failed",{requestName:x,serverCode:Q.code,serverMessage:Q.message,serverStatus:Q.status})}function b(x){let{apiKey:O}=x;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":O})}function D(x,O){let{refreshToken:Q}=O;const X=b(x);return X.append("Authorization",function(x){return`${c} ${x}`}(Q)),X}async function W(x){const O=await x();return O.status>=500&&O.status<600?x():O}function y(x){return new Promise((O=>{setTimeout(O,x)}))}const I=/^[cdef][\w-]{21}$/;function r(){try{const x=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(x),x[0]=112+x[0]%16;const O=function(x){const O=(Q=x,btoa(String.fromCharCode(...Q)).replace(/\+/g,"-").replace(/\//g,"_"));var Q;return O.substr(0,22)}(x);return I.test(O)?O:""}catch(x){return""}}function j(x){return`${x.appName}!${x.appId}`}const T=new Map;function e(x,O){const Q=j(x);B(Q,O),function(x,O){const Q=H();Q&&Q.postMessage({key:x,fid:O});S()}(Q,O)}function B(x,O){const Q=T.get(x);if(Q)for(const X of Q)X(O)}let i=null;function H(){return!i&&"BroadcastChannel"in self&&(i=new BroadcastChannel("[Firebase] FID Change"),i.onmessage=x=>{B(x.data.key,x.data.fid)}),i}function S(){0===T.size&&i&&(i.close(),i=null)}const p="firebase-installations-store";let P=null;function m(){return P||(P=function(x,O){let{blocked:Q,upgrade:X,blocking:Z,terminated:n}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const V=indexedDB.open(x,O),o=Y(V);return X&&V.addEventListener("upgradeneeded",(x=>{X(Y(V.result),x.oldVersion,x.newVersion,Y(V.transaction))})),Q&&V.addEventListener("blocked",(()=>Q())),o.then((x=>{n&&x.addEventListener("close",(()=>n())),Z&&x.addEventListener("versionchange",(()=>Z()))})).catch((()=>{})),o}("firebase-installations-database",1,{upgrade:(x,O)=>{if(0===O)x.createObjectStore(p)}})),P}async function w(x,O){const Q=j(x),X=(await m()).transaction(p,"readwrite"),Z=X.objectStore(p),n=await Z.get(Q);return await Z.put(O,Q),await X.done,n&&n.fid===O.fid||e(x,O.fid),O}async function xx(x){const O=j(x),Q=(await m()).transaction(p,"readwrite");await Q.objectStore(p).delete(O),await Q.done}async function Ox(x,O){const Q=j(x),X=(await m()).transaction(p,"readwrite"),Z=X.objectStore(p),n=await Z.get(Q),V=O(n);return void 0===V?await Z.delete(Q):await Z.put(V,Q),await X.done,!V||n&&n.fid===V.fid||e(x,V.fid),V}async function Qx(x){let O;const Q=await Ox(x.appConfig,(Q=>{const X=function(x){const O=x||{fid:r(),registrationStatus:0};return nx(O)}(Q),Z=function(x,O){if(0===O.registrationStatus){if(!navigator.onLine){return{installationEntry:O,registrationPromise:Promise.reject(A.create("app-offline"))}}const Q={fid:O.fid,registrationStatus:1,registrationTime:Date.now()},X=async function(x,O){try{const Q=await async function(x,O){let{appConfig:Q,heartbeatServiceProvider:X}=x,{fid:Z}=O;const n=E(Q),V=b(Q),o=X.getImmediate({optional:!0});if(o){const x=await o.getHeartbeatsHeader();x&&V.append("x-firebase-client",x)}const l={fid:Z,authVersion:c,appId:Q.appId,sdkVersion:t},C={method:"POST",headers:V,body:JSON.stringify(l)},U=await W((()=>fetch(n,C)));if(U.ok){const x=await U.json();return{fid:x.fid||Z,registrationStatus:2,refreshToken:x.refreshToken,authToken:z(x.authToken)}}throw await F("Create Installation",U)}(x,O);return w(x.appConfig,Q)}catch(Q){throw f(Q)&&409===Q.customData.serverCode?await xx(x.appConfig):await w(x.appConfig,{fid:O.fid,registrationStatus:0}),Q}}(x,Q);return{installationEntry:Q,registrationPromise:X}}return 1===O.registrationStatus?{installationEntry:O,registrationPromise:Xx(x)}:{installationEntry:O}}(x,X);return O=Z.registrationPromise,Z.installationEntry}));return""===Q.fid?{installationEntry:await O}:{installationEntry:Q,registrationPromise:O}}async function Xx(x){let O=await Zx(x.appConfig);for(;1===O.registrationStatus;)await y(100),O=await Zx(x.appConfig);if(0===O.registrationStatus){const{installationEntry:O,registrationPromise:Q}=await Qx(x);return Q||O}return O}function Zx(x){return Ox(x,(x=>{if(!x)throw A.create("installation-not-found");return nx(x)}))}function nx(x){return 1===(O=x).registrationStatus&&O.registrationTime+J<Date.now()?{fid:x.fid,registrationStatus:0}:x;var O}async function Vx(x,O){let{appConfig:Q,heartbeatServiceProvider:X}=x;const Z=function(x,O){let{fid:Q}=O;return`${E(x)}/${Q}/authTokens:generate`}(Q,O),n=D(Q,O),V=X.getImmediate({optional:!0});if(V){const x=await V.getHeartbeatsHeader();x&&n.append("x-firebase-client",x)}const o={installation:{sdkVersion:t,appId:Q.appId}},l={method:"POST",headers:n,body:JSON.stringify(o)},C=await W((()=>fetch(Z,l)));if(C.ok){return z(await C.json())}throw await F("Generate Auth Token",C)}async function ox(x){let O,Q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const X=await Ox(x.appConfig,(X=>{if(!Cx(X))throw A.create("not-registered");const Z=X.authToken;if(!Q&&function(x){return 2===x.requestStatus&&!function(x){const O=Date.now();return O<x.creationTime||x.creationTime+x.expiresIn<O+d}(x)}(Z))return X;if(1===Z.requestStatus)return O=async function(x,O){let Q=await lx(x.appConfig);for(;1===Q.authToken.requestStatus;)await y(100),Q=await lx(x.appConfig);const X=Q.authToken;return 0===X.requestStatus?ox(x,O):X}(x,Q),X;{if(!navigator.onLine)throw A.create("app-offline");const Q=function(x){const O={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},x),{authToken:O})}(X);return O=async function(x,O){try{const Q=await Vx(x,O),X=Object.assign(Object.assign({},O),{authToken:Q});return await w(x.appConfig,X),Q}catch(Q){if(!f(Q)||401!==Q.customData.serverCode&&404!==Q.customData.serverCode){const Q=Object.assign(Object.assign({},O),{authToken:{requestStatus:0}});await w(x.appConfig,Q)}else await xx(x.appConfig);throw Q}}(x,Q),Q}}));return O?await O:X.authToken}function lx(x){return Ox(x,(x=>{if(!Cx(x))throw A.create("not-registered");const O=x.authToken;return 1===(Q=O).requestStatus&&Q.requestTime+J<Date.now()?Object.assign(Object.assign({},x),{authToken:{requestStatus:0}}):x;var Q}))}function Cx(x){return void 0!==x&&2===x.registrationStatus}async function Ux(x){let O=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const Q=x;await async function(x){const{registrationPromise:O}=await Qx(x);O&&await O}(Q);return(await ox(Q,O)).token}function Lx(x){return A.create("missing-app-config-values",{valueName:x})}const hx="installations",Nx=x=>{const O=x.getProvider("app").getImmediate(),Q=function(x){if(!x||!x.options)throw Lx("App Configuration");if(!x.name)throw Lx("App Name");const O=["projectId","apiKey","appId"];for(const Q of O)if(!x.options[Q])throw Lx(Q);return{appName:x.name,projectId:x.options.projectId,apiKey:x.options.apiKey,appId:x.options.appId}}(O);return{app:O,appConfig:Q,heartbeatServiceProvider:(0,X.x)(O,"heartbeat"),_delete:()=>Promise.resolve()}},ax=x=>{const O=x.getProvider("app").getImmediate(),Q=(0,X.x)(O,hx).getImmediate();return{getId:()=>async function(x){const O=x,{installationEntry:Q,registrationPromise:X}=await Qx(O);return X?X.catch(console.error):ox(O).catch(console.error),Q.fid}(Q),getToken:x=>Ux(Q,x)}};(0,X.z)(new V.e(hx,Nx,"PUBLIC")),(0,X.z)(new V.e("installations-internal",ax,"PRIVATE")),(0,X.R)(G,k),(0,X.R)(G,k,"esm2017");const Kx="analytics",Mx="https://www.googletagmanager.com/gtag/js",Yx=new Z.f("@firebase/analytics"),gx={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},vx=new n.g("analytics","Analytics",gx);function Rx(x){if(!x.startsWith(Mx)){const O=vx.create("invalid-gtag-resource",{gtagURL:x});return Yx.warn(O.message),""}return x}function sx(x){return Promise.all(x.map((x=>x.catch((x=>x)))))}function qx(x,O){const Q=function(x,O){let Q;return window.trustedTypes&&(Q=window.trustedTypes.createPolicy(x,O)),Q}("firebase-js-sdk-policy",{createScriptURL:Rx}),X=document.createElement("script"),Z=`${Mx}?l=${x}&id=${O}`;X.src=Q?null===Q||void 0===Q?void 0:Q.createScriptURL(Z):Z,X.async=!0,document.head.appendChild(X)}function Gx(x,O,Q,X){return async function(Z){try{for(var n=arguments.length,V=new Array(n>1?n-1:0),o=1;o<n;o++)V[o-1]=arguments[o];if("event"===Z){const[X,Z]=V;await async function(x,O,Q,X,Z){try{let n=[];if(Z&&Z.send_to){let x=Z.send_to;Array.isArray(x)||(x=[x]);const X=await sx(Q);for(const Q of x){const x=X.find((x=>x.measurementId===Q)),Z=x&&O[x.appId];if(!Z){n=[];break}n.push(Z)}}0===n.length&&(n=Object.values(O)),await Promise.all(n),x("event",X,Z||{})}catch(n){Yx.error(n)}}(x,O,Q,X,Z)}else if("config"===Z){const[Z,n]=V;await async function(x,O,Q,X,Z,n){const V=X[Z];try{if(V)await O[V];else{const x=(await sx(Q)).find((x=>x.measurementId===Z));x&&await O[x.appId]}}catch(o){Yx.error(o)}x("config",Z,n)}(x,O,Q,X,Z,n)}else if("consent"===Z){const[O]=V;x("consent","update",O)}else if("get"===Z){const[O,Q,X]=V;x("get",O,Q,X)}else if("set"===Z){const[O]=V;x("set",O)}else x(Z,...V)}catch(l){Yx.error(l)}}}const kx=new class{constructor(){let x=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=x,this.intervalMillis=O}getThrottleMetadata(x){return this.throttleMetadata[x]}setThrottleMetadata(x,O){this.throttleMetadata[x]=O}deleteThrottleMetadata(x){delete this.throttleMetadata[x]}};function Jx(x){return new Headers({Accept:"application/json","x-goog-api-key":x})}async function tx(x){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:kx,Q=arguments.length>2?arguments[2]:void 0;const{appId:X,apiKey:Z,measurementId:n}=x.options;if(!X)throw vx.create("no-app-id");if(!Z){if(n)return{measurementId:n,appId:X};throw vx.create("no-api-key")}const V=O.getThrottleMetadata(X)||{backoffCount:0,throttleEndTimeMillis:Date.now()},o=new dx;return setTimeout((async()=>{o.abort()}),void 0!==Q?Q:6e4),cx({appId:X,apiKey:Z,measurementId:n},V,o,O)}async function cx(x,O,Q){let{throttleEndTimeMillis:X,backoffCount:Z}=O,V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:kx;var o;const{appId:l,measurementId:C}=x;try{await function(x,O){return new Promise(((Q,X)=>{const Z=Math.max(O-Date.now(),0),n=setTimeout(Q,Z);x.addEventListener((()=>{clearTimeout(n),X(vx.create("fetch-throttle",{throttleEndTimeMillis:O}))}))}))}(Q,X)}catch(U){if(C)return Yx.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${C} provided in the "measurementId" field in the local Firebase config. [${null===U||void 0===U?void 0:U.message}]`),{appId:l,measurementId:C};throw U}try{const O=await async function(x){var O;const{appId:Q,apiKey:X}=x,Z={method:"GET",headers:Jx(X)},n="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",Q),V=await fetch(n,Z);if(200!==V.status&&304!==V.status){let x="";try{const Q=await V.json();(null===(O=Q.error)||void 0===O?void 0:O.message)&&(x=Q.error.message)}catch(o){}throw vx.create("config-fetch-failed",{httpStatus:V.status,responseMessage:x})}return V.json()}(x);return V.deleteThrottleMetadata(l),O}catch(U){const O=U;if(!function(x){if(!(x instanceof n.j)||!x.customData)return!1;const O=Number(x.customData.httpStatus);return 429===O||500===O||503===O||504===O}(O)){if(V.deleteThrottleMetadata(l),C)return Yx.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${C} provided in the "measurementId" field in the local Firebase config. [${null===O||void 0===O?void 0:O.message}]`),{appId:l,measurementId:C};throw U}const X=503===Number(null===(o=null===O||void 0===O?void 0:O.customData)||void 0===o?void 0:o.httpStatus)?(0,n.s)(Z,V.intervalMillis,30):(0,n.s)(Z,V.intervalMillis),L={throttleEndTimeMillis:Date.now()+X,backoffCount:Z+1};return V.setThrottleMetadata(l,L),Yx.debug(`Calling attemptFetch again in ${X} millis`),cx(x,L,Q,V)}}class dx{constructor(){this.listeners=[]}addEventListener(x){this.listeners.push(x)}abort(){this.listeners.forEach((x=>x()))}}let ux,Ax;function fx(x){Ax=x}function Ex(x){ux=x}async function zx(x,O,Q,X,Z,V,o){var l;const C=tx(x);C.then((O=>{Q[O.measurementId]=O.appId,x.options.measurementId&&O.measurementId!==x.options.measurementId&&Yx.warn(`The measurement ID in the local Firebase config (${x.options.measurementId}) does not match the measurement ID fetched from the server (${O.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((x=>Yx.error(x))),O.push(C);const U=async function(){if(!(0,n.P)())return Yx.warn(vx.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,n.db)()}catch(x){return Yx.warn(vx.create("indexeddb-unavailable",{errorInfo:null===x||void 0===x?void 0:x.toString()}).message),!1}return!0}().then((x=>x?X.getId():void 0)),[L,h]=await Promise.all([C,U]);(function(x){const O=window.document.getElementsByTagName("script");for(const Q of Object.values(O))if(Q.src&&Q.src.includes(Mx)&&Q.src.includes(x))return Q;return null})(V)||qx(V,L.measurementId),Ax&&(Z("consent","default",Ax),fx(void 0)),Z("js",new Date);const N=null!==(l=null===o||void 0===o?void 0:o.config)&&void 0!==l?l:{};return N.origin="firebase",N.update=!0,null!=h&&(N.firebase_id=h),Z("config",L.measurementId,N),ux&&(Z("set",ux),Ex(void 0)),L.measurementId}class Fx{constructor(x){this.app=x}_delete(){return delete bx[this.app.options.appId],Promise.resolve()}}let bx={},Dx=[];const Wx={};let yx,Ix,rx="dataLayer",jx="gtag",Tx=!1;function ex(x){if(Tx)throw vx.create("already-initialized");x.dataLayerName&&(rx=x.dataLayerName),x.gtagName&&(jx=x.gtagName)}function Bx(x,O,Q){!function(){const x=[];if((0,n.I)()&&x.push("This is a browser extension environment."),(0,n.l)()||x.push("Cookies are not available."),x.length>0){const O=x.map(((x,O)=>`(${O+1}) ${x}`)).join(" "),Q=vx.create("invalid-analytics-context",{errorInfo:O});Yx.warn(Q.message)}}();const X=x.options.appId;if(!X)throw vx.create("no-app-id");if(!x.options.apiKey){if(!x.options.measurementId)throw vx.create("no-api-key");Yx.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${x.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=bx[X])throw vx.create("already-exists",{id:X});if(!Tx){!function(x){let O=[];Array.isArray(window[x])?O=window[x]:window[x]=O}(rx);const{wrappedGtag:x,gtagCore:O}=function(x,O,Q,X,Z){let n=function(){for(var x=arguments.length,O=new Array(x),Q=0;Q<x;Q++)O[Q]=arguments[Q];window[X].push(arguments)};return window[Z]&&"function"===typeof window[Z]&&(n=window[Z]),window[Z]=Gx(n,x,O,Q),{gtagCore:n,wrappedGtag:window[Z]}}(bx,Dx,Wx,rx,jx);Ix=x,yx=O,Tx=!0}bx[X]=zx(x,Dx,Wx,O,yx,rx,Q);return new Fx(x)}function ix(){let x=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,X.J)();x=(0,n.D)(x);const O=(0,X.x)(x,Kx);return O.isInitialized()?O.getImmediate():Hx(x)}function Hx(x){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const Q=(0,X.x)(x,Kx);if(Q.isInitialized()){const x=Q.getImmediate();if((0,n.u)(O,Q.getOptions()))return x;throw vx.create("already-initialized")}return Q.initialize({options:O})}async function Sx(){if((0,n.I)())return!1;if(!(0,n.l)())return!1;if(!(0,n.P)())return!1;try{return await(0,n.db)()}catch(x){return!1}}function px(x,O,Q){x=(0,n.D)(x),async function(x,O,Q,X){if(X&&X.global)return x("set",{screen_name:Q}),Promise.resolve();x("config",await O,{update:!0,screen_name:Q})}(Ix,bx[x.app.options.appId],O,Q).catch((x=>Yx.error(x)))}async function Px(x){return x=(0,n.D)(x),async function(x,O){const Q=await O;return new Promise(((O,X)=>{x("get",Q,"client_id",(x=>{x||X(vx.create("no-client-id")),O(x)}))}))}(Ix,bx[x.app.options.appId])}function mx(x,O,Q){x=(0,n.D)(x),async function(x,O,Q,X){if(X&&X.global)return x("set",{user_id:Q}),Promise.resolve();x("config",await O,{update:!0,user_id:Q})}(Ix,bx[x.app.options.appId],O,Q).catch((x=>Yx.error(x)))}function wx(x,O,Q){x=(0,n.D)(x),async function(x,O,Q,X){if(X&&X.global){const O={};for(const x of Object.keys(Q))O[`user_properties.${x}`]=Q[x];return x("set",O),Promise.resolve()}x("config",await O,{update:!0,user_properties:Q})}(Ix,bx[x.app.options.appId],O,Q).catch((x=>Yx.error(x)))}function xO(x,O){x=(0,n.D)(x),async function(x,O){const Q=await x;window[`ga-disable-${Q}`]=!O}(bx[x.app.options.appId],O).catch((x=>Yx.error(x)))}function OO(x){Ix?Ix("set",x):Ex(x)}function QO(x,O,Q,X){x=(0,n.D)(x),async function(x,O,Q,X,Z){if(Z&&Z.global)x("event",Q,X);else{const Z=await O;x("event",Q,Object.assign(Object.assign({},X),{send_to:Z}))}}(Ix,bx[x.app.options.appId],O,Q,X).catch((x=>Yx.error(x)))}function XO(x){Ix?Ix("consent","update",x):fx(x)}const ZO="@firebase/analytics",nO="0.10.0";(0,X.z)(new V.e(Kx,((x,O)=>{let{options:Q}=O;return Bx(x.getProvider("app").getImmediate(),x.getProvider("installations-internal").getImmediate(),Q)}),"PUBLIC")),(0,X.z)(new V.e("analytics-internal",(function(x){try{const O=x.getProvider(Kx).getImmediate();return{logEvent:(x,Q,X)=>QO(O,x,Q,X)}}catch(O){throw vx.create("interop-component-reg-failed",{reason:O})}}),"PRIVATE")),(0,X.R)(ZO,nO),(0,X.R)(ZO,nO,"esm2017")}}]);