"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6,7],{11124:(L,i,P)=>{var D=P(1529),V=P(1039);V.e.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(V.e.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=D.e.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((L=>{this._texture._sphericalPolynomial=L,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(L){this._texture&&(this._texture._sphericalPolynomial=L)},enumerable:!0,configurable:!0})},11128:(L,i,P)=>{P.r(i),P.d(i,{Dispose:()=>c,DumpData:()=>T,DumpDataAsync:()=>C,DumpFramebuffer:()=>U,DumpTools:()=>r});var D=P(1542),V=P(1217),M=P(1033),a=P(1024);let w,O=null;async function U(L,i,P,D){let V=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",M=arguments.length>5?arguments[5]:void 0,a=arguments.length>6?arguments[6]:void 0;const w=await P.readPixels(0,0,L,i);T(L,i,new Uint8Array(w.buffer),D,V,M,!0,void 0,a)}function C(L,i,P){let D=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",V=arguments.length>4?arguments[4]:void 0,M=arguments.length>5&&void 0!==arguments[5]&&arguments[5],a=arguments.length>6&&void 0!==arguments[6]&&arguments[6],w=arguments.length>7?arguments[7]:void 0;return new Promise((O=>{T(L,i,P,(L=>O(L)),D,V,M,a,w)}))}function T(L,i,U,C){let T=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",r=arguments.length>5?arguments[5]:void 0,F=arguments.length>6&&void 0!==arguments[6]&&arguments[6],S=arguments.length>7&&void 0!==arguments[7]&&arguments[7],q=arguments.length>8?arguments[8]:void 0;(async function(){return O||(O=new Promise(((L,i)=>{let V,M=null;const O={xe:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(P.bind(P,1445)).then((U=>{let{ThinEngine:C}=U;try{V=new OffscreenCanvas(100,100),M=new C(V,!1,O)}catch(r){V=document.createElement("canvas"),M=new C(V,!1,O)}a.c.Instances.pop(),a.c.OnEnginesDisposedObservable.add((L=>{M&&L!==M&&!M.u&&0===a.c.Instances.length&&c()})),M.getCaps().parallelShaderCompile=void 0;const T=new D.b(M);P.e(32).then(P.bind(P,11834)).then((P=>{let{passPixelShader:a}=P;if(!M)return void i("Engine is not defined");const O=new D.e({Md:M,name:a.name,fragmentShader:a.shader,samplerNames:["textureSampler"]});w={canvas:V,Md:M,renderer:T,wrapper:O},L(w)}))})).catch(i)}))),await O})().then((P=>{if(P.Md.setSize(L,i,!0),U instanceof Float32Array){const L=new Uint8Array(U.length);let i=U.length;for(;i--;){const P=U[i];L[i]=Math.round(255*(0,M.c)(P))}U=L}const D=P.Md.createRawTexture(U,L,i,5,!1,!F,1);P.renderer.setViewport(),P.renderer.applyEffectWrapper(P.wrapper),P.wrapper.effect._bindTexture("textureSampler",D),P.renderer.draw(),S?V.g.ToBlob(P.canvas,(L=>{const i=new FileReader;i.onload=L=>{const i=L.target.result;C&&C(i)},i.readAsArrayBuffer(L)}),T,q):V.g.EncodeScreenshotCanvasData(P.canvas,C,T,r,q),D.dispose()}))}function c(){var L;w?(w.wrapper.dispose(),w.renderer.dispose(),w.Md.dispose()):null===(L=O)||void 0===L||L.then((L=>{L.wrapper.dispose(),L.renderer.dispose(),L.Md.dispose()}));O=null,w=null}const r={DumpData:T,DumpDataAsync:C,DumpFramebuffer:U,Dispose:c};V.g.DumpData=T,V.g.DumpDataAsync=C,V.g.DumpFramebuffer=U},11112:(L,i,P)=>{P.d(i,{c:()=>F,d:()=>H,g:()=>u,k:()=>p});var D=P(1217),V=P(995),M=P(1033),a=P(1492),w=P(1146),O=P(1039),U=(P(1213),P(1540)),C=P(1098);P(11116),P(11124),P(11128);const T="image/png",c=2,r=[134,22,135,150,246,214,150,54];function F(L){const i=new DataView(L.buffer,L.byteOffset,L.byteLength);let P=0;for(let a=0;a<r.length;a++)if(i.getUint8(P++)!==r[a])return C.d.Error("Not a babylon environment map"),null;let D="",V=0;for(;V=i.getUint8(P++);)D+=String.fromCharCode(V);let M=JSON.parse(D);return M=S(M),M.Oe&&(M.Oe.specularDataPosition=P,M.Oe.lodGenerationScale=M.Oe.lodGenerationScale||.8),M}function S(L){if(L.version>c)throw new Error(`Unsupported babylon environment map version "${L.version}". Latest supported version is "${c}".`);return 2===L.version?L:L={...L,version:2,imageType:T}}function q(L,i){const P=(i=S(i)).Oe;let D=Math.log2(i.width);if(D=Math.round(D)+1,P.mipmaps.length!==6*D)throw new Error(`Unsupported specular mipmaps number "${P.mipmaps.length}"`);const V=new Array(D);for(let M=0;M<D;M++){V[M]=new Array(6);for(let i=0;i<6;i++){const D=P.mipmaps[6*M+i];V[M][i]=new Uint8Array(L.buffer,L.byteOffset+P.specularDataPosition+D.position,D.length)}}return V}function H(L,i,P){const D=(P=S(P)).Oe;if(!D)return Promise.resolve();L._lodGenerationScale=D.lodGenerationScale;return B(L,q(i,P),P.imageType)}function j(L,i,P,D,V,M,a,w,O,U,C){return new Promise(((T,c)=>{if(P){const P=i.createTexture(null,!0,!0,null,1,null,(L=>{c(L)}),L);null===D||void 0===D||D.onEffectCreatedObservable.addOnce((w=>{w.executeWhenCompiled((()=>{D.externalTextureSamplerBinding=!0,D.onApply=D=>{D._bindTexture("textureSampler",P),D.setFloat2("scale",1,i._features.needsInvertingBitmap&&L instanceof ImageBitmap?-1:1)},i.scenes.length&&(i.scenes[0].postProcessManager.directRender([D],U,!0,M,a),i.restoreDefaultFramebuffer(),P.dispose(),URL.revokeObjectURL(V),T())}))}))}else{if(i._uploadImageToTexture(C,L,M,a),w){const P=O[a];P&&i._uploadImageToTexture(P._texture,L,M,0)}T()}}))}async function B(L,i){let V=arguments.length>2&&void 0!==arguments[2]?arguments[2]:T;if(!D.g.IsExponentOfTwo(L.width))throw new Error("Texture size must be a power of two");const a=(0,M.j)(L.width)+1,C=L.getEngine();let c=!1,r=!1,F=null,S=null,q=null;const H=C.getCaps();L.format=5,L.type=0,L.generateMipMaps=!0,L._cachedAnisotropicFilteringLevel=null,C.updateTextureSamplingMode(3,L),H.textureLOD?C._features.supportRenderAndCopyToLodForFloatTextures?H.textureHalfFloatRender&&H.textureHalfFloatLinearFiltering?(c=!0,L.type=2):H.textureFloatRender&&H.textureFloatLinearFiltering&&(c=!0,L.type=1):c=!1:(c=!1,r=!0,q={});let B=0;if(c)C.isWebGPU?(B=1,await P.e(17).then(P.bind(P,13406))):await P.e(24).then(P.bind(P,13410)),F=new U.b("rgbdDecode","rgbdDecode",null,null,1,null,3,C,!1,void 0,L.type,void 0,null,!1,void 0,B),L._isRGBD=!1,L.invertY=!1,S=C.createRenderTargetCubeTexture(L.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:L.type,format:5});else if(L._isRGBD=!0,L.invertY=!0,r){const i=3,P=L._lodGenerationScale,D=L._lodGenerationOffset;for(let V=0;V<i;V++){const M=(a-1)*P+D,U=D+(M-D)*(1-V/(i-1)),T=Math.round(Math.min(Math.max(U,0),M)),c=new w.c(C,2);c.isCube=!0,c.invertY=!0,c.generateMipMaps=!1,C.updateTextureSamplingMode(2,c);const r=new O.e(null);switch(r._isCube=!0,r._texture=c,q[T]=r,V){case 0:L._lodTextureLow=r;break;case 1:L._lodTextureMid=r;break;case 2:L._lodTextureHigh=r}}}const u=[];for(let P=0;P<i.length;P++)for(let D=0;D<6;D++){const M=i[P][D],a=new Blob([M],{type:V}),w=URL.createObjectURL(a);let O;if(C._features.forceBitmapOverHTMLImageElement)O=C.createImageBitmap(a,{premultiplyAlpha:"none"}).then((i=>j(i,C,c,F,w,D,P,r,q,S,L)));else{const i=new Image;i.src=w,O=new Promise(((V,M)=>{i.onload=()=>{j(i,C,c,F,w,D,P,r,q,S,L).then((()=>V())).catch((L=>{M(L)}))},i.onerror=L=>{M(L)}}))}u.push(O)}if(i.length<a){let P;const D=Math.pow(2,a-1-i.length),V=D*D*4;switch(L.type){case 0:P=new Uint8Array(V);break;case 2:P=new Uint16Array(V);break;case 1:P=new Float32Array(V)}for(let M=i.length;M<a;M++)for(let i=0;i<6;i++)C._uploadArrayBufferViewToTexture(L,P,i,M)}return Promise.all(u).then((()=>{S&&(C._releaseTexture(L),S._swapAndDie(L)),F&&F.dispose(),r&&(L._lodTextureHigh&&L._lodTextureHigh._texture&&(L._lodTextureHigh._texture.isReady=!0),L._lodTextureMid&&L._lodTextureMid._texture&&(L._lodTextureMid._texture.isReady=!0),L._lodTextureLow&&L._lodTextureLow._texture&&(L._lodTextureLow._texture.isReady=!0))}))}function u(L,i){const P=(i=S(i)).irradiance;if(!P)return;const D=new a.f;V.p.FromArrayToRef(P.x,0,D.x),V.p.FromArrayToRef(P.y,0,D.y),V.p.FromArrayToRef(P.z,0,D.z),V.p.FromArrayToRef(P.xx,0,D.xx),V.p.FromArrayToRef(P.yy,0,D.yy),V.p.FromArrayToRef(P.zz,0,D.zz),V.p.FromArrayToRef(P.yz,0,D.yz),V.p.FromArrayToRef(P.zx,0,D.zx),V.p.FromArrayToRef(P.xy,0,D.xy),L._sphericalPolynomial=D}function p(L,i,P,D,V){const M=B(L.getEngine().createRawCubeTexture(null,L.width,L.format,L.type,L.generateMipMaps,L.invertY,L.samplingMode,L._compression),i).then((()=>L));return L.onRebuildCallback=L=>({proxy:M,isReady:!0,isAsync:!0}),L._source=13,L._bufferViewArrayArray=i,L._lodGenerationScale=D,L._lodGenerationOffset=V,L._sphericalPolynomial=P,B(L,i).then((()=>(L.isReady=!0,L)))}},11116:(L,i,P)=>{P.d(i,{d:()=>M});var D=P(1540),V=P(1531);class M{static ExpandRGBDTexture(L){const i=L._texture;if(!i||!L.isRGBD)return;const V=i.getEngine(),M=V.getCaps(),a=i.isReady;let w=!1;M.textureHalfFloatRender&&M.textureHalfFloatLinearFiltering?(w=!0,i.type=2):M.textureFloatRender&&M.textureFloatLinearFiltering&&(w=!0,i.type=1),w&&(i.isReady=!1,i._isRGBD=!1,i.invertY=!1);const O=async()=>{const M=V.isWebGPU,a=M?1:0;i.isReady=!1,M?await Promise.all([P.e(17).then(P.bind(P,13406)),P.e(18).then(P.bind(P,13417))]):await Promise.all([P.e(24).then(P.bind(P,13410)),P.e(25).then(P.bind(P,13425))]);const w=new D.b("rgbdDecode","rgbdDecode",null,null,1,null,3,V,!1,void 0,i.type,void 0,null,!1,void 0,a);w.externalTextureSamplerBinding=!0;const O=V.createRenderTargetTexture(i.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:i.samplingMode,type:i.type,format:5});w.onEffectCreatedObservable.addOnce((P=>{P.executeWhenCompiled((()=>{w.onApply=L=>{L._bindTexture("textureSampler",i),L.setFloat2("scale",1,1)},L.va().postProcessManager.directRender([w],O,!0),V.restoreDefaultFramebuffer(),V._releaseTexture(i),w&&w.dispose(),O._swapAndDie(i),i.isReady=!0}))}))};w&&(a?O():L.onLoadObservable.addOnce(O))}static EncodeTextureToRGBD(L,i){let P=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,V.c)("rgbdEncode",L,i,P,1,5)}}}}]);