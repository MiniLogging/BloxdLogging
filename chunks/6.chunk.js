/*! For license information please see 1o5xb.6.9d478cbb.chunk.js.LICENSE.txt */
"use strict";(self.pp3k1ov3ibi=self.pp3k1ov3ibi||[]).push([[6],{12169:(M,Z,P)=>{P.r(Z),P.d(Z,{getAnalytics:()=>iM,getGoogleAnalyticsClientId:()=>XM,initializeAnalytics:()=>TM,isSupported:()=>pM,logEvent:()=>PZ,setAnalyticsCollectionEnabled:()=>MZ,setConsent:()=>xZ,setCurrentScreen:()=>SM,setDefaultEventParameters:()=>ZZ,setUserId:()=>VM,setUserProperties:()=>gM,settings:()=>YM});var x=P(12149),c=P(12162),w=P(12157),v=P(12153);let G,mM;const K=new WeakMap,d=new WeakMap,O=new WeakMap,H=new WeakMap,j=new WeakMap;let B={get(M,Z,P){if(M instanceof IDBTransaction){if("done"===Z)return d.get(M);if("objectStoreNames"===Z)return M.objectStoreNames||O.get(M);if("store"===Z)return P.objectStoreNames[1]?void 0:P.objectStore(P.objectStoreNames[0])}return L(M[Z])},set:(M,Z,P)=>(M[Z]=P,!0),has:(M,Z)=>M instanceof IDBTransaction&&("done"===Z||"store"===Z)||Z in M};function U(M){return M!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(mM||(mM=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(M)?function(){for(var Z=arguments.length,P=new Array(Z),x=0;x<Z;x++)P[x]=arguments[x];return M.apply(u(this),P),L(K.get(this))}:function(){for(var Z=arguments.length,P=new Array(Z),x=0;x<Z;x++)P[x]=arguments[x];return L(M.apply(u(this),P))}:function(Z){for(var P=arguments.length,x=new Array(P>1?P-1:0),c=1;c<P;c++)x[c-1]=arguments[c];const w=M.call(u(this),Z,...x);return O.set(w,Z.sort?Z.sort():[Z]),L(w)}}function n(M){return"function"===typeof M?U(M):(M instanceof IDBTransaction&&function(M){if(d.has(M))return;const Z=new Promise(((Z,P)=>{const x=()=>{M.removeEventListener("complete",c),M.removeEventListener("error",w),M.removeEventListener("abort",w)},c=()=>{Z(),x()},w=()=>{P(M.error||new DOMException("AbortError","AbortError")),x()};M.addEventListener("complete",c),M.addEventListener("error",w),M.addEventListener("abort",w)}));d.set(M,Z)}(M),Z=M,(G||(G=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((M=>Z instanceof M))?new Proxy(M,B):M);var Z}function L(M){if(M instanceof IDBRequest)return function(M){const Z=new Promise(((Z,P)=>{const x=()=>{M.removeEventListener("success",c),M.removeEventListener("error",w)},c=()=>{Z(L(M.result)),x()},w=()=>{P(M.error),x()};M.addEventListener("success",c),M.addEventListener("error",w)}));return Z.then((Z=>{Z instanceof IDBCursor&&K.set(Z,M)})).catch((()=>{})),j.set(Z,M),Z}(M);if(H.has(M))return H.get(M);const Z=n(M);return Z!==M&&(H.set(M,Z),j.set(Z,M)),Z}const u=M=>j.get(M);const N=["get","getKey","getAll","getAllKeys","count"],J=["put","add","delete","clear"],t=new Map;function F(M,Z){if(!(M instanceof IDBDatabase)||Z in M||"string"!==typeof Z)return;if(t.get(Z))return t.get(Z);const P=Z.replace(/FromIndex$/,""),x=Z!==P,c=J.includes(P);if(!(P in(x?IDBIndex:IDBObjectStore).prototype)||!c&&!N.includes(P))return;const w=async function(M){const Z=this.transaction(M,c?"readwrite":"readonly");let w=Z.store;for(var v=arguments.length,G=new Array(v>1?v-1:0),mM=1;mM<v;mM++)G[mM-1]=arguments[mM];return x&&(w=w.index(G.shift())),(await Promise.all([w[P](...G),c&&Z.done]))[0]};return t.set(Z,w),w}B=(M=>({...M,get:(Z,P,x)=>F(Z,P)||M.get(Z,P,x),has:(Z,P)=>!!F(Z,P)||M.has(Z,P)}))(B);const D="@firebase/installations",l="0.6.4",h=1e4,Q=`w:${l}`,I="FIS_v2",s=36e5,C={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},R=new w.f("installations","Installations",C);function W(M){return M instanceof w.j&&M.code.includes("request-failed")}function k(M){let{projectId:Z}=M;return`https://firebaseinstallations.googleapis.com/v1/projects/${Z}/installations`}function A(M){return{token:M.token,requestStatus:2,expiresIn:(Z=M.expiresIn,Number(Z.replace("s","000"))),creationTime:Date.now()};var Z}async function o(M,Z){const P=(await Z.json()).error;return R.create("request-failed",{requestName:M,serverCode:P.code,serverMessage:P.message,serverStatus:P.status})}function E(M){let{apiKey:Z}=M;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":Z})}function r(M,Z){let{refreshToken:P}=Z;const x=E(M);return x.append("Authorization",function(M){return`${I} ${M}`}(P)),x}async function q(M){const Z=await M();return Z.status>=500&&Z.status<600?M():Z}function e(M){return new Promise((Z=>{setTimeout(Z,M)}))}const b=/^[cdef][\w-]{21}$/;function a(){try{const M=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(M),M[0]=112+M[0]%16;const Z=function(M){const Z=(P=M,btoa(String.fromCharCode(...P)).replace(/\+/g,"-").replace(/\//g,"_"));var P;return Z.substr(0,22)}(M);return b.test(Z)?Z:""}catch(M){return""}}function y(M){return`${M.appName}!${M.appId}`}const f=new Map;function Y(M,Z){const P=y(M);z(P,Z),function(M,Z){const P=T();P&&P.postMessage({key:M,fid:Z});p()}(P,Z)}function z(M,Z){const P=f.get(M);if(P)for(const x of P)x(Z)}let i=null;function T(){return!i&&"BroadcastChannel"in self&&(i=new BroadcastChannel("[Firebase] FID Change"),i.onmessage=M=>{z(M.data.key,M.data.fid)}),i}function p(){0===f.size&&i&&(i.close(),i=null)}const S="firebase-installations-store";let X=null;function V(){return X||(X=function(M,Z){let{blocked:P,upgrade:x,blocking:c,terminated:w}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const v=indexedDB.open(M,Z),G=L(v);return x&&v.addEventListener("upgradeneeded",(M=>{x(L(v.result),M.oldVersion,M.newVersion,L(v.transaction))})),P&&v.addEventListener("blocked",(()=>P())),G.then((M=>{w&&M.addEventListener("close",(()=>w())),c&&M.addEventListener("versionchange",(()=>c()))})).catch((()=>{})),G}("firebase-installations-database",1,{upgrade:(M,Z)=>{if(0===Z)M.createObjectStore(S)}})),X}async function g(M,Z){const P=y(M),x=(await V()).transaction(S,"readwrite"),c=x.objectStore(S),w=await c.get(P);return await c.put(Z,P),await x.done,w&&w.fid===Z.fid||Y(M,Z.fid),Z}async function MM(M){const Z=y(M),P=(await V()).transaction(S,"readwrite");await P.objectStore(S).delete(Z),await P.done}async function ZM(M,Z){const P=y(M),x=(await V()).transaction(S,"readwrite"),c=x.objectStore(S),w=await c.get(P),v=Z(w);return void 0===v?await c.delete(P):await c.put(v,P),await x.done,!v||w&&w.fid===v.fid||Y(M,v.fid),v}async function PM(M){let Z;const P=await ZM(M.appConfig,(P=>{const x=function(M){const Z=M||{fid:a(),registrationStatus:0};return wM(Z)}(P),c=function(M,Z){if(0===Z.registrationStatus){if(!navigator.onLine){return{installationEntry:Z,registrationPromise:Promise.reject(R.create("app-offline"))}}const P={fid:Z.fid,registrationStatus:1,registrationTime:Date.now()},x=async function(M,Z){try{const P=await async function(M,Z){let{appConfig:P,heartbeatServiceProvider:x}=M,{fid:c}=Z;const w=k(P),v=E(P),G=x.getImmediate({optional:!0});if(G){const M=await G.getHeartbeatsHeader();M&&v.append("x-firebase-client",M)}const mM={fid:c,authVersion:I,appId:P.appId,sdkVersion:Q},K={method:"POST",headers:v,body:JSON.stringify(mM)},d=await q((()=>fetch(w,K)));if(d.ok){const M=await d.json();return{fid:M.fid||c,registrationStatus:2,refreshToken:M.refreshToken,authToken:A(M.authToken)}}throw await o("Create Installation",d)}(M,Z);return g(M.appConfig,P)}catch(P){throw W(P)&&409===P.customData.serverCode?await MM(M.appConfig):await g(M.appConfig,{fid:Z.fid,registrationStatus:0}),P}}(M,P);return{installationEntry:P,registrationPromise:x}}return 1===Z.registrationStatus?{installationEntry:Z,registrationPromise:xM(M)}:{installationEntry:Z}}(M,x);return Z=c.registrationPromise,c.installationEntry}));return""===P.fid?{installationEntry:await Z}:{installationEntry:P,registrationPromise:Z}}async function xM(M){let Z=await cM(M.appConfig);for(;1===Z.registrationStatus;)await e(100),Z=await cM(M.appConfig);if(0===Z.registrationStatus){const{installationEntry:Z,registrationPromise:P}=await PM(M);return P||Z}return Z}function cM(M){return ZM(M,(M=>{if(!M)throw R.create("installation-not-found");return wM(M)}))}function wM(M){return 1===(Z=M).registrationStatus&&Z.registrationTime+h<Date.now()?{fid:M.fid,registrationStatus:0}:M;var Z}async function vM(M,Z){let{appConfig:P,heartbeatServiceProvider:x}=M;const c=function(M,Z){let{fid:P}=Z;return`${k(M)}/${P}/authTokens:generate`}(P,Z),w=r(P,Z),v=x.getImmediate({optional:!0});if(v){const M=await v.getHeartbeatsHeader();M&&w.append("x-firebase-client",M)}const G={installation:{sdkVersion:Q,appId:P.appId}},mM={method:"POST",headers:w,body:JSON.stringify(G)},K=await q((()=>fetch(c,mM)));if(K.ok){return A(await K.json())}throw await o("Generate Auth Token",K)}async function GM(M){let Z,P=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const x=await ZM(M.appConfig,(x=>{if(!KM(x))throw R.create("not-registered");const c=x.authToken;if(!P&&function(M){return 2===M.requestStatus&&!function(M){const Z=Date.now();return Z<M.creationTime||M.creationTime+M.expiresIn<Z+s}(M)}(c))return x;if(1===c.requestStatus)return Z=async function(M,Z){let P=await mZ(M.appConfig);for(;1===P.authToken.requestStatus;)await e(100),P=await mZ(M.appConfig);const x=P.authToken;return 0===x.requestStatus?GM(M,Z):x}(M,P),x;{if(!navigator.onLine)throw R.create("app-offline");const P=function(M){const Z={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},M),{authToken:Z})}(x);return Z=async function(M,Z){try{const P=await vM(M,Z),x=Object.assign(Object.assign({},Z),{authToken:P});return await g(M.appConfig,x),P}catch(P){if(!W(P)||401!==P.customData.serverCode&&404!==P.customData.serverCode){const P=Object.assign(Object.assign({},Z),{authToken:{requestStatus:0}});await g(M.appConfig,P)}else await MM(M.appConfig);throw P}}(M,P),P}}));return Z?await Z:x.authToken}function mZ(M){return ZM(M,(M=>{if(!KM(M))throw R.create("not-registered");const Z=M.authToken;return 1===(P=Z).requestStatus&&P.requestTime+h<Date.now()?Object.assign(Object.assign({},M),{authToken:{requestStatus:0}}):M;var P}))}function KM(M){return void 0!==M&&2===M.registrationStatus}async function dM(M){let Z=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const P=M;await async function(M){const{registrationPromise:Z}=await PM(M);Z&&await Z}(P);return(await GM(P,Z)).token}function OM(M){return R.create("missing-app-config-values",{valueName:M})}const HM="installations",jM=M=>{const Z=M.getProvider("app").getImmediate(),P=function(M){if(!M||!M.options)throw OM("App Configuration");if(!M.name)throw OM("App Name");const Z=["projectId","apiKey","appId"];for(const P of Z)if(!M.options[P])throw OM(P);return{appName:M.name,projectId:M.options.projectId,apiKey:M.options.apiKey,appId:M.options.appId}}(Z);return{app:Z,appConfig:P,heartbeatServiceProvider:(0,x.w)(Z,"heartbeat"),_delete:()=>Promise.resolve()}},BM=M=>{const Z=M.getProvider("app").getImmediate(),P=(0,x.w)(Z,HM).getImmediate();return{getId:()=>async function(M){const Z=M,{installationEntry:P,registrationPromise:x}=await PM(Z);return x?x.catch(console.error):GM(Z).catch(console.error),P.fid}(P),getToken:M=>dM(P,M)}};(0,x.z)(new v.e(HM,jM,"PUBLIC")),(0,x.z)(new v.e("installations-internal",BM,"PRIVATE")),(0,x.O)(D,l),(0,x.O)(D,l,"esm2017");const UM="analytics",nM="https://www.googletagmanager.com/gtag/js",LM=new c.e("@firebase/analytics"),uM={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},NM=new w.f("analytics","Analytics",uM);function JM(M){if(!M.startsWith(nM)){const Z=NM.create("invalid-gtag-resource",{gtagURL:M});return LM.warn(Z.message),""}return M}function tM(M){return Promise.all(M.map((M=>M.catch((M=>M)))))}function FM(M,Z){const P=function(M,Z){let P;return window.trustedTypes&&(P=window.trustedTypes.createPolicy(M,Z)),P}("firebase-js-sdk-policy",{createScriptURL:JM}),x=document.createElement("script"),c=`${nM}?l=${M}&id=${Z}`;x.src=P?null===P||void 0===P?void 0:P.createScriptURL(c):c,x.async=!0,document.head.appendChild(x)}function DM(M,Z,P,x){return async function(c){try{for(var w=arguments.length,v=new Array(w>1?w-1:0),G=1;G<w;G++)v[G-1]=arguments[G];if("event"===c){const[x,c]=v;await async function(M,Z,P,x,c){try{let w=[];if(c&&c.send_to){let M=c.send_to;Array.isArray(M)||(M=[M]);const x=await tM(P);for(const P of M){const M=x.find((M=>M.measurementId===P)),c=M&&Z[M.appId];if(!c){w=[];break}w.push(c)}}0===w.length&&(w=Object.values(Z)),await Promise.all(w),M("event",x,c||{})}catch(w){LM.error(w)}}(M,Z,P,x,c)}else if("config"===c){const[c,w]=v;await async function(M,Z,P,x,c,w){const v=x[c];try{if(v)await Z[v];else{const M=(await tM(P)).find((M=>M.measurementId===c));M&&await Z[M.appId]}}catch(G){LM.error(G)}M("config",c,w)}(M,Z,P,x,c,w)}else if("consent"===c){const[Z]=v;M("consent","update",Z)}else if("get"===c){const[Z,P,x]=v;M("get",Z,P,x)}else if("set"===c){const[Z]=v;M("set",Z)}else M(c,...v)}catch(mM){LM.error(mM)}}}const lM=new class{constructor(){let M=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=M,this.intervalMillis=Z}getThrottleMetadata(M){return this.throttleMetadata[M]}setThrottleMetadata(M,Z){this.throttleMetadata[M]=Z}deleteThrottleMetadata(M){delete this.throttleMetadata[M]}};function hM(M){return new Headers({Accept:"application/json","x-goog-api-key":M})}async function QM(M){let Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:lM,P=arguments.length>2?arguments[2]:void 0;const{appId:x,apiKey:c,measurementId:w}=M.options;if(!x)throw NM.create("no-app-id");if(!c){if(w)return{measurementId:w,appId:x};throw NM.create("no-api-key")}const v=Z.getThrottleMetadata(x)||{backoffCount:0,throttleEndTimeMillis:Date.now()},G=new sM;return setTimeout((async()=>{G.abort()}),void 0!==P?P:6e4),IM({appId:x,apiKey:c,measurementId:w},v,G,Z)}async function IM(M,Z,P){let{throttleEndTimeMillis:x,backoffCount:c}=Z,v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:lM;var G;const{appId:mM,measurementId:K}=M;try{await function(M,Z){return new Promise(((P,x)=>{const c=Math.max(Z-Date.now(),0),w=setTimeout(P,c);M.addEventListener((()=>{clearTimeout(w),x(NM.create("fetch-throttle",{throttleEndTimeMillis:Z}))}))}))}(P,x)}catch(d){if(K)return LM.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${K} provided in the "measurementId" field in the local Firebase config. [${null===d||void 0===d?void 0:d.message}]`),{appId:mM,measurementId:K};throw d}try{const Z=await async function(M){var Z;const{appId:P,apiKey:x}=M,c={method:"GET",headers:hM(x)},w="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",P),v=await fetch(w,c);if(200!==v.status&&304!==v.status){let M="";try{const P=await v.json();(null===(Z=P.error)||void 0===Z?void 0:Z.message)&&(M=P.error.message)}catch(G){}throw NM.create("config-fetch-failed",{httpStatus:v.status,responseMessage:M})}return v.json()}(M);return v.deleteThrottleMetadata(mM),Z}catch(d){const Z=d;if(!function(M){if(!(M instanceof w.j)||!M.customData)return!1;const Z=Number(M.customData.httpStatus);return 429===Z||500===Z||503===Z||504===Z}(Z)){if(v.deleteThrottleMetadata(mM),K)return LM.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${K} provided in the "measurementId" field in the local Firebase config. [${null===Z||void 0===Z?void 0:Z.message}]`),{appId:mM,measurementId:K};throw d}const x=503===Number(null===(G=null===Z||void 0===Z?void 0:Z.customData)||void 0===G?void 0:G.httpStatus)?(0,w.r)(c,v.intervalMillis,30):(0,w.r)(c,v.intervalMillis),O={throttleEndTimeMillis:Date.now()+x,backoffCount:c+1};return v.setThrottleMetadata(mM,O),LM.debug(`Calling attemptFetch again in ${x} millis`),IM(M,O,P,v)}}class sM{constructor(){this.listeners=[]}addEventListener(M){this.listeners.push(M)}abort(){this.listeners.forEach((M=>M()))}}let CM,RM;function WM(M){RM=M}function kM(M){CM=M}async function AM(M,Z,P,x,c,v,G){var mM;const K=QM(M);K.then((Z=>{P[Z.measurementId]=Z.appId,M.options.measurementId&&Z.measurementId!==M.options.measurementId&&LM.warn(`The measurement ID in the local Firebase config (${M.options.measurementId}) does not match the measurement ID fetched from the server (${Z.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((M=>LM.error(M))),Z.push(K);const d=async function(){if(!(0,w.S)())return LM.warn(NM.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,w.bb)()}catch(M){return LM.warn(NM.create("indexeddb-unavailable",{errorInfo:null===M||void 0===M?void 0:M.toString()}).message),!1}return!0}().then((M=>M?x.getId():void 0)),[O,H]=await Promise.all([K,d]);(function(M){const Z=window.document.getElementsByTagName("script");for(const P of Object.values(Z))if(P.src&&P.src.includes(nM)&&P.src.includes(M))return P;return null})(v)||FM(v,O.measurementId),RM&&(c("consent","default",RM),WM(void 0)),c("js",new Date);const j=null!==(mM=null===G||void 0===G?void 0:G.config)&&void 0!==mM?mM:{};return j.origin="firebase",j.update=!0,null!=H&&(j.firebase_id=H),c("config",O.measurementId,j),CM&&(c("set",CM),kM(void 0)),O.measurementId}class oM{constructor(M){this.app=M}_delete(){return delete EM[this.app.options.appId],Promise.resolve()}}let EM={},rM=[];const qM={};let eM,bM,aM="dataLayer",yM="gtag",fM=!1;function YM(M){if(fM)throw NM.create("already-initialized");M.dataLayerName&&(aM=M.dataLayerName),M.gtagName&&(yM=M.gtagName)}function zM(M,Z,P){!function(){const M=[];if((0,w.M)()&&M.push("This is a browser extension environment."),(0,w.n)()||M.push("Cookies are not available."),M.length>0){const Z=M.map(((M,Z)=>`(${Z+1}) ${M}`)).join(" "),P=NM.create("invalid-analytics-context",{errorInfo:Z});LM.warn(P.message)}}();const x=M.options.appId;if(!x)throw NM.create("no-app-id");if(!M.options.apiKey){if(!M.options.measurementId)throw NM.create("no-api-key");LM.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${M.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=EM[x])throw NM.create("already-exists",{id:x});if(!fM){!function(M){let Z=[];Array.isArray(window[M])?Z=window[M]:window[M]=Z}(aM);const{wrappedGtag:M,gtagCore:Z}=function(M,Z,P,x,c){let w=function(){for(var M=arguments.length,Z=new Array(M),P=0;P<M;P++)Z[P]=arguments[P];window[x].push(arguments)};return window[c]&&"function"===typeof window[c]&&(w=window[c]),window[c]=DM(w,M,Z,P),{gtagCore:w,wrappedGtag:window[c]}}(EM,rM,qM,aM,yM);bM=M,eM=Z,fM=!0}EM[x]=AM(M,rM,qM,Z,eM,aM,P);return new oM(M)}function iM(){let M=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,x.G)();M=(0,w.H)(M);const Z=(0,x.w)(M,UM);return Z.isInitialized()?Z.getImmediate():TM(M)}function TM(M){let Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const P=(0,x.w)(M,UM);if(P.isInitialized()){const M=P.getImmediate();if((0,w.u)(Z,P.getOptions()))return M;throw NM.create("already-initialized")}return P.initialize({options:Z})}async function pM(){if((0,w.M)())return!1;if(!(0,w.n)())return!1;if(!(0,w.S)())return!1;try{return await(0,w.bb)()}catch(M){return!1}}function SM(M,Z,P){M=(0,w.H)(M),async function(M,Z,P,x){if(x&&x.global)return M("set",{screen_name:P}),Promise.resolve();M("config",await Z,{update:!0,screen_name:P})}(bM,EM[M.app.options.appId],Z,P).catch((M=>LM.error(M)))}async function XM(M){return M=(0,w.H)(M),async function(M,Z){const P=await Z;return new Promise(((Z,x)=>{M("get",P,"client_id",(M=>{M||x(NM.create("no-client-id")),Z(M)}))}))}(bM,EM[M.app.options.appId])}function VM(M,Z,P){M=(0,w.H)(M),async function(M,Z,P,x){if(x&&x.global)return M("set",{user_id:P}),Promise.resolve();M("config",await Z,{update:!0,user_id:P})}(bM,EM[M.app.options.appId],Z,P).catch((M=>LM.error(M)))}function gM(M,Z,P){M=(0,w.H)(M),async function(M,Z,P,x){if(x&&x.global){const Z={};for(const M of Object.keys(P))Z[`user_properties.${M}`]=P[M];return M("set",Z),Promise.resolve()}M("config",await Z,{update:!0,user_properties:P})}(bM,EM[M.app.options.appId],Z,P).catch((M=>LM.error(M)))}function MZ(M,Z){M=(0,w.H)(M),async function(M,Z){const P=await M;window[`ga-disable-${P}`]=!Z}(EM[M.app.options.appId],Z).catch((M=>LM.error(M)))}function ZZ(M){bM?bM("set",M):kM(M)}function PZ(M,Z,P,x){M=(0,w.H)(M),async function(M,Z,P,x,c){if(c&&c.global)M("event",P,x);else{const c=await Z;M("event",P,Object.assign(Object.assign({},x),{send_to:c}))}}(bM,EM[M.app.options.appId],Z,P,x).catch((M=>LM.error(M)))}function xZ(M){bM?bM("consent","update",M):WM(M)}const cZ="@firebase/analytics",wZ="0.10.0";(0,x.z)(new v.e(UM,((M,Z)=>{let{options:P}=Z;return zM(M.getProvider("app").getImmediate(),M.getProvider("installations-internal").getImmediate(),P)}),"PUBLIC")),(0,x.z)(new v.e("analytics-internal",(function(M){try{const Z=M.getProvider(UM).getImmediate();return{logEvent:(M,P,x)=>PZ(Z,M,P,x)}}catch(Z){throw NM.create("interop-component-reg-failed",{reason:Z})}}),"PRIVATE")),(0,x.O)(cZ,wZ),(0,x.O)(cZ,wZ,"esm2017")}}]);