"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6,7],{10263:(f,Q,H)=>{var X=H(1518),i=H(1036);i.b.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(i.b.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=X.c.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((f=>{this._texture._sphericalPolynomial=f,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(f){this._texture&&(this._texture._sphericalPolynomial=f)},enumerable:!0,configurable:!0})},10267:(f,Q,H)=>{H.r(Q),H.d(Q,{Dispose:()=>g,DumpData:()=>J,DumpDataAsync:()=>N,DumpFramebuffer:()=>B,DumpTools:()=>z});var X=H(1546),i=H(1203),S=H(1034),x=H(1027);let K,Z=null;async function B(f,Q,H,X){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",S=arguments.length>5?arguments[5]:void 0,x=arguments.length>6?arguments[6]:void 0;const K=await H.readPixels(0,0,f,Q);J(f,Q,new Uint8Array(K.buffer),X,i,S,!0,void 0,x)}function N(f,Q,H){let X=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",i=arguments.length>4?arguments[4]:void 0,S=arguments.length>5&&void 0!==arguments[5]&&arguments[5],x=arguments.length>6&&void 0!==arguments[6]&&arguments[6],K=arguments.length>7?arguments[7]:void 0;return new Promise((Z=>{J(f,Q,H,(f=>Z(f)),X,i,S,x,K)}))}function J(f,Q,B,N){let J=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",z=arguments.length>5?arguments[5]:void 0,v=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Y=arguments.length>7&&void 0!==arguments[7]&&arguments[7],O=arguments.length>8?arguments[8]:void 0;(async function(){return Z||(Z=new Promise(((f,Q)=>{let i,S=null;const Z={le:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(H.bind(H,1445)).then((B=>{let{ThinEngine:N}=B;try{i=new OffscreenCanvas(100,100),S=new N(i,!1,Z)}catch(z){i=document.createElement("canvas"),S=new N(i,!1,Z)}x.e.Instances.pop(),x.e.OnEnginesDisposedObservable.add((f=>{S&&f!==S&&!S.u&&0===x.e.Instances.length&&g()})),S.getCaps().parallelShaderCompile=void 0;const J=new X.e(S);H.e(32).then(H.bind(H,10941)).then((H=>{let{passPixelShader:x}=H;if(!S)return void Q("Engine is not defined");const Z=new X.i({Cd:S,name:x.name,fragmentShader:x.shader,samplerNames:["textureSampler"]});K={canvas:i,Cd:S,renderer:J,wrapper:Z},f(K)}))})).catch(Q)}))),await Z})().then((H=>{if(H.Cd.setSize(f,Q,!0),B instanceof Float32Array){const f=new Uint8Array(B.length);let Q=B.length;for(;Q--;){const H=B[Q];f[Q]=Math.round(255*(0,S.c)(H))}B=f}const X=H.Cd.createRawTexture(B,f,Q,5,!1,!v,1);H.renderer.setViewport(),H.renderer.applyEffectWrapper(H.wrapper),H.wrapper.effect._bindTexture("textureSampler",X),H.renderer.draw(),Y?i.g.ToBlob(H.canvas,(f=>{const Q=new FileReader;Q.onload=f=>{const Q=f.target.result;N&&N(Q)},Q.readAsArrayBuffer(f)}),J,O):i.g.EncodeScreenshotCanvasData(H.canvas,N,J,z,O),X.dispose()}))}function g(){var f;K?(K.wrapper.dispose(),K.renderer.dispose(),K.Cd.dispose()):null===(f=Z)||void 0===f||f.then((f=>{f.wrapper.dispose(),f.renderer.dispose(),f.Cd.dispose()}));Z=null,K=null}const z={DumpData:J,DumpDataAsync:N,DumpFramebuffer:B,Dispose:g};i.g.DumpData=J,i.g.DumpDataAsync=N,i.g.DumpFramebuffer=B},10252:(f,Q,H)=>{H.d(Q,{d:()=>v,e:()=>n,h:()=>I,j:()=>l});var X=H(1203),i=H(1003),S=H(1034),x=H(1483),K=H(1133),Z=H(1036),B=(H(1196),H(1537)),N=H(1092);H(10257),H(10263),H(10267);const J="image/png",g=2,z=[134,22,135,150,246,214,150,54];function v(f){const Q=new DataView(f.buffer,f.byteOffset,f.byteLength);let H=0;for(let x=0;x<z.length;x++)if(Q.getUint8(H++)!==z[x])return N.b.Error("Not a babylon environment map"),null;let X="",i=0;for(;i=Q.getUint8(H++);)X+=String.fromCharCode(i);let S=JSON.parse(X);return S=Y(S),S.Ce&&(S.Ce.specularDataPosition=H,S.Ce.lodGenerationScale=S.Ce.lodGenerationScale||.8),S}function Y(f){if(f.version>g)throw new Error(`Unsupported babylon environment map version "${f.version}". Latest supported version is "${g}".`);return 2===f.version?f:f={...f,version:2,imageType:J}}function O(f,Q){const H=(Q=Y(Q)).Ce;let X=Math.log2(Q.width);if(X=Math.round(X)+1,H.mipmaps.length!==6*X)throw new Error(`Unsupported specular mipmaps number "${H.mipmaps.length}"`);const i=new Array(X);for(let S=0;S<X;S++){i[S]=new Array(6);for(let Q=0;Q<6;Q++){const X=H.mipmaps[6*S+Q];i[S][Q]=new Uint8Array(f.buffer,f.byteOffset+H.specularDataPosition+X.position,X.length)}}return i}function n(f,Q,H){const X=(H=Y(H)).Ce;if(!X)return Promise.resolve();f._lodGenerationScale=X.lodGenerationScale;return G(f,O(Q,H),H.imageType)}function e(f,Q,H,X,i,S,x,K,Z,B,N){return new Promise(((J,g)=>{if(H){const H=Q.createTexture(null,!0,!0,null,1,null,(f=>{g(f)}),f);null===X||void 0===X||X.onEffectCreatedObservable.addOnce((K=>{K.executeWhenCompiled((()=>{X.externalTextureSamplerBinding=!0,X.onApply=X=>{X._bindTexture("textureSampler",H),X.setFloat2("scale",1,Q._features.needsInvertingBitmap&&f instanceof ImageBitmap?-1:1)},Q.scenes.length&&(Q.scenes[0].postProcessManager.directRender([X],B,!0,S,x),Q.restoreDefaultFramebuffer(),H.dispose(),URL.revokeObjectURL(i),J())}))}))}else{if(Q._uploadImageToTexture(N,f,S,x),K){const H=Z[x];H&&Q._uploadImageToTexture(H._texture,f,S,0)}J()}}))}async function G(f,Q){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:J;if(!X.g.IsExponentOfTwo(f.width))throw new Error("Texture size must be a power of two");const x=(0,S.j)(f.width)+1,N=f.getEngine();let g=!1,z=!1,v=null,Y=null,O=null;const n=N.getCaps();f.format=5,f.type=0,f.generateMipMaps=!0,f._cachedAnisotropicFilteringLevel=null,N.updateTextureSamplingMode(3,f),n.textureLOD?N._features.supportRenderAndCopyToLodForFloatTextures?n.textureHalfFloatRender&&n.textureHalfFloatLinearFiltering?(g=!0,f.type=2):n.textureFloatRender&&n.textureFloatLinearFiltering&&(g=!0,f.type=1):g=!1:(g=!1,z=!0,O={});let G=0;if(g)N.isWebGPU?(G=1,await H.e(17).then(H.bind(H,12511))):await H.e(24).then(H.bind(H,12515)),v=new B.e("rgbdDecode","rgbdDecode",null,null,1,null,3,N,!1,void 0,f.type,void 0,null,!1,void 0,G),f._isRGBD=!1,f.invertY=!1,Y=N.createRenderTargetCubeTexture(f.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:f.type,format:5});else if(f._isRGBD=!0,f.invertY=!0,z){const Q=3,H=f._lodGenerationScale,X=f._lodGenerationOffset;for(let i=0;i<Q;i++){const S=(x-1)*H+X,B=X+(S-X)*(1-i/(Q-1)),J=Math.round(Math.min(Math.max(B,0),S)),g=new K.c(N,2);g.isCube=!0,g.invertY=!0,g.generateMipMaps=!1,N.updateTextureSamplingMode(2,g);const z=new Z.b(null);switch(z._isCube=!0,z._texture=g,O[J]=z,i){case 0:f._lodTextureLow=z;break;case 1:f._lodTextureMid=z;break;case 2:f._lodTextureHigh=z}}}const I=[];for(let H=0;H<Q.length;H++)for(let X=0;X<6;X++){const S=Q[H][X],x=new Blob([S],{type:i}),K=URL.createObjectURL(x);let Z;if(N._features.forceBitmapOverHTMLImageElement)Z=N.createImageBitmap(x,{premultiplyAlpha:"none"}).then((Q=>e(Q,N,g,v,K,X,H,z,O,Y,f)));else{const Q=new Image;Q.src=K,Z=new Promise(((i,S)=>{Q.onload=()=>{e(Q,N,g,v,K,X,H,z,O,Y,f).then((()=>i())).catch((f=>{S(f)}))},Q.onerror=f=>{S(f)}}))}I.push(Z)}if(Q.length<x){let H;const X=Math.pow(2,x-1-Q.length),i=X*X*4;switch(f.type){case 0:H=new Uint8Array(i);break;case 2:H=new Uint16Array(i);break;case 1:H=new Float32Array(i)}for(let S=Q.length;S<x;S++)for(let Q=0;Q<6;Q++)N._uploadArrayBufferViewToTexture(f,H,Q,S)}return Promise.all(I).then((()=>{Y&&(N._releaseTexture(f),Y._swapAndDie(f)),v&&v.dispose(),z&&(f._lodTextureHigh&&f._lodTextureHigh._texture&&(f._lodTextureHigh._texture.isReady=!0),f._lodTextureMid&&f._lodTextureMid._texture&&(f._lodTextureMid._texture.isReady=!0),f._lodTextureLow&&f._lodTextureLow._texture&&(f._lodTextureLow._texture.isReady=!0))}))}function I(f,Q){const H=(Q=Y(Q)).irradiance;if(!H)return;const X=new x.d;i.p.FromArrayToRef(H.x,0,X.x),i.p.FromArrayToRef(H.y,0,X.y),i.p.FromArrayToRef(H.z,0,X.z),i.p.FromArrayToRef(H.xx,0,X.xx),i.p.FromArrayToRef(H.yy,0,X.yy),i.p.FromArrayToRef(H.zz,0,X.zz),i.p.FromArrayToRef(H.yz,0,X.yz),i.p.FromArrayToRef(H.zx,0,X.zx),i.p.FromArrayToRef(H.xy,0,X.xy),f._sphericalPolynomial=X}function l(f,Q,H,X,i){const S=G(f.getEngine().createRawCubeTexture(null,f.width,f.format,f.type,f.generateMipMaps,f.invertY,f.samplingMode,f._compression),Q).then((()=>f));return f.onRebuildCallback=f=>({proxy:S,isReady:!0,isAsync:!0}),f._source=13,f._bufferViewArrayArray=Q,f._lodGenerationScale=X,f._lodGenerationOffset=i,f._sphericalPolynomial=H,G(f,Q).then((()=>(f.isReady=!0,f)))}},10257:(f,Q,H)=>{H.d(Q,{b:()=>S});var X=H(1537),i=H(1524);class S{static ExpandRGBDTexture(f){const Q=f._texture;if(!Q||!f.isRGBD)return;const i=Q.getEngine(),S=i.getCaps(),x=Q.isReady;let K=!1;S.textureHalfFloatRender&&S.textureHalfFloatLinearFiltering?(K=!0,Q.type=2):S.textureFloatRender&&S.textureFloatLinearFiltering&&(K=!0,Q.type=1),K&&(Q.isReady=!1,Q._isRGBD=!1,Q.invertY=!1);const Z=async()=>{const S=i.isWebGPU,x=S?1:0;Q.isReady=!1,S?await Promise.all([H.e(17).then(H.bind(H,12511)),H.e(18).then(H.bind(H,12524))]):await Promise.all([H.e(24).then(H.bind(H,12515)),H.e(25).then(H.bind(H,12530))]);const K=new X.e("rgbdDecode","rgbdDecode",null,null,1,null,3,i,!1,void 0,Q.type,void 0,null,!1,void 0,x);K.externalTextureSamplerBinding=!0;const Z=i.createRenderTargetTexture(Q.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:Q.samplingMode,type:Q.type,format:5});K.onEffectCreatedObservable.addOnce((H=>{H.executeWhenCompiled((()=>{K.onApply=f=>{f._bindTexture("textureSampler",Q),f.setFloat2("scale",1,1)},f.va().postProcessManager.directRender([K],Z,!0),i.restoreDefaultFramebuffer(),i._releaseTexture(Q),K&&K.dispose(),Z._swapAndDie(Q),Q.isReady=!0}))}))};K&&(x?Z():f.onLoadObservable.addOnce(Z))}static EncodeTextureToRGBD(f,Q){let H=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,i.e)("rgbdEncode",f,Q,H,1,5)}}}}]);