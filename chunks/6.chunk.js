"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6],{2408:(t,q,S)=>{var o=S(599),B=S(496),z=S(527),L=S(624),r=S(561),e=S(609);r.c.prototype._partialLoadFile=function(t,q,S,o){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(t,(t=>{S[q]=t,S._internalCount++,6===S._internalCount&&o(S)}),void 0,void 0,!0,((t,q)=>{B&&t&&B(t.status+" "+t.statusText,q)}))},r.c.prototype._cascadeLoadFiles=function(t,q,S){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const B=[];B._internalCount=0;for(let z=0;z<6;z++)this._partialLoadFile(S[z],z,B,q,o)},r.c.prototype._cascadeLoadImgs=function(t,q,S,o){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,z=arguments.length>5?arguments[5]:void 0;const L=[];L._internalCount=0;for(let r=0;r<6;r++)this._partialLoadImg(o[r],r,L,t,q,S,B,z)},r.c.prototype._partialLoadImg=function(t,q,S,o,B,r){let e=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,C=arguments.length>7?arguments[7]:void 0;const Z=(0,L.d)();(0,z.p)(t,(t=>{S[q]=t,S._internalCount++,o&&o.removePendingData(Z),6===S._internalCount&&r&&r(B,S)}),((t,q)=>{o&&o.removePendingData(Z),e&&e(t,q)}),o?o.offlineProvider:null,C),o&&o.addPendingData(Z)},r.c.prototype.createCubeTextureBase=function(t,q,S,z){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,C=arguments.length>6?arguments[6]:void 0,Z=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,b=arguments.length>8&&void 0!==arguments[8]&&arguments[8],O=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,i=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,h=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,l=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,I=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,a=arguments.length>14&&void 0!==arguments[14]&&arguments[14],v=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const M=h||new o.b(this,7);M.isCube=!0,M.url=t,M.generateMipMaps=!z,M._lodGenerationScale=O,M._lodGenerationOffset=i,M._useSRGBBuffer=!!a&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!z),M!==h&&(M.label=t.substring(0,60)),this._doNotHandleContextLost||(M._extension=Z,M._files=S,M._buffer=v);const x=t;this._transformTextureUrl&&!h&&(t=this._transformTextureUrl(t));const k=Z??function(t){const q=t.split("?")[0],S=q.lastIndexOf(".");return S>-1?q.substring(S).toLowerCase():""}(t),V=(0,e.d)(k),J=(t,q)=>{M.dispose(),r?r(t,q):t&&B.c.Warn(t)},U=(o,r)=>{t===x?o&&J(o.status+" "+o.statusText,r):(B.c.Warn(`Failed to load ${t}, falling back to the ${x}`),this.createCubeTextureBase(x,q,S,!!z,L,J,C,Z,b,O,i,M,l,I,a,v))};if(V)V.then((o=>{const B=t=>{l&&l(M,t),o.loadCubeData(t,M,b,L,((t,q)=>{J(t,q)}))};v?B(v):S&&6===S.length?o.supportCascades?this._cascadeLoadFiles(q,(t=>B(t.map((t=>new Uint8Array(t))))),S,J):J("Textures type does not support cascades."):this._loadFile(t,(t=>B(new Uint8Array(t))),void 0,void 0,!0,U)}));else{if(!S||0===S.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(q,M,((t,q)=>{I&&I(t,q)}),S,J)}return this._internalTexturesCache.push(M),M}},2295:(t,q,S)=>{S.d(q,{DDSTools:()=>h});var o=S(689),B=S(496),z=S(2298),L=S(2300);S(2408);const r=131072,e=131072;function C(t){return t.charCodeAt(0)+(t.charCodeAt(1)<<8)+(t.charCodeAt(2)<<16)+(t.charCodeAt(3)<<24)}const Z=C("DXT1"),b=C("DXT3"),O=C("DXT5"),i=C("DX10");class h{static GetDDSInfo(t){const q=new Int32Array(t.buffer,t.byteOffset,31),S=new Int32Array(t.buffer,t.byteOffset,35);let o=1;q[2]&r&&(o=Math.max(1,q[7]));const B=q[21],z=B===i?S[32]:0;let L=0;switch(B){case 113:L=2;break;case 116:L=1;break;case i:if(10===z){L=2;break}if(2===z){L=1;break}}return{width:q[4],height:q[3],mipmapCount:o,isFourCC:4===(4&q[20]),isRGB:64===(64&q[20]),isLuminance:(q[20]&e)===e,isCube:512===(512&q[28]),isCompressed:B===Z||B===b||B===O,dxgiFormat:z,textureType:L}}static _GetHalfFloatAsFloatRGBAArrayBuffer(t,q,S,o,B,z){const r=new Float32Array(o),e=new Uint16Array(B,S);let C=0;for(let Z=0;Z<q;Z++)for(let q=0;q<t;q++){const S=4*(q+Z*t);r[C]=(0,L.e)(e[S]),r[C+1]=(0,L.e)(e[S+1]),r[C+2]=(0,L.e)(e[S+2]),h.StoreLODInAlphaChannel?r[C+3]=z:r[C+3]=(0,L.e)(e[S+3]),C+=4}return r}static _GetHalfFloatRGBAArrayBuffer(t,q,S,o,B,z){if(h.StoreLODInAlphaChannel){const r=new Uint16Array(o),e=new Uint16Array(B,S);let C=0;for(let S=0;S<q;S++)for(let q=0;q<t;q++){const o=4*(q+S*t);r[C]=e[o],r[C+1]=e[o+1],r[C+2]=e[o+2],r[C+3]=(0,L.n)(z),C+=4}return r}return new Uint16Array(B,S,o)}static _GetFloatRGBAArrayBuffer(t,q,S,o,B,z){if(h.StoreLODInAlphaChannel){const L=new Float32Array(o),r=new Float32Array(B,S);let e=0;for(let S=0;S<q;S++)for(let q=0;q<t;q++){const o=4*(q+S*t);L[e]=r[o],L[e+1]=r[o+1],L[e+2]=r[o+2],L[e+3]=z,e+=4}return L}return new Float32Array(B,S,o)}static _GetFloatAsHalfFloatRGBAArrayBuffer(t,q,S,o,B,z){const r=new Uint16Array(o),e=new Float32Array(B,S);let C=0;for(let Z=0;Z<q;Z++)for(let q=0;q<t;q++)r[C]=(0,L.n)(e[C]),r[C+1]=(0,L.n)(e[C+1]),r[C+2]=(0,L.n)(e[C+2]),h.StoreLODInAlphaChannel?r[C+3]=(0,L.n)(z):r[C+3]=(0,L.n)(e[C+3]),C+=4;return r}static _GetFloatAsUIntRGBAArrayBuffer(t,q,S,B,z,L){const r=new Uint8Array(B),e=new Float32Array(z,S);let C=0;for(let Z=0;Z<q;Z++)for(let q=0;q<t;q++){const S=4*(q+Z*t);r[C]=255*(0,o.Clamp)(e[S]),r[C+1]=255*(0,o.Clamp)(e[S+1]),r[C+2]=255*(0,o.Clamp)(e[S+2]),h.StoreLODInAlphaChannel?r[C+3]=L:r[C+3]=255*(0,o.Clamp)(e[S+3]),C+=4}return r}static _GetHalfFloatAsUIntRGBAArrayBuffer(t,q,S,B,z,r){const e=new Uint8Array(B),C=new Uint16Array(z,S);let Z=0;for(let b=0;b<q;b++)for(let q=0;q<t;q++){const S=4*(q+b*t);e[Z]=255*(0,o.Clamp)((0,L.e)(C[S])),e[Z+1]=255*(0,o.Clamp)((0,L.e)(C[S+1])),e[Z+2]=255*(0,o.Clamp)((0,L.e)(C[S+2])),h.StoreLODInAlphaChannel?e[Z+3]=r:e[Z+3]=255*(0,o.Clamp)((0,L.e)(C[S+3])),Z+=4}return e}static _GetRGBAArrayBuffer(t,q,S,o,B,z,L,r,e){const C=new Uint8Array(o),Z=new Uint8Array(B,S);let b=0;for(let O=0;O<q;O++)for(let q=0;q<t;q++){const S=4*(q+O*t);C[b]=Z[S+z],C[b+1]=Z[S+L],C[b+2]=Z[S+r],C[b+3]=Z[S+e],b+=4}return C}static _ExtractLongWordOrder(t){return 0===t||255===t||-16777216===t?0:1+h._ExtractLongWordOrder(t>>8)}static _GetRGBArrayBuffer(t,q,S,o,B,z,L,r){const e=new Uint8Array(o),C=new Uint8Array(B,S);let Z=0;for(let b=0;b<q;b++)for(let q=0;q<t;q++){const S=3*(q+b*t);e[Z]=C[S+z],e[Z+1]=C[S+L],e[Z+2]=C[S+r],Z+=3}return e}static _GetLuminanceArrayBuffer(t,q,S,o,B){const z=new Uint8Array(o),L=new Uint8Array(B,S);let r=0;for(let e=0;e<q;e++)for(let q=0;q<t;q++){const S=q+e*t;z[r]=L[S],r++}return z}static UploadDDSLevels(t,q,S,o,L,e){let C=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,l=arguments.length>7?arguments[7]:void 0,I=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],a=null;o.sphericalPolynomial&&(a=[]);const v=!!t.getCaps().s3tc;q.generateMipMaps=L;const M=new Int32Array(S.buffer,S.byteOffset,31);let x,k,V,J,U,H,j,y=0,Q=0,K=1;if(542327876!==M[0])return void B.c.Error("Invalid magic number in DDS header");if(!o.isFourCC&&!o.isRGB&&!o.isLuminance)return void B.c.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(o.isCompressed&&!v)return void B.c.Error("Compressed textures are not supported on this platform.");let X=M[22];J=M[1]+4;let G=!1;if(o.isFourCC)switch(x=M[21],x){case Z:K=8,Q=33777;break;case b:K=16,Q=33778;break;case O:K=16,Q=33779;break;case 113:G=!0,X=64;break;case 116:G=!0,X=128;break;case i:{J+=20;let t=!1;switch(o.dxgiFormat){case 10:G=!0,X=64,t=!0;break;case 2:G=!0,X=128,t=!0;break;case 88:o.isRGB=!0,o.isFourCC=!1,X=32,t=!0}if(t)break}default:return void B.c.Error(["Unsupported FourCC code:",(Y=x,String.fromCharCode(255&Y,Y>>8&255,Y>>16&255,Y>>24&255))])}var Y;const n=h._ExtractLongWordOrder(M[23]),u=h._ExtractLongWordOrder(M[24]),W=h._ExtractLongWordOrder(M[25]),f=h._ExtractLongWordOrder(M[26]);G&&(Q=t._getRGBABufferInternalSizedFormat(o.textureType)),H=1,M[2]&r&&!1!==L&&(H=Math.max(1,M[7]));const D=l||0,m=t.getCaps();for(let B=D;B<e;B++){for(k=M[4],V=M[3],j=0;j<H;++j){if(-1===C||C===j){const z=-1===C?j:0;if(!o.isCompressed&&o.isFourCC){q.format=5,y=k*V*4;let o=null;if(t._badOS||t._badDesktopOS||!m.textureHalfFloat&&!m.textureFloat)128===X?(o=h._GetFloatAsUIntRGBAArrayBuffer(k,V,S.byteOffset+J,y,S.buffer,z),a&&0==z&&a.push(h._GetFloatRGBAArrayBuffer(k,V,S.byteOffset+J,y,S.buffer,z))):64===X&&(o=h._GetHalfFloatAsUIntRGBAArrayBuffer(k,V,S.byteOffset+J,y,S.buffer,z),a&&0==z&&a.push(h._GetHalfFloatAsFloatRGBAArrayBuffer(k,V,S.byteOffset+J,y,S.buffer,z))),q.type=0;else{const t=m.textureFloat&&(I&&m.textureFloatLinearFiltering||!I),B=m.textureHalfFloat&&(I&&m.textureHalfFloatLinearFiltering||!I),L=(128===X||64===X&&!B)&&t?1:(64===X||128===X&&!t)&&B?2:0;let r,e=null;if(128===X)switch(L){case 1:r=h._GetFloatRGBAArrayBuffer,e=null;break;case 2:r=h._GetFloatAsHalfFloatRGBAArrayBuffer,e=h._GetFloatRGBAArrayBuffer;break;case 0:r=h._GetFloatAsUIntRGBAArrayBuffer,e=h._GetFloatRGBAArrayBuffer}else switch(L){case 1:r=h._GetHalfFloatAsFloatRGBAArrayBuffer,e=null;break;case 2:r=h._GetHalfFloatRGBAArrayBuffer,e=h._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:r=h._GetHalfFloatAsUIntRGBAArrayBuffer,e=h._GetHalfFloatAsFloatRGBAArrayBuffer}q.type=L,o=r(k,V,S.byteOffset+J,y,S.buffer,z),a&&0==z&&a.push(e?e(k,V,S.byteOffset+J,y,S.buffer,z):o)}o&&t._uploadDataToTextureDirectly(q,o,B,z)}else if(o.isRGB)q.type=0,24===X?(q.format=4,y=k*V*3,U=h._GetRGBArrayBuffer(k,V,S.byteOffset+J,y,S.buffer,n,u,W),t._uploadDataToTextureDirectly(q,U,B,z)):(q.format=5,y=k*V*4,U=h._GetRGBAArrayBuffer(k,V,S.byteOffset+J,y,S.buffer,n,u,W,f),t._uploadDataToTextureDirectly(q,U,B,z));else if(o.isLuminance){const o=t._getUnpackAlignement(),L=k;y=Math.floor((k+o-1)/o)*o*(V-1)+L,U=h._GetLuminanceArrayBuffer(k,V,S.byteOffset+J,y,S.buffer),q.format=1,q.type=0,t._uploadDataToTextureDirectly(q,U,B,z)}else y=Math.max(4,k)/4*Math.max(4,V)/4*K,U=new Uint8Array(S.buffer,S.byteOffset+J,y),q.type=0,t._uploadCompressedDataToTextureDirectly(q,Q,k,V,U,B,z)}J+=X?k*V*(X/8):y,k*=.5,V*=.5,k=Math.max(1,k),V=Math.max(1,V)}if(void 0!==l)break}a&&a.length>0?o.sphericalPolynomial=z.e.ConvertCubeMapToSphericalPolynomial({size:M[4],right:a[0],left:a[1],up:a[2],down:a[3],front:a[4],back:a[5],format:5,type:1,gammaSpace:!1}):o.sphericalPolynomial=void 0}}h.StoreLODInAlphaChannel=!1}}]);