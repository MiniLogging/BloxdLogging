/*! For license information please see s8oeea.6.65f389bd.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6],{11121:(G,V,W)=>{W.r(V),W.d(V,{getAnalytics:()=>EG,getGoogleAnalyticsClientId:()=>jG,initializeAnalytics:()=>hG,isSupported:()=>oG,logEvent:()=>WV,setAnalyticsCollectionEnabled:()=>GV,setConsent:()=>JV,setCurrentScreen:()=>cG,setDefaultEventParameters:()=>VV,setUserId:()=>IG,setUserProperties:()=>OG,settings:()=>QG});var J=W(11104),R=W(11119),d=W(11116),k=W(11113);let z,X;const P=new WeakMap,A=new WeakMap,x=new WeakMap,q=new WeakMap,L=new WeakMap;let t={get(G,V,W){if(G instanceof IDBTransaction){if("done"===V)return A.get(G);if("objectStoreNames"===V)return G.objectStoreNames||x.get(G);if("store"===V)return W.objectStoreNames[1]?void 0:W.objectStore(W.objectStoreNames[0])}return B(G[V])},set:(G,V,W)=>(G[V]=W,!0),has:(G,V)=>G instanceof IDBTransaction&&("done"===V||"store"===V)||V in G};function Y(G){return G!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(X||(X=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(G)?function(){for(var V=arguments.length,W=new Array(V),J=0;J<V;J++)W[J]=arguments[J];return G.apply(S(this),W),B(P.get(this))}:function(){for(var V=arguments.length,W=new Array(V),J=0;J<V;J++)W[J]=arguments[J];return B(G.apply(S(this),W))}:function(V){for(var W=arguments.length,J=new Array(W>1?W-1:0),R=1;R<W;R++)J[R-1]=arguments[R];const d=G.call(S(this),V,...J);return x.set(d,V.sort?V.sort():[V]),B(d)}}function g(G){return"function"===typeof G?Y(G):(G instanceof IDBTransaction&&function(G){if(A.has(G))return;const V=new Promise(((V,W)=>{const J=()=>{G.removeEventListener("complete",R),G.removeEventListener("error",d),G.removeEventListener("abort",d)},R=()=>{V(),J()},d=()=>{W(G.error||new DOMException("AbortError","AbortError")),J()};G.addEventListener("complete",R),G.addEventListener("error",d),G.addEventListener("abort",d)}));A.set(G,V)}(G),V=G,(z||(z=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((G=>V instanceof G))?new Proxy(G,t):G);var V}function B(G){if(G instanceof IDBRequest)return function(G){const V=new Promise(((V,W)=>{const J=()=>{G.removeEventListener("success",R),G.removeEventListener("error",d)},R=()=>{V(B(G.result)),J()},d=()=>{W(G.error),J()};G.addEventListener("success",R),G.addEventListener("error",d)}));return V.then((V=>{V instanceof IDBCursor&&P.set(V,G)})).catch((()=>{})),L.set(V,G),V}(G);if(q.has(G))return q.get(G);const V=g(G);return V!==G&&(q.set(G,V),L.set(V,G)),V}const S=G=>L.get(G);const p=["get","getKey","getAll","getAllKeys","count"],b=["put","add","delete","clear"],r=new Map;function y(G,V){if(!(G instanceof IDBDatabase)||V in G||"string"!==typeof V)return;if(r.get(V))return r.get(V);const W=V.replace(/FromIndex$/,""),J=V!==W,R=b.includes(W);if(!(W in(J?IDBIndex:IDBObjectStore).prototype)||!R&&!p.includes(W))return;const d=async function(G){const V=this.transaction(G,R?"readwrite":"readonly");let d=V.store;for(var k=arguments.length,z=new Array(k>1?k-1:0),X=1;X<k;X++)z[X-1]=arguments[X];return J&&(d=d.index(z.shift())),(await Promise.all([d[W](...z),R&&V.done]))[0]};return r.set(V,d),d}t=(G=>({...G,get:(V,W,J)=>y(V,W)||G.get(V,W,J),has:(V,W)=>!!y(V,W)||G.has(V,W)}))(t);const u="@firebase/installations",H="0.6.4",n=1e4,D=`w:${H}`,i="FIS_v2",e=36e5,F={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},f=new d.e("installations","Installations",F);function v(G){return G instanceof d.i&&G.code.includes("request-failed")}function C(G){let{projectId:V}=G;return`https://firebaseinstallations.googleapis.com/v1/projects/${V}/installations`}function l(G){return{token:G.token,requestStatus:2,expiresIn:(V=G.expiresIn,Number(V.replace("s","000"))),creationTime:Date.now()};var V}async function m(G,V){const W=(await V.json()).error;return f.create("request-failed",{requestName:G,serverCode:W.code,serverMessage:W.message,serverStatus:W.status})}function w(G){let{apiKey:V}=G;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":V})}function N(G,V){let{refreshToken:W}=V;const J=w(G);return J.append("Authorization",function(G){return`${i} ${G}`}(W)),J}async function U(G){const V=await G();return V.status>=500&&V.status<600?G():V}function a(G){return new Promise((V=>{setTimeout(V,G)}))}const M=/^[cdef][\w-]{21}$/;function T(){try{const G=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(G),G[0]=112+G[0]%16;const V=function(G){const V=(W=G,btoa(String.fromCharCode(...W)).replace(/\+/g,"-").replace(/\//g,"_"));var W;return V.substr(0,22)}(G);return M.test(V)?V:""}catch(G){return""}}function K(G){return`${G.appName}!${G.appId}`}const s=new Map;function Q(G,V){const W=K(G);Z(W,V),function(G,V){const W=h();W&&W.postMessage({key:G,fid:V});o()}(W,V)}function Z(G,V){const W=s.get(G);if(W)for(const J of W)J(V)}let E=null;function h(){return!E&&"BroadcastChannel"in self&&(E=new BroadcastChannel("[Firebase] FID Change"),E.onmessage=G=>{Z(G.data.key,G.data.fid)}),E}function o(){0===s.size&&E&&(E.close(),E=null)}const c="firebase-installations-store";let j=null;function I(){return j||(j=function(G,V){let{blocked:W,upgrade:J,blocking:R,terminated:d}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const k=indexedDB.open(G,V),z=B(k);return J&&k.addEventListener("upgradeneeded",(G=>{J(B(k.result),G.oldVersion,G.newVersion,B(k.transaction))})),W&&k.addEventListener("blocked",(()=>W())),z.then((G=>{d&&G.addEventListener("close",(()=>d())),R&&G.addEventListener("versionchange",(()=>R()))})).catch((()=>{})),z}("firebase-installations-database",1,{upgrade:(G,V)=>{if(0===V)G.createObjectStore(c)}})),j}async function O(G,V){const W=K(G),J=(await I()).transaction(c,"readwrite"),R=J.objectStore(c),d=await R.get(W);return await R.put(V,W),await J.done,d&&d.fid===V.fid||Q(G,V.fid),V}async function GG(G){const V=K(G),W=(await I()).transaction(c,"readwrite");await W.objectStore(c).delete(V),await W.done}async function VG(G,V){const W=K(G),J=(await I()).transaction(c,"readwrite"),R=J.objectStore(c),d=await R.get(W),k=V(d);return void 0===k?await R.delete(W):await R.put(k,W),await J.done,!k||d&&d.fid===k.fid||Q(G,k.fid),k}async function WG(G){let V;const W=await VG(G.appConfig,(W=>{const J=function(G){const V=G||{fid:T(),registrationStatus:0};return dG(V)}(W),R=function(G,V){if(0===V.registrationStatus){if(!navigator.onLine){return{installationEntry:V,registrationPromise:Promise.reject(f.create("app-offline"))}}const W={fid:V.fid,registrationStatus:1,registrationTime:Date.now()},J=async function(G,V){try{const W=await async function(G,V){let{appConfig:W,heartbeatServiceProvider:J}=G,{fid:R}=V;const d=C(W),k=w(W),z=J.getImmediate({optional:!0});if(z){const G=await z.getHeartbeatsHeader();G&&k.append("x-firebase-client",G)}const X={fid:R,authVersion:i,appId:W.appId,sdkVersion:D},P={method:"POST",headers:k,body:JSON.stringify(X)},A=await U((()=>fetch(d,P)));if(A.ok){const G=await A.json();return{fid:G.fid||R,registrationStatus:2,refreshToken:G.refreshToken,authToken:l(G.authToken)}}throw await m("Create Installation",A)}(G,V);return O(G.appConfig,W)}catch(W){throw v(W)&&409===W.customData.serverCode?await GG(G.appConfig):await O(G.appConfig,{fid:V.fid,registrationStatus:0}),W}}(G,W);return{installationEntry:W,registrationPromise:J}}return 1===V.registrationStatus?{installationEntry:V,registrationPromise:JG(G)}:{installationEntry:V}}(G,J);return V=R.registrationPromise,R.installationEntry}));return""===W.fid?{installationEntry:await V}:{installationEntry:W,registrationPromise:V}}async function JG(G){let V=await RG(G.appConfig);for(;1===V.registrationStatus;)await a(100),V=await RG(G.appConfig);if(0===V.registrationStatus){const{installationEntry:V,registrationPromise:W}=await WG(G);return W||V}return V}function RG(G){return VG(G,(G=>{if(!G)throw f.create("installation-not-found");return dG(G)}))}function dG(G){return 1===(V=G).registrationStatus&&V.registrationTime+n<Date.now()?{fid:G.fid,registrationStatus:0}:G;var V}async function kG(G,V){let{appConfig:W,heartbeatServiceProvider:J}=G;const R=function(G,V){let{fid:W}=V;return`${C(G)}/${W}/authTokens:generate`}(W,V),d=N(W,V),k=J.getImmediate({optional:!0});if(k){const G=await k.getHeartbeatsHeader();G&&d.append("x-firebase-client",G)}const z={installation:{sdkVersion:D,appId:W.appId}},X={method:"POST",headers:d,body:JSON.stringify(z)},P=await U((()=>fetch(R,X)));if(P.ok){return l(await P.json())}throw await m("Generate Auth Token",P)}async function zG(G){let V,W=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const J=await VG(G.appConfig,(J=>{if(!PG(J))throw f.create("not-registered");const R=J.authToken;if(!W&&function(G){return 2===G.requestStatus&&!function(G){const V=Date.now();return V<G.creationTime||G.creationTime+G.expiresIn<V+e}(G)}(R))return J;if(1===R.requestStatus)return V=async function(G,V){let W=await XG(G.appConfig);for(;1===W.authToken.requestStatus;)await a(100),W=await XG(G.appConfig);const J=W.authToken;return 0===J.requestStatus?zG(G,V):J}(G,W),J;{if(!navigator.onLine)throw f.create("app-offline");const W=function(G){const V={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},G),{authToken:V})}(J);return V=async function(G,V){try{const W=await kG(G,V),J=Object.assign(Object.assign({},V),{authToken:W});return await O(G.appConfig,J),W}catch(W){if(!v(W)||401!==W.customData.serverCode&&404!==W.customData.serverCode){const W=Object.assign(Object.assign({},V),{authToken:{requestStatus:0}});await O(G.appConfig,W)}else await GG(G.appConfig);throw W}}(G,W),W}}));return V?await V:J.authToken}function XG(G){return VG(G,(G=>{if(!PG(G))throw f.create("not-registered");const V=G.authToken;return 1===(W=V).requestStatus&&W.requestTime+n<Date.now()?Object.assign(Object.assign({},G),{authToken:{requestStatus:0}}):G;var W}))}function PG(G){return void 0!==G&&2===G.registrationStatus}async function AG(G){let V=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const W=G;await async function(G){const{registrationPromise:V}=await WG(G);V&&await V}(W);return(await zG(W,V)).token}function xG(G){return f.create("missing-app-config-values",{valueName:G})}const qG="installations",LG=G=>{const V=G.getProvider("app").getImmediate(),W=function(G){if(!G||!G.options)throw xG("App Configuration");if(!G.name)throw xG("App Name");const V=["projectId","apiKey","appId"];for(const W of V)if(!G.options[W])throw xG(W);return{appName:G.name,projectId:G.options.projectId,apiKey:G.options.apiKey,appId:G.options.appId}}(V);return{app:V,appConfig:W,heartbeatServiceProvider:(0,J.x)(V,"heartbeat"),_delete:()=>Promise.resolve()}},tG=G=>{const V=G.getProvider("app").getImmediate(),W=(0,J.x)(V,qG).getImmediate();return{getId:()=>async function(G){const V=G,{installationEntry:W,registrationPromise:J}=await WG(V);return J?J.catch(console.error):zG(V).catch(console.error),W.fid}(W),getToken:G=>AG(W,G)}};(0,J.A)(new k.f(qG,LG,"PUBLIC")),(0,J.A)(new k.f("installations-internal",tG,"PRIVATE")),(0,J.T)(u,H),(0,J.T)(u,H,"esm2017");const YG="analytics",gG="https://www.googletagmanager.com/gtag/js",BG=new R.e("@firebase/analytics"),SG={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},pG=new d.e("analytics","Analytics",SG);function bG(G){if(!G.startsWith(gG)){const V=pG.create("invalid-gtag-resource",{gtagURL:G});return BG.warn(V.message),""}return G}function rG(G){return Promise.all(G.map((G=>G.catch((G=>G)))))}function yG(G,V){const W=function(G,V){let W;return window.trustedTypes&&(W=window.trustedTypes.createPolicy(G,V)),W}("firebase-js-sdk-policy",{createScriptURL:bG}),J=document.createElement("script"),R=`${gG}?l=${G}&id=${V}`;J.src=W?null===W||void 0===W?void 0:W.createScriptURL(R):R,J.async=!0,document.head.appendChild(J)}function uG(G,V,W,J){return async function(R){try{for(var d=arguments.length,k=new Array(d>1?d-1:0),z=1;z<d;z++)k[z-1]=arguments[z];if("event"===R){const[J,R]=k;await async function(G,V,W,J,R){try{let d=[];if(R&&R.send_to){let G=R.send_to;Array.isArray(G)||(G=[G]);const J=await rG(W);for(const W of G){const G=J.find((G=>G.measurementId===W)),R=G&&V[G.appId];if(!R){d=[];break}d.push(R)}}0===d.length&&(d=Object.values(V)),await Promise.all(d),G("event",J,R||{})}catch(d){BG.error(d)}}(G,V,W,J,R)}else if("config"===R){const[R,d]=k;await async function(G,V,W,J,R,d){const k=J[R];try{if(k)await V[k];else{const G=(await rG(W)).find((G=>G.measurementId===R));G&&await V[G.appId]}}catch(z){BG.error(z)}G("config",R,d)}(G,V,W,J,R,d)}else if("consent"===R){const[V]=k;G("consent","update",V)}else if("get"===R){const[V,W,J]=k;G("get",V,W,J)}else if("set"===R){const[V]=k;G("set",V)}else G(R,...k)}catch(X){BG.error(X)}}}const HG=new class{constructor(){let G=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},V=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=G,this.intervalMillis=V}getThrottleMetadata(G){return this.throttleMetadata[G]}setThrottleMetadata(G,V){this.throttleMetadata[G]=V}deleteThrottleMetadata(G){delete this.throttleMetadata[G]}};function nG(G){return new Headers({Accept:"application/json","x-goog-api-key":G})}async function DG(G){let V=arguments.length>1&&void 0!==arguments[1]?arguments[1]:HG,W=arguments.length>2?arguments[2]:void 0;const{appId:J,apiKey:R,measurementId:d}=G.options;if(!J)throw pG.create("no-app-id");if(!R){if(d)return{measurementId:d,appId:J};throw pG.create("no-api-key")}const k=V.getThrottleMetadata(J)||{backoffCount:0,throttleEndTimeMillis:Date.now()},z=new eG;return setTimeout((async()=>{z.abort()}),void 0!==W?W:6e4),iG({appId:J,apiKey:R,measurementId:d},k,z,V)}async function iG(G,V,W){let{throttleEndTimeMillis:J,backoffCount:R}=V,k=arguments.length>3&&void 0!==arguments[3]?arguments[3]:HG;var z;const{appId:X,measurementId:P}=G;try{await function(G,V){return new Promise(((W,J)=>{const R=Math.max(V-Date.now(),0),d=setTimeout(W,R);G.addEventListener((()=>{clearTimeout(d),J(pG.create("fetch-throttle",{throttleEndTimeMillis:V}))}))}))}(W,J)}catch(A){if(P)return BG.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${P} provided in the "measurementId" field in the local Firebase config. [${null===A||void 0===A?void 0:A.message}]`),{appId:X,measurementId:P};throw A}try{const V=await async function(G){var V;const{appId:W,apiKey:J}=G,R={method:"GET",headers:nG(J)},d="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",W),k=await fetch(d,R);if(200!==k.status&&304!==k.status){let G="";try{const W=await k.json();(null===(V=W.error)||void 0===V?void 0:V.message)&&(G=W.error.message)}catch(z){}throw pG.create("config-fetch-failed",{httpStatus:k.status,responseMessage:G})}return k.json()}(G);return k.deleteThrottleMetadata(X),V}catch(A){const V=A;if(!function(G){if(!(G instanceof d.i)||!G.customData)return!1;const V=Number(G.customData.httpStatus);return 429===V||500===V||503===V||504===V}(V)){if(k.deleteThrottleMetadata(X),P)return BG.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${P} provided in the "measurementId" field in the local Firebase config. [${null===V||void 0===V?void 0:V.message}]`),{appId:X,measurementId:P};throw A}const J=503===Number(null===(z=null===V||void 0===V?void 0:V.customData)||void 0===z?void 0:z.httpStatus)?(0,d.r)(R,k.intervalMillis,30):(0,d.r)(R,k.intervalMillis),x={throttleEndTimeMillis:Date.now()+J,backoffCount:R+1};return k.setThrottleMetadata(X,x),BG.debug(`Calling attemptFetch again in ${J} millis`),iG(G,x,W,k)}}class eG{constructor(){this.listeners=[]}addEventListener(G){this.listeners.push(G)}abort(){this.listeners.forEach((G=>G()))}}let FG,fG;function vG(G){fG=G}function CG(G){FG=G}async function lG(G,V,W,J,R,k,z){var X;const P=DG(G);P.then((V=>{W[V.measurementId]=V.appId,G.options.measurementId&&V.measurementId!==G.options.measurementId&&BG.warn(`The measurement ID in the local Firebase config (${G.options.measurementId}) does not match the measurement ID fetched from the server (${V.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((G=>BG.error(G))),V.push(P);const A=async function(){if(!(0,d.Z)())return BG.warn(pG.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,d.gb)()}catch(G){return BG.warn(pG.create("indexeddb-unavailable",{errorInfo:null===G||void 0===G?void 0:G.toString()}).message),!1}return!0}().then((G=>G?J.getId():void 0)),[x,q]=await Promise.all([P,A]);(function(G){const V=window.document.getElementsByTagName("script");for(const W of Object.values(V))if(W.src&&W.src.includes(gG)&&W.src.includes(G))return W;return null})(k)||yG(k,x.measurementId),fG&&(R("consent","default",fG),vG(void 0)),R("js",new Date);const L=null!==(X=null===z||void 0===z?void 0:z.config)&&void 0!==X?X:{};return L.origin="firebase",L.update=!0,null!=q&&(L.firebase_id=q),R("config",x.measurementId,L),FG&&(R("set",FG),CG(void 0)),x.measurementId}class mG{constructor(G){this.app=G}_delete(){return delete wG[this.app.options.appId],Promise.resolve()}}let wG={},NG=[];const UG={};let aG,MG,TG="dataLayer",KG="gtag",sG=!1;function QG(G){if(sG)throw pG.create("already-initialized");G.dataLayerName&&(TG=G.dataLayerName),G.gtagName&&(KG=G.gtagName)}function ZG(G,V,W){!function(){const G=[];if((0,d.S)()&&G.push("This is a browser extension environment."),(0,d.k)()||G.push("Cookies are not available."),G.length>0){const V=G.map(((G,V)=>`(${V+1}) ${G}`)).join(" "),W=pG.create("invalid-analytics-context",{errorInfo:V});BG.warn(W.message)}}();const J=G.options.appId;if(!J)throw pG.create("no-app-id");if(!G.options.apiKey){if(!G.options.measurementId)throw pG.create("no-api-key");BG.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${G.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=wG[J])throw pG.create("already-exists",{id:J});if(!sG){!function(G){let V=[];Array.isArray(window[G])?V=window[G]:window[G]=V}(TG);const{wrappedGtag:G,gtagCore:V}=function(G,V,W,J,R){let d=function(){for(var G=arguments.length,V=new Array(G),W=0;W<G;W++)V[W]=arguments[W];window[J].push(arguments)};return window[R]&&"function"===typeof window[R]&&(d=window[R]),window[R]=uG(d,G,V,W),{gtagCore:d,wrappedGtag:window[R]}}(wG,NG,UG,TG,KG);MG=G,aG=V,sG=!0}wG[J]=lG(G,NG,UG,V,aG,TG,W);return new mG(G)}function EG(){let G=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,J.L)();G=(0,d.K)(G);const V=(0,J.x)(G,YG);return V.isInitialized()?V.getImmediate():hG(G)}function hG(G){let V=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const W=(0,J.x)(G,YG);if(W.isInitialized()){const G=W.getImmediate();if((0,d.z)(V,W.getOptions()))return G;throw pG.create("already-initialized")}return W.initialize({options:V})}async function oG(){if((0,d.S)())return!1;if(!(0,d.k)())return!1;if(!(0,d.Z)())return!1;try{return await(0,d.gb)()}catch(G){return!1}}function cG(G,V,W){G=(0,d.K)(G),async function(G,V,W,J){if(J&&J.global)return G("set",{screen_name:W}),Promise.resolve();G("config",await V,{update:!0,screen_name:W})}(MG,wG[G.app.options.appId],V,W).catch((G=>BG.error(G)))}async function jG(G){return G=(0,d.K)(G),async function(G,V){const W=await V;return new Promise(((V,J)=>{G("get",W,"client_id",(G=>{G||J(pG.create("no-client-id")),V(G)}))}))}(MG,wG[G.app.options.appId])}function IG(G,V,W){G=(0,d.K)(G),async function(G,V,W,J){if(J&&J.global)return G("set",{user_id:W}),Promise.resolve();G("config",await V,{update:!0,user_id:W})}(MG,wG[G.app.options.appId],V,W).catch((G=>BG.error(G)))}function OG(G,V,W){G=(0,d.K)(G),async function(G,V,W,J){if(J&&J.global){const V={};for(const G of Object.keys(W))V[`user_properties.${G}`]=W[G];return G("set",V),Promise.resolve()}G("config",await V,{update:!0,user_properties:W})}(MG,wG[G.app.options.appId],V,W).catch((G=>BG.error(G)))}function GV(G,V){G=(0,d.K)(G),async function(G,V){const W=await G;window[`ga-disable-${W}`]=!V}(wG[G.app.options.appId],V).catch((G=>BG.error(G)))}function VV(G){MG?MG("set",G):CG(G)}function WV(G,V,W,J){G=(0,d.K)(G),async function(G,V,W,J,R){if(R&&R.global)G("event",W,J);else{const R=await V;G("event",W,Object.assign(Object.assign({},J),{send_to:R}))}}(MG,wG[G.app.options.appId],V,W,J).catch((G=>BG.error(G)))}function JV(G){MG?MG("consent","update",G):vG(G)}const RV="@firebase/analytics",dV="0.10.0";(0,J.A)(new k.f(YG,((G,V)=>{let{options:W}=V;return ZG(G.getProvider("app").getImmediate(),G.getProvider("installations-internal").getImmediate(),W)}),"PUBLIC")),(0,J.A)(new k.f("analytics-internal",(function(G){try{const V=G.getProvider(YG).getImmediate();return{logEvent:(G,W,J)=>WV(V,G,W,J)}}catch(V){throw pG.create("interop-component-reg-failed",{reason:V})}}),"PRIVATE")),(0,J.T)(RV,dV),(0,J.T)(RV,dV,"esm2017")}}]);