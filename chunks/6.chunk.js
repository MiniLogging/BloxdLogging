/*! For license information please see jt0ced8.6.afdd2ef5.chunk.js.LICENSE.txt */
"use strict";(self.isj1uwvwrek=self.isj1uwvwrek||[]).push([[6],{12777:(I,x,L)=>{L.r(x),L.d(x,{getAnalytics:()=>hI,getGoogleAnalyticsClientId:()=>jI,initializeAnalytics:()=>EI,isSupported:()=>iI,logEvent:()=>Lx,setAnalyticsCollectionEnabled:()=>Ix,setConsent:()=>Fx,setCurrentScreen:()=>VI,setDefaultEventParameters:()=>xx,setUserId:()=>CI,setUserProperties:()=>bI,settings:()=>oI});var F=L(12765),X=L(12774),G=L(12770),Y=L(12768);let p,B;const l=new WeakMap,W=new WeakMap,Q=new WeakMap,e=new WeakMap,g=new WeakMap;let v={get(I,x,L){if(I instanceof IDBTransaction){if("done"===x)return W.get(I);if("objectStoreNames"===x)return I.objectStoreNames||Q.get(I);if("store"===x)return L.objectStoreNames[1]?void 0:L.objectStore(L.objectStoreNames[0])}return s(I[x])},set:(I,x,L)=>(I[x]=L,!0),has:(I,x)=>I instanceof IDBTransaction&&("done"===x||"store"===x)||x in I};function z(I){return I!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(B||(B=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(I)?function(){for(var x=arguments.length,L=new Array(x),F=0;F<x;F++)L[F]=arguments[F];return I.apply(U(this),L),s(l.get(this))}:function(){for(var x=arguments.length,L=new Array(x),F=0;F<x;F++)L[F]=arguments[F];return s(I.apply(U(this),L))}:function(x){for(var L=arguments.length,F=new Array(L>1?L-1:0),X=1;X<L;X++)F[X-1]=arguments[X];const G=I.call(U(this),x,...F);return Q.set(G,x.sort?x.sort():[x]),s(G)}}function H(I){return"function"===typeof I?z(I):(I instanceof IDBTransaction&&function(I){if(W.has(I))return;const x=new Promise(((x,L)=>{const F=()=>{I.removeEventListener("complete",X),I.removeEventListener("error",G),I.removeEventListener("abort",G)},X=()=>{x(),F()},G=()=>{L(I.error||new DOMException("AbortError","AbortError")),F()};I.addEventListener("complete",X),I.addEventListener("error",G),I.addEventListener("abort",G)}));W.set(I,x)}(I),x=I,(p||(p=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((I=>x instanceof I))?new Proxy(I,v):I);var x}function s(I){if(I instanceof IDBRequest)return function(I){const x=new Promise(((x,L)=>{const F=()=>{I.removeEventListener("success",X),I.removeEventListener("error",G)},X=()=>{x(s(I.result)),F()},G=()=>{L(I.error),F()};I.addEventListener("success",X),I.addEventListener("error",G)}));return x.then((x=>{x instanceof IDBCursor&&l.set(x,I)})).catch((()=>{})),g.set(x,I),x}(I);if(e.has(I))return e.get(I);const x=H(I);return x!==I&&(e.set(I,x),g.set(x,I)),x}const U=I=>g.get(I);const q=["get","getKey","getAll","getAllKeys","count"],y=["put","add","delete","clear"],T=new Map;function Z(I,x){if(!(I instanceof IDBDatabase)||x in I||"string"!==typeof x)return;if(T.get(x))return T.get(x);const L=x.replace(/FromIndex$/,""),F=x!==L,X=y.includes(L);if(!(L in(F?IDBIndex:IDBObjectStore).prototype)||!X&&!q.includes(L))return;const G=async function(I){const x=this.transaction(I,X?"readwrite":"readonly");let G=x.store;for(var Y=arguments.length,p=new Array(Y>1?Y-1:0),B=1;B<Y;B++)p[B-1]=arguments[B];return F&&(G=G.index(p.shift())),(await Promise.all([G[L](...p),X&&x.done]))[0]};return T.set(x,G),G}v=(I=>({...I,get:(x,L,F)=>Z(x,L)||I.get(x,L,F),has:(x,L)=>!!Z(x,L)||I.has(x,L)}))(v);const t="@firebase/installations",f="0.6.4",R=1e4,n=`w:${f}`,P="FIS_v2",d=36e5,M={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},K=new G.g("installations","Installations",M);function u(I){return I instanceof G.k&&I.code.includes("request-failed")}function A(I){let{projectId:x}=I;return`https://firebaseinstallations.googleapis.com/v1/projects/${x}/installations`}function mI(I){return{token:I.token,requestStatus:2,expiresIn:(x=I.expiresIn,Number(x.replace("s","000"))),creationTime:Date.now()};var x}async function O(I,x){const L=(await x.json()).error;return K.create("request-failed",{requestName:I,serverCode:L.code,serverMessage:L.message,serverStatus:L.status})}function w(I){let{apiKey:x}=I;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":x})}function k(I,x){let{refreshToken:L}=x;const F=w(I);return F.append("Authorization",function(I){return`${P} ${I}`}(L)),F}async function a(I){const x=await I();return x.status>=500&&x.status<600?I():x}function D(I){return new Promise((x=>{setTimeout(x,I)}))}const r=/^[cdef][\w-]{21}$/;function N(){try{const I=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(I),I[0]=112+I[0]%16;const x=function(I){const x=(L=I,btoa(String.fromCharCode(...L)).replace(/\+/g,"-").replace(/\//g,"_"));var L;return x.substr(0,22)}(I);return r.test(x)?x:""}catch(I){return""}}function S(I){return`${I.appName}!${I.appId}`}const c=new Map;function o(I,x){const L=S(I);J(L,x),function(I,x){const L=E();L&&L.postMessage({key:I,fid:x});i()}(L,x)}function J(I,x){const L=c.get(I);if(L)for(const F of L)F(x)}let h=null;function E(){return!h&&"BroadcastChannel"in self&&(h=new BroadcastChannel("[Firebase] FID Change"),h.onmessage=I=>{J(I.data.key,I.data.fid)}),h}function i(){0===c.size&&h&&(h.close(),h=null)}const V="firebase-installations-store";let j=null;function C(){return j||(j=function(I,x){let{blocked:L,upgrade:F,blocking:X,terminated:G}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const Y=indexedDB.open(I,x),p=s(Y);return F&&Y.addEventListener("upgradeneeded",(I=>{F(s(Y.result),I.oldVersion,I.newVersion,s(Y.transaction))})),L&&Y.addEventListener("blocked",(()=>L())),p.then((I=>{G&&I.addEventListener("close",(()=>G())),X&&I.addEventListener("versionchange",(()=>X()))})).catch((()=>{})),p}("firebase-installations-database",1,{upgrade:(I,x)=>{if(0===x)I.createObjectStore(V)}})),j}async function b(I,x){const L=S(I),F=(await C()).transaction(V,"readwrite"),X=F.objectStore(V),G=await X.get(L);return await X.put(x,L),await F.done,G&&G.fid===x.fid||o(I,x.fid),x}async function II(I){const x=S(I),L=(await C()).transaction(V,"readwrite");await L.objectStore(V).delete(x),await L.done}async function xI(I,x){const L=S(I),F=(await C()).transaction(V,"readwrite"),X=F.objectStore(V),G=await X.get(L),Y=x(G);return void 0===Y?await X.delete(L):await X.put(Y,L),await F.done,!Y||G&&G.fid===Y.fid||o(I,Y.fid),Y}async function LI(I){let x;const L=await xI(I.appConfig,(L=>{const F=function(I){const x=I||{fid:N(),registrationStatus:0};return GI(x)}(L),X=function(I,x){if(0===x.registrationStatus){if(!navigator.onLine){return{installationEntry:x,registrationPromise:Promise.reject(K.create("app-offline"))}}const L={fid:x.fid,registrationStatus:1,registrationTime:Date.now()},F=async function(I,x){try{const L=await async function(I,x){let{appConfig:L,heartbeatServiceProvider:F}=I,{fid:X}=x;const G=A(L),Y=w(L),p=F.getImmediate({optional:!0});if(p){const I=await p.getHeartbeatsHeader();I&&Y.append("x-firebase-client",I)}const B={fid:X,authVersion:P,appId:L.appId,sdkVersion:n},l={method:"POST",headers:Y,body:JSON.stringify(B)},W=await a((()=>fetch(G,l)));if(W.ok){const I=await W.json();return{fid:I.fid||X,registrationStatus:2,refreshToken:I.refreshToken,authToken:mI(I.authToken)}}throw await O("Create Installation",W)}(I,x);return b(I.appConfig,L)}catch(L){throw u(L)&&409===L.customData.serverCode?await II(I.appConfig):await b(I.appConfig,{fid:x.fid,registrationStatus:0}),L}}(I,L);return{installationEntry:L,registrationPromise:F}}return 1===x.registrationStatus?{installationEntry:x,registrationPromise:FI(I)}:{installationEntry:x}}(I,F);return x=X.registrationPromise,X.installationEntry}));return""===L.fid?{installationEntry:await x}:{installationEntry:L,registrationPromise:x}}async function FI(I){let x=await XI(I.appConfig);for(;1===x.registrationStatus;)await D(100),x=await XI(I.appConfig);if(0===x.registrationStatus){const{installationEntry:x,registrationPromise:L}=await LI(I);return L||x}return x}function XI(I){return xI(I,(I=>{if(!I)throw K.create("installation-not-found");return GI(I)}))}function GI(I){return 1===(x=I).registrationStatus&&x.registrationTime+R<Date.now()?{fid:I.fid,registrationStatus:0}:I;var x}async function YI(I,x){let{appConfig:L,heartbeatServiceProvider:F}=I;const X=function(I,x){let{fid:L}=x;return`${A(I)}/${L}/authTokens:generate`}(L,x),G=k(L,x),Y=F.getImmediate({optional:!0});if(Y){const I=await Y.getHeartbeatsHeader();I&&G.append("x-firebase-client",I)}const p={installation:{sdkVersion:n,appId:L.appId}},B={method:"POST",headers:G,body:JSON.stringify(p)},l=await a((()=>fetch(X,B)));if(l.ok){return mI(await l.json())}throw await O("Generate Auth Token",l)}async function pI(I){let x,L=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const F=await xI(I.appConfig,(F=>{if(!lI(F))throw K.create("not-registered");const X=F.authToken;if(!L&&function(I){return 2===I.requestStatus&&!function(I){const x=Date.now();return x<I.creationTime||I.creationTime+I.expiresIn<x+d}(I)}(X))return F;if(1===X.requestStatus)return x=async function(I,x){let L=await BI(I.appConfig);for(;1===L.authToken.requestStatus;)await D(100),L=await BI(I.appConfig);const F=L.authToken;return 0===F.requestStatus?pI(I,x):F}(I,L),F;{if(!navigator.onLine)throw K.create("app-offline");const L=function(I){const x={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},I),{authToken:x})}(F);return x=async function(I,x){try{const L=await YI(I,x),F=Object.assign(Object.assign({},x),{authToken:L});return await b(I.appConfig,F),L}catch(L){if(!u(L)||401!==L.customData.serverCode&&404!==L.customData.serverCode){const L=Object.assign(Object.assign({},x),{authToken:{requestStatus:0}});await b(I.appConfig,L)}else await II(I.appConfig);throw L}}(I,L),L}}));return x?await x:F.authToken}function BI(I){return xI(I,(I=>{if(!lI(I))throw K.create("not-registered");const x=I.authToken;return 1===(L=x).requestStatus&&L.requestTime+R<Date.now()?Object.assign(Object.assign({},I),{authToken:{requestStatus:0}}):I;var L}))}function lI(I){return void 0!==I&&2===I.registrationStatus}async function WI(I){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const L=I;await async function(I){const{registrationPromise:x}=await LI(I);x&&await x}(L);return(await pI(L,x)).token}function QI(I){return K.create("missing-app-config-values",{valueName:I})}const eI="installations",gI=I=>{const x=I.getProvider("app").getImmediate(),L=function(I){if(!I||!I.options)throw QI("App Configuration");if(!I.name)throw QI("App Name");const x=["projectId","apiKey","appId"];for(const L of x)if(!I.options[L])throw QI(L);return{appName:I.name,projectId:I.options.projectId,apiKey:I.options.apiKey,appId:I.options.appId}}(x);return{app:x,appConfig:L,heartbeatServiceProvider:(0,F.v)(x,"heartbeat"),_delete:()=>Promise.resolve()}},vI=I=>{const x=I.getProvider("app").getImmediate(),L=(0,F.v)(x,eI).getImmediate();return{getId:()=>async function(I){const x=I,{installationEntry:L,registrationPromise:F}=await LI(x);return F?F.catch(console.error):pI(x).catch(console.error),L.fid}(L),getToken:I=>WI(L,I)}};(0,F.y)(new Y.g(eI,gI,"PUBLIC")),(0,F.y)(new Y.g("installations-internal",vI,"PRIVATE")),(0,F.X)(t,f),(0,F.X)(t,f,"esm2017");const zI="analytics",HI="https://www.googletagmanager.com/gtag/js",sI=new X.c("@firebase/analytics"),UI={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},qI=new G.g("analytics","Analytics",UI);function yI(I){if(!I.startsWith(HI)){const x=qI.create("invalid-gtag-resource",{gtagURL:I});return sI.warn(x.message),""}return I}function TI(I){return Promise.all(I.map((I=>I.catch((I=>I)))))}function ZI(I,x){const L=function(I,x){let L;return window.trustedTypes&&(L=window.trustedTypes.createPolicy(I,x)),L}("firebase-js-sdk-policy",{createScriptURL:yI}),F=document.createElement("script"),X=`${HI}?l=${I}&id=${x}`;F.src=L?null===L||void 0===L?void 0:L.createScriptURL(X):X,F.async=!0,document.head.appendChild(F)}function tI(I,x,L,F){return async function(X){try{for(var G=arguments.length,Y=new Array(G>1?G-1:0),p=1;p<G;p++)Y[p-1]=arguments[p];if("event"===X){const[F,X]=Y;await async function(I,x,L,F,X){try{let G=[];if(X&&X.send_to){let I=X.send_to;Array.isArray(I)||(I=[I]);const F=await TI(L);for(const L of I){const I=F.find((I=>I.measurementId===L)),X=I&&x[I.appId];if(!X){G=[];break}G.push(X)}}0===G.length&&(G=Object.values(x)),await Promise.all(G),I("event",F,X||{})}catch(G){sI.error(G)}}(I,x,L,F,X)}else if("config"===X){const[X,G]=Y;await async function(I,x,L,F,X,G){const Y=F[X];try{if(Y)await x[Y];else{const I=(await TI(L)).find((I=>I.measurementId===X));I&&await x[I.appId]}}catch(p){sI.error(p)}I("config",X,G)}(I,x,L,F,X,G)}else if("consent"===X){const[x]=Y;I("consent","update",x)}else if("get"===X){const[x,L,F]=Y;I("get",x,L,F)}else if("set"===X){const[x]=Y;I("set",x)}else I(X,...Y)}catch(B){sI.error(B)}}}const fI=new class{constructor(){let I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=I,this.intervalMillis=x}getThrottleMetadata(I){return this.throttleMetadata[I]}setThrottleMetadata(I,x){this.throttleMetadata[I]=x}deleteThrottleMetadata(I){delete this.throttleMetadata[I]}};function RI(I){return new Headers({Accept:"application/json","x-goog-api-key":I})}async function nI(I){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:fI,L=arguments.length>2?arguments[2]:void 0;const{appId:F,apiKey:X,measurementId:G}=I.options;if(!F)throw qI.create("no-app-id");if(!X){if(G)return{measurementId:G,appId:F};throw qI.create("no-api-key")}const Y=x.getThrottleMetadata(F)||{backoffCount:0,throttleEndTimeMillis:Date.now()},p=new dI;return setTimeout((async()=>{p.abort()}),void 0!==L?L:6e4),PI({appId:F,apiKey:X,measurementId:G},Y,p,x)}async function PI(I,x,L){let{throttleEndTimeMillis:F,backoffCount:X}=x,Y=arguments.length>3&&void 0!==arguments[3]?arguments[3]:fI;var p;const{appId:B,measurementId:l}=I;try{await function(I,x){return new Promise(((L,F)=>{const X=Math.max(x-Date.now(),0),G=setTimeout(L,X);I.addEventListener((()=>{clearTimeout(G),F(qI.create("fetch-throttle",{throttleEndTimeMillis:x}))}))}))}(L,F)}catch(W){if(l)return sI.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${l} provided in the "measurementId" field in the local Firebase config. [${null===W||void 0===W?void 0:W.message}]`),{appId:B,measurementId:l};throw W}try{const x=await async function(I){var x;const{appId:L,apiKey:F}=I,X={method:"GET",headers:RI(F)},G="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",L),Y=await fetch(G,X);if(200!==Y.status&&304!==Y.status){let I="";try{const L=await Y.json();(null===(x=L.error)||void 0===x?void 0:x.message)&&(I=L.error.message)}catch(p){}throw qI.create("config-fetch-failed",{httpStatus:Y.status,responseMessage:I})}return Y.json()}(I);return Y.deleteThrottleMetadata(B),x}catch(W){const x=W;if(!function(I){if(!(I instanceof G.k)||!I.customData)return!1;const x=Number(I.customData.httpStatus);return 429===x||500===x||503===x||504===x}(x)){if(Y.deleteThrottleMetadata(B),l)return sI.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${l} provided in the "measurementId" field in the local Firebase config. [${null===x||void 0===x?void 0:x.message}]`),{appId:B,measurementId:l};throw W}const F=503===Number(null===(p=null===x||void 0===x?void 0:x.customData)||void 0===p?void 0:p.httpStatus)?(0,G.w)(X,Y.intervalMillis,30):(0,G.w)(X,Y.intervalMillis),Q={throttleEndTimeMillis:Date.now()+F,backoffCount:X+1};return Y.setThrottleMetadata(B,Q),sI.debug(`Calling attemptFetch again in ${F} millis`),PI(I,Q,L,Y)}}class dI{constructor(){this.listeners=[]}addEventListener(I){this.listeners.push(I)}abort(){this.listeners.forEach((I=>I()))}}let MI,KI;function uI(I){KI=I}function AI(I){MI=I}async function mx(I,x,L,F,X,Y,p){var B;const l=nI(I);l.then((x=>{L[x.measurementId]=x.appId,I.options.measurementId&&x.measurementId!==I.options.measurementId&&sI.warn(`The measurement ID in the local Firebase config (${I.options.measurementId}) does not match the measurement ID fetched from the server (${x.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((I=>sI.error(I))),x.push(l);const W=async function(){if(!(0,G.W)())return sI.warn(qI.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,G.bb)()}catch(I){return sI.warn(qI.create("indexeddb-unavailable",{errorInfo:null===I||void 0===I?void 0:I.toString()}).message),!1}return!0}().then((I=>I?F.getId():void 0)),[Q,e]=await Promise.all([l,W]);(function(I){const x=window.document.getElementsByTagName("script");for(const L of Object.values(x))if(L.src&&L.src.includes(HI)&&L.src.includes(I))return L;return null})(Y)||ZI(Y,Q.measurementId),KI&&(X("consent","default",KI),uI(void 0)),X("js",new Date);const g=null!==(B=null===p||void 0===p?void 0:p.config)&&void 0!==B?B:{};return g.origin="firebase",g.update=!0,null!=e&&(g.firebase_id=e),X("config",Q.measurementId,g),MI&&(X("set",MI),AI(void 0)),Q.measurementId}class OI{constructor(I){this.app=I}_delete(){return delete wI[this.app.options.appId],Promise.resolve()}}let wI={},kI=[];const aI={};let DI,rI,NI="dataLayer",SI="gtag",cI=!1;function oI(I){if(cI)throw qI.create("already-initialized");I.dataLayerName&&(NI=I.dataLayerName),I.gtagName&&(SI=I.gtagName)}function JI(I,x,L){!function(){const I=[];if((0,G.Q)()&&I.push("This is a browser extension environment."),(0,G.n)()||I.push("Cookies are not available."),I.length>0){const x=I.map(((I,x)=>`(${x+1}) ${I}`)).join(" "),L=qI.create("invalid-analytics-context",{errorInfo:x});sI.warn(L.message)}}();const F=I.options.appId;if(!F)throw qI.create("no-app-id");if(!I.options.apiKey){if(!I.options.measurementId)throw qI.create("no-api-key");sI.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${I.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=wI[F])throw qI.create("already-exists",{id:F});if(!cI){!function(I){let x=[];Array.isArray(window[I])?x=window[I]:window[I]=x}(NI);const{wrappedGtag:I,gtagCore:x}=function(I,x,L,F,X){let G=function(){for(var I=arguments.length,x=new Array(I),L=0;L<I;L++)x[L]=arguments[L];window[F].push(arguments)};return window[X]&&"function"===typeof window[X]&&(G=window[X]),window[X]=tI(G,I,x,L),{gtagCore:G,wrappedGtag:window[X]}}(wI,kI,aI,NI,SI);rI=I,DI=x,cI=!0}wI[F]=mx(I,kI,aI,x,DI,NI,L);return new OI(I)}function hI(){let I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,F.N)();I=(0,G.M)(I);const x=(0,F.v)(I,zI);return x.isInitialized()?x.getImmediate():EI(I)}function EI(I){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const L=(0,F.v)(I,zI);if(L.isInitialized()){const I=L.getImmediate();if((0,G.y)(x,L.getOptions()))return I;throw qI.create("already-initialized")}return L.initialize({options:x})}async function iI(){if((0,G.Q)())return!1;if(!(0,G.n)())return!1;if(!(0,G.W)())return!1;try{return await(0,G.bb)()}catch(I){return!1}}function VI(I,x,L){I=(0,G.M)(I),async function(I,x,L,F){if(F&&F.global)return I("set",{screen_name:L}),Promise.resolve();I("config",await x,{update:!0,screen_name:L})}(rI,wI[I.app.options.appId],x,L).catch((I=>sI.error(I)))}async function jI(I){return I=(0,G.M)(I),async function(I,x){const L=await x;return new Promise(((x,F)=>{I("get",L,"client_id",(I=>{I||F(qI.create("no-client-id")),x(I)}))}))}(rI,wI[I.app.options.appId])}function CI(I,x,L){I=(0,G.M)(I),async function(I,x,L,F){if(F&&F.global)return I("set",{user_id:L}),Promise.resolve();I("config",await x,{update:!0,user_id:L})}(rI,wI[I.app.options.appId],x,L).catch((I=>sI.error(I)))}function bI(I,x,L){I=(0,G.M)(I),async function(I,x,L,F){if(F&&F.global){const x={};for(const I of Object.keys(L))x[`user_properties.${I}`]=L[I];return I("set",x),Promise.resolve()}I("config",await x,{update:!0,user_properties:L})}(rI,wI[I.app.options.appId],x,L).catch((I=>sI.error(I)))}function Ix(I,x){I=(0,G.M)(I),async function(I,x){const L=await I;window[`ga-disable-${L}`]=!x}(wI[I.app.options.appId],x).catch((I=>sI.error(I)))}function xx(I){rI?rI("set",I):AI(I)}function Lx(I,x,L,F){I=(0,G.M)(I),async function(I,x,L,F,X){if(X&&X.global)I("event",L,F);else{const X=await x;I("event",L,Object.assign(Object.assign({},F),{send_to:X}))}}(rI,wI[I.app.options.appId],x,L,F).catch((I=>sI.error(I)))}function Fx(I){rI?rI("consent","update",I):uI(I)}const Xx="@firebase/analytics",Gx="0.10.0";(0,F.y)(new Y.g(zI,((I,x)=>{let{options:L}=x;return JI(I.getProvider("app").getImmediate(),I.getProvider("installations-internal").getImmediate(),L)}),"PUBLIC")),(0,F.y)(new Y.g("analytics-internal",(function(I){try{const x=I.getProvider(zI).getImmediate();return{logEvent:(I,L,F)=>Lx(x,I,L,F)}}catch(x){throw qI.create("interop-component-reg-failed",{reason:x})}}),"PRIVATE")),(0,F.X)(Xx,Gx),(0,F.X)(Xx,Gx,"esm2017")}}]);