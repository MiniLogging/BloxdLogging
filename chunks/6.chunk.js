"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6,7],{10980:(T,z,X)=>{var b=X(1471),F=X(1021);F.b.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(F.b.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=b.e.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((T=>{this._texture._sphericalPolynomial=T,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(T){this._texture&&(this._texture._sphericalPolynomial=T)},enumerable:!0,configurable:!0})},10983:(T,z,X)=>{X.r(z),X.d(z,{Dispose:()=>D,DumpData:()=>L,DumpDataAsync:()=>k,DumpFramebuffer:()=>v,DumpTools:()=>c});var b=X(1493),F=X(1166),A=X(1014),u=X(1007);let y,E=null;async function v(T,z,X,b){let F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",A=arguments.length>5?arguments[5]:void 0,u=arguments.length>6?arguments[6]:void 0;const y=await X.readPixels(0,0,T,z);L(T,z,new Uint8Array(y.buffer),b,F,A,!0,void 0,u)}function k(T,z,X){let b=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",F=arguments.length>4?arguments[4]:void 0,A=arguments.length>5&&void 0!==arguments[5]&&arguments[5],u=arguments.length>6&&void 0!==arguments[6]&&arguments[6],y=arguments.length>7?arguments[7]:void 0;return new Promise((E=>{L(T,z,X,(T=>E(T)),b,F,A,u,y)}))}function L(T,z,v,k){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",c=arguments.length>5?arguments[5]:void 0,p=arguments.length>6&&void 0!==arguments[6]&&arguments[6],H=arguments.length>7&&void 0!==arguments[7]&&arguments[7],U=arguments.length>8?arguments[8]:void 0;(async function(){return E||(E=new Promise(((T,z)=>{let F,A=null;const E={kf:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(X.bind(X,1381)).then((v=>{let{ThinEngine:k}=v;try{F=new OffscreenCanvas(100,100),A=new k(F,!1,E)}catch(c){F=document.createElement("canvas"),A=new k(F,!1,E)}u.e.Instances.pop(),u.e.OnEnginesDisposedObservable.add((T=>{A&&T!==A&&!A.u&&0===u.e.Instances.length&&D()})),A.getCaps().parallelShaderCompile=void 0;const L=new b.d(A);X.e(32).then(X.bind(X,11627)).then((X=>{let{passPixelShader:u}=X;if(!A)return void z("Engine is not defined");const E=new b.e({Ob:A,name:u.name,fragmentShader:u.shader,samplerNames:["textureSampler"]});y={canvas:F,Ob:A,renderer:L,wrapper:E},T(y)}))})).catch(z)}))),await E})().then((X=>{if(X.Ob.setSize(T,z,!0),v instanceof Float32Array){const T=new Uint8Array(v.length);let z=v.length;for(;z--;){const X=v[z];T[z]=Math.round(255*(0,A.d)(X))}v=T}const b=X.Ob.createRawTexture(v,T,z,5,!1,!p,1);X.renderer.setViewport(),X.renderer.applyEffectWrapper(X.wrapper),X.wrapper.effect._bindTexture("textureSampler",b),X.renderer.draw(),H?F.g.ToBlob(X.canvas,(T=>{const z=new FileReader;z.onload=T=>{const z=T.target.result;k&&k(z)},z.readAsArrayBuffer(T)}),L,U):F.g.EncodeScreenshotCanvasData(X.canvas,k,L,c,U),b.dispose()}))}function D(){var T;y?(y.wrapper.dispose(),y.renderer.dispose(),y.Ob.dispose()):null===(T=E)||void 0===T||T.then((T=>{T.wrapper.dispose(),T.renderer.dispose(),T.Ob.dispose()}));E=null,y=null}const c={DumpData:L,DumpDataAsync:k,DumpFramebuffer:v,Dispose:D};F.g.DumpData=L,F.g.DumpDataAsync=k,F.g.DumpFramebuffer=v},10969:(T,z,X)=>{X.d(z,{d:()=>p,g:()=>s,h:()=>d,i:()=>N});var b=X(1166),F=X(976),A=X(1014),u=X(1437),y=X(1102),E=X(1021),v=(X(1159),X(1487)),k=X(1065);X(10976),X(10980),X(10983);const L="image/png",D=2,c=[134,22,135,150,246,214,150,54];function p(T){const z=new DataView(T.buffer,T.byteOffset,T.byteLength);let X=0;for(let u=0;u<c.length;u++)if(z.getUint8(X++)!==c[u])return k.e.Error("Not a babylon environment map"),null;let b="",F=0;for(;F=z.getUint8(X++);)b+=String.fromCharCode(F);let A=JSON.parse(b);return A=H(A),A.Re&&(A.Re.specularDataPosition=X,A.Re.lodGenerationScale=A.Re.lodGenerationScale||.8),A}function H(T){if(T.version>D)throw new Error(`Unsupported babylon environment map version "${T.version}". Latest supported version is "${D}".`);return 2===T.version?T:T={...T,version:2,imageType:L}}function U(T,z){const X=(z=H(z)).Re;let b=Math.log2(z.width);if(b=Math.round(b)+1,X.mipmaps.length!==6*b)throw new Error(`Unsupported specular mipmaps number "${X.mipmaps.length}"`);const F=new Array(b);for(let A=0;A<b;A++){F[A]=new Array(6);for(let z=0;z<6;z++){const b=X.mipmaps[6*A+z];F[A][z]=new Uint8Array(T.buffer,T.byteOffset+X.specularDataPosition+b.position,b.length)}}return F}function s(T,z,X){const b=(X=H(X)).Re;if(!b)return Promise.resolve();T._lodGenerationScale=b.lodGenerationScale;return K(T,U(z,X),X.imageType)}function x(T,z,X,b,F,A,u,y,E,v,k){return new Promise(((L,D)=>{if(X){const X=z.createTexture(null,!0,!0,null,1,null,(T=>{D(T)}),T);null===b||void 0===b||b.onEffectCreatedObservable.addOnce((y=>{y.executeWhenCompiled((()=>{b.externalTextureSamplerBinding=!0,b.onApply=b=>{b._bindTexture("textureSampler",X),b.setFloat2("scale",1,z._features.needsInvertingBitmap&&T instanceof ImageBitmap?-1:1)},z.scenes.length&&(z.scenes[0].postProcessManager.directRender([b],v,!0,A,u),z.restoreDefaultFramebuffer(),X.dispose(),URL.revokeObjectURL(F),L())}))}))}else{if(z._uploadImageToTexture(k,T,A,u),y){const X=E[u];X&&z._uploadImageToTexture(X._texture,T,A,0)}L()}}))}async function K(T,z){let F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:L;if(!b.g.IsExponentOfTwo(T.width))throw new Error("Texture size must be a power of two");const u=(0,A.l)(T.width)+1,k=T.getEngine();let D=!1,c=!1,p=null,H=null,U=null;const s=k.getCaps();T.format=5,T.type=0,T.generateMipMaps=!0,T._cachedAnisotropicFilteringLevel=null,k.updateTextureSamplingMode(3,T),s.textureLOD?k._features.supportRenderAndCopyToLodForFloatTextures?s.textureHalfFloatRender&&s.textureHalfFloatLinearFiltering?(D=!0,T.type=2):s.textureFloatRender&&s.textureFloatLinearFiltering&&(D=!0,T.type=1):D=!1:(D=!1,c=!0,U={});let K=0;if(D)k.isWebGPU?(K=1,await X.e(17).then(X.bind(X,13143))):await X.e(24).then(X.bind(X,13148)),p=new v.d("rgbdDecode","rgbdDecode",null,null,1,null,3,k,!1,void 0,T.type,void 0,null,!1,void 0,K),T._isRGBD=!1,T.invertY=!1,H=k.createRenderTargetCubeTexture(T.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:T.type,format:5});else if(T._isRGBD=!0,T.invertY=!0,c){const z=3,X=T._lodGenerationScale,b=T._lodGenerationOffset;for(let F=0;F<z;F++){const A=(u-1)*X+b,v=b+(A-b)*(1-F/(z-1)),L=Math.round(Math.min(Math.max(v,0),A)),D=new y.b(k,2);D.isCube=!0,D.invertY=!0,D.generateMipMaps=!1,k.updateTextureSamplingMode(2,D);const c=new E.b(null);switch(c._isCube=!0,c._texture=D,U[L]=c,F){case 0:T._lodTextureLow=c;break;case 1:T._lodTextureMid=c;break;case 2:T._lodTextureHigh=c}}}const d=[];for(let X=0;X<z.length;X++)for(let b=0;b<6;b++){const A=z[X][b],u=new Blob([A],{type:F}),y=URL.createObjectURL(u);let E;if(k._features.forceBitmapOverHTMLImageElement)E=k.createImageBitmap(u,{premultiplyAlpha:"none"}).then((z=>x(z,k,D,p,y,b,X,c,U,H,T)));else{const z=new Image;z.src=y,E=new Promise(((F,A)=>{z.onload=()=>{x(z,k,D,p,y,b,X,c,U,H,T).then((()=>F())).catch((T=>{A(T)}))},z.onerror=T=>{A(T)}}))}d.push(E)}if(z.length<u){let X;const b=Math.pow(2,u-1-z.length),F=b*b*4;switch(T.type){case 0:X=new Uint8Array(F);break;case 2:X=new Uint16Array(F);break;case 1:X=new Float32Array(F)}for(let A=z.length;A<u;A++)for(let z=0;z<6;z++)k._uploadArrayBufferViewToTexture(T,X,z,A)}return Promise.all(d).then((()=>{H&&(k._releaseTexture(T),H._swapAndDie(T)),p&&p.dispose(),c&&(T._lodTextureHigh&&T._lodTextureHigh._texture&&(T._lodTextureHigh._texture.isReady=!0),T._lodTextureMid&&T._lodTextureMid._texture&&(T._lodTextureMid._texture.isReady=!0),T._lodTextureLow&&T._lodTextureLow._texture&&(T._lodTextureLow._texture.isReady=!0))}))}function d(T,z){const X=(z=H(z)).irradiance;if(!X)return;const b=new u.e;F.j.FromArrayToRef(X.x,0,b.x),F.j.FromArrayToRef(X.y,0,b.y),F.j.FromArrayToRef(X.z,0,b.z),F.j.FromArrayToRef(X.xx,0,b.xx),F.j.FromArrayToRef(X.yy,0,b.yy),F.j.FromArrayToRef(X.zz,0,b.zz),F.j.FromArrayToRef(X.yz,0,b.yz),F.j.FromArrayToRef(X.zx,0,b.zx),F.j.FromArrayToRef(X.xy,0,b.xy),T._sphericalPolynomial=b}function N(T,z,X,b,F){const A=K(T.getEngine().createRawCubeTexture(null,T.width,T.format,T.type,T.generateMipMaps,T.invertY,T.samplingMode,T._compression),z).then((()=>T));return T.onRebuildCallback=T=>({proxy:A,isReady:!0,isAsync:!0}),T._source=13,T._bufferViewArrayArray=z,T._lodGenerationScale=b,T._lodGenerationOffset=F,T._sphericalPolynomial=X,K(T,z).then((()=>(T.isReady=!0,T)))}},10976:(T,z,X)=>{X.d(z,{c:()=>A});var b=X(1487),F=X(1474);class A{static ExpandRGBDTexture(T){const z=T._texture;if(!z||!T.isRGBD)return;const F=z.getEngine(),A=F.getCaps(),u=z.isReady;let y=!1;A.textureHalfFloatRender&&A.textureHalfFloatLinearFiltering?(y=!0,z.type=2):A.textureFloatRender&&A.textureFloatLinearFiltering&&(y=!0,z.type=1),y&&(z.isReady=!1,z._isRGBD=!1,z.invertY=!1);const E=async()=>{const A=F.isWebGPU,u=A?1:0;z.isReady=!1,A?await Promise.all([X.e(17).then(X.bind(X,13143)),X.e(18).then(X.bind(X,13153))]):await Promise.all([X.e(24).then(X.bind(X,13148)),X.e(25).then(X.bind(X,13159))]);const y=new b.d("rgbdDecode","rgbdDecode",null,null,1,null,3,F,!1,void 0,z.type,void 0,null,!1,void 0,u);y.externalTextureSamplerBinding=!0;const E=F.createRenderTargetTexture(z.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:z.samplingMode,type:z.type,format:5});y.onEffectCreatedObservable.addOnce((X=>{X.executeWhenCompiled((()=>{y.onApply=T=>{T._bindTexture("textureSampler",z),T.setFloat2("scale",1,1)},T.va().postProcessManager.directRender([y],E,!0),F.restoreDefaultFramebuffer(),F._releaseTexture(z),y&&y.dispose(),E._swapAndDie(z),z.isReady=!0}))}))};y&&(u?E():T.onLoadObservable.addOnce(E))}static EncodeTextureToRGBD(T,z){let X=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,F.c)("rgbdEncode",T,z,X,1,5)}}}}]);