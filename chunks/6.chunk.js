/*! For license information please see f7r5om.6.a37ced24.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6],{11001:(P,f,Y)=>{Y.r(f),Y.d(f,{getAnalytics:()=>BP,getGoogleAnalyticsClientId:()=>pP,initializeAnalytics:()=>bP,isSupported:()=>HP,logEvent:()=>Yf,setAnalyticsCollectionEnabled:()=>Pf,setConsent:()=>Cf,setCurrentScreen:()=>WP,setDefaultEventParameters:()=>ff,setUserId:()=>hP,setUserProperties:()=>FP,settings:()=>GP});var C=Y(10986),q=Y(10994),m=Y(10991),L=Y(10989);let o,w;const d=new WeakMap,R=new WeakMap,y=new WeakMap,r=new WeakMap,i=new WeakMap;let u={get(P,f,Y){if(P instanceof IDBTransaction){if("done"===f)return R.get(P);if("objectStoreNames"===f)return P.objectStoreNames||y.get(P);if("store"===f)return Y.objectStoreNames[1]?void 0:Y.objectStore(Y.objectStoreNames[0])}return K(P[f])},set:(P,f,Y)=>(P[f]=Y,!0),has:(P,f)=>P instanceof IDBTransaction&&("done"===f||"store"===f)||f in P};function g(P){return P!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(w||(w=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(P)?function(){for(var f=arguments.length,Y=new Array(f),C=0;C<f;C++)Y[C]=arguments[C];return P.apply(M(this),Y),K(d.get(this))}:function(){for(var f=arguments.length,Y=new Array(f),C=0;C<f;C++)Y[C]=arguments[C];return K(P.apply(M(this),Y))}:function(f){for(var Y=arguments.length,C=new Array(Y>1?Y-1:0),q=1;q<Y;q++)C[q-1]=arguments[q];const m=P.call(M(this),f,...C);return y.set(m,f.sort?f.sort():[f]),K(m)}}function S(P){return"function"===typeof P?g(P):(P instanceof IDBTransaction&&function(P){if(R.has(P))return;const f=new Promise(((f,Y)=>{const C=()=>{P.removeEventListener("complete",q),P.removeEventListener("error",m),P.removeEventListener("abort",m)},q=()=>{f(),C()},m=()=>{Y(P.error||new DOMException("AbortError","AbortError")),C()};P.addEventListener("complete",q),P.addEventListener("error",m),P.addEventListener("abort",m)}));R.set(P,f)}(P),f=P,(o||(o=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((P=>f instanceof P))?new Proxy(P,u):P);var f}function K(P){if(P instanceof IDBRequest)return function(P){const f=new Promise(((f,Y)=>{const C=()=>{P.removeEventListener("success",q),P.removeEventListener("error",m)},q=()=>{f(K(P.result)),C()},m=()=>{Y(P.error),C()};P.addEventListener("success",q),P.addEventListener("error",m)}));return f.then((f=>{f instanceof IDBCursor&&d.set(f,P)})).catch((()=>{})),i.set(f,P),f}(P);if(r.has(P))return r.get(P);const f=S(P);return f!==P&&(r.set(P,f),i.set(f,P)),f}const M=P=>i.get(P);const V=["get","getKey","getAll","getAllKeys","count"],O=["put","add","delete","clear"],n=new Map;function l(P,f){if(!(P instanceof IDBDatabase)||f in P||"string"!==typeof f)return;if(n.get(f))return n.get(f);const Y=f.replace(/FromIndex$/,""),C=f!==Y,q=O.includes(Y);if(!(Y in(C?IDBIndex:IDBObjectStore).prototype)||!q&&!V.includes(Y))return;const m=async function(P){const f=this.transaction(P,q?"readwrite":"readonly");let m=f.store;for(var L=arguments.length,o=new Array(L>1?L-1:0),w=1;w<L;w++)o[w-1]=arguments[w];return C&&(m=m.index(o.shift())),(await Promise.all([m[Y](...o),q&&f.done]))[0]};return n.set(f,m),m}u=(P=>({...P,get:(f,Y,C)=>l(f,Y)||P.get(f,Y,C),has:(f,Y)=>!!l(f,Y)||P.has(f,Y)}))(u);const v="@firebase/installations",c="0.6.4",T=1e4,U=`w:${c}`,D="FIS_v2",j=36e5,e={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},s=new m.f("installations","Installations",e);function a(P){return P instanceof m.i&&P.code.includes("request-failed")}function Q(P){let{projectId:f}=P;return`https://firebaseinstallations.googleapis.com/v1/projects/${f}/installations`}function J(P){return{token:P.token,requestStatus:2,expiresIn:(f=P.expiresIn,Number(f.replace("s","000"))),creationTime:Date.now()};var f}async function N(P,f){const Y=(await f.json()).error;return s.create("request-failed",{requestName:P,serverCode:Y.code,serverMessage:Y.message,serverStatus:Y.status})}function I(P){let{apiKey:f}=P;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":f})}function X(P,f){let{refreshToken:Y}=f;const C=I(P);return C.append("Authorization",function(P){return`${D} ${P}`}(Y)),C}async function x(P){const f=await P();return f.status>=500&&f.status<600?P():f}function k(P){return new Promise((f=>{setTimeout(f,P)}))}const Z=/^[cdef][\w-]{21}$/;function A(){try{const P=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(P),P[0]=112+P[0]%16;const f=function(P){const f=(Y=P,btoa(String.fromCharCode(...Y)).replace(/\+/g,"-").replace(/\//g,"_"));var Y;return f.substr(0,22)}(P);return Z.test(f)?f:""}catch(P){return""}}function E(P){return`${P.appName}!${P.appId}`}const t=new Map;function G(P,f){const Y=E(P);z(Y,f),function(P,f){const Y=b();Y&&Y.postMessage({key:P,fid:f});H()}(Y,f)}function z(P,f){const Y=t.get(P);if(Y)for(const C of Y)C(f)}let B=null;function b(){return!B&&"BroadcastChannel"in self&&(B=new BroadcastChannel("[Firebase] FID Change"),B.onmessage=P=>{z(P.data.key,P.data.fid)}),B}function H(){0===t.size&&B&&(B.close(),B=null)}const W="firebase-installations-store";let p=null;function h(){return p||(p=function(P,f){let{blocked:Y,upgrade:C,blocking:q,terminated:m}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const L=indexedDB.open(P,f),o=K(L);return C&&L.addEventListener("upgradeneeded",(P=>{C(K(L.result),P.oldVersion,P.newVersion,K(L.transaction))})),Y&&L.addEventListener("blocked",(()=>Y())),o.then((P=>{m&&P.addEventListener("close",(()=>m())),q&&P.addEventListener("versionchange",(()=>q()))})).catch((()=>{})),o}("firebase-installations-database",1,{upgrade:(P,f)=>{if(0===f)P.createObjectStore(W)}})),p}async function F(P,f){const Y=E(P),C=(await h()).transaction(W,"readwrite"),q=C.objectStore(W),m=await q.get(Y);return await q.put(f,Y),await C.done,m&&m.fid===f.fid||G(P,f.fid),f}async function PP(P){const f=E(P),Y=(await h()).transaction(W,"readwrite");await Y.objectStore(W).delete(f),await Y.done}async function fP(P,f){const Y=E(P),C=(await h()).transaction(W,"readwrite"),q=C.objectStore(W),m=await q.get(Y),L=f(m);return void 0===L?await q.delete(Y):await q.put(L,Y),await C.done,!L||m&&m.fid===L.fid||G(P,L.fid),L}async function YP(P){let f;const Y=await fP(P.appConfig,(Y=>{const C=function(P){const f=P||{fid:A(),registrationStatus:0};return mP(f)}(Y),q=function(P,f){if(0===f.registrationStatus){if(!navigator.onLine){return{installationEntry:f,registrationPromise:Promise.reject(s.create("app-offline"))}}const Y={fid:f.fid,registrationStatus:1,registrationTime:Date.now()},C=async function(P,f){try{const Y=await async function(P,f){let{appConfig:Y,heartbeatServiceProvider:C}=P,{fid:q}=f;const m=Q(Y),L=I(Y),o=C.getImmediate({optional:!0});if(o){const P=await o.getHeartbeatsHeader();P&&L.append("x-firebase-client",P)}const w={fid:q,authVersion:D,appId:Y.appId,sdkVersion:U},d={method:"POST",headers:L,body:JSON.stringify(w)},R=await x((()=>fetch(m,d)));if(R.ok){const P=await R.json();return{fid:P.fid||q,registrationStatus:2,refreshToken:P.refreshToken,authToken:J(P.authToken)}}throw await N("Create Installation",R)}(P,f);return F(P.appConfig,Y)}catch(Y){throw a(Y)&&409===Y.customData.serverCode?await PP(P.appConfig):await F(P.appConfig,{fid:f.fid,registrationStatus:0}),Y}}(P,Y);return{installationEntry:Y,registrationPromise:C}}return 1===f.registrationStatus?{installationEntry:f,registrationPromise:CP(P)}:{installationEntry:f}}(P,C);return f=q.registrationPromise,q.installationEntry}));return""===Y.fid?{installationEntry:await f}:{installationEntry:Y,registrationPromise:f}}async function CP(P){let f=await qP(P.appConfig);for(;1===f.registrationStatus;)await k(100),f=await qP(P.appConfig);if(0===f.registrationStatus){const{installationEntry:f,registrationPromise:Y}=await YP(P);return Y||f}return f}function qP(P){return fP(P,(P=>{if(!P)throw s.create("installation-not-found");return mP(P)}))}function mP(P){return 1===(f=P).registrationStatus&&f.registrationTime+T<Date.now()?{fid:P.fid,registrationStatus:0}:P;var f}async function LP(P,f){let{appConfig:Y,heartbeatServiceProvider:C}=P;const q=function(P,f){let{fid:Y}=f;return`${Q(P)}/${Y}/authTokens:generate`}(Y,f),m=X(Y,f),L=C.getImmediate({optional:!0});if(L){const P=await L.getHeartbeatsHeader();P&&m.append("x-firebase-client",P)}const o={installation:{sdkVersion:U,appId:Y.appId}},w={method:"POST",headers:m,body:JSON.stringify(o)},d=await x((()=>fetch(q,w)));if(d.ok){return J(await d.json())}throw await N("Generate Auth Token",d)}async function oP(P){let f,Y=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const C=await fP(P.appConfig,(C=>{if(!dP(C))throw s.create("not-registered");const q=C.authToken;if(!Y&&function(P){return 2===P.requestStatus&&!function(P){const f=Date.now();return f<P.creationTime||P.creationTime+P.expiresIn<f+j}(P)}(q))return C;if(1===q.requestStatus)return f=async function(P,f){let Y=await wP(P.appConfig);for(;1===Y.authToken.requestStatus;)await k(100),Y=await wP(P.appConfig);const C=Y.authToken;return 0===C.requestStatus?oP(P,f):C}(P,Y),C;{if(!navigator.onLine)throw s.create("app-offline");const Y=function(P){const f={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},P),{authToken:f})}(C);return f=async function(P,f){try{const Y=await LP(P,f),C=Object.assign(Object.assign({},f),{authToken:Y});return await F(P.appConfig,C),Y}catch(Y){if(!a(Y)||401!==Y.customData.serverCode&&404!==Y.customData.serverCode){const Y=Object.assign(Object.assign({},f),{authToken:{requestStatus:0}});await F(P.appConfig,Y)}else await PP(P.appConfig);throw Y}}(P,Y),Y}}));return f?await f:C.authToken}function wP(P){return fP(P,(P=>{if(!dP(P))throw s.create("not-registered");const f=P.authToken;return 1===(Y=f).requestStatus&&Y.requestTime+T<Date.now()?Object.assign(Object.assign({},P),{authToken:{requestStatus:0}}):P;var Y}))}function dP(P){return void 0!==P&&2===P.registrationStatus}async function RP(P){let f=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const Y=P;await async function(P){const{registrationPromise:f}=await YP(P);f&&await f}(Y);return(await oP(Y,f)).token}function yP(P){return s.create("missing-app-config-values",{valueName:P})}const rP="installations",iP=P=>{const f=P.getProvider("app").getImmediate(),Y=function(P){if(!P||!P.options)throw yP("App Configuration");if(!P.name)throw yP("App Name");const f=["projectId","apiKey","appId"];for(const Y of f)if(!P.options[Y])throw yP(Y);return{appName:P.name,projectId:P.options.projectId,apiKey:P.options.apiKey,appId:P.options.appId}}(f);return{app:f,appConfig:Y,heartbeatServiceProvider:(0,C.w)(f,"heartbeat"),_delete:()=>Promise.resolve()}},uP=P=>{const f=P.getProvider("app").getImmediate(),Y=(0,C.w)(f,rP).getImmediate();return{getId:()=>async function(P){const f=P,{installationEntry:Y,registrationPromise:C}=await YP(f);return C?C.catch(console.error):oP(f).catch(console.error),Y.fid}(Y),getToken:P=>RP(Y,P)}};(0,C.x)(new L.f(rP,iP,"PUBLIC")),(0,C.x)(new L.f("installations-internal",uP,"PRIVATE")),(0,C.O)(v,c),(0,C.O)(v,c,"esm2017");const gP="analytics",SP="https://www.googletagmanager.com/gtag/js",KP=new q.f("@firebase/analytics"),MP={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},VP=new m.f("analytics","Analytics",MP);function OP(P){if(!P.startsWith(SP)){const f=VP.create("invalid-gtag-resource",{gtagURL:P});return KP.warn(f.message),""}return P}function nP(P){return Promise.all(P.map((P=>P.catch((P=>P)))))}function lP(P,f){const Y=function(P,f){let Y;return window.trustedTypes&&(Y=window.trustedTypes.createPolicy(P,f)),Y}("firebase-js-sdk-policy",{createScriptURL:OP}),C=document.createElement("script"),q=`${SP}?l=${P}&id=${f}`;C.src=Y?null===Y||void 0===Y?void 0:Y.createScriptURL(q):q,C.async=!0,document.head.appendChild(C)}function vP(P,f,Y,C){return async function(q){try{for(var m=arguments.length,L=new Array(m>1?m-1:0),o=1;o<m;o++)L[o-1]=arguments[o];if("event"===q){const[C,q]=L;await async function(P,f,Y,C,q){try{let m=[];if(q&&q.send_to){let P=q.send_to;Array.isArray(P)||(P=[P]);const C=await nP(Y);for(const Y of P){const P=C.find((P=>P.measurementId===Y)),q=P&&f[P.appId];if(!q){m=[];break}m.push(q)}}0===m.length&&(m=Object.values(f)),await Promise.all(m),P("event",C,q||{})}catch(m){KP.error(m)}}(P,f,Y,C,q)}else if("config"===q){const[q,m]=L;await async function(P,f,Y,C,q,m){const L=C[q];try{if(L)await f[L];else{const P=(await nP(Y)).find((P=>P.measurementId===q));P&&await f[P.appId]}}catch(o){KP.error(o)}P("config",q,m)}(P,f,Y,C,q,m)}else if("consent"===q){const[f]=L;P("consent","update",f)}else if("get"===q){const[f,Y,C]=L;P("get",f,Y,C)}else if("set"===q){const[f]=L;P("set",f)}else P(q,...L)}catch(w){KP.error(w)}}}const cP=new class{constructor(){let P=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},f=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=P,this.intervalMillis=f}getThrottleMetadata(P){return this.throttleMetadata[P]}setThrottleMetadata(P,f){this.throttleMetadata[P]=f}deleteThrottleMetadata(P){delete this.throttleMetadata[P]}};function TP(P){return new Headers({Accept:"application/json","x-goog-api-key":P})}async function UP(P){let f=arguments.length>1&&void 0!==arguments[1]?arguments[1]:cP,Y=arguments.length>2?arguments[2]:void 0;const{appId:C,apiKey:q,measurementId:m}=P.options;if(!C)throw VP.create("no-app-id");if(!q){if(m)return{measurementId:m,appId:C};throw VP.create("no-api-key")}const L=f.getThrottleMetadata(C)||{backoffCount:0,throttleEndTimeMillis:Date.now()},o=new jP;return setTimeout((async()=>{o.abort()}),void 0!==Y?Y:6e4),DP({appId:C,apiKey:q,measurementId:m},L,o,f)}async function DP(P,f,Y){let{throttleEndTimeMillis:C,backoffCount:q}=f,L=arguments.length>3&&void 0!==arguments[3]?arguments[3]:cP;var o;const{appId:w,measurementId:d}=P;try{await function(P,f){return new Promise(((Y,C)=>{const q=Math.max(f-Date.now(),0),m=setTimeout(Y,q);P.addEventListener((()=>{clearTimeout(m),C(VP.create("fetch-throttle",{throttleEndTimeMillis:f}))}))}))}(Y,C)}catch(R){if(d)return KP.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${d} provided in the "measurementId" field in the local Firebase config. [${null===R||void 0===R?void 0:R.message}]`),{appId:w,measurementId:d};throw R}try{const f=await async function(P){var f;const{appId:Y,apiKey:C}=P,q={method:"GET",headers:TP(C)},m="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",Y),L=await fetch(m,q);if(200!==L.status&&304!==L.status){let P="";try{const Y=await L.json();(null===(f=Y.error)||void 0===f?void 0:f.message)&&(P=Y.error.message)}catch(o){}throw VP.create("config-fetch-failed",{httpStatus:L.status,responseMessage:P})}return L.json()}(P);return L.deleteThrottleMetadata(w),f}catch(R){const f=R;if(!function(P){if(!(P instanceof m.i)||!P.customData)return!1;const f=Number(P.customData.httpStatus);return 429===f||500===f||503===f||504===f}(f)){if(L.deleteThrottleMetadata(w),d)return KP.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${d} provided in the "measurementId" field in the local Firebase config. [${null===f||void 0===f?void 0:f.message}]`),{appId:w,measurementId:d};throw R}const C=503===Number(null===(o=null===f||void 0===f?void 0:f.customData)||void 0===o?void 0:o.httpStatus)?(0,m.t)(q,L.intervalMillis,30):(0,m.t)(q,L.intervalMillis),y={throttleEndTimeMillis:Date.now()+C,backoffCount:q+1};return L.setThrottleMetadata(w,y),KP.debug(`Calling attemptFetch again in ${C} millis`),DP(P,y,Y,L)}}class jP{constructor(){this.listeners=[]}addEventListener(P){this.listeners.push(P)}abort(){this.listeners.forEach((P=>P()))}}let eP,sP;function aP(P){sP=P}function QP(P){eP=P}async function JP(P,f,Y,C,q,L,o){var w;const d=UP(P);d.then((f=>{Y[f.measurementId]=f.appId,P.options.measurementId&&f.measurementId!==P.options.measurementId&&KP.warn(`The measurement ID in the local Firebase config (${P.options.measurementId}) does not match the measurement ID fetched from the server (${f.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((P=>KP.error(P))),f.push(d);const R=async function(){if(!(0,m.Z)())return KP.warn(VP.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,m.jb)()}catch(P){return KP.warn(VP.create("indexeddb-unavailable",{errorInfo:null===P||void 0===P?void 0:P.toString()}).message),!1}return!0}().then((P=>P?C.getId():void 0)),[y,r]=await Promise.all([d,R]);(function(P){const f=window.document.getElementsByTagName("script");for(const Y of Object.values(f))if(Y.src&&Y.src.includes(SP)&&Y.src.includes(P))return Y;return null})(L)||lP(L,y.measurementId),sP&&(q("consent","default",sP),aP(void 0)),q("js",new Date);const i=null!==(w=null===o||void 0===o?void 0:o.config)&&void 0!==w?w:{};return i.origin="firebase",i.update=!0,null!=r&&(i.firebase_id=r),q("config",y.measurementId,i),eP&&(q("set",eP),QP(void 0)),y.measurementId}class NP{constructor(P){this.app=P}_delete(){return delete IP[this.app.options.appId],Promise.resolve()}}let IP={},XP=[];const xP={};let kP,ZP,AP="dataLayer",EP="gtag",tP=!1;function GP(P){if(tP)throw VP.create("already-initialized");P.dataLayerName&&(AP=P.dataLayerName),P.gtagName&&(EP=P.gtagName)}function zP(P,f,Y){!function(){const P=[];if((0,m.T)()&&P.push("This is a browser extension environment."),(0,m.k)()||P.push("Cookies are not available."),P.length>0){const f=P.map(((P,f)=>`(${f+1}) ${P}`)).join(" "),Y=VP.create("invalid-analytics-context",{errorInfo:f});KP.warn(Y.message)}}();const C=P.options.appId;if(!C)throw VP.create("no-app-id");if(!P.options.apiKey){if(!P.options.measurementId)throw VP.create("no-api-key");KP.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${P.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=IP[C])throw VP.create("already-exists",{id:C});if(!tP){!function(P){let f=[];Array.isArray(window[P])?f=window[P]:window[P]=f}(AP);const{wrappedGtag:P,gtagCore:f}=function(P,f,Y,C,q){let m=function(){for(var P=arguments.length,f=new Array(P),Y=0;Y<P;Y++)f[Y]=arguments[Y];window[C].push(arguments)};return window[q]&&"function"===typeof window[q]&&(m=window[q]),window[q]=vP(m,P,f,Y),{gtagCore:m,wrappedGtag:window[q]}}(IP,XP,xP,AP,EP);ZP=P,kP=f,tP=!0}IP[C]=JP(P,XP,xP,f,kP,AP,Y);return new NP(P)}function BP(){let P=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,C.F)();P=(0,m.M)(P);const f=(0,C.w)(P,gP);return f.isInitialized()?f.getImmediate():bP(P)}function bP(P){let f=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const Y=(0,C.w)(P,gP);if(Y.isInitialized()){const P=Y.getImmediate();if((0,m.z)(f,Y.getOptions()))return P;throw VP.create("already-initialized")}return Y.initialize({options:f})}async function HP(){if((0,m.T)())return!1;if(!(0,m.k)())return!1;if(!(0,m.Z)())return!1;try{return await(0,m.jb)()}catch(P){return!1}}function WP(P,f,Y){P=(0,m.M)(P),async function(P,f,Y,C){if(C&&C.global)return P("set",{screen_name:Y}),Promise.resolve();P("config",await f,{update:!0,screen_name:Y})}(ZP,IP[P.app.options.appId],f,Y).catch((P=>KP.error(P)))}async function pP(P){return P=(0,m.M)(P),async function(P,f){const Y=await f;return new Promise(((f,C)=>{P("get",Y,"client_id",(P=>{P||C(VP.create("no-client-id")),f(P)}))}))}(ZP,IP[P.app.options.appId])}function hP(P,f,Y){P=(0,m.M)(P),async function(P,f,Y,C){if(C&&C.global)return P("set",{user_id:Y}),Promise.resolve();P("config",await f,{update:!0,user_id:Y})}(ZP,IP[P.app.options.appId],f,Y).catch((P=>KP.error(P)))}function FP(P,f,Y){P=(0,m.M)(P),async function(P,f,Y,C){if(C&&C.global){const f={};for(const P of Object.keys(Y))f[`user_properties.${P}`]=Y[P];return P("set",f),Promise.resolve()}P("config",await f,{update:!0,user_properties:Y})}(ZP,IP[P.app.options.appId],f,Y).catch((P=>KP.error(P)))}function Pf(P,f){P=(0,m.M)(P),async function(P,f){const Y=await P;window[`ga-disable-${Y}`]=!f}(IP[P.app.options.appId],f).catch((P=>KP.error(P)))}function ff(P){ZP?ZP("set",P):QP(P)}function Yf(P,f,Y,C){P=(0,m.M)(P),async function(P,f,Y,C,q){if(q&&q.global)P("event",Y,C);else{const q=await f;P("event",Y,Object.assign(Object.assign({},C),{send_to:q}))}}(ZP,IP[P.app.options.appId],f,Y,C).catch((P=>KP.error(P)))}function Cf(P){ZP?ZP("consent","update",P):aP(P)}const qf="@firebase/analytics",mf="0.10.0";(0,C.x)(new L.f(gP,((P,f)=>{let{options:Y}=f;return zP(P.getProvider("app").getImmediate(),P.getProvider("installations-internal").getImmediate(),Y)}),"PUBLIC")),(0,C.x)(new L.f("analytics-internal",(function(P){try{const f=P.getProvider(gP).getImmediate();return{logEvent:(P,Y,C)=>Yf(f,P,Y,C)}}catch(f){throw VP.create("interop-component-reg-failed",{reason:f})}}),"PRIVATE")),(0,C.O)(qf,mf),(0,C.O)(qf,mf,"esm2017")}}]);