"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6],{2127:(L,j,P)=>{var A=P(589),R=P(490),o=P(528),Y=P(615),u=P(554),a=P(602);u.d.prototype._partialLoadFile=function(L,j,P,A){let R=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(L,(L=>{P[j]=L,P._internalCount++,6===P._internalCount&&A(P)}),void 0,void 0,!0,((L,j)=>{R&&L&&R(L.status+" "+L.statusText,j)}))},u.d.prototype._cascadeLoadFiles=function(L,j,P){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const R=[];R._internalCount=0;for(let o=0;o<6;o++)this._partialLoadFile(P[o],o,R,j,A)},u.d.prototype._cascadeLoadImgs=function(L,j,P,A){let R=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,o=arguments.length>5?arguments[5]:void 0;const Y=[];Y._internalCount=0;for(let u=0;u<6;u++)this._partialLoadImg(A[u],u,Y,L,j,P,R,o)},u.d.prototype._partialLoadImg=function(L,j,P,A,R,u){let a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,D=arguments.length>7?arguments[7]:void 0;const S=(0,Y.d)();(0,o.u)(L,(L=>{P[j]=L,P._internalCount++,A&&A.removePendingData(S),6===P._internalCount&&u&&u(R,P)}),((L,j)=>{A&&A.removePendingData(S),a&&a(L,j)}),A?A.offlineProvider:null,D),A&&A.addPendingData(S)},u.d.prototype.createCubeTextureBase=function(L,j,P,o){let Y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,D=arguments.length>6?arguments[6]:void 0,S=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,g=arguments.length>8&&void 0!==arguments[8]&&arguments[8],V=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,N=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,C=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,b=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,f=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,h=arguments.length>14&&void 0!==arguments[14]&&arguments[14],K=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const v=C||new A.c(this,7);v.isCube=!0,v.url=L,v.generateMipMaps=!o,v._lodGenerationScale=V,v._lodGenerationOffset=N,v._useSRGBBuffer=!!h&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!o),v!==C&&(v.label=L.substring(0,60)),this._doNotHandleContextLost||(v._extension=S,v._files=P,v._buffer=K);const q=L;this._transformTextureUrl&&!C&&(L=this._transformTextureUrl(L));const y=S??function(L){const j=L.split("?")[0],P=j.lastIndexOf(".");return P>-1?j.substring(P).toLowerCase():""}(L),T=(0,a.c)(y),G=(L,j)=>{v.dispose(),u?u(L,j):L&&R.e.Warn(L)},M=(A,u)=>{L===q?A&&G(A.status+" "+A.statusText,u):(R.e.Warn(`Failed to load ${L}, falling back to the ${q}`),this.createCubeTextureBase(q,j,P,!!o,Y,G,D,S,g,V,N,v,b,f,h,K))};if(T)T.then((A=>{const R=L=>{b&&b(v,L),A.loadCubeData(L,v,g,Y,((L,j)=>{G(L,j)}))};K?R(K):P&&6===P.length?A.supportCascades?this._cascadeLoadFiles(j,(L=>R(L.map((L=>new Uint8Array(L))))),P,G):G("Textures type does not support cascades."):this._loadFile(L,(L=>R(new Uint8Array(L))),void 0,void 0,!0,M)}));else{if(!P||0===P.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(j,v,((L,j)=>{f&&f(L,j)}),P,G)}return this._internalTexturesCache.push(v),v}},2017:(L,j,P)=>{P.d(j,{DDSTools:()=>C});var A=P(670),R=P(490),o=P(2020),Y=P(2026);P(2127);const u=131072,a=131072;function D(L){return L.charCodeAt(0)+(L.charCodeAt(1)<<8)+(L.charCodeAt(2)<<16)+(L.charCodeAt(3)<<24)}const S=D("DXT1"),g=D("DXT3"),V=D("DXT5"),N=D("DX10");class C{static GetDDSInfo(L){const j=new Int32Array(L.buffer,L.byteOffset,31),P=new Int32Array(L.buffer,L.byteOffset,35);let A=1;j[2]&u&&(A=Math.max(1,j[7]));const R=j[21],o=R===N?P[32]:0;let Y=0;switch(R){case 113:Y=2;break;case 116:Y=1;break;case N:if(10===o){Y=2;break}if(2===o){Y=1;break}}return{width:j[4],height:j[3],mipmapCount:A,isFourCC:4===(4&j[20]),isRGB:64===(64&j[20]),isLuminance:(j[20]&a)===a,isCube:512===(512&j[28]),isCompressed:R===S||R===g||R===V,dxgiFormat:o,textureType:Y}}static _GetHalfFloatAsFloatRGBAArrayBuffer(L,j,P,A,R,o){const u=new Float32Array(A),a=new Uint16Array(R,P);let D=0;for(let S=0;S<j;S++)for(let j=0;j<L;j++){const P=4*(j+S*L);u[D]=(0,Y.g)(a[P]),u[D+1]=(0,Y.g)(a[P+1]),u[D+2]=(0,Y.g)(a[P+2]),C.StoreLODInAlphaChannel?u[D+3]=o:u[D+3]=(0,Y.g)(a[P+3]),D+=4}return u}static _GetHalfFloatRGBAArrayBuffer(L,j,P,A,R,o){if(C.StoreLODInAlphaChannel){const u=new Uint16Array(A),a=new Uint16Array(R,P);let D=0;for(let P=0;P<j;P++)for(let j=0;j<L;j++){const A=4*(j+P*L);u[D]=a[A],u[D+1]=a[A+1],u[D+2]=a[A+2],u[D+3]=(0,Y.n)(o),D+=4}return u}return new Uint16Array(R,P,A)}static _GetFloatRGBAArrayBuffer(L,j,P,A,R,o){if(C.StoreLODInAlphaChannel){const Y=new Float32Array(A),u=new Float32Array(R,P);let a=0;for(let P=0;P<j;P++)for(let j=0;j<L;j++){const A=4*(j+P*L);Y[a]=u[A],Y[a+1]=u[A+1],Y[a+2]=u[A+2],Y[a+3]=o,a+=4}return Y}return new Float32Array(R,P,A)}static _GetFloatAsHalfFloatRGBAArrayBuffer(L,j,P,A,R,o){const u=new Uint16Array(A),a=new Float32Array(R,P);let D=0;for(let S=0;S<j;S++)for(let j=0;j<L;j++)u[D]=(0,Y.n)(a[D]),u[D+1]=(0,Y.n)(a[D+1]),u[D+2]=(0,Y.n)(a[D+2]),C.StoreLODInAlphaChannel?u[D+3]=(0,Y.n)(o):u[D+3]=(0,Y.n)(a[D+3]),D+=4;return u}static _GetFloatAsUIntRGBAArrayBuffer(L,j,P,R,o,Y){const u=new Uint8Array(R),a=new Float32Array(o,P);let D=0;for(let S=0;S<j;S++)for(let j=0;j<L;j++){const P=4*(j+S*L);u[D]=255*(0,A.Clamp)(a[P]),u[D+1]=255*(0,A.Clamp)(a[P+1]),u[D+2]=255*(0,A.Clamp)(a[P+2]),C.StoreLODInAlphaChannel?u[D+3]=Y:u[D+3]=255*(0,A.Clamp)(a[P+3]),D+=4}return u}static _GetHalfFloatAsUIntRGBAArrayBuffer(L,j,P,R,o,u){const a=new Uint8Array(R),D=new Uint16Array(o,P);let S=0;for(let g=0;g<j;g++)for(let j=0;j<L;j++){const P=4*(j+g*L);a[S]=255*(0,A.Clamp)((0,Y.g)(D[P])),a[S+1]=255*(0,A.Clamp)((0,Y.g)(D[P+1])),a[S+2]=255*(0,A.Clamp)((0,Y.g)(D[P+2])),C.StoreLODInAlphaChannel?a[S+3]=u:a[S+3]=255*(0,A.Clamp)((0,Y.g)(D[P+3])),S+=4}return a}static _GetRGBAArrayBuffer(L,j,P,A,R,o,Y,u,a){const D=new Uint8Array(A),S=new Uint8Array(R,P);let g=0;for(let V=0;V<j;V++)for(let j=0;j<L;j++){const P=4*(j+V*L);D[g]=S[P+o],D[g+1]=S[P+Y],D[g+2]=S[P+u],D[g+3]=S[P+a],g+=4}return D}static _ExtractLongWordOrder(L){return 0===L||255===L||-16777216===L?0:1+C._ExtractLongWordOrder(L>>8)}static _GetRGBArrayBuffer(L,j,P,A,R,o,Y,u){const a=new Uint8Array(A),D=new Uint8Array(R,P);let S=0;for(let g=0;g<j;g++)for(let j=0;j<L;j++){const P=3*(j+g*L);a[S]=D[P+o],a[S+1]=D[P+Y],a[S+2]=D[P+u],S+=3}return a}static _GetLuminanceArrayBuffer(L,j,P,A,R){const o=new Uint8Array(A),Y=new Uint8Array(R,P);let u=0;for(let a=0;a<j;a++)for(let j=0;j<L;j++){const P=j+a*L;o[u]=Y[P],u++}return o}static UploadDDSLevels(L,j,P,A,Y,a){let D=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,b=arguments.length>7?arguments[7]:void 0,f=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],h=null;A.sphericalPolynomial&&(h=[]);const K=!!L.getCaps().s3tc;j.generateMipMaps=Y;const v=new Int32Array(P.buffer,P.byteOffset,31);let q,y,T,G,M,Q,l,w=0,d=0,c=1;if(542327876!==v[0])return void R.e.Error("Invalid magic number in DDS header");if(!A.isFourCC&&!A.isRGB&&!A.isLuminance)return void R.e.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(A.isCompressed&&!K)return void R.e.Error("Compressed textures are not supported on this platform.");let E=v[22];G=v[1]+4;let U=!1;if(A.isFourCC)switch(q=v[21],q){case S:c=8,d=33777;break;case g:c=16,d=33778;break;case V:c=16,d=33779;break;case 113:U=!0,E=64;break;case 116:U=!0,E=128;break;case N:{G+=20;let L=!1;switch(A.dxgiFormat){case 10:U=!0,E=64,L=!0;break;case 2:U=!0,E=128,L=!0;break;case 88:A.isRGB=!0,A.isFourCC=!1,E=32,L=!0}if(L)break}default:return void R.e.Error(["Unsupported FourCC code:",(t=q,String.fromCharCode(255&t,t>>8&255,t>>16&255,t>>24&255))])}var t;const B=C._ExtractLongWordOrder(v[23]),F=C._ExtractLongWordOrder(v[24]),X=C._ExtractLongWordOrder(v[25]),H=C._ExtractLongWordOrder(v[26]);U&&(d=L._getRGBABufferInternalSizedFormat(A.textureType)),Q=1,v[2]&u&&!1!==Y&&(Q=Math.max(1,v[7]));const W=b||0,e=L.getCaps();for(let R=W;R<a;R++){for(y=v[4],T=v[3],l=0;l<Q;++l){if(-1===D||D===l){const o=-1===D?l:0;if(!A.isCompressed&&A.isFourCC){j.format=5,w=y*T*4;let A=null;if(L._badOS||L._badDesktopOS||!e.textureHalfFloat&&!e.textureFloat)128===E?(A=C._GetFloatAsUIntRGBAArrayBuffer(y,T,P.byteOffset+G,w,P.buffer,o),h&&0==o&&h.push(C._GetFloatRGBAArrayBuffer(y,T,P.byteOffset+G,w,P.buffer,o))):64===E&&(A=C._GetHalfFloatAsUIntRGBAArrayBuffer(y,T,P.byteOffset+G,w,P.buffer,o),h&&0==o&&h.push(C._GetHalfFloatAsFloatRGBAArrayBuffer(y,T,P.byteOffset+G,w,P.buffer,o))),j.type=0;else{const L=e.textureFloat&&(f&&e.textureFloatLinearFiltering||!f),R=e.textureHalfFloat&&(f&&e.textureHalfFloatLinearFiltering||!f),Y=(128===E||64===E&&!R)&&L?1:(64===E||128===E&&!L)&&R?2:0;let u,a=null;if(128===E)switch(Y){case 1:u=C._GetFloatRGBAArrayBuffer,a=null;break;case 2:u=C._GetFloatAsHalfFloatRGBAArrayBuffer,a=C._GetFloatRGBAArrayBuffer;break;case 0:u=C._GetFloatAsUIntRGBAArrayBuffer,a=C._GetFloatRGBAArrayBuffer}else switch(Y){case 1:u=C._GetHalfFloatAsFloatRGBAArrayBuffer,a=null;break;case 2:u=C._GetHalfFloatRGBAArrayBuffer,a=C._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:u=C._GetHalfFloatAsUIntRGBAArrayBuffer,a=C._GetHalfFloatAsFloatRGBAArrayBuffer}j.type=Y,A=u(y,T,P.byteOffset+G,w,P.buffer,o),h&&0==o&&h.push(a?a(y,T,P.byteOffset+G,w,P.buffer,o):A)}A&&L._uploadDataToTextureDirectly(j,A,R,o)}else if(A.isRGB)j.type=0,24===E?(j.format=4,w=y*T*3,M=C._GetRGBArrayBuffer(y,T,P.byteOffset+G,w,P.buffer,B,F,X),L._uploadDataToTextureDirectly(j,M,R,o)):(j.format=5,w=y*T*4,M=C._GetRGBAArrayBuffer(y,T,P.byteOffset+G,w,P.buffer,B,F,X,H),L._uploadDataToTextureDirectly(j,M,R,o));else if(A.isLuminance){const A=L._getUnpackAlignement(),Y=y;w=Math.floor((y+A-1)/A)*A*(T-1)+Y,M=C._GetLuminanceArrayBuffer(y,T,P.byteOffset+G,w,P.buffer),j.format=1,j.type=0,L._uploadDataToTextureDirectly(j,M,R,o)}else w=Math.max(4,y)/4*Math.max(4,T)/4*c,M=new Uint8Array(P.buffer,P.byteOffset+G,w),j.type=0,L._uploadCompressedDataToTextureDirectly(j,d,y,T,M,R,o)}G+=E?y*T*(E/8):w,y*=.5,T*=.5,y=Math.max(1,y),T=Math.max(1,T)}if(void 0!==b)break}h&&h.length>0?A.sphericalPolynomial=o.d.ConvertCubeMapToSphericalPolynomial({size:v[4],right:h[0],left:h[1],up:h[2],down:h[3],front:h[4],back:h[5],format:5,type:1,gammaSpace:!1}):A.sphericalPolynomial=void 0}}C.StoreLODInAlphaChannel=!1}}]);