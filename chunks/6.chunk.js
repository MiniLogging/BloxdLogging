"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6,7],{11074:(f,H,Q)=>{var a=Q(1541),d=Q(1029);d.c.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(d.c.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=a.d.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((f=>{this._texture._sphericalPolynomial=f,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(f){this._texture&&(this._texture._sphericalPolynomial=f)},enumerable:!0,configurable:!0})},11081:(f,H,Q)=>{Q.r(H),Q.d(H,{Dispose:()=>k,DumpData:()=>Y,DumpDataAsync:()=>u,DumpFramebuffer:()=>J,DumpTools:()=>X});var a=Q(1567),d=Q(1220),s=Q(1026),n=Q(1023);let e,c=null;async function J(f,H,Q,a){let d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",s=arguments.length>5?arguments[5]:void 0,n=arguments.length>6?arguments[6]:void 0;const e=await Q.readPixels(0,0,f,H);Y(f,H,new Uint8Array(e.buffer),a,d,s,!0,void 0,n)}function u(f,H,Q){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",d=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],n=arguments.length>6&&void 0!==arguments[6]&&arguments[6],e=arguments.length>7?arguments[7]:void 0;return new Promise((c=>{Y(f,H,Q,(f=>c(f)),a,d,s,n,e)}))}function Y(f,H,J,u){let Y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",X=arguments.length>5?arguments[5]:void 0,F=arguments.length>6&&void 0!==arguments[6]&&arguments[6],r=arguments.length>7&&void 0!==arguments[7]&&arguments[7],v=arguments.length>8?arguments[8]:void 0;(async function(){return c||(c=new Promise(((f,H)=>{let d,s=null;const c={hf:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(Q.bind(Q,1455)).then((J=>{let{ThinEngine:u}=J;try{d=new OffscreenCanvas(100,100),s=new u(d,!1,c)}catch(X){d=document.createElement("canvas"),s=new u(d,!1,c)}n.d.Instances.pop(),n.d.OnEnginesDisposedObservable.add((f=>{s&&f!==s&&!s.u&&0===n.d.Instances.length&&k()})),s.getCaps().parallelShaderCompile=void 0;const Y=new a.b(s);Q.e(32).then(Q.bind(Q,11779)).then((Q=>{let{passPixelShader:n}=Q;if(!s)return void H("Engine is not defined");const c=new a.e({Hb:s,name:n.name,fragmentShader:n.shader,samplerNames:["textureSampler"]});e={canvas:d,Hb:s,renderer:Y,wrapper:c},f(e)}))})).catch(H)}))),await c})().then((Q=>{if(Q.Hb.setSize(f,H,!0),J instanceof Float32Array){const f=new Uint8Array(J.length);let H=J.length;for(;H--;){const Q=J[H];f[H]=Math.round(255*(0,s.b)(Q))}J=f}const a=Q.Hb.createRawTexture(J,f,H,5,!1,!F,1);Q.renderer.setViewport(),Q.renderer.applyEffectWrapper(Q.wrapper),Q.wrapper.effect._bindTexture("textureSampler",a),Q.renderer.draw(),r?d.e.ToBlob(Q.canvas,(f=>{const H=new FileReader;H.onload=f=>{const H=f.target.result;u&&u(H)},H.readAsArrayBuffer(f)}),Y,v):d.e.EncodeScreenshotCanvasData(Q.canvas,u,Y,X,v),a.dispose()}))}function k(){var f;e?(e.wrapper.dispose(),e.renderer.dispose(),e.Hb.dispose()):null===(f=c)||void 0===f||f.then((f=>{f.wrapper.dispose(),f.renderer.dispose(),f.Hb.dispose()}));c=null,e=null}const X={DumpData:Y,DumpDataAsync:u,DumpFramebuffer:J,Dispose:k};d.e.DumpData=Y,d.e.DumpDataAsync=u,d.e.DumpFramebuffer=J},11062:(f,H,Q)=>{Q.d(H,{c:()=>F,d:()=>S,g:()=>z,i:()=>I});var a=Q(1220),d=Q(1e3),s=Q(1026),n=Q(1505),e=Q(1142),c=Q(1029),J=(Q(1218),Q(1558)),u=Q(1093);Q(11069),Q(11074),Q(11081);const Y="image/png",k=2,X=[134,22,135,150,246,214,150,54];function F(f){const H=new DataView(f.buffer,f.byteOffset,f.byteLength);let Q=0;for(let n=0;n<X.length;n++)if(H.getUint8(Q++)!==X[n])return u.c.Error("Not a babylon environment map"),null;let a="",d=0;for(;d=H.getUint8(Q++);)a+=String.fromCharCode(d);let s=JSON.parse(a);return s=r(s),s.Pe&&(s.Pe.specularDataPosition=Q,s.Pe.lodGenerationScale=s.Pe.lodGenerationScale||.8),s}function r(f){if(f.version>k)throw new Error(`Unsupported babylon environment map version "${f.version}". Latest supported version is "${k}".`);return 2===f.version?f:f={...f,version:2,imageType:Y}}function v(f,H){const Q=(H=r(H)).Pe;let a=Math.log2(H.width);if(a=Math.round(a)+1,Q.mipmaps.length!==6*a)throw new Error(`Unsupported specular mipmaps number "${Q.mipmaps.length}"`);const d=new Array(a);for(let s=0;s<a;s++){d[s]=new Array(6);for(let H=0;H<6;H++){const a=Q.mipmaps[6*s+H];d[s][H]=new Uint8Array(f.buffer,f.byteOffset+Q.specularDataPosition+a.position,a.length)}}return d}function S(f,H,Q){const a=(Q=r(Q)).Pe;if(!a)return Promise.resolve();f._lodGenerationScale=a.lodGenerationScale;return q(f,v(H,Q),Q.imageType)}function M(f,H,Q,a,d,s,n,e,c,J,u){return new Promise(((Y,k)=>{if(Q){const Q=H.createTexture(null,!0,!0,null,1,null,(f=>{k(f)}),f);null===a||void 0===a||a.onEffectCreatedObservable.addOnce((e=>{e.executeWhenCompiled((()=>{a.externalTextureSamplerBinding=!0,a.onApply=a=>{a._bindTexture("textureSampler",Q),a.setFloat2("scale",1,H._features.needsInvertingBitmap&&f instanceof ImageBitmap?-1:1)},H.scenes.length&&(H.scenes[0].postProcessManager.directRender([a],J,!0,s,n),H.restoreDefaultFramebuffer(),Q.dispose(),URL.revokeObjectURL(d),Y())}))}))}else{if(H._uploadImageToTexture(u,f,s,n),e){const Q=c[n];Q&&H._uploadImageToTexture(Q._texture,f,s,0)}Y()}}))}async function q(f,H){let d=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Y;if(!a.e.IsExponentOfTwo(f.width))throw new Error("Texture size must be a power of two");const n=(0,s.g)(f.width)+1,u=f.getEngine();let k=!1,X=!1,F=null,r=null,v=null;const S=u.getCaps();f.format=5,f.type=0,f.generateMipMaps=!0,f._cachedAnisotropicFilteringLevel=null,u.updateTextureSamplingMode(3,f),S.textureLOD?u._features.supportRenderAndCopyToLodForFloatTextures?S.textureHalfFloatRender&&S.textureHalfFloatLinearFiltering?(k=!0,f.type=2):S.textureFloatRender&&S.textureFloatLinearFiltering&&(k=!0,f.type=1):k=!1:(k=!1,X=!0,v={});let q=0;if(k)u.isWebGPU?(q=1,await Q.e(17).then(Q.bind(Q,13356))):await Q.e(24).then(Q.bind(Q,13360)),F=new J.d("rgbdDecode","rgbdDecode",null,null,1,null,3,u,!1,void 0,f.type,void 0,null,!1,void 0,q),f._isRGBD=!1,f.invertY=!1,r=u.createRenderTargetCubeTexture(f.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:f.type,format:5});else if(f._isRGBD=!0,f.invertY=!0,X){const H=3,Q=f._lodGenerationScale,a=f._lodGenerationOffset;for(let d=0;d<H;d++){const s=(n-1)*Q+a,J=a+(s-a)*(1-d/(H-1)),Y=Math.round(Math.min(Math.max(J,0),s)),k=new e.b(u,2);k.isCube=!0,k.invertY=!0,k.generateMipMaps=!1,u.updateTextureSamplingMode(2,k);const X=new c.c(null);switch(X._isCube=!0,X._texture=k,v[Y]=X,d){case 0:f._lodTextureLow=X;break;case 1:f._lodTextureMid=X;break;case 2:f._lodTextureHigh=X}}}const z=[];for(let Q=0;Q<H.length;Q++)for(let a=0;a<6;a++){const s=H[Q][a],n=new Blob([s],{type:d}),e=URL.createObjectURL(n);let c;if(u._features.forceBitmapOverHTMLImageElement)c=u.createImageBitmap(n,{premultiplyAlpha:"none"}).then((H=>M(H,u,k,F,e,a,Q,X,v,r,f)));else{const H=new Image;H.src=e,c=new Promise(((d,s)=>{H.onload=()=>{M(H,u,k,F,e,a,Q,X,v,r,f).then((()=>d())).catch((f=>{s(f)}))},H.onerror=f=>{s(f)}}))}z.push(c)}if(H.length<n){let Q;const a=Math.pow(2,n-1-H.length),d=a*a*4;switch(f.type){case 0:Q=new Uint8Array(d);break;case 2:Q=new Uint16Array(d);break;case 1:Q=new Float32Array(d)}for(let s=H.length;s<n;s++)for(let H=0;H<6;H++)u._uploadArrayBufferViewToTexture(f,Q,H,s)}return Promise.all(z).then((()=>{r&&(u._releaseTexture(f),r._swapAndDie(f)),F&&F.dispose(),X&&(f._lodTextureHigh&&f._lodTextureHigh._texture&&(f._lodTextureHigh._texture.isReady=!0),f._lodTextureMid&&f._lodTextureMid._texture&&(f._lodTextureMid._texture.isReady=!0),f._lodTextureLow&&f._lodTextureLow._texture&&(f._lodTextureLow._texture.isReady=!0))}))}function z(f,H){const Q=(H=r(H)).irradiance;if(!Q)return;const a=new n.f;d.r.FromArrayToRef(Q.x,0,a.x),d.r.FromArrayToRef(Q.y,0,a.y),d.r.FromArrayToRef(Q.z,0,a.z),d.r.FromArrayToRef(Q.xx,0,a.xx),d.r.FromArrayToRef(Q.yy,0,a.yy),d.r.FromArrayToRef(Q.zz,0,a.zz),d.r.FromArrayToRef(Q.yz,0,a.yz),d.r.FromArrayToRef(Q.zx,0,a.zx),d.r.FromArrayToRef(Q.xy,0,a.xy),f._sphericalPolynomial=a}function I(f,H,Q,a,d){const s=q(f.getEngine().createRawCubeTexture(null,f.width,f.format,f.type,f.generateMipMaps,f.invertY,f.samplingMode,f._compression),H).then((()=>f));return f.onRebuildCallback=f=>({proxy:s,isReady:!0,isAsync:!0}),f._source=13,f._bufferViewArrayArray=H,f._lodGenerationScale=a,f._lodGenerationOffset=d,f._sphericalPolynomial=Q,q(f,H).then((()=>(f.isReady=!0,f)))}},11069:(f,H,Q)=>{Q.d(H,{b:()=>s});var a=Q(1558),d=Q(1544);class s{static ExpandRGBDTexture(f){const H=f._texture;if(!H||!f.isRGBD)return;const d=H.getEngine(),s=d.getCaps(),n=H.isReady;let e=!1;s.textureHalfFloatRender&&s.textureHalfFloatLinearFiltering?(e=!0,H.type=2):s.textureFloatRender&&s.textureFloatLinearFiltering&&(e=!0,H.type=1),e&&(H.isReady=!1,H._isRGBD=!1,H.invertY=!1);const c=async()=>{const s=d.isWebGPU,n=s?1:0;H.isReady=!1,s?await Promise.all([Q.e(17).then(Q.bind(Q,13356)),Q.e(18).then(Q.bind(Q,13368))]):await Promise.all([Q.e(24).then(Q.bind(Q,13360)),Q.e(25).then(Q.bind(Q,13373))]);const e=new a.d("rgbdDecode","rgbdDecode",null,null,1,null,3,d,!1,void 0,H.type,void 0,null,!1,void 0,n);e.externalTextureSamplerBinding=!0;const c=d.createRenderTargetTexture(H.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:H.samplingMode,type:H.type,format:5});e.onEffectCreatedObservable.addOnce((Q=>{Q.executeWhenCompiled((()=>{e.onApply=f=>{f._bindTexture("textureSampler",H),f.setFloat2("scale",1,1)},f.va().postProcessManager.directRender([e],c,!0),d.restoreDefaultFramebuffer(),d._releaseTexture(H),e&&e.dispose(),c._swapAndDie(H),H.isReady=!0}))}))};e&&(n?c():f.onLoadObservable.addOnce(c))}static EncodeTextureToRGBD(f,H){let Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.b)("rgbdEncode",f,H,Q,1,5)}}}}]);