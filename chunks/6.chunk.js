/*! For license information please see apti8u.6.09d8422a.chunk.js.LICENSE.txt */
"use strict";(self.hbnkweqmycf=self.hbnkweqmycf||[]).push([[6],{11457:(F,P,f)=>{f.r(P),f.d(P,{getAnalytics:()=>mF,getGoogleAnalyticsClientId:()=>GF,initializeAnalytics:()=>aF,isSupported:()=>wF,logEvent:()=>fP,setAnalyticsCollectionEnabled:()=>FP,setConsent:()=>cP,setCurrentScreen:()=>gF,setDefaultEventParameters:()=>PP,setUserId:()=>hF,setUserProperties:()=>SF,settings:()=>sF});var c=f(11435),N=f(11453),q=f(11448),H=f(11443);let A,o;const j=new WeakMap,i=new WeakMap,u=new WeakMap,T=new WeakMap,Y=new WeakMap;let t={get(F,P,f){if(F instanceof IDBTransaction){if("done"===P)return i.get(F);if("objectStoreNames"===P)return F.objectStoreNames||u.get(F);if("store"===P)return f.objectStoreNames[1]?void 0:f.objectStore(f.objectStoreNames[0])}return J(F[P])},set:(F,P,f)=>(F[P]=f,!0),has:(F,P)=>F instanceof IDBTransaction&&("done"===P||"store"===P)||P in F};function C(F){return F!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(o||(o=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(F)?function(){for(var P=arguments.length,f=new Array(P),c=0;c<P;c++)f[c]=arguments[c];return F.apply(B(this),f),J(j.get(this))}:function(){for(var P=arguments.length,f=new Array(P),c=0;c<P;c++)f[c]=arguments[c];return J(F.apply(B(this),f))}:function(P){for(var f=arguments.length,c=new Array(f>1?f-1:0),N=1;N<f;N++)c[N-1]=arguments[N];const q=F.call(B(this),P,...c);return u.set(q,P.sort?P.sort():[P]),J(q)}}function L(F){return"function"===typeof F?C(F):(F instanceof IDBTransaction&&function(F){if(i.has(F))return;const P=new Promise(((P,f)=>{const c=()=>{F.removeEventListener("complete",N),F.removeEventListener("error",q),F.removeEventListener("abort",q)},N=()=>{P(),c()},q=()=>{f(F.error||new DOMException("AbortError","AbortError")),c()};F.addEventListener("complete",N),F.addEventListener("error",q),F.addEventListener("abort",q)}));i.set(F,P)}(F),P=F,(A||(A=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((F=>P instanceof F))?new Proxy(F,t):F);var P}function J(F){if(F instanceof IDBRequest)return function(F){const P=new Promise(((P,f)=>{const c=()=>{F.removeEventListener("success",N),F.removeEventListener("error",q)},N=()=>{P(J(F.result)),c()},q=()=>{f(F.error),c()};F.addEventListener("success",N),F.addEventListener("error",q)}));return P.then((P=>{P instanceof IDBCursor&&j.set(P,F)})).catch((()=>{})),Y.set(P,F),P}(F);if(T.has(F))return T.get(F);const P=L(F);return P!==F&&(T.set(F,P),Y.set(P,F)),P}const B=F=>Y.get(F);const z=["get","getKey","getAll","getAllKeys","count"],Z=["put","add","delete","clear"],R=new Map;function y(F,P){if(!(F instanceof IDBDatabase)||P in F||"string"!==typeof P)return;if(R.get(P))return R.get(P);const f=P.replace(/FromIndex$/,""),c=P!==f,N=Z.includes(f);if(!(f in(c?IDBIndex:IDBObjectStore).prototype)||!N&&!z.includes(f))return;const q=async function(F){const P=this.transaction(F,N?"readwrite":"readonly");let q=P.store;for(var H=arguments.length,A=new Array(H>1?H-1:0),o=1;o<H;o++)A[o-1]=arguments[o];return c&&(q=q.index(A.shift())),(await Promise.all([q[f](...A),N&&P.done]))[0]};return R.set(P,q),q}t=(F=>({...F,get:(P,f,c)=>y(P,f)||F.get(P,f,c),has:(P,f)=>!!y(P,f)||F.has(P,f)}))(t);const O="@firebase/installations",d="0.6.4",M=1e4,V=`w:${d}`,Q="FIS_v2",K=36e5,x={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},k=new q.g("installations","Installations",x);function I(F){return F instanceof q.j&&F.code.includes("request-failed")}function E(F){let{projectId:P}=F;return`https://firebaseinstallations.googleapis.com/v1/projects/${P}/installations`}function r(F){return{token:F.token,requestStatus:2,expiresIn:(P=F.expiresIn,Number(P.replace("s","000"))),creationTime:Date.now()};var P}async function n(F,P){const f=(await P.json()).error;return k.create("request-failed",{requestName:F,serverCode:f.code,serverMessage:f.message,serverStatus:f.status})}function p(F){let{apiKey:P}=F;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":P})}function U(F,P){let{refreshToken:f}=P;const c=p(F);return c.append("Authorization",function(F){return`${Q} ${F}`}(f)),c}async function e(F){const P=await F();return P.status>=500&&P.status<600?F():P}function D(F){return new Promise((P=>{setTimeout(P,F)}))}const l=/^[cdef][\w-]{21}$/;function W(){try{const F=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(F),F[0]=112+F[0]%16;const P=function(F){const P=(f=F,btoa(String.fromCharCode(...f)).replace(/\+/g,"-").replace(/\//g,"_"));var f;return P.substr(0,22)}(F);return l.test(P)?P:""}catch(F){return""}}function b(F){return`${F.appName}!${F.appId}`}const v=new Map;function s(F,P){const f=b(F);X(f,P),function(F,P){const f=a();f&&f.postMessage({key:F,fid:P});w()}(f,P)}function X(F,P){const f=v.get(F);if(f)for(const c of f)c(P)}let m=null;function a(){return!m&&"BroadcastChannel"in self&&(m=new BroadcastChannel("[Firebase] FID Change"),m.onmessage=F=>{X(F.data.key,F.data.fid)}),m}function w(){0===v.size&&m&&(m.close(),m=null)}const g="firebase-installations-store";let G=null;function h(){return G||(G=function(F,P){let{blocked:f,upgrade:c,blocking:N,terminated:q}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const H=indexedDB.open(F,P),A=J(H);return c&&H.addEventListener("upgradeneeded",(F=>{c(J(H.result),F.oldVersion,F.newVersion,J(H.transaction))})),f&&H.addEventListener("blocked",(()=>f())),A.then((F=>{q&&F.addEventListener("close",(()=>q())),N&&F.addEventListener("versionchange",(()=>N()))})).catch((()=>{})),A}("firebase-installations-database",1,{upgrade:(F,P)=>{if(0===P)F.createObjectStore(g)}})),G}async function S(F,P){const f=b(F),c=(await h()).transaction(g,"readwrite"),N=c.objectStore(g),q=await N.get(f);return await N.put(P,f),await c.done,q&&q.fid===P.fid||s(F,P.fid),P}async function FF(F){const P=b(F),f=(await h()).transaction(g,"readwrite");await f.objectStore(g).delete(P),await f.done}async function PF(F,P){const f=b(F),c=(await h()).transaction(g,"readwrite"),N=c.objectStore(g),q=await N.get(f),H=P(q);return void 0===H?await N.delete(f):await N.put(H,f),await c.done,!H||q&&q.fid===H.fid||s(F,H.fid),H}async function fF(F){let P;const f=await PF(F.appConfig,(f=>{const c=function(F){const P=F||{fid:W(),registrationStatus:0};return qF(P)}(f),N=function(F,P){if(0===P.registrationStatus){if(!navigator.onLine){return{installationEntry:P,registrationPromise:Promise.reject(k.create("app-offline"))}}const f={fid:P.fid,registrationStatus:1,registrationTime:Date.now()},c=async function(F,P){try{const f=await async function(F,P){let{appConfig:f,heartbeatServiceProvider:c}=F,{fid:N}=P;const q=E(f),H=p(f),A=c.getImmediate({optional:!0});if(A){const F=await A.getHeartbeatsHeader();F&&H.append("x-firebase-client",F)}const o={fid:N,authVersion:Q,appId:f.appId,sdkVersion:V},j={method:"POST",headers:H,body:JSON.stringify(o)},i=await e((()=>fetch(q,j)));if(i.ok){const F=await i.json();return{fid:F.fid||N,registrationStatus:2,refreshToken:F.refreshToken,authToken:r(F.authToken)}}throw await n("Create Installation",i)}(F,P);return S(F.appConfig,f)}catch(f){throw I(f)&&409===f.customData.serverCode?await FF(F.appConfig):await S(F.appConfig,{fid:P.fid,registrationStatus:0}),f}}(F,f);return{installationEntry:f,registrationPromise:c}}return 1===P.registrationStatus?{installationEntry:P,registrationPromise:cF(F)}:{installationEntry:P}}(F,c);return P=N.registrationPromise,N.installationEntry}));return""===f.fid?{installationEntry:await P}:{installationEntry:f,registrationPromise:P}}async function cF(F){let P=await NF(F.appConfig);for(;1===P.registrationStatus;)await D(100),P=await NF(F.appConfig);if(0===P.registrationStatus){const{installationEntry:P,registrationPromise:f}=await fF(F);return f||P}return P}function NF(F){return PF(F,(F=>{if(!F)throw k.create("installation-not-found");return qF(F)}))}function qF(F){return 1===(P=F).registrationStatus&&P.registrationTime+M<Date.now()?{fid:F.fid,registrationStatus:0}:F;var P}async function HF(F,P){let{appConfig:f,heartbeatServiceProvider:c}=F;const N=function(F,P){let{fid:f}=P;return`${E(F)}/${f}/authTokens:generate`}(f,P),q=U(f,P),H=c.getImmediate({optional:!0});if(H){const F=await H.getHeartbeatsHeader();F&&q.append("x-firebase-client",F)}const A={installation:{sdkVersion:V,appId:f.appId}},o={method:"POST",headers:q,body:JSON.stringify(A)},j=await e((()=>fetch(N,o)));if(j.ok){return r(await j.json())}throw await n("Generate Auth Token",j)}async function AF(F){let P,f=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const c=await PF(F.appConfig,(c=>{if(!jF(c))throw k.create("not-registered");const N=c.authToken;if(!f&&function(F){return 2===F.requestStatus&&!function(F){const P=Date.now();return P<F.creationTime||F.creationTime+F.expiresIn<P+K}(F)}(N))return c;if(1===N.requestStatus)return P=async function(F,P){let f=await oF(F.appConfig);for(;1===f.authToken.requestStatus;)await D(100),f=await oF(F.appConfig);const c=f.authToken;return 0===c.requestStatus?AF(F,P):c}(F,f),c;{if(!navigator.onLine)throw k.create("app-offline");const f=function(F){const P={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},F),{authToken:P})}(c);return P=async function(F,P){try{const f=await HF(F,P),c=Object.assign(Object.assign({},P),{authToken:f});return await S(F.appConfig,c),f}catch(f){if(!I(f)||401!==f.customData.serverCode&&404!==f.customData.serverCode){const f=Object.assign(Object.assign({},P),{authToken:{requestStatus:0}});await S(F.appConfig,f)}else await FF(F.appConfig);throw f}}(F,f),f}}));return P?await P:c.authToken}function oF(F){return PF(F,(F=>{if(!jF(F))throw k.create("not-registered");const P=F.authToken;return 1===(f=P).requestStatus&&f.requestTime+M<Date.now()?Object.assign(Object.assign({},F),{authToken:{requestStatus:0}}):F;var f}))}function jF(F){return void 0!==F&&2===F.registrationStatus}async function iF(F){let P=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const f=F;await async function(F){const{registrationPromise:P}=await fF(F);P&&await P}(f);return(await AF(f,P)).token}function uF(F){return k.create("missing-app-config-values",{valueName:F})}const TF="installations",YF=F=>{const P=F.getProvider("app").getImmediate(),f=function(F){if(!F||!F.options)throw uF("App Configuration");if(!F.name)throw uF("App Name");const P=["projectId","apiKey","appId"];for(const f of P)if(!F.options[f])throw uF(f);return{appName:F.name,projectId:F.options.projectId,apiKey:F.options.apiKey,appId:F.options.appId}}(P);return{app:P,appConfig:f,heartbeatServiceProvider:(0,c.A)(P,"heartbeat"),_delete:()=>Promise.resolve()}},tF=F=>{const P=F.getProvider("app").getImmediate(),f=(0,c.A)(P,TF).getImmediate();return{getId:()=>async function(F){const P=F,{installationEntry:f,registrationPromise:c}=await fF(P);return c?c.catch(console.error):AF(P).catch(console.error),f.fid}(f),getToken:F=>iF(f,F)}};(0,c.E)(new H.e(TF,YF,"PUBLIC")),(0,c.E)(new H.e("installations-internal",tF,"PRIVATE")),(0,c.U)(O,d),(0,c.U)(O,d,"esm2017");const CF="analytics",LF="https://www.googletagmanager.com/gtag/js",JF=new N.f("@firebase/analytics"),BF={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},zF=new q.g("analytics","Analytics",BF);function ZF(F){if(!F.startsWith(LF)){const P=zF.create("invalid-gtag-resource",{gtagURL:F});return JF.warn(P.message),""}return F}function RF(F){return Promise.all(F.map((F=>F.catch((F=>F)))))}function yF(F,P){const f=function(F,P){let f;return window.trustedTypes&&(f=window.trustedTypes.createPolicy(F,P)),f}("firebase-js-sdk-policy",{createScriptURL:ZF}),c=document.createElement("script"),N=`${LF}?l=${F}&id=${P}`;c.src=f?null===f||void 0===f?void 0:f.createScriptURL(N):N,c.async=!0,document.head.appendChild(c)}function OF(F,P,f,c){return async function(N){try{for(var q=arguments.length,H=new Array(q>1?q-1:0),A=1;A<q;A++)H[A-1]=arguments[A];if("event"===N){const[c,N]=H;await async function(F,P,f,c,N){try{let q=[];if(N&&N.send_to){let F=N.send_to;Array.isArray(F)||(F=[F]);const c=await RF(f);for(const f of F){const F=c.find((F=>F.measurementId===f)),N=F&&P[F.appId];if(!N){q=[];break}q.push(N)}}0===q.length&&(q=Object.values(P)),await Promise.all(q),F("event",c,N||{})}catch(q){JF.error(q)}}(F,P,f,c,N)}else if("config"===N){const[N,q]=H;await async function(F,P,f,c,N,q){const H=c[N];try{if(H)await P[H];else{const F=(await RF(f)).find((F=>F.measurementId===N));F&&await P[F.appId]}}catch(A){JF.error(A)}F("config",N,q)}(F,P,f,c,N,q)}else if("consent"===N){const[P]=H;F("consent","update",P)}else if("get"===N){const[P,f,c]=H;F("get",P,f,c)}else if("set"===N){const[P]=H;F("set",P)}else F(N,...H)}catch(o){JF.error(o)}}}const dF=new class{constructor(){let F=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},P=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=F,this.intervalMillis=P}getThrottleMetadata(F){return this.throttleMetadata[F]}setThrottleMetadata(F,P){this.throttleMetadata[F]=P}deleteThrottleMetadata(F){delete this.throttleMetadata[F]}};function MF(F){return new Headers({Accept:"application/json","x-goog-api-key":F})}async function VF(F){let P=arguments.length>1&&void 0!==arguments[1]?arguments[1]:dF,f=arguments.length>2?arguments[2]:void 0;const{appId:c,apiKey:N,measurementId:q}=F.options;if(!c)throw zF.create("no-app-id");if(!N){if(q)return{measurementId:q,appId:c};throw zF.create("no-api-key")}const H=P.getThrottleMetadata(c)||{backoffCount:0,throttleEndTimeMillis:Date.now()},A=new KF;return setTimeout((async()=>{A.abort()}),void 0!==f?f:6e4),QF({appId:c,apiKey:N,measurementId:q},H,A,P)}async function QF(F,P,f){let{throttleEndTimeMillis:c,backoffCount:N}=P,H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:dF;var A;const{appId:o,measurementId:j}=F;try{await function(F,P){return new Promise(((f,c)=>{const N=Math.max(P-Date.now(),0),q=setTimeout(f,N);F.addEventListener((()=>{clearTimeout(q),c(zF.create("fetch-throttle",{throttleEndTimeMillis:P}))}))}))}(f,c)}catch(i){if(j)return JF.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${j} provided in the "measurementId" field in the local Firebase config. [${null===i||void 0===i?void 0:i.message}]`),{appId:o,measurementId:j};throw i}try{const P=await async function(F){var P;const{appId:f,apiKey:c}=F,N={method:"GET",headers:MF(c)},q="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",f),H=await fetch(q,N);if(200!==H.status&&304!==H.status){let F="";try{const f=await H.json();(null===(P=f.error)||void 0===P?void 0:P.message)&&(F=f.error.message)}catch(A){}throw zF.create("config-fetch-failed",{httpStatus:H.status,responseMessage:F})}return H.json()}(F);return H.deleteThrottleMetadata(o),P}catch(i){const P=i;if(!function(F){if(!(F instanceof q.j)||!F.customData)return!1;const P=Number(F.customData.httpStatus);return 429===P||500===P||503===P||504===P}(P)){if(H.deleteThrottleMetadata(o),j)return JF.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${j} provided in the "measurementId" field in the local Firebase config. [${null===P||void 0===P?void 0:P.message}]`),{appId:o,measurementId:j};throw i}const c=503===Number(null===(A=null===P||void 0===P?void 0:P.customData)||void 0===A?void 0:A.httpStatus)?(0,q.p)(N,H.intervalMillis,30):(0,q.p)(N,H.intervalMillis),u={throttleEndTimeMillis:Date.now()+c,backoffCount:N+1};return H.setThrottleMetadata(o,u),JF.debug(`Calling attemptFetch again in ${c} millis`),QF(F,u,f,H)}}class KF{constructor(){this.listeners=[]}addEventListener(F){this.listeners.push(F)}abort(){this.listeners.forEach((F=>F()))}}let xF,kF;function IF(F){kF=F}function EF(F){xF=F}async function rF(F,P,f,c,N,H,A){var o;const j=VF(F);j.then((P=>{f[P.measurementId]=P.appId,F.options.measurementId&&P.measurementId!==F.options.measurementId&&JF.warn(`The measurement ID in the local Firebase config (${F.options.measurementId}) does not match the measurement ID fetched from the server (${P.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((F=>JF.error(F))),P.push(j);const i=async function(){if(!(0,q.O)())return JF.warn(zF.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,q.$)()}catch(F){return JF.warn(zF.create("indexeddb-unavailable",{errorInfo:null===F||void 0===F?void 0:F.toString()}).message),!1}return!0}().then((F=>F?c.getId():void 0)),[u,T]=await Promise.all([j,i]);(function(F){const P=window.document.getElementsByTagName("script");for(const f of Object.values(P))if(f.src&&f.src.includes(LF)&&f.src.includes(F))return f;return null})(H)||yF(H,u.measurementId),kF&&(N("consent","default",kF),IF(void 0)),N("js",new Date);const Y=null!==(o=null===A||void 0===A?void 0:A.config)&&void 0!==o?o:{};return Y.origin="firebase",Y.update=!0,null!=T&&(Y.firebase_id=T),N("config",u.measurementId,Y),xF&&(N("set",xF),EF(void 0)),u.measurementId}class nF{constructor(F){this.app=F}_delete(){return delete pF[this.app.options.appId],Promise.resolve()}}let pF={},UF=[];const eF={};let DF,lF,WF="dataLayer",bF="gtag",vF=!1;function sF(F){if(vF)throw zF.create("already-initialized");F.dataLayerName&&(WF=F.dataLayerName),F.gtagName&&(bF=F.gtagName)}function XF(F,P,f){!function(){const F=[];if((0,q.G)()&&F.push("This is a browser extension environment."),(0,q.l)()||F.push("Cookies are not available."),F.length>0){const P=F.map(((F,P)=>`(${P+1}) ${F}`)).join(" "),f=zF.create("invalid-analytics-context",{errorInfo:P});JF.warn(f.message)}}();const c=F.options.appId;if(!c)throw zF.create("no-app-id");if(!F.options.apiKey){if(!F.options.measurementId)throw zF.create("no-api-key");JF.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${F.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=pF[c])throw zF.create("already-exists",{id:c});if(!vF){!function(F){let P=[];Array.isArray(window[F])?P=window[F]:window[F]=P}(WF);const{wrappedGtag:F,gtagCore:P}=function(F,P,f,c,N){let q=function(){for(var F=arguments.length,P=new Array(F),f=0;f<F;f++)P[f]=arguments[f];window[c].push(arguments)};return window[N]&&"function"===typeof window[N]&&(q=window[N]),window[N]=OF(q,F,P,f),{gtagCore:q,wrappedGtag:window[N]}}(pF,UF,eF,WF,bF);lF=F,DF=P,vF=!0}pF[c]=rF(F,UF,eF,P,DF,WF,f);return new nF(F)}function mF(){let F=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,c.L)();F=(0,q.A)(F);const P=(0,c.A)(F,CF);return P.isInitialized()?P.getImmediate():aF(F)}function aF(F){let P=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const f=(0,c.A)(F,CF);if(f.isInitialized()){const F=f.getImmediate();if((0,q.t)(P,f.getOptions()))return F;throw zF.create("already-initialized")}return f.initialize({options:P})}async function wF(){if((0,q.G)())return!1;if(!(0,q.l)())return!1;if(!(0,q.O)())return!1;try{return await(0,q.$)()}catch(F){return!1}}function gF(F,P,f){F=(0,q.A)(F),async function(F,P,f,c){if(c&&c.global)return F("set",{screen_name:f}),Promise.resolve();F("config",await P,{update:!0,screen_name:f})}(lF,pF[F.app.options.appId],P,f).catch((F=>JF.error(F)))}async function GF(F){return F=(0,q.A)(F),async function(F,P){const f=await P;return new Promise(((P,c)=>{F("get",f,"client_id",(F=>{F||c(zF.create("no-client-id")),P(F)}))}))}(lF,pF[F.app.options.appId])}function hF(F,P,f){F=(0,q.A)(F),async function(F,P,f,c){if(c&&c.global)return F("set",{user_id:f}),Promise.resolve();F("config",await P,{update:!0,user_id:f})}(lF,pF[F.app.options.appId],P,f).catch((F=>JF.error(F)))}function SF(F,P,f){F=(0,q.A)(F),async function(F,P,f,c){if(c&&c.global){const P={};for(const F of Object.keys(f))P[`user_properties.${F}`]=f[F];return F("set",P),Promise.resolve()}F("config",await P,{update:!0,user_properties:f})}(lF,pF[F.app.options.appId],P,f).catch((F=>JF.error(F)))}function FP(F,P){F=(0,q.A)(F),async function(F,P){const f=await F;window[`ga-disable-${f}`]=!P}(pF[F.app.options.appId],P).catch((F=>JF.error(F)))}function PP(F){lF?lF("set",F):EF(F)}function fP(F,P,f,c){F=(0,q.A)(F),async function(F,P,f,c,N){if(N&&N.global)F("event",f,c);else{const N=await P;F("event",f,Object.assign(Object.assign({},c),{send_to:N}))}}(lF,pF[F.app.options.appId],P,f,c).catch((F=>JF.error(F)))}function cP(F){lF?lF("consent","update",F):IF(F)}const NP="@firebase/analytics",qP="0.10.0";(0,c.E)(new H.e(CF,((F,P)=>{let{options:f}=P;return XF(F.getProvider("app").getImmediate(),F.getProvider("installations-internal").getImmediate(),f)}),"PUBLIC")),(0,c.E)(new H.e("analytics-internal",(function(F){try{const P=F.getProvider(CF).getImmediate();return{logEvent:(F,f,c)=>fP(P,F,f,c)}}catch(P){throw zF.create("interop-component-reg-failed",{reason:P})}}),"PRIVATE")),(0,c.U)(NP,qP),(0,c.U)(NP,qP,"esm2017")}}]);