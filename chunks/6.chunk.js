"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6,7],{10329:(G,D,N)=>{var T=N(1497),o=N(1047);o.b.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(o.b.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=T.d.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((G=>{this._texture._sphericalPolynomial=G,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(G){this._texture&&(this._texture._sphericalPolynomial=G)},enumerable:!0,configurable:!0})},10333:(G,D,N)=>{N.r(D),N.d(D,{Dispose:()=>g,DumpData:()=>q,DumpDataAsync:()=>v,DumpFramebuffer:()=>r,DumpTools:()=>X});var T=N(1524),o=N(1223),Z=N(1038),n=N(1030);let C,P=null;async function r(G,D,N,T){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Z=arguments.length>5?arguments[5]:void 0,n=arguments.length>6?arguments[6]:void 0;const C=await N.readPixels(0,0,G,D);q(G,D,new Uint8Array(C.buffer),T,o,Z,!0,void 0,n)}function v(G,D,N){let T=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",o=arguments.length>4?arguments[4]:void 0,Z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],n=arguments.length>6&&void 0!==arguments[6]&&arguments[6],C=arguments.length>7?arguments[7]:void 0;return new Promise((P=>{q(G,D,N,(G=>P(G)),T,o,Z,n,C)}))}function q(G,D,r,v){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",X=arguments.length>5?arguments[5]:void 0,W=arguments.length>6&&void 0!==arguments[6]&&arguments[6],j=arguments.length>7&&void 0!==arguments[7]&&arguments[7],Y=arguments.length>8?arguments[8]:void 0;(async function(){return P||(P=new Promise(((G,D)=>{let o,Z=null;const P={jf:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(N.bind(N,1427)).then((r=>{let{ThinEngine:v}=r;try{o=new OffscreenCanvas(100,100),Z=new v(o,!1,P)}catch(X){o=document.createElement("canvas"),Z=new v(o,!1,P)}n.e.Instances.pop(),n.e.OnEnginesDisposedObservable.add((G=>{Z&&G!==Z&&!Z.u&&0===n.e.Instances.length&&g()})),Z.getCaps().parallelShaderCompile=void 0;const q=new T.b(Z);N.e(32).then(N.bind(N,11002)).then((N=>{let{passPixelShader:n}=N;if(!Z)return void D("Engine is not defined");const P=new T.e({rb:Z,name:n.name,fragmentShader:n.shader,samplerNames:["textureSampler"]});C={canvas:o,rb:Z,renderer:q,wrapper:P},G(C)}))})).catch(D)}))),await P})().then((N=>{if(N.rb.setSize(G,D,!0),r instanceof Float32Array){const G=new Uint8Array(r.length);let D=r.length;for(;D--;){const N=r[D];G[D]=Math.round(255*(0,Z.e)(N))}r=G}const T=N.rb.createRawTexture(r,G,D,5,!1,!W,1);N.renderer.setViewport(),N.renderer.applyEffectWrapper(N.wrapper),N.wrapper.effect._bindTexture("textureSampler",T),N.renderer.draw(),j?o.f.ToBlob(N.canvas,(G=>{const D=new FileReader;D.onload=G=>{const D=G.target.result;v&&v(D)},D.readAsArrayBuffer(G)}),q,Y):o.f.EncodeScreenshotCanvasData(N.canvas,v,q,X,Y),T.dispose()}))}function g(){var G;C?(C.wrapper.dispose(),C.renderer.dispose(),C.rb.dispose()):null===(G=P)||void 0===G||G.then((G=>{G.wrapper.dispose(),G.renderer.dispose(),G.rb.dispose()}));P=null,C=null}const X={DumpData:q,DumpDataAsync:v,DumpFramebuffer:r,Dispose:g};o.f.DumpData=q,o.f.DumpDataAsync=v,o.f.DumpFramebuffer=r},10314:(G,D,N)=>{N.d(D,{b:()=>W,d:()=>y,e:()=>R,h:()=>L});var T=N(1223),o=N(1009),Z=N(1038),n=N(1471),C=N(1157),P=N(1047),r=(N(1218),N(1516)),v=N(1105);N(10320),N(10329),N(10333);const q="image/png",g=2,X=[134,22,135,150,246,214,150,54];function W(G){const D=new DataView(G.buffer,G.byteOffset,G.byteLength);let N=0;for(let n=0;n<X.length;n++)if(D.getUint8(N++)!==X[n])return v.d.Error("Not a babylon environment map"),null;let T="",o=0;for(;o=D.getUint8(N++);)T+=String.fromCharCode(o);let Z=JSON.parse(T);return Z=j(Z),Z.Me&&(Z.Me.specularDataPosition=N,Z.Me.lodGenerationScale=Z.Me.lodGenerationScale||.8),Z}function j(G){if(G.version>g)throw new Error(`Unsupported babylon environment map version "${G.version}". Latest supported version is "${g}".`);return 2===G.version?G:G={...G,version:2,imageType:q}}function Y(G,D){const N=(D=j(D)).Me;let T=Math.log2(D.width);if(T=Math.round(T)+1,N.mipmaps.length!==6*T)throw new Error(`Unsupported specular mipmaps number "${N.mipmaps.length}"`);const o=new Array(T);for(let Z=0;Z<T;Z++){o[Z]=new Array(6);for(let D=0;D<6;D++){const T=N.mipmaps[6*Z+D];o[Z][D]=new Uint8Array(G.buffer,G.byteOffset+N.specularDataPosition+T.position,T.length)}}return o}function y(G,D,N){const T=(N=j(N)).Me;if(!T)return Promise.resolve();G._lodGenerationScale=T.lodGenerationScale;return m(G,Y(D,N),N.imageType)}function h(G,D,N,T,o,Z,n,C,P,r,v){return new Promise(((q,g)=>{if(N){const N=D.createTexture(null,!0,!0,null,1,null,(G=>{g(G)}),G);null===T||void 0===T||T.onEffectCreatedObservable.addOnce((C=>{C.executeWhenCompiled((()=>{T.externalTextureSamplerBinding=!0,T.onApply=T=>{T._bindTexture("textureSampler",N),T.setFloat2("scale",1,D._features.needsInvertingBitmap&&G instanceof ImageBitmap?-1:1)},D.scenes.length&&(D.scenes[0].postProcessManager.directRender([T],r,!0,Z,n),D.restoreDefaultFramebuffer(),N.dispose(),URL.revokeObjectURL(o),q())}))}))}else{if(D._uploadImageToTexture(v,G,Z,n),C){const N=P[n];N&&D._uploadImageToTexture(N._texture,G,Z,0)}q()}}))}async function m(G,D){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:q;if(!T.f.IsExponentOfTwo(G.width))throw new Error("Texture size must be a power of two");const n=(0,Z.m)(G.width)+1,v=G.getEngine();let g=!1,X=!1,W=null,j=null,Y=null;const y=v.getCaps();G.format=5,G.type=0,G.generateMipMaps=!0,G._cachedAnisotropicFilteringLevel=null,v.updateTextureSamplingMode(3,G),y.textureLOD?v._features.supportRenderAndCopyToLodForFloatTextures?y.textureHalfFloatRender&&y.textureHalfFloatLinearFiltering?(g=!0,G.type=2):y.textureFloatRender&&y.textureFloatLinearFiltering&&(g=!0,G.type=1):g=!1:(g=!1,X=!0,Y={});let m=0;if(g)v.isWebGPU?(m=1,await N.e(17).then(N.bind(N,12305))):await N.e(24).then(N.bind(N,12312)),W=new r.e("rgbdDecode","rgbdDecode",null,null,1,null,3,v,!1,void 0,G.type,void 0,null,!1,void 0,m),G._isRGBD=!1,G.invertY=!1,j=v.createRenderTargetCubeTexture(G.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:G.type,format:5});else if(G._isRGBD=!0,G.invertY=!0,X){const D=3,N=G._lodGenerationScale,T=G._lodGenerationOffset;for(let o=0;o<D;o++){const Z=(n-1)*N+T,r=T+(Z-T)*(1-o/(D-1)),q=Math.round(Math.min(Math.max(r,0),Z)),g=new C.d(v,2);g.isCube=!0,g.invertY=!0,g.generateMipMaps=!1,v.updateTextureSamplingMode(2,g);const X=new P.b(null);switch(X._isCube=!0,X._texture=g,Y[q]=X,o){case 0:G._lodTextureLow=X;break;case 1:G._lodTextureMid=X;break;case 2:G._lodTextureHigh=X}}}const R=[];for(let N=0;N<D.length;N++)for(let T=0;T<6;T++){const Z=D[N][T],n=new Blob([Z],{type:o}),C=URL.createObjectURL(n);let P;if(v._features.forceBitmapOverHTMLImageElement)P=v.createImageBitmap(n,{premultiplyAlpha:"none"}).then((D=>h(D,v,g,W,C,T,N,X,Y,j,G)));else{const D=new Image;D.src=C,P=new Promise(((o,Z)=>{D.onload=()=>{h(D,v,g,W,C,T,N,X,Y,j,G).then((()=>o())).catch((G=>{Z(G)}))},D.onerror=G=>{Z(G)}}))}R.push(P)}if(D.length<n){let N;const T=Math.pow(2,n-1-D.length),o=T*T*4;switch(G.type){case 0:N=new Uint8Array(o);break;case 2:N=new Uint16Array(o);break;case 1:N=new Float32Array(o)}for(let Z=D.length;Z<n;Z++)for(let D=0;D<6;D++)v._uploadArrayBufferViewToTexture(G,N,D,Z)}return Promise.all(R).then((()=>{j&&(v._releaseTexture(G),j._swapAndDie(G)),W&&W.dispose(),X&&(G._lodTextureHigh&&G._lodTextureHigh._texture&&(G._lodTextureHigh._texture.isReady=!0),G._lodTextureMid&&G._lodTextureMid._texture&&(G._lodTextureMid._texture.isReady=!0),G._lodTextureLow&&G._lodTextureLow._texture&&(G._lodTextureLow._texture.isReady=!0))}))}function R(G,D){const N=(D=j(D)).irradiance;if(!N)return;const T=new n.g;o.s.FromArrayToRef(N.x,0,T.x),o.s.FromArrayToRef(N.y,0,T.y),o.s.FromArrayToRef(N.z,0,T.z),o.s.FromArrayToRef(N.xx,0,T.xx),o.s.FromArrayToRef(N.yy,0,T.yy),o.s.FromArrayToRef(N.zz,0,T.zz),o.s.FromArrayToRef(N.yz,0,T.yz),o.s.FromArrayToRef(N.zx,0,T.zx),o.s.FromArrayToRef(N.xy,0,T.xy),G._sphericalPolynomial=T}function L(G,D,N,T,o){const Z=m(G.getEngine().createRawCubeTexture(null,G.width,G.format,G.type,G.generateMipMaps,G.invertY,G.samplingMode,G._compression),D).then((()=>G));return G.onRebuildCallback=G=>({proxy:Z,isReady:!0,isAsync:!0}),G._source=13,G._bufferViewArrayArray=D,G._lodGenerationScale=T,G._lodGenerationOffset=o,G._sphericalPolynomial=N,m(G,D).then((()=>(G.isReady=!0,G)))}},10320:(G,D,N)=>{N.d(D,{d:()=>Z});var T=N(1516),o=N(1501);class Z{static ExpandRGBDTexture(G){const D=G._texture;if(!D||!G.isRGBD)return;const o=D.getEngine(),Z=o.getCaps(),n=D.isReady;let C=!1;Z.textureHalfFloatRender&&Z.textureHalfFloatLinearFiltering?(C=!0,D.type=2):Z.textureFloatRender&&Z.textureFloatLinearFiltering&&(C=!0,D.type=1),C&&(D.isReady=!1,D._isRGBD=!1,D.invertY=!1);const P=async()=>{const Z=o.isWebGPU,n=Z?1:0;D.isReady=!1,Z?await Promise.all([N.e(17).then(N.bind(N,12305)),N.e(18).then(N.bind(N,12321))]):await Promise.all([N.e(24).then(N.bind(N,12312)),N.e(25).then(N.bind(N,12323))]);const C=new T.e("rgbdDecode","rgbdDecode",null,null,1,null,3,o,!1,void 0,D.type,void 0,null,!1,void 0,n);C.externalTextureSamplerBinding=!0;const P=o.createRenderTargetTexture(D.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:D.samplingMode,type:D.type,format:5});C.onEffectCreatedObservable.addOnce((N=>{N.executeWhenCompiled((()=>{C.onApply=G=>{G._bindTexture("textureSampler",D),G.setFloat2("scale",1,1)},G.va().postProcessManager.directRender([C],P,!0),o.restoreDefaultFramebuffer(),o._releaseTexture(D),C&&C.dispose(),P._swapAndDie(D),D.isReady=!0}))}))};C&&(n?P():G.onLoadObservable.addOnce(P))}static EncodeTextureToRGBD(G,D){let N=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,o.d)("rgbdEncode",G,D,N,1,5)}}}}]);