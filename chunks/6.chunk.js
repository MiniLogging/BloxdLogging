"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6,7],{10931:(D,j,W)=>{var Q=W(1539),C=W(1009);C.b.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(C.b.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=Q.d.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((D=>{this._texture._sphericalPolynomial=D,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(D){this._texture&&(this._texture._sphericalPolynomial=D)},enumerable:!0,configurable:!0})},10937:(D,j,W)=>{W.r(j),W.d(j,{Dispose:()=>P,DumpData:()=>Z,DumpDataAsync:()=>F,DumpFramebuffer:()=>f,DumpTools:()=>X});var Q=W(1556),C=W(1207),k=W(1e3),M=W(991);let O,E=null;async function f(D,j,W,Q){let C=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",k=arguments.length>5?arguments[5]:void 0,M=arguments.length>6?arguments[6]:void 0;const O=await W.readPixels(0,0,D,j);Z(D,j,new Uint8Array(O.buffer),Q,C,k,!0,void 0,M)}function F(D,j,W){let Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",C=arguments.length>4?arguments[4]:void 0,k=arguments.length>5&&void 0!==arguments[5]&&arguments[5],M=arguments.length>6&&void 0!==arguments[6]&&arguments[6],O=arguments.length>7?arguments[7]:void 0;return new Promise((E=>{Z(D,j,W,(D=>E(D)),Q,C,k,M,O)}))}function Z(D,j,f,F){let Z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",X=arguments.length>5?arguments[5]:void 0,x=arguments.length>6&&void 0!==arguments[6]&&arguments[6],R=arguments.length>7&&void 0!==arguments[7]&&arguments[7],V=arguments.length>8?arguments[8]:void 0;(async function(){return E||(E=new Promise(((D,j)=>{let C,k=null;const E={tf:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(W.bind(W,1447)).then((f=>{let{ThinEngine:F}=f;try{C=new OffscreenCanvas(100,100),k=new F(C,!1,E)}catch(X){C=document.createElement("canvas"),k=new F(C,!1,E)}M.b.Instances.pop(),M.b.OnEnginesDisposedObservable.add((D=>{k&&D!==k&&!k.u&&0===M.b.Instances.length&&P()})),k.getCaps().parallelShaderCompile=void 0;const Z=new Q.d(k);W.e(32).then(W.bind(W,11643)).then((W=>{let{passPixelShader:M}=W;if(!k)return void j("Engine is not defined");const E=new Q.h({Bb:k,name:M.name,fragmentShader:M.shader,samplerNames:["textureSampler"]});O={canvas:C,Bb:k,renderer:Z,wrapper:E},D(O)}))})).catch(j)}))),await E})().then((W=>{if(W.Bb.setSize(D,j,!0),f instanceof Float32Array){const D=new Uint8Array(f.length);let j=f.length;for(;j--;){const W=f[j];D[j]=Math.round(255*(0,k.e)(W))}f=D}const Q=W.Bb.createRawTexture(f,D,j,5,!1,!x,1);W.renderer.setViewport(),W.renderer.applyEffectWrapper(W.wrapper),W.wrapper.effect._bindTexture("textureSampler",Q),W.renderer.draw(),R?C.f.ToBlob(W.canvas,(D=>{const j=new FileReader;j.onload=D=>{const j=D.target.result;F&&F(j)},j.readAsArrayBuffer(D)}),Z,V):C.f.EncodeScreenshotCanvasData(W.canvas,F,Z,X,V),Q.dispose()}))}function P(){var D;O?(O.wrapper.dispose(),O.renderer.dispose(),O.Bb.dispose()):null===(D=E)||void 0===D||D.then((D=>{D.wrapper.dispose(),D.renderer.dispose(),D.Bb.dispose()}));E=null,O=null}const X={DumpData:Z,DumpDataAsync:F,DumpFramebuffer:f,Dispose:P};C.f.DumpData=Z,C.f.DumpDataAsync=F,C.f.DumpFramebuffer=f},10918:(D,j,W)=>{W.d(j,{b:()=>x,e:()=>U,h:()=>G,k:()=>K});var Q=W(1207),C=W(966),k=W(1e3),M=W(1503),O=W(1129),E=W(1009),f=(W(1199),W(1553)),F=W(1083);W(10925),W(10931),W(10937);const Z="image/png",P=2,X=[134,22,135,150,246,214,150,54];function x(D){const j=new DataView(D.buffer,D.byteOffset,D.byteLength);let W=0;for(let M=0;M<X.length;M++)if(j.getUint8(W++)!==X[M])return F.b.Error("Not a babylon environment map"),null;let Q="",C=0;for(;C=j.getUint8(W++);)Q+=String.fromCharCode(C);let k=JSON.parse(Q);return k=R(k),k.Xe&&(k.Xe.specularDataPosition=W,k.Xe.lodGenerationScale=k.Xe.lodGenerationScale||.8),k}function R(D){if(D.version>P)throw new Error(`Unsupported babylon environment map version "${D.version}". Latest supported version is "${P}".`);return 2===D.version?D:D={...D,version:2,imageType:Z}}function V(D,j){const W=(j=R(j)).Xe;let Q=Math.log2(j.width);if(Q=Math.round(Q)+1,W.mipmaps.length!==6*Q)throw new Error(`Unsupported specular mipmaps number "${W.mipmaps.length}"`);const C=new Array(Q);for(let k=0;k<Q;k++){C[k]=new Array(6);for(let j=0;j<6;j++){const Q=W.mipmaps[6*k+j];C[k][j]=new Uint8Array(D.buffer,D.byteOffset+W.specularDataPosition+Q.position,Q.length)}}return C}function U(D,j,W){const Q=(W=R(W)).Xe;if(!Q)return Promise.resolve();D._lodGenerationScale=Q.lodGenerationScale;return N(D,V(j,W),W.imageType)}function g(D,j,W,Q,C,k,M,O,E,f,F){return new Promise(((Z,P)=>{if(W){const W=j.createTexture(null,!0,!0,null,1,null,(D=>{P(D)}),D);null===Q||void 0===Q||Q.onEffectCreatedObservable.addOnce((O=>{O.executeWhenCompiled((()=>{Q.externalTextureSamplerBinding=!0,Q.onApply=Q=>{Q._bindTexture("textureSampler",W),Q.setFloat2("scale",1,j._features.needsInvertingBitmap&&D instanceof ImageBitmap?-1:1)},j.scenes.length&&(j.scenes[0].postProcessManager.directRender([Q],f,!0,k,M),j.restoreDefaultFramebuffer(),W.dispose(),URL.revokeObjectURL(C),Z())}))}))}else{if(j._uploadImageToTexture(F,D,k,M),O){const W=E[M];W&&j._uploadImageToTexture(W._texture,D,k,0)}Z()}}))}async function N(D,j){let C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Z;if(!Q.f.IsExponentOfTwo(D.width))throw new Error("Texture size must be a power of two");const M=(0,k.l)(D.width)+1,F=D.getEngine();let P=!1,X=!1,x=null,R=null,V=null;const U=F.getCaps();D.format=5,D.type=0,D.generateMipMaps=!0,D._cachedAnisotropicFilteringLevel=null,F.updateTextureSamplingMode(3,D),U.textureLOD?F._features.supportRenderAndCopyToLodForFloatTextures?U.textureHalfFloatRender&&U.textureHalfFloatLinearFiltering?(P=!0,D.type=2):U.textureFloatRender&&U.textureFloatLinearFiltering&&(P=!0,D.type=1):P=!1:(P=!1,X=!0,V={});let N=0;if(P)F.isWebGPU?(N=1,await W.e(17).then(W.bind(W,13343))):await W.e(24).then(W.bind(W,13349)),x=new f.e("rgbdDecode","rgbdDecode",null,null,1,null,3,F,!1,void 0,D.type,void 0,null,!1,void 0,N),D._isRGBD=!1,D.invertY=!1,R=F.createRenderTargetCubeTexture(D.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:D.type,format:5});else if(D._isRGBD=!0,D.invertY=!0,X){const j=3,W=D._lodGenerationScale,Q=D._lodGenerationOffset;for(let C=0;C<j;C++){const k=(M-1)*W+Q,f=Q+(k-Q)*(1-C/(j-1)),Z=Math.round(Math.min(Math.max(f,0),k)),P=new O.d(F,2);P.isCube=!0,P.invertY=!0,P.generateMipMaps=!1,F.updateTextureSamplingMode(2,P);const X=new E.b(null);switch(X._isCube=!0,X._texture=P,V[Z]=X,C){case 0:D._lodTextureLow=X;break;case 1:D._lodTextureMid=X;break;case 2:D._lodTextureHigh=X}}}const G=[];for(let W=0;W<j.length;W++)for(let Q=0;Q<6;Q++){const k=j[W][Q],M=new Blob([k],{type:C}),O=URL.createObjectURL(M);let E;if(F._features.forceBitmapOverHTMLImageElement)E=F.createImageBitmap(M,{premultiplyAlpha:"none"}).then((j=>g(j,F,P,x,O,Q,W,X,V,R,D)));else{const j=new Image;j.src=O,E=new Promise(((C,k)=>{j.onload=()=>{g(j,F,P,x,O,Q,W,X,V,R,D).then((()=>C())).catch((D=>{k(D)}))},j.onerror=D=>{k(D)}}))}G.push(E)}if(j.length<M){let W;const Q=Math.pow(2,M-1-j.length),C=Q*Q*4;switch(D.type){case 0:W=new Uint8Array(C);break;case 2:W=new Uint16Array(C);break;case 1:W=new Float32Array(C)}for(let k=j.length;k<M;k++)for(let j=0;j<6;j++)F._uploadArrayBufferViewToTexture(D,W,j,k)}return Promise.all(G).then((()=>{R&&(F._releaseTexture(D),R._swapAndDie(D)),x&&x.dispose(),X&&(D._lodTextureHigh&&D._lodTextureHigh._texture&&(D._lodTextureHigh._texture.isReady=!0),D._lodTextureMid&&D._lodTextureMid._texture&&(D._lodTextureMid._texture.isReady=!0),D._lodTextureLow&&D._lodTextureLow._texture&&(D._lodTextureLow._texture.isReady=!0))}))}function G(D,j){const W=(j=R(j)).irradiance;if(!W)return;const Q=new M.h;C.j.FromArrayToRef(W.x,0,Q.x),C.j.FromArrayToRef(W.y,0,Q.y),C.j.FromArrayToRef(W.z,0,Q.z),C.j.FromArrayToRef(W.xx,0,Q.xx),C.j.FromArrayToRef(W.yy,0,Q.yy),C.j.FromArrayToRef(W.zz,0,Q.zz),C.j.FromArrayToRef(W.yz,0,Q.yz),C.j.FromArrayToRef(W.zx,0,Q.zx),C.j.FromArrayToRef(W.xy,0,Q.xy),D._sphericalPolynomial=Q}function K(D,j,W,Q,C){const k=N(D.getEngine().createRawCubeTexture(null,D.width,D.format,D.type,D.generateMipMaps,D.invertY,D.samplingMode,D._compression),j).then((()=>D));return D.onRebuildCallback=D=>({proxy:k,isReady:!0,isAsync:!0}),D._source=13,D._bufferViewArrayArray=j,D._lodGenerationScale=Q,D._lodGenerationOffset=C,D._sphericalPolynomial=W,N(D,j).then((()=>(D.isReady=!0,D)))}},10925:(D,j,W)=>{W.d(j,{c:()=>k});var Q=W(1553),C=W(1547);class k{static ExpandRGBDTexture(D){const j=D._texture;if(!j||!D.isRGBD)return;const C=j.getEngine(),k=C.getCaps(),M=j.isReady;let O=!1;k.textureHalfFloatRender&&k.textureHalfFloatLinearFiltering?(O=!0,j.type=2):k.textureFloatRender&&k.textureFloatLinearFiltering&&(O=!0,j.type=1),O&&(j.isReady=!1,j._isRGBD=!1,j.invertY=!1);const E=async()=>{const k=C.isWebGPU,M=k?1:0;j.isReady=!1,k?await Promise.all([W.e(17).then(W.bind(W,13343)),W.e(18).then(W.bind(W,13358))]):await Promise.all([W.e(24).then(W.bind(W,13349)),W.e(25).then(W.bind(W,13365))]);const O=new Q.e("rgbdDecode","rgbdDecode",null,null,1,null,3,C,!1,void 0,j.type,void 0,null,!1,void 0,M);O.externalTextureSamplerBinding=!0;const E=C.createRenderTargetTexture(j.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:j.samplingMode,type:j.type,format:5});O.onEffectCreatedObservable.addOnce((W=>{W.executeWhenCompiled((()=>{O.onApply=D=>{D._bindTexture("textureSampler",j),D.setFloat2("scale",1,1)},D.va().postProcessManager.directRender([O],E,!0),C.restoreDefaultFramebuffer(),C._releaseTexture(j),O&&O.dispose(),E._swapAndDie(j),j.isReady=!0}))}))};O&&(M?E():D.onLoadObservable.addOnce(E))}static EncodeTextureToRGBD(D,j){let W=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,C.c)("rgbdEncode",D,j,W,1,5)}}}}]);