"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6,7],{10962:(I,S,d)=>{var N=d(1546),O=d(1045);O.c.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(O.c.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=N.b.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((I=>{this._texture._sphericalPolynomial=I,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(I){this._texture&&(this._texture._sphericalPolynomial=I)},enumerable:!0,configurable:!0})},10971:(I,S,d)=>{d.r(S),d.d(S,{Dispose:()=>E,DumpData:()=>p,DumpDataAsync:()=>Y,DumpFramebuffer:()=>f,DumpTools:()=>o});var N=d(1562),O=d(1216),g=d(1037),T=d(1035);let q,a=null;async function f(I,S,d,N){let O=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",g=arguments.length>5?arguments[5]:void 0,T=arguments.length>6?arguments[6]:void 0;const q=await d.readPixels(0,0,I,S);p(I,S,new Uint8Array(q.buffer),N,O,g,!0,void 0,T)}function Y(I,S,d){let N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",O=arguments.length>4?arguments[4]:void 0,g=arguments.length>5&&void 0!==arguments[5]&&arguments[5],T=arguments.length>6&&void 0!==arguments[6]&&arguments[6],q=arguments.length>7?arguments[7]:void 0;return new Promise((a=>{p(I,S,d,(I=>a(I)),N,O,g,T,q)}))}function p(I,S,f,Y){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",o=arguments.length>5?arguments[5]:void 0,k=arguments.length>6&&void 0!==arguments[6]&&arguments[6],U=arguments.length>7&&void 0!==arguments[7]&&arguments[7],i=arguments.length>8?arguments[8]:void 0;(async function(){return a||(a=new Promise(((I,S)=>{let O,g=null;const a={tf:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(d.bind(d,1455)).then((f=>{let{ThinEngine:Y}=f;try{O=new OffscreenCanvas(100,100),g=new Y(O,!1,a)}catch(o){O=document.createElement("canvas"),g=new Y(O,!1,a)}T.e.Instances.pop(),T.e.OnEnginesDisposedObservable.add((I=>{g&&I!==g&&!g.u&&0===T.e.Instances.length&&E()})),g.getCaps().parallelShaderCompile=void 0;const p=new N.c(g);d.e(32).then(d.bind(d,11690)).then((d=>{let{passPixelShader:T}=d;if(!g)return void S("Engine is not defined");const a=new N.d({pb:g,name:T.name,fragmentShader:T.shader,samplerNames:["textureSampler"]});q={canvas:O,pb:g,renderer:p,wrapper:a},I(q)}))})).catch(S)}))),await a})().then((d=>{if(d.pb.setSize(I,S,!0),f instanceof Float32Array){const I=new Uint8Array(f.length);let S=f.length;for(;S--;){const d=f[S];I[S]=Math.round(255*(0,g.e)(d))}f=I}const N=d.pb.createRawTexture(f,I,S,5,!1,!k,1);d.renderer.setViewport(),d.renderer.applyEffectWrapper(d.wrapper),d.wrapper.effect._bindTexture("textureSampler",N),d.renderer.draw(),U?O.d.ToBlob(d.canvas,(I=>{const S=new FileReader;S.onload=I=>{const S=I.target.result;Y&&Y(S)},S.readAsArrayBuffer(I)}),p,i):O.d.EncodeScreenshotCanvasData(d.canvas,Y,p,o,i),N.dispose()}))}function E(){var I;q?(q.wrapper.dispose(),q.renderer.dispose(),q.pb.dispose()):null===(I=a)||void 0===I||I.then((I=>{I.wrapper.dispose(),I.renderer.dispose(),I.pb.dispose()}));a=null,q=null}const o={DumpData:p,DumpDataAsync:Y,DumpFramebuffer:f,Dispose:E};O.d.DumpData=p,O.d.DumpDataAsync=Y,O.d.DumpFramebuffer=f},10951:(I,S,d)=>{d.d(S,{d:()=>k,g:()=>G,j:()=>C,l:()=>n});var N=d(1216),O=d(1020),g=d(1037),T=d(1511),q=d(1137),a=d(1045),f=(d(1209),d(1560)),Y=d(1098);d(10957),d(10962),d(10971);const p="image/png",E=2,o=[134,22,135,150,246,214,150,54];function k(I){const S=new DataView(I.buffer,I.byteOffset,I.byteLength);let d=0;for(let T=0;T<o.length;T++)if(S.getUint8(d++)!==o[T])return Y.e.Error("Not a babylon environment map"),null;let N="",O=0;for(;O=S.getUint8(d++);)N+=String.fromCharCode(O);let g=JSON.parse(N);return g=U(g),g.Xe&&(g.Xe.specularDataPosition=d,g.Xe.lodGenerationScale=g.Xe.lodGenerationScale||.8),g}function U(I){if(I.version>E)throw new Error(`Unsupported babylon environment map version "${I.version}". Latest supported version is "${E}".`);return 2===I.version?I:I={...I,version:2,imageType:p}}function i(I,S){const d=(S=U(S)).Xe;let N=Math.log2(S.width);if(N=Math.round(N)+1,d.mipmaps.length!==6*N)throw new Error(`Unsupported specular mipmaps number "${d.mipmaps.length}"`);const O=new Array(N);for(let g=0;g<N;g++){O[g]=new Array(6);for(let S=0;S<6;S++){const N=d.mipmaps[6*g+S];O[g][S]=new Uint8Array(I.buffer,I.byteOffset+d.specularDataPosition+N.position,N.length)}}return O}function G(I,S,d){const N=(d=U(d)).Xe;if(!N)return Promise.resolve();I._lodGenerationScale=N.lodGenerationScale;return j(I,i(S,d),d.imageType)}function t(I,S,d,N,O,g,T,q,a,f,Y){return new Promise(((p,E)=>{if(d){const d=S.createTexture(null,!0,!0,null,1,null,(I=>{E(I)}),I);null===N||void 0===N||N.onEffectCreatedObservable.addOnce((q=>{q.executeWhenCompiled((()=>{N.externalTextureSamplerBinding=!0,N.onApply=N=>{N._bindTexture("textureSampler",d),N.setFloat2("scale",1,S._features.needsInvertingBitmap&&I instanceof ImageBitmap?-1:1)},S.scenes.length&&(S.scenes[0].postProcessManager.directRender([N],f,!0,g,T),S.restoreDefaultFramebuffer(),d.dispose(),URL.revokeObjectURL(O),p())}))}))}else{if(S._uploadImageToTexture(Y,I,g,T),q){const d=a[T];d&&S._uploadImageToTexture(d._texture,I,g,0)}p()}}))}async function j(I,S){let O=arguments.length>2&&void 0!==arguments[2]?arguments[2]:p;if(!N.d.IsExponentOfTwo(I.width))throw new Error("Texture size must be a power of two");const T=(0,g.o)(I.width)+1,Y=I.getEngine();let E=!1,o=!1,k=null,U=null,i=null;const G=Y.getCaps();I.format=5,I.type=0,I.generateMipMaps=!0,I._cachedAnisotropicFilteringLevel=null,Y.updateTextureSamplingMode(3,I),G.textureLOD?Y._features.supportRenderAndCopyToLodForFloatTextures?G.textureHalfFloatRender&&G.textureHalfFloatLinearFiltering?(E=!0,I.type=2):G.textureFloatRender&&G.textureFloatLinearFiltering&&(E=!0,I.type=1):E=!1:(E=!1,o=!0,i={});let j=0;if(E)Y.isWebGPU?(j=1,await d.e(17).then(d.bind(d,13249))):await d.e(24).then(d.bind(d,13251)),k=new f.e("rgbdDecode","rgbdDecode",null,null,1,null,3,Y,!1,void 0,I.type,void 0,null,!1,void 0,j),I._isRGBD=!1,I.invertY=!1,U=Y.createRenderTargetCubeTexture(I.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:I.type,format:5});else if(I._isRGBD=!0,I.invertY=!0,o){const S=3,d=I._lodGenerationScale,N=I._lodGenerationOffset;for(let O=0;O<S;O++){const g=(T-1)*d+N,f=N+(g-N)*(1-O/(S-1)),p=Math.round(Math.min(Math.max(f,0),g)),E=new q.e(Y,2);E.isCube=!0,E.invertY=!0,E.generateMipMaps=!1,Y.updateTextureSamplingMode(2,E);const o=new a.c(null);switch(o._isCube=!0,o._texture=E,i[p]=o,O){case 0:I._lodTextureLow=o;break;case 1:I._lodTextureMid=o;break;case 2:I._lodTextureHigh=o}}}const C=[];for(let d=0;d<S.length;d++)for(let N=0;N<6;N++){const g=S[d][N],T=new Blob([g],{type:O}),q=URL.createObjectURL(T);let a;if(Y._features.forceBitmapOverHTMLImageElement)a=Y.createImageBitmap(T,{premultiplyAlpha:"none"}).then((S=>t(S,Y,E,k,q,N,d,o,i,U,I)));else{const S=new Image;S.src=q,a=new Promise(((O,g)=>{S.onload=()=>{t(S,Y,E,k,q,N,d,o,i,U,I).then((()=>O())).catch((I=>{g(I)}))},S.onerror=I=>{g(I)}}))}C.push(a)}if(S.length<T){let d;const N=Math.pow(2,T-1-S.length),O=N*N*4;switch(I.type){case 0:d=new Uint8Array(O);break;case 2:d=new Uint16Array(O);break;case 1:d=new Float32Array(O)}for(let g=S.length;g<T;g++)for(let S=0;S<6;S++)Y._uploadArrayBufferViewToTexture(I,d,S,g)}return Promise.all(C).then((()=>{U&&(Y._releaseTexture(I),U._swapAndDie(I)),k&&k.dispose(),o&&(I._lodTextureHigh&&I._lodTextureHigh._texture&&(I._lodTextureHigh._texture.isReady=!0),I._lodTextureMid&&I._lodTextureMid._texture&&(I._lodTextureMid._texture.isReady=!0),I._lodTextureLow&&I._lodTextureLow._texture&&(I._lodTextureLow._texture.isReady=!0))}))}function C(I,S){const d=(S=U(S)).irradiance;if(!d)return;const N=new T.e;O.p.FromArrayToRef(d.x,0,N.x),O.p.FromArrayToRef(d.y,0,N.y),O.p.FromArrayToRef(d.z,0,N.z),O.p.FromArrayToRef(d.xx,0,N.xx),O.p.FromArrayToRef(d.yy,0,N.yy),O.p.FromArrayToRef(d.zz,0,N.zz),O.p.FromArrayToRef(d.yz,0,N.yz),O.p.FromArrayToRef(d.zx,0,N.zx),O.p.FromArrayToRef(d.xy,0,N.xy),I._sphericalPolynomial=N}function n(I,S,d,N,O){const g=j(I.getEngine().createRawCubeTexture(null,I.width,I.format,I.type,I.generateMipMaps,I.invertY,I.samplingMode,I._compression),S).then((()=>I));return I.onRebuildCallback=I=>({proxy:g,isReady:!0,isAsync:!0}),I._source=13,I._bufferViewArrayArray=S,I._lodGenerationScale=N,I._lodGenerationOffset=O,I._sphericalPolynomial=d,j(I,S).then((()=>(I.isReady=!0,I)))}},10957:(I,S,d)=>{d.d(S,{b:()=>g});var N=d(1560),O=d(1551);class g{static ExpandRGBDTexture(I){const S=I._texture;if(!S||!I.isRGBD)return;const O=S.getEngine(),g=O.getCaps(),T=S.isReady;let q=!1;g.textureHalfFloatRender&&g.textureHalfFloatLinearFiltering?(q=!0,S.type=2):g.textureFloatRender&&g.textureFloatLinearFiltering&&(q=!0,S.type=1),q&&(S.isReady=!1,S._isRGBD=!1,S.invertY=!1);const a=async()=>{const g=O.isWebGPU,T=g?1:0;S.isReady=!1,g?await Promise.all([d.e(17).then(d.bind(d,13249)),d.e(18).then(d.bind(d,13259))]):await Promise.all([d.e(24).then(d.bind(d,13251)),d.e(25).then(d.bind(d,13268))]);const q=new N.e("rgbdDecode","rgbdDecode",null,null,1,null,3,O,!1,void 0,S.type,void 0,null,!1,void 0,T);q.externalTextureSamplerBinding=!0;const a=O.createRenderTargetTexture(S.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:S.samplingMode,type:S.type,format:5});q.onEffectCreatedObservable.addOnce((d=>{d.executeWhenCompiled((()=>{q.onApply=I=>{I._bindTexture("textureSampler",S),I.setFloat2("scale",1,1)},I.va().postProcessManager.directRender([q],a,!0),O.restoreDefaultFramebuffer(),O._releaseTexture(S),q&&q.dispose(),a._swapAndDie(S),S.isReady=!0}))}))};q&&(T?a():I.onLoadObservable.addOnce(a))}static EncodeTextureToRGBD(I,S){let d=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,O.b)("rgbdEncode",I,S,d,1,5)}}}}]);