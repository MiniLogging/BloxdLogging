/*! For license information please see 96t3hv.6.7e6291cc.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6],{10692:(N,q,R)=>{R.r(q),R.d(q,{getAnalytics:()=>CN,getGoogleAnalyticsClientId:()=>dN,initializeAnalytics:()=>KN,isSupported:()=>rN,logEvent:()=>Rq,setAnalyticsCollectionEnabled:()=>Nq,setConsent:()=>zq,setCurrentScreen:()=>aN,setDefaultEventParameters:()=>qq,setUserId:()=>pN,setUserProperties:()=>WN,settings:()=>kN});var z=R(10673),v=R(10690),B=R(10684),F=R(10677);let S,A;const y=new WeakMap,E=new WeakMap,t=new WeakMap,x=new WeakMap,e=new WeakMap;let b={get(N,q,R){if(N instanceof IDBTransaction){if("done"===q)return E.get(N);if("objectStoreNames"===q)return N.objectStoreNames||t.get(N);if("store"===q)return R.objectStoreNames[1]?void 0:R.objectStore(R.objectStoreNames[0])}return V(N[q])},set:(N,q,R)=>(N[q]=R,!0),has:(N,q)=>N instanceof IDBTransaction&&("done"===q||"store"===q)||q in N};function f(N){return N!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(A||(A=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(N)?function(){for(var q=arguments.length,R=new Array(q),z=0;z<q;z++)R[z]=arguments[z];return N.apply(H(this),R),V(y.get(this))}:function(){for(var q=arguments.length,R=new Array(q),z=0;z<q;z++)R[z]=arguments[z];return V(N.apply(H(this),R))}:function(q){for(var R=arguments.length,z=new Array(R>1?R-1:0),v=1;v<R;v++)z[v-1]=arguments[v];const B=N.call(H(this),q,...z);return t.set(B,q.sort?q.sort():[q]),V(B)}}function D(N){return"function"===typeof N?f(N):(N instanceof IDBTransaction&&function(N){if(E.has(N))return;const q=new Promise(((q,R)=>{const z=()=>{N.removeEventListener("complete",v),N.removeEventListener("error",B),N.removeEventListener("abort",B)},v=()=>{q(),z()},B=()=>{R(N.error||new DOMException("AbortError","AbortError")),z()};N.addEventListener("complete",v),N.addEventListener("error",B),N.addEventListener("abort",B)}));E.set(N,q)}(N),q=N,(S||(S=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((N=>q instanceof N))?new Proxy(N,b):N);var q}function V(N){if(N instanceof IDBRequest)return function(N){const q=new Promise(((q,R)=>{const z=()=>{N.removeEventListener("success",v),N.removeEventListener("error",B)},v=()=>{q(V(N.result)),z()},B=()=>{R(N.error),z()};N.addEventListener("success",v),N.addEventListener("error",B)}));return q.then((q=>{q instanceof IDBCursor&&y.set(q,N)})).catch((()=>{})),e.set(q,N),q}(N);if(x.has(N))return x.get(N);const q=D(N);return q!==N&&(x.set(N,q),e.set(q,N)),q}const H=N=>e.get(N);const Y=["get","getKey","getAll","getAllKeys","count"],T=["put","add","delete","clear"],L=new Map;function X(N,q){if(!(N instanceof IDBDatabase)||q in N||"string"!==typeof q)return;if(L.get(q))return L.get(q);const R=q.replace(/FromIndex$/,""),z=q!==R,v=T.includes(R);if(!(R in(z?IDBIndex:IDBObjectStore).prototype)||!v&&!Y.includes(R))return;const B=async function(N){const q=this.transaction(N,v?"readwrite":"readonly");let B=q.store;for(var F=arguments.length,S=new Array(F>1?F-1:0),A=1;A<F;A++)S[A-1]=arguments[A];return z&&(B=B.index(S.shift())),(await Promise.all([B[R](...S),v&&q.done]))[0]};return L.set(q,B),B}b=(N=>({...N,get:(q,R,z)=>X(q,R)||N.get(q,R,z),has:(q,R)=>!!X(q,R)||N.has(q,R)}))(b);const Q="@firebase/installations",h="0.6.4",u=1e4,w=`w:${h}`,c="FIS_v2",n=36e5,G={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},s=new B.f("installations","Installations",G);function Z(N){return N instanceof B.h&&N.code.includes("request-failed")}function J(N){let{projectId:q}=N;return`https://firebaseinstallations.googleapis.com/v1/projects/${q}/installations`}function M(N){return{token:N.token,requestStatus:2,expiresIn:(q=N.expiresIn,Number(q.replace("s","000"))),creationTime:Date.now()};var q}async function m(N,q){const R=(await q.json()).error;return s.create("request-failed",{requestName:N,serverCode:R.code,serverMessage:R.message,serverStatus:R.status})}function g(N){let{apiKey:q}=N;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":q})}function j(N,q){let{refreshToken:R}=q;const z=g(N);return z.append("Authorization",function(N){return`${c} ${N}`}(R)),z}async function l(N){const q=await N();return q.status>=500&&q.status<600?N():q}function I(N){return new Promise((q=>{setTimeout(q,N)}))}const U=/^[cdef][\w-]{21}$/;function O(){try{const N=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(N),N[0]=112+N[0]%16;const q=function(N){const q=(R=N,btoa(String.fromCharCode(...R)).replace(/\+/g,"-").replace(/\//g,"_"));var R;return q.substr(0,22)}(N);return U.test(q)?q:""}catch(N){return""}}function i(N){return`${N.appName}!${N.appId}`}const P=new Map;function k(N,q){const R=i(N);o(R,q),function(N,q){const R=K();R&&R.postMessage({key:N,fid:q});r()}(R,q)}function o(N,q){const R=P.get(N);if(R)for(const z of R)z(q)}let C=null;function K(){return!C&&"BroadcastChannel"in self&&(C=new BroadcastChannel("[Firebase] FID Change"),C.onmessage=N=>{o(N.data.key,N.data.fid)}),C}function r(){0===P.size&&C&&(C.close(),C=null)}const a="firebase-installations-store";let d=null;function p(){return d||(d=function(N,q){let{blocked:R,upgrade:z,blocking:v,terminated:B}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const F=indexedDB.open(N,q),S=V(F);return z&&F.addEventListener("upgradeneeded",(N=>{z(V(F.result),N.oldVersion,N.newVersion,V(F.transaction))})),R&&F.addEventListener("blocked",(()=>R())),S.then((N=>{B&&N.addEventListener("close",(()=>B())),v&&N.addEventListener("versionchange",(()=>v()))})).catch((()=>{})),S}("firebase-installations-database",1,{upgrade:(N,q)=>{if(0===q)N.createObjectStore(a)}})),d}async function W(N,q){const R=i(N),z=(await p()).transaction(a,"readwrite"),v=z.objectStore(a),B=await v.get(R);return await v.put(q,R),await z.done,B&&B.fid===q.fid||k(N,q.fid),q}async function NN(N){const q=i(N),R=(await p()).transaction(a,"readwrite");await R.objectStore(a).delete(q),await R.done}async function qN(N,q){const R=i(N),z=(await p()).transaction(a,"readwrite"),v=z.objectStore(a),B=await v.get(R),F=q(B);return void 0===F?await v.delete(R):await v.put(F,R),await z.done,!F||B&&B.fid===F.fid||k(N,F.fid),F}async function RN(N){let q;const R=await qN(N.appConfig,(R=>{const z=function(N){const q=N||{fid:O(),registrationStatus:0};return BN(q)}(R),v=function(N,q){if(0===q.registrationStatus){if(!navigator.onLine){return{installationEntry:q,registrationPromise:Promise.reject(s.create("app-offline"))}}const R={fid:q.fid,registrationStatus:1,registrationTime:Date.now()},z=async function(N,q){try{const R=await async function(N,q){let{appConfig:R,heartbeatServiceProvider:z}=N,{fid:v}=q;const B=J(R),F=g(R),S=z.getImmediate({optional:!0});if(S){const N=await S.getHeartbeatsHeader();N&&F.append("x-firebase-client",N)}const A={fid:v,authVersion:c,appId:R.appId,sdkVersion:w},y={method:"POST",headers:F,body:JSON.stringify(A)},E=await l((()=>fetch(B,y)));if(E.ok){const N=await E.json();return{fid:N.fid||v,registrationStatus:2,refreshToken:N.refreshToken,authToken:M(N.authToken)}}throw await m("Create Installation",E)}(N,q);return W(N.appConfig,R)}catch(R){throw Z(R)&&409===R.customData.serverCode?await NN(N.appConfig):await W(N.appConfig,{fid:q.fid,registrationStatus:0}),R}}(N,R);return{installationEntry:R,registrationPromise:z}}return 1===q.registrationStatus?{installationEntry:q,registrationPromise:zN(N)}:{installationEntry:q}}(N,z);return q=v.registrationPromise,v.installationEntry}));return""===R.fid?{installationEntry:await q}:{installationEntry:R,registrationPromise:q}}async function zN(N){let q=await vN(N.appConfig);for(;1===q.registrationStatus;)await I(100),q=await vN(N.appConfig);if(0===q.registrationStatus){const{installationEntry:q,registrationPromise:R}=await RN(N);return R||q}return q}function vN(N){return qN(N,(N=>{if(!N)throw s.create("installation-not-found");return BN(N)}))}function BN(N){return 1===(q=N).registrationStatus&&q.registrationTime+u<Date.now()?{fid:N.fid,registrationStatus:0}:N;var q}async function FN(N,q){let{appConfig:R,heartbeatServiceProvider:z}=N;const v=function(N,q){let{fid:R}=q;return`${J(N)}/${R}/authTokens:generate`}(R,q),B=j(R,q),F=z.getImmediate({optional:!0});if(F){const N=await F.getHeartbeatsHeader();N&&B.append("x-firebase-client",N)}const S={installation:{sdkVersion:w,appId:R.appId}},A={method:"POST",headers:B,body:JSON.stringify(S)},y=await l((()=>fetch(v,A)));if(y.ok){return M(await y.json())}throw await m("Generate Auth Token",y)}async function SN(N){let q,R=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const z=await qN(N.appConfig,(z=>{if(!yN(z))throw s.create("not-registered");const v=z.authToken;if(!R&&function(N){return 2===N.requestStatus&&!function(N){const q=Date.now();return q<N.creationTime||N.creationTime+N.expiresIn<q+n}(N)}(v))return z;if(1===v.requestStatus)return q=async function(N,q){let R=await AN(N.appConfig);for(;1===R.authToken.requestStatus;)await I(100),R=await AN(N.appConfig);const z=R.authToken;return 0===z.requestStatus?SN(N,q):z}(N,R),z;{if(!navigator.onLine)throw s.create("app-offline");const R=function(N){const q={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},N),{authToken:q})}(z);return q=async function(N,q){try{const R=await FN(N,q),z=Object.assign(Object.assign({},q),{authToken:R});return await W(N.appConfig,z),R}catch(R){if(!Z(R)||401!==R.customData.serverCode&&404!==R.customData.serverCode){const R=Object.assign(Object.assign({},q),{authToken:{requestStatus:0}});await W(N.appConfig,R)}else await NN(N.appConfig);throw R}}(N,R),R}}));return q?await q:z.authToken}function AN(N){return qN(N,(N=>{if(!yN(N))throw s.create("not-registered");const q=N.authToken;return 1===(R=q).requestStatus&&R.requestTime+u<Date.now()?Object.assign(Object.assign({},N),{authToken:{requestStatus:0}}):N;var R}))}function yN(N){return void 0!==N&&2===N.registrationStatus}async function EN(N){let q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const R=N;await async function(N){const{registrationPromise:q}=await RN(N);q&&await q}(R);return(await SN(R,q)).token}function tN(N){return s.create("missing-app-config-values",{valueName:N})}const xN="installations",eN=N=>{const q=N.getProvider("app").getImmediate(),R=function(N){if(!N||!N.options)throw tN("App Configuration");if(!N.name)throw tN("App Name");const q=["projectId","apiKey","appId"];for(const R of q)if(!N.options[R])throw tN(R);return{appName:N.name,projectId:N.options.projectId,apiKey:N.options.apiKey,appId:N.options.appId}}(q);return{app:q,appConfig:R,heartbeatServiceProvider:(0,z.A)(q,"heartbeat"),_delete:()=>Promise.resolve()}},bN=N=>{const q=N.getProvider("app").getImmediate(),R=(0,z.A)(q,xN).getImmediate();return{getId:()=>async function(N){const q=N,{installationEntry:R,registrationPromise:z}=await RN(q);return z?z.catch(console.error):SN(q).catch(console.error),R.fid}(R),getToken:N=>EN(R,N)}};(0,z.D)(new F.f(xN,eN,"PUBLIC")),(0,z.D)(new F.f("installations-internal",bN,"PRIVATE")),(0,z._)(Q,h),(0,z._)(Q,h,"esm2017");const fN="analytics",DN="https://www.googletagmanager.com/gtag/js",VN=new v.f("@firebase/analytics"),HN={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},YN=new B.f("analytics","Analytics",HN);function TN(N){if(!N.startsWith(DN)){const q=YN.create("invalid-gtag-resource",{gtagURL:N});return VN.warn(q.message),""}return N}function LN(N){return Promise.all(N.map((N=>N.catch((N=>N)))))}function XN(N,q){const R=function(N,q){let R;return window.trustedTypes&&(R=window.trustedTypes.createPolicy(N,q)),R}("firebase-js-sdk-policy",{createScriptURL:TN}),z=document.createElement("script"),v=`${DN}?l=${N}&id=${q}`;z.src=R?null===R||void 0===R?void 0:R.createScriptURL(v):v,z.async=!0,document.head.appendChild(z)}function QN(N,q,R,z){return async function(v){try{for(var B=arguments.length,F=new Array(B>1?B-1:0),S=1;S<B;S++)F[S-1]=arguments[S];if("event"===v){const[z,v]=F;await async function(N,q,R,z,v){try{let B=[];if(v&&v.send_to){let N=v.send_to;Array.isArray(N)||(N=[N]);const z=await LN(R);for(const R of N){const N=z.find((N=>N.measurementId===R)),v=N&&q[N.appId];if(!v){B=[];break}B.push(v)}}0===B.length&&(B=Object.values(q)),await Promise.all(B),N("event",z,v||{})}catch(B){VN.error(B)}}(N,q,R,z,v)}else if("config"===v){const[v,B]=F;await async function(N,q,R,z,v,B){const F=z[v];try{if(F)await q[F];else{const N=(await LN(R)).find((N=>N.measurementId===v));N&&await q[N.appId]}}catch(S){VN.error(S)}N("config",v,B)}(N,q,R,z,v,B)}else if("consent"===v){const[q]=F;N("consent","update",q)}else if("get"===v){const[q,R,z]=F;N("get",q,R,z)}else if("set"===v){const[q]=F;N("set",q)}else N(v,...F)}catch(A){VN.error(A)}}}const hN=new class{constructor(){let N=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=N,this.intervalMillis=q}getThrottleMetadata(N){return this.throttleMetadata[N]}setThrottleMetadata(N,q){this.throttleMetadata[N]=q}deleteThrottleMetadata(N){delete this.throttleMetadata[N]}};function uN(N){return new Headers({Accept:"application/json","x-goog-api-key":N})}async function wN(N){let q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:hN,R=arguments.length>2?arguments[2]:void 0;const{appId:z,apiKey:v,measurementId:B}=N.options;if(!z)throw YN.create("no-app-id");if(!v){if(B)return{measurementId:B,appId:z};throw YN.create("no-api-key")}const F=q.getThrottleMetadata(z)||{backoffCount:0,throttleEndTimeMillis:Date.now()},S=new nN;return setTimeout((async()=>{S.abort()}),void 0!==R?R:6e4),cN({appId:z,apiKey:v,measurementId:B},F,S,q)}async function cN(N,q,R){let{throttleEndTimeMillis:z,backoffCount:v}=q,F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:hN;var S;const{appId:A,measurementId:y}=N;try{await function(N,q){return new Promise(((R,z)=>{const v=Math.max(q-Date.now(),0),B=setTimeout(R,v);N.addEventListener((()=>{clearTimeout(B),z(YN.create("fetch-throttle",{throttleEndTimeMillis:q}))}))}))}(R,z)}catch(E){if(y)return VN.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${y} provided in the "measurementId" field in the local Firebase config. [${null===E||void 0===E?void 0:E.message}]`),{appId:A,measurementId:y};throw E}try{const q=await async function(N){var q;const{appId:R,apiKey:z}=N,v={method:"GET",headers:uN(z)},B="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",R),F=await fetch(B,v);if(200!==F.status&&304!==F.status){let N="";try{const R=await F.json();(null===(q=R.error)||void 0===q?void 0:q.message)&&(N=R.error.message)}catch(S){}throw YN.create("config-fetch-failed",{httpStatus:F.status,responseMessage:N})}return F.json()}(N);return F.deleteThrottleMetadata(A),q}catch(E){const q=E;if(!function(N){if(!(N instanceof B.h)||!N.customData)return!1;const q=Number(N.customData.httpStatus);return 429===q||500===q||503===q||504===q}(q)){if(F.deleteThrottleMetadata(A),y)return VN.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${y} provided in the "measurementId" field in the local Firebase config. [${null===q||void 0===q?void 0:q.message}]`),{appId:A,measurementId:y};throw E}const z=503===Number(null===(S=null===q||void 0===q?void 0:q.customData)||void 0===S?void 0:S.httpStatus)?(0,B.r)(v,F.intervalMillis,30):(0,B.r)(v,F.intervalMillis),t={throttleEndTimeMillis:Date.now()+z,backoffCount:v+1};return F.setThrottleMetadata(A,t),VN.debug(`Calling attemptFetch again in ${z} millis`),cN(N,t,R,F)}}class nN{constructor(){this.listeners=[]}addEventListener(N){this.listeners.push(N)}abort(){this.listeners.forEach((N=>N()))}}let GN,sN;function ZN(N){sN=N}function JN(N){GN=N}async function MN(N,q,R,z,v,F,S){var A;const y=wN(N);y.then((q=>{R[q.measurementId]=q.appId,N.options.measurementId&&q.measurementId!==N.options.measurementId&&VN.warn(`The measurement ID in the local Firebase config (${N.options.measurementId}) does not match the measurement ID fetched from the server (${q.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((N=>VN.error(N))),q.push(y);const E=async function(){if(!(0,B._)())return VN.warn(YN.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,B.eb)()}catch(N){return VN.warn(YN.create("indexeddb-unavailable",{errorInfo:null===N||void 0===N?void 0:N.toString()}).message),!1}return!0}().then((N=>N?z.getId():void 0)),[t,x]=await Promise.all([y,E]);(function(N){const q=window.document.getElementsByTagName("script");for(const R of Object.values(q))if(R.src&&R.src.includes(DN)&&R.src.includes(N))return R;return null})(F)||XN(F,t.measurementId),sN&&(v("consent","default",sN),ZN(void 0)),v("js",new Date);const e=null!==(A=null===S||void 0===S?void 0:S.config)&&void 0!==A?A:{};return e.origin="firebase",e.update=!0,null!=x&&(e.firebase_id=x),v("config",t.measurementId,e),GN&&(v("set",GN),JN(void 0)),t.measurementId}class mN{constructor(N){this.app=N}_delete(){return delete gN[this.app.options.appId],Promise.resolve()}}let gN={},jN=[];const lN={};let IN,UN,ON="dataLayer",iN="gtag",PN=!1;function kN(N){if(PN)throw YN.create("already-initialized");N.dataLayerName&&(ON=N.dataLayerName),N.gtagName&&(iN=N.gtagName)}function oN(N,q,R){!function(){const N=[];if((0,B.R)()&&N.push("This is a browser extension environment."),(0,B.j)()||N.push("Cookies are not available."),N.length>0){const q=N.map(((N,q)=>`(${q+1}) ${N}`)).join(" "),R=YN.create("invalid-analytics-context",{errorInfo:q});VN.warn(R.message)}}();const z=N.options.appId;if(!z)throw YN.create("no-app-id");if(!N.options.apiKey){if(!N.options.measurementId)throw YN.create("no-api-key");VN.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${N.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=gN[z])throw YN.create("already-exists",{id:z});if(!PN){!function(N){let q=[];Array.isArray(window[N])?q=window[N]:window[N]=q}(ON);const{wrappedGtag:N,gtagCore:q}=function(N,q,R,z,v){let B=function(){for(var N=arguments.length,q=new Array(N),R=0;R<N;R++)q[R]=arguments[R];window[z].push(arguments)};return window[v]&&"function"===typeof window[v]&&(B=window[v]),window[v]=QN(B,N,q,R),{gtagCore:B,wrappedGtag:window[v]}}(gN,jN,lN,ON,iN);UN=N,IN=q,PN=!0}gN[z]=MN(N,jN,lN,q,IN,ON,R);return new mN(N)}function CN(){let N=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,z.S)();N=(0,B.K)(N);const q=(0,z.A)(N,fN);return q.isInitialized()?q.getImmediate():KN(N)}function KN(N){let q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const R=(0,z.A)(N,fN);if(R.isInitialized()){const N=R.getImmediate();if((0,B.x)(q,R.getOptions()))return N;throw YN.create("already-initialized")}return R.initialize({options:q})}async function rN(){if((0,B.R)())return!1;if(!(0,B.j)())return!1;if(!(0,B._)())return!1;try{return await(0,B.eb)()}catch(N){return!1}}function aN(N,q,R){N=(0,B.K)(N),async function(N,q,R,z){if(z&&z.global)return N("set",{screen_name:R}),Promise.resolve();N("config",await q,{update:!0,screen_name:R})}(UN,gN[N.app.options.appId],q,R).catch((N=>VN.error(N)))}async function dN(N){return N=(0,B.K)(N),async function(N,q){const R=await q;return new Promise(((q,z)=>{N("get",R,"client_id",(N=>{N||z(YN.create("no-client-id")),q(N)}))}))}(UN,gN[N.app.options.appId])}function pN(N,q,R){N=(0,B.K)(N),async function(N,q,R,z){if(z&&z.global)return N("set",{user_id:R}),Promise.resolve();N("config",await q,{update:!0,user_id:R})}(UN,gN[N.app.options.appId],q,R).catch((N=>VN.error(N)))}function WN(N,q,R){N=(0,B.K)(N),async function(N,q,R,z){if(z&&z.global){const q={};for(const N of Object.keys(R))q[`user_properties.${N}`]=R[N];return N("set",q),Promise.resolve()}N("config",await q,{update:!0,user_properties:R})}(UN,gN[N.app.options.appId],q,R).catch((N=>VN.error(N)))}function Nq(N,q){N=(0,B.K)(N),async function(N,q){const R=await N;window[`ga-disable-${R}`]=!q}(gN[N.app.options.appId],q).catch((N=>VN.error(N)))}function qq(N){UN?UN("set",N):JN(N)}function Rq(N,q,R,z){N=(0,B.K)(N),async function(N,q,R,z,v){if(v&&v.global)N("event",R,z);else{const v=await q;N("event",R,Object.assign(Object.assign({},z),{send_to:v}))}}(UN,gN[N.app.options.appId],q,R,z).catch((N=>VN.error(N)))}function zq(N){UN?UN("consent","update",N):ZN(N)}const vq="@firebase/analytics",Bq="0.10.0";(0,z.D)(new F.f(fN,((N,q)=>{let{options:R}=q;return oN(N.getProvider("app").getImmediate(),N.getProvider("installations-internal").getImmediate(),R)}),"PUBLIC")),(0,z.D)(new F.f("analytics-internal",(function(N){try{const q=N.getProvider(fN).getImmediate();return{logEvent:(N,R,z)=>Rq(q,N,R,z)}}catch(q){throw YN.create("interop-component-reg-failed",{reason:q})}}),"PRIVATE")),(0,z._)(vq,Bq),(0,z._)(vq,Bq,"esm2017")}}]);