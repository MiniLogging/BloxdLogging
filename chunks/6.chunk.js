/*! For license information please see 5sc22.6.d6e43167.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6],{10987:(Z,x,F)=>{F.r(x),F.d(x,{getAnalytics:()=>nZ,getGoogleAnalyticsClientId:()=>rZ,initializeAnalytics:()=>VZ,isSupported:()=>aZ,logEvent:()=>Fx,setAnalyticsCollectionEnabled:()=>Zx,setConsent:()=>ux,setCurrentScreen:()=>IZ,setDefaultEventParameters:()=>xx,setUserId:()=>zZ,setUserProperties:()=>PZ,settings:()=>gZ});var u=F(10965),G=F(10980),f=F(10976),Y=F(10969);let j,d;const t=new WeakMap,o=new WeakMap,c=new WeakMap,s=new WeakMap,J=new WeakMap;let p={get(Z,x,F){if(Z instanceof IDBTransaction){if("done"===x)return o.get(Z);if("objectStoreNames"===x)return Z.objectStoreNames||c.get(Z);if("store"===x)return F.objectStoreNames[1]?void 0:F.objectStore(F.objectStoreNames[0])}return M(Z[x])},set:(Z,x,F)=>(Z[x]=F,!0),has:(Z,x)=>Z instanceof IDBTransaction&&("done"===x||"store"===x)||x in Z};function U(Z){return Z!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(d||(d=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(Z)?function(){for(var x=arguments.length,F=new Array(x),u=0;u<x;u++)F[u]=arguments[u];return Z.apply(m(this),F),M(t.get(this))}:function(){for(var x=arguments.length,F=new Array(x),u=0;u<x;u++)F[u]=arguments[u];return M(Z.apply(m(this),F))}:function(x){for(var F=arguments.length,u=new Array(F>1?F-1:0),G=1;G<F;G++)u[G-1]=arguments[G];const f=Z.call(m(this),x,...u);return c.set(f,x.sort?x.sort():[x]),M(f)}}function k(Z){return"function"===typeof Z?U(Z):(Z instanceof IDBTransaction&&function(Z){if(o.has(Z))return;const x=new Promise(((x,F)=>{const u=()=>{Z.removeEventListener("complete",G),Z.removeEventListener("error",f),Z.removeEventListener("abort",f)},G=()=>{x(),u()},f=()=>{F(Z.error||new DOMException("AbortError","AbortError")),u()};Z.addEventListener("complete",G),Z.addEventListener("error",f),Z.addEventListener("abort",f)}));o.set(Z,x)}(Z),x=Z,(j||(j=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((Z=>x instanceof Z))?new Proxy(Z,p):Z);var x}function M(Z){if(Z instanceof IDBRequest)return function(Z){const x=new Promise(((x,F)=>{const u=()=>{Z.removeEventListener("success",G),Z.removeEventListener("error",f)},G=()=>{x(M(Z.result)),u()},f=()=>{F(Z.error),u()};Z.addEventListener("success",G),Z.addEventListener("error",f)}));return x.then((x=>{x instanceof IDBCursor&&t.set(x,Z)})).catch((()=>{})),J.set(x,Z),x}(Z);if(s.has(Z))return s.get(Z);const x=k(Z);return x!==Z&&(s.set(Z,x),J.set(x,Z)),x}const m=Z=>J.get(Z);const C=["get","getKey","getAll","getAllKeys","count"],L=["put","add","delete","clear"],H=new Map;function S(Z,x){if(!(Z instanceof IDBDatabase)||x in Z||"string"!==typeof x)return;if(H.get(x))return H.get(x);const F=x.replace(/FromIndex$/,""),u=x!==F,G=L.includes(F);if(!(F in(u?IDBIndex:IDBObjectStore).prototype)||!G&&!C.includes(F))return;const f=async function(Z){const x=this.transaction(Z,G?"readwrite":"readonly");let f=x.store;for(var Y=arguments.length,j=new Array(Y>1?Y-1:0),d=1;d<Y;d++)j[d-1]=arguments[d];return u&&(f=f.index(j.shift())),(await Promise.all([f[F](...j),G&&x.done]))[0]};return H.set(x,f),f}p=(Z=>({...Z,get:(x,F,u)=>S(x,F)||Z.get(x,F,u),has:(x,F)=>!!S(x,F)||Z.has(x,F)}))(p);const K="@firebase/installations",y="0.6.4",q=1e4,R=`w:${y}`,B="FIS_v2",v=36e5,l={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},i=new f.f("installations","Installations",l);function e(Z){return Z instanceof f.j&&Z.code.includes("request-failed")}function b(Z){let{projectId:x}=Z;return`https://firebaseinstallations.googleapis.com/v1/projects/${x}/installations`}function E(Z){return{token:Z.token,requestStatus:2,expiresIn:(x=Z.expiresIn,Number(x.replace("s","000"))),creationTime:Date.now()};var x}async function w(Z,x){const F=(await x.json()).error;return i.create("request-failed",{requestName:Z,serverCode:F.code,serverMessage:F.message,serverStatus:F.status})}function T(Z){let{apiKey:x}=Z;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":x})}function N(Z,x){let{refreshToken:F}=x;const u=T(Z);return u.append("Authorization",function(Z){return`${B} ${Z}`}(F)),u}async function W(Z){const x=await Z();return x.status>=500&&x.status<600?Z():x}function A(Z){return new Promise((x=>{setTimeout(x,Z)}))}const h=/^[cdef][\w-]{21}$/;function X(){try{const Z=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(Z),Z[0]=112+Z[0]%16;const x=function(Z){const x=(F=Z,btoa(String.fromCharCode(...F)).replace(/\+/g,"-").replace(/\//g,"_"));var F;return x.substr(0,22)}(Z);return h.test(x)?x:""}catch(Z){return""}}function D(Z){return`${Z.appName}!${Z.appId}`}const Q=new Map;function g(Z,x){const F=D(Z);O(F,x),function(Z,x){const F=V();F&&F.postMessage({key:Z,fid:x});a()}(F,x)}function O(Z,x){const F=Q.get(Z);if(F)for(const u of F)u(x)}let n=null;function V(){return!n&&"BroadcastChannel"in self&&(n=new BroadcastChannel("[Firebase] FID Change"),n.onmessage=Z=>{O(Z.data.key,Z.data.fid)}),n}function a(){0===Q.size&&n&&(n.close(),n=null)}const I="firebase-installations-store";let r=null;function z(){return r||(r=function(Z,x){let{blocked:F,upgrade:u,blocking:G,terminated:f}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const Y=indexedDB.open(Z,x),j=M(Y);return u&&Y.addEventListener("upgradeneeded",(Z=>{u(M(Y.result),Z.oldVersion,Z.newVersion,M(Y.transaction))})),F&&Y.addEventListener("blocked",(()=>F())),j.then((Z=>{f&&Z.addEventListener("close",(()=>f())),G&&Z.addEventListener("versionchange",(()=>G()))})).catch((()=>{})),j}("firebase-installations-database",1,{upgrade:(Z,x)=>{if(0===x)Z.createObjectStore(I)}})),r}async function P(Z,x){const F=D(Z),u=(await z()).transaction(I,"readwrite"),G=u.objectStore(I),f=await G.get(F);return await G.put(x,F),await u.done,f&&f.fid===x.fid||g(Z,x.fid),x}async function ZZ(Z){const x=D(Z),F=(await z()).transaction(I,"readwrite");await F.objectStore(I).delete(x),await F.done}async function xZ(Z,x){const F=D(Z),u=(await z()).transaction(I,"readwrite"),G=u.objectStore(I),f=await G.get(F),Y=x(f);return void 0===Y?await G.delete(F):await G.put(Y,F),await u.done,!Y||f&&f.fid===Y.fid||g(Z,Y.fid),Y}async function FZ(Z){let x;const F=await xZ(Z.appConfig,(F=>{const u=function(Z){const x=Z||{fid:X(),registrationStatus:0};return fZ(x)}(F),G=function(Z,x){if(0===x.registrationStatus){if(!navigator.onLine){return{installationEntry:x,registrationPromise:Promise.reject(i.create("app-offline"))}}const F={fid:x.fid,registrationStatus:1,registrationTime:Date.now()},u=async function(Z,x){try{const F=await async function(Z,x){let{appConfig:F,heartbeatServiceProvider:u}=Z,{fid:G}=x;const f=b(F),Y=T(F),j=u.getImmediate({optional:!0});if(j){const Z=await j.getHeartbeatsHeader();Z&&Y.append("x-firebase-client",Z)}const d={fid:G,authVersion:B,appId:F.appId,sdkVersion:R},t={method:"POST",headers:Y,body:JSON.stringify(d)},o=await W((()=>fetch(f,t)));if(o.ok){const Z=await o.json();return{fid:Z.fid||G,registrationStatus:2,refreshToken:Z.refreshToken,authToken:E(Z.authToken)}}throw await w("Create Installation",o)}(Z,x);return P(Z.appConfig,F)}catch(F){throw e(F)&&409===F.customData.serverCode?await ZZ(Z.appConfig):await P(Z.appConfig,{fid:x.fid,registrationStatus:0}),F}}(Z,F);return{installationEntry:F,registrationPromise:u}}return 1===x.registrationStatus?{installationEntry:x,registrationPromise:uZ(Z)}:{installationEntry:x}}(Z,u);return x=G.registrationPromise,G.installationEntry}));return""===F.fid?{installationEntry:await x}:{installationEntry:F,registrationPromise:x}}async function uZ(Z){let x=await GZ(Z.appConfig);for(;1===x.registrationStatus;)await A(100),x=await GZ(Z.appConfig);if(0===x.registrationStatus){const{installationEntry:x,registrationPromise:F}=await FZ(Z);return F||x}return x}function GZ(Z){return xZ(Z,(Z=>{if(!Z)throw i.create("installation-not-found");return fZ(Z)}))}function fZ(Z){return 1===(x=Z).registrationStatus&&x.registrationTime+q<Date.now()?{fid:Z.fid,registrationStatus:0}:Z;var x}async function YZ(Z,x){let{appConfig:F,heartbeatServiceProvider:u}=Z;const G=function(Z,x){let{fid:F}=x;return`${b(Z)}/${F}/authTokens:generate`}(F,x),f=N(F,x),Y=u.getImmediate({optional:!0});if(Y){const Z=await Y.getHeartbeatsHeader();Z&&f.append("x-firebase-client",Z)}const j={installation:{sdkVersion:R,appId:F.appId}},d={method:"POST",headers:f,body:JSON.stringify(j)},t=await W((()=>fetch(G,d)));if(t.ok){return E(await t.json())}throw await w("Generate Auth Token",t)}async function jZ(Z){let x,F=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const u=await xZ(Z.appConfig,(u=>{if(!tZ(u))throw i.create("not-registered");const G=u.authToken;if(!F&&function(Z){return 2===Z.requestStatus&&!function(Z){const x=Date.now();return x<Z.creationTime||Z.creationTime+Z.expiresIn<x+v}(Z)}(G))return u;if(1===G.requestStatus)return x=async function(Z,x){let F=await dZ(Z.appConfig);for(;1===F.authToken.requestStatus;)await A(100),F=await dZ(Z.appConfig);const u=F.authToken;return 0===u.requestStatus?jZ(Z,x):u}(Z,F),u;{if(!navigator.onLine)throw i.create("app-offline");const F=function(Z){const x={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},Z),{authToken:x})}(u);return x=async function(Z,x){try{const F=await YZ(Z,x),u=Object.assign(Object.assign({},x),{authToken:F});return await P(Z.appConfig,u),F}catch(F){if(!e(F)||401!==F.customData.serverCode&&404!==F.customData.serverCode){const F=Object.assign(Object.assign({},x),{authToken:{requestStatus:0}});await P(Z.appConfig,F)}else await ZZ(Z.appConfig);throw F}}(Z,F),F}}));return x?await x:u.authToken}function dZ(Z){return xZ(Z,(Z=>{if(!tZ(Z))throw i.create("not-registered");const x=Z.authToken;return 1===(F=x).requestStatus&&F.requestTime+q<Date.now()?Object.assign(Object.assign({},Z),{authToken:{requestStatus:0}}):Z;var F}))}function tZ(Z){return void 0!==Z&&2===Z.registrationStatus}async function oZ(Z){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const F=Z;await async function(Z){const{registrationPromise:x}=await FZ(Z);x&&await x}(F);return(await jZ(F,x)).token}function cZ(Z){return i.create("missing-app-config-values",{valueName:Z})}const sZ="installations",JZ=Z=>{const x=Z.getProvider("app").getImmediate(),F=function(Z){if(!Z||!Z.options)throw cZ("App Configuration");if(!Z.name)throw cZ("App Name");const x=["projectId","apiKey","appId"];for(const F of x)if(!Z.options[F])throw cZ(F);return{appName:Z.name,projectId:Z.options.projectId,apiKey:Z.options.apiKey,appId:Z.options.appId}}(x);return{app:x,appConfig:F,heartbeatServiceProvider:(0,u.w)(x,"heartbeat"),_delete:()=>Promise.resolve()}},pZ=Z=>{const x=Z.getProvider("app").getImmediate(),F=(0,u.w)(x,sZ).getImmediate();return{getId:()=>async function(Z){const x=Z,{installationEntry:F,registrationPromise:u}=await FZ(x);return u?u.catch(console.error):jZ(x).catch(console.error),F.fid}(F),getToken:Z=>oZ(F,Z)}};(0,u.y)(new Y.f(sZ,JZ,"PUBLIC")),(0,u.y)(new Y.f("installations-internal",pZ,"PRIVATE")),(0,u.S)(K,y),(0,u.S)(K,y,"esm2017");const UZ="analytics",kZ="https://www.googletagmanager.com/gtag/js",MZ=new G.f("@firebase/analytics"),mZ={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},CZ=new f.f("analytics","Analytics",mZ);function LZ(Z){if(!Z.startsWith(kZ)){const x=CZ.create("invalid-gtag-resource",{gtagURL:Z});return MZ.warn(x.message),""}return Z}function HZ(Z){return Promise.all(Z.map((Z=>Z.catch((Z=>Z)))))}function SZ(Z,x){const F=function(Z,x){let F;return window.trustedTypes&&(F=window.trustedTypes.createPolicy(Z,x)),F}("firebase-js-sdk-policy",{createScriptURL:LZ}),u=document.createElement("script"),G=`${kZ}?l=${Z}&id=${x}`;u.src=F?null===F||void 0===F?void 0:F.createScriptURL(G):G,u.async=!0,document.head.appendChild(u)}function KZ(Z,x,F,u){return async function(G){try{for(var f=arguments.length,Y=new Array(f>1?f-1:0),j=1;j<f;j++)Y[j-1]=arguments[j];if("event"===G){const[u,G]=Y;await async function(Z,x,F,u,G){try{let f=[];if(G&&G.send_to){let Z=G.send_to;Array.isArray(Z)||(Z=[Z]);const u=await HZ(F);for(const F of Z){const Z=u.find((Z=>Z.measurementId===F)),G=Z&&x[Z.appId];if(!G){f=[];break}f.push(G)}}0===f.length&&(f=Object.values(x)),await Promise.all(f),Z("event",u,G||{})}catch(f){MZ.error(f)}}(Z,x,F,u,G)}else if("config"===G){const[G,f]=Y;await async function(Z,x,F,u,G,f){const Y=u[G];try{if(Y)await x[Y];else{const Z=(await HZ(F)).find((Z=>Z.measurementId===G));Z&&await x[Z.appId]}}catch(j){MZ.error(j)}Z("config",G,f)}(Z,x,F,u,G,f)}else if("consent"===G){const[x]=Y;Z("consent","update",x)}else if("get"===G){const[x,F,u]=Y;Z("get",x,F,u)}else if("set"===G){const[x]=Y;Z("set",x)}else Z(G,...Y)}catch(d){MZ.error(d)}}}const yZ=new class{constructor(){let Z=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=Z,this.intervalMillis=x}getThrottleMetadata(Z){return this.throttleMetadata[Z]}setThrottleMetadata(Z,x){this.throttleMetadata[Z]=x}deleteThrottleMetadata(Z){delete this.throttleMetadata[Z]}};function qZ(Z){return new Headers({Accept:"application/json","x-goog-api-key":Z})}async function RZ(Z){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:yZ,F=arguments.length>2?arguments[2]:void 0;const{appId:u,apiKey:G,measurementId:f}=Z.options;if(!u)throw CZ.create("no-app-id");if(!G){if(f)return{measurementId:f,appId:u};throw CZ.create("no-api-key")}const Y=x.getThrottleMetadata(u)||{backoffCount:0,throttleEndTimeMillis:Date.now()},j=new vZ;return setTimeout((async()=>{j.abort()}),void 0!==F?F:6e4),BZ({appId:u,apiKey:G,measurementId:f},Y,j,x)}async function BZ(Z,x,F){let{throttleEndTimeMillis:u,backoffCount:G}=x,Y=arguments.length>3&&void 0!==arguments[3]?arguments[3]:yZ;var j;const{appId:d,measurementId:t}=Z;try{await function(Z,x){return new Promise(((F,u)=>{const G=Math.max(x-Date.now(),0),f=setTimeout(F,G);Z.addEventListener((()=>{clearTimeout(f),u(CZ.create("fetch-throttle",{throttleEndTimeMillis:x}))}))}))}(F,u)}catch(o){if(t)return MZ.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${t} provided in the "measurementId" field in the local Firebase config. [${null===o||void 0===o?void 0:o.message}]`),{appId:d,measurementId:t};throw o}try{const x=await async function(Z){var x;const{appId:F,apiKey:u}=Z,G={method:"GET",headers:qZ(u)},f="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",F),Y=await fetch(f,G);if(200!==Y.status&&304!==Y.status){let Z="";try{const F=await Y.json();(null===(x=F.error)||void 0===x?void 0:x.message)&&(Z=F.error.message)}catch(j){}throw CZ.create("config-fetch-failed",{httpStatus:Y.status,responseMessage:Z})}return Y.json()}(Z);return Y.deleteThrottleMetadata(d),x}catch(o){const x=o;if(!function(Z){if(!(Z instanceof f.j)||!Z.customData)return!1;const x=Number(Z.customData.httpStatus);return 429===x||500===x||503===x||504===x}(x)){if(Y.deleteThrottleMetadata(d),t)return MZ.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${t} provided in the "measurementId" field in the local Firebase config. [${null===x||void 0===x?void 0:x.message}]`),{appId:d,measurementId:t};throw o}const u=503===Number(null===(j=null===x||void 0===x?void 0:x.customData)||void 0===j?void 0:j.httpStatus)?(0,f.s)(G,Y.intervalMillis,30):(0,f.s)(G,Y.intervalMillis),c={throttleEndTimeMillis:Date.now()+u,backoffCount:G+1};return Y.setThrottleMetadata(d,c),MZ.debug(`Calling attemptFetch again in ${u} millis`),BZ(Z,c,F,Y)}}class vZ{constructor(){this.listeners=[]}addEventListener(Z){this.listeners.push(Z)}abort(){this.listeners.forEach((Z=>Z()))}}let lZ,iZ;function eZ(Z){iZ=Z}function bZ(Z){lZ=Z}async function EZ(Z,x,F,u,G,Y,j){var d;const t=RZ(Z);t.then((x=>{F[x.measurementId]=x.appId,Z.options.measurementId&&x.measurementId!==Z.options.measurementId&&MZ.warn(`The measurement ID in the local Firebase config (${Z.options.measurementId}) does not match the measurement ID fetched from the server (${x.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((Z=>MZ.error(Z))),x.push(t);const o=async function(){if(!(0,f.Y)())return MZ.warn(CZ.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,f.jb)()}catch(Z){return MZ.warn(CZ.create("indexeddb-unavailable",{errorInfo:null===Z||void 0===Z?void 0:Z.toString()}).message),!1}return!0}().then((Z=>Z?u.getId():void 0)),[c,s]=await Promise.all([t,o]);(function(Z){const x=window.document.getElementsByTagName("script");for(const F of Object.values(x))if(F.src&&F.src.includes(kZ)&&F.src.includes(Z))return F;return null})(Y)||SZ(Y,c.measurementId),iZ&&(G("consent","default",iZ),eZ(void 0)),G("js",new Date);const J=null!==(d=null===j||void 0===j?void 0:j.config)&&void 0!==d?d:{};return J.origin="firebase",J.update=!0,null!=s&&(J.firebase_id=s),G("config",c.measurementId,J),lZ&&(G("set",lZ),bZ(void 0)),c.measurementId}class wZ{constructor(Z){this.app=Z}_delete(){return delete TZ[this.app.options.appId],Promise.resolve()}}let TZ={},NZ=[];const WZ={};let AZ,hZ,XZ="dataLayer",DZ="gtag",QZ=!1;function gZ(Z){if(QZ)throw CZ.create("already-initialized");Z.dataLayerName&&(XZ=Z.dataLayerName),Z.gtagName&&(DZ=Z.gtagName)}function OZ(Z,x,F){!function(){const Z=[];if((0,f.Q)()&&Z.push("This is a browser extension environment."),(0,f.m)()||Z.push("Cookies are not available."),Z.length>0){const x=Z.map(((Z,x)=>`(${x+1}) ${Z}`)).join(" "),F=CZ.create("invalid-analytics-context",{errorInfo:x});MZ.warn(F.message)}}();const u=Z.options.appId;if(!u)throw CZ.create("no-app-id");if(!Z.options.apiKey){if(!Z.options.measurementId)throw CZ.create("no-api-key");MZ.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${Z.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=TZ[u])throw CZ.create("already-exists",{id:u});if(!QZ){!function(Z){let x=[];Array.isArray(window[Z])?x=window[Z]:window[Z]=x}(XZ);const{wrappedGtag:Z,gtagCore:x}=function(Z,x,F,u,G){let f=function(){for(var Z=arguments.length,x=new Array(Z),F=0;F<Z;F++)x[F]=arguments[F];window[u].push(arguments)};return window[G]&&"function"===typeof window[G]&&(f=window[G]),window[G]=KZ(f,Z,x,F),{gtagCore:f,wrappedGtag:window[G]}}(TZ,NZ,WZ,XZ,DZ);hZ=Z,AZ=x,QZ=!0}TZ[u]=EZ(Z,NZ,WZ,x,AZ,XZ,F);return new wZ(Z)}function nZ(){let Z=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,u.K)();Z=(0,f.N)(Z);const x=(0,u.w)(Z,UZ);return x.isInitialized()?x.getImmediate():VZ(Z)}function VZ(Z){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const F=(0,u.w)(Z,UZ);if(F.isInitialized()){const Z=F.getImmediate();if((0,f.A)(x,F.getOptions()))return Z;throw CZ.create("already-initialized")}return F.initialize({options:x})}async function aZ(){if((0,f.Q)())return!1;if(!(0,f.m)())return!1;if(!(0,f.Y)())return!1;try{return await(0,f.jb)()}catch(Z){return!1}}function IZ(Z,x,F){Z=(0,f.N)(Z),async function(Z,x,F,u){if(u&&u.global)return Z("set",{screen_name:F}),Promise.resolve();Z("config",await x,{update:!0,screen_name:F})}(hZ,TZ[Z.app.options.appId],x,F).catch((Z=>MZ.error(Z)))}async function rZ(Z){return Z=(0,f.N)(Z),async function(Z,x){const F=await x;return new Promise(((x,u)=>{Z("get",F,"client_id",(Z=>{Z||u(CZ.create("no-client-id")),x(Z)}))}))}(hZ,TZ[Z.app.options.appId])}function zZ(Z,x,F){Z=(0,f.N)(Z),async function(Z,x,F,u){if(u&&u.global)return Z("set",{user_id:F}),Promise.resolve();Z("config",await x,{update:!0,user_id:F})}(hZ,TZ[Z.app.options.appId],x,F).catch((Z=>MZ.error(Z)))}function PZ(Z,x,F){Z=(0,f.N)(Z),async function(Z,x,F,u){if(u&&u.global){const x={};for(const Z of Object.keys(F))x[`user_properties.${Z}`]=F[Z];return Z("set",x),Promise.resolve()}Z("config",await x,{update:!0,user_properties:F})}(hZ,TZ[Z.app.options.appId],x,F).catch((Z=>MZ.error(Z)))}function Zx(Z,x){Z=(0,f.N)(Z),async function(Z,x){const F=await Z;window[`ga-disable-${F}`]=!x}(TZ[Z.app.options.appId],x).catch((Z=>MZ.error(Z)))}function xx(Z){hZ?hZ("set",Z):bZ(Z)}function Fx(Z,x,F,u){Z=(0,f.N)(Z),async function(Z,x,F,u,G){if(G&&G.global)Z("event",F,u);else{const G=await x;Z("event",F,Object.assign(Object.assign({},u),{send_to:G}))}}(hZ,TZ[Z.app.options.appId],x,F,u).catch((Z=>MZ.error(Z)))}function ux(Z){hZ?hZ("consent","update",Z):eZ(Z)}const Gx="@firebase/analytics",fx="0.10.0";(0,u.y)(new Y.f(UZ,((Z,x)=>{let{options:F}=x;return OZ(Z.getProvider("app").getImmediate(),Z.getProvider("installations-internal").getImmediate(),F)}),"PUBLIC")),(0,u.y)(new Y.f("analytics-internal",(function(Z){try{const x=Z.getProvider(UZ).getImmediate();return{logEvent:(Z,F,u)=>Fx(x,Z,F,u)}}catch(x){throw CZ.create("interop-component-reg-failed",{reason:x})}}),"PRIVATE")),(0,u.S)(Gx,fx),(0,u.S)(Gx,fx,"esm2017")}}]);