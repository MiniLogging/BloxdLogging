"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6],{2160:(U,W,l)=>{var M=l(624),t=l(512),L=l(547),p=l(658),B=l(592),k=l(639);B.d.prototype._partialLoadFile=function(U,W,l,M){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(U,(U=>{l[W]=U,l._internalCount++,6===l._internalCount&&M(l)}),void 0,void 0,!0,((U,W)=>{t&&U&&t(U.status+" "+U.statusText,W)}))},B.d.prototype._cascadeLoadFiles=function(U,W,l){let M=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const t=[];t._internalCount=0;for(let L=0;L<6;L++)this._partialLoadFile(l[L],L,t,W,M)},B.d.prototype._cascadeLoadImgs=function(U,W,l,M){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,L=arguments.length>5?arguments[5]:void 0;const p=[];p._internalCount=0;for(let B=0;B<6;B++)this._partialLoadImg(M[B],B,p,U,W,l,t,L)},B.d.prototype._partialLoadImg=function(U,W,l,M,t,B){let k=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,A=arguments.length>7?arguments[7]:void 0;const q=(0,p.d)();(0,L.l)(U,(U=>{l[W]=U,l._internalCount++,M&&M.removePendingData(q),6===l._internalCount&&B&&B(t,l)}),((U,W)=>{M&&M.removePendingData(q),k&&k(U,W)}),M?M.offlineProvider:null,A),M&&M.addPendingData(q)},B.d.prototype.createCubeTextureBase=function(U,W,l,L){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,B=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,A=arguments.length>6?arguments[6]:void 0,q=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,y=arguments.length>8&&void 0!==arguments[8]&&arguments[8],j=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,s=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,w=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,K=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,r=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,m=arguments.length>14&&void 0!==arguments[14]&&arguments[14],f=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const g=w||new M.c(this,7);g.isCube=!0,g.url=U,g.generateMipMaps=!L,g._lodGenerationScale=j,g._lodGenerationOffset=s,g._useSRGBBuffer=!!m&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!L),g!==w&&(g.label=U.substring(0,60)),this._doNotHandleContextLost||(g._extension=q,g._files=l,g._buffer=f);const E=U;this._transformTextureUrl&&!w&&(U=this._transformTextureUrl(U));const Z=q??function(U){const W=U.split("?")[0],l=W.lastIndexOf(".");return l>-1?W.substring(l).toLowerCase():""}(U),N=(0,k.b)(Z),D=(U,W)=>{g.dispose(),B?B(U,W):U&&t.b.Warn(U)},o=(M,B)=>{U===E?M&&D(M.status+" "+M.statusText,B):(t.b.Warn(`Failed to load ${U}, falling back to the ${E}`),this.createCubeTextureBase(E,W,l,!!L,p,D,A,q,y,j,s,g,K,r,m,f))};if(N)N.then((M=>{const t=U=>{K&&K(g,U),M.loadCubeData(U,g,y,p,((U,W)=>{D(U,W)}))};f?t(f):l&&6===l.length?M.supportCascades?this._cascadeLoadFiles(W,(U=>t(U.map((U=>new Uint8Array(U))))),l,D):D("Textures type does not support cascades."):this._loadFile(U,(U=>t(new Uint8Array(U))),void 0,void 0,!0,o)}));else{if(!l||0===l.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(W,g,((U,W)=>{r&&r(U,W)}),l,D)}return this._internalTexturesCache.push(g),g}},2038:(U,W,l)=>{l.d(W,{DDSTools:()=>w});var M=l(722),t=l(512),L=l(2044),p=l(2046);l(2160);const B=131072,k=131072;function A(U){return U.charCodeAt(0)+(U.charCodeAt(1)<<8)+(U.charCodeAt(2)<<16)+(U.charCodeAt(3)<<24)}const q=A("DXT1"),y=A("DXT3"),j=A("DXT5"),s=A("DX10");class w{static GetDDSInfo(U){const W=new Int32Array(U.buffer,U.byteOffset,31),l=new Int32Array(U.buffer,U.byteOffset,35);let M=1;W[2]&B&&(M=Math.max(1,W[7]));const t=W[21],L=t===s?l[32]:0;let p=0;switch(t){case 113:p=2;break;case 116:p=1;break;case s:if(10===L){p=2;break}if(2===L){p=1;break}}return{width:W[4],height:W[3],mipmapCount:M,isFourCC:4===(4&W[20]),isRGB:64===(64&W[20]),isLuminance:(W[20]&k)===k,isCube:512===(512&W[28]),isCompressed:t===q||t===y||t===j,dxgiFormat:L,textureType:p}}static _GetHalfFloatAsFloatRGBAArrayBuffer(U,W,l,M,t,L){const B=new Float32Array(M),k=new Uint16Array(t,l);let A=0;for(let q=0;q<W;q++)for(let W=0;W<U;W++){const l=4*(W+q*U);B[A]=(0,p.d)(k[l]),B[A+1]=(0,p.d)(k[l+1]),B[A+2]=(0,p.d)(k[l+2]),w.StoreLODInAlphaChannel?B[A+3]=L:B[A+3]=(0,p.d)(k[l+3]),A+=4}return B}static _GetHalfFloatRGBAArrayBuffer(U,W,l,M,t,L){if(w.StoreLODInAlphaChannel){const B=new Uint16Array(M),k=new Uint16Array(t,l);let A=0;for(let l=0;l<W;l++)for(let W=0;W<U;W++){const M=4*(W+l*U);B[A]=k[M],B[A+1]=k[M+1],B[A+2]=k[M+2],B[A+3]=(0,p.k)(L),A+=4}return B}return new Uint16Array(t,l,M)}static _GetFloatRGBAArrayBuffer(U,W,l,M,t,L){if(w.StoreLODInAlphaChannel){const p=new Float32Array(M),B=new Float32Array(t,l);let k=0;for(let l=0;l<W;l++)for(let W=0;W<U;W++){const M=4*(W+l*U);p[k]=B[M],p[k+1]=B[M+1],p[k+2]=B[M+2],p[k+3]=L,k+=4}return p}return new Float32Array(t,l,M)}static _GetFloatAsHalfFloatRGBAArrayBuffer(U,W,l,M,t,L){const B=new Uint16Array(M),k=new Float32Array(t,l);let A=0;for(let q=0;q<W;q++)for(let W=0;W<U;W++)B[A]=(0,p.k)(k[A]),B[A+1]=(0,p.k)(k[A+1]),B[A+2]=(0,p.k)(k[A+2]),w.StoreLODInAlphaChannel?B[A+3]=(0,p.k)(L):B[A+3]=(0,p.k)(k[A+3]),A+=4;return B}static _GetFloatAsUIntRGBAArrayBuffer(U,W,l,t,L,p){const B=new Uint8Array(t),k=new Float32Array(L,l);let A=0;for(let q=0;q<W;q++)for(let W=0;W<U;W++){const l=4*(W+q*U);B[A]=255*(0,M.Clamp)(k[l]),B[A+1]=255*(0,M.Clamp)(k[l+1]),B[A+2]=255*(0,M.Clamp)(k[l+2]),w.StoreLODInAlphaChannel?B[A+3]=p:B[A+3]=255*(0,M.Clamp)(k[l+3]),A+=4}return B}static _GetHalfFloatAsUIntRGBAArrayBuffer(U,W,l,t,L,B){const k=new Uint8Array(t),A=new Uint16Array(L,l);let q=0;for(let y=0;y<W;y++)for(let W=0;W<U;W++){const l=4*(W+y*U);k[q]=255*(0,M.Clamp)((0,p.d)(A[l])),k[q+1]=255*(0,M.Clamp)((0,p.d)(A[l+1])),k[q+2]=255*(0,M.Clamp)((0,p.d)(A[l+2])),w.StoreLODInAlphaChannel?k[q+3]=B:k[q+3]=255*(0,M.Clamp)((0,p.d)(A[l+3])),q+=4}return k}static _GetRGBAArrayBuffer(U,W,l,M,t,L,p,B,k){const A=new Uint8Array(M),q=new Uint8Array(t,l);let y=0;for(let j=0;j<W;j++)for(let W=0;W<U;W++){const l=4*(W+j*U);A[y]=q[l+L],A[y+1]=q[l+p],A[y+2]=q[l+B],A[y+3]=q[l+k],y+=4}return A}static _ExtractLongWordOrder(U){return 0===U||255===U||-16777216===U?0:1+w._ExtractLongWordOrder(U>>8)}static _GetRGBArrayBuffer(U,W,l,M,t,L,p,B){const k=new Uint8Array(M),A=new Uint8Array(t,l);let q=0;for(let y=0;y<W;y++)for(let W=0;W<U;W++){const l=3*(W+y*U);k[q]=A[l+L],k[q+1]=A[l+p],k[q+2]=A[l+B],q+=3}return k}static _GetLuminanceArrayBuffer(U,W,l,M,t){const L=new Uint8Array(M),p=new Uint8Array(t,l);let B=0;for(let k=0;k<W;k++)for(let W=0;W<U;W++){const l=W+k*U;L[B]=p[l],B++}return L}static UploadDDSLevels(U,W,l,M,p,k){let A=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,K=arguments.length>7?arguments[7]:void 0,r=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],m=null;M.sphericalPolynomial&&(m=[]);const f=!!U.getCaps().s3tc;W.generateMipMaps=p;const g=new Int32Array(l.buffer,l.byteOffset,31);let E,Z,N,D,o,i,O,e=0,d=0,H=1;if(542327876!==g[0])return void t.b.Error("Invalid magic number in DDS header");if(!M.isFourCC&&!M.isRGB&&!M.isLuminance)return void t.b.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(M.isCompressed&&!f)return void t.b.Error("Compressed textures are not supported on this platform.");let V=g[22];D=g[1]+4;let n=!1;if(M.isFourCC)switch(E=g[21],E){case q:H=8,d=33777;break;case y:H=16,d=33778;break;case j:H=16,d=33779;break;case 113:n=!0,V=64;break;case 116:n=!0,V=128;break;case s:{D+=20;let U=!1;switch(M.dxgiFormat){case 10:n=!0,V=64,U=!0;break;case 2:n=!0,V=128,U=!0;break;case 88:M.isRGB=!0,M.isFourCC=!1,V=32,U=!0}if(U)break}default:return void t.b.Error(["Unsupported FourCC code:",(x=E,String.fromCharCode(255&x,x>>8&255,x>>16&255,x>>24&255))])}var x;const I=w._ExtractLongWordOrder(g[23]),R=w._ExtractLongWordOrder(g[24]),F=w._ExtractLongWordOrder(g[25]),v=w._ExtractLongWordOrder(g[26]);n&&(d=U._getRGBABufferInternalSizedFormat(M.textureType)),i=1,g[2]&B&&!1!==p&&(i=Math.max(1,g[7]));const J=K||0,Q=U.getCaps();for(let t=J;t<k;t++){for(Z=g[4],N=g[3],O=0;O<i;++O){if(-1===A||A===O){const L=-1===A?O:0;if(!M.isCompressed&&M.isFourCC){W.format=5,e=Z*N*4;let M=null;if(U._badOS||U._badDesktopOS||!Q.textureHalfFloat&&!Q.textureFloat)128===V?(M=w._GetFloatAsUIntRGBAArrayBuffer(Z,N,l.byteOffset+D,e,l.buffer,L),m&&0==L&&m.push(w._GetFloatRGBAArrayBuffer(Z,N,l.byteOffset+D,e,l.buffer,L))):64===V&&(M=w._GetHalfFloatAsUIntRGBAArrayBuffer(Z,N,l.byteOffset+D,e,l.buffer,L),m&&0==L&&m.push(w._GetHalfFloatAsFloatRGBAArrayBuffer(Z,N,l.byteOffset+D,e,l.buffer,L))),W.type=0;else{const U=Q.textureFloat&&(r&&Q.textureFloatLinearFiltering||!r),t=Q.textureHalfFloat&&(r&&Q.textureHalfFloatLinearFiltering||!r),p=(128===V||64===V&&!t)&&U?1:(64===V||128===V&&!U)&&t?2:0;let B,k=null;if(128===V)switch(p){case 1:B=w._GetFloatRGBAArrayBuffer,k=null;break;case 2:B=w._GetFloatAsHalfFloatRGBAArrayBuffer,k=w._GetFloatRGBAArrayBuffer;break;case 0:B=w._GetFloatAsUIntRGBAArrayBuffer,k=w._GetFloatRGBAArrayBuffer}else switch(p){case 1:B=w._GetHalfFloatAsFloatRGBAArrayBuffer,k=null;break;case 2:B=w._GetHalfFloatRGBAArrayBuffer,k=w._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:B=w._GetHalfFloatAsUIntRGBAArrayBuffer,k=w._GetHalfFloatAsFloatRGBAArrayBuffer}W.type=p,M=B(Z,N,l.byteOffset+D,e,l.buffer,L),m&&0==L&&m.push(k?k(Z,N,l.byteOffset+D,e,l.buffer,L):M)}M&&U._uploadDataToTextureDirectly(W,M,t,L)}else if(M.isRGB)W.type=0,24===V?(W.format=4,e=Z*N*3,o=w._GetRGBArrayBuffer(Z,N,l.byteOffset+D,e,l.buffer,I,R,F),U._uploadDataToTextureDirectly(W,o,t,L)):(W.format=5,e=Z*N*4,o=w._GetRGBAArrayBuffer(Z,N,l.byteOffset+D,e,l.buffer,I,R,F,v),U._uploadDataToTextureDirectly(W,o,t,L));else if(M.isLuminance){const M=U._getUnpackAlignement(),p=Z;e=Math.floor((Z+M-1)/M)*M*(N-1)+p,o=w._GetLuminanceArrayBuffer(Z,N,l.byteOffset+D,e,l.buffer),W.format=1,W.type=0,U._uploadDataToTextureDirectly(W,o,t,L)}else e=Math.max(4,Z)/4*Math.max(4,N)/4*H,o=new Uint8Array(l.buffer,l.byteOffset+D,e),W.type=0,U._uploadCompressedDataToTextureDirectly(W,d,Z,N,o,t,L)}D+=V?Z*N*(V/8):e,Z*=.5,N*=.5,Z=Math.max(1,Z),N=Math.max(1,N)}if(void 0!==K)break}m&&m.length>0?M.sphericalPolynomial=L.d.ConvertCubeMapToSphericalPolynomial({size:g[4],right:m[0],left:m[1],up:m[2],down:m[3],front:m[4],back:m[5],format:5,type:1,gammaSpace:!1}):M.sphericalPolynomial=void 0}}w.StoreLODInAlphaChannel=!1}}]);