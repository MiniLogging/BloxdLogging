"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6,7],{10499:(M,E,b)=>{var x=b(1528),k=b(1015);k.e.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(k.e.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=x.d.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((M=>{this._texture._sphericalPolynomial=M,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(M){this._texture&&(this._texture._sphericalPolynomial=M)},enumerable:!0,configurable:!0})},10502:(M,E,b)=>{b.r(E),b.d(E,{Dispose:()=>I,DumpData:()=>V,DumpDataAsync:()=>T,DumpFramebuffer:()=>u,DumpTools:()=>t});var x=b(1549),k=b(1176),a=b(1009),g=b(1005);let n,J=null;async function u(M,E,b,x){let k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",a=arguments.length>5?arguments[5]:void 0,g=arguments.length>6?arguments[6]:void 0;const n=await b.readPixels(0,0,M,E);V(M,E,new Uint8Array(n.buffer),x,k,a,!0,void 0,g)}function T(M,E,b){let x=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",k=arguments.length>4?arguments[4]:void 0,a=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6&&void 0!==arguments[6]&&arguments[6],n=arguments.length>7?arguments[7]:void 0;return new Promise((J=>{V(M,E,b,(M=>J(M)),x,k,a,g,n)}))}function V(M,E,u,T){let V=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",t=arguments.length>5?arguments[5]:void 0,y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],B=arguments.length>7&&void 0!==arguments[7]&&arguments[7],r=arguments.length>8?arguments[8]:void 0;(async function(){return J||(J=new Promise(((M,E)=>{let k,a=null;const J={Yd:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(b.bind(b,1433)).then((u=>{let{ThinEngine:T}=u;try{k=new OffscreenCanvas(100,100),a=new T(k,!1,J)}catch(t){k=document.createElement("canvas"),a=new T(k,!1,J)}g.b.Instances.pop(),g.b.OnEnginesDisposedObservable.add((M=>{a&&M!==a&&!a.u&&0===g.b.Instances.length&&I()})),a.getCaps().parallelShaderCompile=void 0;const V=new x.c(a);b.e(32).then(b.bind(b,11141)).then((b=>{let{passPixelShader:g}=b;if(!a)return void E("Engine is not defined");const J=new x.f({md:a,name:g.name,fragmentShader:g.shader,samplerNames:["textureSampler"]});n={canvas:k,md:a,renderer:V,wrapper:J},M(n)}))})).catch(E)}))),await J})().then((b=>{if(b.md.setSize(M,E,!0),u instanceof Float32Array){const M=new Uint8Array(u.length);let E=u.length;for(;E--;){const b=u[E];M[E]=Math.round(255*(0,a.d)(b))}u=M}const x=b.md.createRawTexture(u,M,E,5,!1,!y,1);b.renderer.setViewport(),b.renderer.applyEffectWrapper(b.wrapper),b.wrapper.effect._bindTexture("textureSampler",x),b.renderer.draw(),B?k.e.ToBlob(b.canvas,(M=>{const E=new FileReader;E.onload=M=>{const E=M.target.result;T&&T(E)},E.readAsArrayBuffer(M)}),V,r):k.e.EncodeScreenshotCanvasData(b.canvas,T,V,t,r),x.dispose()}))}function I(){var M;n?(n.wrapper.dispose(),n.renderer.dispose(),n.md.dispose()):null===(M=J)||void 0===M||M.then((M=>{M.wrapper.dispose(),M.renderer.dispose(),M.md.dispose()}));J=null,n=null}const t={DumpData:V,DumpDataAsync:T,DumpFramebuffer:u,Dispose:I};k.e.DumpData=V,k.e.DumpDataAsync=T,k.e.DumpFramebuffer=u},10488:(M,E,b)=>{b.d(E,{d:()=>y,h:()=>c,j:()=>w,k:()=>S});var x=b(1176),k=b(970),a=b(1009),g=b(1499),n=b(1104),J=b(1015),u=(b(1171),b(1544)),T=b(1060);b(10496),b(10499),b(10502);const V="image/png",I=2,t=[134,22,135,150,246,214,150,54];function y(M){const E=new DataView(M.buffer,M.byteOffset,M.byteLength);let b=0;for(let g=0;g<t.length;g++)if(E.getUint8(b++)!==t[g])return T.d.Error("Not a babylon environment map"),null;let x="",k=0;for(;k=E.getUint8(b++);)x+=String.fromCharCode(k);let a=JSON.parse(x);return a=B(a),a.qe&&(a.qe.specularDataPosition=b,a.qe.lodGenerationScale=a.qe.lodGenerationScale||.8),a}function B(M){if(M.version>I)throw new Error(`Unsupported babylon environment map version "${M.version}". Latest supported version is "${I}".`);return 2===M.version?M:M={...M,version:2,imageType:V}}function r(M,E){const b=(E=B(E)).qe;let x=Math.log2(E.width);if(x=Math.round(x)+1,b.mipmaps.length!==6*x)throw new Error(`Unsupported specular mipmaps number "${b.mipmaps.length}"`);const k=new Array(x);for(let a=0;a<x;a++){k[a]=new Array(6);for(let E=0;E<6;E++){const x=b.mipmaps[6*a+E];k[a][E]=new Uint8Array(M.buffer,M.byteOffset+b.specularDataPosition+x.position,x.length)}}return k}function c(M,E,b){const x=(b=B(b)).qe;if(!x)return Promise.resolve();M._lodGenerationScale=x.lodGenerationScale;return R(M,r(E,b),b.imageType)}function C(M,E,b,x,k,a,g,n,J,u,T){return new Promise(((V,I)=>{if(b){const b=E.createTexture(null,!0,!0,null,1,null,(M=>{I(M)}),M);null===x||void 0===x||x.onEffectCreatedObservable.addOnce((n=>{n.executeWhenCompiled((()=>{x.externalTextureSamplerBinding=!0,x.onApply=x=>{x._bindTexture("textureSampler",b),x.setFloat2("scale",1,E._features.needsInvertingBitmap&&M instanceof ImageBitmap?-1:1)},E.scenes.length&&(E.scenes[0].postProcessManager.directRender([x],u,!0,a,g),E.restoreDefaultFramebuffer(),b.dispose(),URL.revokeObjectURL(k),V())}))}))}else{if(E._uploadImageToTexture(T,M,a,g),n){const b=J[g];b&&E._uploadImageToTexture(b._texture,M,a,0)}V()}}))}async function R(M,E){let k=arguments.length>2&&void 0!==arguments[2]?arguments[2]:V;if(!x.e.IsExponentOfTwo(M.width))throw new Error("Texture size must be a power of two");const g=(0,a.i)(M.width)+1,T=M.getEngine();let I=!1,t=!1,y=null,B=null,r=null;const c=T.getCaps();M.format=5,M.type=0,M.generateMipMaps=!0,M._cachedAnisotropicFilteringLevel=null,T.updateTextureSamplingMode(3,M),c.textureLOD?T._features.supportRenderAndCopyToLodForFloatTextures?c.textureHalfFloatRender&&c.textureHalfFloatLinearFiltering?(I=!0,M.type=2):c.textureFloatRender&&c.textureFloatLinearFiltering&&(I=!0,M.type=1):I=!1:(I=!1,t=!0,r={});let R=0;if(I)T.isWebGPU?(R=1,await b.e(17).then(b.bind(b,12789))):await b.e(24).then(b.bind(b,12791)),y=new u.e("rgbdDecode","rgbdDecode",null,null,1,null,3,T,!1,void 0,M.type,void 0,null,!1,void 0,R),M._isRGBD=!1,M.invertY=!1,B=T.createRenderTargetCubeTexture(M.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:M.type,format:5});else if(M._isRGBD=!0,M.invertY=!0,t){const E=3,b=M._lodGenerationScale,x=M._lodGenerationOffset;for(let k=0;k<E;k++){const a=(g-1)*b+x,u=x+(a-x)*(1-k/(E-1)),V=Math.round(Math.min(Math.max(u,0),a)),I=new n.c(T,2);I.isCube=!0,I.invertY=!0,I.generateMipMaps=!1,T.updateTextureSamplingMode(2,I);const t=new J.e(null);switch(t._isCube=!0,t._texture=I,r[V]=t,k){case 0:M._lodTextureLow=t;break;case 1:M._lodTextureMid=t;break;case 2:M._lodTextureHigh=t}}}const w=[];for(let b=0;b<E.length;b++)for(let x=0;x<6;x++){const a=E[b][x],g=new Blob([a],{type:k}),n=URL.createObjectURL(g);let J;if(T._features.forceBitmapOverHTMLImageElement)J=T.createImageBitmap(g,{premultiplyAlpha:"none"}).then((E=>C(E,T,I,y,n,x,b,t,r,B,M)));else{const E=new Image;E.src=n,J=new Promise(((k,a)=>{E.onload=()=>{C(E,T,I,y,n,x,b,t,r,B,M).then((()=>k())).catch((M=>{a(M)}))},E.onerror=M=>{a(M)}}))}w.push(J)}if(E.length<g){let b;const x=Math.pow(2,g-1-E.length),k=x*x*4;switch(M.type){case 0:b=new Uint8Array(k);break;case 2:b=new Uint16Array(k);break;case 1:b=new Float32Array(k)}for(let a=E.length;a<g;a++)for(let E=0;E<6;E++)T._uploadArrayBufferViewToTexture(M,b,E,a)}return Promise.all(w).then((()=>{B&&(T._releaseTexture(M),B._swapAndDie(M)),y&&y.dispose(),t&&(M._lodTextureHigh&&M._lodTextureHigh._texture&&(M._lodTextureHigh._texture.isReady=!0),M._lodTextureMid&&M._lodTextureMid._texture&&(M._lodTextureMid._texture.isReady=!0),M._lodTextureLow&&M._lodTextureLow._texture&&(M._lodTextureLow._texture.isReady=!0))}))}function w(M,E){const b=(E=B(E)).irradiance;if(!b)return;const x=new g.d;k.m.FromArrayToRef(b.x,0,x.x),k.m.FromArrayToRef(b.y,0,x.y),k.m.FromArrayToRef(b.z,0,x.z),k.m.FromArrayToRef(b.xx,0,x.xx),k.m.FromArrayToRef(b.yy,0,x.yy),k.m.FromArrayToRef(b.zz,0,x.zz),k.m.FromArrayToRef(b.yz,0,x.yz),k.m.FromArrayToRef(b.zx,0,x.zx),k.m.FromArrayToRef(b.xy,0,x.xy),M._sphericalPolynomial=x}function S(M,E,b,x,k){const a=R(M.getEngine().createRawCubeTexture(null,M.width,M.format,M.type,M.generateMipMaps,M.invertY,M.samplingMode,M._compression),E).then((()=>M));return M.onRebuildCallback=M=>({proxy:a,isReady:!0,isAsync:!0}),M._source=13,M._bufferViewArrayArray=E,M._lodGenerationScale=x,M._lodGenerationOffset=k,M._sphericalPolynomial=b,R(M,E).then((()=>(M.isReady=!0,M)))}},10496:(M,E,b)=>{b.d(E,{c:()=>a});var x=b(1544),k=b(1532);class a{static ExpandRGBDTexture(M){const E=M._texture;if(!E||!M.isRGBD)return;const k=E.getEngine(),a=k.getCaps(),g=E.isReady;let n=!1;a.textureHalfFloatRender&&a.textureHalfFloatLinearFiltering?(n=!0,E.type=2):a.textureFloatRender&&a.textureFloatLinearFiltering&&(n=!0,E.type=1),n&&(E.isReady=!1,E._isRGBD=!1,E.invertY=!1);const J=async()=>{const a=k.isWebGPU,g=a?1:0;E.isReady=!1,a?await Promise.all([b.e(17).then(b.bind(b,12789)),b.e(18).then(b.bind(b,12796))]):await Promise.all([b.e(24).then(b.bind(b,12791)),b.e(25).then(b.bind(b,12803))]);const n=new x.e("rgbdDecode","rgbdDecode",null,null,1,null,3,k,!1,void 0,E.type,void 0,null,!1,void 0,g);n.externalTextureSamplerBinding=!0;const J=k.createRenderTargetTexture(E.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:E.samplingMode,type:E.type,format:5});n.onEffectCreatedObservable.addOnce((b=>{b.executeWhenCompiled((()=>{n.onApply=M=>{M._bindTexture("textureSampler",E),M.setFloat2("scale",1,1)},M.va().postProcessManager.directRender([n],J,!0),k.restoreDefaultFramebuffer(),k._releaseTexture(E),n&&n.dispose(),J._swapAndDie(E),E.isReady=!0}))}))};n&&(g?J():M.onLoadObservable.addOnce(J))}static EncodeTextureToRGBD(M,E){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,k.e)("rgbdEncode",M,E,b,1,5)}}}}]);