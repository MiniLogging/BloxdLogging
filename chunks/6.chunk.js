"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6,7],{10913:(F,e,a)=>{var k=a(1512),h=a(1045);h.d.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(h.d.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=k.c.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((F=>{this._texture._sphericalPolynomial=F,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(F){this._texture&&(this._texture._sphericalPolynomial=F)},enumerable:!0,configurable:!0})},10915:(F,e,a)=>{a.r(e),a.d(e,{Dispose:()=>s,DumpData:()=>L,DumpDataAsync:()=>y,DumpFramebuffer:()=>p,DumpTools:()=>Z});var k=a(1527),h=a(1220),z=a(1038),x=a(1034);let t,H=null;async function p(F,e,a,k){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",z=arguments.length>5?arguments[5]:void 0,x=arguments.length>6?arguments[6]:void 0;const t=await a.readPixels(0,0,F,e);L(F,e,new Uint8Array(t.buffer),k,h,z,!0,void 0,x)}function y(F,e,a){let k=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",h=arguments.length>4?arguments[4]:void 0,z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],x=arguments.length>6&&void 0!==arguments[6]&&arguments[6],t=arguments.length>7?arguments[7]:void 0;return new Promise((H=>{L(F,e,a,(F=>H(F)),k,h,z,x,t)}))}function L(F,e,p,y){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Z=arguments.length>5?arguments[5]:void 0,A=arguments.length>6&&void 0!==arguments[6]&&arguments[6],w=arguments.length>7&&void 0!==arguments[7]&&arguments[7],I=arguments.length>8?arguments[8]:void 0;(async function(){return H||(H=new Promise(((F,e)=>{let h,z=null;const H={Xe:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(a.bind(a,1438)).then((p=>{let{ThinEngine:y}=p;try{h=new OffscreenCanvas(100,100),z=new y(h,!1,H)}catch(Z){h=document.createElement("canvas"),z=new y(h,!1,H)}x.b.Instances.pop(),x.b.OnEnginesDisposedObservable.add((F=>{z&&F!==z&&!z.u&&0===x.b.Instances.length&&s()})),z.getCaps().parallelShaderCompile=void 0;const L=new k.c(z);a.e(32).then(a.bind(a,11605)).then((a=>{let{passPixelShader:x}=a;if(!z)return void e("Engine is not defined");const H=new k.e({ob:z,name:x.name,fragmentShader:x.shader,samplerNames:["textureSampler"]});t={canvas:h,ob:z,renderer:L,wrapper:H},F(t)}))})).catch(e)}))),await H})().then((a=>{if(a.ob.setSize(F,e,!0),p instanceof Float32Array){const F=new Uint8Array(p.length);let e=p.length;for(;e--;){const a=p[e];F[e]=Math.round(255*(0,z.d)(a))}p=F}const k=a.ob.createRawTexture(p,F,e,5,!1,!A,1);a.renderer.setViewport(),a.renderer.applyEffectWrapper(a.wrapper),a.wrapper.effect._bindTexture("textureSampler",k),a.renderer.draw(),w?h.c.ToBlob(a.canvas,(F=>{const e=new FileReader;e.onload=F=>{const e=F.target.result;y&&y(e)},e.readAsArrayBuffer(F)}),L,I):h.c.EncodeScreenshotCanvasData(a.canvas,y,L,Z,I),k.dispose()}))}function s(){var F;t?(t.wrapper.dispose(),t.renderer.dispose(),t.ob.dispose()):null===(F=H)||void 0===F||F.then((F=>{F.wrapper.dispose(),F.renderer.dispose(),F.ob.dispose()}));H=null,t=null}const Z={DumpData:L,DumpDataAsync:y,DumpFramebuffer:p,Dispose:s};h.c.DumpData=L,h.c.DumpDataAsync=y,h.c.DumpFramebuffer=p},10898:(F,e,a)=>{a.d(e,{d:()=>A,e:()=>b,i:()=>O,l:()=>j});var k=a(1220),h=a(1007),z=a(1038),x=a(1480),t=a(1144),H=a(1045),p=(a(1216),a(1523)),y=a(1095);a(10904),a(10913),a(10915);const L="image/png",s=2,Z=[134,22,135,150,246,214,150,54];function A(F){const e=new DataView(F.buffer,F.byteOffset,F.byteLength);let a=0;for(let x=0;x<Z.length;x++)if(e.getUint8(a++)!==Z[x])return y.b.Error("Not a babylon environment map"),null;let k="",h=0;for(;h=e.getUint8(a++);)k+=String.fromCharCode(h);let z=JSON.parse(k);return z=w(z),z.De&&(z.De.specularDataPosition=a,z.De.lodGenerationScale=z.De.lodGenerationScale||.8),z}function w(F){if(F.version>s)throw new Error(`Unsupported babylon environment map version "${F.version}". Latest supported version is "${s}".`);return 2===F.version?F:F={...F,version:2,imageType:L}}function I(F,e){const a=(e=w(e)).De;let k=Math.log2(e.width);if(k=Math.round(k)+1,a.mipmaps.length!==6*k)throw new Error(`Unsupported specular mipmaps number "${a.mipmaps.length}"`);const h=new Array(k);for(let z=0;z<k;z++){h[z]=new Array(6);for(let e=0;e<6;e++){const k=a.mipmaps[6*z+e];h[z][e]=new Uint8Array(F.buffer,F.byteOffset+a.specularDataPosition+k.position,k.length)}}return h}function b(F,e,a){const k=(a=w(a)).De;if(!k)return Promise.resolve();F._lodGenerationScale=k.lodGenerationScale;return r(F,I(e,a),a.imageType)}function u(F,e,a,k,h,z,x,t,H,p,y){return new Promise(((L,s)=>{if(a){const a=e.createTexture(null,!0,!0,null,1,null,(F=>{s(F)}),F);null===k||void 0===k||k.onEffectCreatedObservable.addOnce((t=>{t.executeWhenCompiled((()=>{k.externalTextureSamplerBinding=!0,k.onApply=k=>{k._bindTexture("textureSampler",a),k.setFloat2("scale",1,e._features.needsInvertingBitmap&&F instanceof ImageBitmap?-1:1)},e.scenes.length&&(e.scenes[0].postProcessManager.directRender([k],p,!0,z,x),e.restoreDefaultFramebuffer(),a.dispose(),URL.revokeObjectURL(h),L())}))}))}else{if(e._uploadImageToTexture(y,F,z,x),t){const a=H[x];a&&e._uploadImageToTexture(a._texture,F,z,0)}L()}}))}async function r(F,e){let h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:L;if(!k.c.IsExponentOfTwo(F.width))throw new Error("Texture size must be a power of two");const x=(0,z.j)(F.width)+1,y=F.getEngine();let s=!1,Z=!1,A=null,w=null,I=null;const b=y.getCaps();F.format=5,F.type=0,F.generateMipMaps=!0,F._cachedAnisotropicFilteringLevel=null,y.updateTextureSamplingMode(3,F),b.textureLOD?y._features.supportRenderAndCopyToLodForFloatTextures?b.textureHalfFloatRender&&b.textureHalfFloatLinearFiltering?(s=!0,F.type=2):b.textureFloatRender&&b.textureFloatLinearFiltering&&(s=!0,F.type=1):s=!1:(s=!1,Z=!0,I={});let r=0;if(s)y.isWebGPU?(r=1,await a.e(17).then(a.bind(a,13215))):await a.e(24).then(a.bind(a,13219)),A=new p.e("rgbdDecode","rgbdDecode",null,null,1,null,3,y,!1,void 0,F.type,void 0,null,!1,void 0,r),F._isRGBD=!1,F.invertY=!1,w=y.createRenderTargetCubeTexture(F.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:F.type,format:5});else if(F._isRGBD=!0,F.invertY=!0,Z){const e=3,a=F._lodGenerationScale,k=F._lodGenerationOffset;for(let h=0;h<e;h++){const z=(x-1)*a+k,p=k+(z-k)*(1-h/(e-1)),L=Math.round(Math.min(Math.max(p,0),z)),s=new t.b(y,2);s.isCube=!0,s.invertY=!0,s.generateMipMaps=!1,y.updateTextureSamplingMode(2,s);const Z=new H.d(null);switch(Z._isCube=!0,Z._texture=s,I[L]=Z,h){case 0:F._lodTextureLow=Z;break;case 1:F._lodTextureMid=Z;break;case 2:F._lodTextureHigh=Z}}}const O=[];for(let a=0;a<e.length;a++)for(let k=0;k<6;k++){const z=e[a][k],x=new Blob([z],{type:h}),t=URL.createObjectURL(x);let H;if(y._features.forceBitmapOverHTMLImageElement)H=y.createImageBitmap(x,{premultiplyAlpha:"none"}).then((e=>u(e,y,s,A,t,k,a,Z,I,w,F)));else{const e=new Image;e.src=t,H=new Promise(((h,z)=>{e.onload=()=>{u(e,y,s,A,t,k,a,Z,I,w,F).then((()=>h())).catch((F=>{z(F)}))},e.onerror=F=>{z(F)}}))}O.push(H)}if(e.length<x){let a;const k=Math.pow(2,x-1-e.length),h=k*k*4;switch(F.type){case 0:a=new Uint8Array(h);break;case 2:a=new Uint16Array(h);break;case 1:a=new Float32Array(h)}for(let z=e.length;z<x;z++)for(let e=0;e<6;e++)y._uploadArrayBufferViewToTexture(F,a,e,z)}return Promise.all(O).then((()=>{w&&(y._releaseTexture(F),w._swapAndDie(F)),A&&A.dispose(),Z&&(F._lodTextureHigh&&F._lodTextureHigh._texture&&(F._lodTextureHigh._texture.isReady=!0),F._lodTextureMid&&F._lodTextureMid._texture&&(F._lodTextureMid._texture.isReady=!0),F._lodTextureLow&&F._lodTextureLow._texture&&(F._lodTextureLow._texture.isReady=!0))}))}function O(F,e){const a=(e=w(e)).irradiance;if(!a)return;const k=new x.c;h.l.FromArrayToRef(a.x,0,k.x),h.l.FromArrayToRef(a.y,0,k.y),h.l.FromArrayToRef(a.z,0,k.z),h.l.FromArrayToRef(a.xx,0,k.xx),h.l.FromArrayToRef(a.yy,0,k.yy),h.l.FromArrayToRef(a.zz,0,k.zz),h.l.FromArrayToRef(a.yz,0,k.yz),h.l.FromArrayToRef(a.zx,0,k.zx),h.l.FromArrayToRef(a.xy,0,k.xy),F._sphericalPolynomial=k}function j(F,e,a,k,h){const z=r(F.getEngine().createRawCubeTexture(null,F.width,F.format,F.type,F.generateMipMaps,F.invertY,F.samplingMode,F._compression),e).then((()=>F));return F.onRebuildCallback=F=>({proxy:z,isReady:!0,isAsync:!0}),F._source=13,F._bufferViewArrayArray=e,F._lodGenerationScale=k,F._lodGenerationOffset=h,F._sphericalPolynomial=a,r(F,e).then((()=>(F.isReady=!0,F)))}},10904:(F,e,a)=>{a.d(e,{c:()=>z});var k=a(1523),h=a(1514);class z{static ExpandRGBDTexture(F){const e=F._texture;if(!e||!F.isRGBD)return;const h=e.getEngine(),z=h.getCaps(),x=e.isReady;let t=!1;z.textureHalfFloatRender&&z.textureHalfFloatLinearFiltering?(t=!0,e.type=2):z.textureFloatRender&&z.textureFloatLinearFiltering&&(t=!0,e.type=1),t&&(e.isReady=!1,e._isRGBD=!1,e.invertY=!1);const H=async()=>{const z=h.isWebGPU,x=z?1:0;e.isReady=!1,z?await Promise.all([a.e(17).then(a.bind(a,13215)),a.e(18).then(a.bind(a,13224))]):await Promise.all([a.e(24).then(a.bind(a,13219)),a.e(25).then(a.bind(a,13228))]);const t=new k.e("rgbdDecode","rgbdDecode",null,null,1,null,3,h,!1,void 0,e.type,void 0,null,!1,void 0,x);t.externalTextureSamplerBinding=!0;const H=h.createRenderTargetTexture(e.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:e.samplingMode,type:e.type,format:5});t.onEffectCreatedObservable.addOnce((a=>{a.executeWhenCompiled((()=>{t.onApply=F=>{F._bindTexture("textureSampler",e),F.setFloat2("scale",1,1)},F.va().postProcessManager.directRender([t],H,!0),h.restoreDefaultFramebuffer(),h._releaseTexture(e),t&&t.dispose(),H._swapAndDie(e),e.isReady=!0}))}))};t&&(x?H():F.onLoadObservable.addOnce(H))}static EncodeTextureToRGBD(F,e){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,h.d)("rgbdEncode",F,e,a,1,5)}}}}]);