"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6,7],{10861:(Q,z,I)=>{var P=I(1505),w=I(1018);w.c.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(w.c.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=P.b.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((Q=>{this._texture._sphericalPolynomial=Q,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(Q){this._texture&&(this._texture._sphericalPolynomial=Q)},enumerable:!0,configurable:!0})},10868:(Q,z,I)=>{I.r(z),I.d(z,{Dispose:()=>k,DumpData:()=>D,DumpDataAsync:()=>j,DumpFramebuffer:()=>f,DumpTools:()=>s});var P=I(1524),w=I(1180),T=I(1015),A=I(1012);let e,m=null;async function f(Q,z,I,P){let w=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",T=arguments.length>5?arguments[5]:void 0,A=arguments.length>6?arguments[6]:void 0;const e=await I.readPixels(0,0,Q,z);D(Q,z,new Uint8Array(e.buffer),P,w,T,!0,void 0,A)}function j(Q,z,I){let P=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",w=arguments.length>4?arguments[4]:void 0,T=arguments.length>5&&void 0!==arguments[5]&&arguments[5],A=arguments.length>6&&void 0!==arguments[6]&&arguments[6],e=arguments.length>7?arguments[7]:void 0;return new Promise((m=>{D(Q,z,I,(Q=>m(Q)),P,w,T,A,e)}))}function D(Q,z,f,j){let D=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",s=arguments.length>5?arguments[5]:void 0,J=arguments.length>6&&void 0!==arguments[6]&&arguments[6],l=arguments.length>7&&void 0!==arguments[7]&&arguments[7],X=arguments.length>8?arguments[8]:void 0;(async function(){return m||(m=new Promise(((Q,z)=>{let w,T=null;const m={gf:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(I.bind(I,1408)).then((f=>{let{ThinEngine:j}=f;try{w=new OffscreenCanvas(100,100),T=new j(w,!1,m)}catch(s){w=document.createElement("canvas"),T=new j(w,!1,m)}A.d.Instances.pop(),A.d.OnEnginesDisposedObservable.add((Q=>{T&&Q!==T&&!T.u&&0===A.d.Instances.length&&k()})),T.getCaps().parallelShaderCompile=void 0;const D=new P.d(T);I.e(32).then(I.bind(I,11507)).then((I=>{let{passPixelShader:A}=I;if(!T)return void z("Engine is not defined");const m=new P.h({ub:T,name:A.name,fragmentShader:A.shader,samplerNames:["textureSampler"]});e={canvas:w,ub:T,renderer:D,wrapper:m},Q(e)}))})).catch(z)}))),await m})().then((I=>{if(I.ub.setSize(Q,z,!0),f instanceof Float32Array){const Q=new Uint8Array(f.length);let z=f.length;for(;z--;){const I=f[z];Q[z]=Math.round(255*(0,T.b)(I))}f=Q}const P=I.ub.createRawTexture(f,Q,z,5,!1,!J,1);I.renderer.setViewport(),I.renderer.applyEffectWrapper(I.wrapper),I.wrapper.effect._bindTexture("textureSampler",P),I.renderer.draw(),l?w.h.ToBlob(I.canvas,(Q=>{const z=new FileReader;z.onload=Q=>{const z=Q.target.result;j&&j(z)},z.readAsArrayBuffer(Q)}),D,X):w.h.EncodeScreenshotCanvasData(I.canvas,j,D,s,X),P.dispose()}))}function k(){var Q;e?(e.wrapper.dispose(),e.renderer.dispose(),e.ub.dispose()):null===(Q=m)||void 0===Q||Q.then((Q=>{Q.wrapper.dispose(),Q.renderer.dispose(),Q.ub.dispose()}));m=null,e=null}const s={DumpData:D,DumpDataAsync:j,DumpFramebuffer:f,Dispose:k};w.h.DumpData=D,w.h.DumpDataAsync=j,w.h.DumpFramebuffer=f},10851:(Q,z,I)=>{I.d(z,{d:()=>J,e:()=>n,h:()=>N,i:()=>q});var P=I(1180),w=I(984),T=I(1015),A=I(1474),e=I(1105),m=I(1018),f=(I(1175),I(1517)),j=I(1066);I(10858),I(10861),I(10868);const D="image/png",k=2,s=[134,22,135,150,246,214,150,54];function J(Q){const z=new DataView(Q.buffer,Q.byteOffset,Q.byteLength);let I=0;for(let A=0;A<s.length;A++)if(z.getUint8(I++)!==s[A])return j.b.Error("Not a babylon environment map"),null;let P="",w=0;for(;w=z.getUint8(I++);)P+=String.fromCharCode(w);let T=JSON.parse(P);return T=l(T),T.Me&&(T.Me.specularDataPosition=I,T.Me.lodGenerationScale=T.Me.lodGenerationScale||.8),T}function l(Q){if(Q.version>k)throw new Error(`Unsupported babylon environment map version "${Q.version}". Latest supported version is "${k}".`);return 2===Q.version?Q:Q={...Q,version:2,imageType:D}}function X(Q,z){const I=(z=l(z)).Me;let P=Math.log2(z.width);if(P=Math.round(P)+1,I.mipmaps.length!==6*P)throw new Error(`Unsupported specular mipmaps number "${I.mipmaps.length}"`);const w=new Array(P);for(let T=0;T<P;T++){w[T]=new Array(6);for(let z=0;z<6;z++){const P=I.mipmaps[6*T+z];w[T][z]=new Uint8Array(Q.buffer,Q.byteOffset+I.specularDataPosition+P.position,P.length)}}return w}function n(Q,z,I){const P=(I=l(I)).Me;if(!P)return Promise.resolve();Q._lodGenerationScale=P.lodGenerationScale;return K(Q,X(z,I),I.imageType)}function d(Q,z,I,P,w,T,A,e,m,f,j){return new Promise(((D,k)=>{if(I){const I=z.createTexture(null,!0,!0,null,1,null,(Q=>{k(Q)}),Q);null===P||void 0===P||P.onEffectCreatedObservable.addOnce((e=>{e.executeWhenCompiled((()=>{P.externalTextureSamplerBinding=!0,P.onApply=P=>{P._bindTexture("textureSampler",I),P.setFloat2("scale",1,z._features.needsInvertingBitmap&&Q instanceof ImageBitmap?-1:1)},z.scenes.length&&(z.scenes[0].postProcessManager.directRender([P],f,!0,T,A),z.restoreDefaultFramebuffer(),I.dispose(),URL.revokeObjectURL(w),D())}))}))}else{if(z._uploadImageToTexture(j,Q,T,A),e){const I=m[A];I&&z._uploadImageToTexture(I._texture,Q,T,0)}D()}}))}async function K(Q,z){let w=arguments.length>2&&void 0!==arguments[2]?arguments[2]:D;if(!P.h.IsExponentOfTwo(Q.width))throw new Error("Texture size must be a power of two");const A=(0,T.j)(Q.width)+1,j=Q.getEngine();let k=!1,s=!1,J=null,l=null,X=null;const n=j.getCaps();Q.format=5,Q.type=0,Q.generateMipMaps=!0,Q._cachedAnisotropicFilteringLevel=null,j.updateTextureSamplingMode(3,Q),n.textureLOD?j._features.supportRenderAndCopyToLodForFloatTextures?n.textureHalfFloatRender&&n.textureHalfFloatLinearFiltering?(k=!0,Q.type=2):n.textureFloatRender&&n.textureFloatLinearFiltering&&(k=!0,Q.type=1):k=!1:(k=!1,s=!0,X={});let K=0;if(k)j.isWebGPU?(K=1,await I.e(17).then(I.bind(I,13117))):await I.e(24).then(I.bind(I,13123)),J=new f.d("rgbdDecode","rgbdDecode",null,null,1,null,3,j,!1,void 0,Q.type,void 0,null,!1,void 0,K),Q._isRGBD=!1,Q.invertY=!1,l=j.createRenderTargetCubeTexture(Q.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:Q.type,format:5});else if(Q._isRGBD=!0,Q.invertY=!0,s){const z=3,I=Q._lodGenerationScale,P=Q._lodGenerationOffset;for(let w=0;w<z;w++){const T=(A-1)*I+P,f=P+(T-P)*(1-w/(z-1)),D=Math.round(Math.min(Math.max(f,0),T)),k=new e.e(j,2);k.isCube=!0,k.invertY=!0,k.generateMipMaps=!1,j.updateTextureSamplingMode(2,k);const s=new m.c(null);switch(s._isCube=!0,s._texture=k,X[D]=s,w){case 0:Q._lodTextureLow=s;break;case 1:Q._lodTextureMid=s;break;case 2:Q._lodTextureHigh=s}}}const N=[];for(let I=0;I<z.length;I++)for(let P=0;P<6;P++){const T=z[I][P],A=new Blob([T],{type:w}),e=URL.createObjectURL(A);let m;if(j._features.forceBitmapOverHTMLImageElement)m=j.createImageBitmap(A,{premultiplyAlpha:"none"}).then((z=>d(z,j,k,J,e,P,I,s,X,l,Q)));else{const z=new Image;z.src=e,m=new Promise(((w,T)=>{z.onload=()=>{d(z,j,k,J,e,P,I,s,X,l,Q).then((()=>w())).catch((Q=>{T(Q)}))},z.onerror=Q=>{T(Q)}}))}N.push(m)}if(z.length<A){let I;const P=Math.pow(2,A-1-z.length),w=P*P*4;switch(Q.type){case 0:I=new Uint8Array(w);break;case 2:I=new Uint16Array(w);break;case 1:I=new Float32Array(w)}for(let T=z.length;T<A;T++)for(let z=0;z<6;z++)j._uploadArrayBufferViewToTexture(Q,I,z,T)}return Promise.all(N).then((()=>{l&&(j._releaseTexture(Q),l._swapAndDie(Q)),J&&J.dispose(),s&&(Q._lodTextureHigh&&Q._lodTextureHigh._texture&&(Q._lodTextureHigh._texture.isReady=!0),Q._lodTextureMid&&Q._lodTextureMid._texture&&(Q._lodTextureMid._texture.isReady=!0),Q._lodTextureLow&&Q._lodTextureLow._texture&&(Q._lodTextureLow._texture.isReady=!0))}))}function N(Q,z){const I=(z=l(z)).irradiance;if(!I)return;const P=new A.h;w.o.FromArrayToRef(I.x,0,P.x),w.o.FromArrayToRef(I.y,0,P.y),w.o.FromArrayToRef(I.z,0,P.z),w.o.FromArrayToRef(I.xx,0,P.xx),w.o.FromArrayToRef(I.yy,0,P.yy),w.o.FromArrayToRef(I.zz,0,P.zz),w.o.FromArrayToRef(I.yz,0,P.yz),w.o.FromArrayToRef(I.zx,0,P.zx),w.o.FromArrayToRef(I.xy,0,P.xy),Q._sphericalPolynomial=P}function q(Q,z,I,P,w){const T=K(Q.getEngine().createRawCubeTexture(null,Q.width,Q.format,Q.type,Q.generateMipMaps,Q.invertY,Q.samplingMode,Q._compression),z).then((()=>Q));return Q.onRebuildCallback=Q=>({proxy:T,isReady:!0,isAsync:!0}),Q._source=13,Q._bufferViewArrayArray=z,Q._lodGenerationScale=P,Q._lodGenerationOffset=w,Q._sphericalPolynomial=I,K(Q,z).then((()=>(Q.isReady=!0,Q)))}},10858:(Q,z,I)=>{I.d(z,{e:()=>T});var P=I(1517),w=I(1508);class T{static ExpandRGBDTexture(Q){const z=Q._texture;if(!z||!Q.isRGBD)return;const w=z.getEngine(),T=w.getCaps(),A=z.isReady;let e=!1;T.textureHalfFloatRender&&T.textureHalfFloatLinearFiltering?(e=!0,z.type=2):T.textureFloatRender&&T.textureFloatLinearFiltering&&(e=!0,z.type=1),e&&(z.isReady=!1,z._isRGBD=!1,z.invertY=!1);const m=async()=>{const T=w.isWebGPU,A=T?1:0;z.isReady=!1,T?await Promise.all([I.e(17).then(I.bind(I,13117)),I.e(18).then(I.bind(I,13130))]):await Promise.all([I.e(24).then(I.bind(I,13123)),I.e(25).then(I.bind(I,13138))]);const e=new P.d("rgbdDecode","rgbdDecode",null,null,1,null,3,w,!1,void 0,z.type,void 0,null,!1,void 0,A);e.externalTextureSamplerBinding=!0;const m=w.createRenderTargetTexture(z.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:z.samplingMode,type:z.type,format:5});e.onEffectCreatedObservable.addOnce((I=>{I.executeWhenCompiled((()=>{e.onApply=Q=>{Q._bindTexture("textureSampler",z),Q.setFloat2("scale",1,1)},Q.va().postProcessManager.directRender([e],m,!0),w.restoreDefaultFramebuffer(),w._releaseTexture(z),e&&e.dispose(),m._swapAndDie(z),z.isReady=!0}))}))};e&&(A?m():Q.onLoadObservable.addOnce(m))}static EncodeTextureToRGBD(Q,z){let I=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,w.d)("rgbdEncode",Q,z,I,1,5)}}}}]);