"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6,7],{10851:(v,T,X)=>{var O=X(1519),u=X(1047);u.d.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(u.d.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=O.b.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((v=>{this._texture._sphericalPolynomial=v,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(v){this._texture&&(this._texture._sphericalPolynomial=v)},enumerable:!0,configurable:!0})},10859:(v,T,X)=>{X.r(T),X.d(T,{Dispose:()=>n,DumpData:()=>H,DumpDataAsync:()=>M,DumpFramebuffer:()=>f,DumpTools:()=>V});var O=X(1536),u=X(1217),B=X(1040),m=X(1034);let A,x=null;async function f(v,T,X,O){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",B=arguments.length>5?arguments[5]:void 0,m=arguments.length>6?arguments[6]:void 0;const A=await X.readPixels(0,0,v,T);H(v,T,new Uint8Array(A.buffer),O,u,B,!0,void 0,m)}function M(v,T,X){let O=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",u=arguments.length>4?arguments[4]:void 0,B=arguments.length>5&&void 0!==arguments[5]&&arguments[5],m=arguments.length>6&&void 0!==arguments[6]&&arguments[6],A=arguments.length>7?arguments[7]:void 0;return new Promise((x=>{H(v,T,X,(v=>x(v)),O,u,B,m,A)}))}function H(v,T,f,M){let H=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",V=arguments.length>5?arguments[5]:void 0,D=arguments.length>6&&void 0!==arguments[6]&&arguments[6],s=arguments.length>7&&void 0!==arguments[7]&&arguments[7],F=arguments.length>8?arguments[8]:void 0;(async function(){return x||(x=new Promise(((v,T)=>{let u,B=null;const x={Cf:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(X.bind(X,1443)).then((f=>{let{ThinEngine:M}=f;try{u=new OffscreenCanvas(100,100),B=new M(u,!1,x)}catch(V){u=document.createElement("canvas"),B=new M(u,!1,x)}m.c.Instances.pop(),m.c.OnEnginesDisposedObservable.add((v=>{B&&v!==B&&!B.u&&0===m.c.Instances.length&&n()})),B.getCaps().parallelShaderCompile=void 0;const H=new O.b(B);X.e(32).then(X.bind(X,11562)).then((X=>{let{passPixelShader:m}=X;if(!B)return void T("Engine is not defined");const x=new O.c({Nb:B,name:m.name,fragmentShader:m.shader,samplerNames:["textureSampler"]});A={canvas:u,Nb:B,renderer:H,wrapper:x},v(A)}))})).catch(T)}))),await x})().then((X=>{if(X.Nb.setSize(v,T,!0),f instanceof Float32Array){const v=new Uint8Array(f.length);let T=f.length;for(;T--;){const X=f[T];v[T]=Math.round(255*(0,B.c)(X))}f=v}const O=X.Nb.createRawTexture(f,v,T,5,!1,!D,1);X.renderer.setViewport(),X.renderer.applyEffectWrapper(X.wrapper),X.wrapper.effect._bindTexture("textureSampler",O),X.renderer.draw(),s?u.c.ToBlob(X.canvas,(v=>{const T=new FileReader;T.onload=v=>{const T=v.target.result;M&&M(T)},T.readAsArrayBuffer(v)}),H,F):u.c.EncodeScreenshotCanvasData(X.canvas,M,H,V,F),O.dispose()}))}function n(){var v;A?(A.wrapper.dispose(),A.renderer.dispose(),A.Nb.dispose()):null===(v=x)||void 0===v||v.then((v=>{v.wrapper.dispose(),v.renderer.dispose(),v.Nb.dispose()}));x=null,A=null}const V={DumpData:H,DumpDataAsync:M,DumpFramebuffer:f,Dispose:n};u.c.DumpData=H,u.c.DumpDataAsync=M,u.c.DumpFramebuffer=f},10839:(v,T,X)=>{X.d(T,{e:()=>D,f:()=>k,i:()=>Q,k:()=>K});var O=X(1217),u=X(1006),B=X(1040),m=X(1483),A=X(1140),x=X(1047),f=(X(1209),X(1533)),M=X(1103);X(10846),X(10851),X(10859);const H="image/png",n=2,V=[134,22,135,150,246,214,150,54];function D(v){const T=new DataView(v.buffer,v.byteOffset,v.byteLength);let X=0;for(let m=0;m<V.length;m++)if(T.getUint8(X++)!==V[m])return M.d.Error("Not a babylon environment map"),null;let O="",u=0;for(;u=T.getUint8(X++);)O+=String.fromCharCode(u);let B=JSON.parse(O);return B=s(B),B.df&&(B.df.specularDataPosition=X,B.df.lodGenerationScale=B.df.lodGenerationScale||.8),B}function s(v){if(v.version>n)throw new Error(`Unsupported babylon environment map version "${v.version}". Latest supported version is "${n}".`);return 2===v.version?v:v={...v,version:2,imageType:H}}function F(v,T){const X=(T=s(T)).df;let O=Math.log2(T.width);if(O=Math.round(O)+1,X.mipmaps.length!==6*O)throw new Error(`Unsupported specular mipmaps number "${X.mipmaps.length}"`);const u=new Array(O);for(let B=0;B<O;B++){u[B]=new Array(6);for(let T=0;T<6;T++){const O=X.mipmaps[6*B+T];u[B][T]=new Uint8Array(v.buffer,v.byteOffset+X.specularDataPosition+O.position,O.length)}}return u}function k(v,T,X){const O=(X=s(X)).df;if(!O)return Promise.resolve();v._lodGenerationScale=O.lodGenerationScale;return l(v,F(T,X),X.imageType)}function b(v,T,X,O,u,B,m,A,x,f,M){return new Promise(((H,n)=>{if(X){const X=T.createTexture(null,!0,!0,null,1,null,(v=>{n(v)}),v);null===O||void 0===O||O.onEffectCreatedObservable.addOnce((A=>{A.executeWhenCompiled((()=>{O.externalTextureSamplerBinding=!0,O.onApply=O=>{O._bindTexture("textureSampler",X),O.setFloat2("scale",1,T._features.needsInvertingBitmap&&v instanceof ImageBitmap?-1:1)},T.scenes.length&&(T.scenes[0].postProcessManager.directRender([O],f,!0,B,m),T.restoreDefaultFramebuffer(),X.dispose(),URL.revokeObjectURL(u),H())}))}))}else{if(T._uploadImageToTexture(M,v,B,m),A){const X=x[m];X&&T._uploadImageToTexture(X._texture,v,B,0)}H()}}))}async function l(v,T){let u=arguments.length>2&&void 0!==arguments[2]?arguments[2]:H;if(!O.c.IsExponentOfTwo(v.width))throw new Error("Texture size must be a power of two");const m=(0,B.l)(v.width)+1,M=v.getEngine();let n=!1,V=!1,D=null,s=null,F=null;const k=M.getCaps();v.format=5,v.type=0,v.generateMipMaps=!0,v._cachedAnisotropicFilteringLevel=null,M.updateTextureSamplingMode(3,v),k.textureLOD?M._features.supportRenderAndCopyToLodForFloatTextures?k.textureHalfFloatRender&&k.textureHalfFloatLinearFiltering?(n=!0,v.type=2):k.textureFloatRender&&k.textureFloatLinearFiltering&&(n=!0,v.type=1):n=!1:(n=!1,V=!0,F={});let l=0;if(n)M.isWebGPU?(l=1,await X.e(17).then(X.bind(X,13170))):await X.e(24).then(X.bind(X,13178)),D=new f.d("rgbdDecode","rgbdDecode",null,null,1,null,3,M,!1,void 0,v.type,void 0,null,!1,void 0,l),v._isRGBD=!1,v.invertY=!1,s=M.createRenderTargetCubeTexture(v.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:v.type,format:5});else if(v._isRGBD=!0,v.invertY=!0,V){const T=3,X=v._lodGenerationScale,O=v._lodGenerationOffset;for(let u=0;u<T;u++){const B=(m-1)*X+O,f=O+(B-O)*(1-u/(T-1)),H=Math.round(Math.min(Math.max(f,0),B)),n=new A.d(M,2);n.isCube=!0,n.invertY=!0,n.generateMipMaps=!1,M.updateTextureSamplingMode(2,n);const V=new x.d(null);switch(V._isCube=!0,V._texture=n,F[H]=V,u){case 0:v._lodTextureLow=V;break;case 1:v._lodTextureMid=V;break;case 2:v._lodTextureHigh=V}}}const Q=[];for(let X=0;X<T.length;X++)for(let O=0;O<6;O++){const B=T[X][O],m=new Blob([B],{type:u}),A=URL.createObjectURL(m);let x;if(M._features.forceBitmapOverHTMLImageElement)x=M.createImageBitmap(m,{premultiplyAlpha:"none"}).then((T=>b(T,M,n,D,A,O,X,V,F,s,v)));else{const T=new Image;T.src=A,x=new Promise(((u,B)=>{T.onload=()=>{b(T,M,n,D,A,O,X,V,F,s,v).then((()=>u())).catch((v=>{B(v)}))},T.onerror=v=>{B(v)}}))}Q.push(x)}if(T.length<m){let X;const O=Math.pow(2,m-1-T.length),u=O*O*4;switch(v.type){case 0:X=new Uint8Array(u);break;case 2:X=new Uint16Array(u);break;case 1:X=new Float32Array(u)}for(let B=T.length;B<m;B++)for(let T=0;T<6;T++)M._uploadArrayBufferViewToTexture(v,X,T,B)}return Promise.all(Q).then((()=>{s&&(M._releaseTexture(v),s._swapAndDie(v)),D&&D.dispose(),V&&(v._lodTextureHigh&&v._lodTextureHigh._texture&&(v._lodTextureHigh._texture.isReady=!0),v._lodTextureMid&&v._lodTextureMid._texture&&(v._lodTextureMid._texture.isReady=!0),v._lodTextureLow&&v._lodTextureLow._texture&&(v._lodTextureLow._texture.isReady=!0))}))}function Q(v,T){const X=(T=s(T)).irradiance;if(!X)return;const O=new m.e;u.l.FromArrayToRef(X.x,0,O.x),u.l.FromArrayToRef(X.y,0,O.y),u.l.FromArrayToRef(X.z,0,O.z),u.l.FromArrayToRef(X.xx,0,O.xx),u.l.FromArrayToRef(X.yy,0,O.yy),u.l.FromArrayToRef(X.zz,0,O.zz),u.l.FromArrayToRef(X.yz,0,O.yz),u.l.FromArrayToRef(X.zx,0,O.zx),u.l.FromArrayToRef(X.xy,0,O.xy),v._sphericalPolynomial=O}function K(v,T,X,O,u){const B=l(v.getEngine().createRawCubeTexture(null,v.width,v.format,v.type,v.generateMipMaps,v.invertY,v.samplingMode,v._compression),T).then((()=>v));return v.onRebuildCallback=v=>({proxy:B,isReady:!0,isAsync:!0}),v._source=13,v._bufferViewArrayArray=T,v._lodGenerationScale=O,v._lodGenerationOffset=u,v._sphericalPolynomial=X,l(v,T).then((()=>(v.isReady=!0,v)))}},10846:(v,T,X)=>{X.d(T,{c:()=>B});var O=X(1533),u=X(1524);class B{static ExpandRGBDTexture(v){const T=v._texture;if(!T||!v.isRGBD)return;const u=T.getEngine(),B=u.getCaps(),m=T.isReady;let A=!1;B.textureHalfFloatRender&&B.textureHalfFloatLinearFiltering?(A=!0,T.type=2):B.textureFloatRender&&B.textureFloatLinearFiltering&&(A=!0,T.type=1),A&&(T.isReady=!1,T._isRGBD=!1,T.invertY=!1);const x=async()=>{const B=u.isWebGPU,m=B?1:0;T.isReady=!1,B?await Promise.all([X.e(17).then(X.bind(X,13170)),X.e(18).then(X.bind(X,13184))]):await Promise.all([X.e(24).then(X.bind(X,13178)),X.e(25).then(X.bind(X,13189))]);const A=new O.d("rgbdDecode","rgbdDecode",null,null,1,null,3,u,!1,void 0,T.type,void 0,null,!1,void 0,m);A.externalTextureSamplerBinding=!0;const x=u.createRenderTargetTexture(T.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:T.samplingMode,type:T.type,format:5});A.onEffectCreatedObservable.addOnce((X=>{X.executeWhenCompiled((()=>{A.onApply=v=>{v._bindTexture("textureSampler",T),v.setFloat2("scale",1,1)},v.va().postProcessManager.directRender([A],x,!0),u.restoreDefaultFramebuffer(),u._releaseTexture(T),A&&A.dispose(),x._swapAndDie(T),T.isReady=!0}))}))};A&&(m?x():v.onLoadObservable.addOnce(x))}static EncodeTextureToRGBD(v,T){let X=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,u.b)("rgbdEncode",v,T,X,1,5)}}}}]);