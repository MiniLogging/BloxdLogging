"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[6,7],{10145:(I,k,i)=>{var d=i(1486),u=i(1030);u.b.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(u.b.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=d.b.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((I=>{this._texture._sphericalPolynomial=I,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(I){this._texture&&(this._texture._sphericalPolynomial=I)},enumerable:!0,configurable:!0})},10148:(I,k,i)=>{i.r(k),i.d(k,{Dispose:()=>J,DumpData:()=>P,DumpDataAsync:()=>g,DumpFramebuffer:()=>l,DumpTools:()=>L});var d=i(1509),u=i(1179),H=i(1024),Y=i(1018);let x,j=null;async function l(I,k,i,d){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",H=arguments.length>5?arguments[5]:void 0,Y=arguments.length>6?arguments[6]:void 0;const x=await i.readPixels(0,0,I,k);P(I,k,new Uint8Array(x.buffer),d,u,H,!0,void 0,Y)}function g(I,k,i){let d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",u=arguments.length>4?arguments[4]:void 0,H=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],x=arguments.length>7?arguments[7]:void 0;return new Promise((j=>{P(I,k,i,(I=>j(I)),d,u,H,Y,x)}))}function P(I,k,l,g){let P=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",L=arguments.length>5?arguments[5]:void 0,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],h=arguments.length>7&&void 0!==arguments[7]&&arguments[7],Z=arguments.length>8?arguments[8]:void 0;(async function(){return j||(j=new Promise(((I,k)=>{let u,H=null;const j={Ne:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(i.bind(i,1401)).then((l=>{let{ThinEngine:g}=l;try{u=new OffscreenCanvas(100,100),H=new g(u,!1,j)}catch(L){u=document.createElement("canvas"),H=new g(u,!1,j)}Y.e.Instances.pop(),Y.e.OnEnginesDisposedObservable.add((I=>{H&&I!==H&&!H.u&&0===Y.e.Instances.length&&J()})),H.getCaps().parallelShaderCompile=void 0;const P=new d.e(H);i.e(32).then(i.bind(i,10824)).then((i=>{let{passPixelShader:Y}=i;if(!H)return void k("Engine is not defined");const j=new d.h({tb:H,name:Y.name,fragmentShader:Y.shader,samplerNames:["textureSampler"]});x={canvas:u,tb:H,renderer:P,wrapper:j},I(x)}))})).catch(k)}))),await j})().then((i=>{if(i.tb.setSize(I,k,!0),l instanceof Float32Array){const I=new Uint8Array(l.length);let k=l.length;for(;k--;){const i=l[k];I[k]=Math.round(255*(0,H.d)(i))}l=I}const d=i.tb.createRawTexture(l,I,k,5,!1,!s,1);i.renderer.setViewport(),i.renderer.applyEffectWrapper(i.wrapper),i.wrapper.effect._bindTexture("textureSampler",d),i.renderer.draw(),h?u.d.ToBlob(i.canvas,(I=>{const k=new FileReader;k.onload=I=>{const k=I.target.result;g&&g(k)},k.readAsArrayBuffer(I)}),P,Z):u.d.EncodeScreenshotCanvasData(i.canvas,g,P,L,Z),d.dispose()}))}function J(){var I;x?(x.wrapper.dispose(),x.renderer.dispose(),x.tb.dispose()):null===(I=j)||void 0===I||I.then((I=>{I.wrapper.dispose(),I.renderer.dispose(),I.tb.dispose()}));j=null,x=null}const L={DumpData:P,DumpDataAsync:g,DumpFramebuffer:l,Dispose:J};u.d.DumpData=P,u.d.DumpDataAsync=g,u.d.DumpFramebuffer=l},10137:(I,k,i)=>{i.d(k,{d:()=>s,h:()=>n,j:()=>o,l:()=>F});var d=i(1179),u=i(983),H=i(1024),Y=i(1459),x=i(1123),j=i(1030),l=(i(1175),i(1501)),g=i(1079);i(10140),i(10145),i(10148);const P="image/png",J=2,L=[134,22,135,150,246,214,150,54];function s(I){const k=new DataView(I.buffer,I.byteOffset,I.byteLength);let i=0;for(let Y=0;Y<L.length;Y++)if(k.getUint8(i++)!==L[Y])return g.d.Error("Not a babylon environment map"),null;let d="",u=0;for(;u=k.getUint8(i++);)d+=String.fromCharCode(u);let H=JSON.parse(d);return H=h(H),H.re&&(H.re.specularDataPosition=i,H.re.lodGenerationScale=H.re.lodGenerationScale||.8),H}function h(I){if(I.version>J)throw new Error(`Unsupported babylon environment map version "${I.version}". Latest supported version is "${J}".`);return 2===I.version?I:I={...I,version:2,imageType:P}}function Z(I,k){const i=(k=h(k)).re;let d=Math.log2(k.width);if(d=Math.round(d)+1,i.mipmaps.length!==6*d)throw new Error(`Unsupported specular mipmaps number "${i.mipmaps.length}"`);const u=new Array(d);for(let H=0;H<d;H++){u[H]=new Array(6);for(let k=0;k<6;k++){const d=i.mipmaps[6*H+k];u[H][k]=new Uint8Array(I.buffer,I.byteOffset+i.specularDataPosition+d.position,d.length)}}return u}function n(I,k,i){const d=(i=h(i)).re;if(!d)return Promise.resolve();I._lodGenerationScale=d.lodGenerationScale;return b(I,Z(k,i),i.imageType)}function B(I,k,i,d,u,H,Y,x,j,l,g){return new Promise(((P,J)=>{if(i){const i=k.createTexture(null,!0,!0,null,1,null,(I=>{J(I)}),I);null===d||void 0===d||d.onEffectCreatedObservable.addOnce((x=>{x.executeWhenCompiled((()=>{d.externalTextureSamplerBinding=!0,d.onApply=d=>{d._bindTexture("textureSampler",i),d.setFloat2("scale",1,k._features.needsInvertingBitmap&&I instanceof ImageBitmap?-1:1)},k.scenes.length&&(k.scenes[0].postProcessManager.directRender([d],l,!0,H,Y),k.restoreDefaultFramebuffer(),i.dispose(),URL.revokeObjectURL(u),P())}))}))}else{if(k._uploadImageToTexture(g,I,H,Y),x){const i=j[Y];i&&k._uploadImageToTexture(i._texture,I,H,0)}P()}}))}async function b(I,k){let u=arguments.length>2&&void 0!==arguments[2]?arguments[2]:P;if(!d.d.IsExponentOfTwo(I.width))throw new Error("Texture size must be a power of two");const Y=(0,H.i)(I.width)+1,g=I.getEngine();let J=!1,L=!1,s=null,h=null,Z=null;const n=g.getCaps();I.format=5,I.type=0,I.generateMipMaps=!0,I._cachedAnisotropicFilteringLevel=null,g.updateTextureSamplingMode(3,I),n.textureLOD?g._features.supportRenderAndCopyToLodForFloatTextures?n.textureHalfFloatRender&&n.textureHalfFloatLinearFiltering?(J=!0,I.type=2):n.textureFloatRender&&n.textureFloatLinearFiltering&&(J=!0,I.type=1):J=!1:(J=!1,L=!0,Z={});let b=0;if(J)g.isWebGPU?(b=1,await i.e(17).then(i.bind(i,12410))):await i.e(24).then(i.bind(i,12418)),s=new l.d("rgbdDecode","rgbdDecode",null,null,1,null,3,g,!1,void 0,I.type,void 0,null,!1,void 0,b),I._isRGBD=!1,I.invertY=!1,h=g.createRenderTargetCubeTexture(I.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:I.type,format:5});else if(I._isRGBD=!0,I.invertY=!0,L){const k=3,i=I._lodGenerationScale,d=I._lodGenerationOffset;for(let u=0;u<k;u++){const H=(Y-1)*i+d,l=d+(H-d)*(1-u/(k-1)),P=Math.round(Math.min(Math.max(l,0),H)),J=new x.c(g,2);J.isCube=!0,J.invertY=!0,J.generateMipMaps=!1,g.updateTextureSamplingMode(2,J);const L=new j.b(null);switch(L._isCube=!0,L._texture=J,Z[P]=L,u){case 0:I._lodTextureLow=L;break;case 1:I._lodTextureMid=L;break;case 2:I._lodTextureHigh=L}}}const o=[];for(let i=0;i<k.length;i++)for(let d=0;d<6;d++){const H=k[i][d],Y=new Blob([H],{type:u}),x=URL.createObjectURL(Y);let j;if(g._features.forceBitmapOverHTMLImageElement)j=g.createImageBitmap(Y,{premultiplyAlpha:"none"}).then((k=>B(k,g,J,s,x,d,i,L,Z,h,I)));else{const k=new Image;k.src=x,j=new Promise(((u,H)=>{k.onload=()=>{B(k,g,J,s,x,d,i,L,Z,h,I).then((()=>u())).catch((I=>{H(I)}))},k.onerror=I=>{H(I)}}))}o.push(j)}if(k.length<Y){let i;const d=Math.pow(2,Y-1-k.length),u=d*d*4;switch(I.type){case 0:i=new Uint8Array(u);break;case 2:i=new Uint16Array(u);break;case 1:i=new Float32Array(u)}for(let H=k.length;H<Y;H++)for(let k=0;k<6;k++)g._uploadArrayBufferViewToTexture(I,i,k,H)}return Promise.all(o).then((()=>{h&&(g._releaseTexture(I),h._swapAndDie(I)),s&&s.dispose(),L&&(I._lodTextureHigh&&I._lodTextureHigh._texture&&(I._lodTextureHigh._texture.isReady=!0),I._lodTextureMid&&I._lodTextureMid._texture&&(I._lodTextureMid._texture.isReady=!0),I._lodTextureLow&&I._lodTextureLow._texture&&(I._lodTextureLow._texture.isReady=!0))}))}function o(I,k){const i=(k=h(k)).irradiance;if(!i)return;const d=new Y.d;u.m.FromArrayToRef(i.x,0,d.x),u.m.FromArrayToRef(i.y,0,d.y),u.m.FromArrayToRef(i.z,0,d.z),u.m.FromArrayToRef(i.xx,0,d.xx),u.m.FromArrayToRef(i.yy,0,d.yy),u.m.FromArrayToRef(i.zz,0,d.zz),u.m.FromArrayToRef(i.yz,0,d.yz),u.m.FromArrayToRef(i.zx,0,d.zx),u.m.FromArrayToRef(i.xy,0,d.xy),I._sphericalPolynomial=d}function F(I,k,i,d,u){const H=b(I.getEngine().createRawCubeTexture(null,I.width,I.format,I.type,I.generateMipMaps,I.invertY,I.samplingMode,I._compression),k).then((()=>I));return I.onRebuildCallback=I=>({proxy:H,isReady:!0,isAsync:!0}),I._source=13,I._bufferViewArrayArray=k,I._lodGenerationScale=d,I._lodGenerationOffset=u,I._sphericalPolynomial=i,b(I,k).then((()=>(I.isReady=!0,I)))}},10140:(I,k,i)=>{i.d(k,{c:()=>H});var d=i(1501),u=i(1491);class H{static ExpandRGBDTexture(I){const k=I._texture;if(!k||!I.isRGBD)return;const u=k.getEngine(),H=u.getCaps(),Y=k.isReady;let x=!1;H.textureHalfFloatRender&&H.textureHalfFloatLinearFiltering?(x=!0,k.type=2):H.textureFloatRender&&H.textureFloatLinearFiltering&&(x=!0,k.type=1),x&&(k.isReady=!1,k._isRGBD=!1,k.invertY=!1);const j=async()=>{const H=u.isWebGPU,Y=H?1:0;k.isReady=!1,H?await Promise.all([i.e(17).then(i.bind(i,12410)),i.e(18).then(i.bind(i,12427))]):await Promise.all([i.e(24).then(i.bind(i,12418)),i.e(25).then(i.bind(i,12429))]);const x=new d.d("rgbdDecode","rgbdDecode",null,null,1,null,3,u,!1,void 0,k.type,void 0,null,!1,void 0,Y);x.externalTextureSamplerBinding=!0;const j=u.createRenderTargetTexture(k.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:k.samplingMode,type:k.type,format:5});x.onEffectCreatedObservable.addOnce((i=>{i.executeWhenCompiled((()=>{x.onApply=I=>{I._bindTexture("textureSampler",k),I.setFloat2("scale",1,1)},I.va().postProcessManager.directRender([x],j,!0),u.restoreDefaultFramebuffer(),u._releaseTexture(k),x&&x.dispose(),j._swapAndDie(k),k.isReady=!0}))}))};x&&(Y?j():I.onLoadObservable.addOnce(j))}static EncodeTextureToRGBD(I,k){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,u.c)("rgbdEncode",I,k,i,1,5)}}}}]);