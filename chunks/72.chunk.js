"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[72],{14427:(V,I,m)=>{m.d(I,{e:()=>k});var C=m(12921),l=m(12899);const s="cachedOperationValue",F="cachedExecutionId";class k extends C.e{constructor(V,I){super(I),this.value=this.registerDataOutput("value",V),this.isValid=this.registerDataOutput("isValid",l.d)}_updateOutputs(V){const I=V._getExecutionVariable(this,F,-1),m=V._getExecutionVariable(this,s,null);if(void 0!==m&&null!==m&&I===V.executionId)this.isValid.setValue(!0,V),this.value.setValue(m,V);else try{const I=this._doOperation(V);if(void 0===I||null===I)return void this.isValid.setValue(!1,V);V._setExecutionVariable(this,s,I),V._setExecutionVariable(this,F,V.executionId),this.value.setValue(I,V),this.isValid.setValue(!0,V)}catch(C){this.isValid.setValue(!1,V)}}}},14537:(V,I,m)=>{m.r(I),m.d(I,{FlowGraphGetPropertyBlock:()=>F});var C=m(12899),l=m(11048),s=m(14427);class F extends s.e{constructor(V){super(C.b,V),this.config=V,this.object=this.registerDataInput("object",C.b,V.object),this.propertyName=this.registerDataInput("propertyName",C.b,V.propertyName),this.customGetFunction=this.registerDataInput("customGetFunction",C.b)}_doOperation(V){const I=this.customGetFunction.getValue(V);let m;if(I)m=I(this.object.getValue(V),this.propertyName.getValue(V),V);else{const I=this.object.getValue(V),C=this.propertyName.getValue(V);m=I&&C?this._getPropertyValue(I,C):void 0}return m}_getPropertyValue(V,I){const m=I.split(".");let C=V;for(const l of m)if(C=C[l],void 0===C)return;return C}getClassName(){return"FlowGraphGetPropertyBlock"}}(0,l.h)("FlowGraphGetPropertyBlock",F)}}]);