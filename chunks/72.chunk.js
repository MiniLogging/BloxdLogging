"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[72],{14213:(x,O,Q)=>{Q.d(O,{d:()=>o});var X=Q(12726),Z=Q(12707);const n="cachedOperationValue",V="cachedExecutionId";class o extends X.d{constructor(x,O){super(O),this.value=this.registerDataOutput("value",x),this.isValid=this.registerDataOutput("isValid",Z.g)}_updateOutputs(x){const O=x._getExecutionVariable(this,V,-1),Q=x._getExecutionVariable(this,n,null);if(void 0!==Q&&null!==Q&&O===x.executionId)this.isValid.setValue(!0,x),this.value.setValue(Q,x);else try{const O=this._doOperation(x);if(void 0===O||null===O)return void this.isValid.setValue(!1,x);x._setExecutionVariable(this,n,O),x._setExecutionVariable(this,V,x.executionId),this.value.setValue(O,x),this.isValid.setValue(!0,x)}catch(X){this.isValid.setValue(!1,x)}}}},14339:(x,O,Q)=>{Q.r(O),Q.d(O,{FlowGraphGetPropertyBlock:()=>V});var X=Q(12707),Z=Q(10866),n=Q(14213);class V extends n.d{constructor(x){super(X.d,x),this.config=x,this.object=this.registerDataInput("object",X.d,x.object),this.propertyName=this.registerDataInput("propertyName",X.d,x.propertyName),this.customGetFunction=this.registerDataInput("customGetFunction",X.d)}_doOperation(x){const O=this.customGetFunction.getValue(x);let Q;if(O)Q=O(this.object.getValue(x),this.propertyName.getValue(x),x);else{const O=this.object.getValue(x),X=this.propertyName.getValue(x);Q=O&&X?this._getPropertyValue(O,X):void 0}return Q}_getPropertyValue(x,O){const Q=O.split(".");let X=x;for(const Z of Q)if(X=X[Z],void 0===X)return;return X}getClassName(){return"FlowGraphGetPropertyBlock"}}(0,Z.d)("FlowGraphGetPropertyBlock",V)}}]);