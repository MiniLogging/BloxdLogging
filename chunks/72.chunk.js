"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[72],{14364:(Z,c,L)=>{L.d(c,{d:()=>V});var k=L(12846),N=L(12825);const R="cachedOperationValue",G="cachedExecutionId";class V extends k.c{constructor(Z,c){super(c),this.value=this.registerDataOutput("value",Z),this.isValid=this.registerDataOutput("isValid",N.g)}_updateOutputs(Z){const c=Z._getExecutionVariable(this,G,-1),L=Z._getExecutionVariable(this,R,null);if(void 0!==L&&null!==L&&c===Z.executionId)this.isValid.setValue(!0,Z),this.value.setValue(L,Z);else try{const c=this._doOperation(Z);if(void 0===c||null===c)return void this.isValid.setValue(!1,Z);Z._setExecutionVariable(this,R,c),Z._setExecutionVariable(this,G,Z.executionId),this.value.setValue(c,Z),this.isValid.setValue(!0,Z)}catch(k){this.isValid.setValue(!1,Z)}}}},14492:(Z,c,L)=>{L.r(c),L.d(c,{FlowGraphGetPropertyBlock:()=>G});var k=L(12825),N=L(11012),R=L(14364);class G extends R.d{constructor(Z){super(k.e,Z),this.config=Z,this.object=this.registerDataInput("object",k.e,Z.object),this.propertyName=this.registerDataInput("propertyName",k.e,Z.propertyName),this.customGetFunction=this.registerDataInput("customGetFunction",k.e)}_doOperation(Z){const c=this.customGetFunction.getValue(Z);let L;if(c)L=c(this.object.getValue(Z),this.propertyName.getValue(Z),Z);else{const c=this.object.getValue(Z),k=this.propertyName.getValue(Z);L=c&&k?this._getPropertyValue(c,k):void 0}return L}_getPropertyValue(Z,c){const L=c.split(".");let k=Z;for(const N of L)if(k=k[N],void 0===k)return;return k}getClassName(){return"FlowGraphGetPropertyBlock"}}(0,N.g)("FlowGraphGetPropertyBlock",G)}}]);