"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[72],{14535:(G,V,W)=>{W.d(V,{c:()=>z});var J=W(13093),R=W(13071);const d="cachedOperationValue",k="cachedExecutionId";class z extends J.c{constructor(G,V){super(V),this.value=this.registerDataOutput("value",G),this.isValid=this.registerDataOutput("isValid",R.d)}_updateOutputs(G){const V=G._getExecutionVariable(this,k,-1),W=G._getExecutionVariable(this,d,null);if(void 0!==W&&null!==W&&V===G.executionId)this.isValid.setValue(!0,G),this.value.setValue(W,G);else try{const V=this._doOperation(G);if(void 0===V||null===V)return void this.isValid.setValue(!1,G);G._setExecutionVariable(this,d,V),G._setExecutionVariable(this,k,G.executionId),this.value.setValue(V,G),this.isValid.setValue(!0,G)}catch(J){this.isValid.setValue(!1,G)}}}},14666:(G,V,W)=>{W.r(V),W.d(V,{FlowGraphGetPropertyBlock:()=>k});var J=W(13071),R=W(11159),d=W(14535);class k extends d.c{constructor(G){super(J.b,G),this.config=G,this.object=this.registerDataInput("object",J.b,G.object),this.propertyName=this.registerDataInput("propertyName",J.b,G.propertyName),this.customGetFunction=this.registerDataInput("customGetFunction",J.b)}_doOperation(G){const V=this.customGetFunction.getValue(G);let W;if(V)W=V(this.object.getValue(G),this.propertyName.getValue(G),G);else{const V=this.object.getValue(G),J=this.propertyName.getValue(G);W=V&&J?this._getPropertyValue(V,J):void 0}return W}_getPropertyValue(G,V){const W=V.split(".");let J=G;for(const R of W)if(J=J[R],void 0===J)return;return J}getClassName(){return"FlowGraphGetPropertyBlock"}}(0,R.d)("FlowGraphGetPropertyBlock",k)}}]);