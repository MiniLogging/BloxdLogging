"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[60],{14485:(G,V,W)=>{W.r(V),W.d(V,{FlowGraphStopAnimationBlock:()=>z});var J=W(13071),R=W(11159),d=W(11201),k=W(13108);class z extends k.c{constructor(G){super(G),this.animationGroup=this.registerDataInput("animationGroup",J.b),this.stopAtFrame=this.registerDataInput("stopAtFrame",J.r,-1)}_preparePendingTasks(G){const V=this.animationGroup.getValue(G),W=this.stopAtFrame.getValue(G)??-1,J=G._getGlobalContextVariable("pendingStopAnimations",[]);J.push({uniqueId:V.uniqueId,stopAtFrame:W}),G._setGlobalContextVariable("pendingStopAnimations",J)}_cancelPendingTasks(G){const V=this.animationGroup.getValue(G),W=G._getGlobalContextVariable("pendingStopAnimations",[]);for(let J=0;J<W.length;J++)if(W[J].uniqueId===V.uniqueId){W.splice(J,1),G._setGlobalContextVariable("pendingStopAnimations",W);break}}_execute(G){const V=this.animationGroup.getValue(G),W=this.stopAtFrame.getValue(G)??-1;return V?isNaN(W)?this._reportError(G,"Invalid stop time."):(W>0?this._startPendingTasks(G):this._stopAnimation(V,G),void this.out._activateSignal(G)):(d.c.Warn("No animation group provided to stop."),this._reportError(G,"No animation group provided to stop."))}_executeOnTick(G){const V=this.animationGroup.getValue(G),W=G._getGlobalContextVariable("pendingStopAnimations",[]);for(let J=0;J<W.length;J++)if(W[J].uniqueId===V.uniqueId&&V.getCurrentFrame()>=W[J].stopAtFrame){this._stopAnimation(V,G),W.splice(J,1),G._setGlobalContextVariable("pendingStopAnimations",W),this.done._activateSignal(G),G._removePendingBlock(this);break}}getClassName(){return"FlowGraphStopAnimationBlock"}_stopAnimation(G,V){const W=V._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),J=W.indexOf(G.uniqueId);-1!==J&&(G.stop(),W.splice(J,1),V._setGlobalContextVariable("currentlyRunningAnimationGroups",W))}}(0,R.d)("FlowGraphStopAnimationBlock",z)}}]);