"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[60],{14157:(x,O,Q)=>{Q.r(O),Q.d(O,{FlowGraphStopAnimationBlock:()=>o});var X=Q(12707),Z=Q(10866),n=Q(10905),V=Q(12741);class o extends V.c{constructor(x){super(x),this.animationGroup=this.registerDataInput("animationGroup",X.d),this.stopAtFrame=this.registerDataInput("stopAtFrame",X.q,-1)}_preparePendingTasks(x){const O=this.animationGroup.getValue(x),Q=this.stopAtFrame.getValue(x)??-1,X=x._getGlobalContextVariable("pendingStopAnimations",[]);X.push({uniqueId:O.uniqueId,stopAtFrame:Q}),x._setGlobalContextVariable("pendingStopAnimations",X)}_cancelPendingTasks(x){const O=this.animationGroup.getValue(x),Q=x._getGlobalContextVariable("pendingStopAnimations",[]);for(let X=0;X<Q.length;X++)if(Q[X].uniqueId===O.uniqueId){Q.splice(X,1),x._setGlobalContextVariable("pendingStopAnimations",Q);break}}_execute(x){const O=this.animationGroup.getValue(x),Q=this.stopAtFrame.getValue(x)??-1;return O?isNaN(Q)?this._reportError(x,"Invalid stop time."):(Q>0?this._startPendingTasks(x):this._stopAnimation(O,x),void this.out._activateSignal(x)):(n.e.Warn("No animation group provided to stop."),this._reportError(x,"No animation group provided to stop."))}_executeOnTick(x){const O=this.animationGroup.getValue(x),Q=x._getGlobalContextVariable("pendingStopAnimations",[]);for(let X=0;X<Q.length;X++)if(Q[X].uniqueId===O.uniqueId&&O.getCurrentFrame()>=Q[X].stopAtFrame){this._stopAnimation(O,x),Q.splice(X,1),x._setGlobalContextVariable("pendingStopAnimations",Q),this.done._activateSignal(x),x._removePendingBlock(this);break}}getClassName(){return"FlowGraphStopAnimationBlock"}_stopAnimation(x,O){const Q=O._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),X=Q.indexOf(x.uniqueId);-1!==X&&(x.stop(),Q.splice(X,1),O._setGlobalContextVariable("currentlyRunningAnimationGroups",Q))}}(0,Z.d)("FlowGraphStopAnimationBlock",o)}}]);