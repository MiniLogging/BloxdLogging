"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[60],{14311:(Z,c,L)=>{L.r(c),L.d(c,{FlowGraphStopAnimationBlock:()=>V});var k=L(12825),N=L(11012),R=L(11052),G=L(12870);class V extends G.d{constructor(Z){super(Z),this.animationGroup=this.registerDataInput("animationGroup",k.e),this.stopAtFrame=this.registerDataInput("stopAtFrame",k.t,-1)}_preparePendingTasks(Z){const c=this.animationGroup.getValue(Z),L=this.stopAtFrame.getValue(Z)??-1,k=Z._getGlobalContextVariable("pendingStopAnimations",[]);k.push({uniqueId:c.uniqueId,stopAtFrame:L}),Z._setGlobalContextVariable("pendingStopAnimations",k)}_cancelPendingTasks(Z){const c=this.animationGroup.getValue(Z),L=Z._getGlobalContextVariable("pendingStopAnimations",[]);for(let k=0;k<L.length;k++)if(L[k].uniqueId===c.uniqueId){L.splice(k,1),Z._setGlobalContextVariable("pendingStopAnimations",L);break}}_execute(Z){const c=this.animationGroup.getValue(Z),L=this.stopAtFrame.getValue(Z)??-1;return c?isNaN(L)?this._reportError(Z,"Invalid stop time."):(L>0?this._startPendingTasks(Z):this._stopAnimation(c,Z),void this.out._activateSignal(Z)):(R.e.Warn("No animation group provided to stop."),this._reportError(Z,"No animation group provided to stop."))}_executeOnTick(Z){const c=this.animationGroup.getValue(Z),L=Z._getGlobalContextVariable("pendingStopAnimations",[]);for(let k=0;k<L.length;k++)if(L[k].uniqueId===c.uniqueId&&c.getCurrentFrame()>=L[k].stopAtFrame){this._stopAnimation(c,Z),L.splice(k,1),Z._setGlobalContextVariable("pendingStopAnimations",L),this.done._activateSignal(Z),Z._removePendingBlock(this);break}}getClassName(){return"FlowGraphStopAnimationBlock"}_stopAnimation(Z,c){const L=c._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),k=L.indexOf(Z.uniqueId);-1!==k&&(Z.stop(),L.splice(k,1),c._setGlobalContextVariable("currentlyRunningAnimationGroups",L))}}(0,N.g)("FlowGraphStopAnimationBlock",V)}}]);