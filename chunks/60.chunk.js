"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[60],{14054:(h,d,m)=>{m.r(d),m.d(d,{FlowGraphStopAnimationBlock:()=>a});var j=m(12671),A=m(11080),b=m(11121),w=m(12708);class a extends w.d{constructor(h){super(h),this.animationGroup=this.registerDataInput("animationGroup",j.e),this.stopAtFrame=this.registerDataInput("stopAtFrame",j.y,-1)}_preparePendingTasks(h){const d=this.animationGroup.getValue(h),m=this.stopAtFrame.getValue(h)??-1,j=h._getGlobalContextVariable("pendingStopAnimations",[]);j.push({uniqueId:d.uniqueId,stopAtFrame:m}),h._setGlobalContextVariable("pendingStopAnimations",j)}_cancelPendingTasks(h){const d=this.animationGroup.getValue(h),m=h._getGlobalContextVariable("pendingStopAnimations",[]);for(let j=0;j<m.length;j++)if(m[j].uniqueId===d.uniqueId){m.splice(j,1),h._setGlobalContextVariable("pendingStopAnimations",m);break}}_execute(h){const d=this.animationGroup.getValue(h),m=this.stopAtFrame.getValue(h)??-1;return d?isNaN(m)?this._reportError(h,"Invalid stop time."):(m>0?this._startPendingTasks(h):this._stopAnimation(d,h),void this.out._activateSignal(h)):(b.c.Warn("No animation group provided to stop."),this._reportError(h,"No animation group provided to stop."))}_executeOnTick(h){const d=this.animationGroup.getValue(h),m=h._getGlobalContextVariable("pendingStopAnimations",[]);for(let j=0;j<m.length;j++)if(m[j].uniqueId===d.uniqueId&&d.getCurrentFrame()>=m[j].stopAtFrame){this._stopAnimation(d,h),m.splice(j,1),h._setGlobalContextVariable("pendingStopAnimations",m),this.done._activateSignal(h),h._removePendingBlock(this);break}}getClassName(){return"FlowGraphStopAnimationBlock"}_stopAnimation(h,d){const m=d._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),j=m.indexOf(h.uniqueId);-1!==j&&(h.stop(),m.splice(j,1),d._setGlobalContextVariable("currentlyRunningAnimationGroups",m))}}(0,A.i)("FlowGraphStopAnimationBlock",a)}}]);