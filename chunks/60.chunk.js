"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[60],{14121:(q,f,j)=>{j.r(f),j.d(f,{FlowGraphStopAnimationBlock:()=>Q});var d=j(12709),g=j(10965),h=j(11005),L=j(12749);class Q extends L.d{constructor(q){super(q),this.animationGroup=this.registerDataInput("animationGroup",d.c),this.stopAtFrame=this.registerDataInput("stopAtFrame",d.o,-1)}_preparePendingTasks(q){const f=this.animationGroup.getValue(q),j=this.stopAtFrame.getValue(q)??-1,d=q._getGlobalContextVariable("pendingStopAnimations",[]);d.push({uniqueId:f.uniqueId,stopAtFrame:j}),q._setGlobalContextVariable("pendingStopAnimations",d)}_cancelPendingTasks(q){const f=this.animationGroup.getValue(q),j=q._getGlobalContextVariable("pendingStopAnimations",[]);for(let d=0;d<j.length;d++)if(j[d].uniqueId===f.uniqueId){j.splice(d,1),q._setGlobalContextVariable("pendingStopAnimations",j);break}}_execute(q){const f=this.animationGroup.getValue(q),j=this.stopAtFrame.getValue(q)??-1;return f?isNaN(j)?this._reportError(q,"Invalid stop time."):(j>0?this._startPendingTasks(q):this._stopAnimation(f,q),void this.out._activateSignal(q)):(h.e.Warn("No animation group provided to stop."),this._reportError(q,"No animation group provided to stop."))}_executeOnTick(q){const f=this.animationGroup.getValue(q),j=q._getGlobalContextVariable("pendingStopAnimations",[]);for(let d=0;d<j.length;d++)if(j[d].uniqueId===f.uniqueId&&f.getCurrentFrame()>=j[d].stopAtFrame){this._stopAnimation(f,q),j.splice(d,1),q._setGlobalContextVariable("pendingStopAnimations",j),this.done._activateSignal(q),q._removePendingBlock(this);break}}getClassName(){return"FlowGraphStopAnimationBlock"}_stopAnimation(q,f){const j=f._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),d=j.indexOf(q.uniqueId);-1!==d&&(q.stop(),j.splice(d,1),f._setGlobalContextVariable("currentlyRunningAnimationGroups",j))}}(0,g.f)("FlowGraphStopAnimationBlock",Q)}}]);