"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[60],{14046:(q,c,U)=>{U.r(c),U.d(c,{FlowGraphStopAnimationBlock:()=>X});var J=U(12648),Q=U(10850),s=U(10886),g=U(12693);class X extends g.d{constructor(q){super(q),this.animationGroup=this.registerDataInput("animationGroup",J.c),this.stopAtFrame=this.registerDataInput("stopAtFrame",J.t,-1)}_preparePendingTasks(q){const c=this.animationGroup.getValue(q),U=this.stopAtFrame.getValue(q)??-1,J=q._getGlobalContextVariable("pendingStopAnimations",[]);J.push({uniqueId:c.uniqueId,stopAtFrame:U}),q._setGlobalContextVariable("pendingStopAnimations",J)}_cancelPendingTasks(q){const c=this.animationGroup.getValue(q),U=q._getGlobalContextVariable("pendingStopAnimations",[]);for(let J=0;J<U.length;J++)if(U[J].uniqueId===c.uniqueId){U.splice(J,1),q._setGlobalContextVariable("pendingStopAnimations",U);break}}_execute(q){const c=this.animationGroup.getValue(q),U=this.stopAtFrame.getValue(q)??-1;return c?isNaN(U)?this._reportError(q,"Invalid stop time."):(U>0?this._startPendingTasks(q):this._stopAnimation(c,q),void this.out._activateSignal(q)):(s.c.Warn("No animation group provided to stop."),this._reportError(q,"No animation group provided to stop."))}_executeOnTick(q){const c=this.animationGroup.getValue(q),U=q._getGlobalContextVariable("pendingStopAnimations",[]);for(let J=0;J<U.length;J++)if(U[J].uniqueId===c.uniqueId&&c.getCurrentFrame()>=U[J].stopAtFrame){this._stopAnimation(c,q),U.splice(J,1),q._setGlobalContextVariable("pendingStopAnimations",U),this.done._activateSignal(q),q._removePendingBlock(this);break}}getClassName(){return"FlowGraphStopAnimationBlock"}_stopAnimation(q,c){const U=c._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),J=U.indexOf(q.uniqueId);-1!==J&&(q.stop(),U.splice(J,1),c._setGlobalContextVariable("currentlyRunningAnimationGroups",U))}}(0,Q.f)("FlowGraphStopAnimationBlock",X)}}]);