"use strict";(self.vfdo5lmva5i=self.vfdo5lmva5i||[]).push([[22],{11951:(w,o,H)=>{H.r(o),H.d(o,{ShaderMaterial:()=>i});var h=H(11745),E=H(11957),e=H(11720),D=H(11780),t=H(11690),X=H(11666),L=H(12022),A=H(11566),y=H(12027),z=H(11571),C=H(12077),Q=H(12072);const M={effect:null,subMesh:null};class i extends y.b{constructor(w,o,H){let h=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};super(w,o,!(arguments.length>4&&void 0!==arguments[4])||arguments[4]),this._textures={},this._textureArrays={},this._externalTextures={},this._floats={},this._ints={},this._uints={},this._floatsArrays={},this._colors3={},this._colors3Arrays={},this._colors4={},this._colors4Arrays={},this._vectors2={},this._vectors3={},this._vectors4={},this._quaternions={},this._quaternionsArrays={},this._matrices={},this._matrixArrays={},this._matrices3x3={},this._matrices2x2={},this._vectors2Arrays={},this._vectors3Arrays={},this._vectors4Arrays={},this._uniformBuffers={},this._textureSamplers={},this._storageBuffers={},this._cachedWorldViewMatrix=new e.Matrix,this._cachedWorldViewProjectionMatrix=new e.Matrix,this._multiview=!1,this._materialHelperNeedsPreviousMatrices=!1,this._shaderPath=H,this._options={needAlphaBlending:!1,needAlphaTesting:!1,attributes:["position","normal","uv"],uniforms:["worldViewProjection"],uniformBuffers:[],samplers:[],externalTextures:[],samplerObjects:[],storageBuffers:[],defines:[],useClipPlane:!1,...h}}get shaderPath(){return this._shaderPath}set shaderPath(w){this._shaderPath=w}get options(){return this._options}get isMultiview(){return this._multiview}getClassName(){return"ShaderMaterial"}needAlphaBlending(){return this.alpha<1||this._options.needAlphaBlending}needAlphaTesting(){return this._options.needAlphaTesting}_checkUniform(w){-1===this._options.uniforms.indexOf(w)&&this._options.uniforms.push(w)}setTexture(w,o){return-1===this._options.samplers.indexOf(w)&&this._options.samplers.push(w),this._textures[w]=o,this}removeTexture(w){delete this._textures[w]}setTextureArray(w,o){return-1===this._options.samplers.indexOf(w)&&this._options.samplers.push(w),this._checkUniform(w),this._textureArrays[w]=o,this}setExternalTexture(w,o){return-1===this._options.externalTextures.indexOf(w)&&this._options.externalTextures.push(w),this._externalTextures[w]=o,this}setFloat(w,o){return this._checkUniform(w),this._floats[w]=o,this}setInt(w,o){return this._checkUniform(w),this._ints[w]=o,this}setUInt(w,o){return this._checkUniform(w),this._uints[w]=o,this}setFloats(w,o){return this._checkUniform(w),this._floatsArrays[w]=o,this}setColor3(w,o){return this._checkUniform(w),this._colors3[w]=o,this}setColor3Array(w,o){return this._checkUniform(w),this._colors3Arrays[w]=o.reduce(((w,o)=>(w.push(o.r,o.g,o.b),w)),[]),this}setColor4(w,o){return this._checkUniform(w),this._colors4[w]=o,this}setColor4Array(w,o){return this._checkUniform(w),this._colors4Arrays[w]=o.reduce(((w,o)=>(w.push(o.r,o.g,o.b,o.a),w)),[]),this}setVector2(w,o){return this._checkUniform(w),this._vectors2[w]=o,this}setVector3(w,o){return this._checkUniform(w),this._vectors3[w]=o,this}setVector4(w,o){return this._checkUniform(w),this._vectors4[w]=o,this}setQuaternion(w,o){return this._checkUniform(w),this._quaternions[w]=o,this}setQuaternionArray(w,o){return this._checkUniform(w),this._quaternionsArrays[w]=o.reduce(((w,o)=>(o.toArray(w,w.length),w)),[]),this}setMatrix(w,o){return this._checkUniform(w),this._matrices[w]=o,this}setMatrices(w,o){this._checkUniform(w);const H=new Float32Array(16*o.length);for(let h=0;h<o.length;h++){o[h].copyToArray(H,16*h)}return this._matrixArrays[w]=H,this}setMatrix3x3(w,o){return this._checkUniform(w),this._matrices3x3[w]=o,this}setMatrix2x2(w,o){return this._checkUniform(w),this._matrices2x2[w]=o,this}setArray2(w,o){return this._checkUniform(w),this._vectors2Arrays[w]=o,this}setArray3(w,o){return this._checkUniform(w),this._vectors3Arrays[w]=o,this}setArray4(w,o){return this._checkUniform(w),this._vectors4Arrays[w]=o,this}setUniformBuffer(w,o){return-1===this._options.uniformBuffers.indexOf(w)&&this._options.uniformBuffers.push(w),this._uniformBuffers[w]=o,this}setTextureSampler(w,o){return-1===this._options.samplerObjects.indexOf(w)&&this._options.samplerObjects.push(w),this._textureSamplers[w]=o,this}setStorageBuffer(w,o){return-1===this._options.storageBuffers.indexOf(w)&&this._options.storageBuffers.push(w),this._storageBuffers[w]=o,this}setDefine(w,o){const H=w.trimEnd()+" ",h=this.options.defines.findIndex((o=>o===w||o.startsWith(H)));return h>=0&&this.options.defines.splice(h,1),("boolean"!==typeof o||o)&&this.options.defines.push(H+o),this}isReadyForSubMesh(w,o,H){return this.isReady(w,H,o)}isReady(w,o,H){var h;const e=H&&this._storeEffectOnSubMeshes;if(this.isFrozen){const w=e?H._drawWrapper:this._drawWrapper;if(w.effect&&w._wasPreviouslyReady&&w._wasPreviouslyUsingInstances===o)return!0}const t=this.Ow(),X=t.getEngine(),A=[],y=[];let z=null,i=this._shaderPath,s=this._options.uniforms,V=this._options.uniformBuffers,r=this._options.samplers;X.getCaps().multiview&&t.activeCamera&&t.activeCamera.outputRenderTarget&&t.activeCamera.outputRenderTarget.getViewCount()>1&&(this._multiview=!0,A.push("#define MULTIVIEW"),-1!==s.indexOf("viewProjection")&&-1===s.indexOf("viewProjectionR")&&s.push("viewProjectionR"));for(let E=0;E<this._options.defines.length;E++){const w=0===this._options.defines[E].indexOf("#define")?this._options.defines[E]:`#define ${this._options.defines[E]}`;A.push(w)}for(let E=0;E<this._options.attributes.length;E++)y.push(this._options.attributes[E]);if(w&&w.isVerticesDataPresent(D.e.ColorKind)&&(-1===y.indexOf(D.e.ColorKind)&&y.push(D.e.ColorKind),A.push("#define VERTEXCOLOR")),o&&(A.push("#define INSTANCES"),(0,Q.bb)(y,this._materialHelperNeedsPreviousMatrices),null!==w&&void 0!==w&&w.hasThinInstances&&(A.push("#define THIN_INSTANCES"),w&&w.isVerticesDataPresent(D.e.ColorInstanceKind)&&(y.push(D.e.ColorInstanceKind),A.push("#define INSTANCESCOLOR")))),w&&w.useBones&&w.computeBonesUsingShaders&&w.skeleton){y.push(D.e.MatricesIndicesKind),y.push(D.e.MatricesWeightsKind),w.numBoneInfluencers>4&&(y.push(D.e.MatricesIndicesExtraKind),y.push(D.e.MatricesWeightsExtraKind));const o=w.skeleton;A.push("#define NUM_BONE_INFLUENCERS "+w.numBoneInfluencers),z=new L.e,z.addCPUSkinningFallback(0,w),o.isUsingTextureForMatrices?(A.push("#define BONETEXTURE"),-1===s.indexOf("boneTextureWidth")&&s.push("boneTextureWidth"),-1===this._options.samplers.indexOf("boneSampler")&&this._options.samplers.push("boneSampler")):(A.push("#define BonesPerMesh "+(o.bones.length+1)),-1===s.indexOf("mBones")&&s.push("mBones"))}else A.push("#define NUM_BONE_INFLUENCERS 0");let k=0;const P=w?w.morphTargetManager:null;if(P){const o=-1!==A.indexOf("#define UV1"),H=-1!==A.indexOf("#define UV2"),h=-1!==A.indexOf("#define TANGENT"),E=-1!==A.indexOf("#define NORMAL"),e=-1!==A.indexOf("#define VERTEXCOLOR");k=(0,Q.G)(P,A,y,w,!0,E,h,o,H,e),P.isUsingTextureForTargets&&(-1===s.indexOf("morphTargetTextureIndices")&&s.push("morphTargetTextureIndices"),-1===this._options.samplers.indexOf("morphTargets")&&this._options.samplers.push("morphTargets")),k>0&&(s=s.slice(),s.push("morphTargetInfluences"),s.push("morphTargetCount"),s.push("morphTargetTextureInfo"),s.push("morphTargetTextureIndices"))}else A.push("#define NUM_MORPH_INFLUENCERS 0");if(w){const o=w.bakedVertexAnimationManager;o&&o.isEnabled&&(A.push("#define BAKED_VERTEX_ANIMATION_TEXTURE"),-1===s.indexOf("bakedVertexAnimationSettings")&&s.push("bakedVertexAnimationSettings"),-1===s.indexOf("bakedVertexAnimationTextureSizeInverted")&&s.push("bakedVertexAnimationTextureSizeInverted"),-1===s.indexOf("bakedVertexAnimationTime")&&s.push("bakedVertexAnimationTime"),-1===this._options.samplers.indexOf("bakedVertexAnimationTexture")&&this._options.samplers.push("bakedVertexAnimationTexture")),(0,Q.v)(y,w,A)}for(const E in this._textures)if(!this._textures[E].isReady())return!1;w&&this.needAlphaTestingForMesh(w)&&A.push("#define ALPHATEST"),!1!==this._options.useClipPlane&&((0,C.c)(s),(0,C.j)(this,t,A)),t.fogEnabled&&null!==w&&void 0!==w&&w.applyFog&&t.fogMode!==E.e.FOGMODE_NONE&&(A.push("#define FOG"),-1===s.indexOf("view")&&s.push("view"),-1===s.indexOf("vFogInfos")&&s.push("vFogInfos"),-1===s.indexOf("vFogColor")&&s.push("vFogColor")),this._useLogarithmicDepth&&(A.push("#define LOGARITHMICDEPTH"),-1===s.indexOf("logarithmicDepthConstant")&&s.push("logarithmicDepthConstant")),this.customShaderNameResolve&&(s=s.slice(),V=V.slice(),r=r.slice(),i=this.customShaderNameResolve(this.name,s,V,r,A,y));const l=e?H._getDrawWrapper(void 0,!0):this._drawWrapper,O=(null===l||void 0===l?void 0:l.effect)??null,T=(null===l||void 0===l?void 0:l.defines)??null,S=A.join("\n");let c=O;return T!==S&&(c=X.createEffect(i,{attributes:y,uniformsNames:s,uniformBuffersNames:V,samplers:r,defines:S,fallbacks:z,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousMorphTargets:k},shaderLanguage:this._options.shaderLanguage,extraInitializationsAsync:this._options.extraInitializationsAsync},X),e?H.setEffect(c,S,this._materialContext):l&&l.setEffect(c,S),this._onEffectCreatedObservable&&(M.effect=c,M.subMesh=H??(null===w||void 0===w?void 0:w.Le[0])??null,this._onEffectCreatedObservable.notifyObservers(M))),l._wasPreviouslyUsingInstances=!!o,!(null===(h=c)||void 0===h||!h.isReady())&&(O!==c&&t.resetCachedMaterial(),l._wasPreviouslyReady=!0,!0)}bindOnlyWorldMatrix(w,o){const H=o??this.getEffect();if(!H)return;const h=this._options.uniforms;-1!==h.indexOf("world")&&H.setMatrix("world",w);const E=this.Ow();-1!==h.indexOf("worldView")&&(w.multiplyToRef(E.getViewMatrix(),this._cachedWorldViewMatrix),H.setMatrix("worldView",this._cachedWorldViewMatrix)),-1!==h.indexOf("worldViewProjection")&&(w.multiplyToRef(E.getTransformMatrix(),this._cachedWorldViewProjectionMatrix),H.setMatrix("worldViewProjection",this._cachedWorldViewProjectionMatrix)),-1!==h.indexOf("view")&&H.setMatrix("view",E.getViewMatrix())}bindForSubMesh(w,o,H){var h;this.bind(w,o,null===(h=H._drawWrapperOverride)||void 0===h?void 0:h.effect,H)}bind(w,o,H,h){const E=h&&this._storeEffectOnSubMeshes,e=H??(E?h.effect:this.getEffect());if(!e)return;const D=this.Ow();this._activeEffect=e,this.bindOnlyWorldMatrix(w,H);const t=this._options.uniformBuffers;let X=!1;if(e&&t&&t.length>0&&D.getEngine().supportsUniformBuffers)for(let y=0;y<t.length;++y){switch(t[y]){case"Mesh":o&&(o.getMeshUniformBuffer().bindToEffect(e,"Mesh"),o.transferToEffect(w));break;case"Scene":(0,Q.n)(e,D.getSceneUniformBuffer()),D.finalizeSceneUbo(),X=!0}}const L=o&&E?this._mustRebind(D,e,h,o.visibility):D.getCachedMaterial()!==this;if(e&&L){let w;for(w in X||-1===this._options.uniforms.indexOf("view")||e.setMatrix("view",D.getViewMatrix()),X||-1===this._options.uniforms.indexOf("projection")||e.setMatrix("projection",D.getProjectionMatrix()),X||-1===this._options.uniforms.indexOf("viewProjection")||(e.setMatrix("viewProjection",D.getTransformMatrix()),this._multiview&&e.setMatrix("viewProjectionR",D._transformMatrixR)),D.activeCamera&&-1!==this._options.uniforms.indexOf("cameraPosition")&&e.setVector3("cameraPosition",D.activeCamera.globalPosition),(0,Q.e)(o,e),(0,C.e)(e,this,D),this._useLogarithmicDepth&&(0,Q.h)(E?h.materialDefines:e.defines,e,D),o&&(0,Q.f)(D,o,e),this._textures)e.setTexture(w,this._textures[w]);for(w in this._textureArrays)e.setTextureArray(w,this._textureArrays[w]);for(w in this._ints)e.setInt(w,this._ints[w]);for(w in this._uints)e.setUInt(w,this._uints[w]);for(w in this._floats)e.setFloat(w,this._floats[w]);for(w in this._floatsArrays)e.setArray(w,this._floatsArrays[w]);for(w in this._colors3)e.setColor3(w,this._colors3[w]);for(w in this._colors3Arrays)e.setArray3(w,this._colors3Arrays[w]);for(w in this._colors4){const o=this._colors4[w];e.setFloat4(w,o.r,o.g,o.b,o.a)}for(w in this._colors4Arrays)e.setArray4(w,this._colors4Arrays[w]);for(w in this._vectors2)e.setVector2(w,this._vectors2[w]);for(w in this._vectors3)e.setVector3(w,this._vectors3[w]);for(w in this._vectors4)e.setVector4(w,this._vectors4[w]);for(w in this._quaternions)e.setQuaternion(w,this._quaternions[w]);for(w in this._matrices)e.setMatrix(w,this._matrices[w]);for(w in this._matrixArrays)e.setMatrices(w,this._matrixArrays[w]);for(w in this._matrices3x3)e.setMatrix3x3(w,this._matrices3x3[w]);for(w in this._matrices2x2)e.setMatrix2x2(w,this._matrices2x2[w]);for(w in this._vectors2Arrays)e.setArray2(w,this._vectors2Arrays[w]);for(w in this._vectors3Arrays)e.setArray3(w,this._vectors3Arrays[w]);for(w in this._vectors4Arrays)e.setArray4(w,this._vectors4Arrays[w]);for(w in this._quaternionsArrays)e.setArray4(w,this._quaternionsArrays[w]);for(w in this._uniformBuffers){const o=this._uniformBuffers[w].getBuffer();o&&e.bindUniformBuffer(o,w)}const H=D.getEngine(),t=H.setExternalTexture;if(t)for(w in this._externalTextures)t.call(H,w,this._externalTextures[w]);const L=H.setTextureSampler;if(L)for(w in this._textureSamplers)L.call(H,w,this._textureSamplers[w]);const A=H.setStorageBuffer;if(A)for(w in this._storageBuffers)A.call(H,w,this._storageBuffers[w])}if(e&&o&&(L||!this.isFrozen)){(0,Q.k)(o,e),o.morphTargetManager&&o.morphTargetManager.isUsingTextureForTargets&&o.morphTargetManager._bind(e);const w=o.bakedVertexAnimationManager;if(w&&w.isEnabled){var A;const w=E?h._drawWrapper:this._drawWrapper;null===(A=o.bakedVertexAnimationManager)||void 0===A||A.bind(e,!!w._wasPreviouslyUsingInstances)}}this._afterBind(o,e,h)}getActiveTextures(){const w=super.getActiveTextures();for(const o in this._textures)w.push(this._textures[o]);for(const o in this._textureArrays){const H=this._textureArrays[o];for(let o=0;o<H.length;o++)w.push(H[o])}return w}hasTexture(w){if(super.hasTexture(w))return!0;for(const o in this._textures)if(this._textures[o]===w)return!0;for(const o in this._textureArrays){const H=this._textureArrays[o];for(let o=0;o<H.length;o++)if(H[o]===w)return!0}return!1}clone(w){const o=h.e.Clone((()=>new i(w,this.Ow(),this._shaderPath,this._options,this._storeEffectOnSubMeshes)),this);o.name=w,o.id=w,"object"===typeof o._shaderPath&&(o._shaderPath={...o._shaderPath}),this._options={...this._options};const H=Object.keys(this._options);for(const h of H){const w=this._options[h];Array.isArray(w)&&(this._options[h]=w.slice(0))}this.stencil.copyTo(o.stencil);for(const h in this._textures)o.setTexture(h,this._textures[h]);for(const h in this._textureArrays)o.setTextureArray(h,this._textureArrays[h]);for(const h in this._externalTextures)o.setExternalTexture(h,this._externalTextures[h]);for(const h in this._ints)o.setInt(h,this._ints[h]);for(const h in this._uints)o.setUInt(h,this._uints[h]);for(const h in this._floats)o.setFloat(h,this._floats[h]);for(const h in this._floatsArrays)o.setFloats(h,this._floatsArrays[h]);for(const h in this._colors3)o.setColor3(h,this._colors3[h]);for(const h in this._colors3Arrays)o._colors3Arrays[h]=this._colors3Arrays[h];for(const h in this._colors4)o.setColor4(h,this._colors4[h]);for(const h in this._colors4Arrays)o._colors4Arrays[h]=this._colors4Arrays[h];for(const h in this._vectors2)o.setVector2(h,this._vectors2[h]);for(const h in this._vectors3)o.setVector3(h,this._vectors3[h]);for(const h in this._vectors4)o.setVector4(h,this._vectors4[h]);for(const h in this._quaternions)o.setQuaternion(h,this._quaternions[h]);for(const h in this._quaternionsArrays)o._quaternionsArrays[h]=this._quaternionsArrays[h];for(const h in this._matrices)o.setMatrix(h,this._matrices[h]);for(const h in this._matrixArrays)o._matrixArrays[h]=this._matrixArrays[h].slice();for(const h in this._matrices3x3)o.setMatrix3x3(h,this._matrices3x3[h]);for(const h in this._matrices2x2)o.setMatrix2x2(h,this._matrices2x2[h]);for(const h in this._vectors2Arrays)o.setArray2(h,this._vectors2Arrays[h]);for(const h in this._vectors3Arrays)o.setArray3(h,this._vectors3Arrays[h]);for(const h in this._vectors4Arrays)o.setArray4(h,this._vectors4Arrays[h]);for(const h in this._uniformBuffers)o.setUniformBuffer(h,this._uniformBuffers[h]);for(const h in this._textureSamplers)o.setTextureSampler(h,this._textureSamplers[h]);for(const h in this._storageBuffers)o.setStorageBuffer(h,this._storageBuffers[h]);return o}dispose(w,o,H){if(o){let w;for(w in this._textures)this._textures[w].dispose();for(w in this._textureArrays){const o=this._textureArrays[w];for(let w=0;w<o.length;w++)o[w].dispose()}}this._textures={},super.dispose(w,o,H)}serialize(){const w=h.e.Serialize(this);let o;for(o in w.customType="BABYLON.ShaderMaterial",w.uniqueId=this.uniqueId,w.options=this._options,w.shaderPath=this._shaderPath,w.storeEffectOnSubMeshes=this._storeEffectOnSubMeshes,w.stencil=this.stencil.serialize(),w.textures={},this._textures)w.textures[o]=this._textures[o].serialize();for(o in w.textureArrays={},this._textureArrays){w.textureArrays[o]=[];const H=this._textureArrays[o];for(let h=0;h<H.length;h++)w.textureArrays[o].push(H[h].serialize())}for(o in w.ints={},this._ints)w.ints[o]=this._ints[o];for(o in w.uints={},this._uints)w.uints[o]=this._uints[o];for(o in w.floats={},this._floats)w.floats[o]=this._floats[o];for(o in w.floatsArrays={},this._floatsArrays)w.floatsArrays[o]=this._floatsArrays[o];for(o in w.colors3={},this._colors3){const H=this._colors3[o];w.colors3[o]=[H.r,H.g,H.b]}for(o in w.colors3Arrays={},this._colors3Arrays)w.colors3Arrays[o]=this._colors3Arrays[o];for(o in w.colors4={},this._colors4){const H=this._colors4[o];w.colors4[o]=[H.r,H.g,H.b,H.a]}for(o in w.colors4Arrays={},this._colors4Arrays)w.colors4Arrays[o]=this._colors4Arrays[o];for(o in w.vectors2={},this._vectors2){const H=this._vectors2[o];w.vectors2[o]=[H.x,H.y]}for(o in w.vectors3={},this._vectors3){const H=this._vectors3[o];w.vectors3[o]=[H.x,H.y,H.z]}for(o in w.vectors4={},this._vectors4){const H=this._vectors4[o];w.vectors4[o]=[H.x,H.y,H.z,H.w]}for(o in w.quaternions={},this._quaternions)w.quaternions[o]=this._quaternions[o].Ae();for(o in w.matrices={},this._matrices)w.matrices[o]=this._matrices[o].Ae();for(o in w.matrixArray={},this._matrixArrays)w.matrixArray[o]=this._matrixArrays[o];for(o in w.matrices3x3={},this._matrices3x3)w.matrices3x3[o]=this._matrices3x3[o];for(o in w.matrices2x2={},this._matrices2x2)w.matrices2x2[o]=this._matrices2x2[o];for(o in w.vectors2Arrays={},this._vectors2Arrays)w.vectors2Arrays[o]=this._vectors2Arrays[o];for(o in w.vectors3Arrays={},this._vectors3Arrays)w.vectors3Arrays[o]=this._vectors3Arrays[o];for(o in w.vectors4Arrays={},this._vectors4Arrays)w.vectors4Arrays[o]=this._vectors4Arrays[o];for(o in w.quaternionsArrays={},this._quaternionsArrays)w.quaternionsArrays[o]=this._quaternionsArrays[o];return w}static Parse(w,o,H){const E=h.e.Parse((()=>new i(w.name,o,w.shaderPath,w.options,w.storeEffectOnSubMeshes)),w,o,H);let D;for(D in w.stencil&&E.stencil.parse(w.stencil,o,H),w.textures)E.setTexture(D,t.d.Parse(w.textures[D],o,H));for(D in w.textureArrays){const h=w.textureArrays[D],e=[];for(let w=0;w<h.length;w++)e.push(t.d.Parse(h[w],o,H));E.setTextureArray(D,e)}for(D in w.ints)E.setInt(D,w.ints[D]);for(D in w.uints)E.setUInt(D,w.uints[D]);for(D in w.floats)E.setFloat(D,w.floats[D]);for(D in w.floatsArrays)E.setFloats(D,w.floatsArrays[D]);for(D in w.colors3){const o=w.colors3[D];E.setColor3(D,{r:o[0],g:o[1],b:o[2]})}for(D in w.colors3Arrays){const o=w.colors3Arrays[D].reduce(((w,o,H)=>(H%3===0?w.push([o]):w[w.length-1].push(o),w)),[]).map((w=>({r:w[0],g:w[1],b:w[2]})));E.setColor3Array(D,o)}for(D in w.colors4){const o=w.colors4[D];E.setColor4(D,{r:o[0],g:o[1],b:o[2],a:o[3]})}for(D in w.colors4Arrays){const o=w.colors4Arrays[D].reduce(((w,o,H)=>(H%4===0?w.push([o]):w[w.length-1].push(o),w)),[]).map((w=>({r:w[0],g:w[1],b:w[2],a:w[3]})));E.setColor4Array(D,o)}for(D in w.vectors2){const o=w.vectors2[D];E.setVector2(D,{x:o[0],y:o[1]})}for(D in w.vectors3){const o=w.vectors3[D];E.setVector3(D,{x:o[0],y:o[1],z:o[2]})}for(D in w.vectors4){const o=w.vectors4[D];E.setVector4(D,{x:o[0],y:o[1],z:o[2],w:o[3]})}for(D in w.quaternions)E.setQuaternion(D,e.Quaternion.Po(w.quaternions[D]));for(D in w.matrices)E.setMatrix(D,e.Matrix.Po(w.matrices[D]));for(D in w.matrixArray)E._matrixArrays[D]=new Float32Array(w.matrixArray[D]);for(D in w.matrices3x3)E.setMatrix3x3(D,w.matrices3x3[D]);for(D in w.matrices2x2)E.setMatrix2x2(D,w.matrices2x2[D]);for(D in w.vectors2Arrays)E.setArray2(D,w.vectors2Arrays[D]);for(D in w.vectors3Arrays)E.setArray3(D,w.vectors3Arrays[D]);for(D in w.vectors4Arrays)E.setArray4(D,w.vectors4Arrays[D]);for(D in w.quaternionsArrays)E.setArray4(D,w.quaternionsArrays[D]);return E}static async ParseFromFileAsync(w,o,H){let h=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"";return await new Promise(((E,e)=>{const D=new A.b;D.addEventListener("readystatechange",(()=>{if(4==D.readyState)if(200==D.status){const o=JSON.parse(D.responseText),e=this.Parse(o,H||z.e.LastCreatedScene,h);w&&(e.name=w),E(e)}else e("Unable to load the ShaderMaterial")})),D.open("GET",o),D.send()}))}static async ParseFromSnippetAsync(w,o){let H=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return await new Promise(((h,E)=>{const e=new A.b;e.addEventListener("readystatechange",(()=>{if(4==e.readyState)if(200==e.status){const E=JSON.parse(JSON.parse(e.responseText).jsonPayload),D=JSON.parse(E.shaderMaterial),t=this.Parse(D,o||z.e.LastCreatedScene,H);t.snippetId=w,h(t)}else E("Unable to load the snippet "+w)})),e.open("GET",this.SnippetUrl+"/"+w.replace(/#/g,"/")),e.send()}))}}i.SnippetUrl="https://snippet.babylonjs.com",i.CreateFromSnippetAsync=i.ParseFromSnippetAsync,(0,X.g)("BABYLON.ShaderMaterial",i)}}]);