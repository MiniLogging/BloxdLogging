"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[102],{13980:(W,F,c)=>{c.r(F),c.d(F,{colorPixelShaderWGSL:()=>w});var T=c(594);c(12208),c(12235),c(12241),c(12248);const Y="colorPixelShader",Z="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vColor: vec4f;\n#else\nuniform color: vec4f;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nfragmentOutputs.color=input.vColor;\n#else\nfragmentOutputs.color=uniforms.color;\n#endif\n#include<fogFragment>(color,fragmentOutputs.color)\n#define CUSTOM_FRAGMENT_MAIN_END\n}";T.c.ShadersStoreWGSL[Y]||(T.c.ShadersStoreWGSL[Y]=Z);const w={name:Y,shader:Z}}}]);