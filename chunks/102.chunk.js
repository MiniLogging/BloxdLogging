"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[102],{14268:(n,k,T)=>{T.r(k),T.d(k,{colorPixelShaderWGSL:()=>G});var c=T(624);T(12491),T(12519),T(12521),T(12532);const K="colorPixelShader",Q="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vColor: vec4f;\n#else\nuniform color: vec4f;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nfragmentOutputs.color=input.vColor;\n#else\nfragmentOutputs.color=uniforms.color;\n#endif\n#include<fogFragment>(color,fragmentOutputs.color)\n#define CUSTOM_FRAGMENT_MAIN_END\n}";c.b.ShadersStoreWGSL[K]||(c.b.ShadersStoreWGSL[K]=Q);const G={name:K,shader:Q}}}]);