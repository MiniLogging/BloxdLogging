"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[102],{14286:(P,Q,O)=>{O.r(Q),O.d(Q,{colorPixelShaderWGSL:()=>m});var b=O(651);O(12542),O(12568),O(12575),O(12586);const F="colorPixelShader",g="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vColor: vec4f;\n#else\nuniform color: vec4f;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nfragmentOutputs.color=input.vColor;\n#else\nfragmentOutputs.color=uniforms.color;\n#endif\n#include<fogFragment>(color,fragmentOutputs.color)\n#define CUSTOM_FRAGMENT_MAIN_END\n}";b.d.ShadersStoreWGSL[F]||(b.d.ShadersStoreWGSL[F]=g);const m={name:F,shader:g}}}]);