"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[102],{14099:(J,T,b)=>{b.r(T),b.d(T,{colorPixelShaderWGSL:()=>B});var q=b(596);b(12227),b(12250),b(12258),b(12272);const t="colorPixelShader",j="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vColor: vec4f;\n#else\nuniform color: vec4f;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nfragmentOutputs.color=input.vColor;\n#else\nfragmentOutputs.color=uniforms.color;\n#endif\n#include<fogFragment>(color,fragmentOutputs.color)\n#define CUSTOM_FRAGMENT_MAIN_END\n}";q.c.ShadersStoreWGSL[t]||(q.c.ShadersStoreWGSL[t]=j);const B={name:t,shader:j}}}]);