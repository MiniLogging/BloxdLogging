"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[7],{10119:(V,H,t)=>{t.r(H),t.d(H,{Dispose:()=>J,DumpData:()=>a,DumpDataAsync:()=>d,DumpFramebuffer:()=>E,DumpTools:()=>O});var I=t(1469),Z=t(1145),h=t(960),f=t(958);let m,K=null;async function E(V,H,t,I){let Z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",h=arguments.length>5?arguments[5]:void 0,f=arguments.length>6?arguments[6]:void 0;const m=await t.readPixels(0,0,V,H);a(V,H,new Uint8Array(m.buffer),I,Z,h,!0,void 0,f)}function d(V,H,t){let I=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",Z=arguments.length>4?arguments[4]:void 0,h=arguments.length>5&&void 0!==arguments[5]&&arguments[5],f=arguments.length>6&&void 0!==arguments[6]&&arguments[6],m=arguments.length>7?arguments[7]:void 0;return new Promise((K=>{a(V,H,t,(V=>K(V)),I,Z,h,f,m)}))}function a(V,H,E,d){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",O=arguments.length>5?arguments[5]:void 0,C=arguments.length>6&&void 0!==arguments[6]&&arguments[6],S=arguments.length>7&&void 0!==arguments[7]&&arguments[7],v=arguments.length>8?arguments[8]:void 0;(async function(){return K||(K=new Promise(((V,H)=>{let Z,h=null;const K={Xe:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(t.bind(t,1370)).then((E=>{let{ThinEngine:d}=E;try{Z=new OffscreenCanvas(100,100),h=new d(Z,!1,K)}catch(O){Z=document.createElement("canvas"),h=new d(Z,!1,K)}f.e.Instances.pop(),f.e.OnEnginesDisposedObservable.add((V=>{h&&V!==h&&!h.u&&0===f.e.Instances.length&&J()})),h.getCaps().parallelShaderCompile=void 0;const a=new I.b(h);t.e(32).then(t.bind(t,10806)).then((t=>{let{passPixelShader:f}=t;if(!h)return void H("Engine is not defined");const K=new I.f({ob:h,name:f.name,fragmentShader:f.shader,samplerNames:["textureSampler"]});m={canvas:Z,ob:h,renderer:a,wrapper:K},V(m)}))})).catch(H)}))),await K})().then((t=>{if(t.ob.setSize(V,H,!0),E instanceof Float32Array){const V=new Uint8Array(E.length);let H=E.length;for(;H--;){const t=E[H];V[H]=Math.round(255*(0,h.b)(t))}E=V}const I=t.ob.createRawTexture(E,V,H,5,!1,!C,1);t.renderer.setViewport(),t.renderer.applyEffectWrapper(t.wrapper),t.wrapper.effect._bindTexture("textureSampler",I),t.renderer.draw(),S?Z.f.ToBlob(t.canvas,(V=>{const H=new FileReader;H.onload=V=>{const H=V.target.result;d&&d(H)},H.readAsArrayBuffer(V)}),a,v):Z.f.EncodeScreenshotCanvasData(t.canvas,d,a,O,v),I.dispose()}))}function J(){var V;m?(m.wrapper.dispose(),m.renderer.dispose(),m.ob.dispose()):null===(V=K)||void 0===V||V.then((V=>{V.wrapper.dispose(),V.renderer.dispose(),V.ob.dispose()}));K=null,m=null}const O={DumpData:a,DumpDataAsync:d,DumpFramebuffer:E,Dispose:J};Z.f.DumpData=a,Z.f.DumpDataAsync=d,Z.f.DumpFramebuffer=E}}]);