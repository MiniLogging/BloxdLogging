"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[7],{10937:(D,j,W)=>{W.r(j),W.d(j,{Dispose:()=>P,DumpData:()=>Z,DumpDataAsync:()=>F,DumpFramebuffer:()=>f,DumpTools:()=>X});var Q=W(1556),C=W(1207),k=W(1e3),M=W(991);let O,E=null;async function f(D,j,W,Q){let C=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",k=arguments.length>5?arguments[5]:void 0,M=arguments.length>6?arguments[6]:void 0;const O=await W.readPixels(0,0,D,j);Z(D,j,new Uint8Array(O.buffer),Q,C,k,!0,void 0,M)}function F(D,j,W){let Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",C=arguments.length>4?arguments[4]:void 0,k=arguments.length>5&&void 0!==arguments[5]&&arguments[5],M=arguments.length>6&&void 0!==arguments[6]&&arguments[6],O=arguments.length>7?arguments[7]:void 0;return new Promise((E=>{Z(D,j,W,(D=>E(D)),Q,C,k,M,O)}))}function Z(D,j,f,F){let Z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",X=arguments.length>5?arguments[5]:void 0,x=arguments.length>6&&void 0!==arguments[6]&&arguments[6],R=arguments.length>7&&void 0!==arguments[7]&&arguments[7],V=arguments.length>8?arguments[8]:void 0;(async function(){return E||(E=new Promise(((D,j)=>{let C,k=null;const E={tf:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(W.bind(W,1447)).then((f=>{let{ThinEngine:F}=f;try{C=new OffscreenCanvas(100,100),k=new F(C,!1,E)}catch(X){C=document.createElement("canvas"),k=new F(C,!1,E)}M.b.Instances.pop(),M.b.OnEnginesDisposedObservable.add((D=>{k&&D!==k&&!k.u&&0===M.b.Instances.length&&P()})),k.getCaps().parallelShaderCompile=void 0;const Z=new Q.d(k);W.e(32).then(W.bind(W,11643)).then((W=>{let{passPixelShader:M}=W;if(!k)return void j("Engine is not defined");const E=new Q.h({Bb:k,name:M.name,fragmentShader:M.shader,samplerNames:["textureSampler"]});O={canvas:C,Bb:k,renderer:Z,wrapper:E},D(O)}))})).catch(j)}))),await E})().then((W=>{if(W.Bb.setSize(D,j,!0),f instanceof Float32Array){const D=new Uint8Array(f.length);let j=f.length;for(;j--;){const W=f[j];D[j]=Math.round(255*(0,k.e)(W))}f=D}const Q=W.Bb.createRawTexture(f,D,j,5,!1,!x,1);W.renderer.setViewport(),W.renderer.applyEffectWrapper(W.wrapper),W.wrapper.effect._bindTexture("textureSampler",Q),W.renderer.draw(),R?C.f.ToBlob(W.canvas,(D=>{const j=new FileReader;j.onload=D=>{const j=D.target.result;F&&F(j)},j.readAsArrayBuffer(D)}),Z,V):C.f.EncodeScreenshotCanvasData(W.canvas,F,Z,X,V),Q.dispose()}))}function P(){var D;O?(O.wrapper.dispose(),O.renderer.dispose(),O.Bb.dispose()):null===(D=E)||void 0===D||D.then((D=>{D.wrapper.dispose(),D.renderer.dispose(),D.Bb.dispose()}));E=null,O=null}const X={DumpData:Z,DumpDataAsync:F,DumpFramebuffer:f,Dispose:P};C.f.DumpData=Z,C.f.DumpDataAsync=F,C.f.DumpFramebuffer=f}}]);