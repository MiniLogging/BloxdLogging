"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[7],{10983:(T,z,X)=>{X.r(z),X.d(z,{Dispose:()=>D,DumpData:()=>L,DumpDataAsync:()=>k,DumpFramebuffer:()=>v,DumpTools:()=>c});var b=X(1493),F=X(1166),A=X(1014),u=X(1007);let y,E=null;async function v(T,z,X,b){let F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",A=arguments.length>5?arguments[5]:void 0,u=arguments.length>6?arguments[6]:void 0;const y=await X.readPixels(0,0,T,z);L(T,z,new Uint8Array(y.buffer),b,F,A,!0,void 0,u)}function k(T,z,X){let b=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",F=arguments.length>4?arguments[4]:void 0,A=arguments.length>5&&void 0!==arguments[5]&&arguments[5],u=arguments.length>6&&void 0!==arguments[6]&&arguments[6],y=arguments.length>7?arguments[7]:void 0;return new Promise((E=>{L(T,z,X,(T=>E(T)),b,F,A,u,y)}))}function L(T,z,v,k){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",c=arguments.length>5?arguments[5]:void 0,p=arguments.length>6&&void 0!==arguments[6]&&arguments[6],H=arguments.length>7&&void 0!==arguments[7]&&arguments[7],U=arguments.length>8?arguments[8]:void 0;(async function(){return E||(E=new Promise(((T,z)=>{let F,A=null;const E={kf:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(X.bind(X,1381)).then((v=>{let{ThinEngine:k}=v;try{F=new OffscreenCanvas(100,100),A=new k(F,!1,E)}catch(c){F=document.createElement("canvas"),A=new k(F,!1,E)}u.e.Instances.pop(),u.e.OnEnginesDisposedObservable.add((T=>{A&&T!==A&&!A.u&&0===u.e.Instances.length&&D()})),A.getCaps().parallelShaderCompile=void 0;const L=new b.d(A);X.e(32).then(X.bind(X,11627)).then((X=>{let{passPixelShader:u}=X;if(!A)return void z("Engine is not defined");const E=new b.e({Ob:A,name:u.name,fragmentShader:u.shader,samplerNames:["textureSampler"]});y={canvas:F,Ob:A,renderer:L,wrapper:E},T(y)}))})).catch(z)}))),await E})().then((X=>{if(X.Ob.setSize(T,z,!0),v instanceof Float32Array){const T=new Uint8Array(v.length);let z=v.length;for(;z--;){const X=v[z];T[z]=Math.round(255*(0,A.d)(X))}v=T}const b=X.Ob.createRawTexture(v,T,z,5,!1,!p,1);X.renderer.setViewport(),X.renderer.applyEffectWrapper(X.wrapper),X.wrapper.effect._bindTexture("textureSampler",b),X.renderer.draw(),H?F.g.ToBlob(X.canvas,(T=>{const z=new FileReader;z.onload=T=>{const z=T.target.result;k&&k(z)},z.readAsArrayBuffer(T)}),L,U):F.g.EncodeScreenshotCanvasData(X.canvas,k,L,c,U),b.dispose()}))}function D(){var T;y?(y.wrapper.dispose(),y.renderer.dispose(),y.Ob.dispose()):null===(T=E)||void 0===T||T.then((T=>{T.wrapper.dispose(),T.renderer.dispose(),T.Ob.dispose()}));E=null,y=null}const c={DumpData:L,DumpDataAsync:k,DumpFramebuffer:v,Dispose:D};F.g.DumpData=L,F.g.DumpDataAsync=k,F.g.DumpFramebuffer=v}}]);