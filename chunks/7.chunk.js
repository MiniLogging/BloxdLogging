"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[7],{10244:(q,X,Q)=>{Q.r(X),Q.d(X,{Dispose:()=>f,DumpData:()=>L,DumpDataAsync:()=>R,DumpFramebuffer:()=>a,DumpTools:()=>k});var y=Q(1542),x=Q(1215),u=Q(1032),H=Q(1028);let b,D=null;async function a(q,X,Q,y){let x=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",u=arguments.length>5?arguments[5]:void 0,H=arguments.length>6?arguments[6]:void 0;const b=await Q.readPixels(0,0,q,X);L(q,X,new Uint8Array(b.buffer),y,x,u,!0,void 0,H)}function R(q,X,Q){let y=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",x=arguments.length>4?arguments[4]:void 0,u=arguments.length>5&&void 0!==arguments[5]&&arguments[5],H=arguments.length>6&&void 0!==arguments[6]&&arguments[6],b=arguments.length>7?arguments[7]:void 0;return new Promise((D=>{L(q,X,Q,(q=>D(q)),y,x,u,H,b)}))}function L(q,X,a,R){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",k=arguments.length>5?arguments[5]:void 0,j=arguments.length>6&&void 0!==arguments[6]&&arguments[6],I=arguments.length>7&&void 0!==arguments[7]&&arguments[7],d=arguments.length>8?arguments[8]:void 0;(async function(){return D||(D=new Promise(((q,X)=>{let x,u=null;const D={fe:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(Q.bind(Q,1435)).then((a=>{let{ThinEngine:R}=a;try{x=new OffscreenCanvas(100,100),u=new R(x,!1,D)}catch(k){x=document.createElement("canvas"),u=new R(x,!1,D)}H.c.Instances.pop(),H.c.OnEnginesDisposedObservable.add((q=>{u&&q!==u&&!u.u&&0===H.c.Instances.length&&f()})),u.getCaps().parallelShaderCompile=void 0;const L=new y.b(u);Q.e(32).then(Q.bind(Q,10927)).then((Q=>{let{passPixelShader:H}=Q;if(!u)return void X("Engine is not defined");const D=new y.f({od:u,name:H.name,fragmentShader:H.shader,samplerNames:["textureSampler"]});b={canvas:x,od:u,renderer:L,wrapper:D},q(b)}))})).catch(X)}))),await D})().then((Q=>{if(Q.od.setSize(q,X,!0),a instanceof Float32Array){const q=new Uint8Array(a.length);let X=a.length;for(;X--;){const Q=a[X];q[X]=Math.round(255*(0,u.d)(Q))}a=q}const y=Q.od.createRawTexture(a,q,X,5,!1,!j,1);Q.renderer.setViewport(),Q.renderer.applyEffectWrapper(Q.wrapper),Q.wrapper.effect._bindTexture("textureSampler",y),Q.renderer.draw(),I?x.f.ToBlob(Q.canvas,(q=>{const X=new FileReader;X.onload=q=>{const X=q.target.result;R&&R(X)},X.readAsArrayBuffer(q)}),L,d):x.f.EncodeScreenshotCanvasData(Q.canvas,R,L,k,d),y.dispose()}))}function f(){var q;b?(b.wrapper.dispose(),b.renderer.dispose(),b.od.dispose()):null===(q=D)||void 0===q||q.then((q=>{q.wrapper.dispose(),q.renderer.dispose(),q.od.dispose()}));D=null,b=null}const k={DumpData:L,DumpDataAsync:R,DumpFramebuffer:a,Dispose:f};x.f.DumpData=L,x.f.DumpDataAsync=R,x.f.DumpFramebuffer=a}}]);