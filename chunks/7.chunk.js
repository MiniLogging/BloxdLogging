"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[7],{10148:(I,k,i)=>{i.r(k),i.d(k,{Dispose:()=>J,DumpData:()=>P,DumpDataAsync:()=>g,DumpFramebuffer:()=>l,DumpTools:()=>L});var d=i(1509),u=i(1179),H=i(1024),Y=i(1018);let x,j=null;async function l(I,k,i,d){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",H=arguments.length>5?arguments[5]:void 0,Y=arguments.length>6?arguments[6]:void 0;const x=await i.readPixels(0,0,I,k);P(I,k,new Uint8Array(x.buffer),d,u,H,!0,void 0,Y)}function g(I,k,i){let d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",u=arguments.length>4?arguments[4]:void 0,H=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],x=arguments.length>7?arguments[7]:void 0;return new Promise((j=>{P(I,k,i,(I=>j(I)),d,u,H,Y,x)}))}function P(I,k,l,g){let P=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",L=arguments.length>5?arguments[5]:void 0,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],h=arguments.length>7&&void 0!==arguments[7]&&arguments[7],Z=arguments.length>8?arguments[8]:void 0;(async function(){return j||(j=new Promise(((I,k)=>{let u,H=null;const j={Ne:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(i.bind(i,1401)).then((l=>{let{ThinEngine:g}=l;try{u=new OffscreenCanvas(100,100),H=new g(u,!1,j)}catch(L){u=document.createElement("canvas"),H=new g(u,!1,j)}Y.e.Instances.pop(),Y.e.OnEnginesDisposedObservable.add((I=>{H&&I!==H&&!H.u&&0===Y.e.Instances.length&&J()})),H.getCaps().parallelShaderCompile=void 0;const P=new d.e(H);i.e(32).then(i.bind(i,10824)).then((i=>{let{passPixelShader:Y}=i;if(!H)return void k("Engine is not defined");const j=new d.h({tb:H,name:Y.name,fragmentShader:Y.shader,samplerNames:["textureSampler"]});x={canvas:u,tb:H,renderer:P,wrapper:j},I(x)}))})).catch(k)}))),await j})().then((i=>{if(i.tb.setSize(I,k,!0),l instanceof Float32Array){const I=new Uint8Array(l.length);let k=l.length;for(;k--;){const i=l[k];I[k]=Math.round(255*(0,H.d)(i))}l=I}const d=i.tb.createRawTexture(l,I,k,5,!1,!s,1);i.renderer.setViewport(),i.renderer.applyEffectWrapper(i.wrapper),i.wrapper.effect._bindTexture("textureSampler",d),i.renderer.draw(),h?u.d.ToBlob(i.canvas,(I=>{const k=new FileReader;k.onload=I=>{const k=I.target.result;g&&g(k)},k.readAsArrayBuffer(I)}),P,Z):u.d.EncodeScreenshotCanvasData(i.canvas,g,P,L,Z),d.dispose()}))}function J(){var I;x?(x.wrapper.dispose(),x.renderer.dispose(),x.tb.dispose()):null===(I=j)||void 0===I||I.then((I=>{I.wrapper.dispose(),I.renderer.dispose(),I.tb.dispose()}));j=null,x=null}const L={DumpData:P,DumpDataAsync:g,DumpFramebuffer:l,Dispose:J};u.d.DumpData=P,u.d.DumpDataAsync=g,u.d.DumpFramebuffer=l}}]);