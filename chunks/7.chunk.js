"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[7],{10702:(V,n,O)=>{O.r(n),O.d(n,{Dispose:()=>j,DumpData:()=>p,DumpDataAsync:()=>M,DumpFramebuffer:()=>U,DumpTools:()=>i});var H=O(1568),g=O(1244),f=O(1056),x=O(1047);let c,e=null;async function U(V,n,O,H){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",f=arguments.length>5?arguments[5]:void 0,x=arguments.length>6?arguments[6]:void 0;const c=await O.readPixels(0,0,V,n);p(V,n,new Uint8Array(c.buffer),H,g,f,!0,void 0,x)}function M(V,n,O){let H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",g=arguments.length>4?arguments[4]:void 0,f=arguments.length>5&&void 0!==arguments[5]&&arguments[5],x=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7?arguments[7]:void 0;return new Promise((e=>{p(V,n,O,(V=>e(V)),H,g,f,x,c)}))}function p(V,n,U,M){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",i=arguments.length>5?arguments[5]:void 0,A=arguments.length>6&&void 0!==arguments[6]&&arguments[6],S=arguments.length>7&&void 0!==arguments[7]&&arguments[7],B=arguments.length>8?arguments[8]:void 0;(async function(){return e||(e=new Promise(((V,n)=>{let g,f=null;const e={Be:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(O.bind(O,1461)).then((U=>{let{ThinEngine:M}=U;try{g=new OffscreenCanvas(100,100),f=new M(g,!1,e)}catch(i){g=document.createElement("canvas"),f=new M(g,!1,e)}x.b.Instances.pop(),x.b.OnEnginesDisposedObservable.add((V=>{f&&V!==f&&!f.u&&0===x.b.Instances.length&&j()})),f.getCaps().parallelShaderCompile=void 0;const p=new H.d(f);O.e(32).then(O.bind(O,11411)).then((O=>{let{passPixelShader:x}=O;if(!f)return void n("Engine is not defined");const e=new H.e({Od:f,name:x.name,fragmentShader:x.shader,samplerNames:["textureSampler"]});c={canvas:g,Od:f,renderer:p,wrapper:e},V(c)}))})).catch(n)}))),await e})().then((O=>{if(O.Od.setSize(V,n,!0),U instanceof Float32Array){const V=new Uint8Array(U.length);let n=U.length;for(;n--;){const O=U[n];V[n]=Math.round(255*(0,f.b)(O))}U=V}const H=O.Od.createRawTexture(U,V,n,5,!1,!A,1);O.renderer.setViewport(),O.renderer.applyEffectWrapper(O.wrapper),O.wrapper.effect._bindTexture("textureSampler",H),O.renderer.draw(),S?g.f.ToBlob(O.canvas,(V=>{const n=new FileReader;n.onload=V=>{const n=V.target.result;M&&M(n)},n.readAsArrayBuffer(V)}),p,B):g.f.EncodeScreenshotCanvasData(O.canvas,M,p,i,B),H.dispose()}))}function j(){var V;c?(c.wrapper.dispose(),c.renderer.dispose(),c.Od.dispose()):null===(V=e)||void 0===V||V.then((V=>{V.wrapper.dispose(),V.renderer.dispose(),V.Od.dispose()}));e=null,c=null}const i={DumpData:p,DumpDataAsync:M,DumpFramebuffer:U,Dispose:j};g.f.DumpData=p,g.f.DumpDataAsync=M,g.f.DumpFramebuffer=U}}]);