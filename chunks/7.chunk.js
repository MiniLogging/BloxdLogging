"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[7],{10058:(a,i,K)=>{K.r(i),K.d(i,{Dispose:()=>U,DumpData:()=>o,DumpDataAsync:()=>f,DumpFramebuffer:()=>H,DumpTools:()=>q});var j=K(1588),N=K(1225),E=K(1052),v=K(1047);let e,Y=null;async function H(a,i,K,j){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",E=arguments.length>5?arguments[5]:void 0,v=arguments.length>6?arguments[6]:void 0;const e=await K.readPixels(0,0,a,i);o(a,i,new Uint8Array(e.buffer),j,N,E,!0,void 0,v)}function f(a,i,K){let j=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",N=arguments.length>4?arguments[4]:void 0,E=arguments.length>5&&void 0!==arguments[5]&&arguments[5],v=arguments.length>6&&void 0!==arguments[6]&&arguments[6],e=arguments.length>7?arguments[7]:void 0;return new Promise((Y=>{o(a,i,K,(a=>Y(a)),j,N,E,v,e)}))}function o(a,i,H,f){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",q=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&void 0!==arguments[6]&&arguments[6],g=arguments.length>7&&void 0!==arguments[7]&&arguments[7],s=arguments.length>8?arguments[8]:void 0;(async function(){return Y||(Y=new Promise(((a,i)=>{let N,E=null;const Y={Re:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(K.bind(K,1478)).then((H=>{let{ThinEngine:f}=H;try{N=new OffscreenCanvas(100,100),E=new f(N,!1,Y)}catch(q){N=document.createElement("canvas"),E=new f(N,!1,Y)}v.e.Instances.pop(),v.e.OnEnginesDisposedObservable.add((a=>{E&&a!==E&&!E.u&&0===v.e.Instances.length&&U()})),E.getCaps().parallelShaderCompile=void 0;const o=new j.b(E);K.e(32).then(K.bind(K,10762)).then((K=>{let{passPixelShader:v}=K;if(!E)return void i("Engine is not defined");const Y=new j.e({Cb:E,name:v.name,fragmentShader:v.shader,samplerNames:["textureSampler"]});e={canvas:N,Cb:E,renderer:o,wrapper:Y},a(e)}))})).catch(i)}))),await Y})().then((K=>{if(K.Cb.setSize(a,i,!0),H instanceof Float32Array){const a=new Uint8Array(H.length);let i=H.length;for(;i--;){const K=H[i];a[i]=Math.round(255*(0,E.b)(K))}H=a}const j=K.Cb.createRawTexture(H,a,i,5,!1,!u,1);K.renderer.setViewport(),K.renderer.applyEffectWrapper(K.wrapper),K.wrapper.effect._bindTexture("textureSampler",j),K.renderer.draw(),g?N.e.ToBlob(K.canvas,(a=>{const i=new FileReader;i.onload=a=>{const i=a.target.result;f&&f(i)},i.readAsArrayBuffer(a)}),o,s):N.e.EncodeScreenshotCanvasData(K.canvas,f,o,q,s),j.dispose()}))}function U(){var a;e?(e.wrapper.dispose(),e.renderer.dispose(),e.Cb.dispose()):null===(a=Y)||void 0===a||a.then((a=>{a.wrapper.dispose(),a.renderer.dispose(),a.Cb.dispose()}));Y=null,e=null}const q={DumpData:o,DumpDataAsync:f,DumpFramebuffer:H,Dispose:U};N.e.DumpData=o,N.e.DumpDataAsync=f,N.e.DumpFramebuffer=H}}]);