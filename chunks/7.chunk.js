"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[7],{10267:(f,Q,H)=>{H.r(Q),H.d(Q,{Dispose:()=>g,DumpData:()=>J,DumpDataAsync:()=>N,DumpFramebuffer:()=>B,DumpTools:()=>z});var X=H(1546),i=H(1203),S=H(1034),x=H(1027);let K,Z=null;async function B(f,Q,H,X){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",S=arguments.length>5?arguments[5]:void 0,x=arguments.length>6?arguments[6]:void 0;const K=await H.readPixels(0,0,f,Q);J(f,Q,new Uint8Array(K.buffer),X,i,S,!0,void 0,x)}function N(f,Q,H){let X=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",i=arguments.length>4?arguments[4]:void 0,S=arguments.length>5&&void 0!==arguments[5]&&arguments[5],x=arguments.length>6&&void 0!==arguments[6]&&arguments[6],K=arguments.length>7?arguments[7]:void 0;return new Promise((Z=>{J(f,Q,H,(f=>Z(f)),X,i,S,x,K)}))}function J(f,Q,B,N){let J=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",z=arguments.length>5?arguments[5]:void 0,v=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Y=arguments.length>7&&void 0!==arguments[7]&&arguments[7],O=arguments.length>8?arguments[8]:void 0;(async function(){return Z||(Z=new Promise(((f,Q)=>{let i,S=null;const Z={le:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(H.bind(H,1445)).then((B=>{let{ThinEngine:N}=B;try{i=new OffscreenCanvas(100,100),S=new N(i,!1,Z)}catch(z){i=document.createElement("canvas"),S=new N(i,!1,Z)}x.e.Instances.pop(),x.e.OnEnginesDisposedObservable.add((f=>{S&&f!==S&&!S.u&&0===x.e.Instances.length&&g()})),S.getCaps().parallelShaderCompile=void 0;const J=new X.e(S);H.e(32).then(H.bind(H,10941)).then((H=>{let{passPixelShader:x}=H;if(!S)return void Q("Engine is not defined");const Z=new X.i({Cd:S,name:x.name,fragmentShader:x.shader,samplerNames:["textureSampler"]});K={canvas:i,Cd:S,renderer:J,wrapper:Z},f(K)}))})).catch(Q)}))),await Z})().then((H=>{if(H.Cd.setSize(f,Q,!0),B instanceof Float32Array){const f=new Uint8Array(B.length);let Q=B.length;for(;Q--;){const H=B[Q];f[Q]=Math.round(255*(0,S.c)(H))}B=f}const X=H.Cd.createRawTexture(B,f,Q,5,!1,!v,1);H.renderer.setViewport(),H.renderer.applyEffectWrapper(H.wrapper),H.wrapper.effect._bindTexture("textureSampler",X),H.renderer.draw(),Y?i.g.ToBlob(H.canvas,(f=>{const Q=new FileReader;Q.onload=f=>{const Q=f.target.result;N&&N(Q)},Q.readAsArrayBuffer(f)}),J,O):i.g.EncodeScreenshotCanvasData(H.canvas,N,J,z,O),X.dispose()}))}function g(){var f;K?(K.wrapper.dispose(),K.renderer.dispose(),K.Cd.dispose()):null===(f=Z)||void 0===f||f.then((f=>{f.wrapper.dispose(),f.renderer.dispose(),f.Cd.dispose()}));Z=null,K=null}const z={DumpData:J,DumpDataAsync:N,DumpFramebuffer:B,Dispose:g};i.g.DumpData=J,i.g.DumpDataAsync=N,i.g.DumpFramebuffer=B}}]);