"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[7],{10502:(M,E,b)=>{b.r(E),b.d(E,{Dispose:()=>I,DumpData:()=>V,DumpDataAsync:()=>T,DumpFramebuffer:()=>u,DumpTools:()=>t});var x=b(1549),k=b(1176),a=b(1009),g=b(1005);let n,J=null;async function u(M,E,b,x){let k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",a=arguments.length>5?arguments[5]:void 0,g=arguments.length>6?arguments[6]:void 0;const n=await b.readPixels(0,0,M,E);V(M,E,new Uint8Array(n.buffer),x,k,a,!0,void 0,g)}function T(M,E,b){let x=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",k=arguments.length>4?arguments[4]:void 0,a=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6&&void 0!==arguments[6]&&arguments[6],n=arguments.length>7?arguments[7]:void 0;return new Promise((J=>{V(M,E,b,(M=>J(M)),x,k,a,g,n)}))}function V(M,E,u,T){let V=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",t=arguments.length>5?arguments[5]:void 0,y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],B=arguments.length>7&&void 0!==arguments[7]&&arguments[7],r=arguments.length>8?arguments[8]:void 0;(async function(){return J||(J=new Promise(((M,E)=>{let k,a=null;const J={Yd:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(b.bind(b,1433)).then((u=>{let{ThinEngine:T}=u;try{k=new OffscreenCanvas(100,100),a=new T(k,!1,J)}catch(t){k=document.createElement("canvas"),a=new T(k,!1,J)}g.b.Instances.pop(),g.b.OnEnginesDisposedObservable.add((M=>{a&&M!==a&&!a.u&&0===g.b.Instances.length&&I()})),a.getCaps().parallelShaderCompile=void 0;const V=new x.c(a);b.e(32).then(b.bind(b,11141)).then((b=>{let{passPixelShader:g}=b;if(!a)return void E("Engine is not defined");const J=new x.f({md:a,name:g.name,fragmentShader:g.shader,samplerNames:["textureSampler"]});n={canvas:k,md:a,renderer:V,wrapper:J},M(n)}))})).catch(E)}))),await J})().then((b=>{if(b.md.setSize(M,E,!0),u instanceof Float32Array){const M=new Uint8Array(u.length);let E=u.length;for(;E--;){const b=u[E];M[E]=Math.round(255*(0,a.d)(b))}u=M}const x=b.md.createRawTexture(u,M,E,5,!1,!y,1);b.renderer.setViewport(),b.renderer.applyEffectWrapper(b.wrapper),b.wrapper.effect._bindTexture("textureSampler",x),b.renderer.draw(),B?k.e.ToBlob(b.canvas,(M=>{const E=new FileReader;E.onload=M=>{const E=M.target.result;T&&T(E)},E.readAsArrayBuffer(M)}),V,r):k.e.EncodeScreenshotCanvasData(b.canvas,T,V,t,r),x.dispose()}))}function I(){var M;n?(n.wrapper.dispose(),n.renderer.dispose(),n.md.dispose()):null===(M=J)||void 0===M||M.then((M=>{M.wrapper.dispose(),M.renderer.dispose(),M.md.dispose()}));J=null,n=null}const t={DumpData:V,DumpDataAsync:T,DumpFramebuffer:u,Dispose:I};k.e.DumpData=V,k.e.DumpDataAsync=T,k.e.DumpFramebuffer=u}}]);