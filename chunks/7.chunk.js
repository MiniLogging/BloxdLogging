"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[7],{10859:(v,T,X)=>{X.r(T),X.d(T,{Dispose:()=>n,DumpData:()=>H,DumpDataAsync:()=>M,DumpFramebuffer:()=>f,DumpTools:()=>V});var O=X(1536),u=X(1217),B=X(1040),m=X(1034);let A,x=null;async function f(v,T,X,O){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",B=arguments.length>5?arguments[5]:void 0,m=arguments.length>6?arguments[6]:void 0;const A=await X.readPixels(0,0,v,T);H(v,T,new Uint8Array(A.buffer),O,u,B,!0,void 0,m)}function M(v,T,X){let O=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",u=arguments.length>4?arguments[4]:void 0,B=arguments.length>5&&void 0!==arguments[5]&&arguments[5],m=arguments.length>6&&void 0!==arguments[6]&&arguments[6],A=arguments.length>7?arguments[7]:void 0;return new Promise((x=>{H(v,T,X,(v=>x(v)),O,u,B,m,A)}))}function H(v,T,f,M){let H=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",V=arguments.length>5?arguments[5]:void 0,D=arguments.length>6&&void 0!==arguments[6]&&arguments[6],s=arguments.length>7&&void 0!==arguments[7]&&arguments[7],F=arguments.length>8?arguments[8]:void 0;(async function(){return x||(x=new Promise(((v,T)=>{let u,B=null;const x={Cf:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(X.bind(X,1443)).then((f=>{let{ThinEngine:M}=f;try{u=new OffscreenCanvas(100,100),B=new M(u,!1,x)}catch(V){u=document.createElement("canvas"),B=new M(u,!1,x)}m.c.Instances.pop(),m.c.OnEnginesDisposedObservable.add((v=>{B&&v!==B&&!B.u&&0===m.c.Instances.length&&n()})),B.getCaps().parallelShaderCompile=void 0;const H=new O.b(B);X.e(32).then(X.bind(X,11562)).then((X=>{let{passPixelShader:m}=X;if(!B)return void T("Engine is not defined");const x=new O.c({Nb:B,name:m.name,fragmentShader:m.shader,samplerNames:["textureSampler"]});A={canvas:u,Nb:B,renderer:H,wrapper:x},v(A)}))})).catch(T)}))),await x})().then((X=>{if(X.Nb.setSize(v,T,!0),f instanceof Float32Array){const v=new Uint8Array(f.length);let T=f.length;for(;T--;){const X=f[T];v[T]=Math.round(255*(0,B.c)(X))}f=v}const O=X.Nb.createRawTexture(f,v,T,5,!1,!D,1);X.renderer.setViewport(),X.renderer.applyEffectWrapper(X.wrapper),X.wrapper.effect._bindTexture("textureSampler",O),X.renderer.draw(),s?u.c.ToBlob(X.canvas,(v=>{const T=new FileReader;T.onload=v=>{const T=v.target.result;M&&M(T)},T.readAsArrayBuffer(v)}),H,F):u.c.EncodeScreenshotCanvasData(X.canvas,M,H,V,F),O.dispose()}))}function n(){var v;A?(A.wrapper.dispose(),A.renderer.dispose(),A.Nb.dispose()):null===(v=x)||void 0===v||v.then((v=>{v.wrapper.dispose(),v.renderer.dispose(),v.Nb.dispose()}));x=null,A=null}const V={DumpData:H,DumpDataAsync:M,DumpFramebuffer:f,Dispose:n};u.c.DumpData=H,u.c.DumpDataAsync=M,u.c.DumpFramebuffer=f}}]);