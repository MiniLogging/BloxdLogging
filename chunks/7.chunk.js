"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[7],{10319:(r,L,M)=>{M.r(L),M.d(L,{Dispose:()=>t,DumpData:()=>f,DumpDataAsync:()=>J,DumpFramebuffer:()=>u,DumpTools:()=>o});var S=M(1447),T=M(1120),C=M(977),y=M(968);let s,v=null;async function u(r,L,M,S){let T=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",C=arguments.length>5?arguments[5]:void 0,y=arguments.length>6?arguments[6]:void 0;const s=await M.readPixels(0,0,r,L);f(r,L,new Uint8Array(s.buffer),S,T,C,!0,void 0,y)}function J(r,L,M){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",T=arguments.length>4?arguments[4]:void 0,C=arguments.length>5&&void 0!==arguments[5]&&arguments[5],y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],s=arguments.length>7?arguments[7]:void 0;return new Promise((v=>{f(r,L,M,(r=>v(r)),S,T,C,y,s)}))}function f(r,L,u,J){let f=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",o=arguments.length>5?arguments[5]:void 0,h=arguments.length>6&&void 0!==arguments[6]&&arguments[6],U=arguments.length>7&&void 0!==arguments[7]&&arguments[7],G=arguments.length>8?arguments[8]:void 0;(async function(){return v||(v=new Promise(((r,L)=>{let T,C=null;const v={Ne:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(M.bind(M,1358)).then((u=>{let{ThinEngine:J}=u;try{T=new OffscreenCanvas(100,100),C=new J(T,!1,v)}catch(o){T=document.createElement("canvas"),C=new J(T,!1,v)}y.c.Instances.pop(),y.c.OnEnginesDisposedObservable.add((r=>{C&&r!==C&&!C.u&&0===y.c.Instances.length&&t()})),C.getCaps().parallelShaderCompile=void 0;const f=new S.c(C);M.e(32).then(M.bind(M,11020)).then((M=>{let{passPixelShader:y}=M;if(!C)return void L("Engine is not defined");const v=new S.f({jb:C,name:y.name,fragmentShader:y.shader,samplerNames:["textureSampler"]});s={canvas:T,jb:C,renderer:f,wrapper:v},r(s)}))})).catch(L)}))),await v})().then((M=>{if(M.jb.setSize(r,L,!0),u instanceof Float32Array){const r=new Uint8Array(u.length);let L=u.length;for(;L--;){const M=u[L];r[L]=Math.round(255*(0,C.d)(M))}u=r}const S=M.jb.createRawTexture(u,r,L,5,!1,!h,1);M.renderer.setViewport(),M.renderer.applyEffectWrapper(M.wrapper),M.wrapper.effect._bindTexture("textureSampler",S),M.renderer.draw(),U?T.g.ToBlob(M.canvas,(r=>{const L=new FileReader;L.onload=r=>{const L=r.target.result;J&&J(L)},L.readAsArrayBuffer(r)}),f,G):T.g.EncodeScreenshotCanvasData(M.canvas,J,f,o,G),S.dispose()}))}function t(){var r;s?(s.wrapper.dispose(),s.renderer.dispose(),s.jb.dispose()):null===(r=v)||void 0===r||r.then((r=>{r.wrapper.dispose(),r.renderer.dispose(),r.jb.dispose()}));v=null,s=null}const o={DumpData:f,DumpDataAsync:J,DumpFramebuffer:u,Dispose:t};T.g.DumpData=f,T.g.DumpDataAsync=J,T.g.DumpFramebuffer=u}}]);