"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[7],{10333:(G,D,N)=>{N.r(D),N.d(D,{Dispose:()=>g,DumpData:()=>q,DumpDataAsync:()=>v,DumpFramebuffer:()=>r,DumpTools:()=>X});var T=N(1524),o=N(1223),Z=N(1038),n=N(1030);let C,P=null;async function r(G,D,N,T){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Z=arguments.length>5?arguments[5]:void 0,n=arguments.length>6?arguments[6]:void 0;const C=await N.readPixels(0,0,G,D);q(G,D,new Uint8Array(C.buffer),T,o,Z,!0,void 0,n)}function v(G,D,N){let T=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",o=arguments.length>4?arguments[4]:void 0,Z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],n=arguments.length>6&&void 0!==arguments[6]&&arguments[6],C=arguments.length>7?arguments[7]:void 0;return new Promise((P=>{q(G,D,N,(G=>P(G)),T,o,Z,n,C)}))}function q(G,D,r,v){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",X=arguments.length>5?arguments[5]:void 0,W=arguments.length>6&&void 0!==arguments[6]&&arguments[6],j=arguments.length>7&&void 0!==arguments[7]&&arguments[7],Y=arguments.length>8?arguments[8]:void 0;(async function(){return P||(P=new Promise(((G,D)=>{let o,Z=null;const P={jf:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(N.bind(N,1427)).then((r=>{let{ThinEngine:v}=r;try{o=new OffscreenCanvas(100,100),Z=new v(o,!1,P)}catch(X){o=document.createElement("canvas"),Z=new v(o,!1,P)}n.e.Instances.pop(),n.e.OnEnginesDisposedObservable.add((G=>{Z&&G!==Z&&!Z.u&&0===n.e.Instances.length&&g()})),Z.getCaps().parallelShaderCompile=void 0;const q=new T.b(Z);N.e(32).then(N.bind(N,11002)).then((N=>{let{passPixelShader:n}=N;if(!Z)return void D("Engine is not defined");const P=new T.e({rb:Z,name:n.name,fragmentShader:n.shader,samplerNames:["textureSampler"]});C={canvas:o,rb:Z,renderer:q,wrapper:P},G(C)}))})).catch(D)}))),await P})().then((N=>{if(N.rb.setSize(G,D,!0),r instanceof Float32Array){const G=new Uint8Array(r.length);let D=r.length;for(;D--;){const N=r[D];G[D]=Math.round(255*(0,Z.e)(N))}r=G}const T=N.rb.createRawTexture(r,G,D,5,!1,!W,1);N.renderer.setViewport(),N.renderer.applyEffectWrapper(N.wrapper),N.wrapper.effect._bindTexture("textureSampler",T),N.renderer.draw(),j?o.f.ToBlob(N.canvas,(G=>{const D=new FileReader;D.onload=G=>{const D=G.target.result;v&&v(D)},D.readAsArrayBuffer(G)}),q,Y):o.f.EncodeScreenshotCanvasData(N.canvas,v,q,X,Y),T.dispose()}))}function g(){var G;C?(C.wrapper.dispose(),C.renderer.dispose(),C.rb.dispose()):null===(G=P)||void 0===G||G.then((G=>{G.wrapper.dispose(),G.renderer.dispose(),G.rb.dispose()}));P=null,C=null}const X={DumpData:q,DumpDataAsync:v,DumpFramebuffer:r,Dispose:g};o.f.DumpData=q,o.f.DumpDataAsync=v,o.f.DumpFramebuffer=r}}]);