"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[7],{10682:(C,M,x)=>{x.r(M),x.d(M,{Dispose:()=>U,DumpData:()=>y,DumpDataAsync:()=>V,DumpFramebuffer:()=>Q,DumpTools:()=>O});var f=x(1482),T=x(1192),z=x(1015),s=x(1008);let S,m=null;async function Q(C,M,x,f){let T=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",z=arguments.length>5?arguments[5]:void 0,s=arguments.length>6?arguments[6]:void 0;const S=await x.readPixels(0,0,C,M);y(C,M,new Uint8Array(S.buffer),f,T,z,!0,void 0,s)}function V(C,M,x){let f=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",T=arguments.length>4?arguments[4]:void 0,z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],S=arguments.length>7?arguments[7]:void 0;return new Promise((m=>{y(C,M,x,(C=>m(C)),f,T,z,s,S)}))}function y(C,M,Q,V){let y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",O=arguments.length>5?arguments[5]:void 0,d=arguments.length>6&&void 0!==arguments[6]&&arguments[6],D=arguments.length>7&&void 0!==arguments[7]&&arguments[7],o=arguments.length>8?arguments[8]:void 0;(async function(){return m||(m=new Promise(((C,M)=>{let T,z=null;const m={kf:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(x.bind(x,1386)).then((Q=>{let{ThinEngine:V}=Q;try{T=new OffscreenCanvas(100,100),z=new V(T,!1,m)}catch(O){T=document.createElement("canvas"),z=new V(T,!1,m)}s.c.Instances.pop(),s.c.OnEnginesDisposedObservable.add((C=>{z&&C!==z&&!z.u&&0===s.c.Instances.length&&U()})),z.getCaps().parallelShaderCompile=void 0;const y=new f.c(z);x.e(32).then(x.bind(x,11355)).then((x=>{let{passPixelShader:s}=x;if(!z)return void M("Engine is not defined");const m=new f.e({Ib:z,name:s.name,fragmentShader:s.shader,samplerNames:["textureSampler"]});S={canvas:T,Ib:z,renderer:y,wrapper:m},C(S)}))})).catch(M)}))),await m})().then((x=>{if(x.Ib.setSize(C,M,!0),Q instanceof Float32Array){const C=new Uint8Array(Q.length);let M=Q.length;for(;M--;){const x=Q[M];C[M]=Math.round(255*(0,z.d)(x))}Q=C}const f=x.Ib.createRawTexture(Q,C,M,5,!1,!d,1);x.renderer.setViewport(),x.renderer.applyEffectWrapper(x.wrapper),x.wrapper.effect._bindTexture("textureSampler",f),x.renderer.draw(),D?T.i.ToBlob(x.canvas,(C=>{const M=new FileReader;M.onload=C=>{const M=C.target.result;V&&V(M)},M.readAsArrayBuffer(C)}),y,o):T.i.EncodeScreenshotCanvasData(x.canvas,V,y,O,o),f.dispose()}))}function U(){var C;S?(S.wrapper.dispose(),S.renderer.dispose(),S.Ib.dispose()):null===(C=m)||void 0===C||C.then((C=>{C.wrapper.dispose(),C.renderer.dispose(),C.Ib.dispose()}));m=null,S=null}const O={DumpData:y,DumpDataAsync:V,DumpFramebuffer:Q,Dispose:U};T.i.DumpData=y,T.i.DumpDataAsync=V,T.i.DumpFramebuffer=Q}}]);