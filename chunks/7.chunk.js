"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[7],{10727:(O,q,s)=>{s.r(q),s.d(q,{Dispose:()=>r,DumpData:()=>n,DumpDataAsync:()=>h,DumpFramebuffer:()=>w,DumpTools:()=>j});var Z=s(1521),D=s(1183),B=s(1022),P=s(1019);let y,o=null;async function w(O,q,s,Z){let D=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",B=arguments.length>5?arguments[5]:void 0,P=arguments.length>6?arguments[6]:void 0;const y=await s.readPixels(0,0,O,q);n(O,q,new Uint8Array(y.buffer),Z,D,B,!0,void 0,P)}function h(O,q,s){let Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",D=arguments.length>4?arguments[4]:void 0,B=arguments.length>5&&void 0!==arguments[5]&&arguments[5],P=arguments.length>6&&void 0!==arguments[6]&&arguments[6],y=arguments.length>7?arguments[7]:void 0;return new Promise((o=>{n(O,q,s,(O=>o(O)),Z,D,B,P,y)}))}function n(O,q,w,h){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",j=arguments.length>5?arguments[5]:void 0,f=arguments.length>6&&void 0!==arguments[6]&&arguments[6],u=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8?arguments[8]:void 0;(async function(){return o||(o=new Promise(((O,q)=>{let D,B=null;const o={$e:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(s.bind(s,1417)).then((w=>{let{ThinEngine:h}=w;try{D=new OffscreenCanvas(100,100),B=new h(D,!1,o)}catch(j){D=document.createElement("canvas"),B=new h(D,!1,o)}P.c.Instances.pop(),P.c.OnEnginesDisposedObservable.add((O=>{B&&O!==B&&!B.u&&0===P.c.Instances.length&&r()})),B.getCaps().parallelShaderCompile=void 0;const n=new Z.e(B);s.e(32).then(s.bind(s,11399)).then((s=>{let{passPixelShader:P}=s;if(!B)return void q("Engine is not defined");const o=new Z.h({Lb:B,name:P.name,fragmentShader:P.shader,samplerNames:["textureSampler"]});y={canvas:D,Lb:B,renderer:n,wrapper:o},O(y)}))})).catch(q)}))),await o})().then((s=>{if(s.Lb.setSize(O,q,!0),w instanceof Float32Array){const O=new Uint8Array(w.length);let q=w.length;for(;q--;){const s=w[q];O[q]=Math.round(255*(0,B.e)(s))}w=O}const Z=s.Lb.createRawTexture(w,O,q,5,!1,!f,1);s.renderer.setViewport(),s.renderer.applyEffectWrapper(s.wrapper),s.wrapper.effect._bindTexture("textureSampler",Z),s.renderer.draw(),u?D.f.ToBlob(s.canvas,(O=>{const q=new FileReader;q.onload=O=>{const q=O.target.result;h&&h(q)},q.readAsArrayBuffer(O)}),n,c):D.f.EncodeScreenshotCanvasData(s.canvas,h,n,j,c),Z.dispose()}))}function r(){var O;y?(y.wrapper.dispose(),y.renderer.dispose(),y.Lb.dispose()):null===(O=o)||void 0===O||O.then((O=>{O.wrapper.dispose(),O.renderer.dispose(),O.Lb.dispose()}));o=null,y=null}const j={DumpData:n,DumpDataAsync:h,DumpFramebuffer:w,Dispose:r};D.f.DumpData=n,D.f.DumpDataAsync=h,D.f.DumpFramebuffer=w}}]);