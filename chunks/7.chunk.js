"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[7],{10423:(A,I,y)=>{y.r(I),y.d(I,{Dispose:()=>f,DumpData:()=>P,DumpDataAsync:()=>U,DumpFramebuffer:()=>k,DumpTools:()=>z});var X=y(1564),F=y(1213),M=y(1055),g=y(1049);let d,V=null;async function k(A,I,y,X){let F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",M=arguments.length>5?arguments[5]:void 0,g=arguments.length>6?arguments[6]:void 0;const d=await y.readPixels(0,0,A,I);P(A,I,new Uint8Array(d.buffer),X,F,M,!0,void 0,g)}function U(A,I,y){let X=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",F=arguments.length>4?arguments[4]:void 0,M=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6&&void 0!==arguments[6]&&arguments[6],d=arguments.length>7?arguments[7]:void 0;return new Promise((V=>{P(A,I,y,(A=>V(A)),X,F,M,g,d)}))}function P(A,I,k,U){let P=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",z=arguments.length>5?arguments[5]:void 0,l=arguments.length>6&&void 0!==arguments[6]&&arguments[6],u=arguments.length>7&&void 0!==arguments[7]&&arguments[7],K=arguments.length>8?arguments[8]:void 0;(async function(){return V||(V=new Promise(((A,I)=>{let F,M=null;const V={if:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(y.bind(y,1453)).then((k=>{let{ThinEngine:U}=k;try{F=new OffscreenCanvas(100,100),M=new U(F,!1,V)}catch(z){F=document.createElement("canvas"),M=new U(F,!1,V)}g.c.Instances.pop(),g.c.OnEnginesDisposedObservable.add((A=>{M&&A!==M&&!M.u&&0===g.c.Instances.length&&f()})),M.getCaps().parallelShaderCompile=void 0;const P=new X.e(M);y.e(32).then(y.bind(y,11055)).then((y=>{let{passPixelShader:g}=y;if(!M)return void I("Engine is not defined");const V=new X.i({Nb:M,name:g.name,fragmentShader:g.shader,samplerNames:["textureSampler"]});d={canvas:F,Nb:M,renderer:P,wrapper:V},A(d)}))})).catch(I)}))),await V})().then((y=>{if(y.Nb.setSize(A,I,!0),k instanceof Float32Array){const A=new Uint8Array(k.length);let I=k.length;for(;I--;){const y=k[I];A[I]=Math.round(255*(0,M.b)(y))}k=A}const X=y.Nb.createRawTexture(k,A,I,5,!1,!l,1);y.renderer.setViewport(),y.renderer.applyEffectWrapper(y.wrapper),y.wrapper.effect._bindTexture("textureSampler",X),y.renderer.draw(),u?F.e.ToBlob(y.canvas,(A=>{const I=new FileReader;I.onload=A=>{const I=A.target.result;U&&U(I)},I.readAsArrayBuffer(A)}),P,K):F.e.EncodeScreenshotCanvasData(y.canvas,U,P,z,K),X.dispose()}))}function f(){var A;d?(d.wrapper.dispose(),d.renderer.dispose(),d.Nb.dispose()):null===(A=V)||void 0===A||A.then((A=>{A.wrapper.dispose(),A.renderer.dispose(),A.Nb.dispose()}));V=null,d=null}const z={DumpData:P,DumpDataAsync:U,DumpFramebuffer:k,Dispose:f};F.e.DumpData=P,F.e.DumpDataAsync=U,F.e.DumpFramebuffer=k}}]);