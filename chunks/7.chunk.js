"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[7],{10294:(L,J,o)=>{o.r(J),o.d(J,{Dispose:()=>U,DumpData:()=>v,DumpDataAsync:()=>C,DumpFramebuffer:()=>Z,DumpTools:()=>k});var g=o(1543),V=o(1193),q=o(1011),I=o(1008);let b,D=null;async function Z(L,J,o,g){let V=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",q=arguments.length>5?arguments[5]:void 0,I=arguments.length>6?arguments[6]:void 0;const b=await o.readPixels(0,0,L,J);v(L,J,new Uint8Array(b.buffer),g,V,q,!0,void 0,I)}function C(L,J,o){let g=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",V=arguments.length>4?arguments[4]:void 0,q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],I=arguments.length>6&&void 0!==arguments[6]&&arguments[6],b=arguments.length>7?arguments[7]:void 0;return new Promise((D=>{v(L,J,o,(L=>D(L)),g,V,q,I,b)}))}function v(L,J,Z,C){let v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",k=arguments.length>5?arguments[5]:void 0,H=arguments.length>6&&void 0!==arguments[6]&&arguments[6],e=arguments.length>7&&void 0!==arguments[7]&&arguments[7],T=arguments.length>8?arguments[8]:void 0;(async function(){return D||(D=new Promise(((L,J)=>{let V,q=null;const D={je:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(o.bind(o,1431)).then((Z=>{let{ThinEngine:C}=Z;try{V=new OffscreenCanvas(100,100),q=new C(V,!1,D)}catch(k){V=document.createElement("canvas"),q=new C(V,!1,D)}I.d.Instances.pop(),I.d.OnEnginesDisposedObservable.add((L=>{q&&L!==q&&!q.u&&0===I.d.Instances.length&&U()})),q.getCaps().parallelShaderCompile=void 0;const v=new g.c(q);o.e(32).then(o.bind(o,10981)).then((o=>{let{passPixelShader:I}=o;if(!q)return void J("Engine is not defined");const D=new g.e({rd:q,name:I.name,fragmentShader:I.shader,samplerNames:["textureSampler"]});b={canvas:V,rd:q,renderer:v,wrapper:D},L(b)}))})).catch(J)}))),await D})().then((o=>{if(o.rd.setSize(L,J,!0),Z instanceof Float32Array){const L=new Uint8Array(Z.length);let J=Z.length;for(;J--;){const o=Z[J];L[J]=Math.round(255*(0,q.c)(o))}Z=L}const g=o.rd.createRawTexture(Z,L,J,5,!1,!H,1);o.renderer.setViewport(),o.renderer.applyEffectWrapper(o.wrapper),o.wrapper.effect._bindTexture("textureSampler",g),o.renderer.draw(),e?V.c.ToBlob(o.canvas,(L=>{const J=new FileReader;J.onload=L=>{const J=L.target.result;C&&C(J)},J.readAsArrayBuffer(L)}),v,T):V.c.EncodeScreenshotCanvasData(o.canvas,C,v,k,T),g.dispose()}))}function U(){var L;b?(b.wrapper.dispose(),b.renderer.dispose(),b.rd.dispose()):null===(L=D)||void 0===L||L.then((L=>{L.wrapper.dispose(),L.renderer.dispose(),L.rd.dispose()}));D=null,b=null}const k={DumpData:v,DumpDataAsync:C,DumpFramebuffer:Z,Dispose:U};V.c.DumpData=v,V.c.DumpDataAsync=C,V.c.DumpFramebuffer=Z}}]);