"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[7],{11081:(f,H,Q)=>{Q.r(H),Q.d(H,{Dispose:()=>k,DumpData:()=>Y,DumpDataAsync:()=>u,DumpFramebuffer:()=>J,DumpTools:()=>X});var a=Q(1567),d=Q(1220),s=Q(1026),n=Q(1023);let e,c=null;async function J(f,H,Q,a){let d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",s=arguments.length>5?arguments[5]:void 0,n=arguments.length>6?arguments[6]:void 0;const e=await Q.readPixels(0,0,f,H);Y(f,H,new Uint8Array(e.buffer),a,d,s,!0,void 0,n)}function u(f,H,Q){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",d=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],n=arguments.length>6&&void 0!==arguments[6]&&arguments[6],e=arguments.length>7?arguments[7]:void 0;return new Promise((c=>{Y(f,H,Q,(f=>c(f)),a,d,s,n,e)}))}function Y(f,H,J,u){let Y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",X=arguments.length>5?arguments[5]:void 0,F=arguments.length>6&&void 0!==arguments[6]&&arguments[6],r=arguments.length>7&&void 0!==arguments[7]&&arguments[7],v=arguments.length>8?arguments[8]:void 0;(async function(){return c||(c=new Promise(((f,H)=>{let d,s=null;const c={hf:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(Q.bind(Q,1455)).then((J=>{let{ThinEngine:u}=J;try{d=new OffscreenCanvas(100,100),s=new u(d,!1,c)}catch(X){d=document.createElement("canvas"),s=new u(d,!1,c)}n.d.Instances.pop(),n.d.OnEnginesDisposedObservable.add((f=>{s&&f!==s&&!s.u&&0===n.d.Instances.length&&k()})),s.getCaps().parallelShaderCompile=void 0;const Y=new a.b(s);Q.e(32).then(Q.bind(Q,11779)).then((Q=>{let{passPixelShader:n}=Q;if(!s)return void H("Engine is not defined");const c=new a.e({Hb:s,name:n.name,fragmentShader:n.shader,samplerNames:["textureSampler"]});e={canvas:d,Hb:s,renderer:Y,wrapper:c},f(e)}))})).catch(H)}))),await c})().then((Q=>{if(Q.Hb.setSize(f,H,!0),J instanceof Float32Array){const f=new Uint8Array(J.length);let H=J.length;for(;H--;){const Q=J[H];f[H]=Math.round(255*(0,s.b)(Q))}J=f}const a=Q.Hb.createRawTexture(J,f,H,5,!1,!F,1);Q.renderer.setViewport(),Q.renderer.applyEffectWrapper(Q.wrapper),Q.wrapper.effect._bindTexture("textureSampler",a),Q.renderer.draw(),r?d.e.ToBlob(Q.canvas,(f=>{const H=new FileReader;H.onload=f=>{const H=f.target.result;u&&u(H)},H.readAsArrayBuffer(f)}),Y,v):d.e.EncodeScreenshotCanvasData(Q.canvas,u,Y,X,v),a.dispose()}))}function k(){var f;e?(e.wrapper.dispose(),e.renderer.dispose(),e.Hb.dispose()):null===(f=c)||void 0===f||f.then((f=>{f.wrapper.dispose(),f.renderer.dispose(),f.Hb.dispose()}));c=null,e=null}const X={DumpData:Y,DumpDataAsync:u,DumpFramebuffer:J,Dispose:k};d.e.DumpData=Y,d.e.DumpDataAsync=u,d.e.DumpFramebuffer=J}}]);