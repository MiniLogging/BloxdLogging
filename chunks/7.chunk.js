"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[7],{10386:(d,m,g)=>{g.r(m),g.d(m,{Dispose:()=>Q,DumpData:()=>Y,DumpDataAsync:()=>X,DumpFramebuffer:()=>U,DumpTools:()=>B});var V=g(1503),u=g(1190),D=g(1045),j=g(1037);let z,s=null;async function U(d,m,g,V){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",D=arguments.length>5?arguments[5]:void 0,j=arguments.length>6?arguments[6]:void 0;const z=await g.readPixels(0,0,d,m);Y(d,m,new Uint8Array(z.buffer),V,u,D,!0,void 0,j)}function X(d,m,g){let V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",u=arguments.length>4?arguments[4]:void 0,D=arguments.length>5&&void 0!==arguments[5]&&arguments[5],j=arguments.length>6&&void 0!==arguments[6]&&arguments[6],z=arguments.length>7?arguments[7]:void 0;return new Promise((s=>{Y(d,m,g,(d=>s(d)),V,u,D,j,z)}))}function Y(d,m,U,X){let Y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",B=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],C=arguments.length>7&&void 0!==arguments[7]&&arguments[7],L=arguments.length>8?arguments[8]:void 0;(async function(){return s||(s=new Promise(((d,m)=>{let u,D=null;const s={ee:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(g.bind(g,1401)).then((U=>{let{ThinEngine:X}=U;try{u=new OffscreenCanvas(100,100),D=new X(u,!1,s)}catch(B){u=document.createElement("canvas"),D=new X(u,!1,s)}j.b.Instances.pop(),j.b.OnEnginesDisposedObservable.add((d=>{D&&d!==D&&!D.u&&0===j.b.Instances.length&&Q()})),D.getCaps().parallelShaderCompile=void 0;const Y=new V.c(D);g.e(32).then(g.bind(g,11089)).then((g=>{let{passPixelShader:j}=g;if(!D)return void m("Engine is not defined");const s=new V.e({td:D,name:j.name,fragmentShader:j.shader,samplerNames:["textureSampler"]});z={canvas:u,td:D,renderer:Y,wrapper:s},d(z)}))})).catch(m)}))),await s})().then((g=>{if(g.td.setSize(d,m,!0),U instanceof Float32Array){const d=new Uint8Array(U.length);let m=U.length;for(;m--;){const g=U[m];d[m]=Math.round(255*(0,D.b)(g))}U=d}const V=g.td.createRawTexture(U,d,m,5,!1,!i,1);g.renderer.setViewport(),g.renderer.applyEffectWrapper(g.wrapper),g.wrapper.effect._bindTexture("textureSampler",V),g.renderer.draw(),C?u.f.ToBlob(g.canvas,(d=>{const m=new FileReader;m.onload=d=>{const m=d.target.result;X&&X(m)},m.readAsArrayBuffer(d)}),Y,L):u.f.EncodeScreenshotCanvasData(g.canvas,X,Y,B,L),V.dispose()}))}function Q(){var d;z?(z.wrapper.dispose(),z.renderer.dispose(),z.td.dispose()):null===(d=s)||void 0===d||d.then((d=>{d.wrapper.dispose(),d.renderer.dispose(),d.td.dispose()}));s=null,z=null}const B={DumpData:Y,DumpDataAsync:X,DumpFramebuffer:U,Dispose:Q};u.f.DumpData=Y,u.f.DumpDataAsync=X,u.f.DumpFramebuffer=U}}]);