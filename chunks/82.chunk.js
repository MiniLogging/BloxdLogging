"use strict";(self.v2pspxy442l=self.v2pspxy442l||[]).push([[82],{15619:(l,a,N)=>{N.r(a),N.d(a,{FlowGraphInterpolationBlock:()=>w});var U=N(14171),c=N(14145),K=N(12950),Z=N(12394);class w extends U.e{constructor(){let l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(l),this.keyFrames=[];const a="string"===typeof(null===l||void 0===l?void 0:l.animationType)?(0,c.M)(l.animationType):(0,c.J)((null===l||void 0===l?void 0:l.animationType)??0),N=(null===l||void 0===l?void 0:l.keyFramesCount)??1,U=this.registerDataInput("duration_0",c.t,0),K=this.registerDataInput("value_0",a);this.keyFrames.push({duration:U,value:K});for(let Z=1;Z<N+1;Z++){const U=this.registerDataInput(`duration_${Z}`,c.t,Z===N?l.duration:void 0),K=this.registerDataInput(`value_${Z}`,a);this.keyFrames.push({duration:U,value:K})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[N].value,this.easingFunction=this.registerDataInput("easingFunction",c.d),this.animation=this.registerDataOutput("animation",c.d),this.propertyName=this.registerDataInput("propertyName",c.d,null===l||void 0===l?void 0:l.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",c.d)}_updateOutputs(l){const a=l._getGlobalContextVariable("interpolationAnimations",[]),N=this.propertyName.getValue(l),U=this.easingFunction.getValue(l),c=this._createAnimation(l,N,U);if(this.animation.setValue(c,l),Array.isArray(c))for(const K of c)a.push(K.uniqueId);else a.push(c.uniqueId);l._setGlobalContextVariable("interpolationAnimations",a)}_createAnimation(l,a,N){var U;const c=this.initialValue.richType,Z=[],w=this.initialValue.getValue(l)||c.defaultValue;Z.push({frame:0,value:w});const S=(null===(U=this.config)||void 0===U?void 0:U.numberOfKeyFrames)??1;for(let K=1;K<S+1;K++){var T,J;const a=null===(T=this.keyFrames[K].duration)||void 0===T?void 0:T.getValue(l);let N=null===(J=this.keyFrames[K].value)||void 0===J?void 0:J.getValue(l);K===S-1&&(N=N||c.defaultValue),void 0!==a&&N&&Z.push({frame:60*a,value:N})}const n=this.customBuildAnimation.getValue(l);if(n)return n(null,null,l)(Z,60,c.animationType,N);if("string"===typeof a){const l=K.d.CreateAnimation(a,c.animationType,60,N);return l.setKeys(Z),[l]}return a.map((l=>{const a=K.d.CreateAnimation(l,c.animationType,60,N);return a.setKeys(Z),a}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,Z.g)("FlowGraphInterpolationBlock",w)}}]);