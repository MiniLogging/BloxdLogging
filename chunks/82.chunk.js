"use strict";(self.bjbkv7h3qsd=self.bjbkv7h3qsd||[]).push([[82],{14407:(G,A,j)=>{j.r(A),j.d(A,{FlowGraphInterpolationBlock:()=>s});var u=j(12905),k=j(12880),B=j(11709),x=j(11181);class s extends u.c{constructor(){let G=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(G),this.keyFrames=[];const A="string"===typeof(null===G||void 0===G?void 0:G.animationType)?(0,k.L)(G.animationType):(0,k.J)((null===G||void 0===G?void 0:G.animationType)??0),j=(null===G||void 0===G?void 0:G.keyFramesCount)??1,u=this.registerDataInput("duration_0",k.s,0),B=this.registerDataInput("value_0",A);this.keyFrames.push({duration:u,value:B});for(let x=1;x<j+1;x++){const u=this.registerDataInput(`duration_${x}`,k.s,x===j?G.duration:void 0),B=this.registerDataInput(`value_${x}`,A);this.keyFrames.push({duration:u,value:B})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[j].value,this.easingFunction=this.registerDataInput("easingFunction",k.c),this.animation=this.registerDataOutput("animation",k.c),this.propertyName=this.registerDataInput("propertyName",k.c,null===G||void 0===G?void 0:G.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",k.c)}_updateOutputs(G){const A=G._getGlobalContextVariable("interpolationAnimations",[]),j=this.propertyName.getValue(G),u=this.easingFunction.getValue(G),k=this._createAnimation(G,j,u);if(this.animation.setValue(k,G),Array.isArray(k))for(const B of k)A.push(B.uniqueId);else A.push(k.uniqueId);G._setGlobalContextVariable("interpolationAnimations",A)}_createAnimation(G,A,j){var u;const k=this.initialValue.richType,x=[],s=this.initialValue.getValue(G)||k.defaultValue;x.push({frame:0,value:s});const O=(null===(u=this.config)||void 0===u?void 0:u.numberOfKeyFrames)??1;for(let B=1;B<O+1;B++){var d,h;const A=null===(d=this.keyFrames[B].duration)||void 0===d?void 0:d.getValue(G);let j=null===(h=this.keyFrames[B].value)||void 0===h?void 0:h.getValue(G);B===O-1&&(j=j||k.defaultValue),void 0!==A&&j&&x.push({frame:60*A,value:j})}const H=this.customBuildAnimation.getValue(G);if(H)return H(null,null,G)(x,60,k.animationType,j);if("string"===typeof A){const G=B.d.CreateAnimation(A,k.animationType,60,j);return G.setKeys(x),[G]}return A.map((G=>{const A=B.d.CreateAnimation(G,k.animationType,60,j);return A.setKeys(x),A}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,x.h)("FlowGraphInterpolationBlock",s)}}]);