"use strict";(self.h6ljd275xwr=self.h6ljd275xwr||[]).push([[82],{14559:(n,y,H)=>{H.r(y),H.d(y,{FlowGraphInterpolationBlock:()=>i});var o=H(13146),G=H(13117),h=H(11885),k=H(11248);class i extends o.c{constructor(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(n),this.keyFrames=[];const y="string"===typeof(null===n||void 0===n?void 0:n.animationType)?(0,G.D)(n.animationType):(0,G.B)((null===n||void 0===n?void 0:n.animationType)??0),H=(null===n||void 0===n?void 0:n.keyFramesCount)??1,o=this.registerDataInput("duration_0",G.p,0),h=this.registerDataInput("value_0",y);this.keyFrames.push({duration:o,value:h});for(let k=1;k<H+1;k++){const o=this.registerDataInput(`duration_${k}`,G.p,k===H?n.duration:void 0),h=this.registerDataInput(`value_${k}`,y);this.keyFrames.push({duration:o,value:h})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[H].value,this.easingFunction=this.registerDataInput("easingFunction",G.c),this.animation=this.registerDataOutput("animation",G.c),this.propertyName=this.registerDataInput("propertyName",G.c,null===n||void 0===n?void 0:n.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",G.c)}_updateOutputs(n){const y=n._getGlobalContextVariable("interpolationAnimations",[]),H=this.propertyName.getValue(n),o=this.easingFunction.getValue(n),G=this._createAnimation(n,H,o);if(this.animation.setValue(G,n),Array.isArray(G))for(const h of G)y.push(h.uniqueId);else y.push(G.uniqueId);n._setGlobalContextVariable("interpolationAnimations",y)}_createAnimation(n,y,H){var o;const G=this.initialValue.richType,k=[],i=this.initialValue.getValue(n)||G.defaultValue;k.push({frame:0,value:i});const B=(null===(o=this.config)||void 0===o?void 0:o.numberOfKeyFrames)??1;for(let h=1;h<B+1;h++){var V,q;const y=null===(V=this.keyFrames[h].duration)||void 0===V?void 0:V.getValue(n);let H=null===(q=this.keyFrames[h].value)||void 0===q?void 0:q.getValue(n);h===B-1&&(H=H||G.defaultValue),void 0!==y&&H&&k.push({frame:60*y,value:H})}const b=this.customBuildAnimation.getValue(n);if(b)return b(null,null,n)(k,60,G.animationType,H);if("string"===typeof y){const n=h.e.CreateAnimation(y,G.animationType,60,H);return n.setKeys(k),[n]}return y.map((n=>{const y=h.e.CreateAnimation(n,G.animationType,60,H);return y.setKeys(k),y}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,k.h)("FlowGraphInterpolationBlock",i)}}]);