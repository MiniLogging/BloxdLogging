"use strict";(self.qcdfysujsyf=self.qcdfysujsyf||[]).push([[82],{15848:(K,A,T)=>{T.r(A),T.d(A,{FlowGraphInterpolationBlock:()=>O});var G=T(14262),B=T(14237),L=T(13226),f=T(12651);class O extends G.e{constructor(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(K),this.keyFrames=[];const A="string"===typeof(null===K||void 0===K?void 0:K.animationType)?(0,B.O)(K.animationType):(0,B.L)((null===K||void 0===K?void 0:K.animationType)??0),T=(null===K||void 0===K?void 0:K.keyFramesCount)??1,G=this.registerDataInput("duration_0",B.q,0),L=this.registerDataInput("value_0",A);this.keyFrames.push({duration:G,value:L});for(let f=1;f<T+1;f++){const G=this.registerDataInput(`duration_${f}`,B.q,f===T?K.duration:void 0),L=this.registerDataInput(`value_${f}`,A);this.keyFrames.push({duration:G,value:L})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[T].value,this.easingFunction=this.registerDataInput("easingFunction",B.b),this.animation=this.registerDataOutput("animation",B.b),this.propertyName=this.registerDataInput("propertyName",B.b,null===K||void 0===K?void 0:K.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",B.b)}_updateOutputs(K){const A=K._getGlobalContextVariable("interpolationAnimations",[]),T=this.propertyName.getValue(K),G=this.easingFunction.getValue(K),B=this._createAnimation(K,T,G);if(this.animation.setValue(B,K),Array.isArray(B))for(const L of B)A.push(L.uniqueId);else A.push(B.uniqueId);K._setGlobalContextVariable("interpolationAnimations",A)}_createAnimation(K,A,T){var G;const B=this.initialValue.richType,f=[],O=this.initialValue.getValue(K)||B.defaultValue;f.push({frame:0,value:O});const C=(null===(G=this.config)||void 0===G?void 0:G.numberOfKeyFrames)??1;for(let L=1;L<C+1;L++){var Q,Y;const A=null===(Q=this.keyFrames[L].duration)||void 0===Q?void 0:Q.getValue(K);let T=null===(Y=this.keyFrames[L].value)||void 0===Y?void 0:Y.getValue(K);L===C-1&&(T=T||B.defaultValue),void 0!==A&&T&&f.push({frame:60*A,value:T})}const Z=this.customBuildAnimation.getValue(K);if(Z)return Z(null,null,K)(f,60,B.animationType,T);if("string"===typeof A){const K=L.b.CreateAnimation(A,B.animationType,60,T);return K.setKeys(f),[K]}return A.map((K=>{const A=L.b.CreateAnimation(K,B.animationType,60,T);return A.setKeys(f),A}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,f.c)("FlowGraphInterpolationBlock",O)}}]);