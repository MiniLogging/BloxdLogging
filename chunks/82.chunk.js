"use strict";(self.fwuvyyymhp8=self.fwuvyyymhp8||[]).push([[82],{15546:(N,U,V)=>{V.r(U),V.d(U,{FlowGraphInterpolationBlock:()=>i});var A=V(14058),t=V(14036),n=V(12876),q=V(12344);class i extends A.c{constructor(){let N=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(N),this.keyFrames=[];const U="string"===typeof(null===N||void 0===N?void 0:N.animationType)?(0,t.F)(N.animationType):(0,t.B)((null===N||void 0===N?void 0:N.animationType)??0),V=(null===N||void 0===N?void 0:N.keyFramesCount)??1,A=this.registerDataInput("duration_0",t.p,0),n=this.registerDataInput("value_0",U);this.keyFrames.push({duration:A,value:n});for(let q=1;q<V+1;q++){const A=this.registerDataInput(`duration_${q}`,t.p,q===V?N.duration:void 0),n=this.registerDataInput(`value_${q}`,U);this.keyFrames.push({duration:A,value:n})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[V].value,this.easingFunction=this.registerDataInput("easingFunction",t.b),this.animation=this.registerDataOutput("animation",t.b),this.propertyName=this.registerDataInput("propertyName",t.b,null===N||void 0===N?void 0:N.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",t.b)}_updateOutputs(N){const U=N._getGlobalContextVariable("interpolationAnimations",[]),V=this.propertyName.getValue(N),A=this.easingFunction.getValue(N),t=this._createAnimation(N,V,A);if(this.animation.setValue(t,N),Array.isArray(t))for(const n of t)U.push(n.uniqueId);else U.push(t.uniqueId);N._setGlobalContextVariable("interpolationAnimations",U)}_createAnimation(N,U,V){var A;const t=this.initialValue.richType,q=[],i=this.initialValue.getValue(N)||t.defaultValue;q.push({frame:0,value:i});const z=(null===(A=this.config)||void 0===A?void 0:A.numberOfKeyFrames)??1;for(let n=1;n<z+1;n++){var S,E;const U=null===(S=this.keyFrames[n].duration)||void 0===S?void 0:S.getValue(N);let V=null===(E=this.keyFrames[n].value)||void 0===E?void 0:E.getValue(N);n===z-1&&(V=V||t.defaultValue),void 0!==U&&V&&q.push({frame:60*U,value:V})}const p=this.customBuildAnimation.getValue(N);if(p)return p(null,null,N)(q,60,t.animationType,V);if("string"===typeof U){const N=n.e.CreateAnimation(U,t.animationType,60,V);return N.setKeys(q),[N]}return U.map((N=>{const U=n.e.CreateAnimation(N,t.animationType,60,V);return U.setKeys(q),U}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,q.e)("FlowGraphInterpolationBlock",i)}}]);