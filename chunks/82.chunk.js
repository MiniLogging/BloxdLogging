"use strict";(self.ufnpnb83drd=self.ufnpnb83drd||[]).push([[82],{15546:(E,U,g)=>{g.r(U),g.d(U,{FlowGraphInterpolationBlock:()=>u});var N=g(14077),L=g(14058),D=g(12853),S=g(12292);class u extends N.b{constructor(){let E=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(E),this.keyFrames=[];const U="string"===typeof(null===E||void 0===E?void 0:E.animationType)?(0,L.L)(E.animationType):(0,L.K)((null===E||void 0===E?void 0:E.animationType)??0),g=(null===E||void 0===E?void 0:E.keyFramesCount)??1,N=this.registerDataInput("duration_0",L.t,0),D=this.registerDataInput("value_0",U);this.keyFrames.push({duration:N,value:D});for(let S=1;S<g+1;S++){const N=this.registerDataInput(`duration_${S}`,L.t,S===g?E.duration:void 0),D=this.registerDataInput(`value_${S}`,U);this.keyFrames.push({duration:N,value:D})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[g].value,this.easingFunction=this.registerDataInput("easingFunction",L.e),this.animation=this.registerDataOutput("animation",L.e),this.propertyName=this.registerDataInput("propertyName",L.e,null===E||void 0===E?void 0:E.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",L.e)}_updateOutputs(E){const U=E._getGlobalContextVariable("interpolationAnimations",[]),g=this.propertyName.getValue(E),N=this.easingFunction.getValue(E),L=this._createAnimation(E,g,N);if(this.animation.setValue(L,E),Array.isArray(L))for(const D of L)U.push(D.uniqueId);else U.push(L.uniqueId);E._setGlobalContextVariable("interpolationAnimations",U)}_createAnimation(E,U,g){var N;const L=this.initialValue.richType,S=[],u=this.initialValue.getValue(E)||L.defaultValue;S.push({frame:0,value:u});const s=(null===(N=this.config)||void 0===N?void 0:N.numberOfKeyFrames)??1;for(let D=1;D<s+1;D++){var C,B;const U=null===(C=this.keyFrames[D].duration)||void 0===C?void 0:C.getValue(E);let g=null===(B=this.keyFrames[D].value)||void 0===B?void 0:B.getValue(E);D===s-1&&(g=g||L.defaultValue),void 0!==U&&g&&S.push({frame:60*U,value:g})}const P=this.customBuildAnimation.getValue(E);if(P)return P(null,null,E)(S,60,L.animationType,g);if("string"===typeof U){const E=D.c.CreateAnimation(U,L.animationType,60,g);return E.setKeys(S),[E]}return U.map((E=>{const U=D.c.CreateAnimation(E,L.animationType,60,g);return U.setKeys(S),U}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,S.f)("FlowGraphInterpolationBlock",u)}}]);