"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[82],{14427:(o,H,n)=>{n.r(H),n.d(H,{FlowGraphInterpolationBlock:()=>Y});var E=n(12956),k=n(12933),g=n(11717),O=n(11140);class Y extends E.c{constructor(){let o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(o),this.keyFrames=[];const H="string"===typeof(null===o||void 0===o?void 0:o.animationType)?(0,k.L)(o.animationType):(0,k.H)((null===o||void 0===o?void 0:o.animationType)??0),n=(null===o||void 0===o?void 0:o.keyFramesCount)??1,E=this.registerDataInput("duration_0",k.r,0),g=this.registerDataInput("value_0",H);this.keyFrames.push({duration:E,value:g});for(let O=1;O<n+1;O++){const E=this.registerDataInput(`duration_${O}`,k.r,O===n?o.duration:void 0),g=this.registerDataInput(`value_${O}`,H);this.keyFrames.push({duration:E,value:g})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[n].value,this.easingFunction=this.registerDataInput("easingFunction",k.b),this.animation=this.registerDataOutput("animation",k.b),this.propertyName=this.registerDataInput("propertyName",k.b,null===o||void 0===o?void 0:o.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",k.b)}_updateOutputs(o){const H=o._getGlobalContextVariable("interpolationAnimations",[]),n=this.propertyName.getValue(o),E=this.easingFunction.getValue(o),k=this._createAnimation(o,n,E);if(this.animation.setValue(k,o),Array.isArray(k))for(const g of k)H.push(g.uniqueId);else H.push(k.uniqueId);o._setGlobalContextVariable("interpolationAnimations",H)}_createAnimation(o,H,n){var E;const k=this.initialValue.richType,O=[],Y=this.initialValue.getValue(o)||k.defaultValue;O.push({frame:0,value:Y});const y=(null===(E=this.config)||void 0===E?void 0:E.numberOfKeyFrames)??1;for(let g=1;g<y+1;g++){var S,G;const H=null===(S=this.keyFrames[g].duration)||void 0===S?void 0:S.getValue(o);let n=null===(G=this.keyFrames[g].value)||void 0===G?void 0:G.getValue(o);g===y-1&&(n=n||k.defaultValue),void 0!==H&&n&&O.push({frame:60*H,value:n})}const c=this.customBuildAnimation.getValue(o);if(c)return c(null,null,o)(O,60,k.animationType,n);if("string"===typeof H){const o=g.b.CreateAnimation(H,k.animationType,60,n);return o.setKeys(O),[o]}return H.map((o=>{const H=g.b.CreateAnimation(o,k.animationType,60,n);return H.setKeys(O),H}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,O.e)("FlowGraphInterpolationBlock",Y)}}]);