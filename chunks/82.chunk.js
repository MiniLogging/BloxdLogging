"use strict";(self.yg1iw12lizp=self.yg1iw12lizp||[]).push([[82],{15834:(L,U,x)=>{x.r(U),x.d(U,{FlowGraphInterpolationBlock:()=>a});var mL=x(14371),p=x(14348),G=x(13133),F=x(12547);class a extends mL.e{constructor(){let L=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(L),this.keyFrames=[];const U="string"===typeof(null===L||void 0===L?void 0:L.animationType)?(0,p.I)(L.animationType):(0,p.H)((null===L||void 0===L?void 0:L.animationType)??0),x=(null===L||void 0===L?void 0:L.keyFramesCount)??1,mL=this.registerDataInput("duration_0",p.u,0),G=this.registerDataInput("value_0",U);this.keyFrames.push({duration:mL,value:G});for(let F=1;F<x+1;F++){const mL=this.registerDataInput(`duration_${F}`,p.u,F===x?L.duration:void 0),G=this.registerDataInput(`value_${F}`,U);this.keyFrames.push({duration:mL,value:G})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[x].value,this.easingFunction=this.registerDataInput("easingFunction",p.c),this.animation=this.registerDataOutput("animation",p.c),this.propertyName=this.registerDataInput("propertyName",p.c,null===L||void 0===L?void 0:L.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",p.c)}_updateOutputs(L){const U=L._getGlobalContextVariable("interpolationAnimations",[]),x=this.propertyName.getValue(L),mL=this.easingFunction.getValue(L),p=this._createAnimation(L,x,mL);if(this.animation.setValue(p,L),Array.isArray(p))for(const G of p)U.push(G.uniqueId);else U.push(p.uniqueId);L._setGlobalContextVariable("interpolationAnimations",U)}_createAnimation(L,U,x){var mL;const p=this.initialValue.richType,F=[],a=this.initialValue.getValue(L)||p.defaultValue;F.push({frame:0,value:a});const o=(null===(mL=this.config)||void 0===mL?void 0:mL.numberOfKeyFrames)??1;for(let G=1;G<o+1;G++){var A,r;const U=null===(A=this.keyFrames[G].duration)||void 0===A?void 0:A.getValue(L);let x=null===(r=this.keyFrames[G].value)||void 0===r?void 0:r.getValue(L);G===o-1&&(x=x||p.defaultValue),void 0!==U&&x&&F.push({frame:60*U,value:x})}const h=this.customBuildAnimation.getValue(L);if(h)return h(null,null,L)(F,60,p.animationType,x);if("string"===typeof U){const L=G.c.CreateAnimation(U,p.animationType,60,x);return L.setKeys(F),[L]}return U.map((L=>{const U=G.c.CreateAnimation(L,p.animationType,60,x);return U.setKeys(F),U}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,F.d)("FlowGraphInterpolationBlock",a)}}]);