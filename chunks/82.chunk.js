"use strict";(self.gpkvekif0vo=self.gpkvekif0vo||[]).push([[82],{15591:(a,O,i)=>{i.r(O),i.d(O,{FlowGraphInterpolationBlock:()=>Q});var H=i(14139),b=i(14124),G=i(12916),q=i(12346);class Q extends H.c{constructor(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(a),this.keyFrames=[];const O="string"===typeof(null===a||void 0===a?void 0:a.animationType)?(0,b.T)(a.animationType):(0,b.Q)((null===a||void 0===a?void 0:a.animationType)??0),i=(null===a||void 0===a?void 0:a.keyFramesCount)??1,H=this.registerDataInput("duration_0",b.t,0),G=this.registerDataInput("value_0",O);this.keyFrames.push({duration:H,value:G});for(let q=1;q<i+1;q++){const H=this.registerDataInput(`duration_${q}`,b.t,q===i?a.duration:void 0),G=this.registerDataInput(`value_${q}`,O);this.keyFrames.push({duration:H,value:G})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[i].value,this.easingFunction=this.registerDataInput("easingFunction",b.e),this.animation=this.registerDataOutput("animation",b.e),this.propertyName=this.registerDataInput("propertyName",b.e,null===a||void 0===a?void 0:a.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",b.e)}_updateOutputs(a){const O=a._getGlobalContextVariable("interpolationAnimations",[]),i=this.propertyName.getValue(a),H=this.easingFunction.getValue(a),b=this._createAnimation(a,i,H);if(this.animation.setValue(b,a),Array.isArray(b))for(const G of b)O.push(G.uniqueId);else O.push(b.uniqueId);a._setGlobalContextVariable("interpolationAnimations",O)}_createAnimation(a,O,i){var H;const b=this.initialValue.richType,q=[],Q=this.initialValue.getValue(a)||b.defaultValue;q.push({frame:0,value:Q});const k=(null===(H=this.config)||void 0===H?void 0:H.numberOfKeyFrames)??1;for(let G=1;G<k+1;G++){var I,P;const O=null===(I=this.keyFrames[G].duration)||void 0===I?void 0:I.getValue(a);let i=null===(P=this.keyFrames[G].value)||void 0===P?void 0:P.getValue(a);G===k-1&&(i=i||b.defaultValue),void 0!==O&&i&&q.push({frame:60*O,value:i})}const e=this.customBuildAnimation.getValue(a);if(e)return e(null,null,a)(q,60,b.animationType,i);if("string"===typeof O){const a=G.b.CreateAnimation(O,b.animationType,60,i);return a.setKeys(q),[a]}return O.map((a=>{const O=G.b.CreateAnimation(a,b.animationType,60,i);return O.setKeys(q),O}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,q.h)("FlowGraphInterpolationBlock",Q)}}]);