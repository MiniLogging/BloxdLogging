"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[82],{14283:(g,w,q)=>{q.r(w),q.d(w,{FlowGraphInterpolationBlock:()=>i});var R=q(12863),o=q(12836),r=q(11659),S=q(11128);class i extends R.e{constructor(){let g=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(g),this.keyFrames=[];const w="string"===typeof(null===g||void 0===g?void 0:g.animationType)?(0,o.S)(g.animationType):(0,o.Q)((null===g||void 0===g?void 0:g.animationType)??0),q=(null===g||void 0===g?void 0:g.keyFramesCount)??1,R=this.registerDataInput("duration_0",o.w,0),r=this.registerDataInput("value_0",w);this.keyFrames.push({duration:R,value:r});for(let S=1;S<q+1;S++){const R=this.registerDataInput(`duration_${S}`,o.w,S===q?g.duration:void 0),r=this.registerDataInput(`value_${S}`,w);this.keyFrames.push({duration:R,value:r})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[q].value,this.easingFunction=this.registerDataInput("easingFunction",o.d),this.animation=this.registerDataOutput("animation",o.d),this.propertyName=this.registerDataInput("propertyName",o.d,null===g||void 0===g?void 0:g.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",o.d)}_updateOutputs(g){const w=g._getGlobalContextVariable("interpolationAnimations",[]),q=this.propertyName.getValue(g),R=this.easingFunction.getValue(g),o=this._createAnimation(g,q,R);if(this.animation.setValue(o,g),Array.isArray(o))for(const r of o)w.push(r.uniqueId);else w.push(o.uniqueId);g._setGlobalContextVariable("interpolationAnimations",w)}_createAnimation(g,w,q){var R;const o=this.initialValue.richType,S=[],i=this.initialValue.getValue(g)||o.defaultValue;S.push({frame:0,value:i});const T=(null===(R=this.config)||void 0===R?void 0:R.numberOfKeyFrames)??1;for(let r=1;r<T+1;r++){var z,t;const w=null===(z=this.keyFrames[r].duration)||void 0===z?void 0:z.getValue(g);let q=null===(t=this.keyFrames[r].value)||void 0===t?void 0:t.getValue(g);r===T-1&&(q=q||o.defaultValue),void 0!==w&&q&&S.push({frame:60*w,value:q})}const m=this.customBuildAnimation.getValue(g);if(m)return m(null,null,g)(S,60,o.animationType,q);if("string"===typeof w){const g=r.c.CreateAnimation(w,o.animationType,60,q);return g.setKeys(S),[g]}return w.map((g=>{const w=r.c.CreateAnimation(g,o.animationType,60,q);return w.setKeys(S),w}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,S.g)("FlowGraphInterpolationBlock",i)}}]);