"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[82],{14331:(h,V,i)=>{i.r(V),i.d(V,{FlowGraphInterpolationBlock:()=>q});var S=i(12827),l=i(12805),Y=i(11665),g=i(11091);class q extends S.c{constructor(){let h=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(h),this.keyFrames=[];const V="string"===typeof(null===h||void 0===h?void 0:h.animationType)?(0,l.M)(h.animationType):(0,l.K)((null===h||void 0===h?void 0:h.animationType)??0),i=(null===h||void 0===h?void 0:h.keyFramesCount)??1,S=this.registerDataInput("duration_0",l.u,0),Y=this.registerDataInput("value_0",V);this.keyFrames.push({duration:S,value:Y});for(let g=1;g<i+1;g++){const S=this.registerDataInput(`duration_${g}`,l.u,g===i?h.duration:void 0),Y=this.registerDataInput(`value_${g}`,V);this.keyFrames.push({duration:S,value:Y})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[i].value,this.easingFunction=this.registerDataInput("easingFunction",l.c),this.animation=this.registerDataOutput("animation",l.c),this.propertyName=this.registerDataInput("propertyName",l.c,null===h||void 0===h?void 0:h.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",l.c)}_updateOutputs(h){const V=h._getGlobalContextVariable("interpolationAnimations",[]),i=this.propertyName.getValue(h),S=this.easingFunction.getValue(h),l=this._createAnimation(h,i,S);if(this.animation.setValue(l,h),Array.isArray(l))for(const Y of l)V.push(Y.uniqueId);else V.push(l.uniqueId);h._setGlobalContextVariable("interpolationAnimations",V)}_createAnimation(h,V,i){var S;const l=this.initialValue.richType,g=[],q=this.initialValue.getValue(h)||l.defaultValue;g.push({frame:0,value:q});const B=(null===(S=this.config)||void 0===S?void 0:S.numberOfKeyFrames)??1;for(let Y=1;Y<B+1;Y++){var J,I;const V=null===(J=this.keyFrames[Y].duration)||void 0===J?void 0:J.getValue(h);let i=null===(I=this.keyFrames[Y].value)||void 0===I?void 0:I.getValue(h);Y===B-1&&(i=i||l.defaultValue),void 0!==V&&i&&g.push({frame:60*V,value:i})}const v=this.customBuildAnimation.getValue(h);if(v)return v(null,null,h)(g,60,l.animationType,i);if("string"===typeof V){const h=Y.d.CreateAnimation(V,l.animationType,60,i);return h.setKeys(g),[h]}return V.map((h=>{const V=Y.d.CreateAnimation(h,l.animationType,60,i);return V.setKeys(g),V}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,g.f)("FlowGraphInterpolationBlock",q)}}]);