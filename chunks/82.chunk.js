"use strict";(self.pp3k1ov3ibi=self.pp3k1ov3ibi||[]).push([[82],{15568:(M,Z,P)=>{P.r(Z),P.d(Z,{FlowGraphInterpolationBlock:()=>G});var x=P(14093),c=P(14073),w=P(12890),v=P(12317);class G extends x.c{constructor(){let M=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(M),this.keyFrames=[];const Z="string"===typeof(null===M||void 0===M?void 0:M.animationType)?(0,c.R)(M.animationType):(0,c.O)((null===M||void 0===M?void 0:M.animationType)??0),P=(null===M||void 0===M?void 0:M.keyFramesCount)??1,x=this.registerDataInput("duration_0",c.u,0),w=this.registerDataInput("value_0",Z);this.keyFrames.push({duration:x,value:w});for(let v=1;v<P+1;v++){const x=this.registerDataInput(`duration_${v}`,c.u,v===P?M.duration:void 0),w=this.registerDataInput(`value_${v}`,Z);this.keyFrames.push({duration:x,value:w})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[P].value,this.easingFunction=this.registerDataInput("easingFunction",c.e),this.animation=this.registerDataOutput("animation",c.e),this.propertyName=this.registerDataInput("propertyName",c.e,null===M||void 0===M?void 0:M.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",c.e)}_updateOutputs(M){const Z=M._getGlobalContextVariable("interpolationAnimations",[]),P=this.propertyName.getValue(M),x=this.easingFunction.getValue(M),c=this._createAnimation(M,P,x);if(this.animation.setValue(c,M),Array.isArray(c))for(const w of c)Z.push(w.uniqueId);else Z.push(c.uniqueId);M._setGlobalContextVariable("interpolationAnimations",Z)}_createAnimation(M,Z,P){var x;const c=this.initialValue.richType,v=[],G=this.initialValue.getValue(M)||c.defaultValue;v.push({frame:0,value:G});const mM=(null===(x=this.config)||void 0===x?void 0:x.numberOfKeyFrames)??1;for(let w=1;w<mM+1;w++){var K,d;const Z=null===(K=this.keyFrames[w].duration)||void 0===K?void 0:K.getValue(M);let P=null===(d=this.keyFrames[w].value)||void 0===d?void 0:d.getValue(M);w===mM-1&&(P=P||c.defaultValue),void 0!==Z&&P&&v.push({frame:60*Z,value:P})}const O=this.customBuildAnimation.getValue(M);if(O)return O(null,null,M)(v,60,c.animationType,P);if("string"===typeof Z){const M=w.d.CreateAnimation(Z,c.animationType,60,P);return M.setKeys(v),[M]}return Z.map((M=>{const Z=w.d.CreateAnimation(M,c.animationType,60,P);return Z.setKeys(v),Z}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,v.g)("FlowGraphInterpolationBlock",G)}}]);