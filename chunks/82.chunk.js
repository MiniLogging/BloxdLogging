"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[82],{14365:(B,I,C)=>{C.r(I),C.d(I,{FlowGraphInterpolationBlock:()=>L});var M=C(12927),x=C(12901),y=C(11708),f=C(11149);class L extends M.e{constructor(){let B=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(B),this.keyFrames=[];const I="string"===typeof(null===B||void 0===B?void 0:B.animationType)?(0,x.H)(B.animationType):(0,x.D)((null===B||void 0===B?void 0:B.animationType)??0),C=(null===B||void 0===B?void 0:B.keyFramesCount)??1,M=this.registerDataInput("duration_0",x.m,0),y=this.registerDataInput("value_0",I);this.keyFrames.push({duration:M,value:y});for(let f=1;f<C+1;f++){const M=this.registerDataInput(`duration_${f}`,x.m,f===C?B.duration:void 0),y=this.registerDataInput(`value_${f}`,I);this.keyFrames.push({duration:M,value:y})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[C].value,this.easingFunction=this.registerDataInput("easingFunction",x.b),this.animation=this.registerDataOutput("animation",x.b),this.propertyName=this.registerDataInput("propertyName",x.b,null===B||void 0===B?void 0:B.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",x.b)}_updateOutputs(B){const I=B._getGlobalContextVariable("interpolationAnimations",[]),C=this.propertyName.getValue(B),M=this.easingFunction.getValue(B),x=this._createAnimation(B,C,M);if(this.animation.setValue(x,B),Array.isArray(x))for(const y of x)I.push(y.uniqueId);else I.push(x.uniqueId);B._setGlobalContextVariable("interpolationAnimations",I)}_createAnimation(B,I,C){var M;const x=this.initialValue.richType,f=[],L=this.initialValue.getValue(B)||x.defaultValue;f.push({frame:0,value:L});const e=(null===(M=this.config)||void 0===M?void 0:M.numberOfKeyFrames)??1;for(let y=1;y<e+1;y++){var g,N;const I=null===(g=this.keyFrames[y].duration)||void 0===g?void 0:g.getValue(B);let C=null===(N=this.keyFrames[y].value)||void 0===N?void 0:N.getValue(B);y===e-1&&(C=C||x.defaultValue),void 0!==I&&C&&f.push({frame:60*I,value:C})}const R=this.customBuildAnimation.getValue(B);if(R)return R(null,null,B)(f,60,x.animationType,C);if("string"===typeof I){const B=y.c.CreateAnimation(I,x.animationType,60,C);return B.setKeys(f),[B]}return I.map((B=>{const I=y.c.CreateAnimation(B,x.animationType,60,C);return I.setKeys(f),I}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,f.h)("FlowGraphInterpolationBlock",L)}}]);