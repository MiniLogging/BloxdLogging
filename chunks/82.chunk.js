"use strict";(self.n52dyox90qa=self.n52dyox90qa||[]).push([[82],{14932:(E,t,z)=>{z.r(t),z.d(t,{FlowGraphInterpolationBlock:()=>p});var A=z(13480),X=z(13458),R=z(12342),u=z(11766);class p extends A.c{constructor(){let E=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(E),this.keyFrames=[];const t="string"===typeof(null===E||void 0===E?void 0:E.animationType)?(0,X.J)(E.animationType):(0,X.F)((null===E||void 0===E?void 0:E.animationType)??0),z=(null===E||void 0===E?void 0:E.keyFramesCount)??1,A=this.registerDataInput("duration_0",X.p,0),R=this.registerDataInput("value_0",t);this.keyFrames.push({duration:A,value:R});for(let u=1;u<z+1;u++){const A=this.registerDataInput(`duration_${u}`,X.p,u===z?E.duration:void 0),R=this.registerDataInput(`value_${u}`,t);this.keyFrames.push({duration:A,value:R})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[z].value,this.easingFunction=this.registerDataInput("easingFunction",X.c),this.animation=this.registerDataOutput("animation",X.c),this.propertyName=this.registerDataInput("propertyName",X.c,null===E||void 0===E?void 0:E.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",X.c)}_updateOutputs(E){const t=E._getGlobalContextVariable("interpolationAnimations",[]),z=this.propertyName.getValue(E),A=this.easingFunction.getValue(E),X=this._createAnimation(E,z,A);if(this.animation.setValue(X,E),Array.isArray(X))for(const R of X)t.push(R.uniqueId);else t.push(X.uniqueId);E._setGlobalContextVariable("interpolationAnimations",t)}_createAnimation(E,t,z){var A;const X=this.initialValue.richType,u=[],p=this.initialValue.getValue(E)||X.defaultValue;u.push({frame:0,value:p});const C=(null===(A=this.config)||void 0===A?void 0:A.numberOfKeyFrames)??1;for(let R=1;R<C+1;R++){var Z,H;const t=null===(Z=this.keyFrames[R].duration)||void 0===Z?void 0:Z.getValue(E);let z=null===(H=this.keyFrames[R].value)||void 0===H?void 0:H.getValue(E);R===C-1&&(z=z||X.defaultValue),void 0!==t&&z&&u.push({frame:60*t,value:z})}const h=this.customBuildAnimation.getValue(E);if(h)return h(null,null,E)(u,60,X.animationType,z);if("string"===typeof t){const E=R.c.CreateAnimation(t,X.animationType,60,z);return E.setKeys(u),[E]}return t.map((E=>{const t=R.c.CreateAnimation(E,X.animationType,60,z);return t.setKeys(u),t}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,u.f)("FlowGraphInterpolationBlock",p)}}]);