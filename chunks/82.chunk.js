"use strict";(self.rvold1i0ywi=self.rvold1i0ywi||[]).push([[82],{14432:(F,b,Q)=>{Q.r(b),Q.d(b,{FlowGraphInterpolationBlock:()=>W});var C=Q(12972),z=Q(12951),t=Q(11812),g=Q(11265);class W extends C.b{constructor(){let F=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(F),this.keyFrames=[];const b="string"===typeof(null===F||void 0===F?void 0:F.animationType)?(0,z.F)(F.animationType):(0,z.B)((null===F||void 0===F?void 0:F.animationType)??0),Q=(null===F||void 0===F?void 0:F.keyFramesCount)??1,C=this.registerDataInput("duration_0",z.m,0),t=this.registerDataInput("value_0",b);this.keyFrames.push({duration:C,value:t});for(let g=1;g<Q+1;g++){const C=this.registerDataInput(`duration_${g}`,z.m,g===Q?F.duration:void 0),t=this.registerDataInput(`value_${g}`,b);this.keyFrames.push({duration:C,value:t})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[Q].value,this.easingFunction=this.registerDataInput("easingFunction",z.b),this.animation=this.registerDataOutput("animation",z.b),this.propertyName=this.registerDataInput("propertyName",z.b,null===F||void 0===F?void 0:F.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",z.b)}_updateOutputs(F){const b=F._getGlobalContextVariable("interpolationAnimations",[]),Q=this.propertyName.getValue(F),C=this.easingFunction.getValue(F),z=this._createAnimation(F,Q,C);if(this.animation.setValue(z,F),Array.isArray(z))for(const t of z)b.push(t.uniqueId);else b.push(z.uniqueId);F._setGlobalContextVariable("interpolationAnimations",b)}_createAnimation(F,b,Q){var C;const z=this.initialValue.richType,g=[],W=this.initialValue.getValue(F)||z.defaultValue;g.push({frame:0,value:W});const Z=(null===(C=this.config)||void 0===C?void 0:C.numberOfKeyFrames)??1;for(let t=1;t<Z+1;t++){var q,G;const b=null===(q=this.keyFrames[t].duration)||void 0===q?void 0:q.getValue(F);let Q=null===(G=this.keyFrames[t].value)||void 0===G?void 0:G.getValue(F);t===Z-1&&(Q=Q||z.defaultValue),void 0!==b&&Q&&g.push({frame:60*b,value:Q})}const K=this.customBuildAnimation.getValue(F);if(K)return K(null,null,F)(g,60,z.animationType,Q);if("string"===typeof b){const F=t.b.CreateAnimation(b,z.animationType,60,Q);return F.setKeys(g),[F]}return b.map((F=>{const b=t.b.CreateAnimation(F,z.animationType,60,Q);return b.setKeys(g),b}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,g.g)("FlowGraphInterpolationBlock",W)}}]);