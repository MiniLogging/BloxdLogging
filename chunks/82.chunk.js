"use strict";(self["3gghkoft8x"]=self["3gghkoft8x"]||[]).push([[82],{15482:(y,S,I)=>{I.r(S),I.d(S,{FlowGraphInterpolationBlock:()=>d});var V=I(14058),i=I(14033),A=I(12838),B=I(12282);class d extends V.d{constructor(){let y=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(y),this.keyFrames=[];const S="string"===typeof(null===y||void 0===y?void 0:y.animationType)?(0,i.I)(y.animationType):(0,i.H)((null===y||void 0===y?void 0:y.animationType)??0),I=(null===y||void 0===y?void 0:y.keyFramesCount)??1,V=this.registerDataInput("duration_0",i.t,0),A=this.registerDataInput("value_0",S);this.keyFrames.push({duration:V,value:A});for(let B=1;B<I+1;B++){const V=this.registerDataInput(`duration_${B}`,i.t,B===I?y.duration:void 0),A=this.registerDataInput(`value_${B}`,S);this.keyFrames.push({duration:V,value:A})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[I].value,this.easingFunction=this.registerDataInput("easingFunction",i.c),this.animation=this.registerDataOutput("animation",i.c),this.propertyName=this.registerDataInput("propertyName",i.c,null===y||void 0===y?void 0:y.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",i.c)}_updateOutputs(y){const S=y._getGlobalContextVariable("interpolationAnimations",[]),I=this.propertyName.getValue(y),V=this.easingFunction.getValue(y),i=this._createAnimation(y,I,V);if(this.animation.setValue(i,y),Array.isArray(i))for(const A of i)S.push(A.uniqueId);else S.push(i.uniqueId);y._setGlobalContextVariable("interpolationAnimations",S)}_createAnimation(y,S,I){var V;const i=this.initialValue.richType,B=[],d=this.initialValue.getValue(y)||i.defaultValue;B.push({frame:0,value:d});const F=(null===(V=this.config)||void 0===V?void 0:V.numberOfKeyFrames)??1;for(let A=1;A<F+1;A++){var J,u;const S=null===(J=this.keyFrames[A].duration)||void 0===J?void 0:J.getValue(y);let I=null===(u=this.keyFrames[A].value)||void 0===u?void 0:u.getValue(y);A===F-1&&(I=I||i.defaultValue),void 0!==S&&I&&B.push({frame:60*S,value:I})}const K=this.customBuildAnimation.getValue(y);if(K)return K(null,null,y)(B,60,i.animationType,I);if("string"===typeof S){const y=A.b.CreateAnimation(S,i.animationType,60,I);return y.setKeys(B),[y]}return S.map((y=>{const S=A.b.CreateAnimation(y,i.animationType,60,I);return S.setKeys(B),S}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,B.e)("FlowGraphInterpolationBlock",d)}}]);