"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[82],{14301:(q,S,b)=>{b.r(S),b.d(S,{FlowGraphInterpolationBlock:()=>g});var z=b(12852),C=b(12839),v=b(11634),U=b(11058);class g extends z.c{constructor(){let q=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(q),this.keyFrames=[];const S="string"===typeof(null===q||void 0===q?void 0:q.animationType)?(0,C.J)(q.animationType):(0,C.I)((null===q||void 0===q?void 0:q.animationType)??0),b=(null===q||void 0===q?void 0:q.keyFramesCount)??1,z=this.registerDataInput("duration_0",C.o,0),v=this.registerDataInput("value_0",S);this.keyFrames.push({duration:z,value:v});for(let U=1;U<b+1;U++){const z=this.registerDataInput(`duration_${U}`,C.o,U===b?q.duration:void 0),v=this.registerDataInput(`value_${U}`,S);this.keyFrames.push({duration:z,value:v})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[b].value,this.easingFunction=this.registerDataInput("easingFunction",C.d),this.animation=this.registerDataOutput("animation",C.d),this.propertyName=this.registerDataInput("propertyName",C.d,null===q||void 0===q?void 0:q.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",C.d)}_updateOutputs(q){const S=q._getGlobalContextVariable("interpolationAnimations",[]),b=this.propertyName.getValue(q),z=this.easingFunction.getValue(q),C=this._createAnimation(q,b,z);if(this.animation.setValue(C,q),Array.isArray(C))for(const v of C)S.push(v.uniqueId);else S.push(C.uniqueId);q._setGlobalContextVariable("interpolationAnimations",S)}_createAnimation(q,S,b){var z;const C=this.initialValue.richType,U=[],g=this.initialValue.getValue(q)||C.defaultValue;U.push({frame:0,value:g});const r=(null===(z=this.config)||void 0===z?void 0:z.numberOfKeyFrames)??1;for(let v=1;v<r+1;v++){var I,V;const S=null===(I=this.keyFrames[v].duration)||void 0===I?void 0:I.getValue(q);let b=null===(V=this.keyFrames[v].value)||void 0===V?void 0:V.getValue(q);v===r-1&&(b=b||C.defaultValue),void 0!==S&&b&&U.push({frame:60*S,value:b})}const l=this.customBuildAnimation.getValue(q);if(l)return l(null,null,q)(U,60,C.animationType,b);if("string"===typeof S){const q=v.d.CreateAnimation(S,C.animationType,60,b);return q.setKeys(U),[q]}return S.map((q=>{const S=v.d.CreateAnimation(q,C.animationType,60,b);return S.setKeys(U),S}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,U.f)("FlowGraphInterpolationBlock",g)}}]);