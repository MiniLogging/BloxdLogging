"use strict";(self.jr1pmf6bwuf=self.jr1pmf6bwuf||[]).push([[82],{16166:(Y,c,h)=>{h.r(c),h.d(c,{FlowGraphInterpolationBlock:()=>b});var C=h(14482),E=h(14459),N=h(13395),Q=h(12825);class b extends C.b{constructor(){let Y=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(Y),this.keyFrames=[];const c="string"===typeof(null===Y||void 0===Y?void 0:Y.animationType)?(0,E.H)(Y.animationType):(0,E.G)((null===Y||void 0===Y?void 0:Y.animationType)??0),h=(null===Y||void 0===Y?void 0:Y.keyFramesCount)??1,C=this.registerDataInput("duration_0",E.n,0),N=this.registerDataInput("value_0",c);this.keyFrames.push({duration:C,value:N});for(let Q=1;Q<h+1;Q++){const C=this.registerDataInput(`duration_${Q}`,E.n,Q===h?Y.duration:void 0),N=this.registerDataInput(`value_${Q}`,c);this.keyFrames.push({duration:C,value:N})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[h].value,this.easingFunction=this.registerDataInput("easingFunction",E.c),this.animation=this.registerDataOutput("animation",E.c),this.propertyName=this.registerDataInput("propertyName",E.c,null===Y||void 0===Y?void 0:Y.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",E.c)}_updateOutputs(Y){const c=Y._getGlobalContextVariable("interpolationAnimations",[]),h=this.propertyName.getValue(Y),C=this.easingFunction.getValue(Y),E=this._createAnimation(Y,h,C);if(this.animation.setValue(E,Y),Array.isArray(E))for(const N of E)c.push(N.uniqueId);else c.push(E.uniqueId);Y._setGlobalContextVariable("interpolationAnimations",c)}_createAnimation(Y,c,h){var C;const E=this.initialValue.richType,Q=[],b=this.initialValue.getValue(Y)||E.defaultValue;Q.push({frame:0,value:b});const H=(null===(C=this.config)||void 0===C?void 0:C.numberOfKeyFrames)??1;for(let N=1;N<H+1;N++){var w,W;const c=null===(w=this.keyFrames[N].duration)||void 0===w?void 0:w.getValue(Y);let h=null===(W=this.keyFrames[N].value)||void 0===W?void 0:W.getValue(Y);N===H-1&&(h=h||E.defaultValue),void 0!==c&&h&&Q.push({frame:60*c,value:h})}const q=this.customBuildAnimation.getValue(Y);if(q)return q(null,null,Y)(Q,60,E.animationType,h);if("string"===typeof c){const Y=N.d.CreateAnimation(c,E.animationType,60,h);return Y.setKeys(Q),[Y]}return c.map((Y=>{const c=N.d.CreateAnimation(Y,E.animationType,60,h);return c.setKeys(Q),c}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,Q.e)("FlowGraphInterpolationBlock",b)}}]);