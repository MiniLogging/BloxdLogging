"use strict";(self.lfntwv94xlc=self.lfntwv94xlc||[]).push([[82],{14581:(m,S,h)=>{h.r(S),h.d(S,{FlowGraphInterpolationBlock:()=>b});var l=h(13074),M=h(13060),O=h(11838),u=h(11293);class b extends l.d{constructor(){let m=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(m),this.keyFrames=[];const S="string"===typeof(null===m||void 0===m?void 0:m.animationType)?(0,M.J)(m.animationType):(0,M.H)((null===m||void 0===m?void 0:m.animationType)??0),h=(null===m||void 0===m?void 0:m.keyFramesCount)??1,l=this.registerDataInput("duration_0",M.p,0),O=this.registerDataInput("value_0",S);this.keyFrames.push({duration:l,value:O});for(let u=1;u<h+1;u++){const l=this.registerDataInput(`duration_${u}`,M.p,u===h?m.duration:void 0),O=this.registerDataInput(`value_${u}`,S);this.keyFrames.push({duration:l,value:O})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[h].value,this.easingFunction=this.registerDataInput("easingFunction",M.b),this.animation=this.registerDataOutput("animation",M.b),this.propertyName=this.registerDataInput("propertyName",M.b,null===m||void 0===m?void 0:m.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",M.b)}_updateOutputs(m){const S=m._getGlobalContextVariable("interpolationAnimations",[]),h=this.propertyName.getValue(m),l=this.easingFunction.getValue(m),M=this._createAnimation(m,h,l);if(this.animation.setValue(M,m),Array.isArray(M))for(const O of M)S.push(O.uniqueId);else S.push(M.uniqueId);m._setGlobalContextVariable("interpolationAnimations",S)}_createAnimation(m,S,h){var l;const M=this.initialValue.richType,u=[],b=this.initialValue.getValue(m)||M.defaultValue;u.push({frame:0,value:b});const q=(null===(l=this.config)||void 0===l?void 0:l.numberOfKeyFrames)??1;for(let O=1;O<q+1;O++){var Y,V;const S=null===(Y=this.keyFrames[O].duration)||void 0===Y?void 0:Y.getValue(m);let h=null===(V=this.keyFrames[O].value)||void 0===V?void 0:V.getValue(m);O===q-1&&(h=h||M.defaultValue),void 0!==S&&h&&u.push({frame:60*S,value:h})}const I=this.customBuildAnimation.getValue(m);if(I)return I(null,null,m)(u,60,M.animationType,h);if("string"===typeof S){const m=O.e.CreateAnimation(S,M.animationType,60,h);return m.setKeys(u),[m]}return S.map((m=>{const S=O.e.CreateAnimation(m,M.animationType,60,h);return S.setKeys(u),S}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,u.e)("FlowGraphInterpolationBlock",b)}}]);