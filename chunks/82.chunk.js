"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[82],{14369:(P,f,Y)=>{Y.r(f),Y.d(f,{FlowGraphInterpolationBlock:()=>o});var C=Y(12947),q=Y(12917),m=Y(11727),L=Y(11134);class o extends C.b{constructor(){let P=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(P),this.keyFrames=[];const f="string"===typeof(null===P||void 0===P?void 0:P.animationType)?(0,q.D)(P.animationType):(0,q.A)((null===P||void 0===P?void 0:P.animationType)??0),Y=(null===P||void 0===P?void 0:P.keyFramesCount)??1,C=this.registerDataInput("duration_0",q.o,0),m=this.registerDataInput("value_0",f);this.keyFrames.push({duration:C,value:m});for(let L=1;L<Y+1;L++){const C=this.registerDataInput(`duration_${L}`,q.o,L===Y?P.duration:void 0),m=this.registerDataInput(`value_${L}`,f);this.keyFrames.push({duration:C,value:m})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[Y].value,this.easingFunction=this.registerDataInput("easingFunction",q.d),this.animation=this.registerDataOutput("animation",q.d),this.propertyName=this.registerDataInput("propertyName",q.d,null===P||void 0===P?void 0:P.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",q.d)}_updateOutputs(P){const f=P._getGlobalContextVariable("interpolationAnimations",[]),Y=this.propertyName.getValue(P),C=this.easingFunction.getValue(P),q=this._createAnimation(P,Y,C);if(this.animation.setValue(q,P),Array.isArray(q))for(const m of q)f.push(m.uniqueId);else f.push(q.uniqueId);P._setGlobalContextVariable("interpolationAnimations",f)}_createAnimation(P,f,Y){var C;const q=this.initialValue.richType,L=[],o=this.initialValue.getValue(P)||q.defaultValue;L.push({frame:0,value:o});const w=(null===(C=this.config)||void 0===C?void 0:C.numberOfKeyFrames)??1;for(let m=1;m<w+1;m++){var d,R;const f=null===(d=this.keyFrames[m].duration)||void 0===d?void 0:d.getValue(P);let Y=null===(R=this.keyFrames[m].value)||void 0===R?void 0:R.getValue(P);m===w-1&&(Y=Y||q.defaultValue),void 0!==f&&Y&&L.push({frame:60*f,value:Y})}const y=this.customBuildAnimation.getValue(P);if(y)return y(null,null,P)(L,60,q.animationType,Y);if("string"===typeof f){const P=m.b.CreateAnimation(f,q.animationType,60,Y);return P.setKeys(L),[P]}return f.map((P=>{const f=m.b.CreateAnimation(P,q.animationType,60,Y);return f.setKeys(L),f}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,L.d)("FlowGraphInterpolationBlock",o)}}]);