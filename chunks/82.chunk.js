"use strict";(self.irtrrknfyfo=self.irtrrknfyfo||[]).push([[82],{14536:(B,E,v)=>{v.r(E),v.d(E,{FlowGraphInterpolationBlock:()=>S});var z=v(13121),o=v(13102),q=v(11908),c=v(11345);class S extends z.c{constructor(){let B=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(B),this.keyFrames=[];const E="string"===typeof(null===B||void 0===B?void 0:B.animationType)?(0,o.Q)(B.animationType):(0,o.M)((null===B||void 0===B?void 0:B.animationType)??0),v=(null===B||void 0===B?void 0:B.keyFramesCount)??1,z=this.registerDataInput("duration_0",o.v,0),q=this.registerDataInput("value_0",E);this.keyFrames.push({duration:z,value:q});for(let c=1;c<v+1;c++){const z=this.registerDataInput(`duration_${c}`,o.v,c===v?B.duration:void 0),q=this.registerDataInput(`value_${c}`,E);this.keyFrames.push({duration:z,value:q})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[v].value,this.easingFunction=this.registerDataInput("easingFunction",o.c),this.animation=this.registerDataOutput("animation",o.c),this.propertyName=this.registerDataInput("propertyName",o.c,null===B||void 0===B?void 0:B.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",o.c)}_updateOutputs(B){const E=B._getGlobalContextVariable("interpolationAnimations",[]),v=this.propertyName.getValue(B),z=this.easingFunction.getValue(B),o=this._createAnimation(B,v,z);if(this.animation.setValue(o,B),Array.isArray(o))for(const q of o)E.push(q.uniqueId);else E.push(o.uniqueId);B._setGlobalContextVariable("interpolationAnimations",E)}_createAnimation(B,E,v){var z;const o=this.initialValue.richType,c=[],S=this.initialValue.getValue(B)||o.defaultValue;c.push({frame:0,value:S});const x=(null===(z=this.config)||void 0===z?void 0:z.numberOfKeyFrames)??1;for(let q=1;q<x+1;q++){var D,h;const E=null===(D=this.keyFrames[q].duration)||void 0===D?void 0:D.getValue(B);let v=null===(h=this.keyFrames[q].value)||void 0===h?void 0:h.getValue(B);q===x-1&&(v=v||o.defaultValue),void 0!==E&&v&&c.push({frame:60*E,value:v})}const y=this.customBuildAnimation.getValue(B);if(y)return y(null,null,B)(c,60,o.animationType,v);if("string"===typeof E){const B=q.c.CreateAnimation(E,o.animationType,60,v);return B.setKeys(c),[B]}return E.map((B=>{const E=q.c.CreateAnimation(B,o.animationType,60,v);return E.setKeys(c),E}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,c.f)("FlowGraphInterpolationBlock",S)}}]);