"use strict";(self["9d4d30r2sf"]=self["9d4d30r2sf"]||[]).push([[82],{15690:(o,v,V)=>{V.r(v),V.d(v,{FlowGraphInterpolationBlock:()=>U});var g=V(14259),E=V(14241),I=V(13035),Q=V(12449);class U extends g.b{constructor(){let o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(o),this.keyFrames=[];const v="string"===typeof(null===o||void 0===o?void 0:o.animationType)?(0,E.M)(o.animationType):(0,E.K)((null===o||void 0===o?void 0:o.animationType)??0),V=(null===o||void 0===o?void 0:o.keyFramesCount)??1,g=this.registerDataInput("duration_0",E.t,0),I=this.registerDataInput("value_0",v);this.keyFrames.push({duration:g,value:I});for(let Q=1;Q<V+1;Q++){const g=this.registerDataInput(`duration_${Q}`,E.t,Q===V?o.duration:void 0),I=this.registerDataInput(`value_${Q}`,v);this.keyFrames.push({duration:g,value:I})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[V].value,this.easingFunction=this.registerDataInput("easingFunction",E.e),this.animation=this.registerDataOutput("animation",E.e),this.propertyName=this.registerDataInput("propertyName",E.e,null===o||void 0===o?void 0:o.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",E.e)}_updateOutputs(o){const v=o._getGlobalContextVariable("interpolationAnimations",[]),V=this.propertyName.getValue(o),g=this.easingFunction.getValue(o),E=this._createAnimation(o,V,g);if(this.animation.setValue(E,o),Array.isArray(E))for(const I of E)v.push(I.uniqueId);else v.push(E.uniqueId);o._setGlobalContextVariable("interpolationAnimations",v)}_createAnimation(o,v,V){var g;const E=this.initialValue.richType,Q=[],U=this.initialValue.getValue(o)||E.defaultValue;Q.push({frame:0,value:U});const n=(null===(g=this.config)||void 0===g?void 0:g.numberOfKeyFrames)??1;for(let I=1;I<n+1;I++){var O,h;const v=null===(O=this.keyFrames[I].duration)||void 0===O?void 0:O.getValue(o);let V=null===(h=this.keyFrames[I].value)||void 0===h?void 0:h.getValue(o);I===n-1&&(V=V||E.defaultValue),void 0!==v&&V&&Q.push({frame:60*v,value:V})}const x=this.customBuildAnimation.getValue(o);if(x)return x(null,null,o)(Q,60,E.animationType,V);if("string"===typeof v){const o=I.b.CreateAnimation(v,E.animationType,60,V);return o.setKeys(Q),[o]}return v.map((o=>{const v=I.b.CreateAnimation(o,E.animationType,60,V);return v.setKeys(Q),v}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,Q.h)("FlowGraphInterpolationBlock",U)}}]);