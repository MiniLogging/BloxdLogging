"use strict";(self.ex92n20nlz8=self.ex92n20nlz8||[]).push([[82],{15722:(I,g,b)=>{b.r(g),b.d(g,{FlowGraphInterpolationBlock:()=>J});var e=b(14295),c=b(14282),z=b(13097),M=b(12558);class J extends e.d{constructor(){let I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(I),this.keyFrames=[];const g="string"===typeof(null===I||void 0===I?void 0:I.animationType)?(0,c.I)(I.animationType):(0,c.G)((null===I||void 0===I?void 0:I.animationType)??0),b=(null===I||void 0===I?void 0:I.keyFramesCount)??1,e=this.registerDataInput("duration_0",c.t,0),z=this.registerDataInput("value_0",g);this.keyFrames.push({duration:e,value:z});for(let M=1;M<b+1;M++){const e=this.registerDataInput(`duration_${M}`,c.t,M===b?I.duration:void 0),z=this.registerDataInput(`value_${M}`,g);this.keyFrames.push({duration:e,value:z})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[b].value,this.easingFunction=this.registerDataInput("easingFunction",c.c),this.animation=this.registerDataOutput("animation",c.c),this.propertyName=this.registerDataInput("propertyName",c.c,null===I||void 0===I?void 0:I.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",c.c)}_updateOutputs(I){const g=I._getGlobalContextVariable("interpolationAnimations",[]),b=this.propertyName.getValue(I),e=this.easingFunction.getValue(I),c=this._createAnimation(I,b,e);if(this.animation.setValue(c,I),Array.isArray(c))for(const z of c)g.push(z.uniqueId);else g.push(c.uniqueId);I._setGlobalContextVariable("interpolationAnimations",g)}_createAnimation(I,g,b){var e;const c=this.initialValue.richType,M=[],J=this.initialValue.getValue(I)||c.defaultValue;M.push({frame:0,value:J});const o=(null===(e=this.config)||void 0===e?void 0:e.numberOfKeyFrames)??1;for(let z=1;z<o+1;z++){var n,G;const g=null===(n=this.keyFrames[z].duration)||void 0===n?void 0:n.getValue(I);let b=null===(G=this.keyFrames[z].value)||void 0===G?void 0:G.getValue(I);z===o-1&&(b=b||c.defaultValue),void 0!==g&&b&&M.push({frame:60*g,value:b})}const D=this.customBuildAnimation.getValue(I);if(D)return D(null,null,I)(M,60,c.animationType,b);if("string"===typeof g){const I=z.e.CreateAnimation(g,c.animationType,60,b);return I.setKeys(M),[I]}return g.map((I=>{const g=z.e.CreateAnimation(I,c.animationType,60,b);return g.setKeys(M),g}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,M.g)("FlowGraphInterpolationBlock",J)}}]);