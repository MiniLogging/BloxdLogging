"use strict";(self.xeuzlpp225k=self.xeuzlpp225k||[]).push([[82],{14500:(k,Q,i)=>{i.r(Q),i.d(Q,{FlowGraphInterpolationBlock:()=>o});var Z=i(13084),U=i(13064),C=i(11805),B=i(11253);class o extends Z.e{constructor(){let k=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(k),this.keyFrames=[];const Q="string"===typeof(null===k||void 0===k?void 0:k.animationType)?(0,U.N)(k.animationType):(0,U.K)((null===k||void 0===k?void 0:k.animationType)??0),i=(null===k||void 0===k?void 0:k.keyFramesCount)??1,Z=this.registerDataInput("duration_0",U.o,0),C=this.registerDataInput("value_0",Q);this.keyFrames.push({duration:Z,value:C});for(let B=1;B<i+1;B++){const Z=this.registerDataInput(`duration_${B}`,U.o,B===i?k.duration:void 0),C=this.registerDataInput(`value_${B}`,Q);this.keyFrames.push({duration:Z,value:C})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[i].value,this.easingFunction=this.registerDataInput("easingFunction",U.b),this.animation=this.registerDataOutput("animation",U.b),this.propertyName=this.registerDataInput("propertyName",U.b,null===k||void 0===k?void 0:k.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",U.b)}_updateOutputs(k){const Q=k._getGlobalContextVariable("interpolationAnimations",[]),i=this.propertyName.getValue(k),Z=this.easingFunction.getValue(k),U=this._createAnimation(k,i,Z);if(this.animation.setValue(U,k),Array.isArray(U))for(const C of U)Q.push(C.uniqueId);else Q.push(U.uniqueId);k._setGlobalContextVariable("interpolationAnimations",Q)}_createAnimation(k,Q,i){var Z;const U=this.initialValue.richType,B=[],o=this.initialValue.getValue(k)||U.defaultValue;B.push({frame:0,value:o});const m=(null===(Z=this.config)||void 0===Z?void 0:Z.numberOfKeyFrames)??1;for(let C=1;C<m+1;C++){var O,J;const Q=null===(O=this.keyFrames[C].duration)||void 0===O?void 0:O.getValue(k);let i=null===(J=this.keyFrames[C].value)||void 0===J?void 0:J.getValue(k);C===m-1&&(i=i||U.defaultValue),void 0!==Q&&i&&B.push({frame:60*Q,value:i})}const G=this.customBuildAnimation.getValue(k);if(G)return G(null,null,k)(B,60,U.animationType,i);if("string"===typeof Q){const k=C.c.CreateAnimation(Q,U.animationType,60,i);return k.setKeys(B),[k]}return Q.map((k=>{const Q=C.c.CreateAnimation(k,U.animationType,60,i);return Q.setKeys(B),Q}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,B.e)("FlowGraphInterpolationBlock",o)}}]);