"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[82],{14432:(Z,x,F)=>{F.r(x),F.d(x,{FlowGraphInterpolationBlock:()=>j});var u=F(12977),G=F(12954),f=F(11745),Y=F(11136);class j extends u.e{constructor(){let Z=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(Z),this.keyFrames=[];const x="string"===typeof(null===Z||void 0===Z?void 0:Z.animationType)?(0,G.Q)(Z.animationType):(0,G.N)((null===Z||void 0===Z?void 0:Z.animationType)??0),F=(null===Z||void 0===Z?void 0:Z.keyFramesCount)??1,u=this.registerDataInput("duration_0",G.u,0),f=this.registerDataInput("value_0",x);this.keyFrames.push({duration:u,value:f});for(let Y=1;Y<F+1;Y++){const u=this.registerDataInput(`duration_${Y}`,G.u,Y===F?Z.duration:void 0),f=this.registerDataInput(`value_${Y}`,x);this.keyFrames.push({duration:u,value:f})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[F].value,this.easingFunction=this.registerDataInput("easingFunction",G.d),this.animation=this.registerDataOutput("animation",G.d),this.propertyName=this.registerDataInput("propertyName",G.d,null===Z||void 0===Z?void 0:Z.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",G.d)}_updateOutputs(Z){const x=Z._getGlobalContextVariable("interpolationAnimations",[]),F=this.propertyName.getValue(Z),u=this.easingFunction.getValue(Z),G=this._createAnimation(Z,F,u);if(this.animation.setValue(G,Z),Array.isArray(G))for(const f of G)x.push(f.uniqueId);else x.push(G.uniqueId);Z._setGlobalContextVariable("interpolationAnimations",x)}_createAnimation(Z,x,F){var u;const G=this.initialValue.richType,Y=[],j=this.initialValue.getValue(Z)||G.defaultValue;Y.push({frame:0,value:j});const d=(null===(u=this.config)||void 0===u?void 0:u.numberOfKeyFrames)??1;for(let f=1;f<d+1;f++){var t,o;const x=null===(t=this.keyFrames[f].duration)||void 0===t?void 0:t.getValue(Z);let F=null===(o=this.keyFrames[f].value)||void 0===o?void 0:o.getValue(Z);f===d-1&&(F=F||G.defaultValue),void 0!==x&&F&&Y.push({frame:60*x,value:F})}const c=this.customBuildAnimation.getValue(Z);if(c)return c(null,null,Z)(Y,60,G.animationType,F);if("string"===typeof x){const Z=f.d.CreateAnimation(x,G.animationType,60,F);return Z.setKeys(Y),[Z]}return x.map((Z=>{const x=f.d.CreateAnimation(Z,G.animationType,60,F);return x.setKeys(Y),x}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,Y.g)("FlowGraphInterpolationBlock",j)}}]);