"use strict";(self.qbp2s7qydk=self.qbp2s7qydk||[]).push([[82],{15799:(M,A,O)=>{O.r(A),O.d(A,{FlowGraphInterpolationBlock:()=>c});var S=O(14255),z=O(14238),Q=O(13499),X=O(12919);class c extends S.c{constructor(){var M,A;let O=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(O),this.keyFrames=[];const S="string"===typeof(null===O||void 0===O?void 0:O.animationType)?(0,z.P)(O.animationType):(0,z.L)(null!==(M=null===O||void 0===O?void 0:O.animationType)&&void 0!==M?M:0),Q=null!==(A=null===O||void 0===O?void 0:O.keyFramesCount)&&void 0!==A?A:1,X=this.registerDataInput("duration_0",z.t,0),c=this.registerDataInput("value_0",S);this.keyFrames.push({duration:X,value:c});for(let j=1;j<Q+1;j++){const M=this.registerDataInput("duration_".concat(j),z.t,j===Q?O.duration:void 0),A=this.registerDataInput("value_".concat(j),S);this.keyFrames.push({duration:M,value:A})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[Q].value,this.easingFunction=this.registerDataInput("easingFunction",z.b),this.animation=this.registerDataOutput("animation",z.b),this.propertyName=this.registerDataInput("propertyName",z.b,null===O||void 0===O?void 0:O.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",z.b)}_updateOutputs(M){const A=M._getGlobalContextVariable("interpolationAnimations",[]),O=this.propertyName.getValue(M),S=this.easingFunction.getValue(M),z=this._createAnimation(M,O,S);if(this.animation.setValue(z,M),Array.isArray(z))for(const Q of z)A.push(Q.uniqueId);else A.push(z.uniqueId);M._setGlobalContextVariable("interpolationAnimations",A)}_createAnimation(M,A,O){var S,z;const X=this.initialValue.richType,c=[],j=this.initialValue.getValue(M)||X.defaultValue;c.push({frame:0,value:j});const B=null!==(S=null===(z=this.config)||void 0===z?void 0:z.numberOfKeyFrames)&&void 0!==S?S:1;for(let Q=1;Q<B+1;Q++){var g,e;const A=null===(g=this.keyFrames[Q].duration)||void 0===g?void 0:g.getValue(M);let O=null===(e=this.keyFrames[Q].value)||void 0===e?void 0:e.getValue(M);Q===B-1&&(O=O||X.defaultValue),void 0!==A&&O&&c.push({frame:60*A,value:O})}const T=this.customBuildAnimation.getValue(M);if(T)return T(null,null,M)(c,60,X.animationType,O);if("string"===typeof A){const M=Q.b.CreateAnimation(A,X.animationType,60,O);return M.setKeys(c),[M]}return A.map((M=>{const A=Q.b.CreateAnimation(M,X.animationType,60,O);return A.setKeys(c),A}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,X.g)("FlowGraphInterpolationBlock",c)}}]);