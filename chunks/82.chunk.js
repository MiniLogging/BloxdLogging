"use strict";(self.isj1uwvwrek=self.isj1uwvwrek||[]).push([[82],{16045:(I,x,L)=>{L.r(x),L.d(x,{FlowGraphInterpolationBlock:()=>p});var F=L(14514),X=L(14498),G=L(13490),Y=L(12938);class p extends F.e{constructor(){let I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(I),this.keyFrames=[];const x="string"===typeof(null===I||void 0===I?void 0:I.animationType)?(0,X.S)(I.animationType):(0,X.R)((null===I||void 0===I?void 0:I.animationType)??0),L=(null===I||void 0===I?void 0:I.keyFramesCount)??1,F=this.registerDataInput("duration_0",X.x,0),G=this.registerDataInput("value_0",x);this.keyFrames.push({duration:F,value:G});for(let Y=1;Y<L+1;Y++){const F=this.registerDataInput(`duration_${Y}`,X.x,Y===L?I.duration:void 0),G=this.registerDataInput(`value_${Y}`,x);this.keyFrames.push({duration:F,value:G})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[L].value,this.easingFunction=this.registerDataInput("easingFunction",X.e),this.animation=this.registerDataOutput("animation",X.e),this.propertyName=this.registerDataInput("propertyName",X.e,null===I||void 0===I?void 0:I.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",X.e)}_updateOutputs(I){const x=I._getGlobalContextVariable("interpolationAnimations",[]),L=this.propertyName.getValue(I),F=this.easingFunction.getValue(I),X=this._createAnimation(I,L,F);if(this.animation.setValue(X,I),Array.isArray(X))for(const G of X)x.push(G.uniqueId);else x.push(X.uniqueId);I._setGlobalContextVariable("interpolationAnimations",x)}_createAnimation(I,x,L){var F;const X=this.initialValue.richType,Y=[],p=this.initialValue.getValue(I)||X.defaultValue;Y.push({frame:0,value:p});const B=(null===(F=this.config)||void 0===F?void 0:F.numberOfKeyFrames)??1;for(let G=1;G<B+1;G++){var l,W;const x=null===(l=this.keyFrames[G].duration)||void 0===l?void 0:l.getValue(I);let L=null===(W=this.keyFrames[G].value)||void 0===W?void 0:W.getValue(I);G===B-1&&(L=L||X.defaultValue),void 0!==x&&L&&Y.push({frame:60*x,value:L})}const Q=this.customBuildAnimation.getValue(I);if(Q)return Q(null,null,I)(Y,60,X.animationType,L);if("string"===typeof x){const I=G.d.CreateAnimation(x,X.animationType,60,L);return I.setKeys(Y),[I]}return x.map((I=>{const x=G.d.CreateAnimation(I,X.animationType,60,L);return x.setKeys(Y),x}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,Y.d)("FlowGraphInterpolationBlock",p)}}]);