"use strict";(self.wx5iyvo7rvn=self.wx5iyvo7rvn||[]).push([[82],{14248:(P,e,n)=>{n.r(e),n.d(e,{FlowGraphInterpolationBlock:()=>m});var H=n(12841),S=n(12819),p=n(11641),k=n(11096);class m extends H.c{constructor(){let P=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(P),this.keyFrames=[];const e="string"===typeof(null===P||void 0===P?void 0:P.animationType)?(0,S.M)(P.animationType):(0,S.K)((null===P||void 0===P?void 0:P.animationType)??0),n=(null===P||void 0===P?void 0:P.keyFramesCount)??1,H=this.registerDataInput("duration_0",S.r,0),p=this.registerDataInput("value_0",e);this.keyFrames.push({duration:H,value:p});for(let k=1;k<n+1;k++){const H=this.registerDataInput(`duration_${k}`,S.r,k===n?P.duration:void 0),p=this.registerDataInput(`value_${k}`,e);this.keyFrames.push({duration:H,value:p})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[n].value,this.easingFunction=this.registerDataInput("easingFunction",S.b),this.animation=this.registerDataOutput("animation",S.b),this.propertyName=this.registerDataInput("propertyName",S.b,null===P||void 0===P?void 0:P.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",S.b)}_updateOutputs(P){const e=P._getGlobalContextVariable("interpolationAnimations",[]),n=this.propertyName.getValue(P),H=this.easingFunction.getValue(P),S=this._createAnimation(P,n,H);if(this.animation.setValue(S,P),Array.isArray(S))for(const p of S)e.push(p.uniqueId);else e.push(S.uniqueId);P._setGlobalContextVariable("interpolationAnimations",e)}_createAnimation(P,e,n){var H;const S=this.initialValue.richType,k=[],m=this.initialValue.getValue(P)||S.defaultValue;k.push({frame:0,value:m});const t=(null===(H=this.config)||void 0===H?void 0:H.numberOfKeyFrames)??1;for(let p=1;p<t+1;p++){var C,R;const e=null===(C=this.keyFrames[p].duration)||void 0===C?void 0:C.getValue(P);let n=null===(R=this.keyFrames[p].value)||void 0===R?void 0:R.getValue(P);p===t-1&&(n=n||S.defaultValue),void 0!==e&&n&&k.push({frame:60*e,value:n})}const q=this.customBuildAnimation.getValue(P);if(q)return q(null,null,P)(k,60,S.animationType,n);if("string"===typeof e){const P=p.e.CreateAnimation(e,S.animationType,60,n);return P.setKeys(k),[P]}return e.map((P=>{const e=p.e.CreateAnimation(P,S.animationType,60,n);return e.setKeys(k),e}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,k.h)("FlowGraphInterpolationBlock",m)}}]);