"use strict";(self.hbnkweqmycf=self.hbnkweqmycf||[]).push([[82],{14807:(F,P,f)=>{f.r(P),f.d(P,{FlowGraphInterpolationBlock:()=>A});var c=f(13287),N=f(13265),q=f(12150),H=f(11587);class A extends c.c{constructor(){let F=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(F),this.keyFrames=[];const P="string"===typeof(null===F||void 0===F?void 0:F.animationType)?(0,N.F)(F.animationType):(0,N.C)((null===F||void 0===F?void 0:F.animationType)??0),f=(null===F||void 0===F?void 0:F.keyFramesCount)??1,c=this.registerDataInput("duration_0",N.o,0),q=this.registerDataInput("value_0",P);this.keyFrames.push({duration:c,value:q});for(let H=1;H<f+1;H++){const c=this.registerDataInput(`duration_${H}`,N.o,H===f?F.duration:void 0),q=this.registerDataInput(`value_${H}`,P);this.keyFrames.push({duration:c,value:q})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[f].value,this.easingFunction=this.registerDataInput("easingFunction",N.c),this.animation=this.registerDataOutput("animation",N.c),this.propertyName=this.registerDataInput("propertyName",N.c,null===F||void 0===F?void 0:F.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",N.c)}_updateOutputs(F){const P=F._getGlobalContextVariable("interpolationAnimations",[]),f=this.propertyName.getValue(F),c=this.easingFunction.getValue(F),N=this._createAnimation(F,f,c);if(this.animation.setValue(N,F),Array.isArray(N))for(const q of N)P.push(q.uniqueId);else P.push(N.uniqueId);F._setGlobalContextVariable("interpolationAnimations",P)}_createAnimation(F,P,f){var c;const N=this.initialValue.richType,H=[],A=this.initialValue.getValue(F)||N.defaultValue;H.push({frame:0,value:A});const o=(null===(c=this.config)||void 0===c?void 0:c.numberOfKeyFrames)??1;for(let q=1;q<o+1;q++){var j,i;const P=null===(j=this.keyFrames[q].duration)||void 0===j?void 0:j.getValue(F);let f=null===(i=this.keyFrames[q].value)||void 0===i?void 0:i.getValue(F);q===o-1&&(f=f||N.defaultValue),void 0!==P&&f&&H.push({frame:60*P,value:f})}const u=this.customBuildAnimation.getValue(F);if(u)return u(null,null,F)(H,60,N.animationType,f);if("string"===typeof P){const F=q.d.CreateAnimation(P,N.animationType,60,f);return F.setKeys(H),[F]}return P.map((F=>{const P=q.d.CreateAnimation(F,N.animationType,60,f);return P.setKeys(H),P}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,H.f)("FlowGraphInterpolationBlock",A)}}]);