"use strict";(self.dwifukwnts=self.dwifukwnts||[]).push([[82],{14791:(U,X,b)=>{b.r(X),b.d(X,{FlowGraphInterpolationBlock:()=>z});var F=b(13308),E=b(13281),w=b(12142),Q=b(11551);class z extends F.d{constructor(){let U=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(U),this.keyFrames=[];const X="string"===typeof(null===U||void 0===U?void 0:U.animationType)?(0,E.L)(U.animationType):(0,E.J)((null===U||void 0===U?void 0:U.animationType)??0),b=(null===U||void 0===U?void 0:U.keyFramesCount)??1,F=this.registerDataInput("duration_0",E.s,0),w=this.registerDataInput("value_0",X);this.keyFrames.push({duration:F,value:w});for(let Q=1;Q<b+1;Q++){const F=this.registerDataInput(`duration_${Q}`,E.s,Q===b?U.duration:void 0),w=this.registerDataInput(`value_${Q}`,X);this.keyFrames.push({duration:F,value:w})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[b].value,this.easingFunction=this.registerDataInput("easingFunction",E.b),this.animation=this.registerDataOutput("animation",E.b),this.propertyName=this.registerDataInput("propertyName",E.b,null===U||void 0===U?void 0:U.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",E.b)}_updateOutputs(U){const X=U._getGlobalContextVariable("interpolationAnimations",[]),b=this.propertyName.getValue(U),F=this.easingFunction.getValue(U),E=this._createAnimation(U,b,F);if(this.animation.setValue(E,U),Array.isArray(E))for(const w of E)X.push(w.uniqueId);else X.push(E.uniqueId);U._setGlobalContextVariable("interpolationAnimations",X)}_createAnimation(U,X,b){var F;const E=this.initialValue.richType,Q=[],z=this.initialValue.getValue(U)||E.defaultValue;Q.push({frame:0,value:z});const q=(null===(F=this.config)||void 0===F?void 0:F.numberOfKeyFrames)??1;for(let w=1;w<q+1;w++){var p,S;const X=null===(p=this.keyFrames[w].duration)||void 0===p?void 0:p.getValue(U);let b=null===(S=this.keyFrames[w].value)||void 0===S?void 0:S.getValue(U);w===q-1&&(b=b||E.defaultValue),void 0!==X&&b&&Q.push({frame:60*X,value:b})}const R=this.customBuildAnimation.getValue(U);if(R)return R(null,null,U)(Q,60,E.animationType,b);if("string"===typeof X){const U=w.e.CreateAnimation(X,E.animationType,60,b);return U.setKeys(Q),[U]}return X.map((U=>{const X=w.e.CreateAnimation(U,E.animationType,60,b);return X.setKeys(Q),X}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,Q.f)("FlowGraphInterpolationBlock",z)}}]);