"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[32],{13358:(n,k,T)=>{T.r(k),T.d(k,{lodPixelShaderWGSL:()=>G});var c=T(624);const K="lodPixelShader",Q="const GammaEncodePowerApprox=1.0/2.2;varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;uniform lod: f32;uniform gamma: i32;@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {fragmentOutputs.color=textureSampleLevel(textureSampler,textureSamplerSampler,fragmentInputs.vUV,uniforms.lod);if (uniforms.gamma==0) {fragmentOutputs.color=vec4f(pow(fragmentOutputs.color.rgb,vec3f(GammaEncodePowerApprox)),fragmentOutputs.color.a);}}\n";c.b.ShadersStoreWGSL[K]||(c.b.ShadersStoreWGSL[K]=Q);const G={name:K,shader:Q}}}]);