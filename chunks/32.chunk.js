"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[32],{13061:(W,F,c)=>{c.r(F),c.d(F,{lodPixelShaderWGSL:()=>w});var T=c(594);const Y="lodPixelShader",Z="const GammaEncodePowerApprox=1.0/2.2;varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;uniform lod: f32;uniform gamma: i32;@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {fragmentOutputs.color=textureSampleLevel(textureSampler,textureSamplerSampler,fragmentInputs.vUV,uniforms.lod);if (uniforms.gamma==0) {fragmentOutputs.color=vec4f(pow(fragmentOutputs.color.rgb,vec3f(GammaEncodePowerApprox)),fragmentOutputs.color.a);}}\n";T.c.ShadersStoreWGSL[Y]||(T.c.ShadersStoreWGSL[Y]=Z);const w={name:Y,shader:Z}}}]);