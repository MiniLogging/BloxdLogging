"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[32],{13388:(P,Q,O)=>{O.r(Q),O.d(Q,{lodPixelShaderWGSL:()=>m});var b=O(651);const F="lodPixelShader",g="const GammaEncodePowerApprox=1.0/2.2;varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;uniform lod: f32;uniform gamma: i32;@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {fragmentOutputs.color=textureSampleLevel(textureSampler,textureSamplerSampler,fragmentInputs.vUV,uniforms.lod);if (uniforms.gamma==0) {fragmentOutputs.color=vec4f(pow(fragmentOutputs.color.rgb,vec3f(GammaEncodePowerApprox)),fragmentOutputs.color.a);}}\n";b.d.ShadersStoreWGSL[F]||(b.d.ShadersStoreWGSL[F]=g);const m={name:F,shader:g}}}]);