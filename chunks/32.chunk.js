"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[32],{13233:(d,t,A)=>{A.r(t),A.d(t,{lodPixelShaderWGSL:()=>p});const w="lodPixelShader",N="const GammaEncodePowerApprox=1.0/2.2;varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;uniform lod: f32;uniform gamma: i32;@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {fragmentOutputs.color=textureSampleLevel(textureSampler,textureSamplerSampler,fragmentInputs.vUV,uniforms.lod);if (uniforms.gamma==0) {fragmentOutputs.color=vec4f(pow(fragmentOutputs.color.rgb,vec3f(GammaEncodePowerApprox)),fragmentOutputs.color.a);}}\n";A(10837).c.ShadersStoreWGSL[w]=N;const p={name:w,shader:N}}}]);