"use strict";(self["6xhfpmwgjr5"]=self["6xhfpmwgjr5"]||[]).push([[89],{16451:(P,a,R)=>{R.r(a),R.d(a,{FlowGraphPlayAnimationBlock:()=>j});var S=R(14567),A=R(14524),Z=R(12376),p=R(16445);class j extends S.e{constructor(P){super(P,["animationLoop","animationEnd","animationGroupLoop"]),this.config=P,this.speed=this.registerDataInput("speed",A.p),this.loop=this.registerDataInput("loop",A.d),this.from=this.registerDataInput("from",A.p,0),this.to=this.registerDataInput("to",A.p),this.currentFrame=this.registerDataOutput("currentFrame",A.p),this.currentTime=this.registerDataOutput("currentTime",A.p),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",A.c),this.animationGroup=this.registerDataInput("animationGroup",A.c,null===P||void 0===P?void 0:P.animationGroup),this.animation=this.registerDataInput("animation",A.c),this.object=this.registerDataInput("object",A.c)}_preparePendingTasks(P){const a=this.animationGroup.getValue(P),R=this.animation.getValue(P);if(!a&&!R)return this._reportError(P,"No animation or animation group provided");{const A=this.currentAnimationGroup.getValue(P);A&&A!==a&&A.dispose();let Z=a;if(R&&!Z){const a=this.object.getValue(P);if(!a)return this._reportError(P,"No target object provided");const S=Array.isArray(R)?R:[R],A=S[0].name;Z=new p.AnimationGroup("flowGraphAnimationGroup-"+A+"-"+a.name,P.configuration.ya);let j=!1;const U=P._getGlobalContextVariable("interpolationAnimations",[]);for(const P of S)Z.addTargetedAnimation(P,a),-1!==U.indexOf(P.uniqueId)&&(j=!0);j&&this._checkInterpolationDuplications(P,S,a)}const j=this.speed.getValue(P)||1,U=this.from.getValue(P)??0,Q=this.to.getValue(P)||Z.to,h=!isFinite(Q)||this.loop.getValue(P);this.currentAnimationGroup.setValue(Z,P);const l=P._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==l.indexOf(Z.uniqueId)&&Z.stop();try{Z.start(h,j,U,Q),Z.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(P))),Z.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(P))),Z.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(P))),Z.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(P))),l.push(Z.uniqueId),P._setGlobalContextVariable("currentlyRunningAnimationGroups",l)}catch(S){this._reportError(P,S)}}}_reportError(P,a){super._reportError(P,a),this.currentFrame.setValue(-1,P),this.currentTime.setValue(-1,P)}_executeOnTick(P){const a=this.currentAnimationGroup.getValue(P);var R;a&&(this.currentFrame.setValue(a.getCurrentFrame(),P),this.currentTime.setValue((null===(R=a.animatables[0])||void 0===R?void 0:R.elapsedTime)??0,P))}_execute(P){this._startPendingTasks(P)}_onAnimationGroupEnd(P){this._removeFromCurrentlyRunning(P,this.currentAnimationGroup.getValue(P)),this._resetAfterCanceled(P),this.done._activateSignal(P)}_checkInterpolationDuplications(P,a,R){const S=P._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const A of S){const S=P.assetsContext.animationGroups.find((P=>P.uniqueId===A));if(S)for(const A of S.targetedAnimations)for(const Z of a)A.animation.targetProperty===Z.targetProperty&&A.target===R&&this._stopAnimationGroup(P,S)}}_stopAnimationGroup(P,a){a.stop(!0),a.dispose(),this._removeFromCurrentlyRunning(P,a)}_removeFromCurrentlyRunning(P,a){const R=P._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),S=R.indexOf(a.uniqueId);-1!==S&&(R.splice(S,1),P._setGlobalContextVariable("currentlyRunningAnimationGroups",R))}_cancelPendingTasks(P){const a=this.currentAnimationGroup.getValue(P);a&&this._stopAnimationGroup(P,a)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,Z.d)("FlowGraphPlayAnimationBlock",j)}}]);