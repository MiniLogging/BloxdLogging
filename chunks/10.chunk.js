"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[10,11],{2524:(W,F,c)=>{var T;c.d(F,{e:()=>Y}),function(W){W[W.PointerMove=0]="PointerMove",W[W.PointerDown=1]="PointerDown",W[W.PointerUp=2]="PointerUp"}(T||(T={}));class Y{}Y.DOM_DELTA_PIXEL=0,Y.DOM_DELTA_LINE=1,Y.DOM_DELTA_PAGE=2},2516:(W,F,c)=>{c.d(F,{b:()=>T,d:()=>Z,h:()=>Y});class T{}T.KEYDOWN=1,T.KEYUP=2;class Y{constructor(W,F){this.type=W,this.event=F}}class Z extends Y{get skipOnPointerObservable(){return this.skipOnKeyboardObservable}set skipOnPointerObservable(W){this.skipOnKeyboardObservable=W}constructor(W,F){super(W,F),this.type=W,this.event=F,this.skipOnKeyboardObservable=!1}}},2508:(W,F,c)=>{c.d(F,{d:()=>Y,e:()=>w,h:()=>A});var T=c(694);class Y{}Y.POINTERDOWN=1,Y.POINTERUP=2,Y.POINTERMOVE=4,Y.POINTERWHEEL=8,Y.POINTERPICK=16,Y.POINTERTAP=32,Y.POINTERDOUBLETAP=64;class Z{constructor(W,F){this.type=W,this.event=F}}class w extends Z{constructor(W,F,c,Y){super(W,F),this.ray=null,this.originalPickingInfo=null,this.skipOnPointerObservable=!1,this.localPosition=new T.j(c,Y)}}class A extends Z{get pickInfo(){return this._pickInfo||this._generatePickInfo(),this._pickInfo}constructor(W,F,c){let T=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(W,F),this._pickInfo=c,this._inputManager=T}_generatePickInfo(){this._inputManager&&(this._pickInfo=this._inputManager._pickMove(this.event),this._inputManager._setRayOnPointerInfo(this._pickInfo,this.event),this._inputManager=null)}}},2561:(W,F,c)=>{var T=c(2320),Y=c(2343);Y.e.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(Y.e.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=T.b.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((W=>{this._texture._sphericalPolynomial=W,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(W){this._texture&&(this._texture._sphericalPolynomial=W)},enumerable:!0,configurable:!0})},2503:(W,F,c)=>{function T(W){W.push("vCameraColorCurveNeutral","vCameraColorCurvePositive","vCameraColorCurveNegative")}c.d(F,{d:()=>T})},2505:(W,F,c)=>{c.d(F,{e:()=>Z,h:()=>Y});var T=c(2503);function Y(W,F){F.EXPOSURE&&W.push("exposureLinear"),F.CONTRAST&&W.push("contrast"),F.COLORGRADING&&W.push("colorTransformSettings"),(F.VIGNETTE||F.DITHER)&&W.push("vInverseScreenSize"),F.VIGNETTE&&(W.push("vignetteSettings1"),W.push("vignetteSettings2")),F.COLORCURVES&&(0,T.d)(W),F.DITHER&&W.push("ditherIntensity")}function Z(W,F){F.COLORGRADING&&W.push("txColorTransform")}},2494:(W,F,c)=>{c.d(F,{d:()=>q});var T=c(675),Y=c(680),Z=c(511),w=c(723),A=c(721),u=c(2503);class s{constructor(){this._dirty=!0,this._tempColor=new w.c(0,0,0,0),this._globalCurve=new w.c(0,0,0,0),this._highlightsCurve=new w.c(0,0,0,0),this._midtonesCurve=new w.c(0,0,0,0),this._shadowsCurve=new w.c(0,0,0,0),this._positiveCurve=new w.c(0,0,0,0),this._negativeCurve=new w.c(0,0,0,0),this._globalHue=30,this._globalDensity=0,this._globalSaturation=0,this._globalExposure=0,this._highlightsHue=30,this._highlightsDensity=0,this._highlightsSaturation=0,this._highlightsExposure=0,this._midtonesHue=30,this._midtonesDensity=0,this._midtonesSaturation=0,this._midtonesExposure=0,this._shadowsHue=30,this._shadowsDensity=0,this._shadowsSaturation=0,this._shadowsExposure=0}get globalHue(){return this._globalHue}set globalHue(W){this._globalHue=W,this._dirty=!0}get globalDensity(){return this._globalDensity}set globalDensity(W){this._globalDensity=W,this._dirty=!0}get globalSaturation(){return this._globalSaturation}set globalSaturation(W){this._globalSaturation=W,this._dirty=!0}get globalExposure(){return this._globalExposure}set globalExposure(W){this._globalExposure=W,this._dirty=!0}get highlightsHue(){return this._highlightsHue}set highlightsHue(W){this._highlightsHue=W,this._dirty=!0}get highlightsDensity(){return this._highlightsDensity}set highlightsDensity(W){this._highlightsDensity=W,this._dirty=!0}get highlightsSaturation(){return this._highlightsSaturation}set highlightsSaturation(W){this._highlightsSaturation=W,this._dirty=!0}get highlightsExposure(){return this._highlightsExposure}set highlightsExposure(W){this._highlightsExposure=W,this._dirty=!0}get midtonesHue(){return this._midtonesHue}set midtonesHue(W){this._midtonesHue=W,this._dirty=!0}get midtonesDensity(){return this._midtonesDensity}set midtonesDensity(W){this._midtonesDensity=W,this._dirty=!0}get midtonesSaturation(){return this._midtonesSaturation}set midtonesSaturation(W){this._midtonesSaturation=W,this._dirty=!0}get midtonesExposure(){return this._midtonesExposure}set midtonesExposure(W){this._midtonesExposure=W,this._dirty=!0}get shadowsHue(){return this._shadowsHue}set shadowsHue(W){this._shadowsHue=W,this._dirty=!0}get shadowsDensity(){return this._shadowsDensity}set shadowsDensity(W){this._shadowsDensity=W,this._dirty=!0}get shadowsSaturation(){return this._shadowsSaturation}set shadowsSaturation(W){this._shadowsSaturation=W,this._dirty=!0}get shadowsExposure(){return this._shadowsExposure}set shadowsExposure(W){this._shadowsExposure=W,this._dirty=!0}getClassName(){return"ColorCurves"}static Bind(W,F){let c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"vCameraColorCurvePositive",T=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"vCameraColorCurveNeutral",Y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"vCameraColorCurveNegative";W._dirty&&(W._dirty=!1,W._getColorGradingDataToRef(W._globalHue,W._globalDensity,W._globalSaturation,W._globalExposure,W._globalCurve),W._getColorGradingDataToRef(W._highlightsHue,W._highlightsDensity,W._highlightsSaturation,W._highlightsExposure,W._tempColor),W._tempColor.multiplyToRef(W._globalCurve,W._highlightsCurve),W._getColorGradingDataToRef(W._midtonesHue,W._midtonesDensity,W._midtonesSaturation,W._midtonesExposure,W._tempColor),W._tempColor.multiplyToRef(W._globalCurve,W._midtonesCurve),W._getColorGradingDataToRef(W._shadowsHue,W._shadowsDensity,W._shadowsSaturation,W._shadowsExposure,W._tempColor),W._tempColor.multiplyToRef(W._globalCurve,W._shadowsCurve),W._highlightsCurve.subtractToRef(W._midtonesCurve,W._positiveCurve),W._midtonesCurve.subtractToRef(W._shadowsCurve,W._negativeCurve)),F&&(F.setFloat4(c,W._positiveCurve.r,W._positiveCurve.g,W._positiveCurve.b,W._positiveCurve.a),F.setFloat4(T,W._midtonesCurve.r,W._midtonesCurve.g,W._midtonesCurve.b,W._midtonesCurve.a),F.setFloat4(Y,W._negativeCurve.r,W._negativeCurve.g,W._negativeCurve.b,W._negativeCurve.a))}_getColorGradingDataToRef(W,F,c,T,Y){null!=W&&(W=s._Clamp(W,0,360),F=s._Clamp(F,-100,100),c=s._Clamp(c,-100,100),T=s._Clamp(T,-100,100),F=s._ApplyColorGradingSliderNonlinear(F),F*=.5,T=s._ApplyColorGradingSliderNonlinear(T),F<0&&(F*=-1,W=(W+180)%360),s._FromHSBToRef(W,F,50+.25*T,Y),Y.scaleToRef(2,Y),Y.a=1+.01*c)}static _ApplyColorGradingSliderNonlinear(W){W/=100;let F=Math.abs(W);return F=Math.pow(F,2),W<0&&(F*=-1),F*=100,F}static _FromHSBToRef(W,F,c,T){let Y=s._Clamp(W,0,360);const Z=s._Clamp(F/100,0,1),w=s._Clamp(c/100,0,1);if(0===Z)T.r=w,T.g=w,T.b=w;else{Y/=60;const W=Math.floor(Y),F=Y-W,c=w*(1-Z),A=w*(1-Z*F),u=w*(1-Z*(1-F));switch(W){case 0:T.r=w,T.g=u,T.b=c;break;case 1:T.r=A,T.g=w,T.b=c;break;case 2:T.r=c,T.g=w,T.b=u;break;case 3:T.r=c,T.g=A,T.b=w;break;case 4:T.r=u,T.g=c,T.b=w;break;default:T.r=w,T.g=c,T.b=A}}T.a=1}static _Clamp(W,F,c){return Math.min(Math.max(W,F),c)}clone(){return A.c.Clone((()=>new s),this)}serialize(){return A.c.Serialize(this)}static Parse(W){return A.c.Parse((()=>new s),W,null,null)}}s.PrepareUniforms=u.d,(0,T.d)([(0,Y.O)()],s.prototype,"_globalHue",void 0),(0,T.d)([(0,Y.O)()],s.prototype,"_globalDensity",void 0),(0,T.d)([(0,Y.O)()],s.prototype,"_globalSaturation",void 0),(0,T.d)([(0,Y.O)()],s.prototype,"_globalExposure",void 0),(0,T.d)([(0,Y.O)()],s.prototype,"_highlightsHue",void 0),(0,T.d)([(0,Y.O)()],s.prototype,"_highlightsDensity",void 0),(0,T.d)([(0,Y.O)()],s.prototype,"_highlightsSaturation",void 0),(0,T.d)([(0,Y.O)()],s.prototype,"_highlightsExposure",void 0),(0,T.d)([(0,Y.O)()],s.prototype,"_midtonesHue",void 0),(0,T.d)([(0,Y.O)()],s.prototype,"_midtonesDensity",void 0),(0,T.d)([(0,Y.O)()],s.prototype,"_midtonesSaturation",void 0),(0,T.d)([(0,Y.O)()],s.prototype,"_midtonesExposure",void 0),A.c._ColorCurvesParser=s.Parse;var x=c(653),j=c(2505),N=c(642);class q{constructor(){this.colorCurves=new s,this._colorCurvesEnabled=!1,this._colorGradingEnabled=!1,this._colorGradingWithGreenDepth=!0,this._colorGradingBGR=!0,this._exposure=1,this._toneMappingEnabled=!1,this._toneMappingType=q.TONEMAPPING_STANDARD,this._contrast=1,this.vignetteStretch=0,this.vignetteCenterX=0,this.vignetteCenterY=0,this.vignetteWeight=1.5,this.vignetteColor=new w.c(0,0,0,0),this.vignetteCameraFov=.5,this._vignetteBlendMode=q.VIGNETTEMODE_MULTIPLY,this._vignetteEnabled=!1,this._ditheringEnabled=!1,this._ditheringIntensity=1/255,this._skipFinalColorClamp=!1,this._applyByPostProcess=!1,this._isEnabled=!0,this.outputTextureWidth=0,this.outputTextureHeight=0,this.onUpdateParameters=new Z.b}get colorCurvesEnabled(){return this._colorCurvesEnabled}set colorCurvesEnabled(W){this._colorCurvesEnabled!==W&&(this._colorCurvesEnabled=W,this._updateParameters())}get colorGradingTexture(){return this._colorGradingTexture}set colorGradingTexture(W){this._colorGradingTexture!==W&&(this._colorGradingTexture=W,this._updateParameters())}get colorGradingEnabled(){return this._colorGradingEnabled}set colorGradingEnabled(W){this._colorGradingEnabled!==W&&(this._colorGradingEnabled=W,this._updateParameters())}get colorGradingWithGreenDepth(){return this._colorGradingWithGreenDepth}set colorGradingWithGreenDepth(W){this._colorGradingWithGreenDepth!==W&&(this._colorGradingWithGreenDepth=W,this._updateParameters())}get colorGradingBGR(){return this._colorGradingBGR}set colorGradingBGR(W){this._colorGradingBGR!==W&&(this._colorGradingBGR=W,this._updateParameters())}get exposure(){return this._exposure}set exposure(W){this._exposure!==W&&(this._exposure=W,this._updateParameters())}get toneMappingEnabled(){return this._toneMappingEnabled}set toneMappingEnabled(W){this._toneMappingEnabled!==W&&(this._toneMappingEnabled=W,this._updateParameters())}get toneMappingType(){return this._toneMappingType}set toneMappingType(W){this._toneMappingType!==W&&(this._toneMappingType=W,this._updateParameters())}get contrast(){return this._contrast}set contrast(W){this._contrast!==W&&(this._contrast=W,this._updateParameters())}get vignetteCentreY(){return this.vignetteCenterY}set vignetteCentreY(W){this.vignetteCenterY=W}get vignetteCentreX(){return this.vignetteCenterX}set vignetteCentreX(W){this.vignetteCenterX=W}get vignetteBlendMode(){return this._vignetteBlendMode}set vignetteBlendMode(W){this._vignetteBlendMode!==W&&(this._vignetteBlendMode=W,this._updateParameters())}get vignetteEnabled(){return this._vignetteEnabled}set vignetteEnabled(W){this._vignetteEnabled!==W&&(this._vignetteEnabled=W,this._updateParameters())}get ditheringEnabled(){return this._ditheringEnabled}set ditheringEnabled(W){this._ditheringEnabled!==W&&(this._ditheringEnabled=W,this._updateParameters())}get ditheringIntensity(){return this._ditheringIntensity}set ditheringIntensity(W){this._ditheringIntensity!==W&&(this._ditheringIntensity=W,this._updateParameters())}get skipFinalColorClamp(){return this._skipFinalColorClamp}set skipFinalColorClamp(W){this._skipFinalColorClamp!==W&&(this._skipFinalColorClamp=W,this._updateParameters())}get applyByPostProcess(){return this._applyByPostProcess}set applyByPostProcess(W){this._applyByPostProcess!==W&&(this._applyByPostProcess=W,this._updateParameters())}get isEnabled(){return this._isEnabled}set isEnabled(W){this._isEnabled!==W&&(this._isEnabled=W,this._updateParameters())}_updateParameters(){this.onUpdateParameters.notifyObservers(this)}getClassName(){return"ImageProcessingConfiguration"}prepareDefines(W){if((arguments.length>1&&void 0!==arguments[1]&&arguments[1])!==this.applyByPostProcess||!this._isEnabled)return W.VIGNETTE=!1,W.TONEMAPPING=0,W.CONTRAST=!1,W.EXPOSURE=!1,W.COLORCURVES=!1,W.COLORGRADING=!1,W.COLORGRADING3D=!1,W.DITHER=!1,W.IMAGEPROCESSING=!1,W.SKIPFINALCOLORCLAMP=this.skipFinalColorClamp,void(W.IMAGEPROCESSINGPOSTPROCESS=this.applyByPostProcess&&this._isEnabled);if(W.VIGNETTE=this.vignetteEnabled,W.VIGNETTEBLENDMODEMULTIPLY=this.vignetteBlendMode===q._VIGNETTEMODE_MULTIPLY,W.VIGNETTEBLENDMODEOPAQUE=!W.VIGNETTEBLENDMODEMULTIPLY,this._toneMappingEnabled)switch(this._toneMappingType){case q.TONEMAPPING_KHR_PBR_NEUTRAL:W.TONEMAPPING=3;break;case q.TONEMAPPING_ACES:W.TONEMAPPING=2;break;default:W.TONEMAPPING=1}else W.TONEMAPPING=0;W.CONTRAST=1!==this.contrast,W.EXPOSURE=1!==this.exposure,W.COLORCURVES=this.colorCurvesEnabled&&!!this.colorCurves,W.COLORGRADING=this.colorGradingEnabled&&!!this.colorGradingTexture,W.COLORGRADING?W.COLORGRADING3D=this.colorGradingTexture.is3D:W.COLORGRADING3D=!1,W.SAMPLER3DGREENDEPTH=this.colorGradingWithGreenDepth,W.SAMPLER3DBGRMAP=this.colorGradingBGR,W.DITHER=this._ditheringEnabled,W.IMAGEPROCESSINGPOSTPROCESS=this.applyByPostProcess,W.SKIPFINALCOLORCLAMP=this.skipFinalColorClamp,W.IMAGEPROCESSING=W.VIGNETTE||!!W.TONEMAPPING||W.CONTRAST||W.EXPOSURE||W.COLORCURVES||W.COLORGRADING||W.DITHER}isReady(){return!this.colorGradingEnabled||!this.colorGradingTexture||this.colorGradingTexture.isReady()}bind(W,F){if(this._colorCurvesEnabled&&this.colorCurves&&s.Bind(this.colorCurves,W),this._vignetteEnabled||this._ditheringEnabled){const c=1/(this.outputTextureWidth||W.getEngine().getRenderWidth()),T=1/(this.outputTextureHeight||W.getEngine().getRenderHeight());if(W.setFloat2("vInverseScreenSize",c,T),this._ditheringEnabled&&W.setFloat("ditherIntensity",.5*this._ditheringIntensity),this._vignetteEnabled){const Y=null!=F?F:T/c;let Z=Math.tan(.5*this.vignetteCameraFov),w=Z*Y;const A=Math.sqrt(w*Z);w=(0,x.n)(w,A,this.vignetteStretch),Z=(0,x.n)(Z,A,this.vignetteStretch),W.setFloat4("vignetteSettings1",w,Z,-w*this.vignetteCenterX,-Z*this.vignetteCenterY);const u=-2*this.vignetteWeight;W.setFloat4("vignetteSettings2",this.vignetteColor.r,this.vignetteColor.g,this.vignetteColor.b,u)}}if(W.setFloat("exposureLinear",this.exposure),W.setFloat("contrast",this.contrast),this.colorGradingTexture){W.setTexture("txColorTransform",this.colorGradingTexture);const F=this.colorGradingTexture.getSize().height;W.setFloat4("colorTransformSettings",(F-1)/F,.5/F,F,this.colorGradingTexture.level)}}clone(){return A.c.Clone((()=>new q),this)}serialize(){return A.c.Serialize(this)}static Parse(W){const F=A.c.Parse((()=>new q),W,null,null);return void 0!==W.vignetteCentreX&&(F.vignetteCenterX=W.vignetteCentreX),void 0!==W.vignetteCentreY&&(F.vignetteCenterY=W.vignetteCentreY),F}static get VIGNETTEMODE_MULTIPLY(){return this._VIGNETTEMODE_MULTIPLY}static get VIGNETTEMODE_OPAQUE(){return this._VIGNETTEMODE_OPAQUE}}q.TONEMAPPING_STANDARD=0,q.TONEMAPPING_ACES=1,q.TONEMAPPING_KHR_PBR_NEUTRAL=2,q.PrepareUniforms=j.h,q.PrepareSamplers=j.e,q._VIGNETTEMODE_MULTIPLY=0,q._VIGNETTEMODE_OPAQUE=1,(0,T.d)([(0,Y.j)()],q.prototype,"colorCurves",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"_colorCurvesEnabled",void 0),(0,T.d)([(0,Y.D)("colorGradingTexture")],q.prototype,"_colorGradingTexture",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"_colorGradingEnabled",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"_colorGradingWithGreenDepth",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"_colorGradingBGR",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"_exposure",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"_toneMappingEnabled",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"_toneMappingType",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"_contrast",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"vignetteStretch",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"vignetteCenterX",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"vignetteCenterY",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"vignetteWeight",void 0),(0,T.d)([(0,Y.l)()],q.prototype,"vignetteColor",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"vignetteCameraFov",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"_vignetteBlendMode",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"_vignetteEnabled",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"_ditheringEnabled",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"_ditheringIntensity",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"_skipFinalColorClamp",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"_applyByPostProcess",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"_isEnabled",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"outputTextureWidth",void 0),(0,T.d)([(0,Y.O)()],q.prototype,"outputTextureHeight",void 0),A.c._ImageProcessingConfigurationParser=q.Parse,(0,N.h)("BABYLON.ImageProcessingConfiguration",q)},2554:(W,F,c)=>{c.r(F),c.d(F,{Dispose:()=>N,DumpData:()=>j,DumpDataAsync:()=>x,DumpFramebuffer:()=>s,DumpTools:()=>q});var T=c(2375),Y=c(514),Z=c(712),w=c(543);let A,u=null;async function s(W,F,c,T){let Y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Z=arguments.length>5?arguments[5]:void 0,w=arguments.length>6?arguments[6]:void 0;const A=await c.readPixels(0,0,W,F);j(W,F,new Uint8Array(A.buffer),T,Y,Z,!0,void 0,w)}async function x(W,F,c){let T=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",Y=arguments.length>4?arguments[4]:void 0,Z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],w=arguments.length>6&&void 0!==arguments[6]&&arguments[6],A=arguments.length>7?arguments[7]:void 0;return await new Promise((u=>{j(W,F,c,(W=>u(W)),T,Y,Z,w,A)}))}function j(W,F,s,x){let j=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",q=arguments.length>5?arguments[5]:void 0,y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],e=arguments.length>8?arguments[8]:void 0;(async function(){return u||(u=new Promise(((W,F)=>{let Y,Z=null;const u={Rk:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(c.bind(c,2395)).then((s=>{let{ThinEngine:x}=s;const j=w.e.Instances.length;try{Y=new OffscreenCanvas(100,100),Z=new x(Y,!1,u)}catch(i){var q;j<w.e.Instances.length&&(null===(q=w.e.Instances.pop())||void 0===q||q.dispose()),Y=document.createElement("canvas"),Z=new x(Y,!1,u)}w.e.Instances.pop(),w.e.OnEnginesDisposedObservable.add((W=>{Z&&W!==Z&&!Z.u&&0===w.e.Instances.length&&N()})),Z.getCaps().parallelShaderCompile=void 0;const y=new T.e(Z);c.e(35).then(c.bind(c,13083)).then((c=>{let{passPixelShader:w}=c;if(!Z)return void F("Engine is not defined");const u=new T.h({Ki:Z,name:w.name,fragmentShader:w.shader,samplerNames:["textureSampler"]});A={canvas:Y,Ki:Z,renderer:y,wrapper:u},W(A)}))})).catch(F)}))),await u})().then((c=>{if(c.Ki.setSize(W,F,!0),s instanceof Float32Array){const W=new Uint8Array(s.length);let F=s.length;for(;F--;){const c=s[F];W[F]=Math.round(255*(0,Z.c)(c))}s=W}const T=c.Ki.createRawTexture(s,W,F,5,!1,!y,1);c.renderer.setViewport(),c.renderer.applyEffectWrapper(c.wrapper),c.wrapper.effect._bindTexture("textureSampler",T),c.renderer.draw(),i?Y.d.ToBlob(c.canvas,(W=>{const F=new FileReader;F.onload=W=>{const F=W.target.result;x&&x(F)},F.readAsArrayBuffer(W)}),j,e):Y.d.EncodeScreenshotCanvasData(c.canvas,x,j,q,e),T.dispose()}))}function N(){var W;A?(A.wrapper.dispose(),A.renderer.dispose(),A.Ki.dispose()):null===(W=u)||void 0===W||W.then((W=>{W.wrapper.dispose(),W.renderer.dispose(),W.Ki.dispose()}));u=null,A=null}const q={DumpData:j,DumpDataAsync:x,DumpFramebuffer:s,Dispose:N};Y.d.DumpData=j,Y.d.DumpDataAsync=x,Y.d.DumpFramebuffer=s},2477:(W,F,c)=>{c.d(F,{e:()=>y,i:()=>E,m:()=>v,n:()=>C});var T=c(514),Y=c(694),Z=c(712),w=c(2297),A=c(613),u=c(2343),s=(c(2486),c(2366)),x=c(520);c(2549),c(2554),c(2561);const j="image/png",N=2,q=[134,22,135,150,246,214,150,54];function y(W){const F=new DataView(W.buffer,W.byteOffset,W.byteLength);let c=0;for(let w=0;w<q.length;w++)if(F.getUint8(c++)!==q[w])return x.e.Error("Not a babylon environment map"),null;let T="",Y=0;for(;Y=F.getUint8(c++);)T+=String.fromCharCode(Y);let Z=JSON.parse(T);return Z=i(Z),Z.binaryDataPosition=c,Z.dj&&(Z.dj.lodGenerationScale=Z.dj.lodGenerationScale||.8),Z}function i(W){if(W.version>N)throw new Error(`Unsupported babylon environment map version "${W.version}". Latest supported version is "${N}".`);return 2===W.version?W:W={...W,version:2,imageType:j}}function e(W,F){const c=(F=i(F)).dj;let T=Math.log2(F.width);if(T=Math.round(T)+1,c.mipmaps.length!==6*T)throw new Error(`Unsupported specular mipmaps number "${c.mipmaps.length}"`);const Y=new Array(T);for(let Z=0;Z<T;Z++){Y[Z]=new Array(6);for(let T=0;T<6;T++){const w=c.mipmaps[6*Z+T];Y[Z][T]=new Uint8Array(W.buffer,W.byteOffset+F.binaryDataPosition+w.position,w.length)}}return Y}function I(W,F){var c;F=i(F);const T=new Array(6),Y=null===(c=F.irradiance)||void 0===c?void 0:c.irradianceTexture;if(Y){if(6!==Y.faces.length)throw new Error(`Incorrect irradiance texture faces number "${Y.faces.length}"`);for(let c=0;c<6;c++){const Z=Y.faces[c];T[c]=new Uint8Array(W.buffer,W.byteOffset+F.binaryDataPosition+Z.position,Z.length)}}return T}function E(W,F,c){var T;const Z=(c=i(c)).dj;if(!Z)return Promise.resolve([]);W._lodGenerationScale=Z.lodGenerationScale;const w=[],A=e(F,c);w.push(z(W,A,c.imageType));const u=null===(T=c.irradiance)||void 0===T?void 0:T.irradianceTexture;if(u){var s,x;const T=I(F,c);let Z=null;null!==(s=c.irradiance)&&void 0!==s&&null!==(x=s.irradianceTexture)&&void 0!==x&&x.dominantDirection&&(Z=Y.l.mi(c.irradiance.irradianceTexture.dominantDirection)),w.push(G(W,T,u.size,c.imageType,Z))}return Promise.all(w)}async function O(W,F,c,T,Y,Z,w,A,u,s,x){return await new Promise(((j,N)=>{if(c){const c=F.createTexture(null,!0,!0,null,1,null,(W=>{N(W)}),W);null===T||void 0===T||T.onEffectCreatedObservable.addOnce((A=>{A.executeWhenCompiled((()=>{T.externalTextureSamplerBinding=!0,T.onApply=T=>{T._bindTexture("textureSampler",c),T.setFloat2("scale",1,F._features.needsInvertingBitmap&&W instanceof ImageBitmap?-1:1)},F.scenes.length&&(F.scenes[0].postProcessManager.directRender([T],s,!0,Z,w),F.restoreDefaultFramebuffer(),c.dispose(),URL.revokeObjectURL(Y),j())}))}))}else{if(F._uploadImageToTexture(x,W,Z,w),A){const c=u[w];c&&F._uploadImageToTexture(c._texture,W,Z,0)}j()}}))}async function z(W,F){let c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:j;const T=W.getEngine();W.format=5,W.type=0,W.generateMipMaps=!0,W._cachedAnisotropicFilteringLevel=null,T.updateTextureSamplingMode(3,W),await D(W,F,!0,c),W.isReady=!0}async function G(W,F,c){let T=arguments.length>3&&void 0!==arguments[3]?arguments[3]:j,Y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const Z=W.getEngine(),w=new A.d(Z,5),s=new u.e(Z,w);W._irradianceTexture=s,s._dominantDirection=Y,w.isCube=!0,w.format=5,w.type=0,w.generateMipMaps=!0,w._cachedAnisotropicFilteringLevel=null,w.generateMipMaps=!0,w.width=c,w.height=c,Z.updateTextureSamplingMode(3,w),await D(w,[F],!1,T),Z.generateMipMapsForCubemap(w),w.isReady=!0}async function D(W,F,Y){let w=arguments.length>3&&void 0!==arguments[3]?arguments[3]:j;if(!T.d.IsExponentOfTwo(W.width))throw new Error("Texture size must be a power of two");const x=(0,Z.l)(W.width)+1,N=W.getEngine();let q=!1,y=!1,i=null,e=null,I=null;const E=N.getCaps();E.textureLOD?N._features.supportRenderAndCopyToLodForFloatTextures?E.textureHalfFloatRender&&E.textureHalfFloatLinearFiltering?(q=!0,W.type=2):E.textureFloatRender&&E.textureFloatLinearFiltering&&(q=!0,W.type=1):q=!1:(q=!1,y=Y);let z=0;if(q)N.isWebGPU?(z=1,await c.e(26).then(c.bind(c,13101))):await c.e(24).then(c.bind(c,13108)),i=new s.e("rgbdDecode","rgbdDecode",null,null,1,null,3,N,!1,void 0,W.type,void 0,null,!1,void 0,z),W._isRGBD=!1,W.invertY=!1,e=N.createRenderTargetCubeTexture(W.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:W.type,format:5});else if(W._isRGBD=!0,W.invertY=!0,y){const F=3;I={};const c=W._lodGenerationScale,T=W._lodGenerationOffset;for(let Y=0;Y<F;Y++){const Z=(x-1)*c+T,w=T+(Z-T)*(1-Y/(F-1)),s=Math.round(Math.min(Math.max(w,0),Z)),j=new A.d(N,2);j.isCube=!0,j.invertY=!0,j.generateMipMaps=!1,N.updateTextureSamplingMode(2,j);const q=new u.e(null);switch(q._isCube=!0,q._texture=j,I[s]=q,Y){case 0:W._lodTextureLow=q;break;case 1:W._lodTextureMid=q;break;case 2:W._lodTextureHigh=q}}}const G=[];for(let c=0;c<F.length;c++)for(let T=0;T<6;T++){const Y=F[c][T],Z=new Blob([Y],{type:w}),A=URL.createObjectURL(Z);let u;if(N._features.forceBitmapOverHTMLImageElement)u=N.createImageBitmap(Z,{premultiplyAlpha:"none"}).then((async F=>await O(F,N,q,i,A,T,c,y,I,e,W)));else{const F=new Image;F.src=A,u=new Promise(((Y,Z)=>{F.onload=()=>{O(F,N,q,i,A,T,c,y,I,e,W).then((()=>Y())).catch((W=>{Z(W)}))},F.onerror=W=>{Z(W)}}))}G.push(u)}if(await Promise.all(G),F.length<x){let c;const T=Math.pow(2,x-1-F.length),Y=T*T*4;switch(W.type){case 0:c=new Uint8Array(Y);break;case 2:c=new Uint16Array(Y);break;case 1:c=new Float32Array(Y)}for(let Z=F.length;Z<x;Z++)for(let F=0;F<6;F++){var D;N._uploadArrayBufferViewToTexture((null===(D=e)||void 0===D?void 0:D.texture)||W,c,F,Z)}}if(e){const F=W._irradianceTexture;W._irradianceTexture=null,N._releaseTexture(W),e._swapAndDie(W),W._irradianceTexture=F}i&&i.dispose(),y&&(W._lodTextureHigh&&W._lodTextureHigh._texture&&(W._lodTextureHigh._texture.isReady=!0),W._lodTextureMid&&W._lodTextureMid._texture&&(W._lodTextureMid._texture.isReady=!0),W._lodTextureLow&&W._lodTextureLow._texture&&(W._lodTextureLow._texture.isReady=!0))}function v(W,F){const c=(F=i(F)).irradiance;if(!c)return;const T=new w.e;Y.l.FromArrayToRef(c.x,0,T.x),Y.l.FromArrayToRef(c.y,0,T.y),Y.l.FromArrayToRef(c.z,0,T.z),Y.l.FromArrayToRef(c.xx,0,T.xx),Y.l.FromArrayToRef(c.yy,0,T.yy),Y.l.FromArrayToRef(c.zz,0,T.zz),Y.l.FromArrayToRef(c.yz,0,T.yz),Y.l.FromArrayToRef(c.zx,0,T.zx),Y.l.FromArrayToRef(c.xy,0,T.xy),W._sphericalPolynomial=T}function C(W,F,c,T,Y){const Z=z(W.getEngine().createRawCubeTexture(null,W.width,W.format,W.type,W.generateMipMaps,W.invertY,W.samplingMode,W._compression),F).then((()=>W));return W.onRebuildCallback=W=>({proxy:Z,isReady:!0,isAsync:!0}),W._source=13,W._bufferViewArrayArray=F,W._lodGenerationScale=T,W._lodGenerationOffset=Y,W._sphericalPolynomial=c,z(W,F).then((()=>(W.isReady=!0,W)))}},2549:(W,F,c)=>{c.d(F,{b:()=>Z});var T=c(2366),Y=c(2328);class Z{static ExpandRGBDTexture(W){const F=W._texture;if(!F||!W.isRGBD)return;const Y=F.getEngine(),Z=Y.getCaps(),w=F.isReady;let A=!1;Z.textureHalfFloatRender&&Z.textureHalfFloatLinearFiltering?(A=!0,F.type=2):Z.textureFloatRender&&Z.textureFloatLinearFiltering&&(A=!0,F.type=1),A&&(F.isReady=!1,F._isRGBD=!1,F.invertY=!1);const u=async()=>{const Z=Y.isWebGPU,w=Z?1:0;F.isReady=!1,Z?await c.e(26).then(c.bind(c,13101)):await c.e(24).then(c.bind(c,13108));const A=new T.e("rgbdDecode","rgbdDecode",null,null,1,null,3,Y,!1,void 0,F.type,void 0,null,!1,void 0,w);A.externalTextureSamplerBinding=!0;const u=Y.createRenderTargetTexture(F.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:F.samplingMode,type:F.type,format:5});A.onEffectCreatedObservable.addOnce((c=>{c.executeWhenCompiled((()=>{A.onApply=W=>{W._bindTexture("textureSampler",F),W.setFloat2("scale",1,1)},W.va().postProcessManager.directRender([A],u,!0),Y.restoreDefaultFramebuffer(),Y._releaseTexture(F),A&&A.dispose(),u._swapAndDie(F),F.isReady=!0}))}))};A&&(w?u():W.onLoadObservable.addOnce(u))}static async EncodeTextureToRGBD(W,F){let T=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return F.getEngine().isWebGPU?await c.e(27).then(c.bind(c,13112)):await c.e(25).then(c.bind(c,13110)),await(0,Y.e)("rgbdEncode",W,F,T,1,5)}}},2541:(W,F,c)=>{c.d(F,{d:()=>T});class T{static get UniqueId(){const W=this._UniqueIdCounter;return this._UniqueIdCounter++,W}}T._UniqueIdCounter=1},2533:(W,F,c)=>{c.d(F,{b:()=>T});class T{}T._IsPickingAvailable=!1},2486:(W,F,c)=>{c.d(F,{b:()=>WW});var T=c(514),Y=c(530),Z=c(511),w=c(688);class A{constructor(){this._count=0,this._data={}}p(W){this.clear(),W.forEach(((W,F)=>this.add(W,F)))}get(W){const F=this._data[W];if(void 0!==F)return F}getOrAddWithFactory(W,F){let c=this.get(W);return void 0!==c||(c=F(W),c&&this.add(W,c)),c}getOrAdd(W,F){const c=this.get(W);return void 0!==c?c:(this.add(W,F),F)}contains(W){return void 0!==this._data[W]}add(W,F){return void 0===this._data[W]&&(this._data[W]=F,++this._count,!0)}set(W,F){return void 0!==this._data[W]&&(this._data[W]=F,!0)}getAndRemove(W){const F=this.get(W);return void 0!==F?(delete this._data[W],--this._count,F):null}remove(W){return!!this.contains(W)&&(delete this._data[W],--this._count,!0)}clear(){this._data={},this._count=0}get count(){return this._count}forEach(W){for(const F in this._data){W(F,this._data[F])}}first(W){for(const F in this._data){const c=W(F,this._data[F]);if(c)return c}return null}}var u=c(656),s=c(694),x=c(2494),j=c(835),N=c(833);class q{constructor(W,F,c,T,Y,Z){this.source=W,this.pointerX=F,this.pointerY=c,this.meshUnderPointer=T,this.sourceEvent=Y,this.additionalData=Z}static CreateNew(W,F,c){const T=W.va();return new q(W,T.pointerX,T.pointerY,T.meshUnderPointer||W,F,c)}static CreateNewFromSprite(W,F,c,T){return new q(W,F.pointerX,F.pointerY,F.meshUnderPointer,c,T)}static CreateNewFromScene(W,F){return new q(null,W.pointerX,W.pointerY,W.meshUnderPointer,F)}static CreateNewFromPrimitive(W,F,c,T){return new q(W,F.x,F.y,null,c,T)}}var y=c(2351),i=c(2359),e=c(876),I=c(517),E=c(543),O=c(533),z=c(2508);class G{constructor(){this.hoverCursor="",this.actions=[],this.isRecursive=!1,this.disposeWhenUnowned=!0}static get HasTriggers(){for(const W in G.Triggers)if(Object.prototype.hasOwnProperty.call(G.Triggers,W))return!0;return!1}static get HasPickTriggers(){for(const W in G.Triggers)if(Object.prototype.hasOwnProperty.call(G.Triggers,W)){const F=parseInt(W);if(F>=1&&F<=7)return!0}return!1}static HasSpecificTrigger(W){for(const F in G.Triggers)if(Object.prototype.hasOwnProperty.call(G.Triggers,F)){if(parseInt(F)===W)return!0}return!1}}G.Triggers={};var D,v,C,n,X,g,S,U=c(2516);!function(W){W[W.Generic=0]="Generic",W[W.Keyboard=1]="Keyboard",W[W.Mouse=2]="Mouse",W[W.Touch=3]="Touch",W[W.DualShock=4]="DualShock",W[W.Xbox=5]="Xbox",W[W.Switch=6]="Switch",W[W.DualSense=7]="DualSense"}(D||(D={})),function(W){W[W.Horizontal=0]="Horizontal",W[W.Vertical=1]="Vertical",W[W.LeftClick=2]="LeftClick",W[W.MiddleClick=3]="MiddleClick",W[W.RightClick=4]="RightClick",W[W.BrowserBack=5]="BrowserBack",W[W.BrowserForward=6]="BrowserForward",W[W.MouseWheelX=7]="MouseWheelX",W[W.MouseWheelY=8]="MouseWheelY",W[W.MouseWheelZ=9]="MouseWheelZ",W[W.Move=12]="Move"}(v||(v={})),function(W){W[W.Horizontal=0]="Horizontal",W[W.Vertical=1]="Vertical",W[W.LeftClick=2]="LeftClick",W[W.MiddleClick=3]="MiddleClick",W[W.RightClick=4]="RightClick",W[W.BrowserBack=5]="BrowserBack",W[W.BrowserForward=6]="BrowserForward",W[W.MouseWheelX=7]="MouseWheelX",W[W.MouseWheelY=8]="MouseWheelY",W[W.MouseWheelZ=9]="MouseWheelZ",W[W.DeltaHorizontal=10]="DeltaHorizontal",W[W.DeltaVertical=11]="DeltaVertical"}(C||(C={})),function(W){W[W.Cross=0]="Cross",W[W.Circle=1]="Circle",W[W.Square=2]="Square",W[W.Triangle=3]="Triangle",W[W.L1=4]="L1",W[W.R1=5]="R1",W[W.L2=6]="L2",W[W.R2=7]="R2",W[W.Share=8]="Share",W[W.Options=9]="Options",W[W.L3=10]="L3",W[W.R3=11]="R3",W[W.DPadUp=12]="DPadUp",W[W.DPadDown=13]="DPadDown",W[W.DPadLeft=14]="DPadLeft",W[W.DPadRight=15]="DPadRight",W[W.Home=16]="Home",W[W.TouchPad=17]="TouchPad",W[W.LStickXAxis=18]="LStickXAxis",W[W.LStickYAxis=19]="LStickYAxis",W[W.RStickXAxis=20]="RStickXAxis",W[W.RStickYAxis=21]="RStickYAxis"}(n||(n={})),function(W){W[W.Cross=0]="Cross",W[W.Circle=1]="Circle",W[W.Square=2]="Square",W[W.Triangle=3]="Triangle",W[W.L1=4]="L1",W[W.R1=5]="R1",W[W.L2=6]="L2",W[W.R2=7]="R2",W[W.Create=8]="Create",W[W.Options=9]="Options",W[W.L3=10]="L3",W[W.R3=11]="R3",W[W.DPadUp=12]="DPadUp",W[W.DPadDown=13]="DPadDown",W[W.DPadLeft=14]="DPadLeft",W[W.DPadRight=15]="DPadRight",W[W.Home=16]="Home",W[W.TouchPad=17]="TouchPad",W[W.LStickXAxis=18]="LStickXAxis",W[W.LStickYAxis=19]="LStickYAxis",W[W.RStickXAxis=20]="RStickXAxis",W[W.RStickYAxis=21]="RStickYAxis"}(X||(X={})),function(W){W[W.A=0]="A",W[W.B=1]="B",W[W.X=2]="X",W[W.Y=3]="Y",W[W.LB=4]="LB",W[W.RB=5]="RB",W[W.LT=6]="LT",W[W.RT=7]="RT",W[W.Back=8]="Back",W[W.Start=9]="Start",W[W.LS=10]="LS",W[W.RS=11]="RS",W[W.DPadUp=12]="DPadUp",W[W.DPadDown=13]="DPadDown",W[W.DPadLeft=14]="DPadLeft",W[W.DPadRight=15]="DPadRight",W[W.Home=16]="Home",W[W.LStickXAxis=17]="LStickXAxis",W[W.LStickYAxis=18]="LStickYAxis",W[W.RStickXAxis=19]="RStickXAxis",W[W.RStickYAxis=20]="RStickYAxis"}(g||(g={})),function(W){W[W.B=0]="B",W[W.A=1]="A",W[W.Y=2]="Y",W[W.X=3]="X",W[W.L=4]="L",W[W.R=5]="R",W[W.ZL=6]="ZL",W[W.ZR=7]="ZR",W[W.Minus=8]="Minus",W[W.Plus=9]="Plus",W[W.LS=10]="LS",W[W.RS=11]="RS",W[W.DPadUp=12]="DPadUp",W[W.DPadDown=13]="DPadDown",W[W.DPadLeft=14]="DPadLeft",W[W.DPadRight=15]="DPadRight",W[W.Home=16]="Home",W[W.Capture=17]="Capture",W[W.LStickXAxis=18]="LStickXAxis",W[W.LStickYAxis=19]="LStickYAxis",W[W.RStickXAxis=20]="RStickXAxis",W[W.RStickYAxis=21]="RStickYAxis"}(S||(S={}));var o=c(2524);class K{static CreateDeviceEvent(W,F,c,T,Y,Z,w){switch(W){case D.Keyboard:return this._CreateKeyboardEvent(c,T,Y,Z);case D.Mouse:if(c===v.MouseWheelX||c===v.MouseWheelY||c===v.MouseWheelZ)return this._CreateWheelEvent(W,F,c,T,Y,Z);case D.Touch:return this._CreatePointerEvent(W,F,c,T,Y,Z,w);default:throw`Unable to generate event for device ${D[W]}`}}static _CreatePointerEvent(W,F,c,T,Y,Z,w){const A=this._CreateMouseEvent(W,F,c,T,Y,Z);W===D.Mouse?(A.deviceType=D.Mouse,A.pointerId=1,A.pointerType="mouse"):(A.deviceType=D.Touch,A.pointerId=w??F,A.pointerType="touch");let u=0;return u+=Y.pollInput(W,F,v.LeftClick),u+=2*Y.pollInput(W,F,v.RightClick),u+=4*Y.pollInput(W,F,v.MiddleClick),A.buttons=u,c===v.Move?A.type="pointermove":c>=v.LeftClick&&c<=v.RightClick&&(A.type=1===T?"pointerdown":"pointerup",A.button=c-2),A}static _CreateWheelEvent(W,F,c,T,Y,Z){const w=this._CreateMouseEvent(W,F,c,T,Y,Z);switch(w.pointerId=1,w.type="wheel",w.deltaMode=o.e.DOM_DELTA_PIXEL,w.deltaX=0,w.deltaY=0,w.deltaZ=0,c){case v.MouseWheelX:w.deltaX=T;break;case v.MouseWheelY:w.deltaY=T;break;case v.MouseWheelZ:w.deltaZ=T}return w}static _CreateMouseEvent(W,F,c,T,Y,Z){const w=this._CreateEvent(Z),A=Y.pollInput(W,F,v.Horizontal),u=Y.pollInput(W,F,v.Vertical);return Z?(w.movementX=0,w.movementY=0,w.offsetX=w.movementX-Z.getBoundingClientRect().x,w.offsetY=w.movementY-Z.getBoundingClientRect().y):(w.movementX=Y.pollInput(W,F,10),w.movementY=Y.pollInput(W,F,11),w.offsetX=0,w.offsetY=0),this._CheckNonCharacterKeys(w,Y),w.clientX=A,w.clientY=u,w.x=A,w.y=u,w.deviceType=W,w.deviceSlot=F,w.inputIndex=c,w}static _CreateKeyboardEvent(W,F,c,T){const Y=this._CreateEvent(T);return this._CheckNonCharacterKeys(Y,c),Y.deviceType=D.Keyboard,Y.deviceSlot=0,Y.inputIndex=W,Y.type=1===F?"keydown":"keyup",Y.key=String.fromCharCode(W),Y.keyCode=W,Y}static _CheckNonCharacterKeys(W,F){const c=F.isDeviceAvailable(D.Keyboard),T=c&&1===F.pollInput(D.Keyboard,0,18),Y=c&&1===F.pollInput(D.Keyboard,0,17),Z=c&&(1===F.pollInput(D.Keyboard,0,91)||1===F.pollInput(D.Keyboard,0,92)||1===F.pollInput(D.Keyboard,0,93)),w=c&&1===F.pollInput(D.Keyboard,0,16);W.altKey=T,W.ctrlKey=Y,W.metaKey=Z,W.shiftKey=w}static _CreateEvent(W){const F={preventDefault:()=>{}};return F.target=W,F}}class V{constructor(W,F,c){this._nativeInput=_native.DeviceInputSystem?new _native.DeviceInputSystem(W,F,((W,F,T,Y)=>{const Z=K.CreateDeviceEvent(W,F,T,Y,this);c(W,F,Z)})):this._createDummyNativeInput()}pollInput(W,F,c){return this._nativeInput.pollInput(W,F,c)}isDeviceAvailable(W){return W===D.Mouse||W===D.Touch}dispose(){this._nativeInput.dispose()}_createDummyNativeInput(){return{pollInput:()=>0,isDeviceAvailable:()=>!1,dispose:()=>{}}}}const d=Object.keys(v).length/2;class L{constructor(W,F,c,Y){this._inputs=[],this._keyboardActive=!1,this._pointerActive=!1,this._usingSafari=T.d.IsSafari(),this._usingMacOs=(0,I.k)()&&/(Mac|iPhone|iPod|iPad)/i.test(navigator.platform),this._keyboardDownEvent=W=>{},this._keyboardUpEvent=W=>{},this._keyboardBlurEvent=W=>{},this._pointerMoveEvent=W=>{},this._pointerDownEvent=W=>{},this._pointerUpEvent=W=>{},this._pointerCancelEvent=W=>{},this._pointerCancelTouch=W=>{},this._pointerLeaveEvent=W=>{},this._pointerWheelEvent=W=>{},this._pointerBlurEvent=W=>{},this._pointerMacOsChromeOutEvent=W=>{},this._eventsAttached=!1,this._mouseId=-1,this._isUsingFirefox=(0,I.k)()&&navigator.userAgent&&-1!==navigator.userAgent.indexOf("Firefox"),this._isUsingChromium=(0,I.k)()&&navigator.userAgent&&-1!==navigator.userAgent.indexOf("Chrome"),this._maxTouchPoints=0,this._pointerInputClearObserver=null,this._gamepadConnectedEvent=W=>{},this._gamepadDisconnectedEvent=W=>{},this._eventPrefix=T.d.GetPointerPrefix(W),this._engine=W,this._onDeviceConnected=F,this._onDeviceDisconnected=c,this._onInputChanged=Y,this._mouseId=this._isUsingFirefox?0:1,this._enableEvents(),this._usingMacOs&&(this._metaKeys=[]),this._engine._onEngineViewChanged||(this._engine._onEngineViewChanged=()=>{this._enableEvents()})}pollInput(W,F,c){const Y=this._inputs[W][F];if(!Y)throw`Unable to find device ${D[W]}`;W>=D.DualShock&&W<=D.DualSense&&this._updateDevice(W,F,c);const Z=Y[c];if(void 0===Z)throw`Unable to find input ${c} for device ${D[W]} in slot ${F}`;return c===v.Move&&T.d.Warn("Unable to provide information for PointerInput.Move.  Try using PointerInput.Horizontal or PointerInput.Vertical for move data."),Z}isDeviceAvailable(W){return void 0!==this._inputs[W]}dispose(){this._onDeviceConnected=()=>{},this._onDeviceDisconnected=()=>{},this._onInputChanged=()=>{},delete this._engine._onEngineViewChanged,this._elementToAttachTo&&this._disableEvents()}_enableEvents(){const W=null===this||void 0===this?void 0:this._engine.getInputElement();if(W&&(!this._eventsAttached||this._elementToAttachTo!==W)){if(this._disableEvents(),this._inputs)for(const W of this._inputs)if(W)for(const F in W){const c=W[+F];if(c)for(let W=0;W<c.length;W++)c[W]=0}this._elementToAttachTo=W,this._elementToAttachTo.tabIndex=-1!==this._elementToAttachTo.tabIndex?this._elementToAttachTo.tabIndex:this._engine.canvasTabIndex,this._handleKeyActions(),this._handlePointerActions(),this._handleGamepadActions(),this._eventsAttached=!0,this._checkForConnectedDevices()}}_disableEvents(){this._elementToAttachTo&&(this._elementToAttachTo.removeEventListener("blur",this._keyboardBlurEvent),this._elementToAttachTo.removeEventListener("blur",this._pointerBlurEvent),this._elementToAttachTo.removeEventListener("keydown",this._keyboardDownEvent),this._elementToAttachTo.removeEventListener("keyup",this._keyboardUpEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"move",this._pointerMoveEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"down",this._pointerDownEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"up",this._pointerUpEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"cancel",this._pointerCancelEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"leave",this._pointerLeaveEvent),this._elementToAttachTo.removeEventListener(this._wheelEventName,this._pointerWheelEvent),this._usingMacOs&&this._isUsingChromium&&this._elementToAttachTo.removeEventListener("lostpointercapture",this._pointerMacOsChromeOutEvent),window.removeEventListener("gamepadconnected",this._gamepadConnectedEvent),window.removeEventListener("gamepaddisconnected",this._gamepadDisconnectedEvent)),this._pointerInputClearObserver&&this._engine.onEndFrameObservable.remove(this._pointerInputClearObserver),this._eventsAttached=!1}_checkForConnectedDevices(){if(navigator.getGamepads){const W=navigator.getGamepads();for(const F of W)F&&this._addGamePad(F)}"function"===typeof matchMedia&&matchMedia("(pointer:fine)").matches&&this._addPointerDevice(D.Mouse,0,0,0)}_addGamePad(W){const F=this._getGamepadDeviceType(W.id),c=W.index;this._gamepads=this._gamepads||new Array(W.index+1),this._registerDevice(F,c,W.buttons.length+W.axes.length),this._gamepads[c]=F}_addPointerDevice(W,F,c,T){this._pointerActive||(this._pointerActive=!0),this._registerDevice(W,F,d);const Y=this._inputs[W][F];Y[0]=c,Y[1]=T}_registerDevice(W,F,c){if(void 0===F)throw`Unable to register device ${D[W]} to undefined slot.`;if(this._inputs[W]||(this._inputs[W]={}),!this._inputs[W][F]){const T=new Array(c);T.fill(0),this._inputs[W][F]=T,this._onDeviceConnected(W,F)}}_unregisterDevice(W,F){this._inputs[W][F]&&(delete this._inputs[W][F],this._onDeviceDisconnected(W,F))}_handleKeyActions(){this._keyboardDownEvent=W=>{this._keyboardActive||(this._keyboardActive=!0,this._registerDevice(D.Keyboard,0,255));const F=this._inputs[D.Keyboard][0];if(F){F[W.keyCode]=1;const c=W;c.inputIndex=W.keyCode,this._usingMacOs&&W.metaKey&&"Meta"!==W.key&&(this._metaKeys.includes(W.keyCode)||this._metaKeys.push(W.keyCode)),this._onInputChanged(D.Keyboard,0,c)}},this._keyboardUpEvent=W=>{this._keyboardActive||(this._keyboardActive=!0,this._registerDevice(D.Keyboard,0,255));const F=this._inputs[D.Keyboard][0];if(F){F[W.keyCode]=0;const c=W;if(c.inputIndex=W.keyCode,this._usingMacOs&&"Meta"===W.key&&this._metaKeys.length>0){for(const W of this._metaKeys){const c=K.CreateDeviceEvent(D.Keyboard,0,W,0,this,this._elementToAttachTo);F[W]=0,this._onInputChanged(D.Keyboard,0,c)}this._metaKeys.splice(0,this._metaKeys.length)}this._onInputChanged(D.Keyboard,0,c)}},this._keyboardBlurEvent=()=>{if(this._keyboardActive){const W=this._inputs[D.Keyboard][0];for(let F=0;F<W.length;F++)if(0!==W[F]){W[F]=0;const c=K.CreateDeviceEvent(D.Keyboard,0,F,0,this,this._elementToAttachTo);this._onInputChanged(D.Keyboard,0,c)}this._usingMacOs&&this._metaKeys.splice(0,this._metaKeys.length)}},this._elementToAttachTo.addEventListener("keydown",this._keyboardDownEvent),this._elementToAttachTo.addEventListener("keyup",this._keyboardUpEvent),this._elementToAttachTo.addEventListener("blur",this._keyboardBlurEvent)}_handlePointerActions(){this._maxTouchPoints=(0,I.k)()&&navigator.maxTouchPoints||2,this._activeTouchIds||(this._activeTouchIds=new Array(this._maxTouchPoints));for(let T=0;T<this._maxTouchPoints;T++)this._activeTouchIds[T]=-1;this._pointerMoveEvent=W=>{const F=this._getPointerType(W);let c=F===D.Mouse?0:this._activeTouchIds.indexOf(W.pointerId);if(F===D.Touch&&-1===c){const Y=this._activeTouchIds.indexOf(-1);if(!(Y>=0))return void T.d.Warn(`Max number of touches exceeded.  Ignoring touches in excess of ${this._maxTouchPoints}`);c=Y,this._activeTouchIds[Y]=W.pointerId,this._onDeviceConnected(F,c)}this._inputs[F]||(this._inputs[F]={}),this._inputs[F][c]||this._addPointerDevice(F,c,W.clientX,W.clientY);const Y=this._inputs[F][c];if(Y){const T=W;T.inputIndex=v.Move,Y[v.Horizontal]=W.clientX,Y[v.Vertical]=W.clientY,F===D.Touch&&0===Y[v.LeftClick]&&(Y[v.LeftClick]=1),void 0===W.pointerId&&(W.pointerId=this._mouseId),this._onInputChanged(F,c,T),this._usingSafari||-1===W.button||(T.inputIndex=W.button+2,Y[W.button+2]=Y[W.button+2]?0:1,this._onInputChanged(F,c,T))}},this._pointerDownEvent=W=>{const F=this._getPointerType(W);let c=F===D.Mouse?0:W.pointerId;if(F===D.Touch){let F=this._activeTouchIds.indexOf(W.pointerId);if(-1===F&&(F=this._activeTouchIds.indexOf(-1)),!(F>=0))return void T.d.Warn(`Max number of touches exceeded.  Ignoring touches in excess of ${this._maxTouchPoints}`);c=F,this._activeTouchIds[F]=W.pointerId}this._inputs[F]||(this._inputs[F]={}),this._inputs[F][c]?F===D.Touch&&this._onDeviceConnected(F,c):this._addPointerDevice(F,c,W.clientX,W.clientY);const Y=this._inputs[F][c];if(Y){const T=Y[v.Horizontal],w=Y[v.Vertical];if(F===D.Mouse){if(void 0===W.pointerId&&(W.pointerId=this._mouseId),!document.pointerLockElement)try{this._elementToAttachTo.setPointerCapture(this._mouseId)}catch(Z){}}else if(W.pointerId&&!document.pointerLockElement)try{this._elementToAttachTo.setPointerCapture(W.pointerId)}catch(Z){}Y[v.Horizontal]=W.clientX,Y[v.Vertical]=W.clientY,Y[W.button+2]=1;const A=W;A.inputIndex=W.button+2,this._onInputChanged(F,c,A),T===W.clientX&&w===W.clientY||(A.inputIndex=v.Move,this._onInputChanged(F,c,A))}},this._pointerUpEvent=W=>{var F;const c=this._getPointerType(W),T=c===D.Mouse?0:this._activeTouchIds.indexOf(W.pointerId);if(c===D.Touch){if(-1===T)return;this._activeTouchIds[T]=-1}const Y=null===(F=this._inputs[c])||void 0===F?void 0:F[T];let Z=W.button,w=Y&&0!==Y[Z+2];if(!w&&this._isUsingFirefox&&this._usingMacOs&&Y&&(Z=2===Z?0:2,w=0!==Y[Z+2]),w){var A,u,s,x;const F=Y[v.Horizontal],w=Y[v.Vertical];Y[v.Horizontal]=W.clientX,Y[v.Vertical]=W.clientY,Y[Z+2]=0;const j=W;void 0===W.pointerId&&(W.pointerId=this._mouseId),F===W.clientX&&w===W.clientY||(j.inputIndex=v.Move,this._onInputChanged(c,T,j)),j.inputIndex=Z+2,c===D.Mouse&&this._mouseId>=0&&null!==(A=(u=this._elementToAttachTo).hasPointerCapture)&&void 0!==A&&A.call(u,this._mouseId)?this._elementToAttachTo.releasePointerCapture(this._mouseId):W.pointerId&&null!==(s=(x=this._elementToAttachTo).hasPointerCapture)&&void 0!==s&&s.call(x,W.pointerId)&&this._elementToAttachTo.releasePointerCapture(W.pointerId),this._onInputChanged(c,T,j),c===D.Touch&&this._onDeviceDisconnected(c,T)}},this._pointerCancelTouch=W=>{var F,c;const T=this._activeTouchIds.indexOf(W);if(-1===T)return;null!==(F=(c=this._elementToAttachTo).hasPointerCapture)&&void 0!==F&&F.call(c,W)&&this._elementToAttachTo.releasePointerCapture(W),this._inputs[D.Touch][T][v.LeftClick]=0;const Y=K.CreateDeviceEvent(D.Touch,T,v.LeftClick,0,this,this._elementToAttachTo,W);this._onInputChanged(D.Touch,T,Y),this._activeTouchIds[T]=-1,this._onDeviceDisconnected(D.Touch,T)},this._pointerCancelEvent=W=>{if("mouse"===W.pointerType){var F,c;const W=this._inputs[D.Mouse][0];this._mouseId>=0&&null!==(F=(c=this._elementToAttachTo).hasPointerCapture)&&void 0!==F&&F.call(c,this._mouseId)&&this._elementToAttachTo.releasePointerCapture(this._mouseId);for(let F=v.LeftClick;F<=v.BrowserForward;F++)if(1===W[F]){W[F]=0;const c=K.CreateDeviceEvent(D.Mouse,0,F,0,this,this._elementToAttachTo);this._onInputChanged(D.Mouse,0,c)}}else this._pointerCancelTouch(W.pointerId)},this._pointerLeaveEvent=W=>{"pen"===W.pointerType&&this._pointerCancelTouch(W.pointerId)},this._wheelEventName="onwheel"in document.createElement("div")?"wheel":void 0!==document.onmousewheel?"mousewheel":"DOMMouseScroll";let W=!1;const F=function(){};try{const c=Object.defineProperty({},"passive",{get:function(){W=!0}});this._elementToAttachTo.addEventListener("test",F,c),this._elementToAttachTo.removeEventListener("test",F,c)}catch(c){}this._pointerBlurEvent=()=>{if(this.isDeviceAvailable(D.Mouse)){var W,F;const c=this._inputs[D.Mouse][0];this._mouseId>=0&&null!==(W=(F=this._elementToAttachTo).hasPointerCapture)&&void 0!==W&&W.call(F,this._mouseId)&&this._elementToAttachTo.releasePointerCapture(this._mouseId);for(let W=v.LeftClick;W<=v.BrowserForward;W++)if(1===c[W]){c[W]=0;const F=K.CreateDeviceEvent(D.Mouse,0,W,0,this,this._elementToAttachTo);this._onInputChanged(D.Mouse,0,F)}}if(this.isDeviceAvailable(D.Touch)){const W=this._inputs[D.Touch];for(let F=0;F<this._activeTouchIds.length;F++){var c,T,Y;const Z=this._activeTouchIds[F];if(null!==(c=(T=this._elementToAttachTo).hasPointerCapture)&&void 0!==c&&c.call(T,Z)&&this._elementToAttachTo.releasePointerCapture(Z),-1!==Z&&1===(null===(Y=W[F])||void 0===Y?void 0:Y[v.LeftClick])){W[F][v.LeftClick]=0;const c=K.CreateDeviceEvent(D.Touch,F,v.LeftClick,0,this,this._elementToAttachTo,Z);this._onInputChanged(D.Touch,F,c),this._activeTouchIds[F]=-1,this._onDeviceDisconnected(D.Touch,F)}}}},this._pointerWheelEvent=W=>{const F=D.Mouse;this._inputs[F]||(this._inputs[F]=[]),this._inputs[F][0]||(this._pointerActive=!0,this._registerDevice(F,0,d));const c=this._inputs[F][0];if(c){c[v.MouseWheelX]=W.deltaX||0,c[v.MouseWheelY]=W.deltaY||W.wheelDelta||0,c[v.MouseWheelZ]=W.deltaZ||0;const T=W;void 0===W.pointerId&&(W.pointerId=this._mouseId),0!==c[v.MouseWheelX]&&(T.inputIndex=v.MouseWheelX,this._onInputChanged(F,0,T)),0!==c[v.MouseWheelY]&&(T.inputIndex=v.MouseWheelY,this._onInputChanged(F,0,T)),0!==c[v.MouseWheelZ]&&(T.inputIndex=v.MouseWheelZ,this._onInputChanged(F,0,T))}},this._usingMacOs&&this._isUsingChromium&&(this._pointerMacOsChromeOutEvent=W=>{W.buttons>1&&this._pointerCancelEvent(W)},this._elementToAttachTo.addEventListener("lostpointercapture",this._pointerMacOsChromeOutEvent)),this._elementToAttachTo.addEventListener(this._eventPrefix+"move",this._pointerMoveEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"down",this._pointerDownEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"up",this._pointerUpEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"cancel",this._pointerCancelEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"leave",this._pointerLeaveEvent),this._elementToAttachTo.addEventListener("blur",this._pointerBlurEvent),this._elementToAttachTo.addEventListener(this._wheelEventName,this._pointerWheelEvent,!!W&&{passive:!1}),this._pointerInputClearObserver=this._engine.onEndFrameObservable.add((()=>{if(this.isDeviceAvailable(D.Mouse)){const W=this._inputs[D.Mouse][0];W[v.MouseWheelX]=0,W[v.MouseWheelY]=0,W[v.MouseWheelZ]=0}}))}_handleGamepadActions(){this._gamepadConnectedEvent=W=>{this._addGamePad(W.gamepad)},this._gamepadDisconnectedEvent=W=>{if(this._gamepads){const F=this._getGamepadDeviceType(W.gamepad.id),c=W.gamepad.index;this._unregisterDevice(F,c),delete this._gamepads[c]}},window.addEventListener("gamepadconnected",this._gamepadConnectedEvent),window.addEventListener("gamepaddisconnected",this._gamepadDisconnectedEvent)}_updateDevice(W,F,c){const T=navigator.getGamepads()[F];if(T&&W===this._gamepads[F]){const Y=this._inputs[W][F];c>=T.buttons.length?Y[c]=T.axes[c-T.buttons.length].valueOf():Y[c]=T.buttons[c].value}}_getGamepadDeviceType(W){return-1!==W.indexOf("054c")?-1!==W.indexOf("0ce6")?D.DualSense:D.DualShock:-1!==W.indexOf("Xbox One")||-1!==W.search("Xbox 360")||-1!==W.search("xinput")?D.Xbox:-1!==W.indexOf("057e")?D.Switch:D.Generic}_getPointerType(W){let F=D.Mouse;return("touch"===W.pointerType||"pen"===W.pointerType||W.touches)&&(F=D.Touch),F}}class H{constructor(W,F){let c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.deviceType=F,this.deviceSlot=c,this.onInputChangedObservable=new Z.b,this._deviceInputSystem=W}getInput(W){return this._deviceInputSystem.pollInput(this.deviceType,this.deviceSlot,W)}}class k{constructor(W){this._registeredManagers=new Array,this._refCount=0,this.registerManager=W=>{for(let F=0;F<this._devices.length;F++){const c=this._devices[F];for(const T in c){const c=+T;W._addDevice(new H(this._deviceInputSystem,F,c))}}this._registeredManagers.push(W)},this.unregisterManager=W=>{const F=this._registeredManagers.indexOf(W);F>-1&&this._registeredManagers.splice(F,1)};const F=Object.keys(D).length/2;this._devices=new Array(F);const c=(W,F)=>{this._devices[W]||(this._devices[W]=new Array),this._devices[W][F]||(this._devices[W][F]=F);for(const c of this._registeredManagers){const T=new H(this._deviceInputSystem,W,F);c._addDevice(T)}},T=(W,F)=>{var c;null!==(c=this._devices[W])&&void 0!==c&&c[F]&&delete this._devices[W][F];for(const T of this._registeredManagers)T._removeDevice(W,F)},Y=(W,F,c)=>{if(c)for(const T of this._registeredManagers)T._onInputChanged(W,F,c)};"undefined"!==typeof _native?this._deviceInputSystem=new V(c,T,Y):this._deviceInputSystem=new L(W,c,T,Y)}dispose(){this._deviceInputSystem.dispose()}}class m{getDeviceSource(W,F){if(void 0===F){if(void 0===this._firstDevice[W])return null;F=this._firstDevice[W]}return this._devices[W]&&void 0!==this._devices[W][F]?this._devices[W][F]:null}getDeviceSources(W){return this._devices[W]?this._devices[W].filter((W=>!!W)):[]}constructor(W){const F=Object.keys(D).length/2;this._devices=new Array(F),this._firstDevice=new Array(F),this._engine=W,this._engine._deviceSourceManager||(this._engine._deviceSourceManager=new k(W)),this._engine._deviceSourceManager._refCount++,this.onDeviceConnectedObservable=new Z.b((W=>{for(const F of this._devices)if(F)for(const c of F)c&&this.onDeviceConnectedObservable.notifyObserver(W,c)})),this.onDeviceDisconnectedObservable=new Z.b,this._engine._deviceSourceManager.registerManager(this),this._onDisposeObserver=W.Ji.add((()=>{this.dispose()}))}dispose(){this.onDeviceConnectedObservable.clear(),this.onDeviceDisconnectedObservable.clear(),this._engine._deviceSourceManager&&(this._engine._deviceSourceManager.unregisterManager(this),--this._engine._deviceSourceManager._refCount<1&&(this._engine._deviceSourceManager.dispose(),delete this._engine._deviceSourceManager)),this._engine.Ji.remove(this._onDisposeObserver)}_addDevice(W){this._devices[W.deviceType]||(this._devices[W.deviceType]=[]),this._devices[W.deviceType][W.deviceSlot]||(this._devices[W.deviceType][W.deviceSlot]=W,this._updateFirstDevices(W.deviceType)),this.onDeviceConnectedObservable.notifyObservers(W)}_removeDevice(W,F){var c,T;const Y=null===(c=this._devices[W])||void 0===c?void 0:c[F];this.onDeviceDisconnectedObservable.notifyObservers(Y),null!==(T=this._devices[W])&&void 0!==T&&T[F]&&delete this._devices[W][F],this._updateFirstDevices(W)}_onInputChanged(W,F,c){var T,Y;null===(T=this._devices[W])||void 0===T||null===(Y=T[F])||void 0===Y||Y.onInputChangedObservable.notifyObservers(c)}_updateFirstDevices(W){switch(W){case D.Keyboard:case D.Mouse:this._firstDevice[W]=0;break;case D.Touch:case D.DualSense:case D.DualShock:case D.Xbox:case D.Switch:case D.Generic:{delete this._firstDevice[W];const F=this._devices[W];if(F)for(let c=0;c<F.length;c++)if(F[c]){this._firstDevice[W]=c;break}break}}}}var r=c(2533);class b{constructor(){this._singleClick=!1,this._doubleClick=!1,this._hasSwiped=!1,this._ignore=!1}get singleClick(){return this._singleClick}get doubleClick(){return this._doubleClick}get hasSwiped(){return this._hasSwiped}get ignore(){return this._ignore}set singleClick(W){this._singleClick=W}set doubleClick(W){this._doubleClick=W}set hasSwiped(W){this._hasSwiped=W}set ignore(W){this._ignore=W}}class R{constructor(W){this._alreadyAttached=!1,this._meshPickProceed=!1,this._currentPickResult=null,this._previousPickResult=null,this._activePointerIds=new Array,this._activePointerIdsCount=0,this._doubleClickOccured=!1,this._isSwiping=!1,this._swipeButtonPressed=-1,this._skipPointerTap=!1,this._isMultiTouchGesture=!1,this._pointerX=0,this._pointerY=0,this._startingPointerPosition=new s.j(0,0),this._previousStartingPointerPosition=new s.j(0,0),this._startingPointerTime=0,this._previousStartingPointerTime=0,this._pointerCaptures={},this._meshUnderPointerId={},this._movePointerInfo=null,this._cameraObserverCount=0,this._delayedClicks=[null,null,null,null,null],this._deviceSourceManager=null,this._scene=W||E.e.LastCreatedScene,this._scene}get meshUnderPointer(){return this._movePointerInfo&&(this._movePointerInfo._generatePickInfo(),this._movePointerInfo=null),this._pointerOverMesh}getMeshUnderPointerByPointerId(W){return this._meshUnderPointerId[W]||null}get unTranslatedPointer(){return new s.j(this._unTranslatedPointerX,this._unTranslatedPointerY)}get pointerX(){return this._pointerX}set pointerX(W){this._pointerX=W}get pointerY(){return this._pointerY}set pointerY(W){this._pointerY=W}_updatePointerPosition(W){const F=this._scene.getEngine().getInputElementClientRect();F&&(this._pointerX=W.clientX-F.left,this._pointerY=W.clientY-F.top,this._unTranslatedPointerX=this._pointerX,this._unTranslatedPointerY=this._pointerY)}_processPointerMove(W,F){const c=this._scene,T=c.getEngine(),Y=T.getInputElement();Y&&(Y.tabIndex=T.canvasTabIndex,c.doNotHandleCursors||(Y.style.cursor=c.defaultCursor)),this._setCursorAndPointerOverMesh(W,F,c);for(const u of c._pointerMoveStage){var Z;const c=!(null===(Z=W=W||this._pickMove(F))||void 0===Z||!Z.pickedMesh);W=u.action(this._unTranslatedPointerX,this._unTranslatedPointerY,W,c,Y)}const w=F.inputIndex>=v.MouseWheelX&&F.inputIndex<=v.MouseWheelZ?z.d.POINTERWHEEL:z.d.POINTERMOVE;let A;c.onPointerMove&&(W=W||this._pickMove(F),c.onPointerMove(F,W,w)),W?(A=new z.h(w,F,W),this._setRayOnPointerInfo(W,F)):(A=new z.h(w,F,null,this),this._movePointerInfo=A),c.onPointerObservable.hasObservers()&&c.onPointerObservable.notifyObservers(A,w)}_setRayOnPointerInfo(W,F){const c=this._scene;W&&r.b._IsPickingAvailable&&(W.ray||(W.ray=c.createPickingRay(F.offsetX,F.offsetY,s.b.Identity(),c.activeCamera)))}_addCameraPointerObserver(W,F){return this._cameraObserverCount++,this._scene.onPointerObservable.add(W,F)}_removeCameraPointerObserver(W){return this._cameraObserverCount--,this._scene.onPointerObservable.remove(W)}_checkForPicking(){return!!(this._scene.onPointerObservable.observers.length>this._cameraObserverCount||this._scene.onPointerPick)}_checkPrePointerObservable(W,F,c){const T=this._scene,Y=new z.e(c,F,this._unTranslatedPointerX,this._unTranslatedPointerY);return W&&(Y.originalPickingInfo=W,Y.ray=W.ray,"xr-near"===F.pointerType&&W.originMesh&&(Y.nearInteractionPickingInfo=W)),T.onPrePointerObservable.notifyObservers(Y,c),!!Y.skipOnPointerObservable}_pickMove(W){const F=this._scene,c=F.Lk(this._unTranslatedPointerX,this._unTranslatedPointerY,F.pointerMovePredicate,F.pointerMoveFastCheck,F.cameraToUseForPointers,F.pointerMoveTrianglePredicate);return this._setCursorAndPointerOverMesh(c,W,F),c}_setCursorAndPointerOverMesh(W,F,c){const T=c.getEngine().getInputElement();if(null!==W&&void 0!==W&&W.pickedMesh){if(this.setPointerOverMesh(W.pickedMesh,F.pointerId,W,F),!c.doNotHandleCursors&&T&&this._pointerOverMesh){const W=this._pointerOverMesh._getActionManagerForTrigger();W&&W.hasPointerTriggers&&(T.style.cursor=W.hoverCursor||c.hoverCursor)}}else this.setPointerOverMesh(null,F.pointerId,W,F)}simulatePointerMove(W,F){const c=new PointerEvent("pointermove",F);c.inputIndex=v.Move,this._checkPrePointerObservable(W,c,z.d.POINTERMOVE)||this._processPointerMove(W,c)}simulatePointerDown(W,F){const c=new PointerEvent("pointerdown",F);c.inputIndex=c.button+2,this._checkPrePointerObservable(W,c,z.d.POINTERDOWN)||this._processPointerDown(W,c)}_processPointerDown(W,F){var c;const T=this._scene;if(null!==(c=W)&&void 0!==c&&c.pickedMesh){this._pickedDownMesh=W.pickedMesh;const c=W.pickedMesh._getActionManagerForTrigger();if(c){if(c.hasPickTriggers)switch(c.processTrigger(5,new q(W.pickedMesh,T.pointerX,T.pointerY,W.pickedMesh,F,W)),F.button){case 0:c.processTrigger(2,new q(W.pickedMesh,T.pointerX,T.pointerY,W.pickedMesh,F,W));break;case 1:c.processTrigger(4,new q(W.pickedMesh,T.pointerX,T.pointerY,W.pickedMesh,F,W));break;case 2:c.processTrigger(3,new q(W.pickedMesh,T.pointerX,T.pointerY,W.pickedMesh,F,W))}c.hasSpecificTrigger(8)&&window.setTimeout((()=>{const W=T.Lk(this._unTranslatedPointerX,this._unTranslatedPointerY,(W=>W.Ai&&W.isVisible&&W.isReady()&&W.actionManager&&W.actionManager.hasSpecificTrigger(8)&&W===this._pickedDownMesh),!1,T.cameraToUseForPointers);null!==W&&void 0!==W&&W.pickedMesh&&c&&0!==this._activePointerIdsCount&&Date.now()-this._startingPointerTime>R.LongPressDelay&&!this._isPointerSwiping()&&(this._startingPointerTime=0,c.processTrigger(8,q.CreateNew(W.pickedMesh,F)))}),R.LongPressDelay)}}else for(const w of T._pointerDownStage)W=w.action(this._unTranslatedPointerX,this._unTranslatedPointerY,W,F,!1);let Y;const Z=z.d.POINTERDOWN;W?(T.onPointerDown&&T.onPointerDown(F,W,Z),Y=new z.h(Z,F,W),this._setRayOnPointerInfo(W,F)):Y=new z.h(Z,F,null,this),T.onPointerObservable.hasObservers()&&T.onPointerObservable.notifyObservers(Y,Z)}_isPointerSwiping(){return this._isSwiping}simulatePointerUp(W,F,c){const T=new PointerEvent("pointerup",F);T.inputIndex=v.Move;const Y=new b;c?Y.doubleClick=!0:Y.singleClick=!0,this._checkPrePointerObservable(W,T,z.d.POINTERUP)||this._processPointerUp(W,T,Y)}_processPointerUp(W,F,c){var T;const Y=this._scene;if(null!==(T=W)&&void 0!==T&&T.pickedMesh){if(this._pickedUpMesh=W.pickedMesh,this._pickedDownMesh===this._pickedUpMesh&&(Y.onPointerPick&&Y.onPointerPick(F,W),c.singleClick&&!c.ignore&&Y.onPointerObservable.observers.length>this._cameraObserverCount)){const c=z.d.POINTERPICK,T=new z.h(c,F,W);this._setRayOnPointerInfo(W,F),Y.onPointerObservable.notifyObservers(T,c)}const T=W.pickedMesh._getActionManagerForTrigger();if(T&&!c.ignore){T.processTrigger(7,q.CreateNew(W.pickedMesh,F,W)),!c.hasSwiped&&c.singleClick&&T.processTrigger(1,q.CreateNew(W.pickedMesh,F,W));const Y=W.pickedMesh._getActionManagerForTrigger(6);c.doubleClick&&Y&&Y.processTrigger(6,q.CreateNew(W.pickedMesh,F,W))}}else if(!c.ignore)for(const Z of Y._pointerUpStage)W=Z.action(this._unTranslatedPointerX,this._unTranslatedPointerY,W,F,c.doubleClick);if(this._pickedDownMesh&&this._pickedDownMesh!==this._pickedUpMesh){const W=this._pickedDownMesh._getActionManagerForTrigger(16);W&&W.processTrigger(16,q.CreateNew(this._pickedDownMesh,F))}if(!c.ignore){const T=new z.h(z.d.POINTERUP,F,W);if(this._setRayOnPointerInfo(W,F),Y.onPointerObservable.notifyObservers(T,z.d.POINTERUP),Y.onPointerUp&&Y.onPointerUp(F,W,z.d.POINTERUP),!c.hasSwiped&&!this._skipPointerTap&&!this._isMultiTouchGesture){let T=0;if(c.singleClick?T=z.d.POINTERTAP:c.doubleClick&&(T=z.d.POINTERDOUBLETAP),T){const c=new z.h(T,F,W);Y.onPointerObservable.hasObservers()&&Y.onPointerObservable.hasSpecificMask(T)&&Y.onPointerObservable.notifyObservers(c,T)}}}}isPointerCaptured(){let W=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this._pointerCaptures[W]}attachControl(){let W=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],F=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],c=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],T=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const Y=this._scene,Z=Y.getEngine();T||(T=Z.getInputElement()),this._alreadyAttached&&this.Ni(),T&&(this._alreadyAttachedTo=T),this._deviceSourceManager=new m(Z),this._initActionManager=W=>{if(!this._meshPickProceed){const F=Y.skipPointerUpPicking||0===Y._registeredActions&&!this._checkForPicking()&&!Y.onPointerUp?null:Y.Lk(this._unTranslatedPointerX,this._unTranslatedPointerY,Y.pointerUpPredicate,Y.pointerUpFastCheck,Y.cameraToUseForPointers,Y.pointerUpTrianglePredicate);this._currentPickResult=F,F&&(W=F.hit&&F.pickedMesh?F.pickedMesh._getActionManagerForTrigger():null),this._meshPickProceed=!0}return W},this._delayedSimpleClick=(W,F,c)=>{if((Date.now()-this._previousStartingPointerTime>R.DoubleClickDelay&&!this._doubleClickOccured||W!==this._previousButtonPressed)&&(this._doubleClickOccured=!1,F.singleClick=!0,F.ignore=!1,this._delayedClicks[W])){const F=this._delayedClicks[W].evt,c=z.d.POINTERTAP,T=new z.h(c,F,this._currentPickResult);Y.onPointerObservable.hasObservers()&&Y.onPointerObservable.hasSpecificMask(c)&&Y.onPointerObservable.notifyObservers(T,c),this._delayedClicks[W]=null}},this._initClickEvent=(W,F,c,T)=>{const Y=new b;this._currentPickResult=null;let Z=null,w=W.hasSpecificMask(z.d.POINTERPICK)||F.hasSpecificMask(z.d.POINTERPICK)||W.hasSpecificMask(z.d.POINTERTAP)||F.hasSpecificMask(z.d.POINTERTAP)||W.hasSpecificMask(z.d.POINTERDOUBLETAP)||F.hasSpecificMask(z.d.POINTERDOUBLETAP);!w&&G&&(Z=this._initActionManager(Z,Y),Z&&(w=Z.hasPickTriggers));let A=!1;if(w=w&&!this._isMultiTouchGesture,w){const w=c.button;if(Y.hasSwiped=this._isPointerSwiping(),!Y.hasSwiped){let x=!R.ExclusiveDoubleClickMode;if(x||(x=!W.hasSpecificMask(z.d.POINTERDOUBLETAP)&&!F.hasSpecificMask(z.d.POINTERDOUBLETAP),x&&!G.HasSpecificTrigger(6)&&(Z=this._initActionManager(Z,Y),Z&&(x=!Z.hasSpecificTrigger(6)))),x)(Date.now()-this._previousStartingPointerTime>R.DoubleClickDelay||w!==this._previousButtonPressed)&&(Y.singleClick=!0,T(Y,this._currentPickResult),A=!0);else{const W={evt:c,clickInfo:Y,timeoutId:window.setTimeout(this._delayedSimpleClick.bind(this,w,Y,T),R.DoubleClickDelay)};this._delayedClicks[w]=W}let j=W.hasSpecificMask(z.d.POINTERDOUBLETAP)||F.hasSpecificMask(z.d.POINTERDOUBLETAP);if(!j&&G.HasSpecificTrigger(6)&&(Z=this._initActionManager(Z,Y),Z&&(j=Z.hasSpecificTrigger(6))),j)if(w===this._previousButtonPressed&&Date.now()-this._previousStartingPointerTime<R.DoubleClickDelay&&!this._doubleClickOccured){if(Y.hasSwiped||this._isPointerSwiping())if(this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=w,R.ExclusiveDoubleClickMode){var u;if(this._delayedClicks[w])clearTimeout(null===(u=this._delayedClicks[w])||void 0===u?void 0:u.timeoutId),this._delayedClicks[w]=null;T(Y,this._previousPickResult)}else T(Y,this._currentPickResult);else{var s;if(this._previousStartingPointerTime=0,this._doubleClickOccured=!0,Y.doubleClick=!0,Y.ignore=!1,R.ExclusiveDoubleClickMode&&this._delayedClicks[w])clearTimeout(null===(s=this._delayedClicks[w])||void 0===s?void 0:s.timeoutId),this._delayedClicks[w]=null;T(Y,this._currentPickResult)}A=!0}else this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=w}}A||T(Y,this._currentPickResult)},this._onPointerMove=W=>{if(this._updatePointerPosition(W),this._isSwiping||-1===this._swipeButtonPressed||(this._isSwiping=Math.abs(this._startingPointerPosition.x-this._pointerX)>R.DragMovementThreshold||Math.abs(this._startingPointerPosition.y-this._pointerY)>R.DragMovementThreshold),Z.isPointerLock&&Z._verifyPointerLock(),this._checkPrePointerObservable(null,W,W.inputIndex>=v.MouseWheelX&&W.inputIndex<=v.MouseWheelZ?z.d.POINTERWHEEL:z.d.POINTERMOVE))return;if(!Y.cameraToUseForPointers&&!Y.activeCamera)return;if(Y.Ll)return void this._processPointerMove(new N.e,W);Y.pointerMovePredicate||(Y.pointerMovePredicate=W=>W.Ai&&W.isVisible&&W.isReady()&&W.isEnabled()&&(W.enablePointerMoveEvents||Y.constantlyUpdateMeshUnderPointer||null!==W._getActionManagerForTrigger())&&(!Y.cameraToUseForPointers||0!==(Y.cameraToUseForPointers.layerMask&W.layerMask)));const F=Y._registeredActions>0||Y.constantlyUpdateMeshUnderPointer?this._pickMove(W):null;this._processPointerMove(F,W)},this._onPointerDown=W=>{const F=this._activePointerIds.indexOf(-1);if(-1===F?this._activePointerIds.push(W.pointerId):this._activePointerIds[F]=W.pointerId,this._activePointerIdsCount++,this._pickedDownMesh=null,this._meshPickProceed=!1,R.ExclusiveDoubleClickMode)for(let T=0;T<this._delayedClicks.length;T++)if(this._delayedClicks[T])if(W.button===T){var c;clearTimeout(null===(c=this._delayedClicks[T])||void 0===c?void 0:c.timeoutId)}else{const W=this._delayedClicks[T].clickInfo;this._doubleClickOccured=!1,W.singleClick=!0,W.ignore=!1;const F=this._delayedClicks[T].evt,c=z.d.POINTERTAP,Z=new z.h(c,F,this._currentPickResult);Y.onPointerObservable.hasObservers()&&Y.onPointerObservable.hasSpecificMask(c)&&Y.onPointerObservable.notifyObservers(Z,c),this._delayedClicks[T]=null}if(this._updatePointerPosition(W),-1===this._swipeButtonPressed&&(this._swipeButtonPressed=W.button),Y.preventDefaultOnPointerDown&&T&&(W.preventDefault(),T.focus()),this._startingPointerPosition.x=this._pointerX,this._startingPointerPosition.y=this._pointerY,this._startingPointerTime=Date.now(),this._checkPrePointerObservable(null,W,z.d.POINTERDOWN))return;if(!Y.cameraToUseForPointers&&!Y.activeCamera)return;let Z;this._pointerCaptures[W.pointerId]=!0,Y.pointerDownPredicate||(Y.pointerDownPredicate=W=>W.Ai&&W.isVisible&&W.isReady()&&W.isEnabled()&&(!Y.cameraToUseForPointers||0!==(Y.cameraToUseForPointers.layerMask&W.layerMask))),this._pickedDownMesh=null,Z=Y.skipPointerDownPicking||0===Y._registeredActions&&!this._checkForPicking()&&!Y.onPointerDown?new N.e:Y.Lk(this._unTranslatedPointerX,this._unTranslatedPointerY,Y.pointerDownPredicate,Y.pointerDownFastCheck,Y.cameraToUseForPointers,Y.pointerDownTrianglePredicate),this._processPointerDown(Z,W)},this._onPointerUp=W=>{const F=this._activePointerIds.indexOf(W.pointerId);-1!==F&&(this._activePointerIds[F]=-1,this._activePointerIdsCount--,this._pickedUpMesh=null,this._meshPickProceed=!1,this._updatePointerPosition(W),Y.preventDefaultOnPointerUp&&T&&(W.preventDefault(),T.focus()),this._initClickEvent(Y.onPrePointerObservable,Y.onPointerObservable,W,((F,c)=>{if(Y.onPrePointerObservable.hasObservers()&&(this._skipPointerTap=!1,!F.ignore)){if(this._checkPrePointerObservable(null,W,z.d.POINTERUP))return this._swipeButtonPressed===W.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1),void(0===W.buttons&&(this._pointerCaptures[W.pointerId]=!1));F.hasSwiped||(F.singleClick&&Y.onPrePointerObservable.hasSpecificMask(z.d.POINTERTAP)&&this._checkPrePointerObservable(null,W,z.d.POINTERTAP)&&(this._skipPointerTap=!0),F.doubleClick&&Y.onPrePointerObservable.hasSpecificMask(z.d.POINTERDOUBLETAP)&&this._checkPrePointerObservable(null,W,z.d.POINTERDOUBLETAP)&&(this._skipPointerTap=!0))}this._pointerCaptures[W.pointerId]?(0===W.buttons&&(this._pointerCaptures[W.pointerId]=!1),(Y.cameraToUseForPointers||Y.activeCamera)&&(Y.pointerUpPredicate||(Y.pointerUpPredicate=W=>W.Ai&&W.isVisible&&W.isReady()&&W.isEnabled()&&(!Y.cameraToUseForPointers||0!==(Y.cameraToUseForPointers.layerMask&W.layerMask))),!this._meshPickProceed&&(G&&G.HasTriggers||this._checkForPicking()||Y.onPointerUp)&&this._initActionManager(null,F),c||(c=this._currentPickResult),this._processPointerUp(c,W,F),this._previousPickResult=this._currentPickResult,this._swipeButtonPressed===W.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1))):this._swipeButtonPressed===W.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1)})))},this._onKeyDown=W=>{const F=U.b.KEYDOWN;if(Y.onPreKeyboardObservable.hasObservers()){const c=new U.d(F,W);if(Y.onPreKeyboardObservable.notifyObservers(c,F),c.skipOnKeyboardObservable)return}if(Y.onKeyboardObservable.hasObservers()){const c=new U.h(F,W);Y.onKeyboardObservable.notifyObservers(c,F)}Y.actionManager&&Y.actionManager.processTrigger(14,q.CreateNewFromScene(Y,W))},this._onKeyUp=W=>{const F=U.b.KEYUP;if(Y.onPreKeyboardObservable.hasObservers()){const c=new U.d(F,W);if(Y.onPreKeyboardObservable.notifyObservers(c,F),c.skipOnKeyboardObservable)return}if(Y.onKeyboardObservable.hasObservers()){const c=new U.h(F,W);Y.onKeyboardObservable.notifyObservers(c,F)}Y.actionManager&&Y.actionManager.processTrigger(15,q.CreateNewFromScene(Y,W))},this._deviceSourceManager.onDeviceConnectedObservable.add((T=>{T.deviceType===D.Mouse?T.onInputChangedObservable.add((Y=>{this._originMouseEvent=Y,Y.inputIndex===v.LeftClick||Y.inputIndex===v.MiddleClick||Y.inputIndex===v.RightClick||Y.inputIndex===v.BrowserBack||Y.inputIndex===v.BrowserForward?F&&1===T.getInput(Y.inputIndex)?this._onPointerDown(Y):W&&0===T.getInput(Y.inputIndex)&&this._onPointerUp(Y):c&&(Y.inputIndex===v.Move?this._onPointerMove(Y):Y.inputIndex!==v.MouseWheelX&&Y.inputIndex!==v.MouseWheelY&&Y.inputIndex!==v.MouseWheelZ||this._onPointerMove(Y))})):T.deviceType===D.Touch?T.onInputChangedObservable.add((Y=>{Y.inputIndex===v.LeftClick&&(F&&1===T.getInput(Y.inputIndex)?(this._onPointerDown(Y),this._activePointerIdsCount>1&&(this._isMultiTouchGesture=!0)):W&&0===T.getInput(Y.inputIndex)&&(this._onPointerUp(Y),0===this._activePointerIdsCount&&(this._isMultiTouchGesture=!1))),c&&Y.inputIndex===v.Move&&this._onPointerMove(Y)})):T.deviceType===D.Keyboard&&T.onInputChangedObservable.add((W=>{"keydown"===W.type?this._onKeyDown(W):"keyup"===W.type&&this._onKeyUp(W)}))})),this._alreadyAttached=!0}Ni(){this._alreadyAttached&&(this._deviceSourceManager.dispose(),this._deviceSourceManager=null,this._alreadyAttachedTo&&!this._scene.doNotHandleCursors&&(this._alreadyAttachedTo.style.cursor=this._scene.defaultCursor),this._alreadyAttached=!1,this._alreadyAttachedTo=null)}setPointerOverMesh(W){let F=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,c=arguments.length>2?arguments[2]:void 0,T=arguments.length>3?arguments[3]:void 0;if(this._meshUnderPointerId[F]===W&&(!W||!W._internalAbstractMeshDataInfo._pointerOverDisableMeshTesting))return;const Y=this._meshUnderPointerId[F];let Z;Y&&(Z=Y._getActionManagerForTrigger(10),Z&&Z.processTrigger(10,new q(Y,this._pointerX,this._pointerY,W,T,{pointerId:F}))),W?(this._meshUnderPointerId[F]=W,this._pointerOverMesh=W,Z=W._getActionManagerForTrigger(9),Z&&Z.processTrigger(9,new q(W,this._pointerX,this._pointerY,W,T,{pointerId:F,pickResult:c}))):(delete this._meshUnderPointerId[F],this._pointerOverMesh=null),this._scene.onMeshUnderPointerUpdatedObservable.hasObservers()&&this._scene.onMeshUnderPointerUpdatedObservable.notifyObservers({mesh:W,pointerId:F})}getPointerOverMesh(){return this.meshUnderPointer}_invalidateMesh(W){this._pointerOverMesh===W&&(this._pointerOverMesh=null),this._pickedDownMesh===W&&(this._pickedDownMesh=null),this._pickedUpMesh===W&&(this._pickedUpMesh=null);for(const F in this._meshUnderPointerId)this._meshUnderPointerId[F]===W&&delete this._meshUnderPointerId[F]}}R.DragMovementThreshold=10,R.LongPressDelay=500,R.DoubleClickDelay=300,R.ExclusiveDoubleClickMode=!1;var f=c(2449),P=c(723),p=c(731),t=c(2541),M=c(551),Q=c(864),J=c(705);class B{constructor(){this.pointerDownFastCheck=!1,this.pointerUpFastCheck=!1,this.pointerMoveFastCheck=!1,this.Ll=!1,this.skipPointerDownPicking=!1,this.skipPointerUpPicking=!1}}var a,l=c(520),h=c(642);!function(W){W[W.BackwardCompatible=0]="BackwardCompatible",W[W.Intermediate=1]="Intermediate",W[W.Aggressive=2]="Aggressive"}(a||(a={}));class WW{static DefaultMaterialFactory(W){throw(0,O.e)("eb")}static CollisionCoordinatorFactory(){throw(0,O.e)("DefaultCollisionCoordinator")}get clearColor(){return this._clearColor}set clearColor(W){W!==this._clearColor&&(this._clearColor=W,this.onClearColorChangedObservable.notifyObservers(this._clearColor))}get imageProcessingConfiguration(){return this._imageProcessingConfiguration}get performancePriority(){return this._performancePriority}set performancePriority(W){if(W!==this._performancePriority){switch(this._performancePriority=W,W){case 0:this.skipFrustumClipping=!1,this._renderingManager.maintainStateBetweenFrames=!1,this.Ll=!1,this.El=!0;break;case 1:this.skipFrustumClipping=!1,this._renderingManager.maintainStateBetweenFrames=!1,this.Ll=!0,this.El=!1;break;case 2:this.skipFrustumClipping=!0,this._renderingManager.maintainStateBetweenFrames=!0,this.Ll=!0,this.El=!1}this.onScenePerformancePriorityChangedObservable.notifyObservers(W)}}set forceWireframe(W){this._forceWireframe!==W&&(this._forceWireframe=W,this.markAllMaterialsAsDirty(16))}get forceWireframe(){return this._forceWireframe}set skipFrustumClipping(W){this._skipFrustumClipping!==W&&(this._skipFrustumClipping=W)}get skipFrustumClipping(){return this._skipFrustumClipping}set forcePointsCloud(W){this._forcePointsCloud!==W&&(this._forcePointsCloud=W,this.markAllMaterialsAsDirty(16))}get forcePointsCloud(){return this._forcePointsCloud}get environmentTexture(){return this._environmentTexture}set environmentTexture(W){this._environmentTexture!==W&&(this._environmentTexture=W,this.onEnvironmentTextureChangedObservable.notifyObservers(W),this.markAllMaterialsAsDirty(1))}getNodes(){let W=[];W=W.concat(this.meshes),W=W.concat(this.lights),W=W.concat(this.cameras),W=W.concat(this.transformNodes);for(const F of this.skeletons)W=W.concat(F.bones);return W}get animationPropertiesOverride(){return this._animationPropertiesOverride}set animationPropertiesOverride(W){this._animationPropertiesOverride=W}set onDispose(W){this._onDisposeObserver&&this.Ji.remove(this._onDisposeObserver),this._onDisposeObserver=this.Ji.add(W)}set beforeRender(W){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),W&&(this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(W))}set afterRender(W){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),W&&(this._onAfterRenderObserver=this.onAfterRenderObservable.add(W))}set beforeCameraRender(W){this._onBeforeCameraRenderObserver&&this.onBeforeCameraRenderObservable.remove(this._onBeforeCameraRenderObserver),this._onBeforeCameraRenderObserver=this.onBeforeCameraRenderObservable.add(W)}set afterCameraRender(W){this._onAfterCameraRenderObserver&&this.onAfterCameraRenderObservable.remove(this._onAfterCameraRenderObserver),this._onAfterCameraRenderObserver=this.onAfterCameraRenderObservable.add(W)}get pointerDownPredicate(){return this._pointerPickingConfiguration.pointerDownPredicate}set pointerDownPredicate(W){this._pointerPickingConfiguration.pointerDownPredicate=W}get pointerUpPredicate(){return this._pointerPickingConfiguration.pointerUpPredicate}set pointerUpPredicate(W){this._pointerPickingConfiguration.pointerUpPredicate=W}get pointerMovePredicate(){return this._pointerPickingConfiguration.pointerMovePredicate}set pointerMovePredicate(W){this._pointerPickingConfiguration.pointerMovePredicate=W}get pointerDownFastCheck(){return this._pointerPickingConfiguration.pointerDownFastCheck}set pointerDownFastCheck(W){this._pointerPickingConfiguration.pointerDownFastCheck=W}get pointerUpFastCheck(){return this._pointerPickingConfiguration.pointerUpFastCheck}set pointerUpFastCheck(W){this._pointerPickingConfiguration.pointerUpFastCheck=W}get pointerMoveFastCheck(){return this._pointerPickingConfiguration.pointerMoveFastCheck}set pointerMoveFastCheck(W){this._pointerPickingConfiguration.pointerMoveFastCheck=W}get Ll(){return this._pointerPickingConfiguration.Ll}set Ll(W){this._pointerPickingConfiguration.Ll=W}get skipPointerDownPicking(){return this._pointerPickingConfiguration.skipPointerDownPicking}set skipPointerDownPicking(W){this._pointerPickingConfiguration.skipPointerDownPicking=W}get skipPointerUpPicking(){return this._pointerPickingConfiguration.skipPointerUpPicking}set skipPointerUpPicking(W){this._pointerPickingConfiguration.skipPointerUpPicking=W}get unTranslatedPointer(){return this._inputManager.unTranslatedPointer}static get DragMovementThreshold(){return R.DragMovementThreshold}static set DragMovementThreshold(W){R.DragMovementThreshold=W}static get LongPressDelay(){return R.LongPressDelay}static set LongPressDelay(W){R.LongPressDelay=W}static get DoubleClickDelay(){return R.DoubleClickDelay}static set DoubleClickDelay(W){R.DoubleClickDelay=W}static get ExclusiveDoubleClickMode(){return R.ExclusiveDoubleClickMode}static set ExclusiveDoubleClickMode(W){R.ExclusiveDoubleClickMode=W}bindEyePosition(W){var F;let c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"vEyePosition",T=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const Y=this._forcedViewPosition?this._forcedViewPosition:this._mirroredCameraPosition?this._mirroredCameraPosition:(null===(F=this.activeCamera)||void 0===F?void 0:F.globalPosition)??s.l.ZeroReadOnly,Z=this.useRightHandedSystem===(null!=this._mirroredCameraPosition);return s.g.Vector4[0].set(Y.x,Y.y,Y.z,Z?-1:1),W&&(T?W.setFloat3(c,s.g.Vector4[0].x,s.g.Vector4[0].y,s.g.Vector4[0].z):W.setVector4(c,s.g.Vector4[0])),s.g.Vector4[0]}finalizeSceneUbo(){const W=this.getSceneUniformBuffer(),F=this.bindEyePosition(null);return W.updateFloat4("vEyePosition",F.x,F.y,F.z,F.w),W.update(),W}set useRightHandedSystem(W){this._useRightHandedSystem!==W&&(this._useRightHandedSystem=W,this.markAllMaterialsAsDirty(16))}get useRightHandedSystem(){return this._useRightHandedSystem}setStepId(W){this._currentStepId=W}getStepId(){return this._currentStepId}getInternalStep(){return this._currentInternalStep}set fogEnabled(W){this._fogEnabled!==W&&(this._fogEnabled=W,this.markAllMaterialsAsDirty(16))}get fogEnabled(){return this._fogEnabled}set fogMode(W){this._fogMode!==W&&(this._fogMode=W,this.markAllMaterialsAsDirty(16))}get fogMode(){return this._fogMode}get prePass(){return!!this.prePassRenderer&&this.prePassRenderer.defaultRT.enabled}set shadowsEnabled(W){this._shadowsEnabled!==W&&(this._shadowsEnabled=W,this.markAllMaterialsAsDirty(2))}get shadowsEnabled(){return this._shadowsEnabled}set lightsEnabled(W){this._lightsEnabled!==W&&(this._lightsEnabled=W,this.markAllMaterialsAsDirty(2))}get lightsEnabled(){return this._lightsEnabled}get activeCameras(){return this._activeCameras}set activeCameras(W){this._unObserveActiveCameras&&(this._unObserveActiveCameras(),this._unObserveActiveCameras=null),W&&(this._unObserveActiveCameras=(0,J.h)(W,(()=>{this.onActiveCamerasChanged.notifyObservers(this)}))),this._activeCameras=W}get activeCamera(){return this._activeCamera}set activeCamera(W){W!==this._activeCamera&&(this._activeCamera=W,this.onActiveCameraChanged.notifyObservers(this))}get _hasDefaultMaterial(){return WW.DefaultMaterialFactory!==WW._OriginalDefaultMaterialFactory}get defaultMaterial(){return this.ol||(this.ol=WW.DefaultMaterialFactory(this)),this.ol}set defaultMaterial(W){this.ol=W}set texturesEnabled(W){this._texturesEnabled!==W&&(this._texturesEnabled=W,this.markAllMaterialsAsDirty(1))}get texturesEnabled(){return this._texturesEnabled}get frameGraph(){return this._frameGraph}set frameGraph(W){if(this._frameGraph)return this._frameGraph=W,void(W||(this.customRenderFunction=this._currentCustomRenderFunction));this._frameGraph=W,W&&(this._currentCustomRenderFunction=this.customRenderFunction,this.customRenderFunction=this._renderWithFrameGraph,this.activeCamera=null)}set skeletonsEnabled(W){this._skeletonsEnabled!==W&&(this._skeletonsEnabled=W,this.markAllMaterialsAsDirty(8))}get skeletonsEnabled(){return this._skeletonsEnabled}get collisionCoordinator(){return this._collisionCoordinator||(this._collisionCoordinator=WW.CollisionCoordinatorFactory(),this._collisionCoordinator.init(this)),this._collisionCoordinator}get renderingManager(){return this._renderingManager}get frustumPlanes(){return this._frustumPlanes}_registerTransientComponents(){if(this._transientComponents.length>0){for(const W of this._transientComponents)W.register();this._transientComponents.length=0}}cb(W){this._components.push(W),this._transientComponents.push(W);const F=W;F.addFromContainer&&F.serialize&&this._serializableComponents.push(F)}_getComponent(W){for(const F of this._components)if(F.name===W)return F;return null}get uniqueId(){return this._uniqueId}constructor(W,F){this._inputManager=new R(this),this.cameraToUseForPointers=null,this._isScene=!0,this._blockEntityCollection=!1,this.El=!0,this.autoClearDepthAndStencil=!0,this._clearColor=new P.c(.2,.2,.3,1),this.onClearColorChangedObservable=new Z.b,this.ambientColor=new P.b(0,0,0),this.environmentIntensity=1,this.iblIntensity=1,this._performancePriority=0,this.onScenePerformancePriorityChangedObservable=new Z.b,this._forceWireframe=!1,this._skipFrustumClipping=!1,this._forcePointsCloud=!1,this.rootNodes=[],this.cameras=[],this.lights=[],this.meshes=[],this.skeletons=[],this.ri=[],this.animations=[],this.animationGroups=[],this.multiMaterials=[],this.materials=[],this.morphTargetManagers=[],this.geometries=[],this.transformNodes=[],this.actionManagers=[],this.textures=[],this._environmentTexture=null,this.postProcesses=[],this.effectLayers=[],this.om=null,this.layers=[],this.lensFlareSystems=[],this.proceduralTextures=[],this.animationsEnabled=!0,this._animationPropertiesOverride=null,this.useConstantAnimationDeltaTime=!1,this.constantlyUpdateMeshUnderPointer=!1,this.hoverCursor="pointer",this.defaultCursor="",this.doNotHandleCursors=!1,this.preventDefaultOnPointerDown=!0,this.preventDefaultOnPointerUp=!0,this.metadata=null,this.reservedDataStore=null,this.disableOfflineSupportExceptionRules=[],this.Ji=new Z.b,this._onDisposeObserver=null,this.onBeforeRenderObservable=new Z.b,this._onBeforeRenderObserver=null,this.onAfterRenderObservable=new Z.b,this.onAfterRenderCameraObservable=new Z.b,this._onAfterRenderObserver=null,this.onBeforeAnimationsObservable=new Z.b,this.onAfterAnimationsObservable=new Z.b,this.onBeforeDrawPhaseObservable=new Z.b,this.onAfterDrawPhaseObservable=new Z.b,this.onReadyObservable=new Z.b,this.onBeforeCameraRenderObservable=new Z.b,this._onBeforeCameraRenderObserver=null,this.onAfterCameraRenderObservable=new Z.b,this._onAfterCameraRenderObserver=null,this.onBeforeActiveMeshesEvaluationObservable=new Z.b,this.onAfterActiveMeshesEvaluationObservable=new Z.b,this.onBeforeParticlesRenderingObservable=new Z.b,this.onAfterParticlesRenderingObservable=new Z.b,this.onDataLoadedObservable=new Z.b,this.onNewCameraAddedObservable=new Z.b,this.onCameraRemovedObservable=new Z.b,this.onNewLightAddedObservable=new Z.b,this.onLightRemovedObservable=new Z.b,this.onNewGeometryAddedObservable=new Z.b,this.onGeometryRemovedObservable=new Z.b,this.onNewTransformNodeAddedObservable=new Z.b,this.onTransformNodeRemovedObservable=new Z.b,this.onNewMeshAddedObservable=new Z.b,this.onMeshRemovedObservable=new Z.b,this.onNewSkeletonAddedObservable=new Z.b,this.onSkeletonRemovedObservable=new Z.b,this.onNewMaterialAddedObservable=new Z.b,this.onNewMultiMaterialAddedObservable=new Z.b,this.onMaterialRemovedObservable=new Z.b,this.onMultiMaterialRemovedObservable=new Z.b,this.onNewTextureAddedObservable=new Z.b,this.onTextureRemovedObservable=new Z.b,this.onBeforeRenderTargetsRenderObservable=new Z.b,this.onAfterRenderTargetsRenderObservable=new Z.b,this.onBeforeStepObservable=new Z.b,this.onAfterStepObservable=new Z.b,this.onActiveCameraChanged=new Z.b,this.onActiveCamerasChanged=new Z.b,this.onBeforeRenderingGroupObservable=new Z.b,this.onAfterRenderingGroupObservable=new Z.b,this.onMeshImportedObservable=new Z.b,this.onAnimationFileImportedObservable=new Z.b,this.onEnvironmentTextureChangedObservable=new Z.b,this.onMeshUnderPointerUpdatedObservable=new Z.b,this._registeredForLateAnimationBindings=new w.e(256),this._pointerPickingConfiguration=new B,this.onPrePointerObservable=new Z.b,this.onPointerObservable=new Z.b,this.onPreKeyboardObservable=new Z.b,this.onKeyboardObservable=new Z.b,this._useRightHandedSystem=!1,this._timeAccumulator=0,this._currentStepId=0,this._currentInternalStep=0,this._fogEnabled=!0,this._fogMode=WW.FOGMODE_NONE,this.fogColor=new P.b(.2,.2,.3),this.fogDensity=.1,this.fogStart=0,this.fogEnd=1e3,this.needsPreviousWorldMatrices=!1,this._shadowsEnabled=!0,this._lightsEnabled=!0,this._unObserveActiveCameras=null,this._texturesEnabled=!0,this._frameGraph=null,this.frameGraphs=[],this.physicsEnabled=!0,this.particlesEnabled=!0,this.spritesEnabled=!0,this._skeletonsEnabled=!0,this.lensFlaresEnabled=!0,this.collisionsEnabled=!0,this.gravity=new s.l(0,-9.807,0),this.postProcessesEnabled=!0,this.renderTargetsEnabled=!0,this.dumpNextRenderTargets=!1,this.customRenderTargets=[],this.importedMeshesFiles=[],this.probesEnabled=!0,this._meshesForIntersections=new w.e(256),this.proceduralTexturesEnabled=!0,this._totalVertices=new f.c,this._activeIndices=new f.c,this._activeParticles=new f.c,this._activeBones=new f.c,this._animationTime=0,this.animationTimeScale=1,this._renderId=0,this._frameId=0,this._executeWhenReadyTimeoutId=null,this._intermediateRendering=!1,this._defaultFrameBufferCleared=!1,this._viewUpdateFlag=-1,this._projectionUpdateFlag=-1,this._toBeDisposed=new Array(256),this._activeRequests=new Array,this._pendingData=[],this._isDisposed=!1,this.dispatchAllSubMeshesOfActiveMeshes=!1,this._activeMeshes=new w.h(256),this._processedMaterials=new w.h(256),this._renderTargets=new w.e(256),this._materialsRenderTargets=new w.e(256),this._activeParticleSystems=new w.h(256),this._activeSkeletons=new w.e(32),this._softwareSkinnedMeshes=new w.e(32),this._activeAnimatables=new Array,this._transformMatrix=s.b.Zero(),this.requireLightSorting=!1,this._components=[],this._serializableComponents=[],this._transientComponents=[],this._beforeCameraUpdateStage=e.g.Create(),this._beforeClearStage=e.g.Create(),this._beforeRenderTargetClearStage=e.g.Create(),this._gatherRenderTargetsStage=e.g.Create(),this._gatherActiveCameraRenderTargetsStage=e.g.Create(),this._isReadyForMeshStage=e.g.Create(),this._beforeEvaluateActiveMeshStage=e.g.Create(),this._evaluateSubMeshStage=e.g.Create(),this._preActiveMeshStage=e.g.Create(),this._cameraDrawRenderTargetStage=e.g.Create(),this._beforeCameraDrawStage=e.g.Create(),this._beforeRenderTargetDrawStage=e.g.Create(),this._beforeRenderingGroupDrawStage=e.g.Create(),this._beforeRenderingMeshStage=e.g.Create(),this._afterRenderingMeshStage=e.g.Create(),this._afterRenderingGroupDrawStage=e.g.Create(),this._afterCameraDrawStage=e.g.Create(),this._afterCameraPostProcessStage=e.g.Create(),this._afterRenderTargetDrawStage=e.g.Create(),this._afterRenderTargetPostProcessStage=e.g.Create(),this._afterRenderStage=e.g.Create(),this._pointerMoveStage=e.g.Create(),this._pointerDownStage=e.g.Create(),this._pointerUpStage=e.g.Create(),this._geometriesByUniqueId=null,this._uniqueId=0,this._defaultMeshCandidates={data:[],length:0},this._defaultSubMeshCandidates={data:[],length:0},this._preventFreeActiveMeshesAndRenderingGroups=!1,this._activeMeshesFrozen=!1,this._activeMeshesFrozenButKeepClipping=!1,this._skipEvaluateActiveMeshesCompletely=!1,this._useCurrentFrameBuffer=!1,this._allowPostProcessClearColor=!0,this.getDeterministicFrameTime=()=>this._engine.getTimeStep(),this._registeredActions=0,this._blockMaterialDirtyMechanism=!1,this._perfCollector=null,this.activeCameras=[],this._uniqueId=this.getUniqueId();const c={useGeometryUniqueIdsMap:!0,useMaterialMeshMap:!0,useClonedMeshMap:!0,virtual:!1,...F};W=this._engine=W||E.e.LastCreatedEngine,c.virtual?W._virtualScenes.push(this):(E.e._LastCreatedScene=this,W.scenes.push(this)),this._uid=null,this._renderingManager=new i.b(this),y.d&&(this.postProcessManager=new y.d(this)),(0,I.o)()&&this.attachControl(),this._createUbo(),x.d&&(this._imageProcessingConfiguration=new x.d),this.setDefaultCandidateProviders(),c.useGeometryUniqueIdsMap&&(this._geometriesByUniqueId={}),this.useMaterialMeshMap=c.useMaterialMeshMap,this.useClonedMeshMap=c.useClonedMeshMap,F&&F.virtual||W.onNewSceneAddedObservable.notifyObservers(this)}getClassName(){return"Scene"}_getDefaultMeshCandidates(){return this._defaultMeshCandidates.data=this.meshes,this._defaultMeshCandidates.length=this.meshes.length,this._defaultMeshCandidates}_getDefaultSubMeshCandidates(W){return this._defaultSubMeshCandidates.data=W.wi,this._defaultSubMeshCandidates.length=W.wi.length,this._defaultSubMeshCandidates}setDefaultCandidateProviders(){this.getActiveMeshCandidates=()=>this._getDefaultMeshCandidates(),this.getActiveSubMeshCandidates=W=>this._getDefaultSubMeshCandidates(W),this.getIntersectingSubMeshCandidates=(W,F)=>this._getDefaultSubMeshCandidates(W),this.getCollidingSubMeshCandidates=(W,F)=>this._getDefaultSubMeshCandidates(W)}get meshUnderPointer(){return this._inputManager.meshUnderPointer}get pointerX(){return this._inputManager.pointerX}set pointerX(W){this._inputManager.pointerX=W}get pointerY(){return this._inputManager.pointerY}set pointerY(W){this._inputManager.pointerY=W}getCachedMaterial(){return this._cachedMaterial}getCachedEffect(){return this._cachedEffect}getCachedVisibility(){return this._cachedVisibility}isCachedMaterialInvalid(W,F){let c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return this._cachedEffect!==F||this._cachedMaterial!==W||this._cachedVisibility!==c}getEngine(){return this._engine}getTotalVertices(){return this._totalVertices.current}get totalVerticesPerfCounter(){return this._totalVertices}getActiveIndices(){return this._activeIndices.current}get totalActiveIndicesPerfCounter(){return this._activeIndices}getActiveParticles(){return this._activeParticles.current}get activeParticlesPerfCounter(){return this._activeParticles}getActiveBones(){return this._activeBones.current}get activeBonesPerfCounter(){return this._activeBones}getActiveMeshes(){return this._activeMeshes}getAnimationRatio(){return void 0!==this._animationRatio?this._animationRatio:1}getRenderId(){return this._renderId}getFrameId(){return this._frameId}incrementRenderId(){this._renderId++}_createUbo(){this.setSceneUniformBuffer(this.createSceneUniformBuffer())}simulatePointerMove(W,F){return this._inputManager.simulatePointerMove(W,F),this}simulatePointerDown(W,F){return this._inputManager.simulatePointerDown(W,F),this}simulatePointerUp(W,F,c){return this._inputManager.simulatePointerUp(W,F,c),this}isPointerCaptured(){let W=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this._inputManager.isPointerCaptured(W)}attachControl(){let W=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],F=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],c=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];this._inputManager.attachControl(W,F,c)}Ni(){this._inputManager.Ni()}isReady(){var W,F;let c,T=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this._isDisposed)return!1;const Y=this.getEngine(),Z=Y.currentRenderPassId;Y.currentRenderPassId=(null===(W=this.activeCamera)||void 0===W?void 0:W.renderPassId)??Z;let w=!0;for(this._pendingData.length>0&&(w=!1),null===(F=this.prePassRenderer)||void 0===F||F.update(),this.useOrderIndependentTransparency&&this.depthPeelingRenderer&&w&&(w=this.depthPeelingRenderer.isReady()),T&&(this._processedMaterials.reset(),this._materialsRenderTargets.reset()),c=0;c<this.meshes.length;c++){const W=this.meshes[c];if(!W.wi||0===W.wi.length)continue;if(!W.isReady(!0)){w=!1;continue}const F=W.hasThinInstances||"InstancedMesh"===W.getClassName()||"InstancedLinesMesh"===W.getClassName()||Y.getCaps().instancedArrays&&W.instances.length>0;for(const c of this._isReadyForMeshStage)c.action(W,F)||(w=!1);if(!T)continue;const Z=W.material||this.defaultMaterial;if(Z)if(Z._storeEffectOnSubMeshes)for(const c of W.wi){const W=c.Ha();W&&W.hasRenderTargetTextures&&null!=W.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(W)&&(this._processedMaterials.push(W),this._materialsRenderTargets.concatWithNoDuplicate(W.getRenderTargetTextures()))}else Z.hasRenderTargetTextures&&null!=Z.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(Z)&&(this._processedMaterials.push(Z),this._materialsRenderTargets.concatWithNoDuplicate(Z.getRenderTargetTextures()))}if(T)for(c=0;c<this._materialsRenderTargets.length;++c){this._materialsRenderTargets.data[c].isReadyForRendering()||(w=!1)}for(c=0;c<this.geometries.length;c++){2===this.geometries[c].delayLoadState&&(w=!1)}if(this.activeCameras&&this.activeCameras.length>0)for(const A of this.activeCameras)A.isReady(!0)||(w=!1);else this.activeCamera&&(this.activeCamera.isReady(!0)||(w=!1));for(const A of this.ri)A.isReady()||(w=!1);if(this.layers)for(const A of this.layers)A.isReady()||(w=!1);if(this.effectLayers)for(const A of this.effectLayers)A.isLayerReady()||(w=!1);return Y.areAllEffectsReady()||(w=!1),Y.currentRenderPassId=Z,w}resetCachedMaterial(){this._cachedMaterial=null,this._cachedEffect=null,this._cachedVisibility=null}registerBeforeRender(W){this.onBeforeRenderObservable.add(W)}unregisterBeforeRender(W){this.onBeforeRenderObservable.removeCallback(W)}registerAfterRender(W){this.onAfterRenderObservable.add(W)}unregisterAfterRender(W){this.onAfterRenderObservable.removeCallback(W)}_executeOnceBeforeRender(W){const F=()=>{W(),setTimeout((()=>{this.unregisterBeforeRender(F)}))};this.registerBeforeRender(F)}executeOnceBeforeRender(W,F){void 0!==F?setTimeout((()=>{this._executeOnceBeforeRender(W)}),F):this._executeOnceBeforeRender(W)}addPendingData(W){this._pendingData.push(W)}removePendingData(W){const F=this.isLoading,c=this._pendingData.indexOf(W);-1!==c&&this._pendingData.splice(c,1),F&&!this.isLoading&&this.onDataLoadedObservable.notifyObservers(this)}getWaitingItemsCount(){return this._pendingData.length}get isLoading(){return this._pendingData.length>0}executeWhenReady(W){let F=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.onReadyObservable.addOnce(W),null===this._executeWhenReadyTimeoutId&&this._checkIsReady(F)}async whenReadyAsync(){let W=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return await new Promise((F=>{this.executeWhenReady((()=>{F()}),W)}))}_checkIsReady(){let W=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return this._registerTransientComponents(),this.isReady(W)?(this.onReadyObservable.notifyObservers(this),this.onReadyObservable.clear(),void(this._executeWhenReadyTimeoutId=null)):this._isDisposed?(this.onReadyObservable.clear(),void(this._executeWhenReadyTimeoutId=null)):void(this._executeWhenReadyTimeoutId=setTimeout((()=>{this.incrementRenderId(),this._checkIsReady(W)}),100))}get animatables(){return this._activeAnimatables}resetLastAnimationTimeFrame(){this._animationTimeLast=Y.d.Now}getViewMatrix(){return this._viewMatrix}getProjectionMatrix(){return this._projectionMatrix}getTransformMatrix(){return this._transformMatrix}setTransformMatrix(W,F,c,T){c||T||!this._multiviewSceneUbo||(this._multiviewSceneUbo.dispose(),this._multiviewSceneUbo=null),this._viewUpdateFlag===W.updateFlag&&this._projectionUpdateFlag===F.updateFlag||(this._viewUpdateFlag=W.updateFlag,this._projectionUpdateFlag=F.updateFlag,this._viewMatrix=W,this._projectionMatrix=F,this._viewMatrix.multiplyToRef(this._projectionMatrix,this._transformMatrix),this._frustumPlanes?p.c.GetPlanesToRef(this._transformMatrix,this._frustumPlanes):this._frustumPlanes=p.c.GetPlanes(this._transformMatrix),this._multiviewSceneUbo&&this._multiviewSceneUbo.useUbo?this._updateMultiviewUbo(c,T):this._sceneUbo.useUbo&&(this._sceneUbo.Yi("viewProjection",this._transformMatrix),this._sceneUbo.Yi("view",this._viewMatrix),this._sceneUbo.Yi("projection",this._projectionMatrix)))}getSceneUniformBuffer(){return this._multiviewSceneUbo?this._multiviewSceneUbo:this._sceneUbo}createSceneUniformBuffer(W){const F=new j.c(this._engine,void 0,!1,W??"rg");return F.addUniform("viewProjection",16),F.addUniform("view",16),F.addUniform("projection",16),F.addUniform("vEyePosition",4),F}setSceneUniformBuffer(W){this._sceneUbo=W,this._viewUpdateFlag=-1,this._projectionUpdateFlag=-1}getUniqueId(){return t.d.UniqueId}Xi(W){let F=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._blockEntityCollection&&(this.meshes.push(W),W._resyncLightSources(),W.parent||W._addToSceneRootNodes(),T.d.SetImmediate((()=>{this.onNewMeshAddedObservable.notifyObservers(W)})),F)){const F=W.getChildMeshes();for(const W of F)this.Xi(W)}}Zi(W){let F=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const c=this.meshes.indexOf(W);if(-1!==c&&(this.meshes.splice(c,1),W.parent||W._removeFromSceneRootNodes()),this._inputManager._invalidateMesh(W),this.onMeshRemovedObservable.notifyObservers(W),F){const F=W.getChildMeshes();for(const W of F)this.Zi(W)}return c}addTransformNode(W){this._blockEntityCollection||W.va()===this&&-1!==W._indexInSceneTransformNodesArray||(W._indexInSceneTransformNodesArray=this.transformNodes.length,this.transformNodes.push(W),W.parent||W._addToSceneRootNodes(),this.onNewTransformNodeAddedObservable.notifyObservers(W))}removeTransformNode(W){const F=W._indexInSceneTransformNodesArray;if(-1!==F){if(F!==this.transformNodes.length-1){const W=this.transformNodes[this.transformNodes.length-1];this.transformNodes[F]=W,W._indexInSceneTransformNodesArray=F}W._indexInSceneTransformNodesArray=-1,this.transformNodes.pop(),W.parent||W._removeFromSceneRootNodes()}return this.onTransformNodeRemovedObservable.notifyObservers(W),F}removeSkeleton(W){const F=this.skeletons.indexOf(W);return-1!==F&&(this.skeletons.splice(F,1),this.onSkeletonRemovedObservable.notifyObservers(W),this._executeActiveContainerCleanup(this._activeSkeletons)),F}removeMorphTargetManager(W){const F=this.morphTargetManagers.indexOf(W);return-1!==F&&this.morphTargetManagers.splice(F,1),F}removeLight(W){const F=this.lights.indexOf(W);if(-1!==F){for(const F of this.meshes)F._removeLightSource(W,!1);this.lights.splice(F,1),this.sortLightsByPriority(),W.parent||W._removeFromSceneRootNodes()}return this.onLightRemovedObservable.notifyObservers(W),F}removeCamera(W){const F=this.cameras.indexOf(W);if(-1!==F&&(this.cameras.splice(F,1),W.parent||W._removeFromSceneRootNodes()),this.activeCameras){const F=this.activeCameras.indexOf(W);-1!==F&&this.activeCameras.splice(F,1)}return this.activeCamera===W&&(this.cameras.length>0?this.activeCamera=this.cameras[0]:this.activeCamera=null),this.onCameraRemovedObservable.notifyObservers(W),F}removeParticleSystem(W){const F=this.ri.indexOf(W);return-1!==F&&(this.ri.splice(F,1),this._executeActiveContainerCleanup(this._activeParticleSystems)),F}removeAnimation(W){const F=this.animations.indexOf(W);return-1!==F&&this.animations.splice(F,1),F}stopAnimation(W,F,c){}removeAnimationGroup(W){const F=this.animationGroups.indexOf(W);return-1!==F&&this.animationGroups.splice(F,1),F}removeMultiMaterial(W){const F=this.multiMaterials.indexOf(W);return-1!==F&&this.multiMaterials.splice(F,1),this.onMultiMaterialRemovedObservable.notifyObservers(W),F}removeMaterial(W){const F=W._indexInSceneMaterialArray;if(-1!==F&&F<this.materials.length){if(F!==this.materials.length-1){const W=this.materials[this.materials.length-1];this.materials[F]=W,W._indexInSceneMaterialArray=F}W._indexInSceneMaterialArray=-1,this.materials.pop()}return this.onMaterialRemovedObservable.notifyObservers(W),F}removeActionManager(W){const F=this.actionManagers.indexOf(W);return-1!==F&&this.actionManagers.splice(F,1),F}removeTexture(W){const F=this.textures.indexOf(W);return-1!==F&&this.textures.splice(F,1),this.onTextureRemovedObservable.notifyObservers(W),F}addLight(W){if(!this._blockEntityCollection){this.lights.push(W),this.sortLightsByPriority(),W.parent||W._addToSceneRootNodes();for(const F of this.meshes)-1===F.lightSources.indexOf(W)&&(F.lightSources.push(W),F._resyncLightSources());T.d.SetImmediate((()=>{this.onNewLightAddedObservable.notifyObservers(W)}))}}sortLightsByPriority(){this.requireLightSorting&&this.lights.sort(Q.c.CompareLightsPriority)}addCamera(W){this._blockEntityCollection||(this.cameras.push(W),T.d.SetImmediate((()=>{this.onNewCameraAddedObservable.notifyObservers(W)})),W.parent||W._addToSceneRootNodes())}addSkeleton(W){this._blockEntityCollection||(this.skeletons.push(W),T.d.SetImmediate((()=>{this.onNewSkeletonAddedObservable.notifyObservers(W)})))}addParticleSystem(W){this._blockEntityCollection||this.ri.push(W)}addAnimation(W){this._blockEntityCollection||this.animations.push(W)}addAnimationGroup(W){this._blockEntityCollection||this.animationGroups.push(W)}addMultiMaterial(W){this._blockEntityCollection||(this.multiMaterials.push(W),T.d.SetImmediate((()=>{this.onNewMultiMaterialAddedObservable.notifyObservers(W)})))}addMaterial(W){this._blockEntityCollection||W.va()===this&&-1!==W._indexInSceneMaterialArray||(W._indexInSceneMaterialArray=this.materials.length,this.materials.push(W),T.d.SetImmediate((()=>{this.onNewMaterialAddedObservable.notifyObservers(W)})))}addMorphTargetManager(W){this._blockEntityCollection||this.morphTargetManagers.push(W)}addGeometry(W){this._blockEntityCollection||(this._geometriesByUniqueId&&(this._geometriesByUniqueId[W.uniqueId]=this.geometries.length),this.geometries.push(W))}addActionManager(W){this.actionManagers.push(W)}addTexture(W){this._blockEntityCollection||(this.textures.push(W),this.onNewTextureAddedObservable.notifyObservers(W))}switchActiveCamera(W){let F=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._engine.getInputElement()&&(this.activeCamera&&this.activeCamera.Ni(),this.activeCamera=W,F&&W.attachControl())}setActiveCameraById(W){const F=this.getCameraById(W);return F?(this.activeCamera=F,F):null}setActiveCameraByName(W){const F=this.getCameraByName(W);return F?(this.activeCamera=F,F):null}getAnimationGroupByName(W){for(let F=0;F<this.animationGroups.length;F++)if(this.animationGroups[F].name===W)return this.animationGroups[F];return null}_getMaterial(W,F){for(let c=0;c<this.materials.length;c++){const W=this.materials[c];if(F(W))return W}if(W)for(let c=0;c<this.multiMaterials.length;c++){const W=this.multiMaterials[c];if(F(W))return W}return null}getMaterialByUniqueID(W){let F=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.getMaterialByUniqueId(W,F)}getMaterialByUniqueId(W){let F=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(F,(F=>F.uniqueId===W))}getMaterialById(W){let F=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(F,(F=>F.id===W))}getMaterialByName(W){let F=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(F,(F=>F.name===W))}getLastMaterialById(W){let F=arguments.length>1&&void 0!==arguments[1]&&arguments[1];for(let c=this.materials.length-1;c>=0;c--)if(this.materials[c].id===W)return this.materials[c];if(F)for(let c=this.multiMaterials.length-1;c>=0;c--)if(this.multiMaterials[c].id===W)return this.multiMaterials[c];return null}getTextureByUniqueId(W){for(let F=0;F<this.textures.length;F++)if(this.textures[F].uniqueId===W)return this.textures[F];return null}getTextureByName(W){for(let F=0;F<this.textures.length;F++)if(this.textures[F].name===W)return this.textures[F];return null}getCameraById(W){for(let F=0;F<this.cameras.length;F++)if(this.cameras[F].id===W)return this.cameras[F];return null}getCameraByUniqueId(W){for(let F=0;F<this.cameras.length;F++)if(this.cameras[F].uniqueId===W)return this.cameras[F];return null}getCameraByName(W){for(let F=0;F<this.cameras.length;F++)if(this.cameras[F].name===W)return this.cameras[F];return null}getBoneById(W){for(let F=0;F<this.skeletons.length;F++){const c=this.skeletons[F];for(let F=0;F<c.bones.length;F++)if(c.bones[F].id===W)return c.bones[F]}return null}getBoneByName(W){for(let F=0;F<this.skeletons.length;F++){const c=this.skeletons[F];for(let F=0;F<c.bones.length;F++)if(c.bones[F].name===W)return c.bones[F]}return null}getLightByName(W){for(let F=0;F<this.lights.length;F++)if(this.lights[F].name===W)return this.lights[F];return null}getLightById(W){for(let F=0;F<this.lights.length;F++)if(this.lights[F].id===W)return this.lights[F];return null}getLightByUniqueId(W){for(let F=0;F<this.lights.length;F++)if(this.lights[F].uniqueId===W)return this.lights[F];return null}getParticleSystemById(W){for(let F=0;F<this.ri.length;F++)if(this.ri[F].id===W)return this.ri[F];return null}getGeometryById(W){for(let F=0;F<this.geometries.length;F++)if(this.geometries[F].id===W)return this.geometries[F];return null}_getGeometryByUniqueId(W){if(this._geometriesByUniqueId){const F=this._geometriesByUniqueId[W];if(void 0!==F)return this.geometries[F]}else for(let F=0;F<this.geometries.length;F++)if(this.geometries[F].uniqueId===W)return this.geometries[F];return null}getFrameGraphByName(W){for(let F=0;F<this.frameGraphs.length;F++)if(this.frameGraphs[F].name===W)return this.frameGraphs[F];return null}pushGeometry(W,F){return!(!F&&this._getGeometryByUniqueId(W.uniqueId))&&(this.addGeometry(W),T.d.SetImmediate((()=>{this.onNewGeometryAddedObservable.notifyObservers(W)})),!0)}removeGeometry(W){let F;if(this._geometriesByUniqueId){if(F=this._geometriesByUniqueId[W.uniqueId],void 0===F)return!1}else if(F=this.geometries.indexOf(W),F<0)return!1;if(F!==this.geometries.length-1){const W=this.geometries[this.geometries.length-1];W&&(this.geometries[F]=W,this._geometriesByUniqueId&&(this._geometriesByUniqueId[W.uniqueId]=F))}return this._geometriesByUniqueId&&(this._geometriesByUniqueId[W.uniqueId]=void 0),this.geometries.pop(),this.onGeometryRemovedObservable.notifyObservers(W),!0}getGeometries(){return this.geometries}getMeshById(W){for(let F=0;F<this.meshes.length;F++)if(this.meshes[F].id===W)return this.meshes[F];return null}getMeshesById(W){return this.meshes.filter((function(F){return F.id===W}))}getTransformNodeById(W){for(let F=0;F<this.transformNodes.length;F++)if(this.transformNodes[F].id===W)return this.transformNodes[F];return null}getTransformNodeByUniqueId(W){for(let F=0;F<this.transformNodes.length;F++)if(this.transformNodes[F].uniqueId===W)return this.transformNodes[F];return null}getTransformNodesById(W){return this.transformNodes.filter((function(F){return F.id===W}))}getMeshByUniqueId(W){for(let F=0;F<this.meshes.length;F++)if(this.meshes[F].uniqueId===W)return this.meshes[F];return null}getLastMeshById(W){for(let F=this.meshes.length-1;F>=0;F--)if(this.meshes[F].id===W)return this.meshes[F];return null}getLastTransformNodeById(W){for(let F=this.transformNodes.length-1;F>=0;F--)if(this.transformNodes[F].id===W)return this.transformNodes[F];return null}getLastEntryById(W){let F;for(F=this.meshes.length-1;F>=0;F--)if(this.meshes[F].id===W)return this.meshes[F];for(F=this.transformNodes.length-1;F>=0;F--)if(this.transformNodes[F].id===W)return this.transformNodes[F];for(F=this.cameras.length-1;F>=0;F--)if(this.cameras[F].id===W)return this.cameras[F];for(F=this.lights.length-1;F>=0;F--)if(this.lights[F].id===W)return this.lights[F];return null}getNodeById(W){const F=this.getMeshById(W);if(F)return F;const c=this.getTransformNodeById(W);if(c)return c;const T=this.getLightById(W);if(T)return T;const Y=this.getCameraById(W);if(Y)return Y;const Z=this.getBoneById(W);return Z||null}getNodeByName(W){const F=this.getMeshByName(W);if(F)return F;const c=this.getTransformNodeByName(W);if(c)return c;const T=this.getLightByName(W);if(T)return T;const Y=this.getCameraByName(W);if(Y)return Y;const Z=this.getBoneByName(W);return Z||null}getMeshByName(W){for(let F=0;F<this.meshes.length;F++)if(this.meshes[F].name===W)return this.meshes[F];return null}getTransformNodeByName(W){for(let F=0;F<this.transformNodes.length;F++)if(this.transformNodes[F].name===W)return this.transformNodes[F];return null}getLastSkeletonById(W){for(let F=this.skeletons.length-1;F>=0;F--)if(this.skeletons[F].id===W)return this.skeletons[F];return null}getSkeletonByUniqueId(W){for(let F=0;F<this.skeletons.length;F++)if(this.skeletons[F].uniqueId===W)return this.skeletons[F];return null}getSkeletonById(W){for(let F=0;F<this.skeletons.length;F++)if(this.skeletons[F].id===W)return this.skeletons[F];return null}getSkeletonByName(W){for(let F=0;F<this.skeletons.length;F++)if(this.skeletons[F].name===W)return this.skeletons[F];return null}getMorphTargetManagerById(W){for(let F=0;F<this.morphTargetManagers.length;F++)if(this.morphTargetManagers[F].uniqueId===W)return this.morphTargetManagers[F];return null}getMorphTargetById(W){for(let F=0;F<this.morphTargetManagers.length;++F){const c=this.morphTargetManagers[F];for(let F=0;F<c.numTargets;++F){const T=c.getTarget(F);if(T.id===W)return T}}return null}getMorphTargetByName(W){for(let F=0;F<this.morphTargetManagers.length;++F){const c=this.morphTargetManagers[F];for(let F=0;F<c.numTargets;++F){const T=c.getTarget(F);if(T.name===W)return T}}return null}getPostProcessByName(W){for(let F=0;F<this.postProcesses.length;++F){const c=this.postProcesses[F];if(c.name===W)return c}return null}isActiveMesh(W){return-1!==this._activeMeshes.indexOf(W)}get uid(){return this._uid||(this._uid=T.d.RandomId()),this._uid}addExternalData(W,F){return this._externalData||(this._externalData=new A),this._externalData.add(W,F)}getExternalData(W){return this._externalData?this._externalData.get(W):null}getOrAddExternalDataWithFactory(W,F){return this._externalData||(this._externalData=new A),this._externalData.getOrAddWithFactory(W,F)}removeExternalData(W){return this._externalData.remove(W)}_evaluateSubMesh(W,F,c,T){if(T||W.isInFrustum(this._frustumPlanes)){for(const T of this._evaluateSubMeshStage)T.action(F,W);const c=W.Ha();null!==c&&void 0!==c&&(c.hasRenderTargetTextures&&null!=c.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(c)&&(this._processedMaterials.push(c),this._materialsRenderTargets.concatWithNoDuplicate(c.getRenderTargetTextures())),this._renderingManager.dispatch(W,F,c))}}freeProcessedMaterials(){this._processedMaterials.dispose()}get blockfreeActiveMeshesAndRenderingGroups(){return this._preventFreeActiveMeshesAndRenderingGroups}set blockfreeActiveMeshesAndRenderingGroups(W){this._preventFreeActiveMeshesAndRenderingGroups!==W&&(W&&(this.freeActiveMeshes(),this.freeRenderingGroups()),this._preventFreeActiveMeshesAndRenderingGroups=W)}freeActiveMeshes(){if(!this.blockfreeActiveMeshesAndRenderingGroups&&(this._activeMeshes.dispose(),this.activeCamera&&this.activeCamera._activeMeshes&&this.activeCamera._activeMeshes.dispose(),this.activeCameras))for(let W=0;W<this.activeCameras.length;W++){const F=this.activeCameras[W];F&&F._activeMeshes&&F._activeMeshes.dispose()}}freeRenderingGroups(){if(!this.blockfreeActiveMeshesAndRenderingGroups&&(this._renderingManager&&this._renderingManager.freeRenderingGroups(),this.textures))for(let W=0;W<this.textures.length;W++){const F=this.textures[W];F&&F.renderList&&F.freeRenderingGroups()}}_isInIntermediateRendering(){return this._intermediateRendering}freezeActiveMeshes(){let W=arguments.length>0&&void 0!==arguments[0]&&arguments[0],F=arguments.length>1?arguments[1]:void 0,c=arguments.length>2?arguments[2]:void 0,T=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],Y=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return this.executeWhenReady((()=>{if(this.activeCamera){if(this._frustumPlanes||this.updateTransformMatrix(),this._evaluateActiveMeshes(),this._activeMeshesFrozen=!0,this._activeMeshesFrozenButKeepClipping=Y,this._skipEvaluateActiveMeshesCompletely=W,T)for(let W=0;W<this._activeMeshes.length;W++)this._activeMeshes.data[W]._freeze();F&&F()}else c&&c("No active camera found")})),this}unfreezeActiveMeshes(){for(let W=0;W<this.meshes.length;W++){const F=this.meshes[W];F._internalAbstractMeshDataInfo&&(F._internalAbstractMeshDataInfo._isActive=!1)}for(let W=0;W<this._activeMeshes.length;W++)this._activeMeshes.data[W]._unFreeze();return this._activeMeshesFrozen=!1,this}_executeActiveContainerCleanup(W){(!this._engine.snapshotRendering||1!==this._engine.snapshotRenderingMode)&&this._activeMeshesFrozen&&this._activeMeshes.length||this.onBeforeRenderObservable.addOnce((()=>W.dispose()))}_evaluateActiveMeshes(){if(this._engine.snapshotRendering&&1===this._engine.snapshotRenderingMode){var W;if(this._activeMeshes.length>0)null===(W=this.activeCamera)||void 0===W||W._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset();return}if(this._activeMeshesFrozen&&this._activeMeshes.length){if(!this._skipEvaluateActiveMeshesCompletely){const W=this._activeMeshes.length;for(let F=0;F<W;F++){this._activeMeshes.data[F].si()}}if(this._activeParticleSystems){const W=this._activeParticleSystems.length;for(let F=0;F<W;F++)this._activeParticleSystems.data[F].animate()}return void this._renderingManager.resetSprites()}if(!this.activeCamera)return;this.onBeforeActiveMeshesEvaluationObservable.notifyObservers(this),this.activeCamera._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset(),this._materialsRenderTargets.reset();for(const T of this._beforeEvaluateActiveMeshStage)T.action();const F=this.getActiveMeshCandidates(),c=F.length;for(let T=0;T<c;T++){const W=F.data[T];let c=W._internalAbstractMeshDataInfo._currentLOD.get(this.activeCamera);if(c?c[1]=-1:(c=[W,-1],W._internalAbstractMeshDataInfo._currentLOD.set(this.activeCamera,c)),W.isBlocked)continue;if(this._totalVertices.addCount(W.getTotalVertices(),!1),!W.isReady()||!W.isEnabled()||W.hi.hasAZeroComponent)continue;W.si(),W.actionManager&&W.actionManager.hasSpecificTriggers2(12,13)&&this._meshesForIntersections.pushNoDuplicate(W);let Y=this.customLODSelector?this.customLODSelector(W,this.activeCamera):W.getLOD(this.activeCamera);if(c[0]=Y,c[1]=this._frameId,void 0!==Y&&null!==Y&&(Y!==W&&0!==Y.billboardMode&&Y.si(),W._preActivate(),W.isVisible&&W.visibility>0&&0!==(W.layerMask&this.activeCamera.layerMask)&&(this._skipFrustumClipping||W._h||W.isInFrustum(this._frustumPlanes)))){this._activeMeshes.push(W),this.activeCamera._activeMeshes.push(W),Y!==W&&Y._activate(this._renderId,!1);for(const F of this._preActiveMeshStage)F.action(W);W._activate(this._renderId,!1)&&(W.isAnInstance?W._internalAbstractMeshDataInfo._actAsRegularMesh&&(Y=W):Y._internalAbstractMeshDataInfo._onlyForInstances=!1,Y._internalAbstractMeshDataInfo._isActive=!0,this._activeMesh(W,Y)),W._postActivate()}}if(this.onAfterActiveMeshesEvaluationObservable.notifyObservers(this),this.particlesEnabled){this.onBeforeParticlesRenderingObservable.notifyObservers(this);for(let W=0;W<this.ri.length;W++){const F=this.ri[W];if(!F.isStarted()||!F.j)continue;const c=F.j;c.position&&!c.isEnabled()||(this._activeParticleSystems.push(F),F.animate(),this._renderingManager.dispatchParticles(F))}this.onAfterParticlesRenderingObservable.notifyObservers(this)}}_prepareSkeleton(W){this._skeletonsEnabled&&W.skeleton&&(this._activeSkeletons.pushNoDuplicate(W.skeleton)&&(W.skeleton.prepare(),this._activeBones.addCount(W.skeleton.bones.length,!1)),W.computeBonesUsingShaders||this._softwareSkinnedMeshes.pushNoDuplicate(W)&&this.frameGraph&&W.applySkeleton(W.skeleton))}_activeMesh(W,F){this._prepareSkeleton(F);let c=W.hasInstances||W.isAnInstance||this.dispatchAllSubMeshesOfActiveMeshes||this._skipFrustumClipping||F._h;if(F&&F.wi&&F.wi.length>0){const T=this.getActiveSubMeshCandidates(F),Y=T.length;c=c||1===Y;for(let Z=0;Z<Y;Z++){const Y=T.data[Z];this._evaluateSubMesh(Y,F,W,c)}}}updateTransformMatrix(W){const F=this.activeCamera;if(F)if(F._renderingMultiview){const c=F._rigCameras[0],T=F._rigCameras[1];this.setTransformMatrix(c.getViewMatrix(),c.getProjectionMatrix(W),T.getViewMatrix(),T.getProjectionMatrix(W))}else this.setTransformMatrix(F.getViewMatrix(),F.getProjectionMatrix(W))}_bindFrameBuffer(W){let F=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._useCurrentFrameBuffer||(W&&W._multiviewTexture?W._multiviewTexture._bindFrameBuffer():W&&W.outputRenderTarget?W.outputRenderTarget._bindFrameBuffer():this._engine._currentFrameBufferIsDefaultFrameBuffer()||this._engine.restoreDefaultFramebuffer()),F&&this._clearFrameBuffer(W)}_clearFrameBuffer(W){if(W&&W._multiviewTexture);else if(W&&W.outputRenderTarget&&!W._renderingMultiview){const F=W.outputRenderTarget;F.onClearObservable.hasObservers()?F.onClearObservable.notifyObservers(this._engine):F.skipInitialClear||W.isRightCamera||(this.El&&this._engine.clear(F.clearColor||this._clearColor,!F._cleared,!0,!0),F._cleared=!0)}else this._defaultFrameBufferCleared?this._engine.clear(null,!1,!0,!0):(this._defaultFrameBufferCleared=!0,this._clear())}_renderForCamera(W,F){var c;let Y=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(W&&W._skipRendering)return;const Z=this._engine;if(this._activeCamera=W,!this.activeCamera)throw new Error("Active camera not set");if(Z.setViewport(this.activeCamera.viewport),this.resetCachedMaterial(),this._renderId++,!this.prePass&&Y){let F=!0;W._renderingMultiview&&W.outputRenderTarget&&(F=W.outputRenderTarget.skipInitialClear,this.El&&(this._defaultFrameBufferCleared=!1,W.outputRenderTarget.skipInitialClear=!1)),this._bindFrameBuffer(this._activeCamera),W._renderingMultiview&&W.outputRenderTarget&&(W.outputRenderTarget.skipInitialClear=F)}this.updateTransformMatrix(),this.onBeforeCameraRenderObservable.notifyObservers(this.activeCamera),this._evaluateActiveMeshes();for(let T=0;T<this._softwareSkinnedMeshes.length;T++){const W=this._softwareSkinnedMeshes.data[T];W.applySkeleton(W.skeleton)}this.onBeforeRenderTargetsRenderObservable.notifyObservers(this),this._renderTargets.concatWithNoDuplicate(this._materialsRenderTargets),W.customRenderTargets&&W.customRenderTargets.length>0&&this._renderTargets.concatWithNoDuplicate(W.customRenderTargets),F&&F.customRenderTargets&&F.customRenderTargets.length>0&&this._renderTargets.concatWithNoDuplicate(F.customRenderTargets),this.environmentTexture&&this.environmentTexture.isRenderTarget&&this._renderTargets.pushNoDuplicate(this.environmentTexture);for(const T of this._gatherActiveCameraRenderTargetsStage)T.action(this._renderTargets);let w=!1;if(this.renderTargetsEnabled){if(this._intermediateRendering=!0,this._renderTargets.length>0){T.d.StartPerformanceCounter("Render targets",this._renderTargets.length>0);for(let W=0;W<this._renderTargets.length;W++){const F=this._renderTargets.data[W];if(F._shouldRender()){this._renderId++;const W=F.activeCamera&&F.activeCamera!==this.activeCamera;F.render(W,this.dumpNextRenderTargets),w=!0}}T.d.EndPerformanceCounter("Render targets",this._renderTargets.length>0),this._renderId++}for(const W of this._cameraDrawRenderTargetStage)w=W.action(this.activeCamera)||w;this._intermediateRendering=!1}this._engine.currentRenderPassId=(null===(c=W.outputRenderTarget)||void 0===c?void 0:c.renderPassId)??W.renderPassId??0,w&&!this.prePass&&(this._bindFrameBuffer(this._activeCamera,!1),this.updateTransformMatrix()),this.onAfterRenderTargetsRenderObservable.notifyObservers(this),!this.postProcessManager||W._multiviewTexture||this.prePass||this.postProcessManager._prepareFrame();for(const T of this._beforeCameraDrawStage)T.action(this.activeCamera);this.onBeforeDrawPhaseObservable.notifyObservers(this),Z.snapshotRendering&&1===Z.snapshotRenderingMode&&this.finalizeSceneUbo(),this._renderingManager.render(null,null,!0,!0),this.onAfterDrawPhaseObservable.notifyObservers(this);for(const T of this._afterCameraDrawStage)T.action(this.activeCamera);if(this.postProcessManager&&!W._multiviewTexture){const F=W.outputRenderTarget?W.outputRenderTarget.renderTarget:void 0;this.postProcessManager._finalizeFrame(W.isIntermediate,F)}for(const T of this._afterCameraPostProcessStage)T.action(this.activeCamera);this._renderTargets.reset(),this.onAfterCameraRenderObservable.notifyObservers(this.activeCamera)}_processSubCameras(W){let F=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(0===W.cameraRigMode||W._renderingMultiview)return W._renderingMultiview&&!this._multiviewSceneUbo&&this._createMultiviewUbo(),this._renderForCamera(W,void 0,F),void this.onAfterRenderCameraObservable.notifyObservers(W);if(W._useMultiviewToSingleView)this._renderMultiviewToSingleView(W);else{this.onBeforeCameraRenderObservable.notifyObservers(W);for(let F=0;F<W._rigCameras.length;F++)this._renderForCamera(W._rigCameras[F],W)}this._activeCamera=W,this.updateTransformMatrix(),this.onAfterRenderCameraObservable.notifyObservers(W)}_checkIntersections(){for(let W=0;W<this._meshesForIntersections.length;W++){const F=this._meshesForIntersections.data[W];if(F.actionManager)for(let W=0;F.actionManager&&W<F.actionManager.actions.length;W++){const c=F.actionManager.actions[W];if(12===c.trigger||13===c.trigger){const W=c.getTriggerParameter(),T=W.mesh?W.mesh:W,Y=T.intersectsMesh(F,W.usePreciseIntersection),Z=F._intersectionsInProgress.indexOf(T);Y&&-1===Z?12===c.trigger?(c._executeCurrent(q.CreateNew(F,void 0,T)),F._intersectionsInProgress.push(T)):13===c.trigger&&F._intersectionsInProgress.push(T):!Y&&Z>-1&&(13===c.trigger&&c._executeCurrent(q.CreateNew(F,void 0,T)),F.actionManager.hasSpecificTrigger(13,(W=>{const F=W.mesh?W.mesh:W;return T===F}))&&13!==c.trigger||F._intersectionsInProgress.splice(Z,1))}}}}_advancePhysicsEngineStep(W){}_animate(W){}animate(){if(this._engine.isDeterministicLockStep()){let W=Math.max(WW.MinDeltaTime,Math.min(this._engine.getDeltaTime(),WW.MaxDeltaTime))+this._timeAccumulator;const F=this._engine.getTimeStep(),c=1e3/F/1e3;let T=0;const Y=this._engine.getLockstepMaxSteps();let Z=Math.floor(W/F);for(Z=Math.min(Z,Y);W>0&&T<Z;)this.onBeforeStepObservable.notifyObservers(this),this._animationRatio=F*c,this._animate(F),this.onAfterAnimationsObservable.notifyObservers(this),this.physicsEnabled&&this._advancePhysicsEngineStep(F),this.onAfterStepObservable.notifyObservers(this),this._currentStepId++,T++,W-=F;this._timeAccumulator=W<0?0:W}else{const W=this.useConstantAnimationDeltaTime?16:Math.max(WW.MinDeltaTime,Math.min(this._engine.getDeltaTime(),WW.MaxDeltaTime));this._animationRatio=.06*W,this._animate(),this.onAfterAnimationsObservable.notifyObservers(this),this.physicsEnabled&&this._advancePhysicsEngineStep(W)}}_clear(){(this.autoClearDepthAndStencil||this.El)&&this._engine.clear(this._clearColor,this.El||this.forceWireframe||this.forcePointsCloud,this.autoClearDepthAndStencil,this.autoClearDepthAndStencil)}_checkCameraRenderTarget(W){var F;if(null===W||void 0===W||!W.outputRenderTarget||null!==W&&void 0!==W&&W.isRigCamera||(W.outputRenderTarget._cleared=!1),null!==W&&void 0!==W&&null!==(F=W.rigCameras)&&void 0!==F&&F.length)for(let c=0;c<W.rigCameras.length;++c){const F=W.rigCameras[c].outputRenderTarget;F&&(F._cleared=!1)}}resetDrawCache(W){if(this.meshes)for(const F of this.meshes)F.resetDrawCache(W)}_renderWithFrameGraph(){var W;let F=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this.activeCamera=null,this._activeParticleSystems.reset(),this._activeSkeletons.reset(),F)for(const Y of this.cameras)if(Y.update(),0!==Y.cameraRigMode)for(let W=0;W<Y._rigCameras.length;W++)Y._rigCameras[W].update();this.onBeforeRenderObservable.notifyObservers(this);for(const Y of this._beforeClearStage)Y.action();const c=this.getActiveMeshCandidates(),T=c.length;for(let Y=0;Y<T;Y++){const W=c.data[Y];W.isBlocked||(this._totalVertices.addCount(W.getTotalVertices(),!1),W.isReady()&&W.isEnabled()&&!W.hi.hasAZeroComponent&&(W.si(),W.actionManager&&W.actionManager.hasSpecificTriggers2(12,13)&&this._meshesForIntersections.pushNoDuplicate(W)))}if(this.particlesEnabled)for(let Y=0;Y<this.ri.length;Y++){const W=this.ri[Y];if(!W.isStarted()||!W.j)continue;const F=W.j;F.position&&!F.isEnabled()||(this._activeParticleSystems.push(W),W.animate())}null===(W=this.frameGraph)||void 0===W||W.execute()}_renderRenderTarget(W,F){let c=arguments.length>2&&void 0!==arguments[2]&&arguments[2],T=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(this._intermediateRendering=!0,W._shouldRender()){if(this._renderId++,this.activeCamera=F,!this.activeCamera)throw new Error("Active camera not set");this._engine.setViewport(this.activeCamera.viewport),this.updateTransformMatrix(),W.render(c,T)}this._intermediateRendering=!1}render(){var W;let F=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],c=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this.u){if(this.onReadyObservable.hasObservers()&&null===this._executeWhenReadyTimeoutId&&this._checkIsReady(),this._frameId++,this._defaultFrameBufferCleared=!1,this._checkCameraRenderTarget(this.activeCamera),null!==(W=this.activeCameras)&&void 0!==W&&W.length)for(const W of this.activeCameras)this._checkCameraRenderTarget(W);this._registerTransientComponents(),this._activeParticles.fetchNewFrame(),this._totalVertices.fetchNewFrame(),this._activeIndices.fetchNewFrame(),this._activeBones.fetchNewFrame(),this._meshesForIntersections.reset(),this.resetCachedMaterial(),this.onBeforeAnimationsObservable.notifyObservers(this),this.actionManager&&this.actionManager.processTrigger(11),c||this.animate();for(const W of this._beforeCameraUpdateStage)W.action();if(F)if(this.activeCameras&&this.activeCameras.length>0)for(let W=0;W<this.activeCameras.length;W++){const F=this.activeCameras[W];if(F.update(),0!==F.cameraRigMode)for(let W=0;W<F._rigCameras.length;W++)F._rigCameras[W].update()}else if(this.activeCamera&&(this.activeCamera.update(),0!==this.activeCamera.cameraRigMode))for(let W=0;W<this.activeCamera._rigCameras.length;W++)this.activeCamera._rigCameras[W].update();if(this.customRenderFunction)this._renderId++,this._engine.currentRenderPassId=0,this.customRenderFunction(F,c);else{var Y;this.onBeforeRenderObservable.notifyObservers(this),this.onBeforeRenderTargetsRenderObservable.notifyObservers(this);const W=null!==(Y=this.activeCameras)&&void 0!==Y&&Y.length?this.activeCameras[0]:this.activeCamera;if(this.renderTargetsEnabled){T.d.StartPerformanceCounter("Custom render targets",this.customRenderTargets.length>0);for(let F=0;F<this.customRenderTargets.length;F++){const c=this.customRenderTargets[F],T=c.activeCamera||this.activeCamera;this._renderRenderTarget(c,T,W!==T,this.dumpNextRenderTargets)}T.d.EndPerformanceCounter("Custom render targets",this.customRenderTargets.length>0),this._renderId++}this._engine.currentRenderPassId=(null===W||void 0===W?void 0:W.renderPassId)??0,this.activeCamera=W,this._activeCamera&&22!==this._activeCamera.cameraRigMode&&!this.prePass&&this._bindFrameBuffer(this._activeCamera,!1),this.onAfterRenderTargetsRenderObservable.notifyObservers(this);for(const F of this._beforeClearStage)F.action();this._clearFrameBuffer(this.activeCamera);for(const F of this._gatherRenderTargetsStage)F.action(this._renderTargets);if(this.activeCameras&&this.activeCameras.length>0)for(let F=0;F<this.activeCameras.length;F++)this._processSubCameras(this.activeCameras[F],F>0);else{if(!this.activeCamera)throw new Error("No camera defined");this._processSubCameras(this.activeCamera,!!this.activeCamera.outputRenderTarget)}}this._checkIntersections();for(const W of this._afterRenderStage)W.action();if(this.afterRender&&this.afterRender(),this.onAfterRenderObservable.notifyObservers(this),this._toBeDisposed.length){for(let W=0;W<this._toBeDisposed.length;W++){const F=this._toBeDisposed[W];F&&F.dispose()}this._toBeDisposed.length=0}this.dumpNextRenderTargets&&(this.dumpNextRenderTargets=!1),this._activeBones.addCount(0,!0),this._activeIndices.addCount(0,!0),this._activeParticles.addCount(0,!0),this._engine.restoreDefaultFramebuffer()}}freezeMaterials(){for(let W=0;W<this.materials.length;W++)this.materials[W].freeze()}unfreezeMaterials(){for(let W=0;W<this.materials.length;W++)this.materials[W].unfreeze()}dispose(){if(this.u)return;if(this.beforeRender=null,this.afterRender=null,this.metadata=null,this.skeletons.length=0,this.morphTargetManagers.length=0,this._transientComponents.length=0,this._isReadyForMeshStage.clear(),this._beforeEvaluateActiveMeshStage.clear(),this._evaluateSubMeshStage.clear(),this._preActiveMeshStage.clear(),this._cameraDrawRenderTargetStage.clear(),this._beforeCameraDrawStage.clear(),this._beforeRenderTargetDrawStage.clear(),this._beforeRenderingGroupDrawStage.clear(),this._beforeRenderingMeshStage.clear(),this._afterRenderingMeshStage.clear(),this._afterRenderingGroupDrawStage.clear(),this._afterCameraDrawStage.clear(),this._afterRenderTargetDrawStage.clear(),this._afterRenderStage.clear(),this._beforeCameraUpdateStage.clear(),this._beforeClearStage.clear(),this._gatherRenderTargetsStage.clear(),this._gatherActiveCameraRenderTargetsStage.clear(),this._pointerMoveStage.clear(),this._pointerDownStage.clear(),this._pointerUpStage.clear(),this.importedMeshesFiles=[],this._activeAnimatables&&this.stopAllAnimations){for(const W of this._activeAnimatables)W.onAnimationEndObservable.clear(),W.onAnimationEnd=null;this.stopAllAnimations()}this.resetCachedMaterial(),this.activeCamera&&(this.activeCamera._activeMeshes.dispose(),this.activeCamera=null),this.activeCameras=null,this._activeMeshes.dispose(),this._renderingManager.dispose(),this._processedMaterials.dispose(),this._activeParticleSystems.dispose(),this._activeSkeletons.dispose(),this._softwareSkinnedMeshes.dispose(),this._renderTargets.dispose(),this._materialsRenderTargets.dispose(),this._registeredForLateAnimationBindings.dispose(),this._meshesForIntersections.dispose(),this._toBeDisposed.length=0;const W=this._activeRequests.slice();for(const Y of W)Y.abort();this._activeRequests.length=0;try{this.Ji.notifyObservers(this)}catch(T){l.e.Error("An error occurred while calling onDisposeObservable!",T)}this.Ni();if(this._engine.getInputElement())for(let Y=0;Y<this.cameras.length;Y++)this.cameras[Y].Ni();this._disposeList(this.animationGroups),this._disposeList(this.lights),this.ol&&this.ol.dispose(),this._disposeList(this.multiMaterials),this._disposeList(this.materials),this._disposeList(this.meshes,(W=>W.dispose(!0))),this._disposeList(this.transformNodes,(W=>W.dispose(!0)));const F=this.cameras;this._disposeList(F),this._disposeList(this.ri),this._disposeList(this.postProcesses),this._disposeList(this.textures),this._disposeList(this.morphTargetManagers),this._sceneUbo.dispose(),this._multiviewSceneUbo&&this._multiviewSceneUbo.dispose(),this.postProcessManager.dispose(),this._disposeList(this._components);let c=this._engine.scenes.indexOf(this);if(c>-1&&this._engine.scenes.splice(c,1),E.e._LastCreatedScene===this){E.e._LastCreatedScene=null;let W=E.e.Instances.length-1;for(;W>=0;){const F=E.e.Instances[W];if(F.scenes.length>0){E.e._LastCreatedScene=F.scenes[this._engine.scenes.length-1];break}W--}}c=this._engine._virtualScenes.indexOf(this),c>-1&&this._engine._virtualScenes.splice(c,1),this._engine.wipeCaches(!0),this.Ji.clear(),this.onBeforeRenderObservable.clear(),this.onAfterRenderObservable.clear(),this.onBeforeRenderTargetsRenderObservable.clear(),this.onAfterRenderTargetsRenderObservable.clear(),this.onAfterStepObservable.clear(),this.onBeforeStepObservable.clear(),this.onBeforeActiveMeshesEvaluationObservable.clear(),this.onAfterActiveMeshesEvaluationObservable.clear(),this.onBeforeParticlesRenderingObservable.clear(),this.onAfterParticlesRenderingObservable.clear(),this.onBeforeDrawPhaseObservable.clear(),this.onAfterDrawPhaseObservable.clear(),this.onBeforeAnimationsObservable.clear(),this.onAfterAnimationsObservable.clear(),this.onDataLoadedObservable.clear(),this.onBeforeRenderingGroupObservable.clear(),this.onAfterRenderingGroupObservable.clear(),this.onMeshImportedObservable.clear(),this.onBeforeCameraRenderObservable.clear(),this.onAfterCameraRenderObservable.clear(),this.onAfterRenderCameraObservable.clear(),this.onReadyObservable.clear(),this.onNewCameraAddedObservable.clear(),this.onCameraRemovedObservable.clear(),this.onNewLightAddedObservable.clear(),this.onLightRemovedObservable.clear(),this.onNewGeometryAddedObservable.clear(),this.onGeometryRemovedObservable.clear(),this.onNewTransformNodeAddedObservable.clear(),this.onTransformNodeRemovedObservable.clear(),this.onNewMeshAddedObservable.clear(),this.onMeshRemovedObservable.clear(),this.onNewSkeletonAddedObservable.clear(),this.onSkeletonRemovedObservable.clear(),this.onNewMaterialAddedObservable.clear(),this.onNewMultiMaterialAddedObservable.clear(),this.onMaterialRemovedObservable.clear(),this.onMultiMaterialRemovedObservable.clear(),this.onNewTextureAddedObservable.clear(),this.onTextureRemovedObservable.clear(),this.onPrePointerObservable.clear(),this.onPointerObservable.clear(),this.onPreKeyboardObservable.clear(),this.onKeyboardObservable.clear(),this.onActiveCameraChanged.clear(),this.onScenePerformancePriorityChangedObservable.clear(),this.onClearColorChangedObservable.clear(),this.onEnvironmentTextureChangedObservable.clear(),this.onMeshUnderPointerUpdatedObservable.clear(),this._isDisposed=!0}_disposeList(W,F){const c=W.slice(0);F=F??(W=>W.dispose());for(const T of c)F(T);W.length=0}get u(){return this._isDisposed}clearCachedVertexData(){for(let W=0;W<this.meshes.length;W++){const F=this.meshes[W].pi;F&&F.clearCachedData()}}cleanCachedTextureBuffer(){for(const W of this.textures){W._buffer&&(W._buffer=null)}}getWorldExtends(W){const F=new s.l(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),c=new s.l(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);W=W||(()=>!0);const T=this.meshes.filter(W);for(const Y of T){if(Y.si(!0),!Y.wi||0===Y.wi.length||Y.infiniteDistance)continue;const W=Y.getBoundingInfo(),T=W.boundingBox.minimumWorld,Z=W.boundingBox.maximumWorld;s.l.CheckExtends(T,F,c),s.l.CheckExtends(Z,F,c)}return{min:F,max:c}}createPickingRay(W,F,c,T){throw(0,O.e)("Ray")}createPickingRayToRef(W,F,c,T,Y){throw(0,O.e)("Ray")}createPickingRayInCameraSpace(W,F,c){throw(0,O.e)("Ray")}createPickingRayInCameraSpaceToRef(W,F,c,T){throw(0,O.e)("Ray")}Lk(W,F,c,T,Y,Z){const w=(0,O.e)("Ray",!0);return w&&l.e.Warn(w),new N.e}pickWithBoundingInfo(W,F,c,T,Y){const Z=(0,O.e)("Ray",!0);return Z&&l.e.Warn(Z),new N.e}pickWithRay(W,F,c,T){throw(0,O.e)("Ray")}multiPick(W,F,c,T,Y){throw(0,O.e)("Ray")}multiPickWithRay(W,F,c){throw(0,O.e)("Ray")}setPointerOverMesh(W,F,c){this._inputManager.setPointerOverMesh(W,F,c)}getPointerOverMesh(){return this._inputManager.getPointerOverMesh()}_rebuildGeometries(){for(const W of this.geometries)W._rebuild();for(const W of this.meshes)W._rebuild();this.postProcessManager&&this.postProcessManager._rebuild();for(const W of this._components)W.rebuild();for(const W of this.ri)W.rebuild();if(this.spriteManagers)for(const W of this.spriteManagers)W.rebuild()}_rebuildTextures(){for(const W of this.textures)W._rebuild(!0);this.markAllMaterialsAsDirty(1)}_getByTags(W,F,c){if(void 0===F)return W;const T=[];for(const Y in W){const Z=W[Y];u.d&&u.d.MatchesQuery(Z,F)&&(!c||c(Z))&&T.push(Z)}return T}getMeshesByTags(W,F){return this._getByTags(this.meshes,W,F)}getCamerasByTags(W,F){return this._getByTags(this.cameras,W,F)}getLightsByTags(W,F){return this._getByTags(this.lights,W,F)}getMaterialByTags(W,F){return this._getByTags(this.materials,W,F).concat(this._getByTags(this.multiMaterials,W,F))}getTransformNodesByTags(W,F){return this._getByTags(this.transformNodes,W,F)}setRenderingOrder(W){let F=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,T=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this._renderingManager.setRenderingOrder(W,F,c,T)}setRenderingAutoClearDepthStencil(W,F){let c=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],T=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._renderingManager.setRenderingAutoClearDepthStencil(W,F,c,T)}getAutoClearDepthStencilSetup(W){return this._renderingManager.getAutoClearDepthStencilSetup(W)}_forceBlockMaterialDirtyMechanism(W){this._blockMaterialDirtyMechanism=W}get blockMaterialDirtyMechanism(){return this._blockMaterialDirtyMechanism}set blockMaterialDirtyMechanism(W){this._blockMaterialDirtyMechanism!==W&&(this._blockMaterialDirtyMechanism=W,W||this.markAllMaterialsAsDirty(127))}markAllMaterialsAsDirty(W,F){if(!this._blockMaterialDirtyMechanism)for(const c of this.materials)F&&!F(c)||c.Oi(W)}_loadFile(W,F,c,T,Y,Z,w){const A=(0,M.s)(W,F,c,T?this.offlineProvider:void 0,Y,Z,w);return this._activeRequests.push(A),A.onCompleteObservable.add((W=>{this._activeRequests.splice(this._activeRequests.indexOf(W),1)})),A}async _loadFileAsync(W,F,c,T,Y){return await new Promise(((Z,w)=>{this._loadFile(W,(W=>{Z(W)}),F,c,T,((W,F)=>{w(F)}),Y)}))}_requestFile(W,F,c,T,Y,Z,w){const A=(0,M.y)(W,F,c,T?this.offlineProvider:void 0,Y,Z,w);return this._activeRequests.push(A),A.onCompleteObservable.add((W=>{this._activeRequests.splice(this._activeRequests.indexOf(W),1)})),A}async _requestFileAsync(W,F,c,T,Y){return await new Promise(((Z,w)=>{this._requestFile(W,(W=>{Z(W)}),F,c,T,(W=>{w(W)}),Y)}))}_readFile(W,F,c,T,Y){const Z=(0,M.x)(W,F,c,T,Y);return this._activeRequests.push(Z),Z.onCompleteObservable.add((W=>{this._activeRequests.splice(this._activeRequests.indexOf(W),1)})),Z}async _readFileAsync(W,F,c){return await new Promise(((T,Y)=>{this._readFile(W,(W=>{T(W)}),F,c,(W=>{Y(W)}))}))}getPerfCollector(){throw(0,O.e)("performanceViewerSceneExtension")}setActiveCameraByID(W){return this.setActiveCameraById(W)}getMaterialByID(W){return this.getMaterialById(W)}getLastMaterialByID(W){return this.getLastMaterialById(W)}getTextureByUniqueID(W){return this.getTextureByUniqueId(W)}getCameraByID(W){return this.getCameraById(W)}getCameraByUniqueID(W){return this.getCameraByUniqueId(W)}getBoneByID(W){return this.getBoneById(W)}getLightByID(W){return this.getLightById(W)}getLightByUniqueID(W){return this.getLightByUniqueId(W)}getParticleSystemByID(W){return this.getParticleSystemById(W)}getGeometryByID(W){return this.getGeometryById(W)}getMeshByID(W){return this.getMeshById(W)}getMeshByUniqueID(W){return this.getMeshByUniqueId(W)}getLastMeshByID(W){return this.getLastMeshById(W)}getMeshesByID(W){return this.getMeshesById(W)}getTransformNodeByID(W){return this.getTransformNodeById(W)}getTransformNodeByUniqueID(W){return this.getTransformNodeByUniqueId(W)}getTransformNodesByID(W){return this.getTransformNodesById(W)}getNodeByID(W){return this.getNodeById(W)}getLastEntryByID(W){return this.getLastEntryById(W)}getLastSkeletonByID(W){return this.getLastSkeletonById(W)}}WW.FOGMODE_NONE=0,WW.FOGMODE_EXP=1,WW.FOGMODE_EXP2=2,WW.FOGMODE_LINEAR=3,WW.MinDeltaTime=1,WW.MaxDeltaTime=1e3,WW._OriginalDefaultMaterialFactory=WW.DefaultMaterialFactory,(0,h.h)("BABYLON.Scene",WW)}}]);