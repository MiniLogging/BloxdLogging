"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[10,11],{2634:(P,Q,O)=>{var b;O.d(Q,{e:()=>F}),function(P){P[P.PointerMove=0]="PointerMove",P[P.PointerDown=1]="PointerDown",P[P.PointerUp=2]="PointerUp"}(b||(b={}));class F{}F.DOM_DELTA_PIXEL=0,F.DOM_DELTA_LINE=1,F.DOM_DELTA_PAGE=2},2626:(P,Q,O)=>{O.d(Q,{e:()=>b,g:()=>g,j:()=>F});class b{}b.KEYDOWN=1,b.KEYUP=2;class F{constructor(P,Q){this.type=P,this.event=Q}}class g extends F{get skipOnPointerObservable(){return this.skipOnKeyboardObservable}set skipOnPointerObservable(P){this.skipOnKeyboardObservable=P}constructor(P,Q){super(P,Q),this.type=P,this.event=Q,this.skipOnKeyboardObservable=!1}}},2624:(P,Q,O)=>{O.d(Q,{c:()=>F,g:()=>m,j:()=>q});var b=O(751);class F{}F.POINTERDOWN=1,F.POINTERUP=2,F.POINTERMOVE=4,F.POINTERWHEEL=8,F.POINTERPICK=16,F.POINTERTAP=32,F.POINTERDOUBLETAP=64;class g{constructor(P,Q){this.type=P,this.event=Q}}class m extends g{constructor(P,Q,O,F){super(P,Q),this.ray=null,this.originalPickingInfo=null,this.skipOnPointerObservable=!1,this.localPosition=new b.i(O,F)}}class q extends g{get pickInfo(){return this._pickInfo||this._generatePickInfo(),this._pickInfo}constructor(P,Q,O){let b=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(P,Q),this._pickInfo=O,this._inputManager=b}_generatePickInfo(){this._inputManager&&(this._pickInfo=this._inputManager._pickMove(this.event),this._inputManager._setRayOnPointerInfo(this._pickInfo,this.event),this._inputManager=null)}}},2668:(P,Q,O)=>{var b=O(2448),F=O(2465);F.e.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(F.e.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=b.c.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((P=>{this._texture._sphericalPolynomial=P,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(P){this._texture&&(this._texture._sphericalPolynomial=P)},enumerable:!0,configurable:!0})},2617:(P,Q,O)=>{function b(P){P.push("vCameraColorCurveNeutral","vCameraColorCurvePositive","vCameraColorCurveNegative")}O.d(Q,{c:()=>b})},2619:(P,Q,O)=>{O.d(Q,{b:()=>g,d:()=>F});var b=O(2617);function F(P,Q){Q.EXPOSURE&&P.push("exposureLinear"),Q.CONTRAST&&P.push("contrast"),Q.COLORGRADING&&P.push("colorTransformSettings"),(Q.VIGNETTE||Q.DITHER)&&P.push("vInverseScreenSize"),Q.VIGNETTE&&(P.push("vignetteSettings1"),P.push("vignetteSettings2")),Q.COLORCURVES&&(0,b.c)(P),Q.DITHER&&P.push("ditherIntensity")}function g(P,Q){Q.COLORGRADING&&P.push("txColorTransform")}},2611:(P,Q,O)=>{O.d(Q,{d:()=>A});var b=O(732),F=O(740),g=O(537),m=O(797),q=O(790),R=O(2617);class X{constructor(){this._dirty=!0,this._tempColor=new m.h(0,0,0,0),this._globalCurve=new m.h(0,0,0,0),this._highlightsCurve=new m.h(0,0,0,0),this._midtonesCurve=new m.h(0,0,0,0),this._shadowsCurve=new m.h(0,0,0,0),this._positiveCurve=new m.h(0,0,0,0),this._negativeCurve=new m.h(0,0,0,0),this._globalHue=30,this._globalDensity=0,this._globalSaturation=0,this._globalExposure=0,this._highlightsHue=30,this._highlightsDensity=0,this._highlightsSaturation=0,this._highlightsExposure=0,this._midtonesHue=30,this._midtonesDensity=0,this._midtonesSaturation=0,this._midtonesExposure=0,this._shadowsHue=30,this._shadowsDensity=0,this._shadowsSaturation=0,this._shadowsExposure=0}get globalHue(){return this._globalHue}set globalHue(P){this._globalHue=P,this._dirty=!0}get globalDensity(){return this._globalDensity}set globalDensity(P){this._globalDensity=P,this._dirty=!0}get globalSaturation(){return this._globalSaturation}set globalSaturation(P){this._globalSaturation=P,this._dirty=!0}get globalExposure(){return this._globalExposure}set globalExposure(P){this._globalExposure=P,this._dirty=!0}get highlightsHue(){return this._highlightsHue}set highlightsHue(P){this._highlightsHue=P,this._dirty=!0}get highlightsDensity(){return this._highlightsDensity}set highlightsDensity(P){this._highlightsDensity=P,this._dirty=!0}get highlightsSaturation(){return this._highlightsSaturation}set highlightsSaturation(P){this._highlightsSaturation=P,this._dirty=!0}get highlightsExposure(){return this._highlightsExposure}set highlightsExposure(P){this._highlightsExposure=P,this._dirty=!0}get midtonesHue(){return this._midtonesHue}set midtonesHue(P){this._midtonesHue=P,this._dirty=!0}get midtonesDensity(){return this._midtonesDensity}set midtonesDensity(P){this._midtonesDensity=P,this._dirty=!0}get midtonesSaturation(){return this._midtonesSaturation}set midtonesSaturation(P){this._midtonesSaturation=P,this._dirty=!0}get midtonesExposure(){return this._midtonesExposure}set midtonesExposure(P){this._midtonesExposure=P,this._dirty=!0}get shadowsHue(){return this._shadowsHue}set shadowsHue(P){this._shadowsHue=P,this._dirty=!0}get shadowsDensity(){return this._shadowsDensity}set shadowsDensity(P){this._shadowsDensity=P,this._dirty=!0}get shadowsSaturation(){return this._shadowsSaturation}set shadowsSaturation(P){this._shadowsSaturation=P,this._dirty=!0}get shadowsExposure(){return this._shadowsExposure}set shadowsExposure(P){this._shadowsExposure=P,this._dirty=!0}getClassName(){return"ColorCurves"}static Bind(P,Q){let O=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"vCameraColorCurvePositive",b=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"vCameraColorCurveNeutral",F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"vCameraColorCurveNegative";P._dirty&&(P._dirty=!1,P._getColorGradingDataToRef(P._globalHue,P._globalDensity,P._globalSaturation,P._globalExposure,P._globalCurve),P._getColorGradingDataToRef(P._highlightsHue,P._highlightsDensity,P._highlightsSaturation,P._highlightsExposure,P._tempColor),P._tempColor.multiplyToRef(P._globalCurve,P._highlightsCurve),P._getColorGradingDataToRef(P._midtonesHue,P._midtonesDensity,P._midtonesSaturation,P._midtonesExposure,P._tempColor),P._tempColor.multiplyToRef(P._globalCurve,P._midtonesCurve),P._getColorGradingDataToRef(P._shadowsHue,P._shadowsDensity,P._shadowsSaturation,P._shadowsExposure,P._tempColor),P._tempColor.multiplyToRef(P._globalCurve,P._shadowsCurve),P._highlightsCurve.subtractToRef(P._midtonesCurve,P._positiveCurve),P._midtonesCurve.subtractToRef(P._shadowsCurve,P._negativeCurve)),Q&&(Q.setFloat4(O,P._positiveCurve.r,P._positiveCurve.g,P._positiveCurve.b,P._positiveCurve.a),Q.setFloat4(b,P._midtonesCurve.r,P._midtonesCurve.g,P._midtonesCurve.b,P._midtonesCurve.a),Q.setFloat4(F,P._negativeCurve.r,P._negativeCurve.g,P._negativeCurve.b,P._negativeCurve.a))}_getColorGradingDataToRef(P,Q,O,b,F){null!=P&&(P=X._Clamp(P,0,360),Q=X._Clamp(Q,-100,100),O=X._Clamp(O,-100,100),b=X._Clamp(b,-100,100),Q=X._ApplyColorGradingSliderNonlinear(Q),Q*=.5,b=X._ApplyColorGradingSliderNonlinear(b),Q<0&&(Q*=-1,P=(P+180)%360),X._FromHSBToRef(P,Q,50+.25*b,F),F.scaleToRef(2,F),F.a=1+.01*O)}static _ApplyColorGradingSliderNonlinear(P){P/=100;let Q=Math.abs(P);return Q=Math.pow(Q,2),P<0&&(Q*=-1),Q*=100,Q}static _FromHSBToRef(P,Q,O,b){let F=X._Clamp(P,0,360);const g=X._Clamp(Q/100,0,1),m=X._Clamp(O/100,0,1);if(0===g)b.r=m,b.g=m,b.b=m;else{F/=60;const P=Math.floor(F),Q=F-P,O=m*(1-g),q=m*(1-g*Q),R=m*(1-g*(1-Q));switch(P){case 0:b.r=m,b.g=R,b.b=O;break;case 1:b.r=q,b.g=m,b.b=O;break;case 2:b.r=O,b.g=m,b.b=R;break;case 3:b.r=O,b.g=q,b.b=m;break;case 4:b.r=R,b.g=O,b.b=m;break;default:b.r=m,b.g=O,b.b=q}}b.a=1}static _Clamp(P,Q,O){return Math.min(Math.max(P,Q),O)}clone(){return q.c.Clone((()=>new X),this)}serialize(){return q.c.Serialize(this)}static Parse(P){return q.c.Parse((()=>new X),P,null,null)}}X.PrepareUniforms=R.c,(0,b.c)([(0,F.N)()],X.prototype,"_globalHue",void 0),(0,b.c)([(0,F.N)()],X.prototype,"_globalDensity",void 0),(0,b.c)([(0,F.N)()],X.prototype,"_globalSaturation",void 0),(0,b.c)([(0,F.N)()],X.prototype,"_globalExposure",void 0),(0,b.c)([(0,F.N)()],X.prototype,"_highlightsHue",void 0),(0,b.c)([(0,F.N)()],X.prototype,"_highlightsDensity",void 0),(0,b.c)([(0,F.N)()],X.prototype,"_highlightsSaturation",void 0),(0,b.c)([(0,F.N)()],X.prototype,"_highlightsExposure",void 0),(0,b.c)([(0,F.N)()],X.prototype,"_midtonesHue",void 0),(0,b.c)([(0,F.N)()],X.prototype,"_midtonesDensity",void 0),(0,b.c)([(0,F.N)()],X.prototype,"_midtonesSaturation",void 0),(0,b.c)([(0,F.N)()],X.prototype,"_midtonesExposure",void 0),q.c._ColorCurvesParser=X.Parse;var C=O(709),L=O(2619),G=O(696);class A{constructor(){this.colorCurves=new X,this._colorCurvesEnabled=!1,this._colorGradingEnabled=!1,this._colorGradingWithGreenDepth=!0,this._colorGradingBGR=!0,this._exposure=1,this._toneMappingEnabled=!1,this._toneMappingType=A.TONEMAPPING_STANDARD,this._contrast=1,this.vignetteStretch=0,this.vignetteCenterX=0,this.vignetteCenterY=0,this.vignetteWeight=1.5,this.vignetteColor=new m.h(0,0,0,0),this.vignetteCameraFov=.5,this._vignetteBlendMode=A.VIGNETTEMODE_MULTIPLY,this._vignetteEnabled=!1,this._ditheringEnabled=!1,this._ditheringIntensity=1/255,this._skipFinalColorClamp=!1,this._applyByPostProcess=!1,this._isEnabled=!0,this.outputTextureWidth=0,this.outputTextureHeight=0,this.onUpdateParameters=new g.d}get colorCurvesEnabled(){return this._colorCurvesEnabled}set colorCurvesEnabled(P){this._colorCurvesEnabled!==P&&(this._colorCurvesEnabled=P,this._updateParameters())}get colorGradingTexture(){return this._colorGradingTexture}set colorGradingTexture(P){this._colorGradingTexture!==P&&(this._colorGradingTexture=P,this._updateParameters())}get colorGradingEnabled(){return this._colorGradingEnabled}set colorGradingEnabled(P){this._colorGradingEnabled!==P&&(this._colorGradingEnabled=P,this._updateParameters())}get colorGradingWithGreenDepth(){return this._colorGradingWithGreenDepth}set colorGradingWithGreenDepth(P){this._colorGradingWithGreenDepth!==P&&(this._colorGradingWithGreenDepth=P,this._updateParameters())}get colorGradingBGR(){return this._colorGradingBGR}set colorGradingBGR(P){this._colorGradingBGR!==P&&(this._colorGradingBGR=P,this._updateParameters())}get exposure(){return this._exposure}set exposure(P){this._exposure!==P&&(this._exposure=P,this._updateParameters())}get toneMappingEnabled(){return this._toneMappingEnabled}set toneMappingEnabled(P){this._toneMappingEnabled!==P&&(this._toneMappingEnabled=P,this._updateParameters())}get toneMappingType(){return this._toneMappingType}set toneMappingType(P){this._toneMappingType!==P&&(this._toneMappingType=P,this._updateParameters())}get contrast(){return this._contrast}set contrast(P){this._contrast!==P&&(this._contrast=P,this._updateParameters())}get vignetteCentreY(){return this.vignetteCenterY}set vignetteCentreY(P){this.vignetteCenterY=P}get vignetteCentreX(){return this.vignetteCenterX}set vignetteCentreX(P){this.vignetteCenterX=P}get vignetteBlendMode(){return this._vignetteBlendMode}set vignetteBlendMode(P){this._vignetteBlendMode!==P&&(this._vignetteBlendMode=P,this._updateParameters())}get vignetteEnabled(){return this._vignetteEnabled}set vignetteEnabled(P){this._vignetteEnabled!==P&&(this._vignetteEnabled=P,this._updateParameters())}get ditheringEnabled(){return this._ditheringEnabled}set ditheringEnabled(P){this._ditheringEnabled!==P&&(this._ditheringEnabled=P,this._updateParameters())}get ditheringIntensity(){return this._ditheringIntensity}set ditheringIntensity(P){this._ditheringIntensity!==P&&(this._ditheringIntensity=P,this._updateParameters())}get skipFinalColorClamp(){return this._skipFinalColorClamp}set skipFinalColorClamp(P){this._skipFinalColorClamp!==P&&(this._skipFinalColorClamp=P,this._updateParameters())}get applyByPostProcess(){return this._applyByPostProcess}set applyByPostProcess(P){this._applyByPostProcess!==P&&(this._applyByPostProcess=P,this._updateParameters())}get isEnabled(){return this._isEnabled}set isEnabled(P){this._isEnabled!==P&&(this._isEnabled=P,this._updateParameters())}_updateParameters(){this.onUpdateParameters.notifyObservers(this)}getClassName(){return"ImageProcessingConfiguration"}prepareDefines(P){if((arguments.length>1&&void 0!==arguments[1]&&arguments[1])!==this.applyByPostProcess||!this._isEnabled)return P.VIGNETTE=!1,P.TONEMAPPING=0,P.CONTRAST=!1,P.EXPOSURE=!1,P.COLORCURVES=!1,P.COLORGRADING=!1,P.COLORGRADING3D=!1,P.DITHER=!1,P.IMAGEPROCESSING=!1,P.SKIPFINALCOLORCLAMP=this.skipFinalColorClamp,void(P.IMAGEPROCESSINGPOSTPROCESS=this.applyByPostProcess&&this._isEnabled);if(P.VIGNETTE=this.vignetteEnabled,P.VIGNETTEBLENDMODEMULTIPLY=this.vignetteBlendMode===A._VIGNETTEMODE_MULTIPLY,P.VIGNETTEBLENDMODEOPAQUE=!P.VIGNETTEBLENDMODEMULTIPLY,this._toneMappingEnabled)switch(this._toneMappingType){case A.TONEMAPPING_KHR_PBR_NEUTRAL:P.TONEMAPPING=3;break;case A.TONEMAPPING_ACES:P.TONEMAPPING=2;break;default:P.TONEMAPPING=1}else P.TONEMAPPING=0;P.CONTRAST=1!==this.contrast,P.EXPOSURE=1!==this.exposure,P.COLORCURVES=this.colorCurvesEnabled&&!!this.colorCurves,P.COLORGRADING=this.colorGradingEnabled&&!!this.colorGradingTexture,P.COLORGRADING?P.COLORGRADING3D=this.colorGradingTexture.is3D:P.COLORGRADING3D=!1,P.SAMPLER3DGREENDEPTH=this.colorGradingWithGreenDepth,P.SAMPLER3DBGRMAP=this.colorGradingBGR,P.DITHER=this._ditheringEnabled,P.IMAGEPROCESSINGPOSTPROCESS=this.applyByPostProcess,P.SKIPFINALCOLORCLAMP=this.skipFinalColorClamp,P.IMAGEPROCESSING=P.VIGNETTE||!!P.TONEMAPPING||P.CONTRAST||P.EXPOSURE||P.COLORCURVES||P.COLORGRADING||P.DITHER}isReady(){return!this.colorGradingEnabled||!this.colorGradingTexture||this.colorGradingTexture.isReady()}bind(P,Q){if(this._colorCurvesEnabled&&this.colorCurves&&X.Bind(this.colorCurves,P),this._vignetteEnabled||this._ditheringEnabled){const O=1/(this.outputTextureWidth||P.getEngine().getRenderWidth()),b=1/(this.outputTextureHeight||P.getEngine().getRenderHeight());if(P.setFloat2("vInverseScreenSize",O,b),this._ditheringEnabled&&P.setFloat("ditherIntensity",.5*this._ditheringIntensity),this._vignetteEnabled){const F=null!=Q?Q:b/O;let g=Math.tan(.5*this.vignetteCameraFov),m=g*F;const q=Math.sqrt(m*g);m=(0,C.m)(m,q,this.vignetteStretch),g=(0,C.m)(g,q,this.vignetteStretch),P.setFloat4("vignetteSettings1",m,g,-m*this.vignetteCenterX,-g*this.vignetteCenterY);const R=-2*this.vignetteWeight;P.setFloat4("vignetteSettings2",this.vignetteColor.r,this.vignetteColor.g,this.vignetteColor.b,R)}}if(P.setFloat("exposureLinear",this.exposure),P.setFloat("contrast",this.contrast),this.colorGradingTexture){P.setTexture("txColorTransform",this.colorGradingTexture);const Q=this.colorGradingTexture.getSize().height;P.setFloat4("colorTransformSettings",(Q-1)/Q,.5/Q,Q,this.colorGradingTexture.level)}}clone(){return q.c.Clone((()=>new A),this)}serialize(){return q.c.Serialize(this)}static Parse(P){const Q=q.c.Parse((()=>new A),P,null,null);return void 0!==P.vignetteCentreX&&(Q.vignetteCenterX=P.vignetteCentreX),void 0!==P.vignetteCentreY&&(Q.vignetteCenterY=P.vignetteCentreY),Q}static get VIGNETTEMODE_MULTIPLY(){return this._VIGNETTEMODE_MULTIPLY}static get VIGNETTEMODE_OPAQUE(){return this._VIGNETTEMODE_OPAQUE}}A.TONEMAPPING_STANDARD=0,A.TONEMAPPING_ACES=1,A.TONEMAPPING_KHR_PBR_NEUTRAL=2,A.PrepareUniforms=L.d,A.PrepareSamplers=L.b,A._VIGNETTEMODE_MULTIPLY=0,A._VIGNETTEMODE_OPAQUE=1,(0,b.c)([(0,F.l)()],A.prototype,"colorCurves",void 0),(0,b.c)([(0,F.N)()],A.prototype,"_colorCurvesEnabled",void 0),(0,b.c)([(0,F.H)("colorGradingTexture")],A.prototype,"_colorGradingTexture",void 0),(0,b.c)([(0,F.N)()],A.prototype,"_colorGradingEnabled",void 0),(0,b.c)([(0,F.N)()],A.prototype,"_colorGradingWithGreenDepth",void 0),(0,b.c)([(0,F.N)()],A.prototype,"_colorGradingBGR",void 0),(0,b.c)([(0,F.N)()],A.prototype,"_exposure",void 0),(0,b.c)([(0,F.N)()],A.prototype,"_toneMappingEnabled",void 0),(0,b.c)([(0,F.N)()],A.prototype,"_toneMappingType",void 0),(0,b.c)([(0,F.N)()],A.prototype,"_contrast",void 0),(0,b.c)([(0,F.N)()],A.prototype,"vignetteStretch",void 0),(0,b.c)([(0,F.N)()],A.prototype,"vignetteCenterX",void 0),(0,b.c)([(0,F.N)()],A.prototype,"vignetteCenterY",void 0),(0,b.c)([(0,F.N)()],A.prototype,"vignetteWeight",void 0),(0,b.c)([(0,F.s)()],A.prototype,"vignetteColor",void 0),(0,b.c)([(0,F.N)()],A.prototype,"vignetteCameraFov",void 0),(0,b.c)([(0,F.N)()],A.prototype,"_vignetteBlendMode",void 0),(0,b.c)([(0,F.N)()],A.prototype,"_vignetteEnabled",void 0),(0,b.c)([(0,F.N)()],A.prototype,"_ditheringEnabled",void 0),(0,b.c)([(0,F.N)()],A.prototype,"_ditheringIntensity",void 0),(0,b.c)([(0,F.N)()],A.prototype,"_skipFinalColorClamp",void 0),(0,b.c)([(0,F.N)()],A.prototype,"_applyByPostProcess",void 0),(0,b.c)([(0,F.N)()],A.prototype,"_isEnabled",void 0),(0,b.c)([(0,F.N)()],A.prototype,"outputTextureWidth",void 0),(0,b.c)([(0,F.N)()],A.prototype,"outputTextureHeight",void 0),q.c._ImageProcessingConfigurationParser=A.Parse,(0,G.f)("BABYLON.ImageProcessingConfiguration",A)},2664:(P,Q,O)=>{O.r(Q),O.d(Q,{Dispose:()=>G,DumpData:()=>L,DumpDataAsync:()=>C,DumpFramebuffer:()=>X,DumpTools:()=>A});var b=O(2489),F=O(545),g=O(778),m=O(598);let q,R=null;async function X(P,Q,O,b){let F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",g=arguments.length>5?arguments[5]:void 0,m=arguments.length>6?arguments[6]:void 0;const q=await O.readPixels(0,0,P,Q);L(P,Q,new Uint8Array(q.buffer),b,F,g,!0,void 0,m)}async function C(P,Q,O){let b=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",F=arguments.length>4?arguments[4]:void 0,g=arguments.length>5&&void 0!==arguments[5]&&arguments[5],m=arguments.length>6&&void 0!==arguments[6]&&arguments[6],q=arguments.length>7?arguments[7]:void 0;return await new Promise((R=>{L(P,Q,O,(P=>R(P)),b,F,g,m,q)}))}function L(P,Q,X,C){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",A=arguments.length>5?arguments[5]:void 0,j=arguments.length>6&&void 0!==arguments[6]&&arguments[6],w=arguments.length>7&&void 0!==arguments[7]&&arguments[7],W=arguments.length>8?arguments[8]:void 0;(async function(){return R||(R=new Promise(((P,Q)=>{let F,g=null;const R={Tk:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(O.bind(O,2513)).then((X=>{let{ThinEngine:C}=X;const L=m.c.Instances.length;try{F=new OffscreenCanvas(100,100),g=new C(F,!1,R)}catch(w){var A;L<m.c.Instances.length&&(null===(A=m.c.Instances.pop())||void 0===A||A.dispose()),F=document.createElement("canvas"),g=new C(F,!1,R)}m.c.Instances.pop(),m.c.OnEnginesDisposedObservable.add((P=>{g&&P!==g&&!g.u&&0===m.c.Instances.length&&G()})),g.getCaps().parallelShaderCompile=void 0;const j=new b.b(g);O.e(35).then(O.bind(O,13400)).then((O=>{let{passPixelShader:m}=O;if(!g)return void Q("Engine is not defined");const R=new b.e({Vj:g,name:m.name,fragmentShader:m.shader,samplerNames:["textureSampler"]});q={canvas:F,Vj:g,renderer:j,wrapper:R},P(q)}))})).catch(Q)}))),await R})().then((O=>{if(O.Vj.setSize(P,Q,!0),X instanceof Float32Array){const P=new Uint8Array(X.length);let Q=X.length;for(;Q--;){const O=X[Q];P[Q]=Math.round(255*(0,g.e)(O))}X=P}const b=O.Vj.createRawTexture(X,P,Q,5,!1,!j,1);O.renderer.setViewport(),O.renderer.applyEffectWrapper(O.wrapper),O.wrapper.effect._bindTexture("textureSampler",b),O.renderer.draw(),w?F.d.ToBlob(O.canvas,(P=>{const Q=new FileReader;Q.onload=P=>{const Q=P.target.result;C&&C(Q)},Q.readAsArrayBuffer(P)}),L,W):F.d.EncodeScreenshotCanvasData(O.canvas,C,L,A,W),b.dispose()}))}function G(){var P;q?(q.wrapper.dispose(),q.renderer.dispose(),q.Vj.dispose()):null===(P=R)||void 0===P||P.then((P=>{P.wrapper.dispose(),P.renderer.dispose(),P.Vj.dispose()}));R=null,q=null}const A={DumpData:L,DumpDataAsync:C,DumpFramebuffer:X,Dispose:G};F.d.DumpData=L,F.d.DumpDataAsync=C,F.d.DumpFramebuffer=X},2599:(P,Q,O)=>{O.d(Q,{e:()=>j,h:()=>K,l:()=>t,m:()=>B});var b=O(545),F=O(751),g=O(778),m=O(2417),q=O(673),R=O(2465),X=(O(2608),O(2487)),C=O(561);O(2658),O(2664),O(2668);const L="image/png",G=2,A=[134,22,135,150,246,214,150,54];function j(P){const Q=new DataView(P.buffer,P.byteOffset,P.byteLength);let O=0;for(let m=0;m<A.length;m++)if(Q.getUint8(O++)!==A[m])return C.d.Error("Not a babylon environment map"),null;let b="",F=0;for(;F=Q.getUint8(O++);)b+=String.fromCharCode(F);let g=JSON.parse(b);return g=w(g),g.binaryDataPosition=O,g.sk&&(g.sk.lodGenerationScale=g.sk.lodGenerationScale||.8),g}function w(P){if(P.version>G)throw new Error(`Unsupported babylon environment map version "${P.version}". Latest supported version is "${G}".`);return 2===P.version?P:P={...P,version:2,imageType:L}}function W(P,Q){const O=(Q=w(Q)).sk;let b=Math.log2(Q.width);if(b=Math.round(b)+1,O.mipmaps.length!==6*b)throw new Error(`Unsupported specular mipmaps number "${O.mipmaps.length}"`);const F=new Array(b);for(let g=0;g<b;g++){F[g]=new Array(6);for(let b=0;b<6;b++){const m=O.mipmaps[6*g+b];F[g][b]=new Uint8Array(P.buffer,P.byteOffset+Q.binaryDataPosition+m.position,m.length)}}return F}function r(P,Q){var O;Q=w(Q);const b=new Array(6),F=null===(O=Q.irradiance)||void 0===O?void 0:O.irradianceTexture;if(F){if(6!==F.faces.length)throw new Error(`Incorrect irradiance texture faces number "${F.faces.length}"`);for(let O=0;O<6;O++){const g=F.faces[O];b[O]=new Uint8Array(P.buffer,P.byteOffset+Q.binaryDataPosition+g.position,g.length)}}return b}function K(P,Q,O){var b;const g=(O=w(O)).sk;if(!g)return Promise.resolve([]);P._lodGenerationScale=g.lodGenerationScale;const m=[],q=W(Q,O);m.push(x(P,q,O.imageType));const R=null===(b=O.irradiance)||void 0===b?void 0:b.irradianceTexture;if(R){var X,C;const b=r(Q,O);let g=null;null!==(X=O.irradiance)&&void 0!==X&&null!==(C=X.irradianceTexture)&&void 0!==C&&C.dominantDirection&&(g=F.j.bk(O.irradiance.irradianceTexture.dominantDirection)),m.push(u(P,b,R.size,O.imageType,g))}return Promise.all(m)}async function T(P,Q,O,b,F,g,m,q,R,X,C){return await new Promise(((L,G)=>{if(O){const O=Q.createTexture(null,!0,!0,null,1,null,(P=>{G(P)}),P);null===b||void 0===b||b.onEffectCreatedObservable.addOnce((q=>{q.executeWhenCompiled((()=>{b.externalTextureSamplerBinding=!0,b.onApply=b=>{b._bindTexture("textureSampler",O),b.setFloat2("scale",1,Q._features.needsInvertingBitmap&&P instanceof ImageBitmap?-1:1)},Q.scenes.length&&(Q.scenes[0].postProcessManager.directRender([b],X,!0,g,m),Q.restoreDefaultFramebuffer(),O.dispose(),URL.revokeObjectURL(F),L())}))}))}else{if(Q._uploadImageToTexture(C,P,g,m),q){const O=R[m];O&&Q._uploadImageToTexture(O._texture,P,g,0)}L()}}))}async function x(P,Q){let O=arguments.length>2&&void 0!==arguments[2]?arguments[2]:L;const b=P.getEngine();P.format=5,P.type=0,P.generateMipMaps=!0,P._cachedAnisotropicFilteringLevel=null,b.updateTextureSamplingMode(3,P),await H(P,Q,!0,O),P.isReady=!0}async function u(P,Q,O){let b=arguments.length>3&&void 0!==arguments[3]?arguments[3]:L,F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const g=P.getEngine(),m=new q.b(g,5),X=new R.e(g,m);P._irradianceTexture=X,X._dominantDirection=F,m.isCube=!0,m.format=5,m.type=0,m.generateMipMaps=!0,m._cachedAnisotropicFilteringLevel=null,m.generateMipMaps=!0,m.width=O,m.height=O,g.updateTextureSamplingMode(3,m),await H(m,[Q],!1,b),g.generateMipMapsForCubemap(m),m.isReady=!0}async function H(P,Q,F){let m=arguments.length>3&&void 0!==arguments[3]?arguments[3]:L;if(!b.d.IsExponentOfTwo(P.width))throw new Error("Texture size must be a power of two");const C=(0,g.o)(P.width)+1,G=P.getEngine();let A=!1,j=!1,w=null,W=null,r=null;const K=G.getCaps();K.textureLOD?G._features.supportRenderAndCopyToLodForFloatTextures?K.textureHalfFloatRender&&K.textureHalfFloatLinearFiltering?(A=!0,P.type=2):K.textureFloatRender&&K.textureFloatLinearFiltering&&(A=!0,P.type=1):A=!1:(A=!1,j=F);let x=0;if(A)G.isWebGPU?(x=1,await O.e(26).then(O.bind(O,13415))):await O.e(24).then(O.bind(O,13419)),w=new X.d("rgbdDecode","rgbdDecode",null,null,1,null,3,G,!1,void 0,P.type,void 0,null,!1,void 0,x),P._isRGBD=!1,P.invertY=!1,W=G.createRenderTargetCubeTexture(P.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:P.type,format:5});else if(P._isRGBD=!0,P.invertY=!0,j){const Q=3;r={};const O=P._lodGenerationScale,b=P._lodGenerationOffset;for(let F=0;F<Q;F++){const g=(C-1)*O+b,m=b+(g-b)*(1-F/(Q-1)),X=Math.round(Math.min(Math.max(m,0),g)),L=new q.b(G,2);L.isCube=!0,L.invertY=!0,L.generateMipMaps=!1,G.updateTextureSamplingMode(2,L);const A=new R.e(null);switch(A._isCube=!0,A._texture=L,r[X]=A,F){case 0:P._lodTextureLow=A;break;case 1:P._lodTextureMid=A;break;case 2:P._lodTextureHigh=A}}}const u=[];for(let O=0;O<Q.length;O++)for(let b=0;b<6;b++){const F=Q[O][b],g=new Blob([F],{type:m}),q=URL.createObjectURL(g);let R;if(G._features.forceBitmapOverHTMLImageElement)R=G.createImageBitmap(g,{premultiplyAlpha:"none"}).then((async Q=>await T(Q,G,A,w,q,b,O,j,r,W,P)));else{const Q=new Image;Q.src=q,R=new Promise(((F,g)=>{Q.onload=()=>{T(Q,G,A,w,q,b,O,j,r,W,P).then((()=>F())).catch((P=>{g(P)}))},Q.onerror=P=>{g(P)}}))}u.push(R)}if(await Promise.all(u),Q.length<C){let O;const b=Math.pow(2,C-1-Q.length),F=b*b*4;switch(P.type){case 0:O=new Uint8Array(F);break;case 2:O=new Uint16Array(F);break;case 1:O=new Float32Array(F)}for(let g=Q.length;g<C;g++)for(let Q=0;Q<6;Q++){var H;G._uploadArrayBufferViewToTexture((null===(H=W)||void 0===H?void 0:H.texture)||P,O,Q,g)}}if(W){const Q=P._irradianceTexture;P._irradianceTexture=null,G._releaseTexture(P),W._swapAndDie(P),P._irradianceTexture=Q}w&&w.dispose(),j&&(P._lodTextureHigh&&P._lodTextureHigh._texture&&(P._lodTextureHigh._texture.isReady=!0),P._lodTextureMid&&P._lodTextureMid._texture&&(P._lodTextureMid._texture.isReady=!0),P._lodTextureLow&&P._lodTextureLow._texture&&(P._lodTextureLow._texture.isReady=!0))}function t(P,Q){const O=(Q=w(Q)).irradiance;if(!O)return;const b=new m.f;F.j.FromArrayToRef(O.x,0,b.x),F.j.FromArrayToRef(O.y,0,b.y),F.j.FromArrayToRef(O.z,0,b.z),F.j.FromArrayToRef(O.xx,0,b.xx),F.j.FromArrayToRef(O.yy,0,b.yy),F.j.FromArrayToRef(O.zz,0,b.zz),F.j.FromArrayToRef(O.yz,0,b.yz),F.j.FromArrayToRef(O.zx,0,b.zx),F.j.FromArrayToRef(O.xy,0,b.xy),P._sphericalPolynomial=b}function B(P,Q,O,b,F){const g=x(P.getEngine().createRawCubeTexture(null,P.width,P.format,P.type,P.generateMipMaps,P.invertY,P.samplingMode,P._compression),Q).then((()=>P));return P.onRebuildCallback=P=>({proxy:g,isReady:!0,isAsync:!0}),P._source=13,P._bufferViewArrayArray=Q,P._lodGenerationScale=b,P._lodGenerationOffset=F,P._sphericalPolynomial=O,x(P,Q).then((()=>(P.isReady=!0,P)))}},2658:(P,Q,O)=>{O.d(Q,{c:()=>g});var b=O(2487),F=O(2454);class g{static ExpandRGBDTexture(P){const Q=P._texture;if(!Q||!P.isRGBD)return;const F=Q.getEngine(),g=F.getCaps(),m=Q.isReady;let q=!1;g.textureHalfFloatRender&&g.textureHalfFloatLinearFiltering?(q=!0,Q.type=2):g.textureFloatRender&&g.textureFloatLinearFiltering&&(q=!0,Q.type=1),q&&(Q.isReady=!1,Q._isRGBD=!1,Q.invertY=!1);const R=async()=>{const g=F.isWebGPU,m=g?1:0;Q.isReady=!1,g?await O.e(26).then(O.bind(O,13415)):await O.e(24).then(O.bind(O,13419));const q=new b.d("rgbdDecode","rgbdDecode",null,null,1,null,3,F,!1,void 0,Q.type,void 0,null,!1,void 0,m);q.externalTextureSamplerBinding=!0;const R=F.createRenderTargetTexture(Q.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:Q.samplingMode,type:Q.type,format:5});q.onEffectCreatedObservable.addOnce((O=>{O.executeWhenCompiled((()=>{q.onApply=P=>{P._bindTexture("textureSampler",Q),P.setFloat2("scale",1,1)},P.va().postProcessManager.directRender([q],R,!0),F.restoreDefaultFramebuffer(),F._releaseTexture(Q),q&&q.dispose(),R._swapAndDie(Q),Q.isReady=!0}))}))};q&&(m?R():P.onLoadObservable.addOnce(R))}static async EncodeTextureToRGBD(P,Q){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Q.getEngine().isWebGPU?await O.e(27).then(O.bind(O,13430)):await O.e(25).then(O.bind(O,13425)),await(0,F.d)("rgbdEncode",P,Q,b,1,5)}}},2650:(P,Q,O)=>{O.d(Q,{d:()=>b});class b{static get UniqueId(){const P=this._UniqueIdCounter;return this._UniqueIdCounter++,P}}b._UniqueIdCounter=1},2642:(P,Q,O)=>{O.d(Q,{d:()=>b});class b{}b._IsPickingAvailable=!1},2608:(P,Q,O)=>{O.d(Q,{e:()=>PP});var b=O(545),F=O(574),g=O(537),m=O(749);class q{constructor(){this._count=0,this._data={}}p(P){this.clear(),P.forEach(((P,Q)=>this.add(P,Q)))}get(P){const Q=this._data[P];if(void 0!==Q)return Q}getOrAddWithFactory(P,Q){let O=this.get(P);return void 0!==O||(O=Q(P),O&&this.add(P,O)),O}getOrAdd(P,Q){const O=this.get(P);return void 0!==O?O:(this.add(P,Q),Q)}contains(P){return void 0!==this._data[P]}add(P,Q){return void 0===this._data[P]&&(this._data[P]=Q,++this._count,!0)}set(P,Q){return void 0!==this._data[P]&&(this._data[P]=Q,!0)}getAndRemove(P){const Q=this.get(P);return void 0!==Q?(delete this._data[P],--this._count,Q):null}remove(P){return!!this.contains(P)&&(delete this._data[P],--this._count,!0)}clear(){this._data={},this._count=0}get count(){return this._count}forEach(P){for(const Q in this._data){P(Q,this._data[Q])}}first(P){for(const Q in this._data){const O=P(Q,this._data[Q]);if(O)return O}return null}}var R=O(715),X=O(751),C=O(2611),L=O(911),G=O(906);class A{constructor(P,Q,O,b,F,g){this.source=P,this.pointerX=Q,this.pointerY=O,this.meshUnderPointer=b,this.sourceEvent=F,this.additionalData=g}static CreateNew(P,Q,O){const b=P.va();return new A(P,b.pointerX,b.pointerY,b.meshUnderPointer||P,Q,O)}static CreateNewFromSprite(P,Q,O,b){return new A(P,Q.pointerX,Q.pointerY,Q.meshUnderPointer,O,b)}static CreateNewFromScene(P,Q){return new A(null,P.pointerX,P.pointerY,P.meshUnderPointer,Q)}static CreateNewFromPrimitive(P,Q,O,b){return new A(P,Q.x,Q.y,null,O,b)}}var j=O(2477),w=O(2482),W=O(940),r=O(552),K=O(598),T=O(582),x=O(2624);class u{constructor(){this.hoverCursor="",this.actions=[],this.isRecursive=!1,this.disposeWhenUnowned=!0}static get HasTriggers(){for(const P in u.Triggers)if(Object.prototype.hasOwnProperty.call(u.Triggers,P))return!0;return!1}static get HasPickTriggers(){for(const P in u.Triggers)if(Object.prototype.hasOwnProperty.call(u.Triggers,P)){const Q=parseInt(P);if(Q>=1&&Q<=7)return!0}return!1}static HasSpecificTrigger(P){for(const Q in u.Triggers)if(Object.prototype.hasOwnProperty.call(u.Triggers,Q)){if(parseInt(Q)===P)return!0}return!1}}u.Triggers={};var H,t,B,I,l,M,S,o=O(2626);!function(P){P[P.Generic=0]="Generic",P[P.Keyboard=1]="Keyboard",P[P.Mouse=2]="Mouse",P[P.Touch=3]="Touch",P[P.DualShock=4]="DualShock",P[P.Xbox=5]="Xbox",P[P.Switch=6]="Switch",P[P.DualSense=7]="DualSense"}(H||(H={})),function(P){P[P.Horizontal=0]="Horizontal",P[P.Vertical=1]="Vertical",P[P.LeftClick=2]="LeftClick",P[P.MiddleClick=3]="MiddleClick",P[P.RightClick=4]="RightClick",P[P.BrowserBack=5]="BrowserBack",P[P.BrowserForward=6]="BrowserForward",P[P.MouseWheelX=7]="MouseWheelX",P[P.MouseWheelY=8]="MouseWheelY",P[P.MouseWheelZ=9]="MouseWheelZ",P[P.Move=12]="Move"}(t||(t={})),function(P){P[P.Horizontal=0]="Horizontal",P[P.Vertical=1]="Vertical",P[P.LeftClick=2]="LeftClick",P[P.MiddleClick=3]="MiddleClick",P[P.RightClick=4]="RightClick",P[P.BrowserBack=5]="BrowserBack",P[P.BrowserForward=6]="BrowserForward",P[P.MouseWheelX=7]="MouseWheelX",P[P.MouseWheelY=8]="MouseWheelY",P[P.MouseWheelZ=9]="MouseWheelZ",P[P.DeltaHorizontal=10]="DeltaHorizontal",P[P.DeltaVertical=11]="DeltaVertical"}(B||(B={})),function(P){P[P.Cross=0]="Cross",P[P.Circle=1]="Circle",P[P.Square=2]="Square",P[P.Triangle=3]="Triangle",P[P.L1=4]="L1",P[P.R1=5]="R1",P[P.L2=6]="L2",P[P.R2=7]="R2",P[P.Share=8]="Share",P[P.Options=9]="Options",P[P.L3=10]="L3",P[P.R3=11]="R3",P[P.DPadUp=12]="DPadUp",P[P.DPadDown=13]="DPadDown",P[P.DPadLeft=14]="DPadLeft",P[P.DPadRight=15]="DPadRight",P[P.Home=16]="Home",P[P.TouchPad=17]="TouchPad",P[P.LStickXAxis=18]="LStickXAxis",P[P.LStickYAxis=19]="LStickYAxis",P[P.RStickXAxis=20]="RStickXAxis",P[P.RStickYAxis=21]="RStickYAxis"}(I||(I={})),function(P){P[P.Cross=0]="Cross",P[P.Circle=1]="Circle",P[P.Square=2]="Square",P[P.Triangle=3]="Triangle",P[P.L1=4]="L1",P[P.R1=5]="R1",P[P.L2=6]="L2",P[P.R2=7]="R2",P[P.Create=8]="Create",P[P.Options=9]="Options",P[P.L3=10]="L3",P[P.R3=11]="R3",P[P.DPadUp=12]="DPadUp",P[P.DPadDown=13]="DPadDown",P[P.DPadLeft=14]="DPadLeft",P[P.DPadRight=15]="DPadRight",P[P.Home=16]="Home",P[P.TouchPad=17]="TouchPad",P[P.LStickXAxis=18]="LStickXAxis",P[P.LStickYAxis=19]="LStickYAxis",P[P.RStickXAxis=20]="RStickXAxis",P[P.RStickYAxis=21]="RStickYAxis"}(l||(l={})),function(P){P[P.A=0]="A",P[P.B=1]="B",P[P.X=2]="X",P[P.Y=3]="Y",P[P.LB=4]="LB",P[P.RB=5]="RB",P[P.LT=6]="LT",P[P.RT=7]="RT",P[P.Back=8]="Back",P[P.Start=9]="Start",P[P.LS=10]="LS",P[P.RS=11]="RS",P[P.DPadUp=12]="DPadUp",P[P.DPadDown=13]="DPadDown",P[P.DPadLeft=14]="DPadLeft",P[P.DPadRight=15]="DPadRight",P[P.Home=16]="Home",P[P.LStickXAxis=17]="LStickXAxis",P[P.LStickYAxis=18]="LStickYAxis",P[P.RStickXAxis=19]="RStickXAxis",P[P.RStickYAxis=20]="RStickYAxis"}(M||(M={})),function(P){P[P.B=0]="B",P[P.A=1]="A",P[P.Y=2]="Y",P[P.X=3]="X",P[P.L=4]="L",P[P.R=5]="R",P[P.ZL=6]="ZL",P[P.ZR=7]="ZR",P[P.Minus=8]="Minus",P[P.Plus=9]="Plus",P[P.LS=10]="LS",P[P.RS=11]="RS",P[P.DPadUp=12]="DPadUp",P[P.DPadDown=13]="DPadDown",P[P.DPadLeft=14]="DPadLeft",P[P.DPadRight=15]="DPadRight",P[P.Home=16]="Home",P[P.Capture=17]="Capture",P[P.LStickXAxis=18]="LStickXAxis",P[P.LStickYAxis=19]="LStickYAxis",P[P.RStickXAxis=20]="RStickXAxis",P[P.RStickYAxis=21]="RStickYAxis"}(S||(S={}));var z=O(2634);class a{static CreateDeviceEvent(P,Q,O,b,F,g,m){switch(P){case H.Keyboard:return this._CreateKeyboardEvent(O,b,F,g);case H.Mouse:if(O===t.MouseWheelX||O===t.MouseWheelY||O===t.MouseWheelZ)return this._CreateWheelEvent(P,Q,O,b,F,g);case H.Touch:return this._CreatePointerEvent(P,Q,O,b,F,g,m);default:throw`Unable to generate event for device ${H[P]}`}}static _CreatePointerEvent(P,Q,O,b,F,g,m){const q=this._CreateMouseEvent(P,Q,O,b,F,g);P===H.Mouse?(q.deviceType=H.Mouse,q.pointerId=1,q.pointerType="mouse"):(q.deviceType=H.Touch,q.pointerId=m??Q,q.pointerType="touch");let R=0;return R+=F.pollInput(P,Q,t.LeftClick),R+=2*F.pollInput(P,Q,t.RightClick),R+=4*F.pollInput(P,Q,t.MiddleClick),q.buttons=R,O===t.Move?q.type="pointermove":O>=t.LeftClick&&O<=t.RightClick&&(q.type=1===b?"pointerdown":"pointerup",q.button=O-2),q}static _CreateWheelEvent(P,Q,O,b,F,g){const m=this._CreateMouseEvent(P,Q,O,b,F,g);switch(m.pointerId=1,m.type="wheel",m.deltaMode=z.e.DOM_DELTA_PIXEL,m.deltaX=0,m.deltaY=0,m.deltaZ=0,O){case t.MouseWheelX:m.deltaX=b;break;case t.MouseWheelY:m.deltaY=b;break;case t.MouseWheelZ:m.deltaZ=b}return m}static _CreateMouseEvent(P,Q,O,b,F,g){const m=this._CreateEvent(g),q=F.pollInput(P,Q,t.Horizontal),R=F.pollInput(P,Q,t.Vertical);return g?(m.movementX=0,m.movementY=0,m.offsetX=m.movementX-g.getBoundingClientRect().x,m.offsetY=m.movementY-g.getBoundingClientRect().y):(m.movementX=F.pollInput(P,Q,10),m.movementY=F.pollInput(P,Q,11),m.offsetX=0,m.offsetY=0),this._CheckNonCharacterKeys(m,F),m.clientX=q,m.clientY=R,m.x=q,m.y=R,m.deviceType=P,m.deviceSlot=Q,m.inputIndex=O,m}static _CreateKeyboardEvent(P,Q,O,b){const F=this._CreateEvent(b);return this._CheckNonCharacterKeys(F,O),F.deviceType=H.Keyboard,F.deviceSlot=0,F.inputIndex=P,F.type=1===Q?"keydown":"keyup",F.key=String.fromCharCode(P),F.keyCode=P,F}static _CheckNonCharacterKeys(P,Q){const O=Q.isDeviceAvailable(H.Keyboard),b=O&&1===Q.pollInput(H.Keyboard,0,18),F=O&&1===Q.pollInput(H.Keyboard,0,17),g=O&&(1===Q.pollInput(H.Keyboard,0,91)||1===Q.pollInput(H.Keyboard,0,92)||1===Q.pollInput(H.Keyboard,0,93)),m=O&&1===Q.pollInput(H.Keyboard,0,16);P.altKey=b,P.ctrlKey=F,P.metaKey=g,P.shiftKey=m}static _CreateEvent(P){const Q={preventDefault:()=>{}};return Q.target=P,Q}}class y{constructor(P,Q,O){this._nativeInput=_native.DeviceInputSystem?new _native.DeviceInputSystem(P,Q,((P,Q,b,F)=>{const g=a.CreateDeviceEvent(P,Q,b,F,this);O(P,Q,g)})):this._createDummyNativeInput()}pollInput(P,Q,O){return this._nativeInput.pollInput(P,Q,O)}isDeviceAvailable(P){return P===H.Mouse||P===H.Touch}dispose(){this._nativeInput.dispose()}_createDummyNativeInput(){return{pollInput:()=>0,isDeviceAvailable:()=>!1,dispose:()=>{}}}}const c=Object.keys(t).length/2;class h{constructor(P,Q,O,F){this._inputs=[],this._keyboardActive=!1,this._pointerActive=!1,this._usingSafari=b.d.IsSafari(),this._usingMacOs=(0,r.h)()&&/(Mac|iPhone|iPod|iPad)/i.test(navigator.platform),this._keyboardDownEvent=P=>{},this._keyboardUpEvent=P=>{},this._keyboardBlurEvent=P=>{},this._pointerMoveEvent=P=>{},this._pointerDownEvent=P=>{},this._pointerUpEvent=P=>{},this._pointerCancelEvent=P=>{},this._pointerCancelTouch=P=>{},this._pointerLeaveEvent=P=>{},this._pointerWheelEvent=P=>{},this._pointerBlurEvent=P=>{},this._pointerMacOsChromeOutEvent=P=>{},this._eventsAttached=!1,this._mouseId=-1,this._isUsingFirefox=(0,r.h)()&&navigator.userAgent&&-1!==navigator.userAgent.indexOf("Firefox"),this._isUsingChromium=(0,r.h)()&&navigator.userAgent&&-1!==navigator.userAgent.indexOf("Chrome"),this._maxTouchPoints=0,this._pointerInputClearObserver=null,this._gamepadConnectedEvent=P=>{},this._gamepadDisconnectedEvent=P=>{},this._eventPrefix=b.d.GetPointerPrefix(P),this._engine=P,this._onDeviceConnected=Q,this._onDeviceDisconnected=O,this._onInputChanged=F,this._mouseId=this._isUsingFirefox?0:1,this._enableEvents(),this._usingMacOs&&(this._metaKeys=[]),this._engine._onEngineViewChanged||(this._engine._onEngineViewChanged=()=>{this._enableEvents()})}pollInput(P,Q,O){const F=this._inputs[P][Q];if(!F)throw`Unable to find device ${H[P]}`;P>=H.DualShock&&P<=H.DualSense&&this._updateDevice(P,Q,O);const g=F[O];if(void 0===g)throw`Unable to find input ${O} for device ${H[P]} in slot ${Q}`;return O===t.Move&&b.d.Warn("Unable to provide information for PointerInput.Move.  Try using PointerInput.Horizontal or PointerInput.Vertical for move data."),g}isDeviceAvailable(P){return void 0!==this._inputs[P]}dispose(){this._onDeviceConnected=()=>{},this._onDeviceDisconnected=()=>{},this._onInputChanged=()=>{},delete this._engine._onEngineViewChanged,this._elementToAttachTo&&this._disableEvents()}_enableEvents(){const P=null===this||void 0===this?void 0:this._engine.getInputElement();if(P&&(!this._eventsAttached||this._elementToAttachTo!==P)){if(this._disableEvents(),this._inputs)for(const P of this._inputs)if(P)for(const Q in P){const O=P[+Q];if(O)for(let P=0;P<O.length;P++)O[P]=0}this._elementToAttachTo=P,this._elementToAttachTo.tabIndex=-1!==this._elementToAttachTo.tabIndex?this._elementToAttachTo.tabIndex:this._engine.canvasTabIndex,this._handleKeyActions(),this._handlePointerActions(),this._handleGamepadActions(),this._eventsAttached=!0,this._checkForConnectedDevices()}}_disableEvents(){this._elementToAttachTo&&(this._elementToAttachTo.removeEventListener("blur",this._keyboardBlurEvent),this._elementToAttachTo.removeEventListener("blur",this._pointerBlurEvent),this._elementToAttachTo.removeEventListener("keydown",this._keyboardDownEvent),this._elementToAttachTo.removeEventListener("keyup",this._keyboardUpEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"move",this._pointerMoveEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"down",this._pointerDownEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"up",this._pointerUpEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"cancel",this._pointerCancelEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"leave",this._pointerLeaveEvent),this._elementToAttachTo.removeEventListener(this._wheelEventName,this._pointerWheelEvent),this._usingMacOs&&this._isUsingChromium&&this._elementToAttachTo.removeEventListener("lostpointercapture",this._pointerMacOsChromeOutEvent),window.removeEventListener("gamepadconnected",this._gamepadConnectedEvent),window.removeEventListener("gamepaddisconnected",this._gamepadDisconnectedEvent)),this._pointerInputClearObserver&&this._engine.onEndFrameObservable.remove(this._pointerInputClearObserver),this._eventsAttached=!1}_checkForConnectedDevices(){if(navigator.getGamepads){const P=navigator.getGamepads();for(const Q of P)Q&&this._addGamePad(Q)}"function"===typeof matchMedia&&matchMedia("(pointer:fine)").matches&&this._addPointerDevice(H.Mouse,0,0,0)}_addGamePad(P){const Q=this._getGamepadDeviceType(P.id),O=P.index;this._gamepads=this._gamepads||new Array(P.index+1),this._registerDevice(Q,O,P.buttons.length+P.axes.length),this._gamepads[O]=Q}_addPointerDevice(P,Q,O,b){this._pointerActive||(this._pointerActive=!0),this._registerDevice(P,Q,c);const F=this._inputs[P][Q];F[0]=O,F[1]=b}_registerDevice(P,Q,O){if(void 0===Q)throw`Unable to register device ${H[P]} to undefined slot.`;if(this._inputs[P]||(this._inputs[P]={}),!this._inputs[P][Q]){const b=new Array(O);b.fill(0),this._inputs[P][Q]=b,this._onDeviceConnected(P,Q)}}_unregisterDevice(P,Q){this._inputs[P][Q]&&(delete this._inputs[P][Q],this._onDeviceDisconnected(P,Q))}_handleKeyActions(){this._keyboardDownEvent=P=>{this._keyboardActive||(this._keyboardActive=!0,this._registerDevice(H.Keyboard,0,255));const Q=this._inputs[H.Keyboard][0];if(Q){Q[P.keyCode]=1;const O=P;O.inputIndex=P.keyCode,this._usingMacOs&&P.metaKey&&"Meta"!==P.key&&(this._metaKeys.includes(P.keyCode)||this._metaKeys.push(P.keyCode)),this._onInputChanged(H.Keyboard,0,O)}},this._keyboardUpEvent=P=>{this._keyboardActive||(this._keyboardActive=!0,this._registerDevice(H.Keyboard,0,255));const Q=this._inputs[H.Keyboard][0];if(Q){Q[P.keyCode]=0;const O=P;if(O.inputIndex=P.keyCode,this._usingMacOs&&"Meta"===P.key&&this._metaKeys.length>0){for(const P of this._metaKeys){const O=a.CreateDeviceEvent(H.Keyboard,0,P,0,this,this._elementToAttachTo);Q[P]=0,this._onInputChanged(H.Keyboard,0,O)}this._metaKeys.splice(0,this._metaKeys.length)}this._onInputChanged(H.Keyboard,0,O)}},this._keyboardBlurEvent=()=>{if(this._keyboardActive){const P=this._inputs[H.Keyboard][0];for(let Q=0;Q<P.length;Q++)if(0!==P[Q]){P[Q]=0;const O=a.CreateDeviceEvent(H.Keyboard,0,Q,0,this,this._elementToAttachTo);this._onInputChanged(H.Keyboard,0,O)}this._usingMacOs&&this._metaKeys.splice(0,this._metaKeys.length)}},this._elementToAttachTo.addEventListener("keydown",this._keyboardDownEvent),this._elementToAttachTo.addEventListener("keyup",this._keyboardUpEvent),this._elementToAttachTo.addEventListener("blur",this._keyboardBlurEvent)}_handlePointerActions(){this._maxTouchPoints=(0,r.h)()&&navigator.maxTouchPoints||2,this._activeTouchIds||(this._activeTouchIds=new Array(this._maxTouchPoints));for(let b=0;b<this._maxTouchPoints;b++)this._activeTouchIds[b]=-1;this._pointerMoveEvent=P=>{const Q=this._getPointerType(P);let O=Q===H.Mouse?0:this._activeTouchIds.indexOf(P.pointerId);if(Q===H.Touch&&-1===O){const F=this._activeTouchIds.indexOf(-1);if(!(F>=0))return void b.d.Warn(`Max number of touches exceeded.  Ignoring touches in excess of ${this._maxTouchPoints}`);O=F,this._activeTouchIds[F]=P.pointerId,this._onDeviceConnected(Q,O)}this._inputs[Q]||(this._inputs[Q]={}),this._inputs[Q][O]||this._addPointerDevice(Q,O,P.clientX,P.clientY);const F=this._inputs[Q][O];if(F){const b=P;b.inputIndex=t.Move,F[t.Horizontal]=P.clientX,F[t.Vertical]=P.clientY,Q===H.Touch&&0===F[t.LeftClick]&&(F[t.LeftClick]=1),void 0===P.pointerId&&(P.pointerId=this._mouseId),this._onInputChanged(Q,O,b),this._usingSafari||-1===P.button||(b.inputIndex=P.button+2,F[P.button+2]=F[P.button+2]?0:1,this._onInputChanged(Q,O,b))}},this._pointerDownEvent=P=>{const Q=this._getPointerType(P);let O=Q===H.Mouse?0:P.pointerId;if(Q===H.Touch){let Q=this._activeTouchIds.indexOf(P.pointerId);if(-1===Q&&(Q=this._activeTouchIds.indexOf(-1)),!(Q>=0))return void b.d.Warn(`Max number of touches exceeded.  Ignoring touches in excess of ${this._maxTouchPoints}`);O=Q,this._activeTouchIds[Q]=P.pointerId}this._inputs[Q]||(this._inputs[Q]={}),this._inputs[Q][O]?Q===H.Touch&&this._onDeviceConnected(Q,O):this._addPointerDevice(Q,O,P.clientX,P.clientY);const F=this._inputs[Q][O];if(F){const b=F[t.Horizontal],m=F[t.Vertical];if(Q===H.Mouse){if(void 0===P.pointerId&&(P.pointerId=this._mouseId),!document.pointerLockElement)try{this._elementToAttachTo.setPointerCapture(this._mouseId)}catch(g){}}else if(P.pointerId&&!document.pointerLockElement)try{this._elementToAttachTo.setPointerCapture(P.pointerId)}catch(g){}F[t.Horizontal]=P.clientX,F[t.Vertical]=P.clientY,F[P.button+2]=1;const q=P;q.inputIndex=P.button+2,this._onInputChanged(Q,O,q),b===P.clientX&&m===P.clientY||(q.inputIndex=t.Move,this._onInputChanged(Q,O,q))}},this._pointerUpEvent=P=>{var Q;const O=this._getPointerType(P),b=O===H.Mouse?0:this._activeTouchIds.indexOf(P.pointerId);if(O===H.Touch){if(-1===b)return;this._activeTouchIds[b]=-1}const F=null===(Q=this._inputs[O])||void 0===Q?void 0:Q[b];let g=P.button,m=F&&0!==F[g+2];if(!m&&this._isUsingFirefox&&this._usingMacOs&&F&&(g=2===g?0:2,m=0!==F[g+2]),m){var q,R,X,C;const Q=F[t.Horizontal],m=F[t.Vertical];F[t.Horizontal]=P.clientX,F[t.Vertical]=P.clientY,F[g+2]=0;const L=P;void 0===P.pointerId&&(P.pointerId=this._mouseId),Q===P.clientX&&m===P.clientY||(L.inputIndex=t.Move,this._onInputChanged(O,b,L)),L.inputIndex=g+2,O===H.Mouse&&this._mouseId>=0&&null!==(q=(R=this._elementToAttachTo).hasPointerCapture)&&void 0!==q&&q.call(R,this._mouseId)?this._elementToAttachTo.releasePointerCapture(this._mouseId):P.pointerId&&null!==(X=(C=this._elementToAttachTo).hasPointerCapture)&&void 0!==X&&X.call(C,P.pointerId)&&this._elementToAttachTo.releasePointerCapture(P.pointerId),this._onInputChanged(O,b,L),O===H.Touch&&this._onDeviceDisconnected(O,b)}},this._pointerCancelTouch=P=>{var Q,O;const b=this._activeTouchIds.indexOf(P);if(-1===b)return;null!==(Q=(O=this._elementToAttachTo).hasPointerCapture)&&void 0!==Q&&Q.call(O,P)&&this._elementToAttachTo.releasePointerCapture(P),this._inputs[H.Touch][b][t.LeftClick]=0;const F=a.CreateDeviceEvent(H.Touch,b,t.LeftClick,0,this,this._elementToAttachTo,P);this._onInputChanged(H.Touch,b,F),this._activeTouchIds[b]=-1,this._onDeviceDisconnected(H.Touch,b)},this._pointerCancelEvent=P=>{if("mouse"===P.pointerType){var Q,O;const P=this._inputs[H.Mouse][0];this._mouseId>=0&&null!==(Q=(O=this._elementToAttachTo).hasPointerCapture)&&void 0!==Q&&Q.call(O,this._mouseId)&&this._elementToAttachTo.releasePointerCapture(this._mouseId);for(let Q=t.LeftClick;Q<=t.BrowserForward;Q++)if(1===P[Q]){P[Q]=0;const O=a.CreateDeviceEvent(H.Mouse,0,Q,0,this,this._elementToAttachTo);this._onInputChanged(H.Mouse,0,O)}}else this._pointerCancelTouch(P.pointerId)},this._pointerLeaveEvent=P=>{"pen"===P.pointerType&&this._pointerCancelTouch(P.pointerId)},this._wheelEventName="onwheel"in document.createElement("div")?"wheel":void 0!==document.onmousewheel?"mousewheel":"DOMMouseScroll";let P=!1;const Q=function(){};try{const O=Object.defineProperty({},"passive",{get:function(){P=!0}});this._elementToAttachTo.addEventListener("test",Q,O),this._elementToAttachTo.removeEventListener("test",Q,O)}catch(O){}this._pointerBlurEvent=()=>{if(this.isDeviceAvailable(H.Mouse)){var P,Q;const O=this._inputs[H.Mouse][0];this._mouseId>=0&&null!==(P=(Q=this._elementToAttachTo).hasPointerCapture)&&void 0!==P&&P.call(Q,this._mouseId)&&this._elementToAttachTo.releasePointerCapture(this._mouseId);for(let P=t.LeftClick;P<=t.BrowserForward;P++)if(1===O[P]){O[P]=0;const Q=a.CreateDeviceEvent(H.Mouse,0,P,0,this,this._elementToAttachTo);this._onInputChanged(H.Mouse,0,Q)}}if(this.isDeviceAvailable(H.Touch)){const P=this._inputs[H.Touch];for(let Q=0;Q<this._activeTouchIds.length;Q++){var O,b,F;const g=this._activeTouchIds[Q];if(null!==(O=(b=this._elementToAttachTo).hasPointerCapture)&&void 0!==O&&O.call(b,g)&&this._elementToAttachTo.releasePointerCapture(g),-1!==g&&1===(null===(F=P[Q])||void 0===F?void 0:F[t.LeftClick])){P[Q][t.LeftClick]=0;const O=a.CreateDeviceEvent(H.Touch,Q,t.LeftClick,0,this,this._elementToAttachTo,g);this._onInputChanged(H.Touch,Q,O),this._activeTouchIds[Q]=-1,this._onDeviceDisconnected(H.Touch,Q)}}}},this._pointerWheelEvent=P=>{const Q=H.Mouse;this._inputs[Q]||(this._inputs[Q]=[]),this._inputs[Q][0]||(this._pointerActive=!0,this._registerDevice(Q,0,c));const O=this._inputs[Q][0];if(O){O[t.MouseWheelX]=P.deltaX||0,O[t.MouseWheelY]=P.deltaY||P.wheelDelta||0,O[t.MouseWheelZ]=P.deltaZ||0;const b=P;void 0===P.pointerId&&(P.pointerId=this._mouseId),0!==O[t.MouseWheelX]&&(b.inputIndex=t.MouseWheelX,this._onInputChanged(Q,0,b)),0!==O[t.MouseWheelY]&&(b.inputIndex=t.MouseWheelY,this._onInputChanged(Q,0,b)),0!==O[t.MouseWheelZ]&&(b.inputIndex=t.MouseWheelZ,this._onInputChanged(Q,0,b))}},this._usingMacOs&&this._isUsingChromium&&(this._pointerMacOsChromeOutEvent=P=>{P.buttons>1&&this._pointerCancelEvent(P)},this._elementToAttachTo.addEventListener("lostpointercapture",this._pointerMacOsChromeOutEvent)),this._elementToAttachTo.addEventListener(this._eventPrefix+"move",this._pointerMoveEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"down",this._pointerDownEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"up",this._pointerUpEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"cancel",this._pointerCancelEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"leave",this._pointerLeaveEvent),this._elementToAttachTo.addEventListener("blur",this._pointerBlurEvent),this._elementToAttachTo.addEventListener(this._wheelEventName,this._pointerWheelEvent,!!P&&{passive:!1}),this._pointerInputClearObserver=this._engine.onEndFrameObservable.add((()=>{if(this.isDeviceAvailable(H.Mouse)){const P=this._inputs[H.Mouse][0];P[t.MouseWheelX]=0,P[t.MouseWheelY]=0,P[t.MouseWheelZ]=0}}))}_handleGamepadActions(){this._gamepadConnectedEvent=P=>{this._addGamePad(P.gamepad)},this._gamepadDisconnectedEvent=P=>{if(this._gamepads){const Q=this._getGamepadDeviceType(P.gamepad.id),O=P.gamepad.index;this._unregisterDevice(Q,O),delete this._gamepads[O]}},window.addEventListener("gamepadconnected",this._gamepadConnectedEvent),window.addEventListener("gamepaddisconnected",this._gamepadDisconnectedEvent)}_updateDevice(P,Q,O){const b=navigator.getGamepads()[Q];if(b&&P===this._gamepads[Q]){const F=this._inputs[P][Q];O>=b.buttons.length?F[O]=b.axes[O-b.buttons.length].valueOf():F[O]=b.buttons[O].value}}_getGamepadDeviceType(P){return-1!==P.indexOf("054c")?-1!==P.indexOf("0ce6")?H.DualSense:H.DualShock:-1!==P.indexOf("Xbox One")||-1!==P.search("Xbox 360")||-1!==P.search("xinput")?H.Xbox:-1!==P.indexOf("057e")?H.Switch:H.Generic}_getPointerType(P){let Q=H.Mouse;return("touch"===P.pointerType||"pen"===P.pointerType||P.touches)&&(Q=H.Touch),Q}}class V{constructor(P,Q){let O=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.deviceType=Q,this.deviceSlot=O,this.onInputChangedObservable=new g.d,this._deviceInputSystem=P}getInput(P){return this._deviceInputSystem.pollInput(this.deviceType,this.deviceSlot,P)}}class s{constructor(P){this._registeredManagers=new Array,this._refCount=0,this.registerManager=P=>{for(let Q=0;Q<this._devices.length;Q++){const O=this._devices[Q];for(const b in O){const O=+b;P._addDevice(new V(this._deviceInputSystem,Q,O))}}this._registeredManagers.push(P)},this.unregisterManager=P=>{const Q=this._registeredManagers.indexOf(P);Q>-1&&this._registeredManagers.splice(Q,1)};const Q=Object.keys(H).length/2;this._devices=new Array(Q);const O=(P,Q)=>{this._devices[P]||(this._devices[P]=new Array),this._devices[P][Q]||(this._devices[P][Q]=Q);for(const O of this._registeredManagers){const b=new V(this._deviceInputSystem,P,Q);O._addDevice(b)}},b=(P,Q)=>{var O;null!==(O=this._devices[P])&&void 0!==O&&O[Q]&&delete this._devices[P][Q];for(const b of this._registeredManagers)b._removeDevice(P,Q)},F=(P,Q,O)=>{if(O)for(const b of this._registeredManagers)b._onInputChanged(P,Q,O)};"undefined"!==typeof _native?this._deviceInputSystem=new y(O,b,F):this._deviceInputSystem=new h(P,O,b,F)}dispose(){this._deviceInputSystem.dispose()}}class J{getDeviceSource(P,Q){if(void 0===Q){if(void 0===this._firstDevice[P])return null;Q=this._firstDevice[P]}return this._devices[P]&&void 0!==this._devices[P][Q]?this._devices[P][Q]:null}getDeviceSources(P){return this._devices[P]?this._devices[P].filter((P=>!!P)):[]}constructor(P){const Q=Object.keys(H).length/2;this._devices=new Array(Q),this._firstDevice=new Array(Q),this._engine=P,this._engine._deviceSourceManager||(this._engine._deviceSourceManager=new s(P)),this._engine._deviceSourceManager._refCount++,this.onDeviceConnectedObservable=new g.d((P=>{for(const Q of this._devices)if(Q)for(const O of Q)O&&this.onDeviceConnectedObservable.notifyObserver(P,O)})),this.onDeviceDisconnectedObservable=new g.d,this._engine._deviceSourceManager.registerManager(this),this._onDisposeObserver=P.ik.add((()=>{this.dispose()}))}dispose(){this.onDeviceConnectedObservable.clear(),this.onDeviceDisconnectedObservable.clear(),this._engine._deviceSourceManager&&(this._engine._deviceSourceManager.unregisterManager(this),--this._engine._deviceSourceManager._refCount<1&&(this._engine._deviceSourceManager.dispose(),delete this._engine._deviceSourceManager)),this._engine.ik.remove(this._onDisposeObserver)}_addDevice(P){this._devices[P.deviceType]||(this._devices[P.deviceType]=[]),this._devices[P.deviceType][P.deviceSlot]||(this._devices[P.deviceType][P.deviceSlot]=P,this._updateFirstDevices(P.deviceType)),this.onDeviceConnectedObservable.notifyObservers(P)}_removeDevice(P,Q){var O,b;const F=null===(O=this._devices[P])||void 0===O?void 0:O[Q];this.onDeviceDisconnectedObservable.notifyObservers(F),null!==(b=this._devices[P])&&void 0!==b&&b[Q]&&delete this._devices[P][Q],this._updateFirstDevices(P)}_onInputChanged(P,Q,O){var b,F;null===(b=this._devices[P])||void 0===b||null===(F=b[Q])||void 0===F||F.onInputChangedObservable.notifyObservers(O)}_updateFirstDevices(P){switch(P){case H.Keyboard:case H.Mouse:this._firstDevice[P]=0;break;case H.Touch:case H.DualSense:case H.DualShock:case H.Xbox:case H.Switch:case H.Generic:{delete this._firstDevice[P];const Q=this._devices[P];if(Q)for(let O=0;O<Q.length;O++)if(Q[O]){this._firstDevice[P]=O;break}break}}}}var e=O(2642);class i{constructor(){this._singleClick=!1,this._doubleClick=!1,this._hasSwiped=!1,this._ignore=!1}get singleClick(){return this._singleClick}get doubleClick(){return this._doubleClick}get hasSwiped(){return this._hasSwiped}get ignore(){return this._ignore}set singleClick(P){this._singleClick=P}set doubleClick(P){this._doubleClick=P}set hasSwiped(P){this._hasSwiped=P}set ignore(P){this._ignore=P}}class Y{constructor(P){this._alreadyAttached=!1,this._meshPickProceed=!1,this._currentPickResult=null,this._previousPickResult=null,this._activePointerIds=new Array,this._activePointerIdsCount=0,this._doubleClickOccured=!1,this._isSwiping=!1,this._swipeButtonPressed=-1,this._skipPointerTap=!1,this._isMultiTouchGesture=!1,this._pointerX=0,this._pointerY=0,this._startingPointerPosition=new X.i(0,0),this._previousStartingPointerPosition=new X.i(0,0),this._startingPointerTime=0,this._previousStartingPointerTime=0,this._pointerCaptures={},this._meshUnderPointerId={},this._movePointerInfo=null,this._cameraObserverCount=0,this._delayedClicks=[null,null,null,null,null],this._deviceSourceManager=null,this._scene=P||K.c.LastCreatedScene,this._scene}get meshUnderPointer(){return this._movePointerInfo&&(this._movePointerInfo._generatePickInfo(),this._movePointerInfo=null),this._pointerOverMesh}getMeshUnderPointerByPointerId(P){return this._meshUnderPointerId[P]||null}get unTranslatedPointer(){return new X.i(this._unTranslatedPointerX,this._unTranslatedPointerY)}get pointerX(){return this._pointerX}set pointerX(P){this._pointerX=P}get pointerY(){return this._pointerY}set pointerY(P){this._pointerY=P}_updatePointerPosition(P){const Q=this._scene.getEngine().getInputElementClientRect();Q&&(this._pointerX=P.clientX-Q.left,this._pointerY=P.clientY-Q.top,this._unTranslatedPointerX=this._pointerX,this._unTranslatedPointerY=this._pointerY)}_processPointerMove(P,Q){const O=this._scene,b=O.getEngine(),F=b.getInputElement();F&&(F.tabIndex=b.canvasTabIndex,O.doNotHandleCursors||(F.style.cursor=O.defaultCursor)),this._setCursorAndPointerOverMesh(P,Q,O);for(const R of O._pointerMoveStage){var g;const O=!(null===(g=P=P||this._pickMove(Q))||void 0===g||!g.pickedMesh);P=R.action(this._unTranslatedPointerX,this._unTranslatedPointerY,P,O,F)}const m=Q.inputIndex>=t.MouseWheelX&&Q.inputIndex<=t.MouseWheelZ?x.c.POINTERWHEEL:x.c.POINTERMOVE;let q;O.onPointerMove&&(P=P||this._pickMove(Q),O.onPointerMove(Q,P,m)),P?(q=new x.j(m,Q,P),this._setRayOnPointerInfo(P,Q)):(q=new x.j(m,Q,null,this),this._movePointerInfo=q),O.onPointerObservable.hasObservers()&&O.onPointerObservable.notifyObservers(q,m)}_setRayOnPointerInfo(P,Q){const O=this._scene;P&&e.d._IsPickingAvailable&&(P.ray||(P.ray=O.createPickingRay(Q.offsetX,Q.offsetY,X.c.Identity(),O.activeCamera)))}_addCameraPointerObserver(P,Q){return this._cameraObserverCount++,this._scene.onPointerObservable.add(P,Q)}_removeCameraPointerObserver(P){return this._cameraObserverCount--,this._scene.onPointerObservable.remove(P)}_checkForPicking(){return!!(this._scene.onPointerObservable.observers.length>this._cameraObserverCount||this._scene.onPointerPick)}_checkPrePointerObservable(P,Q,O){const b=this._scene,F=new x.g(O,Q,this._unTranslatedPointerX,this._unTranslatedPointerY);return P&&(F.originalPickingInfo=P,F.ray=P.ray,"xr-near"===Q.pointerType&&P.originMesh&&(F.nearInteractionPickingInfo=P)),b.onPrePointerObservable.notifyObservers(F,O),!!F.skipOnPointerObservable}_pickMove(P){const Q=this._scene,O=Q._d(this._unTranslatedPointerX,this._unTranslatedPointerY,Q.pointerMovePredicate,Q.pointerMoveFastCheck,Q.cameraToUseForPointers,Q.pointerMoveTrianglePredicate);return this._setCursorAndPointerOverMesh(O,P,Q),O}_setCursorAndPointerOverMesh(P,Q,O){const b=O.getEngine().getInputElement();if(null!==P&&void 0!==P&&P.pickedMesh){if(this.setPointerOverMesh(P.pickedMesh,Q.pointerId,P,Q),!O.doNotHandleCursors&&b&&this._pointerOverMesh){const P=this._pointerOverMesh._getActionManagerForTrigger();P&&P.hasPointerTriggers&&(b.style.cursor=P.hoverCursor||O.hoverCursor)}}else this.setPointerOverMesh(null,Q.pointerId,P,Q)}simulatePointerMove(P,Q){const O=new PointerEvent("pointermove",Q);O.inputIndex=t.Move,this._checkPrePointerObservable(P,O,x.c.POINTERMOVE)||this._processPointerMove(P,O)}simulatePointerDown(P,Q){const O=new PointerEvent("pointerdown",Q);O.inputIndex=O.button+2,this._checkPrePointerObservable(P,O,x.c.POINTERDOWN)||this._processPointerDown(P,O)}_processPointerDown(P,Q){var O;const b=this._scene;if(null!==(O=P)&&void 0!==O&&O.pickedMesh){this._pickedDownMesh=P.pickedMesh;const O=P.pickedMesh._getActionManagerForTrigger();if(O){if(O.hasPickTriggers)switch(O.processTrigger(5,new A(P.pickedMesh,b.pointerX,b.pointerY,P.pickedMesh,Q,P)),Q.button){case 0:O.processTrigger(2,new A(P.pickedMesh,b.pointerX,b.pointerY,P.pickedMesh,Q,P));break;case 1:O.processTrigger(4,new A(P.pickedMesh,b.pointerX,b.pointerY,P.pickedMesh,Q,P));break;case 2:O.processTrigger(3,new A(P.pickedMesh,b.pointerX,b.pointerY,P.pickedMesh,Q,P))}O.hasSpecificTrigger(8)&&window.setTimeout((()=>{const P=b._d(this._unTranslatedPointerX,this._unTranslatedPointerY,(P=>P.zf&&P.isVisible&&P.isReady()&&P.actionManager&&P.actionManager.hasSpecificTrigger(8)&&P===this._pickedDownMesh),!1,b.cameraToUseForPointers);null!==P&&void 0!==P&&P.pickedMesh&&O&&0!==this._activePointerIdsCount&&Date.now()-this._startingPointerTime>Y.LongPressDelay&&!this._isPointerSwiping()&&(this._startingPointerTime=0,O.processTrigger(8,A.CreateNew(P.pickedMesh,Q)))}),Y.LongPressDelay)}}else for(const m of b._pointerDownStage)P=m.action(this._unTranslatedPointerX,this._unTranslatedPointerY,P,Q,!1);let F;const g=x.c.POINTERDOWN;P?(b.onPointerDown&&b.onPointerDown(Q,P,g),F=new x.j(g,Q,P),this._setRayOnPointerInfo(P,Q)):F=new x.j(g,Q,null,this),b.onPointerObservable.hasObservers()&&b.onPointerObservable.notifyObservers(F,g)}_isPointerSwiping(){return this._isSwiping}simulatePointerUp(P,Q,O){const b=new PointerEvent("pointerup",Q);b.inputIndex=t.Move;const F=new i;O?F.doubleClick=!0:F.singleClick=!0,this._checkPrePointerObservable(P,b,x.c.POINTERUP)||this._processPointerUp(P,b,F)}_processPointerUp(P,Q,O){var b;const F=this._scene;if(null!==(b=P)&&void 0!==b&&b.pickedMesh){if(this._pickedUpMesh=P.pickedMesh,this._pickedDownMesh===this._pickedUpMesh&&(F.onPointerPick&&F.onPointerPick(Q,P),O.singleClick&&!O.ignore&&F.onPointerObservable.observers.length>this._cameraObserverCount)){const O=x.c.POINTERPICK,b=new x.j(O,Q,P);this._setRayOnPointerInfo(P,Q),F.onPointerObservable.notifyObservers(b,O)}const b=P.pickedMesh._getActionManagerForTrigger();if(b&&!O.ignore){b.processTrigger(7,A.CreateNew(P.pickedMesh,Q,P)),!O.hasSwiped&&O.singleClick&&b.processTrigger(1,A.CreateNew(P.pickedMesh,Q,P));const F=P.pickedMesh._getActionManagerForTrigger(6);O.doubleClick&&F&&F.processTrigger(6,A.CreateNew(P.pickedMesh,Q,P))}}else if(!O.ignore)for(const g of F._pointerUpStage)P=g.action(this._unTranslatedPointerX,this._unTranslatedPointerY,P,Q,O.doubleClick);if(this._pickedDownMesh&&this._pickedDownMesh!==this._pickedUpMesh){const P=this._pickedDownMesh._getActionManagerForTrigger(16);P&&P.processTrigger(16,A.CreateNew(this._pickedDownMesh,Q))}if(!O.ignore){const b=new x.j(x.c.POINTERUP,Q,P);if(this._setRayOnPointerInfo(P,Q),F.onPointerObservable.notifyObservers(b,x.c.POINTERUP),F.onPointerUp&&F.onPointerUp(Q,P,x.c.POINTERUP),!O.hasSwiped&&!this._skipPointerTap&&!this._isMultiTouchGesture){let b=0;if(O.singleClick?b=x.c.POINTERTAP:O.doubleClick&&(b=x.c.POINTERDOUBLETAP),b){const O=new x.j(b,Q,P);F.onPointerObservable.hasObservers()&&F.onPointerObservable.hasSpecificMask(b)&&F.onPointerObservable.notifyObservers(O,b)}}}}isPointerCaptured(){let P=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this._pointerCaptures[P]}attachControl(){let P=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],Q=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],O=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],b=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const F=this._scene,g=F.getEngine();b||(b=g.getInputElement()),this._alreadyAttached&&this.$j(),b&&(this._alreadyAttachedTo=b),this._deviceSourceManager=new J(g),this._initActionManager=P=>{if(!this._meshPickProceed){const Q=F.skipPointerUpPicking||0===F._registeredActions&&!this._checkForPicking()&&!F.onPointerUp?null:F._d(this._unTranslatedPointerX,this._unTranslatedPointerY,F.pointerUpPredicate,F.pointerUpFastCheck,F.cameraToUseForPointers,F.pointerUpTrianglePredicate);this._currentPickResult=Q,Q&&(P=Q.hit&&Q.pickedMesh?Q.pickedMesh._getActionManagerForTrigger():null),this._meshPickProceed=!0}return P},this._delayedSimpleClick=(P,Q,O)=>{if((Date.now()-this._previousStartingPointerTime>Y.DoubleClickDelay&&!this._doubleClickOccured||P!==this._previousButtonPressed)&&(this._doubleClickOccured=!1,Q.singleClick=!0,Q.ignore=!1,this._delayedClicks[P])){const Q=this._delayedClicks[P].evt,O=x.c.POINTERTAP,b=new x.j(O,Q,this._currentPickResult);F.onPointerObservable.hasObservers()&&F.onPointerObservable.hasSpecificMask(O)&&F.onPointerObservable.notifyObservers(b,O),this._delayedClicks[P]=null}},this._initClickEvent=(P,Q,O,b)=>{const F=new i;this._currentPickResult=null;let g=null,m=P.hasSpecificMask(x.c.POINTERPICK)||Q.hasSpecificMask(x.c.POINTERPICK)||P.hasSpecificMask(x.c.POINTERTAP)||Q.hasSpecificMask(x.c.POINTERTAP)||P.hasSpecificMask(x.c.POINTERDOUBLETAP)||Q.hasSpecificMask(x.c.POINTERDOUBLETAP);!m&&u&&(g=this._initActionManager(g,F),g&&(m=g.hasPickTriggers));let q=!1;if(m=m&&!this._isMultiTouchGesture,m){const m=O.button;if(F.hasSwiped=this._isPointerSwiping(),!F.hasSwiped){let C=!Y.ExclusiveDoubleClickMode;if(C||(C=!P.hasSpecificMask(x.c.POINTERDOUBLETAP)&&!Q.hasSpecificMask(x.c.POINTERDOUBLETAP),C&&!u.HasSpecificTrigger(6)&&(g=this._initActionManager(g,F),g&&(C=!g.hasSpecificTrigger(6)))),C)(Date.now()-this._previousStartingPointerTime>Y.DoubleClickDelay||m!==this._previousButtonPressed)&&(F.singleClick=!0,b(F,this._currentPickResult),q=!0);else{const P={evt:O,clickInfo:F,timeoutId:window.setTimeout(this._delayedSimpleClick.bind(this,m,F,b),Y.DoubleClickDelay)};this._delayedClicks[m]=P}let L=P.hasSpecificMask(x.c.POINTERDOUBLETAP)||Q.hasSpecificMask(x.c.POINTERDOUBLETAP);if(!L&&u.HasSpecificTrigger(6)&&(g=this._initActionManager(g,F),g&&(L=g.hasSpecificTrigger(6))),L)if(m===this._previousButtonPressed&&Date.now()-this._previousStartingPointerTime<Y.DoubleClickDelay&&!this._doubleClickOccured){if(F.hasSwiped||this._isPointerSwiping())if(this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=m,Y.ExclusiveDoubleClickMode){var R;if(this._delayedClicks[m])clearTimeout(null===(R=this._delayedClicks[m])||void 0===R?void 0:R.timeoutId),this._delayedClicks[m]=null;b(F,this._previousPickResult)}else b(F,this._currentPickResult);else{var X;if(this._previousStartingPointerTime=0,this._doubleClickOccured=!0,F.doubleClick=!0,F.ignore=!1,Y.ExclusiveDoubleClickMode&&this._delayedClicks[m])clearTimeout(null===(X=this._delayedClicks[m])||void 0===X?void 0:X.timeoutId),this._delayedClicks[m]=null;b(F,this._currentPickResult)}q=!0}else this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=m}}q||b(F,this._currentPickResult)},this._onPointerMove=P=>{if(this._updatePointerPosition(P),this._isSwiping||-1===this._swipeButtonPressed||(this._isSwiping=Math.abs(this._startingPointerPosition.x-this._pointerX)>Y.DragMovementThreshold||Math.abs(this._startingPointerPosition.y-this._pointerY)>Y.DragMovementThreshold),g.isPointerLock&&g._verifyPointerLock(),this._checkPrePointerObservable(null,P,P.inputIndex>=t.MouseWheelX&&P.inputIndex<=t.MouseWheelZ?x.c.POINTERWHEEL:x.c.POINTERMOVE))return;if(!F.cameraToUseForPointers&&!F.activeCamera)return;if(F.Nl)return void this._processPointerMove(new G.d,P);F.pointerMovePredicate||(F.pointerMovePredicate=P=>P.zf&&P.isVisible&&P.isReady()&&P.isEnabled()&&(P.enablePointerMoveEvents||F.constantlyUpdateMeshUnderPointer||null!==P._getActionManagerForTrigger())&&(!F.cameraToUseForPointers||0!==(F.cameraToUseForPointers.layerMask&P.layerMask)));const Q=F._registeredActions>0||F.constantlyUpdateMeshUnderPointer?this._pickMove(P):null;this._processPointerMove(Q,P)},this._onPointerDown=P=>{const Q=this._activePointerIds.indexOf(-1);if(-1===Q?this._activePointerIds.push(P.pointerId):this._activePointerIds[Q]=P.pointerId,this._activePointerIdsCount++,this._pickedDownMesh=null,this._meshPickProceed=!1,Y.ExclusiveDoubleClickMode)for(let b=0;b<this._delayedClicks.length;b++)if(this._delayedClicks[b])if(P.button===b){var O;clearTimeout(null===(O=this._delayedClicks[b])||void 0===O?void 0:O.timeoutId)}else{const P=this._delayedClicks[b].clickInfo;this._doubleClickOccured=!1,P.singleClick=!0,P.ignore=!1;const Q=this._delayedClicks[b].evt,O=x.c.POINTERTAP,g=new x.j(O,Q,this._currentPickResult);F.onPointerObservable.hasObservers()&&F.onPointerObservable.hasSpecificMask(O)&&F.onPointerObservable.notifyObservers(g,O),this._delayedClicks[b]=null}if(this._updatePointerPosition(P),-1===this._swipeButtonPressed&&(this._swipeButtonPressed=P.button),F.preventDefaultOnPointerDown&&b&&(P.preventDefault(),b.focus()),this._startingPointerPosition.x=this._pointerX,this._startingPointerPosition.y=this._pointerY,this._startingPointerTime=Date.now(),this._checkPrePointerObservable(null,P,x.c.POINTERDOWN))return;if(!F.cameraToUseForPointers&&!F.activeCamera)return;let g;this._pointerCaptures[P.pointerId]=!0,F.pointerDownPredicate||(F.pointerDownPredicate=P=>P.zf&&P.isVisible&&P.isReady()&&P.isEnabled()&&(!F.cameraToUseForPointers||0!==(F.cameraToUseForPointers.layerMask&P.layerMask))),this._pickedDownMesh=null,g=F.skipPointerDownPicking||0===F._registeredActions&&!this._checkForPicking()&&!F.onPointerDown?new G.d:F._d(this._unTranslatedPointerX,this._unTranslatedPointerY,F.pointerDownPredicate,F.pointerDownFastCheck,F.cameraToUseForPointers,F.pointerDownTrianglePredicate),this._processPointerDown(g,P)},this._onPointerUp=P=>{const Q=this._activePointerIds.indexOf(P.pointerId);-1!==Q&&(this._activePointerIds[Q]=-1,this._activePointerIdsCount--,this._pickedUpMesh=null,this._meshPickProceed=!1,this._updatePointerPosition(P),F.preventDefaultOnPointerUp&&b&&(P.preventDefault(),b.focus()),this._initClickEvent(F.onPrePointerObservable,F.onPointerObservable,P,((Q,O)=>{if(F.onPrePointerObservable.hasObservers()&&(this._skipPointerTap=!1,!Q.ignore)){if(this._checkPrePointerObservable(null,P,x.c.POINTERUP))return this._swipeButtonPressed===P.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1),void(0===P.buttons&&(this._pointerCaptures[P.pointerId]=!1));Q.hasSwiped||(Q.singleClick&&F.onPrePointerObservable.hasSpecificMask(x.c.POINTERTAP)&&this._checkPrePointerObservable(null,P,x.c.POINTERTAP)&&(this._skipPointerTap=!0),Q.doubleClick&&F.onPrePointerObservable.hasSpecificMask(x.c.POINTERDOUBLETAP)&&this._checkPrePointerObservable(null,P,x.c.POINTERDOUBLETAP)&&(this._skipPointerTap=!0))}this._pointerCaptures[P.pointerId]?(0===P.buttons&&(this._pointerCaptures[P.pointerId]=!1),(F.cameraToUseForPointers||F.activeCamera)&&(F.pointerUpPredicate||(F.pointerUpPredicate=P=>P.zf&&P.isVisible&&P.isReady()&&P.isEnabled()&&(!F.cameraToUseForPointers||0!==(F.cameraToUseForPointers.layerMask&P.layerMask))),!this._meshPickProceed&&(u&&u.HasTriggers||this._checkForPicking()||F.onPointerUp)&&this._initActionManager(null,Q),O||(O=this._currentPickResult),this._processPointerUp(O,P,Q),this._previousPickResult=this._currentPickResult,this._swipeButtonPressed===P.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1))):this._swipeButtonPressed===P.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1)})))},this._onKeyDown=P=>{const Q=o.e.KEYDOWN;if(F.onPreKeyboardObservable.hasObservers()){const O=new o.g(Q,P);if(F.onPreKeyboardObservable.notifyObservers(O,Q),O.skipOnKeyboardObservable)return}if(F.onKeyboardObservable.hasObservers()){const O=new o.j(Q,P);F.onKeyboardObservable.notifyObservers(O,Q)}F.actionManager&&F.actionManager.processTrigger(14,A.CreateNewFromScene(F,P))},this._onKeyUp=P=>{const Q=o.e.KEYUP;if(F.onPreKeyboardObservable.hasObservers()){const O=new o.g(Q,P);if(F.onPreKeyboardObservable.notifyObservers(O,Q),O.skipOnKeyboardObservable)return}if(F.onKeyboardObservable.hasObservers()){const O=new o.j(Q,P);F.onKeyboardObservable.notifyObservers(O,Q)}F.actionManager&&F.actionManager.processTrigger(15,A.CreateNewFromScene(F,P))},this._deviceSourceManager.onDeviceConnectedObservable.add((b=>{b.deviceType===H.Mouse?b.onInputChangedObservable.add((F=>{this._originMouseEvent=F,F.inputIndex===t.LeftClick||F.inputIndex===t.MiddleClick||F.inputIndex===t.RightClick||F.inputIndex===t.BrowserBack||F.inputIndex===t.BrowserForward?Q&&1===b.getInput(F.inputIndex)?this._onPointerDown(F):P&&0===b.getInput(F.inputIndex)&&this._onPointerUp(F):O&&(F.inputIndex===t.Move?this._onPointerMove(F):F.inputIndex!==t.MouseWheelX&&F.inputIndex!==t.MouseWheelY&&F.inputIndex!==t.MouseWheelZ||this._onPointerMove(F))})):b.deviceType===H.Touch?b.onInputChangedObservable.add((F=>{F.inputIndex===t.LeftClick&&(Q&&1===b.getInput(F.inputIndex)?(this._onPointerDown(F),this._activePointerIdsCount>1&&(this._isMultiTouchGesture=!0)):P&&0===b.getInput(F.inputIndex)&&(this._onPointerUp(F),0===this._activePointerIdsCount&&(this._isMultiTouchGesture=!1))),O&&F.inputIndex===t.Move&&this._onPointerMove(F)})):b.deviceType===H.Keyboard&&b.onInputChangedObservable.add((P=>{"keydown"===P.type?this._onKeyDown(P):"keyup"===P.type&&this._onKeyUp(P)}))})),this._alreadyAttached=!0}$j(){this._alreadyAttached&&(this._deviceSourceManager.dispose(),this._deviceSourceManager=null,this._alreadyAttachedTo&&!this._scene.doNotHandleCursors&&(this._alreadyAttachedTo.style.cursor=this._scene.defaultCursor),this._alreadyAttached=!1,this._alreadyAttachedTo=null)}setPointerOverMesh(P){let Q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,O=arguments.length>2?arguments[2]:void 0,b=arguments.length>3?arguments[3]:void 0;if(this._meshUnderPointerId[Q]===P&&(!P||!P._internalAbstractMeshDataInfo._pointerOverDisableMeshTesting))return;const F=this._meshUnderPointerId[Q];let g;F&&(g=F._getActionManagerForTrigger(10),g&&g.processTrigger(10,new A(F,this._pointerX,this._pointerY,P,b,{pointerId:Q}))),P?(this._meshUnderPointerId[Q]=P,this._pointerOverMesh=P,g=P._getActionManagerForTrigger(9),g&&g.processTrigger(9,new A(P,this._pointerX,this._pointerY,P,b,{pointerId:Q,pickResult:O}))):(delete this._meshUnderPointerId[Q],this._pointerOverMesh=null),this._scene.onMeshUnderPointerUpdatedObservable.hasObservers()&&this._scene.onMeshUnderPointerUpdatedObservable.notifyObservers({mesh:P,pointerId:Q})}getPointerOverMesh(){return this.meshUnderPointer}_invalidateMesh(P){this._pointerOverMesh===P&&(this._pointerOverMesh=null),this._pickedDownMesh===P&&(this._pickedDownMesh=null),this._pickedUpMesh===P&&(this._pickedUpMesh=null);for(const Q in this._meshUnderPointerId)this._meshUnderPointerId[Q]===P&&delete this._meshUnderPointerId[Q]}}Y.DragMovementThreshold=10,Y.LongPressDelay=500,Y.DoubleClickDelay=300,Y.ExclusiveDoubleClickMode=!1;var p=O(2571),D=O(797),d=O(805),N=O(2650),f=O(602),n=O(921),Z=O(769);class U{constructor(){this.pointerDownFastCheck=!1,this.pointerUpFastCheck=!1,this.pointerMoveFastCheck=!1,this.Nl=!1,this.skipPointerDownPicking=!1,this.skipPointerUpPicking=!1}}var E,k=O(561),v=O(696);!function(P){P[P.BackwardCompatible=0]="BackwardCompatible",P[P.Intermediate=1]="Intermediate",P[P.Aggressive=2]="Aggressive"}(E||(E={}));class PP{static DefaultMaterialFactory(P){throw(0,T.b)("bb")}static CollisionCoordinatorFactory(){throw(0,T.b)("DefaultCollisionCoordinator")}get clearColor(){return this._clearColor}set clearColor(P){P!==this._clearColor&&(this._clearColor=P,this.onClearColorChangedObservable.notifyObservers(this._clearColor))}get imageProcessingConfiguration(){return this._imageProcessingConfiguration}get performancePriority(){return this._performancePriority}set performancePriority(P){if(P!==this._performancePriority){switch(this._performancePriority=P,P){case 0:this.skipFrustumClipping=!1,this._renderingManager.maintainStateBetweenFrames=!1,this.Nl=!1,this.Gl=!0;break;case 1:this.skipFrustumClipping=!1,this._renderingManager.maintainStateBetweenFrames=!1,this.Nl=!0,this.Gl=!1;break;case 2:this.skipFrustumClipping=!0,this._renderingManager.maintainStateBetweenFrames=!0,this.Nl=!0,this.Gl=!1}this.onScenePerformancePriorityChangedObservable.notifyObservers(P)}}set forceWireframe(P){this._forceWireframe!==P&&(this._forceWireframe=P,this.markAllMaterialsAsDirty(16))}get forceWireframe(){return this._forceWireframe}set skipFrustumClipping(P){this._skipFrustumClipping!==P&&(this._skipFrustumClipping=P)}get skipFrustumClipping(){return this._skipFrustumClipping}set forcePointsCloud(P){this._forcePointsCloud!==P&&(this._forcePointsCloud=P,this.markAllMaterialsAsDirty(16))}get forcePointsCloud(){return this._forcePointsCloud}get environmentTexture(){return this._environmentTexture}set environmentTexture(P){this._environmentTexture!==P&&(this._environmentTexture=P,this.onEnvironmentTextureChangedObservable.notifyObservers(P),this.markAllMaterialsAsDirty(1))}getNodes(){let P=[];P=P.concat(this.meshes),P=P.concat(this.lights),P=P.concat(this.cameras),P=P.concat(this.transformNodes);for(const Q of this.skeletons)P=P.concat(Q.bones);return P}get animationPropertiesOverride(){return this._animationPropertiesOverride}set animationPropertiesOverride(P){this._animationPropertiesOverride=P}set onDispose(P){this._onDisposeObserver&&this.ik.remove(this._onDisposeObserver),this._onDisposeObserver=this.ik.add(P)}set beforeRender(P){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),P&&(this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(P))}set afterRender(P){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),P&&(this._onAfterRenderObserver=this.onAfterRenderObservable.add(P))}set beforeCameraRender(P){this._onBeforeCameraRenderObserver&&this.onBeforeCameraRenderObservable.remove(this._onBeforeCameraRenderObserver),this._onBeforeCameraRenderObserver=this.onBeforeCameraRenderObservable.add(P)}set afterCameraRender(P){this._onAfterCameraRenderObserver&&this.onAfterCameraRenderObservable.remove(this._onAfterCameraRenderObserver),this._onAfterCameraRenderObserver=this.onAfterCameraRenderObservable.add(P)}get pointerDownPredicate(){return this._pointerPickingConfiguration.pointerDownPredicate}set pointerDownPredicate(P){this._pointerPickingConfiguration.pointerDownPredicate=P}get pointerUpPredicate(){return this._pointerPickingConfiguration.pointerUpPredicate}set pointerUpPredicate(P){this._pointerPickingConfiguration.pointerUpPredicate=P}get pointerMovePredicate(){return this._pointerPickingConfiguration.pointerMovePredicate}set pointerMovePredicate(P){this._pointerPickingConfiguration.pointerMovePredicate=P}get pointerDownFastCheck(){return this._pointerPickingConfiguration.pointerDownFastCheck}set pointerDownFastCheck(P){this._pointerPickingConfiguration.pointerDownFastCheck=P}get pointerUpFastCheck(){return this._pointerPickingConfiguration.pointerUpFastCheck}set pointerUpFastCheck(P){this._pointerPickingConfiguration.pointerUpFastCheck=P}get pointerMoveFastCheck(){return this._pointerPickingConfiguration.pointerMoveFastCheck}set pointerMoveFastCheck(P){this._pointerPickingConfiguration.pointerMoveFastCheck=P}get Nl(){return this._pointerPickingConfiguration.Nl}set Nl(P){this._pointerPickingConfiguration.Nl=P}get skipPointerDownPicking(){return this._pointerPickingConfiguration.skipPointerDownPicking}set skipPointerDownPicking(P){this._pointerPickingConfiguration.skipPointerDownPicking=P}get skipPointerUpPicking(){return this._pointerPickingConfiguration.skipPointerUpPicking}set skipPointerUpPicking(P){this._pointerPickingConfiguration.skipPointerUpPicking=P}get unTranslatedPointer(){return this._inputManager.unTranslatedPointer}static get DragMovementThreshold(){return Y.DragMovementThreshold}static set DragMovementThreshold(P){Y.DragMovementThreshold=P}static get LongPressDelay(){return Y.LongPressDelay}static set LongPressDelay(P){Y.LongPressDelay=P}static get DoubleClickDelay(){return Y.DoubleClickDelay}static set DoubleClickDelay(P){Y.DoubleClickDelay=P}static get ExclusiveDoubleClickMode(){return Y.ExclusiveDoubleClickMode}static set ExclusiveDoubleClickMode(P){Y.ExclusiveDoubleClickMode=P}bindEyePosition(P){var Q;let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"vEyePosition",b=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const F=this._forcedViewPosition?this._forcedViewPosition:this._mirroredCameraPosition?this._mirroredCameraPosition:(null===(Q=this.activeCamera)||void 0===Q?void 0:Q.globalPosition)??X.j.ZeroReadOnly,g=this.useRightHandedSystem===(null!=this._mirroredCameraPosition);return X.f.Vector4[0].set(F.x,F.y,F.z,g?-1:1),P&&(b?P.setFloat3(O,X.f.Vector4[0].x,X.f.Vector4[0].y,X.f.Vector4[0].z):P.setVector4(O,X.f.Vector4[0])),X.f.Vector4[0]}finalizeSceneUbo(){const P=this.getSceneUniformBuffer(),Q=this.bindEyePosition(null);return P.updateFloat4("vEyePosition",Q.x,Q.y,Q.z,Q.w),P.update(),P}set useRightHandedSystem(P){this._useRightHandedSystem!==P&&(this._useRightHandedSystem=P,this.markAllMaterialsAsDirty(16))}get useRightHandedSystem(){return this._useRightHandedSystem}setStepId(P){this._currentStepId=P}getStepId(){return this._currentStepId}getInternalStep(){return this._currentInternalStep}set fogEnabled(P){this._fogEnabled!==P&&(this._fogEnabled=P,this.markAllMaterialsAsDirty(16))}get fogEnabled(){return this._fogEnabled}set fogMode(P){this._fogMode!==P&&(this._fogMode=P,this.markAllMaterialsAsDirty(16))}get fogMode(){return this._fogMode}get prePass(){return!!this.prePassRenderer&&this.prePassRenderer.defaultRT.enabled}set shadowsEnabled(P){this._shadowsEnabled!==P&&(this._shadowsEnabled=P,this.markAllMaterialsAsDirty(2))}get shadowsEnabled(){return this._shadowsEnabled}set lightsEnabled(P){this._lightsEnabled!==P&&(this._lightsEnabled=P,this.markAllMaterialsAsDirty(2))}get lightsEnabled(){return this._lightsEnabled}get activeCameras(){return this._activeCameras}set activeCameras(P){this._unObserveActiveCameras&&(this._unObserveActiveCameras(),this._unObserveActiveCameras=null),P&&(this._unObserveActiveCameras=(0,Z.d)(P,(()=>{this.onActiveCamerasChanged.notifyObservers(this)}))),this._activeCameras=P}get activeCamera(){return this._activeCamera}set activeCamera(P){P!==this._activeCamera&&(this._activeCamera=P,this.onActiveCameraChanged.notifyObservers(this))}get _hasDefaultMaterial(){return PP.DefaultMaterialFactory!==PP._OriginalDefaultMaterialFactory}get defaultMaterial(){return this.ql||(this.ql=PP.DefaultMaterialFactory(this)),this.ql}set defaultMaterial(P){this.ql=P}set texturesEnabled(P){this._texturesEnabled!==P&&(this._texturesEnabled=P,this.markAllMaterialsAsDirty(1))}get texturesEnabled(){return this._texturesEnabled}get frameGraph(){return this._frameGraph}set frameGraph(P){if(this._frameGraph)return this._frameGraph=P,void(P||(this.customRenderFunction=this._currentCustomRenderFunction));this._frameGraph=P,P&&(this._currentCustomRenderFunction=this.customRenderFunction,this.customRenderFunction=this._renderWithFrameGraph,this.activeCamera=null)}set skeletonsEnabled(P){this._skeletonsEnabled!==P&&(this._skeletonsEnabled=P,this.markAllMaterialsAsDirty(8))}get skeletonsEnabled(){return this._skeletonsEnabled}get collisionCoordinator(){return this._collisionCoordinator||(this._collisionCoordinator=PP.CollisionCoordinatorFactory(),this._collisionCoordinator.init(this)),this._collisionCoordinator}get renderingManager(){return this._renderingManager}get frustumPlanes(){return this._frustumPlanes}_registerTransientComponents(){if(this._transientComponents.length>0){for(const P of this._transientComponents)P.register();this._transientComponents.length=0}}o(P){this._components.push(P),this._transientComponents.push(P);const Q=P;Q.addFromContainer&&Q.serialize&&this._serializableComponents.push(Q)}_getComponent(P){for(const Q of this._components)if(Q.name===P)return Q;return null}get uniqueId(){return this._uniqueId}constructor(P,Q){this._inputManager=new Y(this),this.cameraToUseForPointers=null,this._isScene=!0,this._blockEntityCollection=!1,this.Gl=!0,this.autoClearDepthAndStencil=!0,this._clearColor=new D.h(.2,.2,.3,1),this.onClearColorChangedObservable=new g.d,this.ambientColor=new D.d(0,0,0),this.environmentIntensity=1,this.iblIntensity=1,this._performancePriority=0,this.onScenePerformancePriorityChangedObservable=new g.d,this._forceWireframe=!1,this._skipFrustumClipping=!1,this._forcePointsCloud=!1,this.rootNodes=[],this.cameras=[],this.lights=[],this.meshes=[],this.skeletons=[],this.Ak=[],this.animations=[],this.animationGroups=[],this.multiMaterials=[],this.materials=[],this.morphTargetManagers=[],this.geometries=[],this.transformNodes=[],this.actionManagers=[],this.textures=[],this._environmentTexture=null,this.postProcesses=[],this.effectLayers=[],this.qm=null,this.layers=[],this.lensFlareSystems=[],this.proceduralTextures=[],this.animationsEnabled=!0,this._animationPropertiesOverride=null,this.useConstantAnimationDeltaTime=!1,this.constantlyUpdateMeshUnderPointer=!1,this.hoverCursor="pointer",this.defaultCursor="",this.doNotHandleCursors=!1,this.preventDefaultOnPointerDown=!0,this.preventDefaultOnPointerUp=!0,this.metadata=null,this.reservedDataStore=null,this.disableOfflineSupportExceptionRules=[],this.ik=new g.d,this._onDisposeObserver=null,this.onBeforeRenderObservable=new g.d,this._onBeforeRenderObserver=null,this.onAfterRenderObservable=new g.d,this.onAfterRenderCameraObservable=new g.d,this._onAfterRenderObserver=null,this.onBeforeAnimationsObservable=new g.d,this.onAfterAnimationsObservable=new g.d,this.onBeforeDrawPhaseObservable=new g.d,this.onAfterDrawPhaseObservable=new g.d,this.onReadyObservable=new g.d,this.onBeforeCameraRenderObservable=new g.d,this._onBeforeCameraRenderObserver=null,this.onAfterCameraRenderObservable=new g.d,this._onAfterCameraRenderObserver=null,this.onBeforeActiveMeshesEvaluationObservable=new g.d,this.onAfterActiveMeshesEvaluationObservable=new g.d,this.onBeforeParticlesRenderingObservable=new g.d,this.onAfterParticlesRenderingObservable=new g.d,this.onDataLoadedObservable=new g.d,this.onNewCameraAddedObservable=new g.d,this.onCameraRemovedObservable=new g.d,this.onNewLightAddedObservable=new g.d,this.onLightRemovedObservable=new g.d,this.onNewGeometryAddedObservable=new g.d,this.onGeometryRemovedObservable=new g.d,this.onNewTransformNodeAddedObservable=new g.d,this.onTransformNodeRemovedObservable=new g.d,this.onNewMeshAddedObservable=new g.d,this.onMeshRemovedObservable=new g.d,this.onNewSkeletonAddedObservable=new g.d,this.onSkeletonRemovedObservable=new g.d,this.onNewMaterialAddedObservable=new g.d,this.onNewMultiMaterialAddedObservable=new g.d,this.onMaterialRemovedObservable=new g.d,this.onMultiMaterialRemovedObservable=new g.d,this.onNewTextureAddedObservable=new g.d,this.onTextureRemovedObservable=new g.d,this.onBeforeRenderTargetsRenderObservable=new g.d,this.onAfterRenderTargetsRenderObservable=new g.d,this.onBeforeStepObservable=new g.d,this.onAfterStepObservable=new g.d,this.onActiveCameraChanged=new g.d,this.onActiveCamerasChanged=new g.d,this.onBeforeRenderingGroupObservable=new g.d,this.onAfterRenderingGroupObservable=new g.d,this.onMeshImportedObservable=new g.d,this.onAnimationFileImportedObservable=new g.d,this.onEnvironmentTextureChangedObservable=new g.d,this.onMeshUnderPointerUpdatedObservable=new g.d,this._registeredForLateAnimationBindings=new m.c(256),this._pointerPickingConfiguration=new U,this.onPrePointerObservable=new g.d,this.onPointerObservable=new g.d,this.onPreKeyboardObservable=new g.d,this.onKeyboardObservable=new g.d,this._useRightHandedSystem=!1,this._timeAccumulator=0,this._currentStepId=0,this._currentInternalStep=0,this._fogEnabled=!0,this._fogMode=PP.FOGMODE_NONE,this.fogColor=new D.d(.2,.2,.3),this.fogDensity=.1,this.fogStart=0,this.fogEnd=1e3,this.needsPreviousWorldMatrices=!1,this._shadowsEnabled=!0,this._lightsEnabled=!0,this._unObserveActiveCameras=null,this._texturesEnabled=!0,this._frameGraph=null,this.frameGraphs=[],this.physicsEnabled=!0,this.particlesEnabled=!0,this.spritesEnabled=!0,this._skeletonsEnabled=!0,this.lensFlaresEnabled=!0,this.collisionsEnabled=!0,this.gravity=new X.j(0,-9.807,0),this.postProcessesEnabled=!0,this.renderTargetsEnabled=!0,this.dumpNextRenderTargets=!1,this.customRenderTargets=[],this.importedMeshesFiles=[],this.probesEnabled=!0,this._meshesForIntersections=new m.c(256),this.proceduralTexturesEnabled=!0,this._totalVertices=new p.c,this._activeIndices=new p.c,this._activeParticles=new p.c,this._activeBones=new p.c,this._animationTime=0,this.animationTimeScale=1,this._renderId=0,this._frameId=0,this._executeWhenReadyTimeoutId=null,this._intermediateRendering=!1,this._defaultFrameBufferCleared=!1,this._viewUpdateFlag=-1,this._projectionUpdateFlag=-1,this._toBeDisposed=new Array(256),this._activeRequests=new Array,this._pendingData=[],this._isDisposed=!1,this.dispatchAllSubMeshesOfActiveMeshes=!1,this._activeMeshes=new m.g(256),this._processedMaterials=new m.g(256),this._renderTargets=new m.c(256),this._materialsRenderTargets=new m.c(256),this._activeParticleSystems=new m.g(256),this._activeSkeletons=new m.c(32),this._softwareSkinnedMeshes=new m.c(32),this._activeAnimatables=new Array,this._transformMatrix=X.c.Zero(),this.requireLightSorting=!1,this._components=[],this._serializableComponents=[],this._transientComponents=[],this._beforeCameraUpdateStage=W.c.Create(),this._beforeClearStage=W.c.Create(),this._beforeRenderTargetClearStage=W.c.Create(),this._gatherRenderTargetsStage=W.c.Create(),this._gatherActiveCameraRenderTargetsStage=W.c.Create(),this._isReadyForMeshStage=W.c.Create(),this._beforeEvaluateActiveMeshStage=W.c.Create(),this._evaluateSubMeshStage=W.c.Create(),this._preActiveMeshStage=W.c.Create(),this._cameraDrawRenderTargetStage=W.c.Create(),this._beforeCameraDrawStage=W.c.Create(),this._beforeRenderTargetDrawStage=W.c.Create(),this._beforeRenderingGroupDrawStage=W.c.Create(),this._beforeRenderingMeshStage=W.c.Create(),this._afterRenderingMeshStage=W.c.Create(),this._afterRenderingGroupDrawStage=W.c.Create(),this._afterCameraDrawStage=W.c.Create(),this._afterCameraPostProcessStage=W.c.Create(),this._afterRenderTargetDrawStage=W.c.Create(),this._afterRenderTargetPostProcessStage=W.c.Create(),this._afterRenderStage=W.c.Create(),this._pointerMoveStage=W.c.Create(),this._pointerDownStage=W.c.Create(),this._pointerUpStage=W.c.Create(),this._geometriesByUniqueId=null,this._uniqueId=0,this._defaultMeshCandidates={data:[],length:0},this._defaultSubMeshCandidates={data:[],length:0},this._preventFreeActiveMeshesAndRenderingGroups=!1,this._activeMeshesFrozen=!1,this._activeMeshesFrozenButKeepClipping=!1,this._skipEvaluateActiveMeshesCompletely=!1,this._useCurrentFrameBuffer=!1,this._allowPostProcessClearColor=!0,this.getDeterministicFrameTime=()=>this._engine.getTimeStep(),this._registeredActions=0,this._blockMaterialDirtyMechanism=!1,this._perfCollector=null,this.activeCameras=[],this._uniqueId=this.getUniqueId();const O={useGeometryUniqueIdsMap:!0,useMaterialMeshMap:!0,useClonedMeshMap:!0,virtual:!1,...Q};P=this._engine=P||K.c.LastCreatedEngine,O.virtual?P._virtualScenes.push(this):(K.c._LastCreatedScene=this,P.scenes.push(this)),this._uid=null,this._renderingManager=new w.c(this),j.c&&(this.postProcessManager=new j.c(this)),(0,r.k)()&&this.attachControl(),this._createUbo(),C.d&&(this._imageProcessingConfiguration=new C.d),this.setDefaultCandidateProviders(),O.useGeometryUniqueIdsMap&&(this._geometriesByUniqueId={}),this.useMaterialMeshMap=O.useMaterialMeshMap,this.useClonedMeshMap=O.useClonedMeshMap,Q&&Q.virtual||P.onNewSceneAddedObservable.notifyObservers(this)}getClassName(){return"Scene"}_getDefaultMeshCandidates(){return this._defaultMeshCandidates.data=this.meshes,this._defaultMeshCandidates.length=this.meshes.length,this._defaultMeshCandidates}_getDefaultSubMeshCandidates(P){return this._defaultSubMeshCandidates.data=P.pk,this._defaultSubMeshCandidates.length=P.pk.length,this._defaultSubMeshCandidates}setDefaultCandidateProviders(){this.getActiveMeshCandidates=()=>this._getDefaultMeshCandidates(),this.getActiveSubMeshCandidates=P=>this._getDefaultSubMeshCandidates(P),this.getIntersectingSubMeshCandidates=(P,Q)=>this._getDefaultSubMeshCandidates(P),this.getCollidingSubMeshCandidates=(P,Q)=>this._getDefaultSubMeshCandidates(P)}get meshUnderPointer(){return this._inputManager.meshUnderPointer}get pointerX(){return this._inputManager.pointerX}set pointerX(P){this._inputManager.pointerX=P}get pointerY(){return this._inputManager.pointerY}set pointerY(P){this._inputManager.pointerY=P}getCachedMaterial(){return this._cachedMaterial}getCachedEffect(){return this._cachedEffect}getCachedVisibility(){return this._cachedVisibility}isCachedMaterialInvalid(P,Q){let O=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return this._cachedEffect!==Q||this._cachedMaterial!==P||this._cachedVisibility!==O}getEngine(){return this._engine}getTotalVertices(){return this._totalVertices.current}get totalVerticesPerfCounter(){return this._totalVertices}getActiveIndices(){return this._activeIndices.current}get totalActiveIndicesPerfCounter(){return this._activeIndices}getActiveParticles(){return this._activeParticles.current}get activeParticlesPerfCounter(){return this._activeParticles}getActiveBones(){return this._activeBones.current}get activeBonesPerfCounter(){return this._activeBones}getActiveMeshes(){return this._activeMeshes}getAnimationRatio(){return void 0!==this._animationRatio?this._animationRatio:1}getRenderId(){return this._renderId}getFrameId(){return this._frameId}incrementRenderId(){this._renderId++}_createUbo(){this.setSceneUniformBuffer(this.createSceneUniformBuffer())}simulatePointerMove(P,Q){return this._inputManager.simulatePointerMove(P,Q),this}simulatePointerDown(P,Q){return this._inputManager.simulatePointerDown(P,Q),this}simulatePointerUp(P,Q,O){return this._inputManager.simulatePointerUp(P,Q,O),this}isPointerCaptured(){let P=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this._inputManager.isPointerCaptured(P)}attachControl(){let P=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],Q=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],O=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];this._inputManager.attachControl(P,Q,O)}$j(){this._inputManager.$j()}isReady(){var P,Q;let O,b=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this._isDisposed)return!1;const F=this.getEngine(),g=F.currentRenderPassId;F.currentRenderPassId=(null===(P=this.activeCamera)||void 0===P?void 0:P.renderPassId)??g;let m=!0;for(this._pendingData.length>0&&(m=!1),null===(Q=this.prePassRenderer)||void 0===Q||Q.update(),this.useOrderIndependentTransparency&&this.depthPeelingRenderer&&m&&(m=this.depthPeelingRenderer.isReady()),b&&(this._processedMaterials.reset(),this._materialsRenderTargets.reset()),O=0;O<this.meshes.length;O++){const P=this.meshes[O];if(!P.pk||0===P.pk.length)continue;if(!P.isReady(!0)){m=!1;continue}const Q=P.hasThinInstances||"InstancedMesh"===P.getClassName()||"InstancedLinesMesh"===P.getClassName()||F.getCaps().instancedArrays&&P.instances.length>0;for(const O of this._isReadyForMeshStage)O.action(P,Q)||(m=!1);if(!b)continue;const g=P.material||this.defaultMaterial;if(g)if(g._storeEffectOnSubMeshes)for(const O of P.pk){const P=O.Ha();P&&P.hasRenderTargetTextures&&null!=P.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(P)&&(this._processedMaterials.push(P),this._materialsRenderTargets.concatWithNoDuplicate(P.getRenderTargetTextures()))}else g.hasRenderTargetTextures&&null!=g.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(g)&&(this._processedMaterials.push(g),this._materialsRenderTargets.concatWithNoDuplicate(g.getRenderTargetTextures()))}if(b)for(O=0;O<this._materialsRenderTargets.length;++O){this._materialsRenderTargets.data[O].isReadyForRendering()||(m=!1)}for(O=0;O<this.geometries.length;O++){2===this.geometries[O].delayLoadState&&(m=!1)}if(this.activeCameras&&this.activeCameras.length>0)for(const q of this.activeCameras)q.isReady(!0)||(m=!1);else this.activeCamera&&(this.activeCamera.isReady(!0)||(m=!1));for(const q of this.Ak)q.isReady()||(m=!1);if(this.layers)for(const q of this.layers)q.isReady()||(m=!1);if(this.effectLayers)for(const q of this.effectLayers)q.isLayerReady()||(m=!1);return F.areAllEffectsReady()||(m=!1),F.currentRenderPassId=g,m}resetCachedMaterial(){this._cachedMaterial=null,this._cachedEffect=null,this._cachedVisibility=null}registerBeforeRender(P){this.onBeforeRenderObservable.add(P)}unregisterBeforeRender(P){this.onBeforeRenderObservable.removeCallback(P)}registerAfterRender(P){this.onAfterRenderObservable.add(P)}unregisterAfterRender(P){this.onAfterRenderObservable.removeCallback(P)}_executeOnceBeforeRender(P){const Q=()=>{P(),setTimeout((()=>{this.unregisterBeforeRender(Q)}))};this.registerBeforeRender(Q)}executeOnceBeforeRender(P,Q){void 0!==Q?setTimeout((()=>{this._executeOnceBeforeRender(P)}),Q):this._executeOnceBeforeRender(P)}addPendingData(P){this._pendingData.push(P)}removePendingData(P){const Q=this.isLoading,O=this._pendingData.indexOf(P);-1!==O&&this._pendingData.splice(O,1),Q&&!this.isLoading&&this.onDataLoadedObservable.notifyObservers(this)}getWaitingItemsCount(){return this._pendingData.length}get isLoading(){return this._pendingData.length>0}executeWhenReady(P){let Q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.onReadyObservable.addOnce(P),null===this._executeWhenReadyTimeoutId&&this._checkIsReady(Q)}async whenReadyAsync(){let P=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return await new Promise((Q=>{this.executeWhenReady((()=>{Q()}),P)}))}_checkIsReady(){let P=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return this._registerTransientComponents(),this.isReady(P)?(this.onReadyObservable.notifyObservers(this),this.onReadyObservable.clear(),void(this._executeWhenReadyTimeoutId=null)):this._isDisposed?(this.onReadyObservable.clear(),void(this._executeWhenReadyTimeoutId=null)):void(this._executeWhenReadyTimeoutId=setTimeout((()=>{this.incrementRenderId(),this._checkIsReady(P)}),100))}get animatables(){return this._activeAnimatables}resetLastAnimationTimeFrame(){this._animationTimeLast=F.b.Now}getViewMatrix(){return this._viewMatrix}getProjectionMatrix(){return this._projectionMatrix}getTransformMatrix(){return this._transformMatrix}setTransformMatrix(P,Q,O,b){O||b||!this._multiviewSceneUbo||(this._multiviewSceneUbo.dispose(),this._multiviewSceneUbo=null),this._viewUpdateFlag===P.updateFlag&&this._projectionUpdateFlag===Q.updateFlag||(this._viewUpdateFlag=P.updateFlag,this._projectionUpdateFlag=Q.updateFlag,this._viewMatrix=P,this._projectionMatrix=Q,this._viewMatrix.multiplyToRef(this._projectionMatrix,this._transformMatrix),this._frustumPlanes?d.e.GetPlanesToRef(this._transformMatrix,this._frustumPlanes):this._frustumPlanes=d.e.GetPlanes(this._transformMatrix),this._multiviewSceneUbo&&this._multiviewSceneUbo.useUbo?this._updateMultiviewUbo(O,b):this._sceneUbo.useUbo&&(this._sceneUbo.rk("viewProjection",this._transformMatrix),this._sceneUbo.rk("view",this._viewMatrix),this._sceneUbo.rk("projection",this._projectionMatrix)))}getSceneUniformBuffer(){return this._multiviewSceneUbo?this._multiviewSceneUbo:this._sceneUbo}createSceneUniformBuffer(P){const Q=new L.c(this._engine,void 0,!1,P??"qg");return Q.addUniform("viewProjection",16),Q.addUniform("view",16),Q.addUniform("projection",16),Q.addUniform("vEyePosition",4),Q}setSceneUniformBuffer(P){this._sceneUbo=P,this._viewUpdateFlag=-1,this._projectionUpdateFlag=-1}getUniqueId(){return N.d.UniqueId}yk(P){let Q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._blockEntityCollection&&(this.meshes.push(P),P._resyncLightSources(),P.parent||P._addToSceneRootNodes(),b.d.SetImmediate((()=>{this.onNewMeshAddedObservable.notifyObservers(P)})),Q)){const Q=P.getChildMeshes();for(const P of Q)this.yk(P)}}zk(P){let Q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const O=this.meshes.indexOf(P);if(-1!==O&&(this.meshes.splice(O,1),P.parent||P._removeFromSceneRootNodes()),this._inputManager._invalidateMesh(P),this.onMeshRemovedObservable.notifyObservers(P),Q){const Q=P.getChildMeshes();for(const P of Q)this.zk(P)}return O}addTransformNode(P){this._blockEntityCollection||P.va()===this&&-1!==P._indexInSceneTransformNodesArray||(P._indexInSceneTransformNodesArray=this.transformNodes.length,this.transformNodes.push(P),P.parent||P._addToSceneRootNodes(),this.onNewTransformNodeAddedObservable.notifyObservers(P))}removeTransformNode(P){const Q=P._indexInSceneTransformNodesArray;if(-1!==Q){if(Q!==this.transformNodes.length-1){const P=this.transformNodes[this.transformNodes.length-1];this.transformNodes[Q]=P,P._indexInSceneTransformNodesArray=Q}P._indexInSceneTransformNodesArray=-1,this.transformNodes.pop(),P.parent||P._removeFromSceneRootNodes()}return this.onTransformNodeRemovedObservable.notifyObservers(P),Q}removeSkeleton(P){const Q=this.skeletons.indexOf(P);return-1!==Q&&(this.skeletons.splice(Q,1),this.onSkeletonRemovedObservable.notifyObservers(P),this._executeActiveContainerCleanup(this._activeSkeletons)),Q}removeMorphTargetManager(P){const Q=this.morphTargetManagers.indexOf(P);return-1!==Q&&this.morphTargetManagers.splice(Q,1),Q}removeLight(P){const Q=this.lights.indexOf(P);if(-1!==Q){for(const Q of this.meshes)Q._removeLightSource(P,!1);this.lights.splice(Q,1),this.sortLightsByPriority(),P.parent||P._removeFromSceneRootNodes()}return this.onLightRemovedObservable.notifyObservers(P),Q}removeCamera(P){const Q=this.cameras.indexOf(P);if(-1!==Q&&(this.cameras.splice(Q,1),P.parent||P._removeFromSceneRootNodes()),this.activeCameras){const Q=this.activeCameras.indexOf(P);-1!==Q&&this.activeCameras.splice(Q,1)}return this.activeCamera===P&&(this.cameras.length>0?this.activeCamera=this.cameras[0]:this.activeCamera=null),this.onCameraRemovedObservable.notifyObservers(P),Q}removeParticleSystem(P){const Q=this.Ak.indexOf(P);return-1!==Q&&(this.Ak.splice(Q,1),this._executeActiveContainerCleanup(this._activeParticleSystems)),Q}removeAnimation(P){const Q=this.animations.indexOf(P);return-1!==Q&&this.animations.splice(Q,1),Q}stopAnimation(P,Q,O){}removeAnimationGroup(P){const Q=this.animationGroups.indexOf(P);return-1!==Q&&this.animationGroups.splice(Q,1),Q}removeMultiMaterial(P){const Q=this.multiMaterials.indexOf(P);return-1!==Q&&this.multiMaterials.splice(Q,1),this.onMultiMaterialRemovedObservable.notifyObservers(P),Q}removeMaterial(P){const Q=P._indexInSceneMaterialArray;if(-1!==Q&&Q<this.materials.length){if(Q!==this.materials.length-1){const P=this.materials[this.materials.length-1];this.materials[Q]=P,P._indexInSceneMaterialArray=Q}P._indexInSceneMaterialArray=-1,this.materials.pop()}return this.onMaterialRemovedObservable.notifyObservers(P),Q}removeActionManager(P){const Q=this.actionManagers.indexOf(P);return-1!==Q&&this.actionManagers.splice(Q,1),Q}removeTexture(P){const Q=this.textures.indexOf(P);return-1!==Q&&this.textures.splice(Q,1),this.onTextureRemovedObservable.notifyObservers(P),Q}addLight(P){if(!this._blockEntityCollection){this.lights.push(P),this.sortLightsByPriority(),P.parent||P._addToSceneRootNodes();for(const Q of this.meshes)-1===Q.lightSources.indexOf(P)&&(Q.lightSources.push(P),Q._resyncLightSources());b.d.SetImmediate((()=>{this.onNewLightAddedObservable.notifyObservers(P)}))}}sortLightsByPriority(){this.requireLightSorting&&this.lights.sort(n.e.CompareLightsPriority)}addCamera(P){this._blockEntityCollection||(this.cameras.push(P),b.d.SetImmediate((()=>{this.onNewCameraAddedObservable.notifyObservers(P)})),P.parent||P._addToSceneRootNodes())}addSkeleton(P){this._blockEntityCollection||(this.skeletons.push(P),b.d.SetImmediate((()=>{this.onNewSkeletonAddedObservable.notifyObservers(P)})))}addParticleSystem(P){this._blockEntityCollection||this.Ak.push(P)}addAnimation(P){this._blockEntityCollection||this.animations.push(P)}addAnimationGroup(P){this._blockEntityCollection||this.animationGroups.push(P)}addMultiMaterial(P){this._blockEntityCollection||(this.multiMaterials.push(P),b.d.SetImmediate((()=>{this.onNewMultiMaterialAddedObservable.notifyObservers(P)})))}addMaterial(P){this._blockEntityCollection||P.va()===this&&-1!==P._indexInSceneMaterialArray||(P._indexInSceneMaterialArray=this.materials.length,this.materials.push(P),b.d.SetImmediate((()=>{this.onNewMaterialAddedObservable.notifyObservers(P)})))}addMorphTargetManager(P){this._blockEntityCollection||this.morphTargetManagers.push(P)}addGeometry(P){this._blockEntityCollection||(this._geometriesByUniqueId&&(this._geometriesByUniqueId[P.uniqueId]=this.geometries.length),this.geometries.push(P))}addActionManager(P){this.actionManagers.push(P)}addTexture(P){this._blockEntityCollection||(this.textures.push(P),this.onNewTextureAddedObservable.notifyObservers(P))}switchActiveCamera(P){let Q=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._engine.getInputElement()&&(this.activeCamera&&this.activeCamera.$j(),this.activeCamera=P,Q&&P.attachControl())}setActiveCameraById(P){const Q=this.getCameraById(P);return Q?(this.activeCamera=Q,Q):null}setActiveCameraByName(P){const Q=this.getCameraByName(P);return Q?(this.activeCamera=Q,Q):null}getAnimationGroupByName(P){for(let Q=0;Q<this.animationGroups.length;Q++)if(this.animationGroups[Q].name===P)return this.animationGroups[Q];return null}_getMaterial(P,Q){for(let O=0;O<this.materials.length;O++){const P=this.materials[O];if(Q(P))return P}if(P)for(let O=0;O<this.multiMaterials.length;O++){const P=this.multiMaterials[O];if(Q(P))return P}return null}getMaterialByUniqueID(P){let Q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.getMaterialByUniqueId(P,Q)}getMaterialByUniqueId(P){let Q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(Q,(Q=>Q.uniqueId===P))}getMaterialById(P){let Q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(Q,(Q=>Q.id===P))}getMaterialByName(P){let Q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(Q,(Q=>Q.name===P))}getLastMaterialById(P){let Q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];for(let O=this.materials.length-1;O>=0;O--)if(this.materials[O].id===P)return this.materials[O];if(Q)for(let O=this.multiMaterials.length-1;O>=0;O--)if(this.multiMaterials[O].id===P)return this.multiMaterials[O];return null}getTextureByUniqueId(P){for(let Q=0;Q<this.textures.length;Q++)if(this.textures[Q].uniqueId===P)return this.textures[Q];return null}getTextureByName(P){for(let Q=0;Q<this.textures.length;Q++)if(this.textures[Q].name===P)return this.textures[Q];return null}getCameraById(P){for(let Q=0;Q<this.cameras.length;Q++)if(this.cameras[Q].id===P)return this.cameras[Q];return null}getCameraByUniqueId(P){for(let Q=0;Q<this.cameras.length;Q++)if(this.cameras[Q].uniqueId===P)return this.cameras[Q];return null}getCameraByName(P){for(let Q=0;Q<this.cameras.length;Q++)if(this.cameras[Q].name===P)return this.cameras[Q];return null}getBoneById(P){for(let Q=0;Q<this.skeletons.length;Q++){const O=this.skeletons[Q];for(let Q=0;Q<O.bones.length;Q++)if(O.bones[Q].id===P)return O.bones[Q]}return null}getBoneByName(P){for(let Q=0;Q<this.skeletons.length;Q++){const O=this.skeletons[Q];for(let Q=0;Q<O.bones.length;Q++)if(O.bones[Q].name===P)return O.bones[Q]}return null}getLightByName(P){for(let Q=0;Q<this.lights.length;Q++)if(this.lights[Q].name===P)return this.lights[Q];return null}getLightById(P){for(let Q=0;Q<this.lights.length;Q++)if(this.lights[Q].id===P)return this.lights[Q];return null}getLightByUniqueId(P){for(let Q=0;Q<this.lights.length;Q++)if(this.lights[Q].uniqueId===P)return this.lights[Q];return null}getParticleSystemById(P){for(let Q=0;Q<this.Ak.length;Q++)if(this.Ak[Q].id===P)return this.Ak[Q];return null}getGeometryById(P){for(let Q=0;Q<this.geometries.length;Q++)if(this.geometries[Q].id===P)return this.geometries[Q];return null}_getGeometryByUniqueId(P){if(this._geometriesByUniqueId){const Q=this._geometriesByUniqueId[P];if(void 0!==Q)return this.geometries[Q]}else for(let Q=0;Q<this.geometries.length;Q++)if(this.geometries[Q].uniqueId===P)return this.geometries[Q];return null}getFrameGraphByName(P){for(let Q=0;Q<this.frameGraphs.length;Q++)if(this.frameGraphs[Q].name===P)return this.frameGraphs[Q];return null}pushGeometry(P,Q){return!(!Q&&this._getGeometryByUniqueId(P.uniqueId))&&(this.addGeometry(P),b.d.SetImmediate((()=>{this.onNewGeometryAddedObservable.notifyObservers(P)})),!0)}removeGeometry(P){let Q;if(this._geometriesByUniqueId){if(Q=this._geometriesByUniqueId[P.uniqueId],void 0===Q)return!1}else if(Q=this.geometries.indexOf(P),Q<0)return!1;if(Q!==this.geometries.length-1){const P=this.geometries[this.geometries.length-1];P&&(this.geometries[Q]=P,this._geometriesByUniqueId&&(this._geometriesByUniqueId[P.uniqueId]=Q))}return this._geometriesByUniqueId&&(this._geometriesByUniqueId[P.uniqueId]=void 0),this.geometries.pop(),this.onGeometryRemovedObservable.notifyObservers(P),!0}getGeometries(){return this.geometries}getMeshById(P){for(let Q=0;Q<this.meshes.length;Q++)if(this.meshes[Q].id===P)return this.meshes[Q];return null}getMeshesById(P){return this.meshes.filter((function(Q){return Q.id===P}))}getTransformNodeById(P){for(let Q=0;Q<this.transformNodes.length;Q++)if(this.transformNodes[Q].id===P)return this.transformNodes[Q];return null}getTransformNodeByUniqueId(P){for(let Q=0;Q<this.transformNodes.length;Q++)if(this.transformNodes[Q].uniqueId===P)return this.transformNodes[Q];return null}getTransformNodesById(P){return this.transformNodes.filter((function(Q){return Q.id===P}))}getMeshByUniqueId(P){for(let Q=0;Q<this.meshes.length;Q++)if(this.meshes[Q].uniqueId===P)return this.meshes[Q];return null}getLastMeshById(P){for(let Q=this.meshes.length-1;Q>=0;Q--)if(this.meshes[Q].id===P)return this.meshes[Q];return null}getLastTransformNodeById(P){for(let Q=this.transformNodes.length-1;Q>=0;Q--)if(this.transformNodes[Q].id===P)return this.transformNodes[Q];return null}getLastEntryById(P){let Q;for(Q=this.meshes.length-1;Q>=0;Q--)if(this.meshes[Q].id===P)return this.meshes[Q];for(Q=this.transformNodes.length-1;Q>=0;Q--)if(this.transformNodes[Q].id===P)return this.transformNodes[Q];for(Q=this.cameras.length-1;Q>=0;Q--)if(this.cameras[Q].id===P)return this.cameras[Q];for(Q=this.lights.length-1;Q>=0;Q--)if(this.lights[Q].id===P)return this.lights[Q];return null}getNodeById(P){const Q=this.getMeshById(P);if(Q)return Q;const O=this.getTransformNodeById(P);if(O)return O;const b=this.getLightById(P);if(b)return b;const F=this.getCameraById(P);if(F)return F;const g=this.getBoneById(P);return g||null}getNodeByName(P){const Q=this.getMeshByName(P);if(Q)return Q;const O=this.getTransformNodeByName(P);if(O)return O;const b=this.getLightByName(P);if(b)return b;const F=this.getCameraByName(P);if(F)return F;const g=this.getBoneByName(P);return g||null}getMeshByName(P){for(let Q=0;Q<this.meshes.length;Q++)if(this.meshes[Q].name===P)return this.meshes[Q];return null}getTransformNodeByName(P){for(let Q=0;Q<this.transformNodes.length;Q++)if(this.transformNodes[Q].name===P)return this.transformNodes[Q];return null}getLastSkeletonById(P){for(let Q=this.skeletons.length-1;Q>=0;Q--)if(this.skeletons[Q].id===P)return this.skeletons[Q];return null}getSkeletonByUniqueId(P){for(let Q=0;Q<this.skeletons.length;Q++)if(this.skeletons[Q].uniqueId===P)return this.skeletons[Q];return null}getSkeletonById(P){for(let Q=0;Q<this.skeletons.length;Q++)if(this.skeletons[Q].id===P)return this.skeletons[Q];return null}getSkeletonByName(P){for(let Q=0;Q<this.skeletons.length;Q++)if(this.skeletons[Q].name===P)return this.skeletons[Q];return null}getMorphTargetManagerById(P){for(let Q=0;Q<this.morphTargetManagers.length;Q++)if(this.morphTargetManagers[Q].uniqueId===P)return this.morphTargetManagers[Q];return null}getMorphTargetById(P){for(let Q=0;Q<this.morphTargetManagers.length;++Q){const O=this.morphTargetManagers[Q];for(let Q=0;Q<O.numTargets;++Q){const b=O.getTarget(Q);if(b.id===P)return b}}return null}getMorphTargetByName(P){for(let Q=0;Q<this.morphTargetManagers.length;++Q){const O=this.morphTargetManagers[Q];for(let Q=0;Q<O.numTargets;++Q){const b=O.getTarget(Q);if(b.name===P)return b}}return null}getPostProcessByName(P){for(let Q=0;Q<this.postProcesses.length;++Q){const O=this.postProcesses[Q];if(O.name===P)return O}return null}isActiveMesh(P){return-1!==this._activeMeshes.indexOf(P)}get uid(){return this._uid||(this._uid=b.d.RandomId()),this._uid}addExternalData(P,Q){return this._externalData||(this._externalData=new q),this._externalData.add(P,Q)}getExternalData(P){return this._externalData?this._externalData.get(P):null}getOrAddExternalDataWithFactory(P,Q){return this._externalData||(this._externalData=new q),this._externalData.getOrAddWithFactory(P,Q)}removeExternalData(P){return this._externalData.remove(P)}_evaluateSubMesh(P,Q,O,b){if(b||P.isInFrustum(this._frustumPlanes)){for(const b of this._evaluateSubMeshStage)b.action(Q,P);const O=P.Ha();null!==O&&void 0!==O&&(O.hasRenderTargetTextures&&null!=O.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(O)&&(this._processedMaterials.push(O),this._materialsRenderTargets.concatWithNoDuplicate(O.getRenderTargetTextures())),this._renderingManager.dispatch(P,Q,O))}}freeProcessedMaterials(){this._processedMaterials.dispose()}get blockfreeActiveMeshesAndRenderingGroups(){return this._preventFreeActiveMeshesAndRenderingGroups}set blockfreeActiveMeshesAndRenderingGroups(P){this._preventFreeActiveMeshesAndRenderingGroups!==P&&(P&&(this.freeActiveMeshes(),this.freeRenderingGroups()),this._preventFreeActiveMeshesAndRenderingGroups=P)}freeActiveMeshes(){if(!this.blockfreeActiveMeshesAndRenderingGroups&&(this._activeMeshes.dispose(),this.activeCamera&&this.activeCamera._activeMeshes&&this.activeCamera._activeMeshes.dispose(),this.activeCameras))for(let P=0;P<this.activeCameras.length;P++){const Q=this.activeCameras[P];Q&&Q._activeMeshes&&Q._activeMeshes.dispose()}}freeRenderingGroups(){if(!this.blockfreeActiveMeshesAndRenderingGroups&&(this._renderingManager&&this._renderingManager.freeRenderingGroups(),this.textures))for(let P=0;P<this.textures.length;P++){const Q=this.textures[P];Q&&Q.renderList&&Q.freeRenderingGroups()}}_isInIntermediateRendering(){return this._intermediateRendering}freezeActiveMeshes(){let P=arguments.length>0&&void 0!==arguments[0]&&arguments[0],Q=arguments.length>1?arguments[1]:void 0,O=arguments.length>2?arguments[2]:void 0,b=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],F=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return this.executeWhenReady((()=>{if(this.activeCamera){if(this._frustumPlanes||this.updateTransformMatrix(),this._evaluateActiveMeshes(),this._activeMeshesFrozen=!0,this._activeMeshesFrozenButKeepClipping=F,this._skipEvaluateActiveMeshesCompletely=P,b)for(let P=0;P<this._activeMeshes.length;P++)this._activeMeshes.data[P]._freeze();Q&&Q()}else O&&O("No active camera found")})),this}unfreezeActiveMeshes(){for(let P=0;P<this.meshes.length;P++){const Q=this.meshes[P];Q._internalAbstractMeshDataInfo&&(Q._internalAbstractMeshDataInfo._isActive=!1)}for(let P=0;P<this._activeMeshes.length;P++)this._activeMeshes.data[P]._unFreeze();return this._activeMeshesFrozen=!1,this}_executeActiveContainerCleanup(P){(!this._engine.snapshotRendering||1!==this._engine.snapshotRenderingMode)&&this._activeMeshesFrozen&&this._activeMeshes.length||this.onBeforeRenderObservable.addOnce((()=>P.dispose()))}_evaluateActiveMeshes(){if(this._engine.snapshotRendering&&1===this._engine.snapshotRenderingMode){var P;if(this._activeMeshes.length>0)null===(P=this.activeCamera)||void 0===P||P._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset();return}if(this._activeMeshesFrozen&&this._activeMeshes.length){if(!this._skipEvaluateActiveMeshesCompletely){const P=this._activeMeshes.length;for(let Q=0;Q<P;Q++){this._activeMeshes.data[Q].ak()}}if(this._activeParticleSystems){const P=this._activeParticleSystems.length;for(let Q=0;Q<P;Q++)this._activeParticleSystems.data[Q].animate()}return void this._renderingManager.resetSprites()}if(!this.activeCamera)return;this.onBeforeActiveMeshesEvaluationObservable.notifyObservers(this),this.activeCamera._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset(),this._materialsRenderTargets.reset();for(const b of this._beforeEvaluateActiveMeshStage)b.action();const Q=this.getActiveMeshCandidates(),O=Q.length;for(let b=0;b<O;b++){const P=Q.data[b];let O=P._internalAbstractMeshDataInfo._currentLOD.get(this.activeCamera);if(O?O[1]=-1:(O=[P,-1],P._internalAbstractMeshDataInfo._currentLOD.set(this.activeCamera,O)),P.isBlocked)continue;if(this._totalVertices.addCount(P.getTotalVertices(),!1),!P.isReady()||!P.isEnabled()||P.td.hasAZeroComponent)continue;P.ak(),P.actionManager&&P.actionManager.hasSpecificTriggers2(12,13)&&this._meshesForIntersections.pushNoDuplicate(P);let F=this.customLODSelector?this.customLODSelector(P,this.activeCamera):P.getLOD(this.activeCamera);if(O[0]=F,O[1]=this._frameId,void 0!==F&&null!==F&&(F!==P&&0!==F.billboardMode&&F.ak(),P._preActivate(),P.isVisible&&P.visibility>0&&0!==(P.layerMask&this.activeCamera.layerMask)&&(this._skipFrustumClipping||P.Mc||P.isInFrustum(this._frustumPlanes)))){this._activeMeshes.push(P),this.activeCamera._activeMeshes.push(P),F!==P&&F._activate(this._renderId,!1);for(const Q of this._preActiveMeshStage)Q.action(P);P._activate(this._renderId,!1)&&(P.isAnInstance?P._internalAbstractMeshDataInfo._actAsRegularMesh&&(F=P):F._internalAbstractMeshDataInfo._onlyForInstances=!1,F._internalAbstractMeshDataInfo._isActive=!0,this._activeMesh(P,F)),P._postActivate()}}if(this.onAfterActiveMeshesEvaluationObservable.notifyObservers(this),this.particlesEnabled){this.onBeforeParticlesRenderingObservable.notifyObservers(this);for(let P=0;P<this.Ak.length;P++){const Q=this.Ak[P];if(!Q.isStarted()||!Q.j)continue;const O=Q.j;O.position&&!O.isEnabled()||(this._activeParticleSystems.push(Q),Q.animate(),this._renderingManager.dispatchParticles(Q))}this.onAfterParticlesRenderingObservable.notifyObservers(this)}}_prepareSkeleton(P){this._skeletonsEnabled&&P.skeleton&&(this._activeSkeletons.pushNoDuplicate(P.skeleton)&&(P.skeleton.prepare(),this._activeBones.addCount(P.skeleton.bones.length,!1)),P.computeBonesUsingShaders||this._softwareSkinnedMeshes.pushNoDuplicate(P)&&this.frameGraph&&P.applySkeleton(P.skeleton))}_activeMesh(P,Q){this._prepareSkeleton(Q);let O=P.hasInstances||P.isAnInstance||this.dispatchAllSubMeshesOfActiveMeshes||this._skipFrustumClipping||Q.Mc;if(Q&&Q.pk&&Q.pk.length>0){const b=this.getActiveSubMeshCandidates(Q),F=b.length;O=O||1===F;for(let g=0;g<F;g++){const F=b.data[g];this._evaluateSubMesh(F,Q,P,O)}}}updateTransformMatrix(P){const Q=this.activeCamera;if(Q)if(Q._renderingMultiview){const O=Q._rigCameras[0],b=Q._rigCameras[1];this.setTransformMatrix(O.getViewMatrix(),O.getProjectionMatrix(P),b.getViewMatrix(),b.getProjectionMatrix(P))}else this.setTransformMatrix(Q.getViewMatrix(),Q.getProjectionMatrix(P))}_bindFrameBuffer(P){let Q=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._useCurrentFrameBuffer||(P&&P._multiviewTexture?P._multiviewTexture._bindFrameBuffer():P&&P.outputRenderTarget?P.outputRenderTarget._bindFrameBuffer():this._engine._currentFrameBufferIsDefaultFrameBuffer()||this._engine.restoreDefaultFramebuffer()),Q&&this._clearFrameBuffer(P)}_clearFrameBuffer(P){if(P&&P._multiviewTexture);else if(P&&P.outputRenderTarget&&!P._renderingMultiview){const Q=P.outputRenderTarget;Q.onClearObservable.hasObservers()?Q.onClearObservable.notifyObservers(this._engine):Q.skipInitialClear||P.isRightCamera||(this.Gl&&this._engine.clear(Q.clearColor||this._clearColor,!Q._cleared,!0,!0),Q._cleared=!0)}else this._defaultFrameBufferCleared?this._engine.clear(null,!1,!0,!0):(this._defaultFrameBufferCleared=!0,this._clear())}_renderForCamera(P,Q){var O;let F=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(P&&P._skipRendering)return;const g=this._engine;if(this._activeCamera=P,!this.activeCamera)throw new Error("Active camera not set");if(g.setViewport(this.activeCamera.viewport),this.resetCachedMaterial(),this._renderId++,!this.prePass&&F){let Q=!0;P._renderingMultiview&&P.outputRenderTarget&&(Q=P.outputRenderTarget.skipInitialClear,this.Gl&&(this._defaultFrameBufferCleared=!1,P.outputRenderTarget.skipInitialClear=!1)),this._bindFrameBuffer(this._activeCamera),P._renderingMultiview&&P.outputRenderTarget&&(P.outputRenderTarget.skipInitialClear=Q)}this.updateTransformMatrix(),this.onBeforeCameraRenderObservable.notifyObservers(this.activeCamera),this._evaluateActiveMeshes();for(let b=0;b<this._softwareSkinnedMeshes.length;b++){const P=this._softwareSkinnedMeshes.data[b];P.applySkeleton(P.skeleton)}this.onBeforeRenderTargetsRenderObservable.notifyObservers(this),this._renderTargets.concatWithNoDuplicate(this._materialsRenderTargets),P.customRenderTargets&&P.customRenderTargets.length>0&&this._renderTargets.concatWithNoDuplicate(P.customRenderTargets),Q&&Q.customRenderTargets&&Q.customRenderTargets.length>0&&this._renderTargets.concatWithNoDuplicate(Q.customRenderTargets),this.environmentTexture&&this.environmentTexture.isRenderTarget&&this._renderTargets.pushNoDuplicate(this.environmentTexture);for(const b of this._gatherActiveCameraRenderTargetsStage)b.action(this._renderTargets);let m=!1;if(this.renderTargetsEnabled){if(this._intermediateRendering=!0,this._renderTargets.length>0){b.d.StartPerformanceCounter("Render targets",this._renderTargets.length>0);for(let P=0;P<this._renderTargets.length;P++){const Q=this._renderTargets.data[P];if(Q._shouldRender()){this._renderId++;const P=Q.activeCamera&&Q.activeCamera!==this.activeCamera;Q.render(P,this.dumpNextRenderTargets),m=!0}}b.d.EndPerformanceCounter("Render targets",this._renderTargets.length>0),this._renderId++}for(const P of this._cameraDrawRenderTargetStage)m=P.action(this.activeCamera)||m;this._intermediateRendering=!1}this._engine.currentRenderPassId=(null===(O=P.outputRenderTarget)||void 0===O?void 0:O.renderPassId)??P.renderPassId??0,m&&!this.prePass&&(this._bindFrameBuffer(this._activeCamera,!1),this.updateTransformMatrix()),this.onAfterRenderTargetsRenderObservable.notifyObservers(this),!this.postProcessManager||P._multiviewTexture||this.prePass||this.postProcessManager._prepareFrame();for(const b of this._beforeCameraDrawStage)b.action(this.activeCamera);this.onBeforeDrawPhaseObservable.notifyObservers(this),g.snapshotRendering&&1===g.snapshotRenderingMode&&this.finalizeSceneUbo(),this._renderingManager.render(null,null,!0,!0),this.onAfterDrawPhaseObservable.notifyObservers(this);for(const b of this._afterCameraDrawStage)b.action(this.activeCamera);if(this.postProcessManager&&!P._multiviewTexture){const Q=P.outputRenderTarget?P.outputRenderTarget.renderTarget:void 0;this.postProcessManager._finalizeFrame(P.isIntermediate,Q)}for(const b of this._afterCameraPostProcessStage)b.action(this.activeCamera);this._renderTargets.reset(),this.onAfterCameraRenderObservable.notifyObservers(this.activeCamera)}_processSubCameras(P){let Q=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(0===P.cameraRigMode||P._renderingMultiview)return P._renderingMultiview&&!this._multiviewSceneUbo&&this._createMultiviewUbo(),this._renderForCamera(P,void 0,Q),void this.onAfterRenderCameraObservable.notifyObservers(P);if(P._useMultiviewToSingleView)this._renderMultiviewToSingleView(P);else{this.onBeforeCameraRenderObservable.notifyObservers(P);for(let Q=0;Q<P._rigCameras.length;Q++)this._renderForCamera(P._rigCameras[Q],P)}this._activeCamera=P,this.updateTransformMatrix(),this.onAfterRenderCameraObservable.notifyObservers(P)}_checkIntersections(){for(let P=0;P<this._meshesForIntersections.length;P++){const Q=this._meshesForIntersections.data[P];if(Q.actionManager)for(let P=0;Q.actionManager&&P<Q.actionManager.actions.length;P++){const O=Q.actionManager.actions[P];if(12===O.trigger||13===O.trigger){const P=O.getTriggerParameter(),b=P.mesh?P.mesh:P,F=b.intersectsMesh(Q,P.usePreciseIntersection),g=Q._intersectionsInProgress.indexOf(b);F&&-1===g?12===O.trigger?(O._executeCurrent(A.CreateNew(Q,void 0,b)),Q._intersectionsInProgress.push(b)):13===O.trigger&&Q._intersectionsInProgress.push(b):!F&&g>-1&&(13===O.trigger&&O._executeCurrent(A.CreateNew(Q,void 0,b)),Q.actionManager.hasSpecificTrigger(13,(P=>{const Q=P.mesh?P.mesh:P;return b===Q}))&&13!==O.trigger||Q._intersectionsInProgress.splice(g,1))}}}}_advancePhysicsEngineStep(P){}_animate(P){}animate(){if(this._engine.isDeterministicLockStep()){let P=Math.max(PP.MinDeltaTime,Math.min(this._engine.getDeltaTime(),PP.MaxDeltaTime))+this._timeAccumulator;const Q=this._engine.getTimeStep(),O=1e3/Q/1e3;let b=0;const F=this._engine.getLockstepMaxSteps();let g=Math.floor(P/Q);for(g=Math.min(g,F);P>0&&b<g;)this.onBeforeStepObservable.notifyObservers(this),this._animationRatio=Q*O,this._animate(Q),this.onAfterAnimationsObservable.notifyObservers(this),this.physicsEnabled&&this._advancePhysicsEngineStep(Q),this.onAfterStepObservable.notifyObservers(this),this._currentStepId++,b++,P-=Q;this._timeAccumulator=P<0?0:P}else{const P=this.useConstantAnimationDeltaTime?16:Math.max(PP.MinDeltaTime,Math.min(this._engine.getDeltaTime(),PP.MaxDeltaTime));this._animationRatio=.06*P,this._animate(),this.onAfterAnimationsObservable.notifyObservers(this),this.physicsEnabled&&this._advancePhysicsEngineStep(P)}}_clear(){(this.autoClearDepthAndStencil||this.Gl)&&this._engine.clear(this._clearColor,this.Gl||this.forceWireframe||this.forcePointsCloud,this.autoClearDepthAndStencil,this.autoClearDepthAndStencil)}_checkCameraRenderTarget(P){var Q;if(null===P||void 0===P||!P.outputRenderTarget||null!==P&&void 0!==P&&P.isRigCamera||(P.outputRenderTarget._cleared=!1),null!==P&&void 0!==P&&null!==(Q=P.rigCameras)&&void 0!==Q&&Q.length)for(let O=0;O<P.rigCameras.length;++O){const Q=P.rigCameras[O].outputRenderTarget;Q&&(Q._cleared=!1)}}resetDrawCache(P){if(this.meshes)for(const Q of this.meshes)Q.resetDrawCache(P)}_renderWithFrameGraph(){var P;let Q=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this.activeCamera=null,this._activeParticleSystems.reset(),this._activeSkeletons.reset(),Q)for(const F of this.cameras)if(F.update(),0!==F.cameraRigMode)for(let P=0;P<F._rigCameras.length;P++)F._rigCameras[P].update();this.onBeforeRenderObservable.notifyObservers(this);for(const F of this._beforeClearStage)F.action();const O=this.getActiveMeshCandidates(),b=O.length;for(let F=0;F<b;F++){const P=O.data[F];P.isBlocked||(this._totalVertices.addCount(P.getTotalVertices(),!1),P.isReady()&&P.isEnabled()&&!P.td.hasAZeroComponent&&(P.ak(),P.actionManager&&P.actionManager.hasSpecificTriggers2(12,13)&&this._meshesForIntersections.pushNoDuplicate(P)))}if(this.particlesEnabled)for(let F=0;F<this.Ak.length;F++){const P=this.Ak[F];if(!P.isStarted()||!P.j)continue;const Q=P.j;Q.position&&!Q.isEnabled()||(this._activeParticleSystems.push(P),P.animate())}null===(P=this.frameGraph)||void 0===P||P.execute()}_renderRenderTarget(P,Q){let O=arguments.length>2&&void 0!==arguments[2]&&arguments[2],b=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(this._intermediateRendering=!0,P._shouldRender()){if(this._renderId++,this.activeCamera=Q,!this.activeCamera)throw new Error("Active camera not set");this._engine.setViewport(this.activeCamera.viewport),this.updateTransformMatrix(),P.render(O,b)}this._intermediateRendering=!1}render(){var P;let Q=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],O=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this.u){if(this.onReadyObservable.hasObservers()&&null===this._executeWhenReadyTimeoutId&&this._checkIsReady(),this._frameId++,this._defaultFrameBufferCleared=!1,this._checkCameraRenderTarget(this.activeCamera),null!==(P=this.activeCameras)&&void 0!==P&&P.length)for(const P of this.activeCameras)this._checkCameraRenderTarget(P);this._registerTransientComponents(),this._activeParticles.fetchNewFrame(),this._totalVertices.fetchNewFrame(),this._activeIndices.fetchNewFrame(),this._activeBones.fetchNewFrame(),this._meshesForIntersections.reset(),this.resetCachedMaterial(),this.onBeforeAnimationsObservable.notifyObservers(this),this.actionManager&&this.actionManager.processTrigger(11),O||this.animate();for(const P of this._beforeCameraUpdateStage)P.action();if(Q)if(this.activeCameras&&this.activeCameras.length>0)for(let P=0;P<this.activeCameras.length;P++){const Q=this.activeCameras[P];if(Q.update(),0!==Q.cameraRigMode)for(let P=0;P<Q._rigCameras.length;P++)Q._rigCameras[P].update()}else if(this.activeCamera&&(this.activeCamera.update(),0!==this.activeCamera.cameraRigMode))for(let P=0;P<this.activeCamera._rigCameras.length;P++)this.activeCamera._rigCameras[P].update();if(this.customRenderFunction)this._renderId++,this._engine.currentRenderPassId=0,this.customRenderFunction(Q,O);else{var F;this.onBeforeRenderObservable.notifyObservers(this),this.onBeforeRenderTargetsRenderObservable.notifyObservers(this);const P=null!==(F=this.activeCameras)&&void 0!==F&&F.length?this.activeCameras[0]:this.activeCamera;if(this.renderTargetsEnabled){b.d.StartPerformanceCounter("Custom render targets",this.customRenderTargets.length>0);for(let Q=0;Q<this.customRenderTargets.length;Q++){const O=this.customRenderTargets[Q],b=O.activeCamera||this.activeCamera;this._renderRenderTarget(O,b,P!==b,this.dumpNextRenderTargets)}b.d.EndPerformanceCounter("Custom render targets",this.customRenderTargets.length>0),this._renderId++}this._engine.currentRenderPassId=(null===P||void 0===P?void 0:P.renderPassId)??0,this.activeCamera=P,this._activeCamera&&22!==this._activeCamera.cameraRigMode&&!this.prePass&&this._bindFrameBuffer(this._activeCamera,!1),this.onAfterRenderTargetsRenderObservable.notifyObservers(this);for(const Q of this._beforeClearStage)Q.action();this._clearFrameBuffer(this.activeCamera);for(const Q of this._gatherRenderTargetsStage)Q.action(this._renderTargets);if(this.activeCameras&&this.activeCameras.length>0)for(let Q=0;Q<this.activeCameras.length;Q++)this._processSubCameras(this.activeCameras[Q],Q>0);else{if(!this.activeCamera)throw new Error("No camera defined");this._processSubCameras(this.activeCamera,!!this.activeCamera.outputRenderTarget)}}this._checkIntersections();for(const P of this._afterRenderStage)P.action();if(this.afterRender&&this.afterRender(),this.onAfterRenderObservable.notifyObservers(this),this._toBeDisposed.length){for(let P=0;P<this._toBeDisposed.length;P++){const Q=this._toBeDisposed[P];Q&&Q.dispose()}this._toBeDisposed.length=0}this.dumpNextRenderTargets&&(this.dumpNextRenderTargets=!1),this._activeBones.addCount(0,!0),this._activeIndices.addCount(0,!0),this._activeParticles.addCount(0,!0),this._engine.restoreDefaultFramebuffer()}}freezeMaterials(){for(let P=0;P<this.materials.length;P++)this.materials[P].freeze()}unfreezeMaterials(){for(let P=0;P<this.materials.length;P++)this.materials[P].unfreeze()}dispose(){if(this.u)return;if(this.beforeRender=null,this.afterRender=null,this.metadata=null,this.skeletons.length=0,this.morphTargetManagers.length=0,this._transientComponents.length=0,this._isReadyForMeshStage.clear(),this._beforeEvaluateActiveMeshStage.clear(),this._evaluateSubMeshStage.clear(),this._preActiveMeshStage.clear(),this._cameraDrawRenderTargetStage.clear(),this._beforeCameraDrawStage.clear(),this._beforeRenderTargetDrawStage.clear(),this._beforeRenderingGroupDrawStage.clear(),this._beforeRenderingMeshStage.clear(),this._afterRenderingMeshStage.clear(),this._afterRenderingGroupDrawStage.clear(),this._afterCameraDrawStage.clear(),this._afterRenderTargetDrawStage.clear(),this._afterRenderStage.clear(),this._beforeCameraUpdateStage.clear(),this._beforeClearStage.clear(),this._gatherRenderTargetsStage.clear(),this._gatherActiveCameraRenderTargetsStage.clear(),this._pointerMoveStage.clear(),this._pointerDownStage.clear(),this._pointerUpStage.clear(),this.importedMeshesFiles=[],this._activeAnimatables&&this.stopAllAnimations){for(const P of this._activeAnimatables)P.onAnimationEndObservable.clear(),P.onAnimationEnd=null;this.stopAllAnimations()}this.resetCachedMaterial(),this.activeCamera&&(this.activeCamera._activeMeshes.dispose(),this.activeCamera=null),this.activeCameras=null,this._activeMeshes.dispose(),this._renderingManager.dispose(),this._processedMaterials.dispose(),this._activeParticleSystems.dispose(),this._activeSkeletons.dispose(),this._softwareSkinnedMeshes.dispose(),this._renderTargets.dispose(),this._materialsRenderTargets.dispose(),this._registeredForLateAnimationBindings.dispose(),this._meshesForIntersections.dispose(),this._toBeDisposed.length=0;const P=this._activeRequests.slice();for(const F of P)F.abort();this._activeRequests.length=0;try{this.ik.notifyObservers(this)}catch(b){k.d.Error("An error occurred while calling onDisposeObservable!",b)}this.$j();if(this._engine.getInputElement())for(let F=0;F<this.cameras.length;F++)this.cameras[F].$j();this._disposeList(this.animationGroups),this._disposeList(this.lights),this.ql&&this.ql.dispose(),this._disposeList(this.multiMaterials),this._disposeList(this.materials),this._disposeList(this.meshes,(P=>P.dispose(!0))),this._disposeList(this.transformNodes,(P=>P.dispose(!0)));const Q=this.cameras;this._disposeList(Q),this._disposeList(this.Ak),this._disposeList(this.postProcesses),this._disposeList(this.textures),this._disposeList(this.morphTargetManagers),this._sceneUbo.dispose(),this._multiviewSceneUbo&&this._multiviewSceneUbo.dispose(),this.postProcessManager.dispose(),this._disposeList(this._components);let O=this._engine.scenes.indexOf(this);if(O>-1&&this._engine.scenes.splice(O,1),K.c._LastCreatedScene===this){K.c._LastCreatedScene=null;let P=K.c.Instances.length-1;for(;P>=0;){const Q=K.c.Instances[P];if(Q.scenes.length>0){K.c._LastCreatedScene=Q.scenes[this._engine.scenes.length-1];break}P--}}O=this._engine._virtualScenes.indexOf(this),O>-1&&this._engine._virtualScenes.splice(O,1),this._engine.wipeCaches(!0),this.ik.clear(),this.onBeforeRenderObservable.clear(),this.onAfterRenderObservable.clear(),this.onBeforeRenderTargetsRenderObservable.clear(),this.onAfterRenderTargetsRenderObservable.clear(),this.onAfterStepObservable.clear(),this.onBeforeStepObservable.clear(),this.onBeforeActiveMeshesEvaluationObservable.clear(),this.onAfterActiveMeshesEvaluationObservable.clear(),this.onBeforeParticlesRenderingObservable.clear(),this.onAfterParticlesRenderingObservable.clear(),this.onBeforeDrawPhaseObservable.clear(),this.onAfterDrawPhaseObservable.clear(),this.onBeforeAnimationsObservable.clear(),this.onAfterAnimationsObservable.clear(),this.onDataLoadedObservable.clear(),this.onBeforeRenderingGroupObservable.clear(),this.onAfterRenderingGroupObservable.clear(),this.onMeshImportedObservable.clear(),this.onBeforeCameraRenderObservable.clear(),this.onAfterCameraRenderObservable.clear(),this.onAfterRenderCameraObservable.clear(),this.onReadyObservable.clear(),this.onNewCameraAddedObservable.clear(),this.onCameraRemovedObservable.clear(),this.onNewLightAddedObservable.clear(),this.onLightRemovedObservable.clear(),this.onNewGeometryAddedObservable.clear(),this.onGeometryRemovedObservable.clear(),this.onNewTransformNodeAddedObservable.clear(),this.onTransformNodeRemovedObservable.clear(),this.onNewMeshAddedObservable.clear(),this.onMeshRemovedObservable.clear(),this.onNewSkeletonAddedObservable.clear(),this.onSkeletonRemovedObservable.clear(),this.onNewMaterialAddedObservable.clear(),this.onNewMultiMaterialAddedObservable.clear(),this.onMaterialRemovedObservable.clear(),this.onMultiMaterialRemovedObservable.clear(),this.onNewTextureAddedObservable.clear(),this.onTextureRemovedObservable.clear(),this.onPrePointerObservable.clear(),this.onPointerObservable.clear(),this.onPreKeyboardObservable.clear(),this.onKeyboardObservable.clear(),this.onActiveCameraChanged.clear(),this.onScenePerformancePriorityChangedObservable.clear(),this.onClearColorChangedObservable.clear(),this.onEnvironmentTextureChangedObservable.clear(),this.onMeshUnderPointerUpdatedObservable.clear(),this._isDisposed=!0}_disposeList(P,Q){const O=P.slice(0);Q=Q??(P=>P.dispose());for(const b of O)Q(b);P.length=0}get u(){return this._isDisposed}clearCachedVertexData(){for(let P=0;P<this.meshes.length;P++){const Q=this.meshes[P].qk;Q&&Q.clearCachedData()}}cleanCachedTextureBuffer(){for(const P of this.textures){P._buffer&&(P._buffer=null)}}getWorldExtends(P){const Q=new X.j(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),O=new X.j(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);P=P||(()=>!0);const b=this.meshes.filter(P);for(const F of b){if(F.ak(!0),!F.pk||0===F.pk.length||F.infiniteDistance)continue;const P=F.getBoundingInfo(),b=P.boundingBox.minimumWorld,g=P.boundingBox.maximumWorld;X.j.CheckExtends(b,Q,O),X.j.CheckExtends(g,Q,O)}return{min:Q,max:O}}createPickingRay(P,Q,O,b){throw(0,T.b)("Ray")}createPickingRayToRef(P,Q,O,b,F){throw(0,T.b)("Ray")}createPickingRayInCameraSpace(P,Q,O){throw(0,T.b)("Ray")}createPickingRayInCameraSpaceToRef(P,Q,O,b){throw(0,T.b)("Ray")}_d(P,Q,O,b,F,g){const m=(0,T.b)("Ray",!0);return m&&k.d.Warn(m),new G.d}pickWithBoundingInfo(P,Q,O,b,F){const g=(0,T.b)("Ray",!0);return g&&k.d.Warn(g),new G.d}pickWithRay(P,Q,O,b){throw(0,T.b)("Ray")}multiPick(P,Q,O,b,F){throw(0,T.b)("Ray")}multiPickWithRay(P,Q,O){throw(0,T.b)("Ray")}setPointerOverMesh(P,Q,O){this._inputManager.setPointerOverMesh(P,Q,O)}getPointerOverMesh(){return this._inputManager.getPointerOverMesh()}_rebuildGeometries(){for(const P of this.geometries)P._rebuild();for(const P of this.meshes)P._rebuild();this.postProcessManager&&this.postProcessManager._rebuild();for(const P of this._components)P.rebuild();for(const P of this.Ak)P.rebuild();if(this.spriteManagers)for(const P of this.spriteManagers)P.rebuild()}_rebuildTextures(){for(const P of this.textures)P._rebuild(!0);this.markAllMaterialsAsDirty(1)}_getByTags(P,Q,O){if(void 0===Q)return P;const b=[];for(const F in P){const g=P[F];R.c&&R.c.MatchesQuery(g,Q)&&(!O||O(g))&&b.push(g)}return b}getMeshesByTags(P,Q){return this._getByTags(this.meshes,P,Q)}getCamerasByTags(P,Q){return this._getByTags(this.cameras,P,Q)}getLightsByTags(P,Q){return this._getByTags(this.lights,P,Q)}getMaterialByTags(P,Q){return this._getByTags(this.materials,P,Q).concat(this._getByTags(this.multiMaterials,P,Q))}getTransformNodesByTags(P,Q){return this._getByTags(this.transformNodes,P,Q)}setRenderingOrder(P){let Q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,O=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,b=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this._renderingManager.setRenderingOrder(P,Q,O,b)}setRenderingAutoClearDepthStencil(P,Q){let O=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],b=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._renderingManager.setRenderingAutoClearDepthStencil(P,Q,O,b)}getAutoClearDepthStencilSetup(P){return this._renderingManager.getAutoClearDepthStencilSetup(P)}_forceBlockMaterialDirtyMechanism(P){this._blockMaterialDirtyMechanism=P}get blockMaterialDirtyMechanism(){return this._blockMaterialDirtyMechanism}set blockMaterialDirtyMechanism(P){this._blockMaterialDirtyMechanism!==P&&(this._blockMaterialDirtyMechanism=P,P||this.markAllMaterialsAsDirty(127))}markAllMaterialsAsDirty(P,Q){if(!this._blockMaterialDirtyMechanism)for(const O of this.materials)Q&&!Q(O)||O._j(P)}_loadFile(P,Q,O,b,F,g,m){const q=(0,f.v)(P,Q,O,b?this.offlineProvider:void 0,F,g,m);return this._activeRequests.push(q),q.onCompleteObservable.add((P=>{this._activeRequests.splice(this._activeRequests.indexOf(P),1)})),q}async _loadFileAsync(P,Q,O,b,F){return await new Promise(((g,m)=>{this._loadFile(P,(P=>{g(P)}),Q,O,b,((P,Q)=>{m(Q)}),F)}))}_requestFile(P,Q,O,b,F,g,m){const q=(0,f.E)(P,Q,O,b?this.offlineProvider:void 0,F,g,m);return this._activeRequests.push(q),q.onCompleteObservable.add((P=>{this._activeRequests.splice(this._activeRequests.indexOf(P),1)})),q}async _requestFileAsync(P,Q,O,b,F){return await new Promise(((g,m)=>{this._requestFile(P,(P=>{g(P)}),Q,O,b,(P=>{m(P)}),F)}))}_readFile(P,Q,O,b,F){const g=(0,f.B)(P,Q,O,b,F);return this._activeRequests.push(g),g.onCompleteObservable.add((P=>{this._activeRequests.splice(this._activeRequests.indexOf(P),1)})),g}async _readFileAsync(P,Q,O){return await new Promise(((b,F)=>{this._readFile(P,(P=>{b(P)}),Q,O,(P=>{F(P)}))}))}getPerfCollector(){throw(0,T.b)("performanceViewerSceneExtension")}setActiveCameraByID(P){return this.setActiveCameraById(P)}getMaterialByID(P){return this.getMaterialById(P)}getLastMaterialByID(P){return this.getLastMaterialById(P)}getTextureByUniqueID(P){return this.getTextureByUniqueId(P)}getCameraByID(P){return this.getCameraById(P)}getCameraByUniqueID(P){return this.getCameraByUniqueId(P)}getBoneByID(P){return this.getBoneById(P)}getLightByID(P){return this.getLightById(P)}getLightByUniqueID(P){return this.getLightByUniqueId(P)}getParticleSystemByID(P){return this.getParticleSystemById(P)}getGeometryByID(P){return this.getGeometryById(P)}getMeshByID(P){return this.getMeshById(P)}getMeshByUniqueID(P){return this.getMeshByUniqueId(P)}getLastMeshByID(P){return this.getLastMeshById(P)}getMeshesByID(P){return this.getMeshesById(P)}getTransformNodeByID(P){return this.getTransformNodeById(P)}getTransformNodeByUniqueID(P){return this.getTransformNodeByUniqueId(P)}getTransformNodesByID(P){return this.getTransformNodesById(P)}getNodeByID(P){return this.getNodeById(P)}getLastEntryByID(P){return this.getLastEntryById(P)}getLastSkeletonByID(P){return this.getLastSkeletonById(P)}}PP.FOGMODE_NONE=0,PP.FOGMODE_EXP=1,PP.FOGMODE_EXP2=2,PP.FOGMODE_LINEAR=3,PP.MinDeltaTime=1,PP.MaxDeltaTime=1e3,PP._OriginalDefaultMaterialFactory=PP.DefaultMaterialFactory,(0,v.f)("BABYLON.Scene",PP)}}]);