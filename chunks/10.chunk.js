"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[10,11],{2462:(A,X,s)=>{var N;s.d(X,{e:()=>f}),function(A){A[A.PointerMove=0]="PointerMove",A[A.PointerDown=1]="PointerDown",A[A.PointerUp=2]="PointerUp"}(N||(N={}));class f{}f.DOM_DELTA_PIXEL=0,f.DOM_DELTA_LINE=1,f.DOM_DELTA_PAGE=2},2456:(A,X,s)=>{s.d(X,{c:()=>N,g:()=>E,j:()=>f});class N{}N.KEYDOWN=1,N.KEYUP=2;class f{constructor(A,X){this.type=A,this.event=X}}class E extends f{get skipOnPointerObservable(){return this.skipOnKeyboardObservable}set skipOnPointerObservable(A){this.skipOnKeyboardObservable=A}constructor(A,X){super(A,X),this.type=A,this.event=X,this.skipOnKeyboardObservable=!1}}},2450:(A,X,s)=>{s.d(X,{b:()=>f,c:()=>g,g:()=>K});var N=s(678);class f{}f.POINTERDOWN=1,f.POINTERUP=2,f.POINTERMOVE=4,f.POINTERWHEEL=8,f.POINTERPICK=16,f.POINTERTAP=32,f.POINTERDOUBLETAP=64;class E{constructor(A,X){this.type=A,this.event=X}}class g extends E{constructor(A,X,s,f){super(A,X),this.ray=null,this.originalPickingInfo=null,this.skipOnPointerObservable=!1,this.localPosition=new N.i(s,f)}}class K extends E{get pickInfo(){return this._pickInfo||this._generatePickInfo(),this._pickInfo}constructor(A,X,s){let N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(A,X),this._pickInfo=s,this._inputManager=N}_generatePickInfo(){this._inputManager&&(this._pickInfo=this._inputManager._pickMove(this.event),this._inputManager._setRayOnPointerInfo(this._pickInfo,this.event),this._inputManager=null)}}},2492:(A,X,s)=>{var N=s(2267),f=s(2288);f.b.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(f.b.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=N.c.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((A=>{this._texture._sphericalPolynomial=A,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(A){this._texture&&(this._texture._sphericalPolynomial=A)},enumerable:!0,configurable:!0})},2433:(A,X,s)=>{function N(A){A.push("vCameraColorCurveNeutral","vCameraColorCurvePositive","vCameraColorCurveNegative")}s.d(X,{d:()=>N})},2442:(A,X,s)=>{s.d(X,{d:()=>E,f:()=>f});var N=s(2433);function f(A,X){X.EXPOSURE&&A.push("exposureLinear"),X.CONTRAST&&A.push("contrast"),X.COLORGRADING&&A.push("colorTransformSettings"),(X.VIGNETTE||X.DITHER)&&A.push("vInverseScreenSize"),X.VIGNETTE&&(A.push("vignetteSettings1"),A.push("vignetteSettings2")),X.COLORCURVES&&(0,N.d)(A),X.DITHER&&A.push("ditherIntensity")}function E(A,X){X.COLORGRADING&&A.push("txColorTransform")}},2426:(A,X,s)=>{s.d(X,{e:()=>M});var N=s(657),f=s(666),E=s(454),g=s(709),K=s(707),r=s(2433);class i{constructor(){this._dirty=!0,this._tempColor=new g.h(0,0,0,0),this._globalCurve=new g.h(0,0,0,0),this._highlightsCurve=new g.h(0,0,0,0),this._midtonesCurve=new g.h(0,0,0,0),this._shadowsCurve=new g.h(0,0,0,0),this._positiveCurve=new g.h(0,0,0,0),this._negativeCurve=new g.h(0,0,0,0),this._globalHue=30,this._globalDensity=0,this._globalSaturation=0,this._globalExposure=0,this._highlightsHue=30,this._highlightsDensity=0,this._highlightsSaturation=0,this._highlightsExposure=0,this._midtonesHue=30,this._midtonesDensity=0,this._midtonesSaturation=0,this._midtonesExposure=0,this._shadowsHue=30,this._shadowsDensity=0,this._shadowsSaturation=0,this._shadowsExposure=0}get globalHue(){return this._globalHue}set globalHue(A){this._globalHue=A,this._dirty=!0}get globalDensity(){return this._globalDensity}set globalDensity(A){this._globalDensity=A,this._dirty=!0}get globalSaturation(){return this._globalSaturation}set globalSaturation(A){this._globalSaturation=A,this._dirty=!0}get globalExposure(){return this._globalExposure}set globalExposure(A){this._globalExposure=A,this._dirty=!0}get highlightsHue(){return this._highlightsHue}set highlightsHue(A){this._highlightsHue=A,this._dirty=!0}get highlightsDensity(){return this._highlightsDensity}set highlightsDensity(A){this._highlightsDensity=A,this._dirty=!0}get highlightsSaturation(){return this._highlightsSaturation}set highlightsSaturation(A){this._highlightsSaturation=A,this._dirty=!0}get highlightsExposure(){return this._highlightsExposure}set highlightsExposure(A){this._highlightsExposure=A,this._dirty=!0}get midtonesHue(){return this._midtonesHue}set midtonesHue(A){this._midtonesHue=A,this._dirty=!0}get midtonesDensity(){return this._midtonesDensity}set midtonesDensity(A){this._midtonesDensity=A,this._dirty=!0}get midtonesSaturation(){return this._midtonesSaturation}set midtonesSaturation(A){this._midtonesSaturation=A,this._dirty=!0}get midtonesExposure(){return this._midtonesExposure}set midtonesExposure(A){this._midtonesExposure=A,this._dirty=!0}get shadowsHue(){return this._shadowsHue}set shadowsHue(A){this._shadowsHue=A,this._dirty=!0}get shadowsDensity(){return this._shadowsDensity}set shadowsDensity(A){this._shadowsDensity=A,this._dirty=!0}get shadowsSaturation(){return this._shadowsSaturation}set shadowsSaturation(A){this._shadowsSaturation=A,this._dirty=!0}get shadowsExposure(){return this._shadowsExposure}set shadowsExposure(A){this._shadowsExposure=A,this._dirty=!0}getClassName(){return"ColorCurves"}static Bind(A,X){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"vCameraColorCurvePositive",N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"vCameraColorCurveNeutral",f=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"vCameraColorCurveNegative";A._dirty&&(A._dirty=!1,A._getColorGradingDataToRef(A._globalHue,A._globalDensity,A._globalSaturation,A._globalExposure,A._globalCurve),A._getColorGradingDataToRef(A._highlightsHue,A._highlightsDensity,A._highlightsSaturation,A._highlightsExposure,A._tempColor),A._tempColor.multiplyToRef(A._globalCurve,A._highlightsCurve),A._getColorGradingDataToRef(A._midtonesHue,A._midtonesDensity,A._midtonesSaturation,A._midtonesExposure,A._tempColor),A._tempColor.multiplyToRef(A._globalCurve,A._midtonesCurve),A._getColorGradingDataToRef(A._shadowsHue,A._shadowsDensity,A._shadowsSaturation,A._shadowsExposure,A._tempColor),A._tempColor.multiplyToRef(A._globalCurve,A._shadowsCurve),A._highlightsCurve.subtractToRef(A._midtonesCurve,A._positiveCurve),A._midtonesCurve.subtractToRef(A._shadowsCurve,A._negativeCurve)),X&&(X.setFloat4(s,A._positiveCurve.r,A._positiveCurve.g,A._positiveCurve.b,A._positiveCurve.a),X.setFloat4(N,A._midtonesCurve.r,A._midtonesCurve.g,A._midtonesCurve.b,A._midtonesCurve.a),X.setFloat4(f,A._negativeCurve.r,A._negativeCurve.g,A._negativeCurve.b,A._negativeCurve.a))}_getColorGradingDataToRef(A,X,s,N,f){null!=A&&(A=i._Clamp(A,0,360),X=i._Clamp(X,-100,100),s=i._Clamp(s,-100,100),N=i._Clamp(N,-100,100),X=i._ApplyColorGradingSliderNonlinear(X),X*=.5,N=i._ApplyColorGradingSliderNonlinear(N),X<0&&(X*=-1,A=(A+180)%360),i._FromHSBToRef(A,X,50+.25*N,f),f.scaleToRef(2,f),f.a=1+.01*s)}static _ApplyColorGradingSliderNonlinear(A){A/=100;let X=Math.abs(A);return X=Math.pow(X,2),A<0&&(X*=-1),X*=100,X}static _FromHSBToRef(A,X,s,N){let f=i._Clamp(A,0,360);const E=i._Clamp(X/100,0,1),g=i._Clamp(s/100,0,1);if(0===E)N.r=g,N.g=g,N.b=g;else{f/=60;const A=Math.floor(f),X=f-A,s=g*(1-E),K=g*(1-E*X),r=g*(1-E*(1-X));switch(A){case 0:N.r=g,N.g=r,N.b=s;break;case 1:N.r=K,N.g=g,N.b=s;break;case 2:N.r=s,N.g=g,N.b=r;break;case 3:N.r=s,N.g=K,N.b=g;break;case 4:N.r=r,N.g=s,N.b=g;break;default:N.r=g,N.g=s,N.b=K}}N.a=1}static _Clamp(A,X,s){return Math.min(Math.max(A,X),s)}clone(){return K.c.Clone((()=>new i),this)}serialize(){return K.c.Serialize(this)}static Parse(A){return K.c.Parse((()=>new i),A,null,null)}}i.PrepareUniforms=r.d,(0,N.e)([(0,f.M)()],i.prototype,"_globalHue",void 0),(0,N.e)([(0,f.M)()],i.prototype,"_globalDensity",void 0),(0,N.e)([(0,f.M)()],i.prototype,"_globalSaturation",void 0),(0,N.e)([(0,f.M)()],i.prototype,"_globalExposure",void 0),(0,N.e)([(0,f.M)()],i.prototype,"_highlightsHue",void 0),(0,N.e)([(0,f.M)()],i.prototype,"_highlightsDensity",void 0),(0,N.e)([(0,f.M)()],i.prototype,"_highlightsSaturation",void 0),(0,N.e)([(0,f.M)()],i.prototype,"_highlightsExposure",void 0),(0,N.e)([(0,f.M)()],i.prototype,"_midtonesHue",void 0),(0,N.e)([(0,f.M)()],i.prototype,"_midtonesDensity",void 0),(0,N.e)([(0,f.M)()],i.prototype,"_midtonesSaturation",void 0),(0,N.e)([(0,f.M)()],i.prototype,"_midtonesExposure",void 0),K.c._ColorCurvesParser=i.Parse;var Y=s(629),v=s(2442),c=s(616);class M{constructor(){this.colorCurves=new i,this._colorCurvesEnabled=!1,this._colorGradingEnabled=!1,this._colorGradingWithGreenDepth=!0,this._colorGradingBGR=!0,this._exposure=1,this._toneMappingEnabled=!1,this._toneMappingType=M.TONEMAPPING_STANDARD,this._contrast=1,this.vignetteStretch=0,this.vignetteCenterX=0,this.vignetteCenterY=0,this.vignetteWeight=1.5,this.vignetteColor=new g.h(0,0,0,0),this.vignetteCameraFov=.5,this._vignetteBlendMode=M.VIGNETTEMODE_MULTIPLY,this._vignetteEnabled=!1,this._ditheringEnabled=!1,this._ditheringIntensity=1/255,this._skipFinalColorClamp=!1,this._applyByPostProcess=!1,this._isEnabled=!0,this.outputTextureWidth=0,this.outputTextureHeight=0,this.onUpdateParameters=new E.b}get colorCurvesEnabled(){return this._colorCurvesEnabled}set colorCurvesEnabled(A){this._colorCurvesEnabled!==A&&(this._colorCurvesEnabled=A,this._updateParameters())}get colorGradingTexture(){return this._colorGradingTexture}set colorGradingTexture(A){this._colorGradingTexture!==A&&(this._colorGradingTexture=A,this._updateParameters())}get colorGradingEnabled(){return this._colorGradingEnabled}set colorGradingEnabled(A){this._colorGradingEnabled!==A&&(this._colorGradingEnabled=A,this._updateParameters())}get colorGradingWithGreenDepth(){return this._colorGradingWithGreenDepth}set colorGradingWithGreenDepth(A){this._colorGradingWithGreenDepth!==A&&(this._colorGradingWithGreenDepth=A,this._updateParameters())}get colorGradingBGR(){return this._colorGradingBGR}set colorGradingBGR(A){this._colorGradingBGR!==A&&(this._colorGradingBGR=A,this._updateParameters())}get exposure(){return this._exposure}set exposure(A){this._exposure!==A&&(this._exposure=A,this._updateParameters())}get toneMappingEnabled(){return this._toneMappingEnabled}set toneMappingEnabled(A){this._toneMappingEnabled!==A&&(this._toneMappingEnabled=A,this._updateParameters())}get toneMappingType(){return this._toneMappingType}set toneMappingType(A){this._toneMappingType!==A&&(this._toneMappingType=A,this._updateParameters())}get contrast(){return this._contrast}set contrast(A){this._contrast!==A&&(this._contrast=A,this._updateParameters())}get vignetteCentreY(){return this.vignetteCenterY}set vignetteCentreY(A){this.vignetteCenterY=A}get vignetteCentreX(){return this.vignetteCenterX}set vignetteCentreX(A){this.vignetteCenterX=A}get vignetteBlendMode(){return this._vignetteBlendMode}set vignetteBlendMode(A){this._vignetteBlendMode!==A&&(this._vignetteBlendMode=A,this._updateParameters())}get vignetteEnabled(){return this._vignetteEnabled}set vignetteEnabled(A){this._vignetteEnabled!==A&&(this._vignetteEnabled=A,this._updateParameters())}get ditheringEnabled(){return this._ditheringEnabled}set ditheringEnabled(A){this._ditheringEnabled!==A&&(this._ditheringEnabled=A,this._updateParameters())}get ditheringIntensity(){return this._ditheringIntensity}set ditheringIntensity(A){this._ditheringIntensity!==A&&(this._ditheringIntensity=A,this._updateParameters())}get skipFinalColorClamp(){return this._skipFinalColorClamp}set skipFinalColorClamp(A){this._skipFinalColorClamp!==A&&(this._skipFinalColorClamp=A,this._updateParameters())}get applyByPostProcess(){return this._applyByPostProcess}set applyByPostProcess(A){this._applyByPostProcess!==A&&(this._applyByPostProcess=A,this._updateParameters())}get isEnabled(){return this._isEnabled}set isEnabled(A){this._isEnabled!==A&&(this._isEnabled=A,this._updateParameters())}_updateParameters(){this.onUpdateParameters.notifyObservers(this)}getClassName(){return"ImageProcessingConfiguration"}prepareDefines(A){if((arguments.length>1&&void 0!==arguments[1]&&arguments[1])!==this.applyByPostProcess||!this._isEnabled)return A.VIGNETTE=!1,A.TONEMAPPING=0,A.CONTRAST=!1,A.EXPOSURE=!1,A.COLORCURVES=!1,A.COLORGRADING=!1,A.COLORGRADING3D=!1,A.DITHER=!1,A.IMAGEPROCESSING=!1,A.SKIPFINALCOLORCLAMP=this.skipFinalColorClamp,void(A.IMAGEPROCESSINGPOSTPROCESS=this.applyByPostProcess&&this._isEnabled);if(A.VIGNETTE=this.vignetteEnabled,A.VIGNETTEBLENDMODEMULTIPLY=this.vignetteBlendMode===M._VIGNETTEMODE_MULTIPLY,A.VIGNETTEBLENDMODEOPAQUE=!A.VIGNETTEBLENDMODEMULTIPLY,this._toneMappingEnabled)switch(this._toneMappingType){case M.TONEMAPPING_KHR_PBR_NEUTRAL:A.TONEMAPPING=3;break;case M.TONEMAPPING_ACES:A.TONEMAPPING=2;break;default:A.TONEMAPPING=1}else A.TONEMAPPING=0;A.CONTRAST=1!==this.contrast,A.EXPOSURE=1!==this.exposure,A.COLORCURVES=this.colorCurvesEnabled&&!!this.colorCurves,A.COLORGRADING=this.colorGradingEnabled&&!!this.colorGradingTexture,A.COLORGRADING?A.COLORGRADING3D=this.colorGradingTexture.is3D:A.COLORGRADING3D=!1,A.SAMPLER3DGREENDEPTH=this.colorGradingWithGreenDepth,A.SAMPLER3DBGRMAP=this.colorGradingBGR,A.DITHER=this._ditheringEnabled,A.IMAGEPROCESSINGPOSTPROCESS=this.applyByPostProcess,A.SKIPFINALCOLORCLAMP=this.skipFinalColorClamp,A.IMAGEPROCESSING=A.VIGNETTE||!!A.TONEMAPPING||A.CONTRAST||A.EXPOSURE||A.COLORCURVES||A.COLORGRADING||A.DITHER}isReady(){return!this.colorGradingEnabled||!this.colorGradingTexture||this.colorGradingTexture.isReady()}bind(A,X){if(this._colorCurvesEnabled&&this.colorCurves&&i.Bind(this.colorCurves,A),this._vignetteEnabled||this._ditheringEnabled){const s=1/(this.outputTextureWidth||A.getEngine().getRenderWidth()),N=1/(this.outputTextureHeight||A.getEngine().getRenderHeight());if(A.setFloat2("vInverseScreenSize",s,N),this._ditheringEnabled&&A.setFloat("ditherIntensity",.5*this._ditheringIntensity),this._vignetteEnabled){const f=null!=X?X:N/s;let E=Math.tan(.5*this.vignetteCameraFov),g=E*f;const K=Math.sqrt(g*E);g=(0,Y.k)(g,K,this.vignetteStretch),E=(0,Y.k)(E,K,this.vignetteStretch),A.setFloat4("vignetteSettings1",g,E,-g*this.vignetteCenterX,-E*this.vignetteCenterY);const r=-2*this.vignetteWeight;A.setFloat4("vignetteSettings2",this.vignetteColor.r,this.vignetteColor.g,this.vignetteColor.b,r)}}if(A.setFloat("exposureLinear",this.exposure),A.setFloat("contrast",this.contrast),this.colorGradingTexture){A.setTexture("txColorTransform",this.colorGradingTexture);const X=this.colorGradingTexture.getSize().height;A.setFloat4("colorTransformSettings",(X-1)/X,.5/X,X,this.colorGradingTexture.level)}}clone(){return K.c.Clone((()=>new M),this)}serialize(){return K.c.Serialize(this)}static Parse(A){const X=K.c.Parse((()=>new M),A,null,null);return void 0!==A.vignetteCentreX&&(X.vignetteCenterX=A.vignetteCentreX),void 0!==A.vignetteCentreY&&(X.vignetteCenterY=A.vignetteCentreY),X}static get VIGNETTEMODE_MULTIPLY(){return this._VIGNETTEMODE_MULTIPLY}static get VIGNETTEMODE_OPAQUE(){return this._VIGNETTEMODE_OPAQUE}}M.TONEMAPPING_STANDARD=0,M.TONEMAPPING_ACES=1,M.TONEMAPPING_KHR_PBR_NEUTRAL=2,M.PrepareUniforms=v.f,M.PrepareSamplers=v.d,M._VIGNETTEMODE_MULTIPLY=0,M._VIGNETTEMODE_OPAQUE=1,(0,N.e)([(0,f.j)()],M.prototype,"colorCurves",void 0),(0,N.e)([(0,f.M)()],M.prototype,"_colorCurvesEnabled",void 0),(0,N.e)([(0,f.G)("colorGradingTexture")],M.prototype,"_colorGradingTexture",void 0),(0,N.e)([(0,f.M)()],M.prototype,"_colorGradingEnabled",void 0),(0,N.e)([(0,f.M)()],M.prototype,"_colorGradingWithGreenDepth",void 0),(0,N.e)([(0,f.M)()],M.prototype,"_colorGradingBGR",void 0),(0,N.e)([(0,f.M)()],M.prototype,"_exposure",void 0),(0,N.e)([(0,f.M)()],M.prototype,"_toneMappingEnabled",void 0),(0,N.e)([(0,f.M)()],M.prototype,"_toneMappingType",void 0),(0,N.e)([(0,f.M)()],M.prototype,"_contrast",void 0),(0,N.e)([(0,f.M)()],M.prototype,"vignetteStretch",void 0),(0,N.e)([(0,f.M)()],M.prototype,"vignetteCenterX",void 0),(0,N.e)([(0,f.M)()],M.prototype,"vignetteCenterY",void 0),(0,N.e)([(0,f.M)()],M.prototype,"vignetteWeight",void 0),(0,N.e)([(0,f.o)()],M.prototype,"vignetteColor",void 0),(0,N.e)([(0,f.M)()],M.prototype,"vignetteCameraFov",void 0),(0,N.e)([(0,f.M)()],M.prototype,"_vignetteBlendMode",void 0),(0,N.e)([(0,f.M)()],M.prototype,"_vignetteEnabled",void 0),(0,N.e)([(0,f.M)()],M.prototype,"_ditheringEnabled",void 0),(0,N.e)([(0,f.M)()],M.prototype,"_ditheringIntensity",void 0),(0,N.e)([(0,f.M)()],M.prototype,"_skipFinalColorClamp",void 0),(0,N.e)([(0,f.M)()],M.prototype,"_applyByPostProcess",void 0),(0,N.e)([(0,f.M)()],M.prototype,"_isEnabled",void 0),(0,N.e)([(0,f.M)()],M.prototype,"outputTextureWidth",void 0),(0,N.e)([(0,f.M)()],M.prototype,"outputTextureHeight",void 0),K.c._ImageProcessingConfigurationParser=M.Parse,(0,c.f)("BABYLON.ImageProcessingConfiguration",M)},2487:(A,X,s)=>{s.r(X),s.d(X,{Dispose:()=>c,DumpData:()=>v,DumpDataAsync:()=>Y,DumpFramebuffer:()=>i,DumpTools:()=>M});var N=s(2318),f=s(456),E=s(696),g=s(503);let K,r=null;async function i(A,X,s,N){let f=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",E=arguments.length>5?arguments[5]:void 0,g=arguments.length>6?arguments[6]:void 0;const K=await s.readPixels(0,0,A,X);v(A,X,new Uint8Array(K.buffer),N,f,E,!0,void 0,g)}async function Y(A,X,s){let N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",f=arguments.length>4?arguments[4]:void 0,E=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6&&void 0!==arguments[6]&&arguments[6],K=arguments.length>7?arguments[7]:void 0;return await new Promise((r=>{v(A,X,s,(A=>r(A)),N,f,E,g,K)}))}function v(A,X,i,Y){let v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",M=arguments.length>5?arguments[5]:void 0,d=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Q=arguments.length>7&&void 0!==arguments[7]&&arguments[7],w=arguments.length>8?arguments[8]:void 0;(async function(){return r||(r=new Promise(((A,X)=>{let f,E=null;const r={Pk:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(s.bind(s,2333)).then((i=>{let{ThinEngine:Y}=i;const v=g.b.Instances.length;try{f=new OffscreenCanvas(100,100),E=new Y(f,!1,r)}catch(Q){var M;v<g.b.Instances.length&&(null===(M=g.b.Instances.pop())||void 0===M||M.dispose()),f=document.createElement("canvas"),E=new Y(f,!1,r)}g.b.Instances.pop(),g.b.OnEnginesDisposedObservable.add((A=>{E&&A!==E&&!E.u&&0===g.b.Instances.length&&c()})),E.getCaps().parallelShaderCompile=void 0;const d=new N.b(E);s.e(35).then(s.bind(s,13213)).then((s=>{let{passPixelShader:g}=s;if(!E)return void X("Engine is not defined");const r=new N.c({Ki:E,name:g.name,fragmentShader:g.shader,samplerNames:["textureSampler"]});K={canvas:f,Ki:E,renderer:d,wrapper:r},A(K)}))})).catch(X)}))),await r})().then((s=>{if(s.Ki.setSize(A,X,!0),i instanceof Float32Array){const A=new Uint8Array(i.length);let X=i.length;for(;X--;){const s=i[X];A[X]=Math.round(255*(0,E.c)(s))}i=A}const N=s.Ki.createRawTexture(i,A,X,5,!1,!d,1);s.renderer.setViewport(),s.renderer.applyEffectWrapper(s.wrapper),s.wrapper.effect._bindTexture("textureSampler",N),s.renderer.draw(),Q?f.d.ToBlob(s.canvas,(A=>{const X=new FileReader;X.onload=A=>{const X=A.target.result;Y&&Y(X)},X.readAsArrayBuffer(A)}),v,w):f.d.EncodeScreenshotCanvasData(s.canvas,Y,v,M,w),N.dispose()}))}function c(){var A;K?(K.wrapper.dispose(),K.renderer.dispose(),K.Ki.dispose()):null===(A=r)||void 0===A||A.then((A=>{A.wrapper.dispose(),A.renderer.dispose(),A.Ki.dispose()}));r=null,K=null}const M={DumpData:v,DumpDataAsync:Y,DumpFramebuffer:i,Dispose:c};f.d.DumpData=v,f.d.DumpDataAsync=Y,f.d.DumpFramebuffer=i},2410:(A,X,s)=>{s.d(X,{e:()=>d,h:()=>C,l:()=>m,p:()=>b});var N=s(456),f=s(678),E=s(696),g=s(2239),K=s(592),r=s(2288),i=(s(2418),s(2310)),Y=s(470);s(2483),s(2487),s(2492);const v="image/png",c=2,M=[134,22,135,150,246,214,150,54];function d(A){const X=new DataView(A.buffer,A.byteOffset,A.byteLength);let s=0;for(let g=0;g<M.length;g++)if(X.getUint8(s++)!==M[g])return Y.b.Error("Not a babylon environment map"),null;let N="",f=0;for(;f=X.getUint8(s++);)N+=String.fromCharCode(f);let E=JSON.parse(N);return E=Q(E),E.binaryDataPosition=s,E.dj&&(E.dj.lodGenerationScale=E.dj.lodGenerationScale||.8),E}function Q(A){if(A.version>c)throw new Error(`Unsupported babylon environment map version "${A.version}". Latest supported version is "${c}".`);return 2===A.version?A:A={...A,version:2,imageType:v}}function w(A,X){const s=(X=Q(X)).dj;let N=Math.log2(X.width);if(N=Math.round(N)+1,s.mipmaps.length!==6*N)throw new Error(`Unsupported specular mipmaps number "${s.mipmaps.length}"`);const f=new Array(N);for(let E=0;E<N;E++){f[E]=new Array(6);for(let N=0;N<6;N++){const g=s.mipmaps[6*E+N];f[E][N]=new Uint8Array(A.buffer,A.byteOffset+X.binaryDataPosition+g.position,g.length)}}return f}function R(A,X){var s;X=Q(X);const N=new Array(6),f=null===(s=X.irradiance)||void 0===s?void 0:s.irradianceTexture;if(f){if(6!==f.faces.length)throw new Error(`Incorrect irradiance texture faces number "${f.faces.length}"`);for(let s=0;s<6;s++){const E=f.faces[s];N[s]=new Uint8Array(A.buffer,A.byteOffset+X.binaryDataPosition+E.position,E.length)}}return N}function C(A,X,s){var N;const E=(s=Q(s)).dj;if(!E)return Promise.resolve([]);A._lodGenerationScale=E.lodGenerationScale;const g=[],K=w(X,s);g.push(a(A,K,s.imageType));const r=null===(N=s.irradiance)||void 0===N?void 0:N.irradianceTexture;if(r){var i,Y;const N=R(X,s);let E=null;null!==(i=s.irradiance)&&void 0!==i&&null!==(Y=i.irradianceTexture)&&void 0!==Y&&Y.dominantDirection&&(E=f.k.mi(s.irradiance.irradianceTexture.dominantDirection)),g.push(u(A,N,r.size,s.imageType,E))}return Promise.all(g)}async function J(A,X,s,N,f,E,g,K,r,i,Y){return await new Promise(((v,c)=>{if(s){const s=X.createTexture(null,!0,!0,null,1,null,(A=>{c(A)}),A);null===N||void 0===N||N.onEffectCreatedObservable.addOnce((K=>{K.executeWhenCompiled((()=>{N.externalTextureSamplerBinding=!0,N.onApply=N=>{N._bindTexture("textureSampler",s),N.setFloat2("scale",1,X._features.needsInvertingBitmap&&A instanceof ImageBitmap?-1:1)},X.scenes.length&&(X.scenes[0].postProcessManager.directRender([N],i,!0,E,g),X.restoreDefaultFramebuffer(),s.dispose(),URL.revokeObjectURL(f),v())}))}))}else{if(X._uploadImageToTexture(Y,A,E,g),K){const s=r[g];s&&X._uploadImageToTexture(s._texture,A,E,0)}v()}}))}async function a(A,X){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:v;const N=A.getEngine();A.format=5,A.type=0,A.generateMipMaps=!0,A._cachedAnisotropicFilteringLevel=null,N.updateTextureSamplingMode(3,A),await z(A,X,!0,s),A.isReady=!0}async function u(A,X,s){let N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:v,f=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const E=A.getEngine(),g=new K.b(E,5),i=new r.b(E,g);A._irradianceTexture=i,i._dominantDirection=f,g.isCube=!0,g.format=5,g.type=0,g.generateMipMaps=!0,g._cachedAnisotropicFilteringLevel=null,g.generateMipMaps=!0,g.width=s,g.height=s,E.updateTextureSamplingMode(3,g),await z(g,[X],!1,N),E.generateMipMapsForCubemap(g),g.isReady=!0}async function z(A,X,f){let g=arguments.length>3&&void 0!==arguments[3]?arguments[3]:v;if(!N.d.IsExponentOfTwo(A.width))throw new Error("Texture size must be a power of two");const Y=(0,E.j)(A.width)+1,c=A.getEngine();let M=!1,d=!1,Q=null,w=null,R=null;const C=c.getCaps();C.textureLOD?c._features.supportRenderAndCopyToLodForFloatTextures?C.textureHalfFloatRender&&C.textureHalfFloatLinearFiltering?(M=!0,A.type=2):C.textureFloatRender&&C.textureFloatLinearFiltering&&(M=!0,A.type=1):M=!1:(M=!1,d=f);let a=0;if(M)c.isWebGPU?(a=1,await s.e(26).then(s.bind(s,13225))):await s.e(24).then(s.bind(s,13231)),Q=new i.b("rgbdDecode","rgbdDecode",null,null,1,null,3,c,!1,void 0,A.type,void 0,null,!1,void 0,a),A._isRGBD=!1,A.invertY=!1,w=c.createRenderTargetCubeTexture(A.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:A.type,format:5});else if(A._isRGBD=!0,A.invertY=!0,d){const X=3;R={};const s=A._lodGenerationScale,N=A._lodGenerationOffset;for(let f=0;f<X;f++){const E=(Y-1)*s+N,g=N+(E-N)*(1-f/(X-1)),i=Math.round(Math.min(Math.max(g,0),E)),v=new K.b(c,2);v.isCube=!0,v.invertY=!0,v.generateMipMaps=!1,c.updateTextureSamplingMode(2,v);const M=new r.b(null);switch(M._isCube=!0,M._texture=v,R[i]=M,f){case 0:A._lodTextureLow=M;break;case 1:A._lodTextureMid=M;break;case 2:A._lodTextureHigh=M}}}const u=[];for(let s=0;s<X.length;s++)for(let N=0;N<6;N++){const f=X[s][N],E=new Blob([f],{type:g}),K=URL.createObjectURL(E);let r;if(c._features.forceBitmapOverHTMLImageElement)r=c.createImageBitmap(E,{premultiplyAlpha:"none"}).then((async X=>await J(X,c,M,Q,K,N,s,d,R,w,A)));else{const X=new Image;X.src=K,r=new Promise(((f,E)=>{X.onload=()=>{J(X,c,M,Q,K,N,s,d,R,w,A).then((()=>f())).catch((A=>{E(A)}))},X.onerror=A=>{E(A)}}))}u.push(r)}if(await Promise.all(u),X.length<Y){let s;const N=Math.pow(2,Y-1-X.length),f=N*N*4;switch(A.type){case 0:s=new Uint8Array(f);break;case 2:s=new Uint16Array(f);break;case 1:s=new Float32Array(f)}for(let E=X.length;E<Y;E++)for(let X=0;X<6;X++){var z;c._uploadArrayBufferViewToTexture((null===(z=w)||void 0===z?void 0:z.texture)||A,s,X,E)}}if(w){const X=A._irradianceTexture;A._irradianceTexture=null,c._releaseTexture(A),w._swapAndDie(A),A._irradianceTexture=X}Q&&Q.dispose(),d&&(A._lodTextureHigh&&A._lodTextureHigh._texture&&(A._lodTextureHigh._texture.isReady=!0),A._lodTextureMid&&A._lodTextureMid._texture&&(A._lodTextureMid._texture.isReady=!0),A._lodTextureLow&&A._lodTextureLow._texture&&(A._lodTextureLow._texture.isReady=!0))}function m(A,X){const s=(X=Q(X)).irradiance;if(!s)return;const N=new g.d;f.k.FromArrayToRef(s.x,0,N.x),f.k.FromArrayToRef(s.y,0,N.y),f.k.FromArrayToRef(s.z,0,N.z),f.k.FromArrayToRef(s.xx,0,N.xx),f.k.FromArrayToRef(s.yy,0,N.yy),f.k.FromArrayToRef(s.zz,0,N.zz),f.k.FromArrayToRef(s.yz,0,N.yz),f.k.FromArrayToRef(s.zx,0,N.zx),f.k.FromArrayToRef(s.xy,0,N.xy),A._sphericalPolynomial=N}function b(A,X,s,N,f){const E=a(A.getEngine().createRawCubeTexture(null,A.width,A.format,A.type,A.generateMipMaps,A.invertY,A.samplingMode,A._compression),X).then((()=>A));return A.onRebuildCallback=A=>({proxy:E,isReady:!0,isAsync:!0}),A._source=13,A._bufferViewArrayArray=X,A._lodGenerationScale=N,A._lodGenerationOffset=f,A._sphericalPolynomial=s,a(A,X).then((()=>(A.isReady=!0,A)))}},2483:(A,X,s)=>{s.d(X,{e:()=>E});var N=s(2310),f=s(2274);class E{static ExpandRGBDTexture(A){const X=A._texture;if(!X||!A.isRGBD)return;const f=X.getEngine(),E=f.getCaps(),g=X.isReady;let K=!1;E.textureHalfFloatRender&&E.textureHalfFloatLinearFiltering?(K=!0,X.type=2):E.textureFloatRender&&E.textureFloatLinearFiltering&&(K=!0,X.type=1),K&&(X.isReady=!1,X._isRGBD=!1,X.invertY=!1);const r=async()=>{const E=f.isWebGPU,g=E?1:0;X.isReady=!1,E?await s.e(26).then(s.bind(s,13225)):await s.e(24).then(s.bind(s,13231));const K=new N.b("rgbdDecode","rgbdDecode",null,null,1,null,3,f,!1,void 0,X.type,void 0,null,!1,void 0,g);K.externalTextureSamplerBinding=!0;const r=f.createRenderTargetTexture(X.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:X.samplingMode,type:X.type,format:5});K.onEffectCreatedObservable.addOnce((s=>{s.executeWhenCompiled((()=>{K.onApply=A=>{A._bindTexture("textureSampler",X),A.setFloat2("scale",1,1)},A.va().postProcessManager.directRender([K],r,!0),f.restoreDefaultFramebuffer(),f._releaseTexture(X),K&&K.dispose(),r._swapAndDie(X),X.isReady=!0}))}))};K&&(g?r():A.onLoadObservable.addOnce(r))}static async EncodeTextureToRGBD(A,X){let N=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return X.getEngine().isWebGPU?await s.e(27).then(s.bind(s,13236)):await s.e(25).then(s.bind(s,13233)),await(0,f.c)("rgbdEncode",A,X,N,1,5)}}},2476:(A,X,s)=>{s.d(X,{c:()=>N});class N{static get UniqueId(){const A=this._UniqueIdCounter;return this._UniqueIdCounter++,A}}N._UniqueIdCounter=1},2468:(A,X,s)=>{s.d(X,{e:()=>N});class N{}N._IsPickingAvailable=!1},2418:(A,X,s)=>{s.d(X,{d:()=>AA});var N=s(456),f=s(486),E=s(454),g=s(672);class K{constructor(){this._count=0,this._data={}}p(A){this.clear(),A.forEach(((A,X)=>this.add(A,X)))}get(A){const X=this._data[A];if(void 0!==X)return X}getOrAddWithFactory(A,X){let s=this.get(A);return void 0!==s||(s=X(A),s&&this.add(A,s)),s}getOrAdd(A,X){const s=this.get(A);return void 0!==s?s:(this.add(A,X),X)}contains(A){return void 0!==this._data[A]}add(A,X){return void 0===this._data[A]&&(this._data[A]=X,++this._count,!0)}set(A,X){return void 0!==this._data[A]&&(this._data[A]=X,!0)}getAndRemove(A){const X=this.get(A);return void 0!==X?(delete this._data[A],--this._count,X):null}remove(A){return!!this.contains(A)&&(delete this._data[A],--this._count,!0)}clear(){this._data={},this._count=0}get count(){return this._count}forEach(A){for(const X in this._data){A(X,this._data[X])}}first(A){for(const X in this._data){const s=A(X,this._data[X]);if(s)return s}return null}}var r=s(638),i=s(678),Y=s(2426),v=s(821),c=s(813);class M{constructor(A,X,s,N,f,E){this.source=A,this.pointerX=X,this.pointerY=s,this.meshUnderPointer=N,this.sourceEvent=f,this.additionalData=E}static CreateNew(A,X,s){const N=A.va();return new M(A,N.pointerX,N.pointerY,N.meshUnderPointer||A,X,s)}static CreateNewFromSprite(A,X,s,N){return new M(A,X.pointerX,X.pointerY,X.meshUnderPointer,s,N)}static CreateNewFromScene(A,X){return new M(null,A.pointerX,A.pointerY,A.meshUnderPointer,X)}static CreateNewFromPrimitive(A,X,s,N){return new M(A,X.x,X.y,null,s,N)}}var d=s(2297),Q=s(2303),w=s(850),R=s(465),C=s(503),J=s(495),a=s(2450);class u{constructor(){this.hoverCursor="",this.actions=[],this.isRecursive=!1,this.disposeWhenUnowned=!0}static get HasTriggers(){for(const A in u.Triggers)if(Object.prototype.hasOwnProperty.call(u.Triggers,A))return!0;return!1}static get HasPickTriggers(){for(const A in u.Triggers)if(Object.prototype.hasOwnProperty.call(u.Triggers,A)){const X=parseInt(A);if(X>=1&&X<=7)return!0}return!1}static HasSpecificTrigger(A){for(const X in u.Triggers)if(Object.prototype.hasOwnProperty.call(u.Triggers,X)){if(parseInt(X)===A)return!0}return!1}}u.Triggers={};var z,m,b,y,j,G,V,D=s(2456);!function(A){A[A.Generic=0]="Generic",A[A.Keyboard=1]="Keyboard",A[A.Mouse=2]="Mouse",A[A.Touch=3]="Touch",A[A.DualShock=4]="DualShock",A[A.Xbox=5]="Xbox",A[A.Switch=6]="Switch",A[A.DualSense=7]="DualSense"}(z||(z={})),function(A){A[A.Horizontal=0]="Horizontal",A[A.Vertical=1]="Vertical",A[A.LeftClick=2]="LeftClick",A[A.MiddleClick=3]="MiddleClick",A[A.RightClick=4]="RightClick",A[A.BrowserBack=5]="BrowserBack",A[A.BrowserForward=6]="BrowserForward",A[A.MouseWheelX=7]="MouseWheelX",A[A.MouseWheelY=8]="MouseWheelY",A[A.MouseWheelZ=9]="MouseWheelZ",A[A.Move=12]="Move"}(m||(m={})),function(A){A[A.Horizontal=0]="Horizontal",A[A.Vertical=1]="Vertical",A[A.LeftClick=2]="LeftClick",A[A.MiddleClick=3]="MiddleClick",A[A.RightClick=4]="RightClick",A[A.BrowserBack=5]="BrowserBack",A[A.BrowserForward=6]="BrowserForward",A[A.MouseWheelX=7]="MouseWheelX",A[A.MouseWheelY=8]="MouseWheelY",A[A.MouseWheelZ=9]="MouseWheelZ",A[A.DeltaHorizontal=10]="DeltaHorizontal",A[A.DeltaVertical=11]="DeltaVertical"}(b||(b={})),function(A){A[A.Cross=0]="Cross",A[A.Circle=1]="Circle",A[A.Square=2]="Square",A[A.Triangle=3]="Triangle",A[A.L1=4]="L1",A[A.R1=5]="R1",A[A.L2=6]="L2",A[A.R2=7]="R2",A[A.Share=8]="Share",A[A.Options=9]="Options",A[A.L3=10]="L3",A[A.R3=11]="R3",A[A.DPadUp=12]="DPadUp",A[A.DPadDown=13]="DPadDown",A[A.DPadLeft=14]="DPadLeft",A[A.DPadRight=15]="DPadRight",A[A.Home=16]="Home",A[A.TouchPad=17]="TouchPad",A[A.LStickXAxis=18]="LStickXAxis",A[A.LStickYAxis=19]="LStickYAxis",A[A.RStickXAxis=20]="RStickXAxis",A[A.RStickYAxis=21]="RStickYAxis"}(y||(y={})),function(A){A[A.Cross=0]="Cross",A[A.Circle=1]="Circle",A[A.Square=2]="Square",A[A.Triangle=3]="Triangle",A[A.L1=4]="L1",A[A.R1=5]="R1",A[A.L2=6]="L2",A[A.R2=7]="R2",A[A.Create=8]="Create",A[A.Options=9]="Options",A[A.L3=10]="L3",A[A.R3=11]="R3",A[A.DPadUp=12]="DPadUp",A[A.DPadDown=13]="DPadDown",A[A.DPadLeft=14]="DPadLeft",A[A.DPadRight=15]="DPadRight",A[A.Home=16]="Home",A[A.TouchPad=17]="TouchPad",A[A.LStickXAxis=18]="LStickXAxis",A[A.LStickYAxis=19]="LStickYAxis",A[A.RStickXAxis=20]="RStickXAxis",A[A.RStickYAxis=21]="RStickYAxis"}(j||(j={})),function(A){A[A.A=0]="A",A[A.B=1]="B",A[A.X=2]="X",A[A.Y=3]="Y",A[A.LB=4]="LB",A[A.RB=5]="RB",A[A.LT=6]="LT",A[A.RT=7]="RT",A[A.Back=8]="Back",A[A.Start=9]="Start",A[A.LS=10]="LS",A[A.RS=11]="RS",A[A.DPadUp=12]="DPadUp",A[A.DPadDown=13]="DPadDown",A[A.DPadLeft=14]="DPadLeft",A[A.DPadRight=15]="DPadRight",A[A.Home=16]="Home",A[A.LStickXAxis=17]="LStickXAxis",A[A.LStickYAxis=18]="LStickYAxis",A[A.RStickXAxis=19]="RStickXAxis",A[A.RStickYAxis=20]="RStickYAxis"}(G||(G={})),function(A){A[A.B=0]="B",A[A.A=1]="A",A[A.Y=2]="Y",A[A.X=3]="X",A[A.L=4]="L",A[A.R=5]="R",A[A.ZL=6]="ZL",A[A.ZR=7]="ZR",A[A.Minus=8]="Minus",A[A.Plus=9]="Plus",A[A.LS=10]="LS",A[A.RS=11]="RS",A[A.DPadUp=12]="DPadUp",A[A.DPadDown=13]="DPadDown",A[A.DPadLeft=14]="DPadLeft",A[A.DPadRight=15]="DPadRight",A[A.Home=16]="Home",A[A.Capture=17]="Capture",A[A.LStickXAxis=18]="LStickXAxis",A[A.LStickYAxis=19]="LStickYAxis",A[A.RStickXAxis=20]="RStickXAxis",A[A.RStickYAxis=21]="RStickYAxis"}(V||(V={}));var O=s(2462);class P{static CreateDeviceEvent(A,X,s,N,f,E,g){switch(A){case z.Keyboard:return this._CreateKeyboardEvent(s,N,f,E);case z.Mouse:if(s===m.MouseWheelX||s===m.MouseWheelY||s===m.MouseWheelZ)return this._CreateWheelEvent(A,X,s,N,f,E);case z.Touch:return this._CreatePointerEvent(A,X,s,N,f,E,g);default:throw`Unable to generate event for device ${z[A]}`}}static _CreatePointerEvent(A,X,s,N,f,E,g){const K=this._CreateMouseEvent(A,X,s,N,f,E);A===z.Mouse?(K.deviceType=z.Mouse,K.pointerId=1,K.pointerType="mouse"):(K.deviceType=z.Touch,K.pointerId=g??X,K.pointerType="touch");let r=0;return r+=f.pollInput(A,X,m.LeftClick),r+=2*f.pollInput(A,X,m.RightClick),r+=4*f.pollInput(A,X,m.MiddleClick),K.buttons=r,s===m.Move?K.type="pointermove":s>=m.LeftClick&&s<=m.RightClick&&(K.type=1===N?"pointerdown":"pointerup",K.button=s-2),K}static _CreateWheelEvent(A,X,s,N,f,E){const g=this._CreateMouseEvent(A,X,s,N,f,E);switch(g.pointerId=1,g.type="wheel",g.deltaMode=O.e.DOM_DELTA_PIXEL,g.deltaX=0,g.deltaY=0,g.deltaZ=0,s){case m.MouseWheelX:g.deltaX=N;break;case m.MouseWheelY:g.deltaY=N;break;case m.MouseWheelZ:g.deltaZ=N}return g}static _CreateMouseEvent(A,X,s,N,f,E){const g=this._CreateEvent(E),K=f.pollInput(A,X,m.Horizontal),r=f.pollInput(A,X,m.Vertical);return E?(g.movementX=0,g.movementY=0,g.offsetX=g.movementX-E.getBoundingClientRect().x,g.offsetY=g.movementY-E.getBoundingClientRect().y):(g.movementX=f.pollInput(A,X,10),g.movementY=f.pollInput(A,X,11),g.offsetX=0,g.offsetY=0),this._CheckNonCharacterKeys(g,f),g.clientX=K,g.clientY=r,g.x=K,g.y=r,g.deviceType=A,g.deviceSlot=X,g.inputIndex=s,g}static _CreateKeyboardEvent(A,X,s,N){const f=this._CreateEvent(N);return this._CheckNonCharacterKeys(f,s),f.deviceType=z.Keyboard,f.deviceSlot=0,f.inputIndex=A,f.type=1===X?"keydown":"keyup",f.key=String.fromCharCode(A),f.keyCode=A,f}static _CheckNonCharacterKeys(A,X){const s=X.isDeviceAvailable(z.Keyboard),N=s&&1===X.pollInput(z.Keyboard,0,18),f=s&&1===X.pollInput(z.Keyboard,0,17),E=s&&(1===X.pollInput(z.Keyboard,0,91)||1===X.pollInput(z.Keyboard,0,92)||1===X.pollInput(z.Keyboard,0,93)),g=s&&1===X.pollInput(z.Keyboard,0,16);A.altKey=N,A.ctrlKey=f,A.metaKey=E,A.shiftKey=g}static _CreateEvent(A){const X={preventDefault:()=>{}};return X.target=A,X}}class l{constructor(A,X,s){this._nativeInput=_native.DeviceInputSystem?new _native.DeviceInputSystem(A,X,((A,X,N,f)=>{const E=P.CreateDeviceEvent(A,X,N,f,this);s(A,X,E)})):this._createDummyNativeInput()}pollInput(A,X,s){return this._nativeInput.pollInput(A,X,s)}isDeviceAvailable(A){return A===z.Mouse||A===z.Touch}dispose(){this._nativeInput.dispose()}_createDummyNativeInput(){return{pollInput:()=>0,isDeviceAvailable:()=>!1,dispose:()=>{}}}}const n=Object.keys(m).length/2;class U{constructor(A,X,s,f){this._inputs=[],this._keyboardActive=!1,this._pointerActive=!1,this._usingSafari=N.d.IsSafari(),this._usingMacOs=(0,R.i)()&&/(Mac|iPhone|iPod|iPad)/i.test(navigator.platform),this._keyboardDownEvent=A=>{},this._keyboardUpEvent=A=>{},this._keyboardBlurEvent=A=>{},this._pointerMoveEvent=A=>{},this._pointerDownEvent=A=>{},this._pointerUpEvent=A=>{},this._pointerCancelEvent=A=>{},this._pointerCancelTouch=A=>{},this._pointerLeaveEvent=A=>{},this._pointerWheelEvent=A=>{},this._pointerBlurEvent=A=>{},this._pointerMacOsChromeOutEvent=A=>{},this._eventsAttached=!1,this._mouseId=-1,this._isUsingFirefox=(0,R.i)()&&navigator.userAgent&&-1!==navigator.userAgent.indexOf("Firefox"),this._isUsingChromium=(0,R.i)()&&navigator.userAgent&&-1!==navigator.userAgent.indexOf("Chrome"),this._maxTouchPoints=0,this._pointerInputClearObserver=null,this._gamepadConnectedEvent=A=>{},this._gamepadDisconnectedEvent=A=>{},this._eventPrefix=N.d.GetPointerPrefix(A),this._engine=A,this._onDeviceConnected=X,this._onDeviceDisconnected=s,this._onInputChanged=f,this._mouseId=this._isUsingFirefox?0:1,this._enableEvents(),this._usingMacOs&&(this._metaKeys=[]),this._engine._onEngineViewChanged||(this._engine._onEngineViewChanged=()=>{this._enableEvents()})}pollInput(A,X,s){const f=this._inputs[A][X];if(!f)throw`Unable to find device ${z[A]}`;A>=z.DualShock&&A<=z.DualSense&&this._updateDevice(A,X,s);const E=f[s];if(void 0===E)throw`Unable to find input ${s} for device ${z[A]} in slot ${X}`;return s===m.Move&&N.d.Warn("Unable to provide information for PointerInput.Move.  Try using PointerInput.Horizontal or PointerInput.Vertical for move data."),E}isDeviceAvailable(A){return void 0!==this._inputs[A]}dispose(){this._onDeviceConnected=()=>{},this._onDeviceDisconnected=()=>{},this._onInputChanged=()=>{},delete this._engine._onEngineViewChanged,this._elementToAttachTo&&this._disableEvents()}_enableEvents(){const A=null===this||void 0===this?void 0:this._engine.getInputElement();if(A&&(!this._eventsAttached||this._elementToAttachTo!==A)){if(this._disableEvents(),this._inputs)for(const A of this._inputs)if(A)for(const X in A){const s=A[+X];if(s)for(let A=0;A<s.length;A++)s[A]=0}this._elementToAttachTo=A,this._elementToAttachTo.tabIndex=-1!==this._elementToAttachTo.tabIndex?this._elementToAttachTo.tabIndex:this._engine.canvasTabIndex,this._handleKeyActions(),this._handlePointerActions(),this._handleGamepadActions(),this._eventsAttached=!0,this._checkForConnectedDevices()}}_disableEvents(){this._elementToAttachTo&&(this._elementToAttachTo.removeEventListener("blur",this._keyboardBlurEvent),this._elementToAttachTo.removeEventListener("blur",this._pointerBlurEvent),this._elementToAttachTo.removeEventListener("keydown",this._keyboardDownEvent),this._elementToAttachTo.removeEventListener("keyup",this._keyboardUpEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"move",this._pointerMoveEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"down",this._pointerDownEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"up",this._pointerUpEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"cancel",this._pointerCancelEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"leave",this._pointerLeaveEvent),this._elementToAttachTo.removeEventListener(this._wheelEventName,this._pointerWheelEvent),this._usingMacOs&&this._isUsingChromium&&this._elementToAttachTo.removeEventListener("lostpointercapture",this._pointerMacOsChromeOutEvent),window.removeEventListener("gamepadconnected",this._gamepadConnectedEvent),window.removeEventListener("gamepaddisconnected",this._gamepadDisconnectedEvent)),this._pointerInputClearObserver&&this._engine.onEndFrameObservable.remove(this._pointerInputClearObserver),this._eventsAttached=!1}_checkForConnectedDevices(){if(navigator.getGamepads){const A=navigator.getGamepads();for(const X of A)X&&this._addGamePad(X)}"function"===typeof matchMedia&&matchMedia("(pointer:fine)").matches&&this._addPointerDevice(z.Mouse,0,0,0)}_addGamePad(A){const X=this._getGamepadDeviceType(A.id),s=A.index;this._gamepads=this._gamepads||new Array(A.index+1),this._registerDevice(X,s,A.buttons.length+A.axes.length),this._gamepads[s]=X}_addPointerDevice(A,X,s,N){this._pointerActive||(this._pointerActive=!0),this._registerDevice(A,X,n);const f=this._inputs[A][X];f[0]=s,f[1]=N}_registerDevice(A,X,s){if(void 0===X)throw`Unable to register device ${z[A]} to undefined slot.`;if(this._inputs[A]||(this._inputs[A]={}),!this._inputs[A][X]){const N=new Array(s);N.fill(0),this._inputs[A][X]=N,this._onDeviceConnected(A,X)}}_unregisterDevice(A,X){this._inputs[A][X]&&(delete this._inputs[A][X],this._onDeviceDisconnected(A,X))}_handleKeyActions(){this._keyboardDownEvent=A=>{this._keyboardActive||(this._keyboardActive=!0,this._registerDevice(z.Keyboard,0,255));const X=this._inputs[z.Keyboard][0];if(X){X[A.keyCode]=1;const s=A;s.inputIndex=A.keyCode,this._usingMacOs&&A.metaKey&&"Meta"!==A.key&&(this._metaKeys.includes(A.keyCode)||this._metaKeys.push(A.keyCode)),this._onInputChanged(z.Keyboard,0,s)}},this._keyboardUpEvent=A=>{this._keyboardActive||(this._keyboardActive=!0,this._registerDevice(z.Keyboard,0,255));const X=this._inputs[z.Keyboard][0];if(X){X[A.keyCode]=0;const s=A;if(s.inputIndex=A.keyCode,this._usingMacOs&&"Meta"===A.key&&this._metaKeys.length>0){for(const A of this._metaKeys){const s=P.CreateDeviceEvent(z.Keyboard,0,A,0,this,this._elementToAttachTo);X[A]=0,this._onInputChanged(z.Keyboard,0,s)}this._metaKeys.splice(0,this._metaKeys.length)}this._onInputChanged(z.Keyboard,0,s)}},this._keyboardBlurEvent=()=>{if(this._keyboardActive){const A=this._inputs[z.Keyboard][0];for(let X=0;X<A.length;X++)if(0!==A[X]){A[X]=0;const s=P.CreateDeviceEvent(z.Keyboard,0,X,0,this,this._elementToAttachTo);this._onInputChanged(z.Keyboard,0,s)}this._usingMacOs&&this._metaKeys.splice(0,this._metaKeys.length)}},this._elementToAttachTo.addEventListener("keydown",this._keyboardDownEvent),this._elementToAttachTo.addEventListener("keyup",this._keyboardUpEvent),this._elementToAttachTo.addEventListener("blur",this._keyboardBlurEvent)}_handlePointerActions(){this._maxTouchPoints=(0,R.i)()&&navigator.maxTouchPoints||2,this._activeTouchIds||(this._activeTouchIds=new Array(this._maxTouchPoints));for(let N=0;N<this._maxTouchPoints;N++)this._activeTouchIds[N]=-1;this._pointerMoveEvent=A=>{const X=this._getPointerType(A);let s=X===z.Mouse?0:this._activeTouchIds.indexOf(A.pointerId);if(X===z.Touch&&-1===s){const f=this._activeTouchIds.indexOf(-1);if(!(f>=0))return void N.d.Warn(`Max number of touches exceeded.  Ignoring touches in excess of ${this._maxTouchPoints}`);s=f,this._activeTouchIds[f]=A.pointerId,this._onDeviceConnected(X,s)}this._inputs[X]||(this._inputs[X]={}),this._inputs[X][s]||this._addPointerDevice(X,s,A.clientX,A.clientY);const f=this._inputs[X][s];if(f){const N=A;N.inputIndex=m.Move,f[m.Horizontal]=A.clientX,f[m.Vertical]=A.clientY,X===z.Touch&&0===f[m.LeftClick]&&(f[m.LeftClick]=1),void 0===A.pointerId&&(A.pointerId=this._mouseId),this._onInputChanged(X,s,N),this._usingSafari||-1===A.button||(N.inputIndex=A.button+2,f[A.button+2]=f[A.button+2]?0:1,this._onInputChanged(X,s,N))}},this._pointerDownEvent=A=>{const X=this._getPointerType(A);let s=X===z.Mouse?0:A.pointerId;if(X===z.Touch){let X=this._activeTouchIds.indexOf(A.pointerId);if(-1===X&&(X=this._activeTouchIds.indexOf(-1)),!(X>=0))return void N.d.Warn(`Max number of touches exceeded.  Ignoring touches in excess of ${this._maxTouchPoints}`);s=X,this._activeTouchIds[X]=A.pointerId}this._inputs[X]||(this._inputs[X]={}),this._inputs[X][s]?X===z.Touch&&this._onDeviceConnected(X,s):this._addPointerDevice(X,s,A.clientX,A.clientY);const f=this._inputs[X][s];if(f){const N=f[m.Horizontal],g=f[m.Vertical];if(X===z.Mouse){if(void 0===A.pointerId&&(A.pointerId=this._mouseId),!document.pointerLockElement)try{this._elementToAttachTo.setPointerCapture(this._mouseId)}catch(E){}}else if(A.pointerId&&!document.pointerLockElement)try{this._elementToAttachTo.setPointerCapture(A.pointerId)}catch(E){}f[m.Horizontal]=A.clientX,f[m.Vertical]=A.clientY,f[A.button+2]=1;const K=A;K.inputIndex=A.button+2,this._onInputChanged(X,s,K),N===A.clientX&&g===A.clientY||(K.inputIndex=m.Move,this._onInputChanged(X,s,K))}},this._pointerUpEvent=A=>{var X;const s=this._getPointerType(A),N=s===z.Mouse?0:this._activeTouchIds.indexOf(A.pointerId);if(s===z.Touch){if(-1===N)return;this._activeTouchIds[N]=-1}const f=null===(X=this._inputs[s])||void 0===X?void 0:X[N];let E=A.button,g=f&&0!==f[E+2];if(!g&&this._isUsingFirefox&&this._usingMacOs&&f&&(E=2===E?0:2,g=0!==f[E+2]),g){var K,r,i,Y;const X=f[m.Horizontal],g=f[m.Vertical];f[m.Horizontal]=A.clientX,f[m.Vertical]=A.clientY,f[E+2]=0;const v=A;void 0===A.pointerId&&(A.pointerId=this._mouseId),X===A.clientX&&g===A.clientY||(v.inputIndex=m.Move,this._onInputChanged(s,N,v)),v.inputIndex=E+2,s===z.Mouse&&this._mouseId>=0&&null!==(K=(r=this._elementToAttachTo).hasPointerCapture)&&void 0!==K&&K.call(r,this._mouseId)?this._elementToAttachTo.releasePointerCapture(this._mouseId):A.pointerId&&null!==(i=(Y=this._elementToAttachTo).hasPointerCapture)&&void 0!==i&&i.call(Y,A.pointerId)&&this._elementToAttachTo.releasePointerCapture(A.pointerId),this._onInputChanged(s,N,v),s===z.Touch&&this._onDeviceDisconnected(s,N)}},this._pointerCancelTouch=A=>{var X,s;const N=this._activeTouchIds.indexOf(A);if(-1===N)return;null!==(X=(s=this._elementToAttachTo).hasPointerCapture)&&void 0!==X&&X.call(s,A)&&this._elementToAttachTo.releasePointerCapture(A),this._inputs[z.Touch][N][m.LeftClick]=0;const f=P.CreateDeviceEvent(z.Touch,N,m.LeftClick,0,this,this._elementToAttachTo,A);this._onInputChanged(z.Touch,N,f),this._activeTouchIds[N]=-1,this._onDeviceDisconnected(z.Touch,N)},this._pointerCancelEvent=A=>{if("mouse"===A.pointerType){var X,s;const A=this._inputs[z.Mouse][0];this._mouseId>=0&&null!==(X=(s=this._elementToAttachTo).hasPointerCapture)&&void 0!==X&&X.call(s,this._mouseId)&&this._elementToAttachTo.releasePointerCapture(this._mouseId);for(let X=m.LeftClick;X<=m.BrowserForward;X++)if(1===A[X]){A[X]=0;const s=P.CreateDeviceEvent(z.Mouse,0,X,0,this,this._elementToAttachTo);this._onInputChanged(z.Mouse,0,s)}}else this._pointerCancelTouch(A.pointerId)},this._pointerLeaveEvent=A=>{"pen"===A.pointerType&&this._pointerCancelTouch(A.pointerId)},this._wheelEventName="onwheel"in document.createElement("div")?"wheel":void 0!==document.onmousewheel?"mousewheel":"DOMMouseScroll";let A=!1;const X=function(){};try{const s=Object.defineProperty({},"passive",{get:function(){A=!0}});this._elementToAttachTo.addEventListener("test",X,s),this._elementToAttachTo.removeEventListener("test",X,s)}catch(s){}this._pointerBlurEvent=()=>{if(this.isDeviceAvailable(z.Mouse)){var A,X;const s=this._inputs[z.Mouse][0];this._mouseId>=0&&null!==(A=(X=this._elementToAttachTo).hasPointerCapture)&&void 0!==A&&A.call(X,this._mouseId)&&this._elementToAttachTo.releasePointerCapture(this._mouseId);for(let A=m.LeftClick;A<=m.BrowserForward;A++)if(1===s[A]){s[A]=0;const X=P.CreateDeviceEvent(z.Mouse,0,A,0,this,this._elementToAttachTo);this._onInputChanged(z.Mouse,0,X)}}if(this.isDeviceAvailable(z.Touch)){const A=this._inputs[z.Touch];for(let X=0;X<this._activeTouchIds.length;X++){var s,N,f;const E=this._activeTouchIds[X];if(null!==(s=(N=this._elementToAttachTo).hasPointerCapture)&&void 0!==s&&s.call(N,E)&&this._elementToAttachTo.releasePointerCapture(E),-1!==E&&1===(null===(f=A[X])||void 0===f?void 0:f[m.LeftClick])){A[X][m.LeftClick]=0;const s=P.CreateDeviceEvent(z.Touch,X,m.LeftClick,0,this,this._elementToAttachTo,E);this._onInputChanged(z.Touch,X,s),this._activeTouchIds[X]=-1,this._onDeviceDisconnected(z.Touch,X)}}}},this._pointerWheelEvent=A=>{const X=z.Mouse;this._inputs[X]||(this._inputs[X]=[]),this._inputs[X][0]||(this._pointerActive=!0,this._registerDevice(X,0,n));const s=this._inputs[X][0];if(s){s[m.MouseWheelX]=A.deltaX||0,s[m.MouseWheelY]=A.deltaY||A.wheelDelta||0,s[m.MouseWheelZ]=A.deltaZ||0;const N=A;void 0===A.pointerId&&(A.pointerId=this._mouseId),0!==s[m.MouseWheelX]&&(N.inputIndex=m.MouseWheelX,this._onInputChanged(X,0,N)),0!==s[m.MouseWheelY]&&(N.inputIndex=m.MouseWheelY,this._onInputChanged(X,0,N)),0!==s[m.MouseWheelZ]&&(N.inputIndex=m.MouseWheelZ,this._onInputChanged(X,0,N))}},this._usingMacOs&&this._isUsingChromium&&(this._pointerMacOsChromeOutEvent=A=>{A.buttons>1&&this._pointerCancelEvent(A)},this._elementToAttachTo.addEventListener("lostpointercapture",this._pointerMacOsChromeOutEvent)),this._elementToAttachTo.addEventListener(this._eventPrefix+"move",this._pointerMoveEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"down",this._pointerDownEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"up",this._pointerUpEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"cancel",this._pointerCancelEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"leave",this._pointerLeaveEvent),this._elementToAttachTo.addEventListener("blur",this._pointerBlurEvent),this._elementToAttachTo.addEventListener(this._wheelEventName,this._pointerWheelEvent,!!A&&{passive:!1}),this._pointerInputClearObserver=this._engine.onEndFrameObservable.add((()=>{if(this.isDeviceAvailable(z.Mouse)){const A=this._inputs[z.Mouse][0];A[m.MouseWheelX]=0,A[m.MouseWheelY]=0,A[m.MouseWheelZ]=0}}))}_handleGamepadActions(){this._gamepadConnectedEvent=A=>{this._addGamePad(A.gamepad)},this._gamepadDisconnectedEvent=A=>{if(this._gamepads){const X=this._getGamepadDeviceType(A.gamepad.id),s=A.gamepad.index;this._unregisterDevice(X,s),delete this._gamepads[s]}},window.addEventListener("gamepadconnected",this._gamepadConnectedEvent),window.addEventListener("gamepaddisconnected",this._gamepadDisconnectedEvent)}_updateDevice(A,X,s){const N=navigator.getGamepads()[X];if(N&&A===this._gamepads[X]){const f=this._inputs[A][X];s>=N.buttons.length?f[s]=N.axes[s-N.buttons.length].valueOf():f[s]=N.buttons[s].value}}_getGamepadDeviceType(A){return-1!==A.indexOf("054c")?-1!==A.indexOf("0ce6")?z.DualSense:z.DualShock:-1!==A.indexOf("Xbox One")||-1!==A.search("Xbox 360")||-1!==A.search("xinput")?z.Xbox:-1!==A.indexOf("057e")?z.Switch:z.Generic}_getPointerType(A){let X=z.Mouse;return("touch"===A.pointerType||"pen"===A.pointerType||A.touches)&&(X=z.Touch),X}}class t{constructor(A,X){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.deviceType=X,this.deviceSlot=s,this.onInputChangedObservable=new E.b,this._deviceInputSystem=A}getInput(A){return this._deviceInputSystem.pollInput(this.deviceType,this.deviceSlot,A)}}class e{constructor(A){this._registeredManagers=new Array,this._refCount=0,this.registerManager=A=>{for(let X=0;X<this._devices.length;X++){const s=this._devices[X];for(const N in s){const s=+N;A._addDevice(new t(this._deviceInputSystem,X,s))}}this._registeredManagers.push(A)},this.unregisterManager=A=>{const X=this._registeredManagers.indexOf(A);X>-1&&this._registeredManagers.splice(X,1)};const X=Object.keys(z).length/2;this._devices=new Array(X);const s=(A,X)=>{this._devices[A]||(this._devices[A]=new Array),this._devices[A][X]||(this._devices[A][X]=X);for(const s of this._registeredManagers){const N=new t(this._deviceInputSystem,A,X);s._addDevice(N)}},N=(A,X)=>{var s;null!==(s=this._devices[A])&&void 0!==s&&s[X]&&delete this._devices[A][X];for(const N of this._registeredManagers)N._removeDevice(A,X)},f=(A,X,s)=>{if(s)for(const N of this._registeredManagers)N._onInputChanged(A,X,s)};"undefined"!==typeof _native?this._deviceInputSystem=new l(s,N,f):this._deviceInputSystem=new U(A,s,N,f)}dispose(){this._deviceInputSystem.dispose()}}class T{getDeviceSource(A,X){if(void 0===X){if(void 0===this._firstDevice[A])return null;X=this._firstDevice[A]}return this._devices[A]&&void 0!==this._devices[A][X]?this._devices[A][X]:null}getDeviceSources(A){return this._devices[A]?this._devices[A].filter((A=>!!A)):[]}constructor(A){const X=Object.keys(z).length/2;this._devices=new Array(X),this._firstDevice=new Array(X),this._engine=A,this._engine._deviceSourceManager||(this._engine._deviceSourceManager=new e(A)),this._engine._deviceSourceManager._refCount++,this.onDeviceConnectedObservable=new E.b((A=>{for(const X of this._devices)if(X)for(const s of X)s&&this.onDeviceConnectedObservable.notifyObserver(A,s)})),this.onDeviceDisconnectedObservable=new E.b,this._engine._deviceSourceManager.registerManager(this),this._onDisposeObserver=A.Ji.add((()=>{this.dispose()}))}dispose(){this.onDeviceConnectedObservable.clear(),this.onDeviceDisconnectedObservable.clear(),this._engine._deviceSourceManager&&(this._engine._deviceSourceManager.unregisterManager(this),--this._engine._deviceSourceManager._refCount<1&&(this._engine._deviceSourceManager.dispose(),delete this._engine._deviceSourceManager)),this._engine.Ji.remove(this._onDisposeObserver)}_addDevice(A){this._devices[A.deviceType]||(this._devices[A.deviceType]=[]),this._devices[A.deviceType][A.deviceSlot]||(this._devices[A.deviceType][A.deviceSlot]=A,this._updateFirstDevices(A.deviceType)),this.onDeviceConnectedObservable.notifyObservers(A)}_removeDevice(A,X){var s,N;const f=null===(s=this._devices[A])||void 0===s?void 0:s[X];this.onDeviceDisconnectedObservable.notifyObservers(f),null!==(N=this._devices[A])&&void 0!==N&&N[X]&&delete this._devices[A][X],this._updateFirstDevices(A)}_onInputChanged(A,X,s){var N,f;null===(N=this._devices[A])||void 0===N||null===(f=N[X])||void 0===f||f.onInputChangedObservable.notifyObservers(s)}_updateFirstDevices(A){switch(A){case z.Keyboard:case z.Mouse:this._firstDevice[A]=0;break;case z.Touch:case z.DualSense:case z.DualShock:case z.Xbox:case z.Switch:case z.Generic:{delete this._firstDevice[A];const X=this._devices[A];if(X)for(let s=0;s<X.length;s++)if(X[s]){this._firstDevice[A]=s;break}break}}}}var I=s(2468);class L{constructor(){this._singleClick=!1,this._doubleClick=!1,this._hasSwiped=!1,this._ignore=!1}get singleClick(){return this._singleClick}get doubleClick(){return this._doubleClick}get hasSwiped(){return this._hasSwiped}get ignore(){return this._ignore}set singleClick(A){this._singleClick=A}set doubleClick(A){this._doubleClick=A}set hasSwiped(A){this._hasSwiped=A}set ignore(A){this._ignore=A}}class k{constructor(A){this._alreadyAttached=!1,this._meshPickProceed=!1,this._currentPickResult=null,this._previousPickResult=null,this._activePointerIds=new Array,this._activePointerIdsCount=0,this._doubleClickOccured=!1,this._isSwiping=!1,this._swipeButtonPressed=-1,this._skipPointerTap=!1,this._isMultiTouchGesture=!1,this._pointerX=0,this._pointerY=0,this._startingPointerPosition=new i.i(0,0),this._previousStartingPointerPosition=new i.i(0,0),this._startingPointerTime=0,this._previousStartingPointerTime=0,this._pointerCaptures={},this._meshUnderPointerId={},this._movePointerInfo=null,this._cameraObserverCount=0,this._delayedClicks=[null,null,null,null,null],this._deviceSourceManager=null,this._scene=A||C.b.LastCreatedScene,this._scene}get meshUnderPointer(){return this._movePointerInfo&&(this._movePointerInfo._generatePickInfo(),this._movePointerInfo=null),this._pointerOverMesh}getMeshUnderPointerByPointerId(A){return this._meshUnderPointerId[A]||null}get unTranslatedPointer(){return new i.i(this._unTranslatedPointerX,this._unTranslatedPointerY)}get pointerX(){return this._pointerX}set pointerX(A){this._pointerX=A}get pointerY(){return this._pointerY}set pointerY(A){this._pointerY=A}_updatePointerPosition(A){const X=this._scene.getEngine().getInputElementClientRect();X&&(this._pointerX=A.clientX-X.left,this._pointerY=A.clientY-X.top,this._unTranslatedPointerX=this._pointerX,this._unTranslatedPointerY=this._pointerY)}_processPointerMove(A,X){const s=this._scene,N=s.getEngine(),f=N.getInputElement();f&&(f.tabIndex=N.canvasTabIndex,s.doNotHandleCursors||(f.style.cursor=s.defaultCursor)),this._setCursorAndPointerOverMesh(A,X,s);for(const r of s._pointerMoveStage){var E;const s=!(null===(E=A=A||this._pickMove(X))||void 0===E||!E.pickedMesh);A=r.action(this._unTranslatedPointerX,this._unTranslatedPointerY,A,s,f)}const g=X.inputIndex>=m.MouseWheelX&&X.inputIndex<=m.MouseWheelZ?a.b.POINTERWHEEL:a.b.POINTERMOVE;let K;s.onPointerMove&&(A=A||this._pickMove(X),s.onPointerMove(X,A,g)),A?(K=new a.g(g,X,A),this._setRayOnPointerInfo(A,X)):(K=new a.g(g,X,null,this),this._movePointerInfo=K),s.onPointerObservable.hasObservers()&&s.onPointerObservable.notifyObservers(K,g)}_setRayOnPointerInfo(A,X){const s=this._scene;A&&I.e._IsPickingAvailable&&(A.ray||(A.ray=s.createPickingRay(X.offsetX,X.offsetY,i.c.Identity(),s.activeCamera)))}_addCameraPointerObserver(A,X){return this._cameraObserverCount++,this._scene.onPointerObservable.add(A,X)}_removeCameraPointerObserver(A){return this._cameraObserverCount--,this._scene.onPointerObservable.remove(A)}_checkForPicking(){return!!(this._scene.onPointerObservable.observers.length>this._cameraObserverCount||this._scene.onPointerPick)}_checkPrePointerObservable(A,X,s){const N=this._scene,f=new a.c(s,X,this._unTranslatedPointerX,this._unTranslatedPointerY);return A&&(f.originalPickingInfo=A,f.ray=A.ray,"xr-near"===X.pointerType&&A.originMesh&&(f.nearInteractionPickingInfo=A)),N.onPrePointerObservable.notifyObservers(f,s),!!f.skipOnPointerObservable}_pickMove(A){const X=this._scene,s=X.Lk(this._unTranslatedPointerX,this._unTranslatedPointerY,X.pointerMovePredicate,X.pointerMoveFastCheck,X.cameraToUseForPointers,X.pointerMoveTrianglePredicate);return this._setCursorAndPointerOverMesh(s,A,X),s}_setCursorAndPointerOverMesh(A,X,s){const N=s.getEngine().getInputElement();if(null!==A&&void 0!==A&&A.pickedMesh){if(this.setPointerOverMesh(A.pickedMesh,X.pointerId,A,X),!s.doNotHandleCursors&&N&&this._pointerOverMesh){const A=this._pointerOverMesh._getActionManagerForTrigger();A&&A.hasPointerTriggers&&(N.style.cursor=A.hoverCursor||s.hoverCursor)}}else this.setPointerOverMesh(null,X.pointerId,A,X)}simulatePointerMove(A,X){const s=new PointerEvent("pointermove",X);s.inputIndex=m.Move,this._checkPrePointerObservable(A,s,a.b.POINTERMOVE)||this._processPointerMove(A,s)}simulatePointerDown(A,X){const s=new PointerEvent("pointerdown",X);s.inputIndex=s.button+2,this._checkPrePointerObservable(A,s,a.b.POINTERDOWN)||this._processPointerDown(A,s)}_processPointerDown(A,X){var s;const N=this._scene;if(null!==(s=A)&&void 0!==s&&s.pickedMesh){this._pickedDownMesh=A.pickedMesh;const s=A.pickedMesh._getActionManagerForTrigger();if(s){if(s.hasPickTriggers)switch(s.processTrigger(5,new M(A.pickedMesh,N.pointerX,N.pointerY,A.pickedMesh,X,A)),X.button){case 0:s.processTrigger(2,new M(A.pickedMesh,N.pointerX,N.pointerY,A.pickedMesh,X,A));break;case 1:s.processTrigger(4,new M(A.pickedMesh,N.pointerX,N.pointerY,A.pickedMesh,X,A));break;case 2:s.processTrigger(3,new M(A.pickedMesh,N.pointerX,N.pointerY,A.pickedMesh,X,A))}s.hasSpecificTrigger(8)&&window.setTimeout((()=>{const A=N.Lk(this._unTranslatedPointerX,this._unTranslatedPointerY,(A=>A.Ai&&A.isVisible&&A.isReady()&&A.actionManager&&A.actionManager.hasSpecificTrigger(8)&&A===this._pickedDownMesh),!1,N.cameraToUseForPointers);null!==A&&void 0!==A&&A.pickedMesh&&s&&0!==this._activePointerIdsCount&&Date.now()-this._startingPointerTime>k.LongPressDelay&&!this._isPointerSwiping()&&(this._startingPointerTime=0,s.processTrigger(8,M.CreateNew(A.pickedMesh,X)))}),k.LongPressDelay)}}else for(const g of N._pointerDownStage)A=g.action(this._unTranslatedPointerX,this._unTranslatedPointerY,A,X,!1);let f;const E=a.b.POINTERDOWN;A?(N.onPointerDown&&N.onPointerDown(X,A,E),f=new a.g(E,X,A),this._setRayOnPointerInfo(A,X)):f=new a.g(E,X,null,this),N.onPointerObservable.hasObservers()&&N.onPointerObservable.notifyObservers(f,E)}_isPointerSwiping(){return this._isSwiping}simulatePointerUp(A,X,s){const N=new PointerEvent("pointerup",X);N.inputIndex=m.Move;const f=new L;s?f.doubleClick=!0:f.singleClick=!0,this._checkPrePointerObservable(A,N,a.b.POINTERUP)||this._processPointerUp(A,N,f)}_processPointerUp(A,X,s){var N;const f=this._scene;if(null!==(N=A)&&void 0!==N&&N.pickedMesh){if(this._pickedUpMesh=A.pickedMesh,this._pickedDownMesh===this._pickedUpMesh&&(f.onPointerPick&&f.onPointerPick(X,A),s.singleClick&&!s.ignore&&f.onPointerObservable.observers.length>this._cameraObserverCount)){const s=a.b.POINTERPICK,N=new a.g(s,X,A);this._setRayOnPointerInfo(A,X),f.onPointerObservable.notifyObservers(N,s)}const N=A.pickedMesh._getActionManagerForTrigger();if(N&&!s.ignore){N.processTrigger(7,M.CreateNew(A.pickedMesh,X,A)),!s.hasSwiped&&s.singleClick&&N.processTrigger(1,M.CreateNew(A.pickedMesh,X,A));const f=A.pickedMesh._getActionManagerForTrigger(6);s.doubleClick&&f&&f.processTrigger(6,M.CreateNew(A.pickedMesh,X,A))}}else if(!s.ignore)for(const E of f._pointerUpStage)A=E.action(this._unTranslatedPointerX,this._unTranslatedPointerY,A,X,s.doubleClick);if(this._pickedDownMesh&&this._pickedDownMesh!==this._pickedUpMesh){const A=this._pickedDownMesh._getActionManagerForTrigger(16);A&&A.processTrigger(16,M.CreateNew(this._pickedDownMesh,X))}if(!s.ignore){const N=new a.g(a.b.POINTERUP,X,A);if(this._setRayOnPointerInfo(A,X),f.onPointerObservable.notifyObservers(N,a.b.POINTERUP),f.onPointerUp&&f.onPointerUp(X,A,a.b.POINTERUP),!s.hasSwiped&&!this._skipPointerTap&&!this._isMultiTouchGesture){let N=0;if(s.singleClick?N=a.b.POINTERTAP:s.doubleClick&&(N=a.b.POINTERDOUBLETAP),N){const s=new a.g(N,X,A);f.onPointerObservable.hasObservers()&&f.onPointerObservable.hasSpecificMask(N)&&f.onPointerObservable.notifyObservers(s,N)}}}}isPointerCaptured(){let A=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this._pointerCaptures[A]}attachControl(){let A=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],X=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],s=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const f=this._scene,E=f.getEngine();N||(N=E.getInputElement()),this._alreadyAttached&&this.Ni(),N&&(this._alreadyAttachedTo=N),this._deviceSourceManager=new T(E),this._initActionManager=A=>{if(!this._meshPickProceed){const X=f.skipPointerUpPicking||0===f._registeredActions&&!this._checkForPicking()&&!f.onPointerUp?null:f.Lk(this._unTranslatedPointerX,this._unTranslatedPointerY,f.pointerUpPredicate,f.pointerUpFastCheck,f.cameraToUseForPointers,f.pointerUpTrianglePredicate);this._currentPickResult=X,X&&(A=X.hit&&X.pickedMesh?X.pickedMesh._getActionManagerForTrigger():null),this._meshPickProceed=!0}return A},this._delayedSimpleClick=(A,X,s)=>{if((Date.now()-this._previousStartingPointerTime>k.DoubleClickDelay&&!this._doubleClickOccured||A!==this._previousButtonPressed)&&(this._doubleClickOccured=!1,X.singleClick=!0,X.ignore=!1,this._delayedClicks[A])){const X=this._delayedClicks[A].evt,s=a.b.POINTERTAP,N=new a.g(s,X,this._currentPickResult);f.onPointerObservable.hasObservers()&&f.onPointerObservable.hasSpecificMask(s)&&f.onPointerObservable.notifyObservers(N,s),this._delayedClicks[A]=null}},this._initClickEvent=(A,X,s,N)=>{const f=new L;this._currentPickResult=null;let E=null,g=A.hasSpecificMask(a.b.POINTERPICK)||X.hasSpecificMask(a.b.POINTERPICK)||A.hasSpecificMask(a.b.POINTERTAP)||X.hasSpecificMask(a.b.POINTERTAP)||A.hasSpecificMask(a.b.POINTERDOUBLETAP)||X.hasSpecificMask(a.b.POINTERDOUBLETAP);!g&&u&&(E=this._initActionManager(E,f),E&&(g=E.hasPickTriggers));let K=!1;if(g=g&&!this._isMultiTouchGesture,g){const g=s.button;if(f.hasSwiped=this._isPointerSwiping(),!f.hasSwiped){let Y=!k.ExclusiveDoubleClickMode;if(Y||(Y=!A.hasSpecificMask(a.b.POINTERDOUBLETAP)&&!X.hasSpecificMask(a.b.POINTERDOUBLETAP),Y&&!u.HasSpecificTrigger(6)&&(E=this._initActionManager(E,f),E&&(Y=!E.hasSpecificTrigger(6)))),Y)(Date.now()-this._previousStartingPointerTime>k.DoubleClickDelay||g!==this._previousButtonPressed)&&(f.singleClick=!0,N(f,this._currentPickResult),K=!0);else{const A={evt:s,clickInfo:f,timeoutId:window.setTimeout(this._delayedSimpleClick.bind(this,g,f,N),k.DoubleClickDelay)};this._delayedClicks[g]=A}let v=A.hasSpecificMask(a.b.POINTERDOUBLETAP)||X.hasSpecificMask(a.b.POINTERDOUBLETAP);if(!v&&u.HasSpecificTrigger(6)&&(E=this._initActionManager(E,f),E&&(v=E.hasSpecificTrigger(6))),v)if(g===this._previousButtonPressed&&Date.now()-this._previousStartingPointerTime<k.DoubleClickDelay&&!this._doubleClickOccured){if(f.hasSwiped||this._isPointerSwiping())if(this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=g,k.ExclusiveDoubleClickMode){var r;if(this._delayedClicks[g])clearTimeout(null===(r=this._delayedClicks[g])||void 0===r?void 0:r.timeoutId),this._delayedClicks[g]=null;N(f,this._previousPickResult)}else N(f,this._currentPickResult);else{var i;if(this._previousStartingPointerTime=0,this._doubleClickOccured=!0,f.doubleClick=!0,f.ignore=!1,k.ExclusiveDoubleClickMode&&this._delayedClicks[g])clearTimeout(null===(i=this._delayedClicks[g])||void 0===i?void 0:i.timeoutId),this._delayedClicks[g]=null;N(f,this._currentPickResult)}K=!0}else this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=g}}K||N(f,this._currentPickResult)},this._onPointerMove=A=>{if(this._updatePointerPosition(A),this._isSwiping||-1===this._swipeButtonPressed||(this._isSwiping=Math.abs(this._startingPointerPosition.x-this._pointerX)>k.DragMovementThreshold||Math.abs(this._startingPointerPosition.y-this._pointerY)>k.DragMovementThreshold),E.isPointerLock&&E._verifyPointerLock(),this._checkPrePointerObservable(null,A,A.inputIndex>=m.MouseWheelX&&A.inputIndex<=m.MouseWheelZ?a.b.POINTERWHEEL:a.b.POINTERMOVE))return;if(!f.cameraToUseForPointers&&!f.activeCamera)return;if(f.Jl)return void this._processPointerMove(new c.c,A);f.pointerMovePredicate||(f.pointerMovePredicate=A=>A.Ai&&A.isVisible&&A.isReady()&&A.isEnabled()&&(A.enablePointerMoveEvents||f.constantlyUpdateMeshUnderPointer||null!==A._getActionManagerForTrigger())&&(!f.cameraToUseForPointers||0!==(f.cameraToUseForPointers.layerMask&A.layerMask)));const X=f._registeredActions>0||f.constantlyUpdateMeshUnderPointer?this._pickMove(A):null;this._processPointerMove(X,A)},this._onPointerDown=A=>{const X=this._activePointerIds.indexOf(-1);if(-1===X?this._activePointerIds.push(A.pointerId):this._activePointerIds[X]=A.pointerId,this._activePointerIdsCount++,this._pickedDownMesh=null,this._meshPickProceed=!1,k.ExclusiveDoubleClickMode)for(let N=0;N<this._delayedClicks.length;N++)if(this._delayedClicks[N])if(A.button===N){var s;clearTimeout(null===(s=this._delayedClicks[N])||void 0===s?void 0:s.timeoutId)}else{const A=this._delayedClicks[N].clickInfo;this._doubleClickOccured=!1,A.singleClick=!0,A.ignore=!1;const X=this._delayedClicks[N].evt,s=a.b.POINTERTAP,E=new a.g(s,X,this._currentPickResult);f.onPointerObservable.hasObservers()&&f.onPointerObservable.hasSpecificMask(s)&&f.onPointerObservable.notifyObservers(E,s),this._delayedClicks[N]=null}if(this._updatePointerPosition(A),-1===this._swipeButtonPressed&&(this._swipeButtonPressed=A.button),f.preventDefaultOnPointerDown&&N&&(A.preventDefault(),N.focus()),this._startingPointerPosition.x=this._pointerX,this._startingPointerPosition.y=this._pointerY,this._startingPointerTime=Date.now(),this._checkPrePointerObservable(null,A,a.b.POINTERDOWN))return;if(!f.cameraToUseForPointers&&!f.activeCamera)return;let E;this._pointerCaptures[A.pointerId]=!0,f.pointerDownPredicate||(f.pointerDownPredicate=A=>A.Ai&&A.isVisible&&A.isReady()&&A.isEnabled()&&(!f.cameraToUseForPointers||0!==(f.cameraToUseForPointers.layerMask&A.layerMask))),this._pickedDownMesh=null,E=f.skipPointerDownPicking||0===f._registeredActions&&!this._checkForPicking()&&!f.onPointerDown?new c.c:f.Lk(this._unTranslatedPointerX,this._unTranslatedPointerY,f.pointerDownPredicate,f.pointerDownFastCheck,f.cameraToUseForPointers,f.pointerDownTrianglePredicate),this._processPointerDown(E,A)},this._onPointerUp=A=>{const X=this._activePointerIds.indexOf(A.pointerId);-1!==X&&(this._activePointerIds[X]=-1,this._activePointerIdsCount--,this._pickedUpMesh=null,this._meshPickProceed=!1,this._updatePointerPosition(A),f.preventDefaultOnPointerUp&&N&&(A.preventDefault(),N.focus()),this._initClickEvent(f.onPrePointerObservable,f.onPointerObservable,A,((X,s)=>{if(f.onPrePointerObservable.hasObservers()&&(this._skipPointerTap=!1,!X.ignore)){if(this._checkPrePointerObservable(null,A,a.b.POINTERUP))return this._swipeButtonPressed===A.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1),void(0===A.buttons&&(this._pointerCaptures[A.pointerId]=!1));X.hasSwiped||(X.singleClick&&f.onPrePointerObservable.hasSpecificMask(a.b.POINTERTAP)&&this._checkPrePointerObservable(null,A,a.b.POINTERTAP)&&(this._skipPointerTap=!0),X.doubleClick&&f.onPrePointerObservable.hasSpecificMask(a.b.POINTERDOUBLETAP)&&this._checkPrePointerObservable(null,A,a.b.POINTERDOUBLETAP)&&(this._skipPointerTap=!0))}this._pointerCaptures[A.pointerId]?(0===A.buttons&&(this._pointerCaptures[A.pointerId]=!1),(f.cameraToUseForPointers||f.activeCamera)&&(f.pointerUpPredicate||(f.pointerUpPredicate=A=>A.Ai&&A.isVisible&&A.isReady()&&A.isEnabled()&&(!f.cameraToUseForPointers||0!==(f.cameraToUseForPointers.layerMask&A.layerMask))),!this._meshPickProceed&&(u&&u.HasTriggers||this._checkForPicking()||f.onPointerUp)&&this._initActionManager(null,X),s||(s=this._currentPickResult),this._processPointerUp(s,A,X),this._previousPickResult=this._currentPickResult,this._swipeButtonPressed===A.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1))):this._swipeButtonPressed===A.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1)})))},this._onKeyDown=A=>{const X=D.c.KEYDOWN;if(f.onPreKeyboardObservable.hasObservers()){const s=new D.g(X,A);if(f.onPreKeyboardObservable.notifyObservers(s,X),s.skipOnKeyboardObservable)return}if(f.onKeyboardObservable.hasObservers()){const s=new D.j(X,A);f.onKeyboardObservable.notifyObservers(s,X)}f.actionManager&&f.actionManager.processTrigger(14,M.CreateNewFromScene(f,A))},this._onKeyUp=A=>{const X=D.c.KEYUP;if(f.onPreKeyboardObservable.hasObservers()){const s=new D.g(X,A);if(f.onPreKeyboardObservable.notifyObservers(s,X),s.skipOnKeyboardObservable)return}if(f.onKeyboardObservable.hasObservers()){const s=new D.j(X,A);f.onKeyboardObservable.notifyObservers(s,X)}f.actionManager&&f.actionManager.processTrigger(15,M.CreateNewFromScene(f,A))},this._deviceSourceManager.onDeviceConnectedObservable.add((N=>{N.deviceType===z.Mouse?N.onInputChangedObservable.add((f=>{this._originMouseEvent=f,f.inputIndex===m.LeftClick||f.inputIndex===m.MiddleClick||f.inputIndex===m.RightClick||f.inputIndex===m.BrowserBack||f.inputIndex===m.BrowserForward?X&&1===N.getInput(f.inputIndex)?this._onPointerDown(f):A&&0===N.getInput(f.inputIndex)&&this._onPointerUp(f):s&&(f.inputIndex===m.Move?this._onPointerMove(f):f.inputIndex!==m.MouseWheelX&&f.inputIndex!==m.MouseWheelY&&f.inputIndex!==m.MouseWheelZ||this._onPointerMove(f))})):N.deviceType===z.Touch?N.onInputChangedObservable.add((f=>{f.inputIndex===m.LeftClick&&(X&&1===N.getInput(f.inputIndex)?(this._onPointerDown(f),this._activePointerIdsCount>1&&(this._isMultiTouchGesture=!0)):A&&0===N.getInput(f.inputIndex)&&(this._onPointerUp(f),0===this._activePointerIdsCount&&(this._isMultiTouchGesture=!1))),s&&f.inputIndex===m.Move&&this._onPointerMove(f)})):N.deviceType===z.Keyboard&&N.onInputChangedObservable.add((A=>{"keydown"===A.type?this._onKeyDown(A):"keyup"===A.type&&this._onKeyUp(A)}))})),this._alreadyAttached=!0}Ni(){this._alreadyAttached&&(this._deviceSourceManager.dispose(),this._deviceSourceManager=null,this._alreadyAttachedTo&&!this._scene.doNotHandleCursors&&(this._alreadyAttachedTo.style.cursor=this._scene.defaultCursor),this._alreadyAttached=!1,this._alreadyAttachedTo=null)}setPointerOverMesh(A){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,s=arguments.length>2?arguments[2]:void 0,N=arguments.length>3?arguments[3]:void 0;if(this._meshUnderPointerId[X]===A&&(!A||!A._internalAbstractMeshDataInfo._pointerOverDisableMeshTesting))return;const f=this._meshUnderPointerId[X];let E;f&&(E=f._getActionManagerForTrigger(10),E&&E.processTrigger(10,new M(f,this._pointerX,this._pointerY,A,N,{pointerId:X}))),A?(this._meshUnderPointerId[X]=A,this._pointerOverMesh=A,E=A._getActionManagerForTrigger(9),E&&E.processTrigger(9,new M(A,this._pointerX,this._pointerY,A,N,{pointerId:X,pickResult:s}))):(delete this._meshUnderPointerId[X],this._pointerOverMesh=null),this._scene.onMeshUnderPointerUpdatedObservable.hasObservers()&&this._scene.onMeshUnderPointerUpdatedObservable.notifyObservers({mesh:A,pointerId:X})}getPointerOverMesh(){return this.meshUnderPointer}_invalidateMesh(A){this._pointerOverMesh===A&&(this._pointerOverMesh=null),this._pickedDownMesh===A&&(this._pickedDownMesh=null),this._pickedUpMesh===A&&(this._pickedUpMesh=null);for(const X in this._meshUnderPointerId)this._meshUnderPointerId[X]===A&&delete this._meshUnderPointerId[X]}}k.DragMovementThreshold=10,k.LongPressDelay=500,k.DoubleClickDelay=300,k.ExclusiveDoubleClickMode=!1;var x=s(2386),H=s(709),F=s(717),q=s(2476),S=s(508),p=s(834),B=s(687);class Z{constructor(){this.pointerDownFastCheck=!1,this.pointerUpFastCheck=!1,this.pointerMoveFastCheck=!1,this.Jl=!1,this.skipPointerDownPicking=!1,this.skipPointerUpPicking=!1}}var o,W=s(470),h=s(616);!function(A){A[A.BackwardCompatible=0]="BackwardCompatible",A[A.Intermediate=1]="Intermediate",A[A.Aggressive=2]="Aggressive"}(o||(o={}));class AA{static DefaultMaterialFactory(A){throw(0,J.e)("cb")}static CollisionCoordinatorFactory(){throw(0,J.e)("DefaultCollisionCoordinator")}get clearColor(){return this._clearColor}set clearColor(A){A!==this._clearColor&&(this._clearColor=A,this.onClearColorChangedObservable.notifyObservers(this._clearColor))}get imageProcessingConfiguration(){return this._imageProcessingConfiguration}get performancePriority(){return this._performancePriority}set performancePriority(A){if(A!==this._performancePriority){switch(this._performancePriority=A,A){case 0:this.skipFrustumClipping=!1,this._renderingManager.maintainStateBetweenFrames=!1,this.Jl=!1,this.Cl=!0;break;case 1:this.skipFrustumClipping=!1,this._renderingManager.maintainStateBetweenFrames=!1,this.Jl=!0,this.Cl=!1;break;case 2:this.skipFrustumClipping=!0,this._renderingManager.maintainStateBetweenFrames=!0,this.Jl=!0,this.Cl=!1}this.onScenePerformancePriorityChangedObservable.notifyObservers(A)}}set forceWireframe(A){this._forceWireframe!==A&&(this._forceWireframe=A,this.markAllMaterialsAsDirty(16))}get forceWireframe(){return this._forceWireframe}set skipFrustumClipping(A){this._skipFrustumClipping!==A&&(this._skipFrustumClipping=A)}get skipFrustumClipping(){return this._skipFrustumClipping}set forcePointsCloud(A){this._forcePointsCloud!==A&&(this._forcePointsCloud=A,this.markAllMaterialsAsDirty(16))}get forcePointsCloud(){return this._forcePointsCloud}get environmentTexture(){return this._environmentTexture}set environmentTexture(A){this._environmentTexture!==A&&(this._environmentTexture=A,this.onEnvironmentTextureChangedObservable.notifyObservers(A),this.markAllMaterialsAsDirty(1))}getNodes(){let A=[];A=A.concat(this.meshes),A=A.concat(this.lights),A=A.concat(this.cameras),A=A.concat(this.transformNodes);for(const X of this.skeletons)A=A.concat(X.bones);return A}get animationPropertiesOverride(){return this._animationPropertiesOverride}set animationPropertiesOverride(A){this._animationPropertiesOverride=A}set onDispose(A){this._onDisposeObserver&&this.Ji.remove(this._onDisposeObserver),this._onDisposeObserver=this.Ji.add(A)}set beforeRender(A){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),A&&(this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(A))}set afterRender(A){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),A&&(this._onAfterRenderObserver=this.onAfterRenderObservable.add(A))}set beforeCameraRender(A){this._onBeforeCameraRenderObserver&&this.onBeforeCameraRenderObservable.remove(this._onBeforeCameraRenderObserver),this._onBeforeCameraRenderObserver=this.onBeforeCameraRenderObservable.add(A)}set afterCameraRender(A){this._onAfterCameraRenderObserver&&this.onAfterCameraRenderObservable.remove(this._onAfterCameraRenderObserver),this._onAfterCameraRenderObserver=this.onAfterCameraRenderObservable.add(A)}get pointerDownPredicate(){return this._pointerPickingConfiguration.pointerDownPredicate}set pointerDownPredicate(A){this._pointerPickingConfiguration.pointerDownPredicate=A}get pointerUpPredicate(){return this._pointerPickingConfiguration.pointerUpPredicate}set pointerUpPredicate(A){this._pointerPickingConfiguration.pointerUpPredicate=A}get pointerMovePredicate(){return this._pointerPickingConfiguration.pointerMovePredicate}set pointerMovePredicate(A){this._pointerPickingConfiguration.pointerMovePredicate=A}get pointerDownFastCheck(){return this._pointerPickingConfiguration.pointerDownFastCheck}set pointerDownFastCheck(A){this._pointerPickingConfiguration.pointerDownFastCheck=A}get pointerUpFastCheck(){return this._pointerPickingConfiguration.pointerUpFastCheck}set pointerUpFastCheck(A){this._pointerPickingConfiguration.pointerUpFastCheck=A}get pointerMoveFastCheck(){return this._pointerPickingConfiguration.pointerMoveFastCheck}set pointerMoveFastCheck(A){this._pointerPickingConfiguration.pointerMoveFastCheck=A}get Jl(){return this._pointerPickingConfiguration.Jl}set Jl(A){this._pointerPickingConfiguration.Jl=A}get skipPointerDownPicking(){return this._pointerPickingConfiguration.skipPointerDownPicking}set skipPointerDownPicking(A){this._pointerPickingConfiguration.skipPointerDownPicking=A}get skipPointerUpPicking(){return this._pointerPickingConfiguration.skipPointerUpPicking}set skipPointerUpPicking(A){this._pointerPickingConfiguration.skipPointerUpPicking=A}get unTranslatedPointer(){return this._inputManager.unTranslatedPointer}static get DragMovementThreshold(){return k.DragMovementThreshold}static set DragMovementThreshold(A){k.DragMovementThreshold=A}static get LongPressDelay(){return k.LongPressDelay}static set LongPressDelay(A){k.LongPressDelay=A}static get DoubleClickDelay(){return k.DoubleClickDelay}static set DoubleClickDelay(A){k.DoubleClickDelay=A}static get ExclusiveDoubleClickMode(){return k.ExclusiveDoubleClickMode}static set ExclusiveDoubleClickMode(A){k.ExclusiveDoubleClickMode=A}bindEyePosition(A){var X;let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"vEyePosition",N=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const f=this._forcedViewPosition?this._forcedViewPosition:this._mirroredCameraPosition?this._mirroredCameraPosition:(null===(X=this.activeCamera)||void 0===X?void 0:X.globalPosition)??i.k.ZeroReadOnly,E=this.useRightHandedSystem===(null!=this._mirroredCameraPosition);return i.f.Vector4[0].set(f.x,f.y,f.z,E?-1:1),A&&(N?A.setFloat3(s,i.f.Vector4[0].x,i.f.Vector4[0].y,i.f.Vector4[0].z):A.setVector4(s,i.f.Vector4[0])),i.f.Vector4[0]}finalizeSceneUbo(){const A=this.getSceneUniformBuffer(),X=this.bindEyePosition(null);return A.updateFloat4("vEyePosition",X.x,X.y,X.z,X.w),A.update(),A}set useRightHandedSystem(A){this._useRightHandedSystem!==A&&(this._useRightHandedSystem=A,this.markAllMaterialsAsDirty(16))}get useRightHandedSystem(){return this._useRightHandedSystem}setStepId(A){this._currentStepId=A}getStepId(){return this._currentStepId}getInternalStep(){return this._currentInternalStep}set fogEnabled(A){this._fogEnabled!==A&&(this._fogEnabled=A,this.markAllMaterialsAsDirty(16))}get fogEnabled(){return this._fogEnabled}set fogMode(A){this._fogMode!==A&&(this._fogMode=A,this.markAllMaterialsAsDirty(16))}get fogMode(){return this._fogMode}get prePass(){return!!this.prePassRenderer&&this.prePassRenderer.defaultRT.enabled}set shadowsEnabled(A){this._shadowsEnabled!==A&&(this._shadowsEnabled=A,this.markAllMaterialsAsDirty(2))}get shadowsEnabled(){return this._shadowsEnabled}set lightsEnabled(A){this._lightsEnabled!==A&&(this._lightsEnabled=A,this.markAllMaterialsAsDirty(2))}get lightsEnabled(){return this._lightsEnabled}get activeCameras(){return this._activeCameras}set activeCameras(A){this._unObserveActiveCameras&&(this._unObserveActiveCameras(),this._unObserveActiveCameras=null),A&&(this._unObserveActiveCameras=(0,B.f)(A,(()=>{this.onActiveCamerasChanged.notifyObservers(this)}))),this._activeCameras=A}get activeCamera(){return this._activeCamera}set activeCamera(A){A!==this._activeCamera&&(this._activeCamera=A,this.onActiveCameraChanged.notifyObservers(this))}get _hasDefaultMaterial(){return AA.DefaultMaterialFactory!==AA._OriginalDefaultMaterialFactory}get defaultMaterial(){return this.ml||(this.ml=AA.DefaultMaterialFactory(this)),this.ml}set defaultMaterial(A){this.ml=A}set texturesEnabled(A){this._texturesEnabled!==A&&(this._texturesEnabled=A,this.markAllMaterialsAsDirty(1))}get texturesEnabled(){return this._texturesEnabled}get frameGraph(){return this._frameGraph}set frameGraph(A){if(this._frameGraph)return this._frameGraph=A,void(A||(this.customRenderFunction=this._currentCustomRenderFunction));this._frameGraph=A,A&&(this._currentCustomRenderFunction=this.customRenderFunction,this.customRenderFunction=this._renderWithFrameGraph,this.activeCamera=null)}set skeletonsEnabled(A){this._skeletonsEnabled!==A&&(this._skeletonsEnabled=A,this.markAllMaterialsAsDirty(8))}get skeletonsEnabled(){return this._skeletonsEnabled}get collisionCoordinator(){return this._collisionCoordinator||(this._collisionCoordinator=AA.CollisionCoordinatorFactory(),this._collisionCoordinator.init(this)),this._collisionCoordinator}get renderingManager(){return this._renderingManager}get frustumPlanes(){return this._frustumPlanes}_registerTransientComponents(){if(this._transientComponents.length>0){for(const A of this._transientComponents)A.register();this._transientComponents.length=0}}bb(A){this._components.push(A),this._transientComponents.push(A);const X=A;X.addFromContainer&&X.serialize&&this._serializableComponents.push(X)}_getComponent(A){for(const X of this._components)if(X.name===A)return X;return null}get uniqueId(){return this._uniqueId}constructor(A,X){this._inputManager=new k(this),this.cameraToUseForPointers=null,this._isScene=!0,this._blockEntityCollection=!1,this.Cl=!0,this.autoClearDepthAndStencil=!0,this._clearColor=new H.h(.2,.2,.3,1),this.onClearColorChangedObservable=new E.b,this.ambientColor=new H.e(0,0,0),this.environmentIntensity=1,this.iblIntensity=1,this._performancePriority=0,this.onScenePerformancePriorityChangedObservable=new E.b,this._forceWireframe=!1,this._skipFrustumClipping=!1,this._forcePointsCloud=!1,this.rootNodes=[],this.cameras=[],this.lights=[],this.meshes=[],this.skeletons=[],this.ri=[],this.animations=[],this.animationGroups=[],this.multiMaterials=[],this.materials=[],this.morphTargetManagers=[],this.geometries=[],this.transformNodes=[],this.actionManagers=[],this.textures=[],this._environmentTexture=null,this.postProcesses=[],this.effectLayers=[],this.lm=null,this.layers=[],this.lensFlareSystems=[],this.proceduralTextures=[],this.animationsEnabled=!0,this._animationPropertiesOverride=null,this.useConstantAnimationDeltaTime=!1,this.constantlyUpdateMeshUnderPointer=!1,this.hoverCursor="pointer",this.defaultCursor="",this.doNotHandleCursors=!1,this.preventDefaultOnPointerDown=!0,this.preventDefaultOnPointerUp=!0,this.metadata=null,this.reservedDataStore=null,this.disableOfflineSupportExceptionRules=[],this.Ji=new E.b,this._onDisposeObserver=null,this.onBeforeRenderObservable=new E.b,this._onBeforeRenderObserver=null,this.onAfterRenderObservable=new E.b,this.onAfterRenderCameraObservable=new E.b,this._onAfterRenderObserver=null,this.onBeforeAnimationsObservable=new E.b,this.onAfterAnimationsObservable=new E.b,this.onBeforeDrawPhaseObservable=new E.b,this.onAfterDrawPhaseObservable=new E.b,this.onReadyObservable=new E.b,this.onBeforeCameraRenderObservable=new E.b,this._onBeforeCameraRenderObserver=null,this.onAfterCameraRenderObservable=new E.b,this._onAfterCameraRenderObserver=null,this.onBeforeActiveMeshesEvaluationObservable=new E.b,this.onAfterActiveMeshesEvaluationObservable=new E.b,this.onBeforeParticlesRenderingObservable=new E.b,this.onAfterParticlesRenderingObservable=new E.b,this.onDataLoadedObservable=new E.b,this.onNewCameraAddedObservable=new E.b,this.onCameraRemovedObservable=new E.b,this.onNewLightAddedObservable=new E.b,this.onLightRemovedObservable=new E.b,this.onNewGeometryAddedObservable=new E.b,this.onGeometryRemovedObservable=new E.b,this.onNewTransformNodeAddedObservable=new E.b,this.onTransformNodeRemovedObservable=new E.b,this.onNewMeshAddedObservable=new E.b,this.onMeshRemovedObservable=new E.b,this.onNewSkeletonAddedObservable=new E.b,this.onSkeletonRemovedObservable=new E.b,this.onNewMaterialAddedObservable=new E.b,this.onNewMultiMaterialAddedObservable=new E.b,this.onMaterialRemovedObservable=new E.b,this.onMultiMaterialRemovedObservable=new E.b,this.onNewTextureAddedObservable=new E.b,this.onTextureRemovedObservable=new E.b,this.onBeforeRenderTargetsRenderObservable=new E.b,this.onAfterRenderTargetsRenderObservable=new E.b,this.onBeforeStepObservable=new E.b,this.onAfterStepObservable=new E.b,this.onActiveCameraChanged=new E.b,this.onActiveCamerasChanged=new E.b,this.onBeforeRenderingGroupObservable=new E.b,this.onAfterRenderingGroupObservable=new E.b,this.onMeshImportedObservable=new E.b,this.onAnimationFileImportedObservable=new E.b,this.onEnvironmentTextureChangedObservable=new E.b,this.onMeshUnderPointerUpdatedObservable=new E.b,this._registeredForLateAnimationBindings=new g.d(256),this._pointerPickingConfiguration=new Z,this.onPrePointerObservable=new E.b,this.onPointerObservable=new E.b,this.onPreKeyboardObservable=new E.b,this.onKeyboardObservable=new E.b,this._useRightHandedSystem=!1,this._timeAccumulator=0,this._currentStepId=0,this._currentInternalStep=0,this._fogEnabled=!0,this._fogMode=AA.FOGMODE_NONE,this.fogColor=new H.e(.2,.2,.3),this.fogDensity=.1,this.fogStart=0,this.fogEnd=1e3,this.needsPreviousWorldMatrices=!1,this._shadowsEnabled=!0,this._lightsEnabled=!0,this._unObserveActiveCameras=null,this._texturesEnabled=!0,this._frameGraph=null,this.frameGraphs=[],this.physicsEnabled=!0,this.particlesEnabled=!0,this.spritesEnabled=!0,this._skeletonsEnabled=!0,this.lensFlaresEnabled=!0,this.collisionsEnabled=!0,this.gravity=new i.k(0,-9.807,0),this.postProcessesEnabled=!0,this.renderTargetsEnabled=!0,this.dumpNextRenderTargets=!1,this.customRenderTargets=[],this.importedMeshesFiles=[],this.probesEnabled=!0,this._meshesForIntersections=new g.d(256),this.proceduralTexturesEnabled=!0,this._totalVertices=new x.d,this._activeIndices=new x.d,this._activeParticles=new x.d,this._activeBones=new x.d,this._animationTime=0,this.animationTimeScale=1,this._renderId=0,this._frameId=0,this._executeWhenReadyTimeoutId=null,this._intermediateRendering=!1,this._defaultFrameBufferCleared=!1,this._viewUpdateFlag=-1,this._projectionUpdateFlag=-1,this._toBeDisposed=new Array(256),this._activeRequests=new Array,this._pendingData=[],this._isDisposed=!1,this.dispatchAllSubMeshesOfActiveMeshes=!1,this._activeMeshes=new g.f(256),this._processedMaterials=new g.f(256),this._renderTargets=new g.d(256),this._materialsRenderTargets=new g.d(256),this._activeParticleSystems=new g.f(256),this._activeSkeletons=new g.d(32),this._softwareSkinnedMeshes=new g.d(32),this._activeAnimatables=new Array,this._transformMatrix=i.c.Zero(),this.requireLightSorting=!1,this._components=[],this._serializableComponents=[],this._transientComponents=[],this._beforeCameraUpdateStage=w.c.Create(),this._beforeClearStage=w.c.Create(),this._beforeRenderTargetClearStage=w.c.Create(),this._gatherRenderTargetsStage=w.c.Create(),this._gatherActiveCameraRenderTargetsStage=w.c.Create(),this._isReadyForMeshStage=w.c.Create(),this._beforeEvaluateActiveMeshStage=w.c.Create(),this._evaluateSubMeshStage=w.c.Create(),this._preActiveMeshStage=w.c.Create(),this._cameraDrawRenderTargetStage=w.c.Create(),this._beforeCameraDrawStage=w.c.Create(),this._beforeRenderTargetDrawStage=w.c.Create(),this._beforeRenderingGroupDrawStage=w.c.Create(),this._beforeRenderingMeshStage=w.c.Create(),this._afterRenderingMeshStage=w.c.Create(),this._afterRenderingGroupDrawStage=w.c.Create(),this._afterCameraDrawStage=w.c.Create(),this._afterCameraPostProcessStage=w.c.Create(),this._afterRenderTargetDrawStage=w.c.Create(),this._afterRenderTargetPostProcessStage=w.c.Create(),this._afterRenderStage=w.c.Create(),this._pointerMoveStage=w.c.Create(),this._pointerDownStage=w.c.Create(),this._pointerUpStage=w.c.Create(),this._geometriesByUniqueId=null,this._uniqueId=0,this._defaultMeshCandidates={data:[],length:0},this._defaultSubMeshCandidates={data:[],length:0},this._preventFreeActiveMeshesAndRenderingGroups=!1,this._activeMeshesFrozen=!1,this._activeMeshesFrozenButKeepClipping=!1,this._skipEvaluateActiveMeshesCompletely=!1,this._useCurrentFrameBuffer=!1,this._allowPostProcessClearColor=!0,this.getDeterministicFrameTime=()=>this._engine.getTimeStep(),this._registeredActions=0,this._blockMaterialDirtyMechanism=!1,this._perfCollector=null,this.activeCameras=[],this._uniqueId=this.getUniqueId();const s={useGeometryUniqueIdsMap:!0,useMaterialMeshMap:!0,useClonedMeshMap:!0,virtual:!1,...X};A=this._engine=A||C.b.LastCreatedEngine,s.virtual?A._virtualScenes.push(this):(C.b._LastCreatedScene=this,A.scenes.push(this)),this._uid=null,this._renderingManager=new Q.e(this),d.b&&(this.postProcessManager=new d.b(this)),(0,R.m)()&&this.attachControl(),this._createUbo(),Y.e&&(this._imageProcessingConfiguration=new Y.e),this.setDefaultCandidateProviders(),s.useGeometryUniqueIdsMap&&(this._geometriesByUniqueId={}),this.useMaterialMeshMap=s.useMaterialMeshMap,this.useClonedMeshMap=s.useClonedMeshMap,X&&X.virtual||A.onNewSceneAddedObservable.notifyObservers(this)}getClassName(){return"Scene"}_getDefaultMeshCandidates(){return this._defaultMeshCandidates.data=this.meshes,this._defaultMeshCandidates.length=this.meshes.length,this._defaultMeshCandidates}_getDefaultSubMeshCandidates(A){return this._defaultSubMeshCandidates.data=A.wi,this._defaultSubMeshCandidates.length=A.wi.length,this._defaultSubMeshCandidates}setDefaultCandidateProviders(){this.getActiveMeshCandidates=()=>this._getDefaultMeshCandidates(),this.getActiveSubMeshCandidates=A=>this._getDefaultSubMeshCandidates(A),this.getIntersectingSubMeshCandidates=(A,X)=>this._getDefaultSubMeshCandidates(A),this.getCollidingSubMeshCandidates=(A,X)=>this._getDefaultSubMeshCandidates(A)}get meshUnderPointer(){return this._inputManager.meshUnderPointer}get pointerX(){return this._inputManager.pointerX}set pointerX(A){this._inputManager.pointerX=A}get pointerY(){return this._inputManager.pointerY}set pointerY(A){this._inputManager.pointerY=A}getCachedMaterial(){return this._cachedMaterial}getCachedEffect(){return this._cachedEffect}getCachedVisibility(){return this._cachedVisibility}isCachedMaterialInvalid(A,X){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return this._cachedEffect!==X||this._cachedMaterial!==A||this._cachedVisibility!==s}getEngine(){return this._engine}getTotalVertices(){return this._totalVertices.current}get totalVerticesPerfCounter(){return this._totalVertices}getActiveIndices(){return this._activeIndices.current}get totalActiveIndicesPerfCounter(){return this._activeIndices}getActiveParticles(){return this._activeParticles.current}get activeParticlesPerfCounter(){return this._activeParticles}getActiveBones(){return this._activeBones.current}get activeBonesPerfCounter(){return this._activeBones}getActiveMeshes(){return this._activeMeshes}getAnimationRatio(){return void 0!==this._animationRatio?this._animationRatio:1}getRenderId(){return this._renderId}getFrameId(){return this._frameId}incrementRenderId(){this._renderId++}_createUbo(){this.setSceneUniformBuffer(this.createSceneUniformBuffer())}simulatePointerMove(A,X){return this._inputManager.simulatePointerMove(A,X),this}simulatePointerDown(A,X){return this._inputManager.simulatePointerDown(A,X),this}simulatePointerUp(A,X,s){return this._inputManager.simulatePointerUp(A,X,s),this}isPointerCaptured(){let A=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this._inputManager.isPointerCaptured(A)}attachControl(){let A=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],X=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],s=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];this._inputManager.attachControl(A,X,s)}Ni(){this._inputManager.Ni()}isReady(){var A,X;let s,N=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this._isDisposed)return!1;const f=this.getEngine(),E=f.currentRenderPassId;f.currentRenderPassId=(null===(A=this.activeCamera)||void 0===A?void 0:A.renderPassId)??E;let g=!0;for(this._pendingData.length>0&&(g=!1),null===(X=this.prePassRenderer)||void 0===X||X.update(),this.useOrderIndependentTransparency&&this.depthPeelingRenderer&&g&&(g=this.depthPeelingRenderer.isReady()),N&&(this._processedMaterials.reset(),this._materialsRenderTargets.reset()),s=0;s<this.meshes.length;s++){const A=this.meshes[s];if(!A.wi||0===A.wi.length)continue;if(!A.isReady(!0)){g=!1;continue}const X=A.hasThinInstances||"InstancedMesh"===A.getClassName()||"InstancedLinesMesh"===A.getClassName()||f.getCaps().instancedArrays&&A.instances.length>0;for(const s of this._isReadyForMeshStage)s.action(A,X)||(g=!1);if(!N)continue;const E=A.material||this.defaultMaterial;if(E)if(E._storeEffectOnSubMeshes)for(const s of A.wi){const A=s.Ha();A&&A.hasRenderTargetTextures&&null!=A.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(A)&&(this._processedMaterials.push(A),this._materialsRenderTargets.concatWithNoDuplicate(A.getRenderTargetTextures()))}else E.hasRenderTargetTextures&&null!=E.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(E)&&(this._processedMaterials.push(E),this._materialsRenderTargets.concatWithNoDuplicate(E.getRenderTargetTextures()))}if(N)for(s=0;s<this._materialsRenderTargets.length;++s){this._materialsRenderTargets.data[s].isReadyForRendering()||(g=!1)}for(s=0;s<this.geometries.length;s++){2===this.geometries[s].delayLoadState&&(g=!1)}if(this.activeCameras&&this.activeCameras.length>0)for(const K of this.activeCameras)K.isReady(!0)||(g=!1);else this.activeCamera&&(this.activeCamera.isReady(!0)||(g=!1));for(const K of this.ri)K.isReady()||(g=!1);if(this.layers)for(const K of this.layers)K.isReady()||(g=!1);if(this.effectLayers)for(const K of this.effectLayers)K.isLayerReady()||(g=!1);return f.areAllEffectsReady()||(g=!1),f.currentRenderPassId=E,g}resetCachedMaterial(){this._cachedMaterial=null,this._cachedEffect=null,this._cachedVisibility=null}registerBeforeRender(A){this.onBeforeRenderObservable.add(A)}unregisterBeforeRender(A){this.onBeforeRenderObservable.removeCallback(A)}registerAfterRender(A){this.onAfterRenderObservable.add(A)}unregisterAfterRender(A){this.onAfterRenderObservable.removeCallback(A)}_executeOnceBeforeRender(A){const X=()=>{A(),setTimeout((()=>{this.unregisterBeforeRender(X)}))};this.registerBeforeRender(X)}executeOnceBeforeRender(A,X){void 0!==X?setTimeout((()=>{this._executeOnceBeforeRender(A)}),X):this._executeOnceBeforeRender(A)}addPendingData(A){this._pendingData.push(A)}removePendingData(A){const X=this.isLoading,s=this._pendingData.indexOf(A);-1!==s&&this._pendingData.splice(s,1),X&&!this.isLoading&&this.onDataLoadedObservable.notifyObservers(this)}getWaitingItemsCount(){return this._pendingData.length}get isLoading(){return this._pendingData.length>0}executeWhenReady(A){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.onReadyObservable.addOnce(A),null===this._executeWhenReadyTimeoutId&&this._checkIsReady(X)}async whenReadyAsync(){let A=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return await new Promise((X=>{this.executeWhenReady((()=>{X()}),A)}))}_checkIsReady(){let A=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return this._registerTransientComponents(),this.isReady(A)?(this.onReadyObservable.notifyObservers(this),this.onReadyObservable.clear(),void(this._executeWhenReadyTimeoutId=null)):this._isDisposed?(this.onReadyObservable.clear(),void(this._executeWhenReadyTimeoutId=null)):void(this._executeWhenReadyTimeoutId=setTimeout((()=>{this.incrementRenderId(),this._checkIsReady(A)}),100))}get animatables(){return this._activeAnimatables}resetLastAnimationTimeFrame(){this._animationTimeLast=f.e.Now}getViewMatrix(){return this._viewMatrix}getProjectionMatrix(){return this._projectionMatrix}getTransformMatrix(){return this._transformMatrix}setTransformMatrix(A,X,s,N){s||N||!this._multiviewSceneUbo||(this._multiviewSceneUbo.dispose(),this._multiviewSceneUbo=null),this._viewUpdateFlag===A.updateFlag&&this._projectionUpdateFlag===X.updateFlag||(this._viewUpdateFlag=A.updateFlag,this._projectionUpdateFlag=X.updateFlag,this._viewMatrix=A,this._projectionMatrix=X,this._viewMatrix.multiplyToRef(this._projectionMatrix,this._transformMatrix),this._frustumPlanes?F.c.GetPlanesToRef(this._transformMatrix,this._frustumPlanes):this._frustumPlanes=F.c.GetPlanes(this._transformMatrix),this._multiviewSceneUbo&&this._multiviewSceneUbo.useUbo?this._updateMultiviewUbo(s,N):this._sceneUbo.useUbo&&(this._sceneUbo.Yi("viewProjection",this._transformMatrix),this._sceneUbo.Yi("view",this._viewMatrix),this._sceneUbo.Yi("projection",this._projectionMatrix)))}getSceneUniformBuffer(){return this._multiviewSceneUbo?this._multiviewSceneUbo:this._sceneUbo}createSceneUniformBuffer(A){const X=new v.b(this._engine,void 0,!1,A??"eg");return X.addUniform("viewProjection",16),X.addUniform("view",16),X.addUniform("projection",16),X.addUniform("vEyePosition",4),X}setSceneUniformBuffer(A){this._sceneUbo=A,this._viewUpdateFlag=-1,this._projectionUpdateFlag=-1}getUniqueId(){return q.c.UniqueId}Xi(A){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._blockEntityCollection&&(this.meshes.push(A),A._resyncLightSources(),A.parent||A._addToSceneRootNodes(),N.d.SetImmediate((()=>{this.onNewMeshAddedObservable.notifyObservers(A)})),X)){const X=A.getChildMeshes();for(const A of X)this.Xi(A)}}Zi(A){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const s=this.meshes.indexOf(A);if(-1!==s&&(this.meshes.splice(s,1),A.parent||A._removeFromSceneRootNodes()),this._inputManager._invalidateMesh(A),this.onMeshRemovedObservable.notifyObservers(A),X){const X=A.getChildMeshes();for(const A of X)this.Zi(A)}return s}addTransformNode(A){this._blockEntityCollection||A.va()===this&&-1!==A._indexInSceneTransformNodesArray||(A._indexInSceneTransformNodesArray=this.transformNodes.length,this.transformNodes.push(A),A.parent||A._addToSceneRootNodes(),this.onNewTransformNodeAddedObservable.notifyObservers(A))}removeTransformNode(A){const X=A._indexInSceneTransformNodesArray;if(-1!==X){if(X!==this.transformNodes.length-1){const A=this.transformNodes[this.transformNodes.length-1];this.transformNodes[X]=A,A._indexInSceneTransformNodesArray=X}A._indexInSceneTransformNodesArray=-1,this.transformNodes.pop(),A.parent||A._removeFromSceneRootNodes()}return this.onTransformNodeRemovedObservable.notifyObservers(A),X}removeSkeleton(A){const X=this.skeletons.indexOf(A);return-1!==X&&(this.skeletons.splice(X,1),this.onSkeletonRemovedObservable.notifyObservers(A),this._executeActiveContainerCleanup(this._activeSkeletons)),X}removeMorphTargetManager(A){const X=this.morphTargetManagers.indexOf(A);return-1!==X&&this.morphTargetManagers.splice(X,1),X}removeLight(A){const X=this.lights.indexOf(A);if(-1!==X){for(const X of this.meshes)X._removeLightSource(A,!1);this.lights.splice(X,1),this.sortLightsByPriority(),A.parent||A._removeFromSceneRootNodes()}return this.onLightRemovedObservable.notifyObservers(A),X}removeCamera(A){const X=this.cameras.indexOf(A);if(-1!==X&&(this.cameras.splice(X,1),A.parent||A._removeFromSceneRootNodes()),this.activeCameras){const X=this.activeCameras.indexOf(A);-1!==X&&this.activeCameras.splice(X,1)}return this.activeCamera===A&&(this.cameras.length>0?this.activeCamera=this.cameras[0]:this.activeCamera=null),this.onCameraRemovedObservable.notifyObservers(A),X}removeParticleSystem(A){const X=this.ri.indexOf(A);return-1!==X&&(this.ri.splice(X,1),this._executeActiveContainerCleanup(this._activeParticleSystems)),X}removeAnimation(A){const X=this.animations.indexOf(A);return-1!==X&&this.animations.splice(X,1),X}stopAnimation(A,X,s){}removeAnimationGroup(A){const X=this.animationGroups.indexOf(A);return-1!==X&&this.animationGroups.splice(X,1),X}removeMultiMaterial(A){const X=this.multiMaterials.indexOf(A);return-1!==X&&this.multiMaterials.splice(X,1),this.onMultiMaterialRemovedObservable.notifyObservers(A),X}removeMaterial(A){const X=A._indexInSceneMaterialArray;if(-1!==X&&X<this.materials.length){if(X!==this.materials.length-1){const A=this.materials[this.materials.length-1];this.materials[X]=A,A._indexInSceneMaterialArray=X}A._indexInSceneMaterialArray=-1,this.materials.pop()}return this.onMaterialRemovedObservable.notifyObservers(A),X}removeActionManager(A){const X=this.actionManagers.indexOf(A);return-1!==X&&this.actionManagers.splice(X,1),X}removeTexture(A){const X=this.textures.indexOf(A);return-1!==X&&this.textures.splice(X,1),this.onTextureRemovedObservable.notifyObservers(A),X}addLight(A){if(!this._blockEntityCollection){this.lights.push(A),this.sortLightsByPriority(),A.parent||A._addToSceneRootNodes();for(const X of this.meshes)-1===X.lightSources.indexOf(A)&&(X.lightSources.push(A),X._resyncLightSources());N.d.SetImmediate((()=>{this.onNewLightAddedObservable.notifyObservers(A)}))}}sortLightsByPriority(){this.requireLightSorting&&this.lights.sort(p.b.CompareLightsPriority)}addCamera(A){this._blockEntityCollection||(this.cameras.push(A),N.d.SetImmediate((()=>{this.onNewCameraAddedObservable.notifyObservers(A)})),A.parent||A._addToSceneRootNodes())}addSkeleton(A){this._blockEntityCollection||(this.skeletons.push(A),N.d.SetImmediate((()=>{this.onNewSkeletonAddedObservable.notifyObservers(A)})))}addParticleSystem(A){this._blockEntityCollection||this.ri.push(A)}addAnimation(A){this._blockEntityCollection||this.animations.push(A)}addAnimationGroup(A){this._blockEntityCollection||this.animationGroups.push(A)}addMultiMaterial(A){this._blockEntityCollection||(this.multiMaterials.push(A),N.d.SetImmediate((()=>{this.onNewMultiMaterialAddedObservable.notifyObservers(A)})))}addMaterial(A){this._blockEntityCollection||A.va()===this&&-1!==A._indexInSceneMaterialArray||(A._indexInSceneMaterialArray=this.materials.length,this.materials.push(A),N.d.SetImmediate((()=>{this.onNewMaterialAddedObservable.notifyObservers(A)})))}addMorphTargetManager(A){this._blockEntityCollection||this.morphTargetManagers.push(A)}addGeometry(A){this._blockEntityCollection||(this._geometriesByUniqueId&&(this._geometriesByUniqueId[A.uniqueId]=this.geometries.length),this.geometries.push(A))}addActionManager(A){this.actionManagers.push(A)}addTexture(A){this._blockEntityCollection||(this.textures.push(A),this.onNewTextureAddedObservable.notifyObservers(A))}switchActiveCamera(A){let X=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._engine.getInputElement()&&(this.activeCamera&&this.activeCamera.Ni(),this.activeCamera=A,X&&A.attachControl())}setActiveCameraById(A){const X=this.getCameraById(A);return X?(this.activeCamera=X,X):null}setActiveCameraByName(A){const X=this.getCameraByName(A);return X?(this.activeCamera=X,X):null}getAnimationGroupByName(A){for(let X=0;X<this.animationGroups.length;X++)if(this.animationGroups[X].name===A)return this.animationGroups[X];return null}_getMaterial(A,X){for(let s=0;s<this.materials.length;s++){const A=this.materials[s];if(X(A))return A}if(A)for(let s=0;s<this.multiMaterials.length;s++){const A=this.multiMaterials[s];if(X(A))return A}return null}getMaterialByUniqueID(A){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.getMaterialByUniqueId(A,X)}getMaterialByUniqueId(A){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(X,(X=>X.uniqueId===A))}getMaterialById(A){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(X,(X=>X.id===A))}getMaterialByName(A){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(X,(X=>X.name===A))}getLastMaterialById(A){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];for(let s=this.materials.length-1;s>=0;s--)if(this.materials[s].id===A)return this.materials[s];if(X)for(let s=this.multiMaterials.length-1;s>=0;s--)if(this.multiMaterials[s].id===A)return this.multiMaterials[s];return null}getTextureByUniqueId(A){for(let X=0;X<this.textures.length;X++)if(this.textures[X].uniqueId===A)return this.textures[X];return null}getTextureByName(A){for(let X=0;X<this.textures.length;X++)if(this.textures[X].name===A)return this.textures[X];return null}getCameraById(A){for(let X=0;X<this.cameras.length;X++)if(this.cameras[X].id===A)return this.cameras[X];return null}getCameraByUniqueId(A){for(let X=0;X<this.cameras.length;X++)if(this.cameras[X].uniqueId===A)return this.cameras[X];return null}getCameraByName(A){for(let X=0;X<this.cameras.length;X++)if(this.cameras[X].name===A)return this.cameras[X];return null}getBoneById(A){for(let X=0;X<this.skeletons.length;X++){const s=this.skeletons[X];for(let X=0;X<s.bones.length;X++)if(s.bones[X].id===A)return s.bones[X]}return null}getBoneByName(A){for(let X=0;X<this.skeletons.length;X++){const s=this.skeletons[X];for(let X=0;X<s.bones.length;X++)if(s.bones[X].name===A)return s.bones[X]}return null}getLightByName(A){for(let X=0;X<this.lights.length;X++)if(this.lights[X].name===A)return this.lights[X];return null}getLightById(A){for(let X=0;X<this.lights.length;X++)if(this.lights[X].id===A)return this.lights[X];return null}getLightByUniqueId(A){for(let X=0;X<this.lights.length;X++)if(this.lights[X].uniqueId===A)return this.lights[X];return null}getParticleSystemById(A){for(let X=0;X<this.ri.length;X++)if(this.ri[X].id===A)return this.ri[X];return null}getGeometryById(A){for(let X=0;X<this.geometries.length;X++)if(this.geometries[X].id===A)return this.geometries[X];return null}_getGeometryByUniqueId(A){if(this._geometriesByUniqueId){const X=this._geometriesByUniqueId[A];if(void 0!==X)return this.geometries[X]}else for(let X=0;X<this.geometries.length;X++)if(this.geometries[X].uniqueId===A)return this.geometries[X];return null}getFrameGraphByName(A){for(let X=0;X<this.frameGraphs.length;X++)if(this.frameGraphs[X].name===A)return this.frameGraphs[X];return null}pushGeometry(A,X){return!(!X&&this._getGeometryByUniqueId(A.uniqueId))&&(this.addGeometry(A),N.d.SetImmediate((()=>{this.onNewGeometryAddedObservable.notifyObservers(A)})),!0)}removeGeometry(A){let X;if(this._geometriesByUniqueId){if(X=this._geometriesByUniqueId[A.uniqueId],void 0===X)return!1}else if(X=this.geometries.indexOf(A),X<0)return!1;if(X!==this.geometries.length-1){const A=this.geometries[this.geometries.length-1];A&&(this.geometries[X]=A,this._geometriesByUniqueId&&(this._geometriesByUniqueId[A.uniqueId]=X))}return this._geometriesByUniqueId&&(this._geometriesByUniqueId[A.uniqueId]=void 0),this.geometries.pop(),this.onGeometryRemovedObservable.notifyObservers(A),!0}getGeometries(){return this.geometries}getMeshById(A){for(let X=0;X<this.meshes.length;X++)if(this.meshes[X].id===A)return this.meshes[X];return null}getMeshesById(A){return this.meshes.filter((function(X){return X.id===A}))}getTransformNodeById(A){for(let X=0;X<this.transformNodes.length;X++)if(this.transformNodes[X].id===A)return this.transformNodes[X];return null}getTransformNodeByUniqueId(A){for(let X=0;X<this.transformNodes.length;X++)if(this.transformNodes[X].uniqueId===A)return this.transformNodes[X];return null}getTransformNodesById(A){return this.transformNodes.filter((function(X){return X.id===A}))}getMeshByUniqueId(A){for(let X=0;X<this.meshes.length;X++)if(this.meshes[X].uniqueId===A)return this.meshes[X];return null}getLastMeshById(A){for(let X=this.meshes.length-1;X>=0;X--)if(this.meshes[X].id===A)return this.meshes[X];return null}getLastTransformNodeById(A){for(let X=this.transformNodes.length-1;X>=0;X--)if(this.transformNodes[X].id===A)return this.transformNodes[X];return null}getLastEntryById(A){let X;for(X=this.meshes.length-1;X>=0;X--)if(this.meshes[X].id===A)return this.meshes[X];for(X=this.transformNodes.length-1;X>=0;X--)if(this.transformNodes[X].id===A)return this.transformNodes[X];for(X=this.cameras.length-1;X>=0;X--)if(this.cameras[X].id===A)return this.cameras[X];for(X=this.lights.length-1;X>=0;X--)if(this.lights[X].id===A)return this.lights[X];return null}getNodeById(A){const X=this.getMeshById(A);if(X)return X;const s=this.getTransformNodeById(A);if(s)return s;const N=this.getLightById(A);if(N)return N;const f=this.getCameraById(A);if(f)return f;const E=this.getBoneById(A);return E||null}getNodeByName(A){const X=this.getMeshByName(A);if(X)return X;const s=this.getTransformNodeByName(A);if(s)return s;const N=this.getLightByName(A);if(N)return N;const f=this.getCameraByName(A);if(f)return f;const E=this.getBoneByName(A);return E||null}getMeshByName(A){for(let X=0;X<this.meshes.length;X++)if(this.meshes[X].name===A)return this.meshes[X];return null}getTransformNodeByName(A){for(let X=0;X<this.transformNodes.length;X++)if(this.transformNodes[X].name===A)return this.transformNodes[X];return null}getLastSkeletonById(A){for(let X=this.skeletons.length-1;X>=0;X--)if(this.skeletons[X].id===A)return this.skeletons[X];return null}getSkeletonByUniqueId(A){for(let X=0;X<this.skeletons.length;X++)if(this.skeletons[X].uniqueId===A)return this.skeletons[X];return null}getSkeletonById(A){for(let X=0;X<this.skeletons.length;X++)if(this.skeletons[X].id===A)return this.skeletons[X];return null}getSkeletonByName(A){for(let X=0;X<this.skeletons.length;X++)if(this.skeletons[X].name===A)return this.skeletons[X];return null}getMorphTargetManagerById(A){for(let X=0;X<this.morphTargetManagers.length;X++)if(this.morphTargetManagers[X].uniqueId===A)return this.morphTargetManagers[X];return null}getMorphTargetById(A){for(let X=0;X<this.morphTargetManagers.length;++X){const s=this.morphTargetManagers[X];for(let X=0;X<s.numTargets;++X){const N=s.getTarget(X);if(N.id===A)return N}}return null}getMorphTargetByName(A){for(let X=0;X<this.morphTargetManagers.length;++X){const s=this.morphTargetManagers[X];for(let X=0;X<s.numTargets;++X){const N=s.getTarget(X);if(N.name===A)return N}}return null}getPostProcessByName(A){for(let X=0;X<this.postProcesses.length;++X){const s=this.postProcesses[X];if(s.name===A)return s}return null}isActiveMesh(A){return-1!==this._activeMeshes.indexOf(A)}get uid(){return this._uid||(this._uid=N.d.RandomId()),this._uid}addExternalData(A,X){return this._externalData||(this._externalData=new K),this._externalData.add(A,X)}getExternalData(A){return this._externalData?this._externalData.get(A):null}getOrAddExternalDataWithFactory(A,X){return this._externalData||(this._externalData=new K),this._externalData.getOrAddWithFactory(A,X)}removeExternalData(A){return this._externalData.remove(A)}_evaluateSubMesh(A,X,s,N){if(N||A.isInFrustum(this._frustumPlanes)){for(const N of this._evaluateSubMeshStage)N.action(X,A);const s=A.Ha();null!==s&&void 0!==s&&(s.hasRenderTargetTextures&&null!=s.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(s)&&(this._processedMaterials.push(s),this._materialsRenderTargets.concatWithNoDuplicate(s.getRenderTargetTextures())),this._renderingManager.dispatch(A,X,s))}}freeProcessedMaterials(){this._processedMaterials.dispose()}get blockfreeActiveMeshesAndRenderingGroups(){return this._preventFreeActiveMeshesAndRenderingGroups}set blockfreeActiveMeshesAndRenderingGroups(A){this._preventFreeActiveMeshesAndRenderingGroups!==A&&(A&&(this.freeActiveMeshes(),this.freeRenderingGroups()),this._preventFreeActiveMeshesAndRenderingGroups=A)}freeActiveMeshes(){if(!this.blockfreeActiveMeshesAndRenderingGroups&&(this._activeMeshes.dispose(),this.activeCamera&&this.activeCamera._activeMeshes&&this.activeCamera._activeMeshes.dispose(),this.activeCameras))for(let A=0;A<this.activeCameras.length;A++){const X=this.activeCameras[A];X&&X._activeMeshes&&X._activeMeshes.dispose()}}freeRenderingGroups(){if(!this.blockfreeActiveMeshesAndRenderingGroups&&(this._renderingManager&&this._renderingManager.freeRenderingGroups(),this.textures))for(let A=0;A<this.textures.length;A++){const X=this.textures[A];X&&X.renderList&&X.freeRenderingGroups()}}_isInIntermediateRendering(){return this._intermediateRendering}freezeActiveMeshes(){let A=arguments.length>0&&void 0!==arguments[0]&&arguments[0],X=arguments.length>1?arguments[1]:void 0,s=arguments.length>2?arguments[2]:void 0,N=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],f=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return this.executeWhenReady((()=>{if(this.activeCamera){if(this._frustumPlanes||this.updateTransformMatrix(),this._evaluateActiveMeshes(),this._activeMeshesFrozen=!0,this._activeMeshesFrozenButKeepClipping=f,this._skipEvaluateActiveMeshesCompletely=A,N)for(let A=0;A<this._activeMeshes.length;A++)this._activeMeshes.data[A]._freeze();X&&X()}else s&&s("No active camera found")})),this}unfreezeActiveMeshes(){for(let A=0;A<this.meshes.length;A++){const X=this.meshes[A];X._internalAbstractMeshDataInfo&&(X._internalAbstractMeshDataInfo._isActive=!1)}for(let A=0;A<this._activeMeshes.length;A++)this._activeMeshes.data[A]._unFreeze();return this._activeMeshesFrozen=!1,this}_executeActiveContainerCleanup(A){(!this._engine.snapshotRendering||1!==this._engine.snapshotRenderingMode)&&this._activeMeshesFrozen&&this._activeMeshes.length||this.onBeforeRenderObservable.addOnce((()=>A.dispose()))}_evaluateActiveMeshes(){if(this._engine.snapshotRendering&&1===this._engine.snapshotRenderingMode){var A;if(this._activeMeshes.length>0)null===(A=this.activeCamera)||void 0===A||A._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset();return}if(this._activeMeshesFrozen&&this._activeMeshes.length){if(!this._skipEvaluateActiveMeshesCompletely){const A=this._activeMeshes.length;for(let X=0;X<A;X++){this._activeMeshes.data[X].si()}}if(this._activeParticleSystems){const A=this._activeParticleSystems.length;for(let X=0;X<A;X++)this._activeParticleSystems.data[X].animate()}return void this._renderingManager.resetSprites()}if(!this.activeCamera)return;this.onBeforeActiveMeshesEvaluationObservable.notifyObservers(this),this.activeCamera._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset(),this._materialsRenderTargets.reset();for(const N of this._beforeEvaluateActiveMeshStage)N.action();const X=this.getActiveMeshCandidates(),s=X.length;for(let N=0;N<s;N++){const A=X.data[N];let s=A._internalAbstractMeshDataInfo._currentLOD.get(this.activeCamera);if(s?s[1]=-1:(s=[A,-1],A._internalAbstractMeshDataInfo._currentLOD.set(this.activeCamera,s)),A.isBlocked)continue;if(this._totalVertices.addCount(A.getTotalVertices(),!1),!A.isReady()||!A.isEnabled()||A.hi.hasAZeroComponent)continue;A.si(),A.actionManager&&A.actionManager.hasSpecificTriggers2(12,13)&&this._meshesForIntersections.pushNoDuplicate(A);let f=this.customLODSelector?this.customLODSelector(A,this.activeCamera):A.getLOD(this.activeCamera);if(s[0]=f,s[1]=this._frameId,void 0!==f&&null!==f&&(f!==A&&0!==f.billboardMode&&f.si(),A._preActivate(),A.isVisible&&A.visibility>0&&0!==(A.layerMask&this.activeCamera.layerMask)&&(this._skipFrustumClipping||A._h||A.isInFrustum(this._frustumPlanes)))){this._activeMeshes.push(A),this.activeCamera._activeMeshes.push(A),f!==A&&f._activate(this._renderId,!1);for(const X of this._preActiveMeshStage)X.action(A);A._activate(this._renderId,!1)&&(A.isAnInstance?A._internalAbstractMeshDataInfo._actAsRegularMesh&&(f=A):f._internalAbstractMeshDataInfo._onlyForInstances=!1,f._internalAbstractMeshDataInfo._isActive=!0,this._activeMesh(A,f)),A._postActivate()}}if(this.onAfterActiveMeshesEvaluationObservable.notifyObservers(this),this.particlesEnabled){this.onBeforeParticlesRenderingObservable.notifyObservers(this);for(let A=0;A<this.ri.length;A++){const X=this.ri[A];if(!X.isStarted()||!X.j)continue;const s=X.j;s.position&&!s.isEnabled()||(this._activeParticleSystems.push(X),X.animate(),this._renderingManager.dispatchParticles(X))}this.onAfterParticlesRenderingObservable.notifyObservers(this)}}_prepareSkeleton(A){this._skeletonsEnabled&&A.skeleton&&(this._activeSkeletons.pushNoDuplicate(A.skeleton)&&(A.skeleton.prepare(),this._activeBones.addCount(A.skeleton.bones.length,!1)),A.computeBonesUsingShaders||this._softwareSkinnedMeshes.pushNoDuplicate(A)&&this.frameGraph&&A.applySkeleton(A.skeleton))}_activeMesh(A,X){this._prepareSkeleton(X);let s=A.hasInstances||A.isAnInstance||this.dispatchAllSubMeshesOfActiveMeshes||this._skipFrustumClipping||X._h;if(X&&X.wi&&X.wi.length>0){const N=this.getActiveSubMeshCandidates(X),f=N.length;s=s||1===f;for(let E=0;E<f;E++){const f=N.data[E];this._evaluateSubMesh(f,X,A,s)}}}updateTransformMatrix(A){const X=this.activeCamera;if(X)if(X._renderingMultiview){const s=X._rigCameras[0],N=X._rigCameras[1];this.setTransformMatrix(s.getViewMatrix(),s.getProjectionMatrix(A),N.getViewMatrix(),N.getProjectionMatrix(A))}else this.setTransformMatrix(X.getViewMatrix(),X.getProjectionMatrix(A))}_bindFrameBuffer(A){let X=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._useCurrentFrameBuffer||(A&&A._multiviewTexture?A._multiviewTexture._bindFrameBuffer():A&&A.outputRenderTarget?A.outputRenderTarget._bindFrameBuffer():this._engine._currentFrameBufferIsDefaultFrameBuffer()||this._engine.restoreDefaultFramebuffer()),X&&this._clearFrameBuffer(A)}_clearFrameBuffer(A){if(A&&A._multiviewTexture);else if(A&&A.outputRenderTarget&&!A._renderingMultiview){const X=A.outputRenderTarget;X.onClearObservable.hasObservers()?X.onClearObservable.notifyObservers(this._engine):X.skipInitialClear||A.isRightCamera||(this.Cl&&this._engine.clear(X.clearColor||this._clearColor,!X._cleared,!0,!0),X._cleared=!0)}else this._defaultFrameBufferCleared?this._engine.clear(null,!1,!0,!0):(this._defaultFrameBufferCleared=!0,this._clear())}_renderForCamera(A,X){var s;let f=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(A&&A._skipRendering)return;const E=this._engine;if(this._activeCamera=A,!this.activeCamera)throw new Error("Active camera not set");if(E.setViewport(this.activeCamera.viewport),this.resetCachedMaterial(),this._renderId++,!this.prePass&&f){let X=!0;A._renderingMultiview&&A.outputRenderTarget&&(X=A.outputRenderTarget.skipInitialClear,this.Cl&&(this._defaultFrameBufferCleared=!1,A.outputRenderTarget.skipInitialClear=!1)),this._bindFrameBuffer(this._activeCamera),A._renderingMultiview&&A.outputRenderTarget&&(A.outputRenderTarget.skipInitialClear=X)}this.updateTransformMatrix(),this.onBeforeCameraRenderObservable.notifyObservers(this.activeCamera),this._evaluateActiveMeshes();for(let N=0;N<this._softwareSkinnedMeshes.length;N++){const A=this._softwareSkinnedMeshes.data[N];A.applySkeleton(A.skeleton)}this.onBeforeRenderTargetsRenderObservable.notifyObservers(this),this._renderTargets.concatWithNoDuplicate(this._materialsRenderTargets),A.customRenderTargets&&A.customRenderTargets.length>0&&this._renderTargets.concatWithNoDuplicate(A.customRenderTargets),X&&X.customRenderTargets&&X.customRenderTargets.length>0&&this._renderTargets.concatWithNoDuplicate(X.customRenderTargets),this.environmentTexture&&this.environmentTexture.isRenderTarget&&this._renderTargets.pushNoDuplicate(this.environmentTexture);for(const N of this._gatherActiveCameraRenderTargetsStage)N.action(this._renderTargets);let g=!1;if(this.renderTargetsEnabled){if(this._intermediateRendering=!0,this._renderTargets.length>0){N.d.StartPerformanceCounter("Render targets",this._renderTargets.length>0);for(let A=0;A<this._renderTargets.length;A++){const X=this._renderTargets.data[A];if(X._shouldRender()){this._renderId++;const A=X.activeCamera&&X.activeCamera!==this.activeCamera;X.render(A,this.dumpNextRenderTargets),g=!0}}N.d.EndPerformanceCounter("Render targets",this._renderTargets.length>0),this._renderId++}for(const A of this._cameraDrawRenderTargetStage)g=A.action(this.activeCamera)||g;this._intermediateRendering=!1}this._engine.currentRenderPassId=(null===(s=A.outputRenderTarget)||void 0===s?void 0:s.renderPassId)??A.renderPassId??0,g&&!this.prePass&&(this._bindFrameBuffer(this._activeCamera,!1),this.updateTransformMatrix()),this.onAfterRenderTargetsRenderObservable.notifyObservers(this),!this.postProcessManager||A._multiviewTexture||this.prePass||this.postProcessManager._prepareFrame();for(const N of this._beforeCameraDrawStage)N.action(this.activeCamera);this.onBeforeDrawPhaseObservable.notifyObservers(this),E.snapshotRendering&&1===E.snapshotRenderingMode&&this.finalizeSceneUbo(),this._renderingManager.render(null,null,!0,!0),this.onAfterDrawPhaseObservable.notifyObservers(this);for(const N of this._afterCameraDrawStage)N.action(this.activeCamera);if(this.postProcessManager&&!A._multiviewTexture){const X=A.outputRenderTarget?A.outputRenderTarget.renderTarget:void 0;this.postProcessManager._finalizeFrame(A.isIntermediate,X)}for(const N of this._afterCameraPostProcessStage)N.action(this.activeCamera);this._renderTargets.reset(),this.onAfterCameraRenderObservable.notifyObservers(this.activeCamera)}_processSubCameras(A){let X=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(0===A.cameraRigMode||A._renderingMultiview)return A._renderingMultiview&&!this._multiviewSceneUbo&&this._createMultiviewUbo(),this._renderForCamera(A,void 0,X),void this.onAfterRenderCameraObservable.notifyObservers(A);if(A._useMultiviewToSingleView)this._renderMultiviewToSingleView(A);else{this.onBeforeCameraRenderObservable.notifyObservers(A);for(let X=0;X<A._rigCameras.length;X++)this._renderForCamera(A._rigCameras[X],A)}this._activeCamera=A,this.updateTransformMatrix(),this.onAfterRenderCameraObservable.notifyObservers(A)}_checkIntersections(){for(let A=0;A<this._meshesForIntersections.length;A++){const X=this._meshesForIntersections.data[A];if(X.actionManager)for(let A=0;X.actionManager&&A<X.actionManager.actions.length;A++){const s=X.actionManager.actions[A];if(12===s.trigger||13===s.trigger){const A=s.getTriggerParameter(),N=A.mesh?A.mesh:A,f=N.intersectsMesh(X,A.usePreciseIntersection),E=X._intersectionsInProgress.indexOf(N);f&&-1===E?12===s.trigger?(s._executeCurrent(M.CreateNew(X,void 0,N)),X._intersectionsInProgress.push(N)):13===s.trigger&&X._intersectionsInProgress.push(N):!f&&E>-1&&(13===s.trigger&&s._executeCurrent(M.CreateNew(X,void 0,N)),X.actionManager.hasSpecificTrigger(13,(A=>{const X=A.mesh?A.mesh:A;return N===X}))&&13!==s.trigger||X._intersectionsInProgress.splice(E,1))}}}}_advancePhysicsEngineStep(A){}_animate(A){}animate(){if(this._engine.isDeterministicLockStep()){let A=Math.max(AA.MinDeltaTime,Math.min(this._engine.getDeltaTime(),AA.MaxDeltaTime))+this._timeAccumulator;const X=this._engine.getTimeStep(),s=1e3/X/1e3;let N=0;const f=this._engine.getLockstepMaxSteps();let E=Math.floor(A/X);for(E=Math.min(E,f);A>0&&N<E;)this.onBeforeStepObservable.notifyObservers(this),this._animationRatio=X*s,this._animate(X),this.onAfterAnimationsObservable.notifyObservers(this),this.physicsEnabled&&this._advancePhysicsEngineStep(X),this.onAfterStepObservable.notifyObservers(this),this._currentStepId++,N++,A-=X;this._timeAccumulator=A<0?0:A}else{const A=this.useConstantAnimationDeltaTime?16:Math.max(AA.MinDeltaTime,Math.min(this._engine.getDeltaTime(),AA.MaxDeltaTime));this._animationRatio=.06*A,this._animate(),this.onAfterAnimationsObservable.notifyObservers(this),this.physicsEnabled&&this._advancePhysicsEngineStep(A)}}_clear(){(this.autoClearDepthAndStencil||this.Cl)&&this._engine.clear(this._clearColor,this.Cl||this.forceWireframe||this.forcePointsCloud,this.autoClearDepthAndStencil,this.autoClearDepthAndStencil)}_checkCameraRenderTarget(A){var X;if(null===A||void 0===A||!A.outputRenderTarget||null!==A&&void 0!==A&&A.isRigCamera||(A.outputRenderTarget._cleared=!1),null!==A&&void 0!==A&&null!==(X=A.rigCameras)&&void 0!==X&&X.length)for(let s=0;s<A.rigCameras.length;++s){const X=A.rigCameras[s].outputRenderTarget;X&&(X._cleared=!1)}}resetDrawCache(A){if(this.meshes)for(const X of this.meshes)X.resetDrawCache(A)}_renderWithFrameGraph(){var A;let X=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this.activeCamera=null,this._activeParticleSystems.reset(),this._activeSkeletons.reset(),X)for(const f of this.cameras)if(f.update(),0!==f.cameraRigMode)for(let A=0;A<f._rigCameras.length;A++)f._rigCameras[A].update();this.onBeforeRenderObservable.notifyObservers(this);for(const f of this._beforeClearStage)f.action();const s=this.getActiveMeshCandidates(),N=s.length;for(let f=0;f<N;f++){const A=s.data[f];A.isBlocked||(this._totalVertices.addCount(A.getTotalVertices(),!1),A.isReady()&&A.isEnabled()&&!A.hi.hasAZeroComponent&&(A.si(),A.actionManager&&A.actionManager.hasSpecificTriggers2(12,13)&&this._meshesForIntersections.pushNoDuplicate(A)))}if(this.particlesEnabled)for(let f=0;f<this.ri.length;f++){const A=this.ri[f];if(!A.isStarted()||!A.j)continue;const X=A.j;X.position&&!X.isEnabled()||(this._activeParticleSystems.push(A),A.animate())}null===(A=this.frameGraph)||void 0===A||A.execute()}_renderRenderTarget(A,X){let s=arguments.length>2&&void 0!==arguments[2]&&arguments[2],N=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(this._intermediateRendering=!0,A._shouldRender()){if(this._renderId++,this.activeCamera=X,!this.activeCamera)throw new Error("Active camera not set");this._engine.setViewport(this.activeCamera.viewport),this.updateTransformMatrix(),A.render(s,N)}this._intermediateRendering=!1}render(){var A;let X=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],s=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this.u){if(this.onReadyObservable.hasObservers()&&null===this._executeWhenReadyTimeoutId&&this._checkIsReady(),this._frameId++,this._defaultFrameBufferCleared=!1,this._checkCameraRenderTarget(this.activeCamera),null!==(A=this.activeCameras)&&void 0!==A&&A.length)for(const A of this.activeCameras)this._checkCameraRenderTarget(A);this._registerTransientComponents(),this._activeParticles.fetchNewFrame(),this._totalVertices.fetchNewFrame(),this._activeIndices.fetchNewFrame(),this._activeBones.fetchNewFrame(),this._meshesForIntersections.reset(),this.resetCachedMaterial(),this.onBeforeAnimationsObservable.notifyObservers(this),this.actionManager&&this.actionManager.processTrigger(11),s||this.animate();for(const A of this._beforeCameraUpdateStage)A.action();if(X)if(this.activeCameras&&this.activeCameras.length>0)for(let A=0;A<this.activeCameras.length;A++){const X=this.activeCameras[A];if(X.update(),0!==X.cameraRigMode)for(let A=0;A<X._rigCameras.length;A++)X._rigCameras[A].update()}else if(this.activeCamera&&(this.activeCamera.update(),0!==this.activeCamera.cameraRigMode))for(let A=0;A<this.activeCamera._rigCameras.length;A++)this.activeCamera._rigCameras[A].update();if(this.customRenderFunction)this._renderId++,this._engine.currentRenderPassId=0,this.customRenderFunction(X,s);else{var f;this.onBeforeRenderObservable.notifyObservers(this),this.onBeforeRenderTargetsRenderObservable.notifyObservers(this);const A=null!==(f=this.activeCameras)&&void 0!==f&&f.length?this.activeCameras[0]:this.activeCamera;if(this.renderTargetsEnabled){N.d.StartPerformanceCounter("Custom render targets",this.customRenderTargets.length>0);for(let X=0;X<this.customRenderTargets.length;X++){const s=this.customRenderTargets[X],N=s.activeCamera||this.activeCamera;this._renderRenderTarget(s,N,A!==N,this.dumpNextRenderTargets)}N.d.EndPerformanceCounter("Custom render targets",this.customRenderTargets.length>0),this._renderId++}this._engine.currentRenderPassId=(null===A||void 0===A?void 0:A.renderPassId)??0,this.activeCamera=A,this._activeCamera&&22!==this._activeCamera.cameraRigMode&&!this.prePass&&this._bindFrameBuffer(this._activeCamera,!1),this.onAfterRenderTargetsRenderObservable.notifyObservers(this);for(const X of this._beforeClearStage)X.action();this._clearFrameBuffer(this.activeCamera);for(const X of this._gatherRenderTargetsStage)X.action(this._renderTargets);if(this.activeCameras&&this.activeCameras.length>0)for(let X=0;X<this.activeCameras.length;X++)this._processSubCameras(this.activeCameras[X],X>0);else{if(!this.activeCamera)throw new Error("No camera defined");this._processSubCameras(this.activeCamera,!!this.activeCamera.outputRenderTarget)}}this._checkIntersections();for(const A of this._afterRenderStage)A.action();if(this.afterRender&&this.afterRender(),this.onAfterRenderObservable.notifyObservers(this),this._toBeDisposed.length){for(let A=0;A<this._toBeDisposed.length;A++){const X=this._toBeDisposed[A];X&&X.dispose()}this._toBeDisposed.length=0}this.dumpNextRenderTargets&&(this.dumpNextRenderTargets=!1),this._activeBones.addCount(0,!0),this._activeIndices.addCount(0,!0),this._activeParticles.addCount(0,!0),this._engine.restoreDefaultFramebuffer()}}freezeMaterials(){for(let A=0;A<this.materials.length;A++)this.materials[A].freeze()}unfreezeMaterials(){for(let A=0;A<this.materials.length;A++)this.materials[A].unfreeze()}dispose(){if(this.u)return;if(this.beforeRender=null,this.afterRender=null,this.metadata=null,this.skeletons.length=0,this.morphTargetManagers.length=0,this._transientComponents.length=0,this._isReadyForMeshStage.clear(),this._beforeEvaluateActiveMeshStage.clear(),this._evaluateSubMeshStage.clear(),this._preActiveMeshStage.clear(),this._cameraDrawRenderTargetStage.clear(),this._beforeCameraDrawStage.clear(),this._beforeRenderTargetDrawStage.clear(),this._beforeRenderingGroupDrawStage.clear(),this._beforeRenderingMeshStage.clear(),this._afterRenderingMeshStage.clear(),this._afterRenderingGroupDrawStage.clear(),this._afterCameraDrawStage.clear(),this._afterRenderTargetDrawStage.clear(),this._afterRenderStage.clear(),this._beforeCameraUpdateStage.clear(),this._beforeClearStage.clear(),this._gatherRenderTargetsStage.clear(),this._gatherActiveCameraRenderTargetsStage.clear(),this._pointerMoveStage.clear(),this._pointerDownStage.clear(),this._pointerUpStage.clear(),this.importedMeshesFiles=[],this._activeAnimatables&&this.stopAllAnimations){for(const A of this._activeAnimatables)A.onAnimationEndObservable.clear(),A.onAnimationEnd=null;this.stopAllAnimations()}this.resetCachedMaterial(),this.activeCamera&&(this.activeCamera._activeMeshes.dispose(),this.activeCamera=null),this.activeCameras=null,this._activeMeshes.dispose(),this._renderingManager.dispose(),this._processedMaterials.dispose(),this._activeParticleSystems.dispose(),this._activeSkeletons.dispose(),this._softwareSkinnedMeshes.dispose(),this._renderTargets.dispose(),this._materialsRenderTargets.dispose(),this._registeredForLateAnimationBindings.dispose(),this._meshesForIntersections.dispose(),this._toBeDisposed.length=0;const A=this._activeRequests.slice();for(const f of A)f.abort();this._activeRequests.length=0;try{this.Ji.notifyObservers(this)}catch(N){W.b.Error("An error occurred while calling onDisposeObservable!",N)}this.Ni();if(this._engine.getInputElement())for(let f=0;f<this.cameras.length;f++)this.cameras[f].Ni();this._disposeList(this.animationGroups),this._disposeList(this.lights),this.ml&&this.ml.dispose(),this._disposeList(this.multiMaterials),this._disposeList(this.materials),this._disposeList(this.meshes,(A=>A.dispose(!0))),this._disposeList(this.transformNodes,(A=>A.dispose(!0)));const X=this.cameras;this._disposeList(X),this._disposeList(this.ri),this._disposeList(this.postProcesses),this._disposeList(this.textures),this._disposeList(this.morphTargetManagers),this._sceneUbo.dispose(),this._multiviewSceneUbo&&this._multiviewSceneUbo.dispose(),this.postProcessManager.dispose(),this._disposeList(this._components);let s=this._engine.scenes.indexOf(this);if(s>-1&&this._engine.scenes.splice(s,1),C.b._LastCreatedScene===this){C.b._LastCreatedScene=null;let A=C.b.Instances.length-1;for(;A>=0;){const X=C.b.Instances[A];if(X.scenes.length>0){C.b._LastCreatedScene=X.scenes[this._engine.scenes.length-1];break}A--}}s=this._engine._virtualScenes.indexOf(this),s>-1&&this._engine._virtualScenes.splice(s,1),this._engine.wipeCaches(!0),this.Ji.clear(),this.onBeforeRenderObservable.clear(),this.onAfterRenderObservable.clear(),this.onBeforeRenderTargetsRenderObservable.clear(),this.onAfterRenderTargetsRenderObservable.clear(),this.onAfterStepObservable.clear(),this.onBeforeStepObservable.clear(),this.onBeforeActiveMeshesEvaluationObservable.clear(),this.onAfterActiveMeshesEvaluationObservable.clear(),this.onBeforeParticlesRenderingObservable.clear(),this.onAfterParticlesRenderingObservable.clear(),this.onBeforeDrawPhaseObservable.clear(),this.onAfterDrawPhaseObservable.clear(),this.onBeforeAnimationsObservable.clear(),this.onAfterAnimationsObservable.clear(),this.onDataLoadedObservable.clear(),this.onBeforeRenderingGroupObservable.clear(),this.onAfterRenderingGroupObservable.clear(),this.onMeshImportedObservable.clear(),this.onBeforeCameraRenderObservable.clear(),this.onAfterCameraRenderObservable.clear(),this.onAfterRenderCameraObservable.clear(),this.onReadyObservable.clear(),this.onNewCameraAddedObservable.clear(),this.onCameraRemovedObservable.clear(),this.onNewLightAddedObservable.clear(),this.onLightRemovedObservable.clear(),this.onNewGeometryAddedObservable.clear(),this.onGeometryRemovedObservable.clear(),this.onNewTransformNodeAddedObservable.clear(),this.onTransformNodeRemovedObservable.clear(),this.onNewMeshAddedObservable.clear(),this.onMeshRemovedObservable.clear(),this.onNewSkeletonAddedObservable.clear(),this.onSkeletonRemovedObservable.clear(),this.onNewMaterialAddedObservable.clear(),this.onNewMultiMaterialAddedObservable.clear(),this.onMaterialRemovedObservable.clear(),this.onMultiMaterialRemovedObservable.clear(),this.onNewTextureAddedObservable.clear(),this.onTextureRemovedObservable.clear(),this.onPrePointerObservable.clear(),this.onPointerObservable.clear(),this.onPreKeyboardObservable.clear(),this.onKeyboardObservable.clear(),this.onActiveCameraChanged.clear(),this.onScenePerformancePriorityChangedObservable.clear(),this.onClearColorChangedObservable.clear(),this.onEnvironmentTextureChangedObservable.clear(),this.onMeshUnderPointerUpdatedObservable.clear(),this._isDisposed=!0}_disposeList(A,X){const s=A.slice(0);X=X??(A=>A.dispose());for(const N of s)X(N);A.length=0}get u(){return this._isDisposed}clearCachedVertexData(){for(let A=0;A<this.meshes.length;A++){const X=this.meshes[A].pi;X&&X.clearCachedData()}}cleanCachedTextureBuffer(){for(const A of this.textures){A._buffer&&(A._buffer=null)}}getWorldExtends(A){const X=new i.k(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),s=new i.k(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);A=A||(()=>!0);const N=this.meshes.filter(A);for(const f of N){if(f.si(!0),!f.wi||0===f.wi.length||f.infiniteDistance)continue;const A=f.getBoundingInfo(),N=A.boundingBox.minimumWorld,E=A.boundingBox.maximumWorld;i.k.CheckExtends(N,X,s),i.k.CheckExtends(E,X,s)}return{min:X,max:s}}createPickingRay(A,X,s,N){throw(0,J.e)("Ray")}createPickingRayToRef(A,X,s,N,f){throw(0,J.e)("Ray")}createPickingRayInCameraSpace(A,X,s){throw(0,J.e)("Ray")}createPickingRayInCameraSpaceToRef(A,X,s,N){throw(0,J.e)("Ray")}Lk(A,X,s,N,f,E){const g=(0,J.e)("Ray",!0);return g&&W.b.Warn(g),new c.c}pickWithBoundingInfo(A,X,s,N,f){const E=(0,J.e)("Ray",!0);return E&&W.b.Warn(E),new c.c}pickWithRay(A,X,s,N){throw(0,J.e)("Ray")}multiPick(A,X,s,N,f){throw(0,J.e)("Ray")}multiPickWithRay(A,X,s){throw(0,J.e)("Ray")}setPointerOverMesh(A,X,s){this._inputManager.setPointerOverMesh(A,X,s)}getPointerOverMesh(){return this._inputManager.getPointerOverMesh()}_rebuildGeometries(){for(const A of this.geometries)A._rebuild();for(const A of this.meshes)A._rebuild();this.postProcessManager&&this.postProcessManager._rebuild();for(const A of this._components)A.rebuild();for(const A of this.ri)A.rebuild();if(this.spriteManagers)for(const A of this.spriteManagers)A.rebuild()}_rebuildTextures(){for(const A of this.textures)A._rebuild(!0);this.markAllMaterialsAsDirty(1)}_getByTags(A,X,s){if(void 0===X)return A;const N=[];for(const f in A){const E=A[f];r.e&&r.e.MatchesQuery(E,X)&&(!s||s(E))&&N.push(E)}return N}getMeshesByTags(A,X){return this._getByTags(this.meshes,A,X)}getCamerasByTags(A,X){return this._getByTags(this.cameras,A,X)}getLightsByTags(A,X){return this._getByTags(this.lights,A,X)}getMaterialByTags(A,X){return this._getByTags(this.materials,A,X).concat(this._getByTags(this.multiMaterials,A,X))}getTransformNodesByTags(A,X){return this._getByTags(this.transformNodes,A,X)}setRenderingOrder(A){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this._renderingManager.setRenderingOrder(A,X,s,N)}setRenderingAutoClearDepthStencil(A,X){let s=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],N=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._renderingManager.setRenderingAutoClearDepthStencil(A,X,s,N)}getAutoClearDepthStencilSetup(A){return this._renderingManager.getAutoClearDepthStencilSetup(A)}_forceBlockMaterialDirtyMechanism(A){this._blockMaterialDirtyMechanism=A}get blockMaterialDirtyMechanism(){return this._blockMaterialDirtyMechanism}set blockMaterialDirtyMechanism(A){this._blockMaterialDirtyMechanism!==A&&(this._blockMaterialDirtyMechanism=A,A||this.markAllMaterialsAsDirty(127))}markAllMaterialsAsDirty(A,X){if(!this._blockMaterialDirtyMechanism)for(const s of this.materials)X&&!X(s)||s.Oi(A)}_loadFile(A,X,s,N,f,E,g){const K=(0,S.m)(A,X,s,N?this.offlineProvider:void 0,f,E,g);return this._activeRequests.push(K),K.onCompleteObservable.add((A=>{this._activeRequests.splice(this._activeRequests.indexOf(A),1)})),K}async _loadFileAsync(A,X,s,N,f){return await new Promise(((E,g)=>{this._loadFile(A,(A=>{E(A)}),X,s,N,((A,X)=>{g(X)}),f)}))}_requestFile(A,X,s,N,f,E,g){const K=(0,S.t)(A,X,s,N?this.offlineProvider:void 0,f,E,g);return this._activeRequests.push(K),K.onCompleteObservable.add((A=>{this._activeRequests.splice(this._activeRequests.indexOf(A),1)})),K}async _requestFileAsync(A,X,s,N,f){return await new Promise(((E,g)=>{this._requestFile(A,(A=>{E(A)}),X,s,N,(A=>{g(A)}),f)}))}_readFile(A,X,s,N,f){const E=(0,S.q)(A,X,s,N,f);return this._activeRequests.push(E),E.onCompleteObservable.add((A=>{this._activeRequests.splice(this._activeRequests.indexOf(A),1)})),E}async _readFileAsync(A,X,s){return await new Promise(((N,f)=>{this._readFile(A,(A=>{N(A)}),X,s,(A=>{f(A)}))}))}getPerfCollector(){throw(0,J.e)("performanceViewerSceneExtension")}setActiveCameraByID(A){return this.setActiveCameraById(A)}getMaterialByID(A){return this.getMaterialById(A)}getLastMaterialByID(A){return this.getLastMaterialById(A)}getTextureByUniqueID(A){return this.getTextureByUniqueId(A)}getCameraByID(A){return this.getCameraById(A)}getCameraByUniqueID(A){return this.getCameraByUniqueId(A)}getBoneByID(A){return this.getBoneById(A)}getLightByID(A){return this.getLightById(A)}getLightByUniqueID(A){return this.getLightByUniqueId(A)}getParticleSystemByID(A){return this.getParticleSystemById(A)}getGeometryByID(A){return this.getGeometryById(A)}getMeshByID(A){return this.getMeshById(A)}getMeshByUniqueID(A){return this.getMeshByUniqueId(A)}getLastMeshByID(A){return this.getLastMeshById(A)}getMeshesByID(A){return this.getMeshesById(A)}getTransformNodeByID(A){return this.getTransformNodeById(A)}getTransformNodeByUniqueID(A){return this.getTransformNodeByUniqueId(A)}getTransformNodesByID(A){return this.getTransformNodesById(A)}getNodeByID(A){return this.getNodeById(A)}getLastEntryByID(A){return this.getLastEntryById(A)}getLastSkeletonByID(A){return this.getLastSkeletonById(A)}}AA.FOGMODE_NONE=0,AA.FOGMODE_EXP=1,AA.FOGMODE_EXP2=2,AA.FOGMODE_LINEAR=3,AA.MinDeltaTime=1,AA.MaxDeltaTime=1e3,AA._OriginalDefaultMaterialFactory=AA.DefaultMaterialFactory,(0,h.f)("BABYLON.Scene",AA)}}]);