"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[2],{1976:(L,j,P)=>{P.r(j),P.d(j,{_IESTextureLoader:()=>u});var A=P(670);function R(L){return L.split(" ").filter((L=>""!==L)).map((L=>parseFloat(L)))}function o(L,j,P){for(;P.length!==j;){const j=R(L.lines[L.index++]);P.push(...j)}}function Y(L,j,P){let R=0,o=0,Y=0,u=0,a=0,D=0;for(let A=0;A<L.numberOfHorizontalAngles-1;A++)if(P<L.horizontalAngles[A+1]||A===L.numberOfHorizontalAngles-2){o=A,Y=L.horizontalAngles[A],u=L.horizontalAngles[A+1];break}for(let A=0;A<L.numberOfVerticalAngles-1;A++)if(j<L.verticalAngles[A+1]||A===L.numberOfVerticalAngles-2){R=A,a=L.verticalAngles[A],D=L.verticalAngles[A+1];break}const S=u-Y,g=D-a;if(0===g)return 0;const V=0===S?0:(P-Y)/S,N=(j-a)/g,C=0===S?o:o+1,b=(0,A.Lerp)(L.candelaValues[o][R],L.candelaValues[C][R],V),f=(0,A.Lerp)(L.candelaValues[o][R+1],L.candelaValues[C][R+1],V);return(0,A.Lerp)(b,f,N)}class u{constructor(){this.supportCascades=!1}loadCubeData(){throw".ies not supported in Cube."}loadData(L,j,P){const A=function(L){const j={lines:new TextDecoder("utf-8").decode(L).split("\n"),index:0},P={version:j.lines[0],candelaValues:[],horizontalAngles:[],verticalAngles:[],numberOfHorizontalAngles:0,numberOfVerticalAngles:0};for(j.index=1;j.lines.length>0&&!j.lines[j.index].includes("TILT=");)j.index++;j.lines[j.index].includes("INCLUDE"),j.index++;const A=R(j.lines[j.index++]);P.numberOfLights=A[0],P.lumensPerLamp=A[1],P.candelaMultiplier=A[2],P.numberOfVerticalAngles=A[3],P.numberOfHorizontalAngles=A[4],P.photometricType=A[5],P.unitsType=A[6],P.width=A[7],P.length=A[8],P.height=A[9];const u=R(j.lines[j.index++]);P.ballastFactor=u[0],P.fileGenerationType=u[1],P.inputWatts=u[2];for(let R=0;R<P.numberOfHorizontalAngles;R++)P.candelaValues[R]=[];o(j,P.numberOfVerticalAngles,P.verticalAngles),o(j,P.numberOfHorizontalAngles,P.horizontalAngles);for(let R=0;R<P.numberOfHorizontalAngles;R++)o(j,P.numberOfVerticalAngles,P.candelaValues[R]);let a=-1;for(let R=0;R<P.numberOfHorizontalAngles;R++)for(let L=0;L<P.numberOfVerticalAngles;L++)P.candelaValues[R][L]*=P.candelaValues[R][L]*P.candelaMultiplier*P.ballastFactor*P.fileGenerationType,a=Math.max(a,P.candelaValues[R][L]);if(a>0)for(let R=0;R<P.numberOfHorizontalAngles;R++)for(let L=0;L<P.numberOfVerticalAngles;L++)P.candelaValues[R][L]/=a;const D=180,S=360,g=new Float32Array(64800),V=P.horizontalAngles[0],N=P.horizontalAngles[P.numberOfHorizontalAngles-1];for(let R=0;R<64800;R++){let L=R%S;const j=Math.floor(R/S);N-V!==0&&(L<V||L>=N)&&(L%=2*N,L>N&&(L=2*N-L)),g[j+L*D]=Y(P,j,L)}return{width:180,height:1,data:g}}(new Uint8Array(L.buffer,L.byteOffset,L.byteLength));P(A.width,A.height,!1,!1,(()=>{const L=j.getEngine();j.type=1,j.format=6,j._gammaSpace=!1,L._uploadDataToTextureDirectly(j,A.data)}))}}}}]);