"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[2],{2402:(P,Q,O)=>{O.r(Q),O.d(Q,{_IESTextureLoader:()=>q});var b=O(778);function F(P){return P.split(" ").filter((P=>""!==P)).map((P=>parseFloat(P)))}function g(P,Q,O){for(;O.length!==Q;){const Q=F(P.lines[P.index++]);O.push(...Q)}}function m(P,Q,O){let F=0,g=0,m=0,q=0,R=0,X=0;for(let b=0;b<P.numberOfHorizontalAngles-1;b++)if(O<P.horizontalAngles[b+1]||b===P.numberOfHorizontalAngles-2){g=b,m=P.horizontalAngles[b],q=P.horizontalAngles[b+1];break}for(let b=0;b<P.numberOfVerticalAngles-1;b++)if(Q<P.verticalAngles[b+1]||b===P.numberOfVerticalAngles-2){F=b,R=P.verticalAngles[b],X=P.verticalAngles[b+1];break}const C=q-m,L=X-R;if(0===L)return 0;const G=0===C?0:(O-m)/C,A=(Q-R)/L,j=0===C?g:g+1,w=(0,b.p)(P.candelaValues[g][F],P.candelaValues[j][F],G),W=(0,b.p)(P.candelaValues[g][F+1],P.candelaValues[j][F+1],G);return(0,b.p)(w,W,A)}class q{constructor(){this.supportCascades=!1}loadCubeData(){throw".ies not supported in Cube."}loadData(P,Q,O){const b=function(P){const Q={lines:new TextDecoder("utf-8").decode(P).split("\n"),index:0},O={version:Q.lines[0],candelaValues:[],horizontalAngles:[],verticalAngles:[],numberOfHorizontalAngles:0,numberOfVerticalAngles:0};for(Q.index=1;Q.lines.length>0&&!Q.lines[Q.index].includes("TILT=");)Q.index++;Q.lines[Q.index].includes("INCLUDE"),Q.index++;const b=F(Q.lines[Q.index++]);O.numberOfLights=b[0],O.lumensPerLamp=b[1],O.candelaMultiplier=b[2],O.numberOfVerticalAngles=b[3],O.numberOfHorizontalAngles=b[4],O.photometricType=b[5],O.unitsType=b[6],O.width=b[7],O.length=b[8],O.height=b[9];const q=F(Q.lines[Q.index++]);O.ballastFactor=q[0],O.fileGenerationType=q[1],O.inputWatts=q[2];for(let F=0;F<O.numberOfHorizontalAngles;F++)O.candelaValues[F]=[];g(Q,O.numberOfVerticalAngles,O.verticalAngles),g(Q,O.numberOfHorizontalAngles,O.horizontalAngles);for(let F=0;F<O.numberOfHorizontalAngles;F++)g(Q,O.numberOfVerticalAngles,O.candelaValues[F]);let R=-1;for(let F=0;F<O.numberOfHorizontalAngles;F++)for(let P=0;P<O.numberOfVerticalAngles;P++)O.candelaValues[F][P]*=O.candelaValues[F][P]*O.candelaMultiplier*O.ballastFactor*O.fileGenerationType,R=Math.max(R,O.candelaValues[F][P]);if(R>0)for(let F=0;F<O.numberOfHorizontalAngles;F++)for(let P=0;P<O.numberOfVerticalAngles;P++)O.candelaValues[F][P]/=R;const X=180,C=360,L=new Float32Array(64800),G=O.horizontalAngles[0],A=O.horizontalAngles[O.numberOfHorizontalAngles-1];for(let F=0;F<64800;F++){let P=F%C;const Q=Math.floor(F/C);A-G!==0&&(P<G||P>=A)&&(P%=2*A,P>A&&(P=2*A-P)),L[Q+P*X]=m(O,Q,P)}return{width:180,height:1,data:L}}(new Uint8Array(P.buffer,P.byteOffset,P.byteLength));O(b.width,b.height,!1,!1,(()=>{const P=Q.getEngine();Q.type=1,Q.format=6,Q._gammaSpace=!1,P._uploadDataToTextureDirectly(Q,b.data)}))}}}}]);