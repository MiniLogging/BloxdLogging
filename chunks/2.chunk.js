"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[2],{2020:(c,b,A)=>{A.r(b),A.d(b,{_IESTextureLoader:()=>s});var o=A(702);function t(c){return c.split(" ").filter((c=>""!==c)).map((c=>parseFloat(c)))}function n(c,b,A){for(;A.length!==b;){const b=t(c.lines[c.index++]);A.push(...b)}}function h(c,b,A){let t=0,n=0,h=0,s=0,L=0,C=0;for(let o=0;o<c.numberOfHorizontalAngles-1;o++)if(A<c.horizontalAngles[o+1]||o===c.numberOfHorizontalAngles-2){n=o,h=c.horizontalAngles[o],s=c.horizontalAngles[o+1];break}for(let o=0;o<c.numberOfVerticalAngles-1;o++)if(b<c.verticalAngles[o+1]||o===c.numberOfVerticalAngles-2){t=o,L=c.verticalAngles[o],C=c.verticalAngles[o+1];break}const J=s-h,X=C-L;if(0===X)return 0;const R=0===J?0:(A-h)/J,N=(b-L)/X,k=0===J?n:n+1,E=(0,o.Lerp)(c.candelaValues[n][t],c.candelaValues[k][t],R),V=(0,o.Lerp)(c.candelaValues[n][t+1],c.candelaValues[k][t+1],R);return(0,o.Lerp)(E,V,N)}class s{constructor(){this.supportCascades=!1}loadCubeData(){throw".ies not supported in Cube."}loadData(c,b,A){const o=function(c){const b={lines:new TextDecoder("utf-8").decode(c).split("\n"),index:0},A={version:b.lines[0],candelaValues:[],horizontalAngles:[],verticalAngles:[],numberOfHorizontalAngles:0,numberOfVerticalAngles:0};for(b.index=1;b.lines.length>0&&!b.lines[b.index].includes("TILT=");)b.index++;b.lines[b.index].includes("INCLUDE"),b.index++;const o=t(b.lines[b.index++]);A.numberOfLights=o[0],A.lumensPerLamp=o[1],A.candelaMultiplier=o[2],A.numberOfVerticalAngles=o[3],A.numberOfHorizontalAngles=o[4],A.photometricType=o[5],A.unitsType=o[6],A.width=o[7],A.length=o[8],A.height=o[9];const s=t(b.lines[b.index++]);A.ballastFactor=s[0],A.fileGenerationType=s[1],A.inputWatts=s[2];for(let t=0;t<A.numberOfHorizontalAngles;t++)A.candelaValues[t]=[];n(b,A.numberOfVerticalAngles,A.verticalAngles),n(b,A.numberOfHorizontalAngles,A.horizontalAngles);for(let t=0;t<A.numberOfHorizontalAngles;t++)n(b,A.numberOfVerticalAngles,A.candelaValues[t]);let L=-1;for(let t=0;t<A.numberOfHorizontalAngles;t++)for(let c=0;c<A.numberOfVerticalAngles;c++)A.candelaValues[t][c]*=A.candelaValues[t][c]*A.candelaMultiplier*A.ballastFactor*A.fileGenerationType,L=Math.max(L,A.candelaValues[t][c]);if(L>0)for(let t=0;t<A.numberOfHorizontalAngles;t++)for(let c=0;c<A.numberOfVerticalAngles;c++)A.candelaValues[t][c]/=L;const C=180,J=360,X=new Float32Array(64800),R=A.horizontalAngles[0],N=A.horizontalAngles[A.numberOfHorizontalAngles-1];for(let t=0;t<64800;t++){let c=t%J;const b=Math.floor(t/J);N-R!==0&&(c<R||c>=N)&&(c%=2*N,c>N&&(c=2*N-c)),X[b+c*C]=h(A,b,c)}return{width:180,height:1,data:X}}(new Uint8Array(c.buffer,c.byteOffset,c.byteLength));A(o.width,o.height,!1,!1,(()=>{const c=b.getEngine();b.type=1,b.format=6,b._gammaSpace=!1,c._uploadDataToTextureDirectly(b,o.data)}))}}}}]);