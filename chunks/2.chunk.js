"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[2],{2284:(W,F,c)=>{c.r(F),c.d(F,{_IESTextureLoader:()=>A});var T=c(712);function Y(W){return W.split(" ").filter((W=>""!==W)).map((W=>parseFloat(W)))}function Z(W,F,c){for(;c.length!==F;){const F=Y(W.lines[W.index++]);c.push(...F)}}function w(W,F,c){let Y=0,Z=0,w=0,A=0,u=0,s=0;for(let T=0;T<W.numberOfHorizontalAngles-1;T++)if(c<W.horizontalAngles[T+1]||T===W.numberOfHorizontalAngles-2){Z=T,w=W.horizontalAngles[T],A=W.horizontalAngles[T+1];break}for(let T=0;T<W.numberOfVerticalAngles-1;T++)if(F<W.verticalAngles[T+1]||T===W.numberOfVerticalAngles-2){Y=T,u=W.verticalAngles[T],s=W.verticalAngles[T+1];break}const x=A-w,j=s-u;if(0===j)return 0;const N=0===x?0:(c-w)/x,q=(F-u)/j,y=0===x?Z:Z+1,i=(0,T.p)(W.candelaValues[Z][Y],W.candelaValues[y][Y],N),e=(0,T.p)(W.candelaValues[Z][Y+1],W.candelaValues[y][Y+1],N);return(0,T.p)(i,e,q)}class A{constructor(){this.supportCascades=!1}loadCubeData(){throw".ies not supported in Cube."}loadData(W,F,c){const T=function(W){const F={lines:new TextDecoder("utf-8").decode(W).split("\n"),index:0},c={version:F.lines[0],candelaValues:[],horizontalAngles:[],verticalAngles:[],numberOfHorizontalAngles:0,numberOfVerticalAngles:0};for(F.index=1;F.lines.length>0&&!F.lines[F.index].includes("TILT=");)F.index++;F.lines[F.index].includes("INCLUDE"),F.index++;const T=Y(F.lines[F.index++]);c.numberOfLights=T[0],c.lumensPerLamp=T[1],c.candelaMultiplier=T[2],c.numberOfVerticalAngles=T[3],c.numberOfHorizontalAngles=T[4],c.photometricType=T[5],c.unitsType=T[6],c.width=T[7],c.length=T[8],c.height=T[9];const A=Y(F.lines[F.index++]);c.ballastFactor=A[0],c.fileGenerationType=A[1],c.inputWatts=A[2];for(let Y=0;Y<c.numberOfHorizontalAngles;Y++)c.candelaValues[Y]=[];Z(F,c.numberOfVerticalAngles,c.verticalAngles),Z(F,c.numberOfHorizontalAngles,c.horizontalAngles);for(let Y=0;Y<c.numberOfHorizontalAngles;Y++)Z(F,c.numberOfVerticalAngles,c.candelaValues[Y]);let u=-1;for(let Y=0;Y<c.numberOfHorizontalAngles;Y++)for(let W=0;W<c.numberOfVerticalAngles;W++)c.candelaValues[Y][W]*=c.candelaValues[Y][W]*c.candelaMultiplier*c.ballastFactor*c.fileGenerationType,u=Math.max(u,c.candelaValues[Y][W]);if(u>0)for(let Y=0;Y<c.numberOfHorizontalAngles;Y++)for(let W=0;W<c.numberOfVerticalAngles;W++)c.candelaValues[Y][W]/=u;const s=180,x=360,j=new Float32Array(64800),N=c.horizontalAngles[0],q=c.horizontalAngles[c.numberOfHorizontalAngles-1];for(let Y=0;Y<64800;Y++){let W=Y%x;const F=Math.floor(Y/x);q-N!==0&&(W<N||W>=q)&&(W%=2*q,W>q&&(W=2*q-W)),j[F+W*s]=w(c,F,W)}return{width:180,height:1,data:j}}(new Uint8Array(W.buffer,W.byteOffset,W.byteLength));c(T.width,T.height,!1,!1,(()=>{const W=F.getEngine();F.type=1,F.format=6,F._gammaSpace=!1,W._uploadDataToTextureDirectly(F,T.data)}))}}}}]);