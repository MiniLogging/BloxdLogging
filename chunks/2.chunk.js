"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[2],{2268:(Z,U,n)=>{n.r(U),n.d(U,{_IESTextureLoader:()=>V});var i=n(718);function B(Z){return Z.split(" ").filter((Z=>""!==Z)).map((Z=>parseFloat(Z)))}function l(Z,U,n){for(;n.length!==U;){const U=B(Z.lines[Z.index++]);n.push(...U)}}function H(Z,U,n){let B=0,l=0,H=0,V=0,G=0,R=0;for(let i=0;i<Z.numberOfHorizontalAngles-1;i++)if(n<Z.horizontalAngles[i+1]||i===Z.numberOfHorizontalAngles-2){l=i,H=Z.horizontalAngles[i],V=Z.horizontalAngles[i+1];break}for(let i=0;i<Z.numberOfVerticalAngles-1;i++)if(U<Z.verticalAngles[i+1]||i===Z.numberOfVerticalAngles-2){B=i,G=Z.verticalAngles[i],R=Z.verticalAngles[i+1];break}const d=V-H,F=R-G;if(0===F)return 0;const y=0===d?0:(n-H)/d,S=(U-G)/F,q=0===d?l:l+1,c=(0,i.Lerp)(Z.candelaValues[l][B],Z.candelaValues[q][B],y),s=(0,i.Lerp)(Z.candelaValues[l][B+1],Z.candelaValues[q][B+1],y);return(0,i.Lerp)(c,s,S)}class V{constructor(){this.supportCascades=!1}loadCubeData(){throw".ies not supported in Cube."}loadData(Z,U,n){const i=function(Z){const U={lines:new TextDecoder("utf-8").decode(Z).split("\n"),index:0},n={version:U.lines[0],candelaValues:[],horizontalAngles:[],verticalAngles:[],numberOfHorizontalAngles:0,numberOfVerticalAngles:0};for(U.index=1;U.lines.length>0&&!U.lines[U.index].includes("TILT=");)U.index++;U.lines[U.index].includes("INCLUDE"),U.index++;const i=B(U.lines[U.index++]);n.numberOfLights=i[0],n.lumensPerLamp=i[1],n.candelaMultiplier=i[2],n.numberOfVerticalAngles=i[3],n.numberOfHorizontalAngles=i[4],n.photometricType=i[5],n.unitsType=i[6],n.width=i[7],n.length=i[8],n.height=i[9];const V=B(U.lines[U.index++]);n.ballastFactor=V[0],n.fileGenerationType=V[1],n.inputWatts=V[2];for(let B=0;B<n.numberOfHorizontalAngles;B++)n.candelaValues[B]=[];l(U,n.numberOfVerticalAngles,n.verticalAngles),l(U,n.numberOfHorizontalAngles,n.horizontalAngles);for(let B=0;B<n.numberOfHorizontalAngles;B++)l(U,n.numberOfVerticalAngles,n.candelaValues[B]);let G=-1;for(let B=0;B<n.numberOfHorizontalAngles;B++)for(let Z=0;Z<n.numberOfVerticalAngles;Z++)n.candelaValues[B][Z]*=n.candelaValues[B][Z]*n.candelaMultiplier*n.ballastFactor*n.fileGenerationType,G=Math.max(G,n.candelaValues[B][Z]);if(G>0)for(let B=0;B<n.numberOfHorizontalAngles;B++)for(let Z=0;Z<n.numberOfVerticalAngles;Z++)n.candelaValues[B][Z]/=G;const R=180,d=360,F=new Float32Array(64800),y=n.horizontalAngles[0],S=n.horizontalAngles[n.numberOfHorizontalAngles-1];for(let B=0;B<64800;B++){let Z=B%d;const U=Math.floor(B/d);S-y!==0&&(Z<y||Z>=S)&&(Z%=2*S,Z>S&&(Z=2*S-Z)),F[U+Z*R]=H(n,U,Z)}return{width:180,height:1,data:F}}(new Uint8Array(Z.buffer,Z.byteOffset,Z.byteLength));n(i.width,i.height,!1,!1,(()=>{const Z=U.getEngine();U.type=1,U.format=6,U._gammaSpace=!1,Z._uploadDataToTextureDirectly(U,i.data)}))}}}}]);