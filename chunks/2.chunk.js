"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[2],{2281:(n,k,T)=>{T.r(k),T.d(k,{_IESTextureLoader:()=>w});var c=T(747);function K(n){return n.split(" ").filter((n=>""!==n)).map((n=>parseFloat(n)))}function Q(n,k,T){for(;T.length!==k;){const k=K(n.lines[n.index++]);T.push(...k)}}function G(n,k,T){let K=0,Q=0,G=0,w=0,E=0,I=0;for(let c=0;c<n.numberOfHorizontalAngles-1;c++)if(T<n.horizontalAngles[c+1]||c===n.numberOfHorizontalAngles-2){Q=c,G=n.horizontalAngles[c],w=n.horizontalAngles[c+1];break}for(let c=0;c<n.numberOfVerticalAngles-1;c++)if(k<n.verticalAngles[c+1]||c===n.numberOfVerticalAngles-2){K=c,E=n.verticalAngles[c],I=n.verticalAngles[c+1];break}const S=w-G,P=I-E;if(0===P)return 0;const W=0===S?0:(T-G)/S,J=(k-E)/P,H=0===S?Q:Q+1,s=(0,c.i)(n.candelaValues[Q][K],n.candelaValues[H][K],W),b=(0,c.i)(n.candelaValues[Q][K+1],n.candelaValues[H][K+1],W);return(0,c.i)(s,b,J)}class w{constructor(){this.supportCascades=!1}loadCubeData(){throw".ies not supported in Cube."}loadData(n,k,T){const c=function(n){const k={lines:new TextDecoder("utf-8").decode(n).split("\n"),index:0},T={version:k.lines[0],candelaValues:[],horizontalAngles:[],verticalAngles:[],numberOfHorizontalAngles:0,numberOfVerticalAngles:0};for(k.index=1;k.lines.length>0&&!k.lines[k.index].includes("TILT=");)k.index++;k.lines[k.index].includes("INCLUDE"),k.index++;const c=K(k.lines[k.index++]);T.numberOfLights=c[0],T.lumensPerLamp=c[1],T.candelaMultiplier=c[2],T.numberOfVerticalAngles=c[3],T.numberOfHorizontalAngles=c[4],T.photometricType=c[5],T.unitsType=c[6],T.width=c[7],T.length=c[8],T.height=c[9];const w=K(k.lines[k.index++]);T.ballastFactor=w[0],T.fileGenerationType=w[1],T.inputWatts=w[2];for(let K=0;K<T.numberOfHorizontalAngles;K++)T.candelaValues[K]=[];Q(k,T.numberOfVerticalAngles,T.verticalAngles),Q(k,T.numberOfHorizontalAngles,T.horizontalAngles);for(let K=0;K<T.numberOfHorizontalAngles;K++)Q(k,T.numberOfVerticalAngles,T.candelaValues[K]);let E=-1;for(let K=0;K<T.numberOfHorizontalAngles;K++)for(let n=0;n<T.numberOfVerticalAngles;n++)T.candelaValues[K][n]*=T.candelaValues[K][n]*T.candelaMultiplier*T.ballastFactor*T.fileGenerationType,E=Math.max(E,T.candelaValues[K][n]);if(E>0)for(let K=0;K<T.numberOfHorizontalAngles;K++)for(let n=0;n<T.numberOfVerticalAngles;n++)T.candelaValues[K][n]/=E;const I=180,S=360,P=new Float32Array(64800),W=T.horizontalAngles[0],J=T.horizontalAngles[T.numberOfHorizontalAngles-1];for(let K=0;K<64800;K++){let n=K%S;const k=Math.floor(K/S);J-W!==0&&(n<W||n>=J)&&(n%=2*J,n>J&&(n=2*J-n)),P[k+n*I]=G(T,k,n)}return{width:180,height:1,data:P}}(new Uint8Array(n.buffer,n.byteOffset,n.byteLength));T(c.width,c.height,!1,!1,(()=>{const n=k.getEngine();k.type=1,k.format=6,k._gammaSpace=!1,n._uploadDataToTextureDirectly(k,c.data)}))}}}}]);