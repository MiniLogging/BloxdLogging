"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[2],{2342:(Q,X,C)=>{C.r(X),C.d(X,{_IESTextureLoader:()=>O});var l=C(690);function h(Q){return Q.split(" ").filter((Q=>""!==Q)).map((Q=>parseFloat(Q)))}function M(Q,X,C){for(;C.length!==X;){const X=h(Q.lines[Q.index++]);C.push(...X)}}function f(Q,X,C){let h=0,M=0,f=0,O=0,m=0,W=0;for(let l=0;l<Q.numberOfHorizontalAngles-1;l++)if(C<Q.horizontalAngles[l+1]||l===Q.numberOfHorizontalAngles-2){M=l,f=Q.horizontalAngles[l],O=Q.horizontalAngles[l+1];break}for(let l=0;l<Q.numberOfVerticalAngles-1;l++)if(X<Q.verticalAngles[l+1]||l===Q.numberOfVerticalAngles-2){h=l,m=Q.verticalAngles[l],W=Q.verticalAngles[l+1];break}const U=O-f,L=W-m;if(0===L)return 0;const w=0===U?0:(C-f)/U,i=(X-m)/L,a=0===U?M:M+1,F=(0,l.Lerp)(Q.candelaValues[M][h],Q.candelaValues[a][h],w),s=(0,l.Lerp)(Q.candelaValues[M][h+1],Q.candelaValues[a][h+1],w);return(0,l.Lerp)(F,s,i)}class O{constructor(){this.supportCascades=!1}loadCubeData(){throw".ies not supported in Cube."}loadData(Q,X,C){const l=function(Q){const X={lines:new TextDecoder("utf-8").decode(Q).split("\n"),index:0},C={version:X.lines[0],candelaValues:[],horizontalAngles:[],verticalAngles:[],numberOfHorizontalAngles:0,numberOfVerticalAngles:0};for(X.index=1;X.lines.length>0&&!X.lines[X.index].includes("TILT=");)X.index++;X.lines[X.index].includes("INCLUDE"),X.index++;const l=h(X.lines[X.index++]);C.numberOfLights=l[0],C.lumensPerLamp=l[1],C.candelaMultiplier=l[2],C.numberOfVerticalAngles=l[3],C.numberOfHorizontalAngles=l[4],C.photometricType=l[5],C.unitsType=l[6],C.width=l[7],C.length=l[8],C.height=l[9];const O=h(X.lines[X.index++]);C.ballastFactor=O[0],C.fileGenerationType=O[1],C.inputWatts=O[2];for(let h=0;h<C.numberOfHorizontalAngles;h++)C.candelaValues[h]=[];M(X,C.numberOfVerticalAngles,C.verticalAngles),M(X,C.numberOfHorizontalAngles,C.horizontalAngles);for(let h=0;h<C.numberOfHorizontalAngles;h++)M(X,C.numberOfVerticalAngles,C.candelaValues[h]);let m=-1;for(let h=0;h<C.numberOfHorizontalAngles;h++)for(let Q=0;Q<C.numberOfVerticalAngles;Q++)C.candelaValues[h][Q]*=C.candelaValues[h][Q]*C.candelaMultiplier*C.ballastFactor*C.fileGenerationType,m=Math.max(m,C.candelaValues[h][Q]);if(m>0)for(let h=0;h<C.numberOfHorizontalAngles;h++)for(let Q=0;Q<C.numberOfVerticalAngles;Q++)C.candelaValues[h][Q]/=m;const W=180,U=360,L=new Float32Array(64800),w=C.horizontalAngles[0],i=C.horizontalAngles[C.numberOfHorizontalAngles-1];for(let h=0;h<64800;h++){let Q=h%U;const X=Math.floor(h/U);i-w!==0&&(Q<w||Q>=i)&&(Q%=2*i,Q>i&&(Q=2*i-Q)),L[X+Q*W]=f(C,X,Q)}return{width:180,height:1,data:L}}(new Uint8Array(Q.buffer,Q.byteOffset,Q.byteLength));C(l.width,l.height,!1,!1,(()=>{const Q=X.getEngine();X.type=1,X.format=6,X._gammaSpace=!1,Q._uploadDataToTextureDirectly(X,l.data)}))}}}}]);