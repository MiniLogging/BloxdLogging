"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[2],{2317:(U,M,b)=>{b.r(M),b.d(M,{_IESTextureLoader:()=>y});var a=b(682);function A(U){return U.split(" ").filter((U=>""!==U)).map((U=>parseFloat(U)))}function H(U,M,b){for(;b.length!==M;){const M=A(U.lines[U.index++]);b.push(...M)}}function W(U,M,b){let A=0,H=0,W=0,y=0,O=0,e=0;for(let a=0;a<U.numberOfHorizontalAngles-1;a++)if(b<U.horizontalAngles[a+1]||a===U.numberOfHorizontalAngles-2){H=a,W=U.horizontalAngles[a],y=U.horizontalAngles[a+1];break}for(let a=0;a<U.numberOfVerticalAngles-1;a++)if(M<U.verticalAngles[a+1]||a===U.numberOfVerticalAngles-2){A=a,O=U.verticalAngles[a],e=U.verticalAngles[a+1];break}const x=y-W,P=e-O;if(0===P)return 0;const Z=0===x?0:(b-W)/x,C=(M-O)/P,r=0===x?H:H+1,B=(0,a.n)(U.candelaValues[H][A],U.candelaValues[r][A],Z),J=(0,a.n)(U.candelaValues[H][A+1],U.candelaValues[r][A+1],Z);return(0,a.n)(B,J,C)}class y{constructor(){this.supportCascades=!1}loadCubeData(){throw".ies not supported in Cube."}loadData(U,M,b){const a=function(U){const M={lines:new TextDecoder("utf-8").decode(U).split("\n"),index:0},b={version:M.lines[0],candelaValues:[],horizontalAngles:[],verticalAngles:[],numberOfHorizontalAngles:0,numberOfVerticalAngles:0};for(M.index=1;M.lines.length>0&&!M.lines[M.index].includes("TILT=");)M.index++;M.lines[M.index].includes("INCLUDE"),M.index++;const a=A(M.lines[M.index++]);b.numberOfLights=a[0],b.lumensPerLamp=a[1],b.candelaMultiplier=a[2],b.numberOfVerticalAngles=a[3],b.numberOfHorizontalAngles=a[4],b.photometricType=a[5],b.unitsType=a[6],b.width=a[7],b.length=a[8],b.height=a[9];const y=A(M.lines[M.index++]);b.ballastFactor=y[0],b.fileGenerationType=y[1],b.inputWatts=y[2];for(let A=0;A<b.numberOfHorizontalAngles;A++)b.candelaValues[A]=[];H(M,b.numberOfVerticalAngles,b.verticalAngles),H(M,b.numberOfHorizontalAngles,b.horizontalAngles);for(let A=0;A<b.numberOfHorizontalAngles;A++)H(M,b.numberOfVerticalAngles,b.candelaValues[A]);let O=-1;for(let A=0;A<b.numberOfHorizontalAngles;A++)for(let U=0;U<b.numberOfVerticalAngles;U++)b.candelaValues[A][U]*=b.candelaValues[A][U]*b.candelaMultiplier*b.ballastFactor*b.fileGenerationType,O=Math.max(O,b.candelaValues[A][U]);if(O>0)for(let A=0;A<b.numberOfHorizontalAngles;A++)for(let U=0;U<b.numberOfVerticalAngles;U++)b.candelaValues[A][U]/=O;const e=180,x=360,P=new Float32Array(64800),Z=b.horizontalAngles[0],C=b.horizontalAngles[b.numberOfHorizontalAngles-1];for(let A=0;A<64800;A++){let U=A%x;const M=Math.floor(A/x);C-Z!==0&&(U<Z||U>=C)&&(U%=2*C,U>C&&(U=2*C-U)),P[M+U*e]=W(b,M,U)}return{width:180,height:1,data:P}}(new Uint8Array(U.buffer,U.byteOffset,U.byteLength));b(a.width,a.height,!1,!1,(()=>{const U=M.getEngine();M.type=1,M.format=6,M._gammaSpace=!1,U._uploadDataToTextureDirectly(M,a.data)}))}}}}]);