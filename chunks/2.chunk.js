"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[2],{2e3:(v,d,Q)=>{Q.r(d),Q.d(d,{_IESTextureLoader:()=>F});var n=Q(664);function T(v){return v.split(" ").filter((v=>""!==v)).map((v=>parseFloat(v)))}function L(v,d,Q){for(;Q.length!==d;){const d=T(v.lines[v.index++]);Q.push(...d)}}function e(v,d,Q){let T=0,L=0,e=0,F=0,r=0,C=0;for(let n=0;n<v.numberOfHorizontalAngles-1;n++)if(Q<v.horizontalAngles[n+1]||n===v.numberOfHorizontalAngles-2){L=n,e=v.horizontalAngles[n],F=v.horizontalAngles[n+1];break}for(let n=0;n<v.numberOfVerticalAngles-1;n++)if(d<v.verticalAngles[n+1]||n===v.numberOfVerticalAngles-2){T=n,r=v.verticalAngles[n],C=v.verticalAngles[n+1];break}const u=F-e,y=C-r;if(0===y)return 0;const z=0===u?0:(Q-e)/u,B=(d-r)/y,X=0===u?L:L+1,m=(0,n.Lerp)(v.candelaValues[L][T],v.candelaValues[X][T],z),V=(0,n.Lerp)(v.candelaValues[L][T+1],v.candelaValues[X][T+1],z);return(0,n.Lerp)(m,V,B)}class F{constructor(){this.supportCascades=!1}loadCubeData(){throw".ies not supported in Cube."}loadData(v,d,Q){const n=function(v){const d={lines:new TextDecoder("utf-8").decode(v).split("\n"),index:0},Q={version:d.lines[0],candelaValues:[],horizontalAngles:[],verticalAngles:[],numberOfHorizontalAngles:0,numberOfVerticalAngles:0};for(d.index=1;d.lines.length>0&&!d.lines[d.index].includes("TILT=");)d.index++;d.lines[d.index].includes("INCLUDE"),d.index++;const n=T(d.lines[d.index++]);Q.numberOfLights=n[0],Q.lumensPerLamp=n[1],Q.candelaMultiplier=n[2],Q.numberOfVerticalAngles=n[3],Q.numberOfHorizontalAngles=n[4],Q.photometricType=n[5],Q.unitsType=n[6],Q.width=n[7],Q.length=n[8],Q.height=n[9];const F=T(d.lines[d.index++]);Q.ballastFactor=F[0],Q.fileGenerationType=F[1],Q.inputWatts=F[2];for(let T=0;T<Q.numberOfHorizontalAngles;T++)Q.candelaValues[T]=[];L(d,Q.numberOfVerticalAngles,Q.verticalAngles),L(d,Q.numberOfHorizontalAngles,Q.horizontalAngles);for(let T=0;T<Q.numberOfHorizontalAngles;T++)L(d,Q.numberOfVerticalAngles,Q.candelaValues[T]);let r=-1;for(let T=0;T<Q.numberOfHorizontalAngles;T++)for(let v=0;v<Q.numberOfVerticalAngles;v++)Q.candelaValues[T][v]*=Q.candelaValues[T][v]*Q.candelaMultiplier*Q.ballastFactor*Q.fileGenerationType,r=Math.max(r,Q.candelaValues[T][v]);if(r>0)for(let T=0;T<Q.numberOfHorizontalAngles;T++)for(let v=0;v<Q.numberOfVerticalAngles;v++)Q.candelaValues[T][v]/=r;const C=180,u=360,y=new Float32Array(64800),z=Q.horizontalAngles[0],B=Q.horizontalAngles[Q.numberOfHorizontalAngles-1];for(let T=0;T<64800;T++){let v=T%u;const d=Math.floor(T/u);B-z!==0&&(v<z||v>=B)&&(v%=2*B,v>B&&(v=2*B-v)),y[d+v*C]=e(Q,d,v)}return{width:180,height:1,data:y}}(new Uint8Array(v.buffer,v.byteOffset,v.byteLength));Q(n.width,n.height,!1,!1,(()=>{const v=d.getEngine();d.type=1,d.format=6,d._gammaSpace=!1,v._uploadDataToTextureDirectly(d,n.data)}))}}}}]);