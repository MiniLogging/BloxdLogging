"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[2],{2226:(A,X,s)=>{s.r(X),s.d(X,{_IESTextureLoader:()=>K});var N=s(696);function f(A){return A.split(" ").filter((A=>""!==A)).map((A=>parseFloat(A)))}function E(A,X,s){for(;s.length!==X;){const X=f(A.lines[A.index++]);s.push(...X)}}function g(A,X,s){let f=0,E=0,g=0,K=0,r=0,i=0;for(let N=0;N<A.numberOfHorizontalAngles-1;N++)if(s<A.horizontalAngles[N+1]||N===A.numberOfHorizontalAngles-2){E=N,g=A.horizontalAngles[N],K=A.horizontalAngles[N+1];break}for(let N=0;N<A.numberOfVerticalAngles-1;N++)if(X<A.verticalAngles[N+1]||N===A.numberOfVerticalAngles-2){f=N,r=A.verticalAngles[N],i=A.verticalAngles[N+1];break}const Y=K-g,v=i-r;if(0===v)return 0;const c=0===Y?0:(s-g)/Y,M=(X-r)/v,d=0===Y?E:E+1,Q=(0,N.l)(A.candelaValues[E][f],A.candelaValues[d][f],c),w=(0,N.l)(A.candelaValues[E][f+1],A.candelaValues[d][f+1],c);return(0,N.l)(Q,w,M)}class K{constructor(){this.supportCascades=!1}loadCubeData(){throw".ies not supported in Cube."}loadData(A,X,s){const N=function(A){const X={lines:new TextDecoder("utf-8").decode(A).split("\n"),index:0},s={version:X.lines[0],candelaValues:[],horizontalAngles:[],verticalAngles:[],numberOfHorizontalAngles:0,numberOfVerticalAngles:0};for(X.index=1;X.lines.length>0&&!X.lines[X.index].includes("TILT=");)X.index++;X.lines[X.index].includes("INCLUDE"),X.index++;const N=f(X.lines[X.index++]);s.numberOfLights=N[0],s.lumensPerLamp=N[1],s.candelaMultiplier=N[2],s.numberOfVerticalAngles=N[3],s.numberOfHorizontalAngles=N[4],s.photometricType=N[5],s.unitsType=N[6],s.width=N[7],s.length=N[8],s.height=N[9];const K=f(X.lines[X.index++]);s.ballastFactor=K[0],s.fileGenerationType=K[1],s.inputWatts=K[2];for(let f=0;f<s.numberOfHorizontalAngles;f++)s.candelaValues[f]=[];E(X,s.numberOfVerticalAngles,s.verticalAngles),E(X,s.numberOfHorizontalAngles,s.horizontalAngles);for(let f=0;f<s.numberOfHorizontalAngles;f++)E(X,s.numberOfVerticalAngles,s.candelaValues[f]);let r=-1;for(let f=0;f<s.numberOfHorizontalAngles;f++)for(let A=0;A<s.numberOfVerticalAngles;A++)s.candelaValues[f][A]*=s.candelaValues[f][A]*s.candelaMultiplier*s.ballastFactor*s.fileGenerationType,r=Math.max(r,s.candelaValues[f][A]);if(r>0)for(let f=0;f<s.numberOfHorizontalAngles;f++)for(let A=0;A<s.numberOfVerticalAngles;A++)s.candelaValues[f][A]/=r;const i=180,Y=360,v=new Float32Array(64800),c=s.horizontalAngles[0],M=s.horizontalAngles[s.numberOfHorizontalAngles-1];for(let f=0;f<64800;f++){let A=f%Y;const X=Math.floor(f/Y);M-c!==0&&(A<c||A>=M)&&(A%=2*M,A>M&&(A=2*M-A)),v[X+A*i]=g(s,X,A)}return{width:180,height:1,data:v}}(new Uint8Array(A.buffer,A.byteOffset,A.byteLength));s(N.width,N.height,!1,!1,(()=>{const A=X.getEngine();X.type=1,X.format=6,X._gammaSpace=!1,A._uploadDataToTextureDirectly(X,N.data)}))}}}}]);