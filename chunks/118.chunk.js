"use strict";(self.ra6kpa9z1sg=self.ra6kpa9z1sg||[]).push([[118],{16185:(p,b,M)=>{M.r(b),M.d(b,{FlowGraphBezierCurveEasingBlock:()=>P});var h=M(14938),Q=M(14341),mp=M(14316),y=M(12730);class P extends Q.d{constructor(p){super(p),this.config=p,this._easingFunctions={},this.mode=this.registerDataInput("mode",mp.t,0),this.controlPoint1=this.registerDataInput("controlPoint1",mp.y),this.controlPoint2=this.registerDataInput("controlPoint2",mp.y),this.easingFunction=this.registerDataOutput("easingFunction",mp.e)}_updateOutputs(p){const b=this.mode.getValue(p),M=this.controlPoint1.getValue(p),Q=this.controlPoint2.getValue(p);if(void 0===b)return;const mp=`${b}-${M.x}-${M.y}-${Q.x}-${Q.y}`;if(!this._easingFunctions[mp]){const p=new h.e(M.x,M.y,Q.x,Q.y);p.setEasingMode(b),this._easingFunctions[mp]=p}this.easingFunction.setValue(this._easingFunctions[mp],p)}getClassName(){return"FlowGraphBezierCurveEasing"}}(0,y.c)("FlowGraphBezierCurveEasing",P)}}]);